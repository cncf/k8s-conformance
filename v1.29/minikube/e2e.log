  I0605 12:51:35.961422      22 e2e.go:117] Starting e2e run "77813851-ef8b-4400-b533-03e779053b73" on Ginkgo node 1
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1717591895 - will randomize all specs

Will run 388 of 7408 specs
------------------------------
[ReportBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e_test.go:157
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:77
  Jun  5 12:51:36.076: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  Jun  5 12:51:36.077: INFO: Waiting up to 30m0s for all (but 0) nodes to be schedulable
  Jun  5 12:51:36.091: INFO: Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  Jun  5 12:51:36.092: INFO: 2 / 2 pods ready in namespace 'kube-system' in daemonset 'kindnet' (0 seconds elapsed)
  Jun  5 12:51:36.092: INFO: 2 / 2 pods ready in namespace 'kube-system' in daemonset 'kube-proxy' (0 seconds elapsed)
  Jun  5 12:51:36.092: INFO: e2e test version: v1.29.5
  Jun  5 12:51:36.093: INFO: kube-apiserver version: v1.29.5
  Jun  5 12:51:36.093: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  Jun  5 12:51:36.094: INFO: Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [0.018 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:309
  STEP: Creating a kubernetes client @ 06/05/24 12:51:36.176
  Jun  5 12:51:36.176: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename crd-publish-openapi @ 06/05/24 12:51:36.176
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 12:51:36.184
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 12:51:36.185
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 06/05/24 12:51:36.186
  Jun  5 12:51:36.187: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 06/05/24 12:51:40.92
  Jun  5 12:51:40.920: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  Jun  5 12:51:42.058: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  Jun  5 12:51:46.710: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-2645" for this suite. @ 06/05/24 12:51:46.715
• [10.544 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 06/05/24 12:51:46.72
  Jun  5 12:51:46.720: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename daemonsets @ 06/05/24 12:51:46.721
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 12:51:46.728
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 12:51:46.73
  Jun  5 12:51:46.740: INFO: Create a RollingUpdate DaemonSet
  Jun  5 12:51:46.744: INFO: Check that daemon pods launch on every node of the cluster
  Jun  5 12:51:46.747: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun  5 12:51:46.747: INFO: Node k8sconformance is running 0 daemon pod, expected 1
  Jun  5 12:51:47.754: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun  5 12:51:47.754: INFO: Node k8sconformance is running 0 daemon pod, expected 1
  Jun  5 12:51:48.753: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun  5 12:51:48.753: INFO: Node k8sconformance is running 0 daemon pod, expected 1
  Jun  5 12:51:49.752: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun  5 12:51:49.752: INFO: Node k8sconformance is running 0 daemon pod, expected 1
  Jun  5 12:51:50.756: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun  5 12:51:50.756: INFO: Node k8sconformance is running 0 daemon pod, expected 1
  Jun  5 12:51:51.750: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun  5 12:51:51.750: INFO: Node k8sconformance is running 0 daemon pod, expected 1
  Jun  5 12:51:52.754: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun  5 12:51:52.754: INFO: Node k8sconformance is running 0 daemon pod, expected 1
  Jun  5 12:51:53.754: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun  5 12:51:53.754: INFO: Node k8sconformance is running 0 daemon pod, expected 1
  Jun  5 12:51:54.754: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun  5 12:51:54.754: INFO: Node k8sconformance is running 0 daemon pod, expected 1
  Jun  5 12:51:55.749: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun  5 12:51:55.749: INFO: Node k8sconformance is running 0 daemon pod, expected 1
  Jun  5 12:51:56.748: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun  5 12:51:56.748: INFO: Node k8sconformance is running 0 daemon pod, expected 1
  Jun  5 12:51:57.754: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Jun  5 12:51:57.754: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  Jun  5 12:51:57.754: INFO: Update the DaemonSet to trigger a rollout
  Jun  5 12:51:57.764: INFO: Updating DaemonSet daemon-set
  Jun  5 12:51:59.777: INFO: Roll back the DaemonSet before rollout is complete
  Jun  5 12:51:59.785: INFO: Updating DaemonSet daemon-set
  Jun  5 12:51:59.785: INFO: Make sure DaemonSet rollback is complete
  Jun  5 12:51:59.794: INFO: Wrong image for pod: daemon-set-775bj. Expected: registry.k8s.io/e2e-test-images/httpd:2.4.38-4, got: foo:non-existent.
  Jun  5 12:51:59.794: INFO: Pod daemon-set-775bj is not available
  Jun  5 12:52:02.791: INFO: Pod daemon-set-nvxdv is not available
  STEP: Deleting DaemonSet "daemon-set" @ 06/05/24 12:52:02.799
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-3917, will wait for the garbage collector to delete the pods @ 06/05/24 12:52:02.799
  Jun  5 12:52:02.859: INFO: Deleting DaemonSet.extensions daemon-set took: 7.820672ms
  Jun  5 12:52:02.960: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.609304ms
  Jun  5 12:52:04.163: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun  5 12:52:04.163: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Jun  5 12:52:04.167: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"883"},"items":null}

  Jun  5 12:52:04.169: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"883"},"items":null}

  Jun  5 12:52:04.176: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-3917" for this suite. @ 06/05/24 12:52:04.179
• [17.464 seconds]
------------------------------
SSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:220
  STEP: Creating a kubernetes client @ 06/05/24 12:52:04.184
  Jun  5 12:52:04.184: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename emptydir @ 06/05/24 12:52:04.185
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 12:52:04.195
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 12:52:04.197
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 06/05/24 12:52:04.199
  STEP: Saw pod success @ 06/05/24 12:52:14.236
  Jun  5 12:52:14.239: INFO: Trying to get logs from node k8sconformance-m02 pod pod-31e93380-9a25-4237-b518-ea480f9a39f6 container test-container: <nil>
  STEP: delete the pod @ 06/05/24 12:52:14.257
  Jun  5 12:52:14.272: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7833" for this suite. @ 06/05/24 12:52:14.277
• [10.100 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 06/05/24 12:52:14.284
  Jun  5 12:52:14.284: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename cronjob @ 06/05/24 12:52:14.285
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 12:52:14.295
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 12:52:14.298
  STEP: Creating a ForbidConcurrent cronjob @ 06/05/24 12:52:14.301
  STEP: Ensuring a job is scheduled @ 06/05/24 12:52:14.307
  STEP: Ensuring exactly one is scheduled @ 06/05/24 12:53:00.313
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 06/05/24 12:53:00.316
  STEP: Ensuring no more jobs are scheduled @ 06/05/24 12:53:00.318
  STEP: Removing cronjob @ 06/05/24 12:58:01.057
  Jun  5 12:58:01.063: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-3149" for this suite. @ 06/05/24 12:58:01.067
• [346.058 seconds]
------------------------------
SS
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 06/05/24 12:58:01.072
  Jun  5 12:58:01.072: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename csiinlinevolumes @ 06/05/24 12:58:01.073
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 12:58:01.086
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 12:58:01.087
  STEP: Creating two CSIDrivers @ 06/05/24 12:58:01.09
  STEP: Getting "inline-driver-9fc0bf85-82aa-41fb-b140-e66af1758368" & "inline-driver-8881886e-6bb0-403f-82ce-6584a8eefc96" @ 06/05/24 12:58:01.1
  STEP: Patching the CSIDriver "inline-driver-8881886e-6bb0-403f-82ce-6584a8eefc96" @ 06/05/24 12:58:01.104
  STEP: Updating the CSIDriver "inline-driver-8881886e-6bb0-403f-82ce-6584a8eefc96" @ 06/05/24 12:58:01.11
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-7069" @ 06/05/24 12:58:01.116
  STEP: Deleting CSIDriver "inline-driver-9fc0bf85-82aa-41fb-b140-e66af1758368" @ 06/05/24 12:58:01.118
  STEP: Confirm deletion of CSIDriver "inline-driver-9fc0bf85-82aa-41fb-b140-e66af1758368" @ 06/05/24 12:58:01.122
  STEP: Deleting CSIDriver "inline-driver-8881886e-6bb0-403f-82ce-6584a8eefc96" via DeleteCollection @ 06/05/24 12:58:01.125
  STEP: Confirm deletion of CSIDriver "inline-driver-8881886e-6bb0-403f-82ce-6584a8eefc96" @ 06/05/24 12:58:01.131
  Jun  5 12:58:01.133: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-7069" for this suite. @ 06/05/24 12:58:01.137
• [0.068 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:290
  STEP: Creating a kubernetes client @ 06/05/24 12:58:01.14
  Jun  5 12:58:01.140: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename taint-single-pod @ 06/05/24 12:58:01.14
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 12:58:01.147
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 12:58:01.149
  Jun  5 12:58:01.150: INFO: Waiting up to 1m0s for all nodes to be ready
  Jun  5 12:59:01.151: INFO: Waiting for terminating namespaces to be deleted...
  Jun  5 12:59:01.156: INFO: Starting informer...
  STEP: Starting pod... @ 06/05/24 12:59:01.156
  Jun  5 12:59:01.371: INFO: Pod is running on k8sconformance-m02. Tainting Node
  STEP: Trying to apply a taint on the Node @ 06/05/24 12:59:01.371
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 06/05/24 12:59:01.385
  STEP: Waiting short time to make sure Pod is queued for deletion @ 06/05/24 12:59:01.389
  Jun  5 12:59:01.389: INFO: Pod wasn't evicted. Proceeding
  Jun  5 12:59:01.389: INFO: Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 06/05/24 12:59:01.403
  STEP: Waiting some time to make sure that toleration time passed. @ 06/05/24 12:59:01.407
  Jun  5 13:00:16.408: INFO: Pod wasn't evicted. Test successful
  Jun  5 13:00:16.408: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-5102" for this suite. @ 06/05/24 13:00:16.415
• [135.282 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 06/05/24 13:00:16.422
  Jun  5 13:00:16.422: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename secrets @ 06/05/24 13:00:16.423
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:00:16.434
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:00:16.438
  STEP: Creating secret with name secret-test-map-17ce2639-2922-4095-8bf4-590e54cfce42 @ 06/05/24 13:00:16.441
  STEP: Creating a pod to test consume secrets @ 06/05/24 13:00:16.445
  STEP: Saw pod success @ 06/05/24 13:00:18.459
  Jun  5 13:00:18.461: INFO: Trying to get logs from node k8sconformance-m02 pod pod-secrets-f192c308-7c91-42e8-9ad2-d79c4e2d71e9 container secret-volume-test: <nil>
  STEP: delete the pod @ 06/05/24 13:00:18.48
  Jun  5 13:00:18.493: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2364" for this suite. @ 06/05/24 13:00:18.496
• [2.080 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1455
  STEP: Creating a kubernetes client @ 06/05/24 13:00:18.503
  Jun  5 13:00:18.503: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename services @ 06/05/24 13:00:18.504
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:00:18.514
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:00:18.516
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-7743 @ 06/05/24 13:00:18.518
  STEP: changing the ExternalName service to type=NodePort @ 06/05/24 13:00:18.523
  STEP: creating replication controller externalname-service in namespace services-7743 @ 06/05/24 13:00:18.537
  I0605 13:00:18.545229      22 runners.go:197] Created replication controller with name: externalname-service, namespace: services-7743, replica count: 2
  I0605 13:00:21.596520      22 runners.go:197] externalname-service Pods: 2 out of 2 created, 1 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0605 13:00:24.598614      22 runners.go:197] externalname-service Pods: 2 out of 2 created, 1 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0605 13:00:27.598985      22 runners.go:197] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jun  5 13:00:27.599: INFO: Creating new exec pod
  Jun  5 13:00:30.623: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=services-7743 exec execpodk8jjv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Jun  5 13:00:30.731: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Jun  5 13:00:30.731: INFO: stdout: "externalname-service-jd2jh"
  Jun  5 13:00:30.731: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=services-7743 exec execpodk8jjv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.102.28.219 80'
  Jun  5 13:00:30.829: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.102.28.219 80\nConnection to 10.102.28.219 80 port [tcp/http] succeeded!\n"
  Jun  5 13:00:30.829: INFO: stdout: "externalname-service-jd2jh"
  Jun  5 13:00:30.829: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=services-7743 exec execpodk8jjv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.67.2 32745'
  Jun  5 13:00:30.912: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.67.2 32745\nConnection to 192.168.67.2 32745 port [tcp/*] succeeded!\n"
  Jun  5 13:00:30.912: INFO: stdout: "externalname-service-swrhs"
  Jun  5 13:00:30.912: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=services-7743 exec execpodk8jjv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.67.3 32745'
  Jun  5 13:00:31.010: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.67.3 32745\nConnection to 192.168.67.3 32745 port [tcp/*] succeeded!\n"
  Jun  5 13:00:31.010: INFO: stdout: "externalname-service-jd2jh"
  Jun  5 13:00:31.011: INFO: Cleaning up the ExternalName to NodePort test service
  Jun  5 13:00:31.026: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7743" for this suite. @ 06/05/24 13:00:31.03
• [12.531 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:183
  STEP: Creating a kubernetes client @ 06/05/24 13:00:31.034
  Jun  5 13:00:31.034: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename container-probe @ 06/05/24 13:00:31.034
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:00:31.042
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:00:31.044
  STEP: Creating pod liveness-352e95e6-d5b2-45ee-9220-a4f0ecf82994 in namespace container-probe-2387 @ 06/05/24 13:00:31.045
  STEP: checking the pod's current state and verifying that restartCount is present @ 06/05/24 13:00:33.057
  Jun  5 13:00:33.060: INFO: Initial restart count of pod liveness-352e95e6-d5b2-45ee-9220-a4f0ecf82994 is 0
  Jun  5 13:00:33.062: INFO: Get pod liveness-352e95e6-d5b2-45ee-9220-a4f0ecf82994 in namespace container-probe-2387
  Jun  5 13:00:35.069: INFO: Get pod liveness-352e95e6-d5b2-45ee-9220-a4f0ecf82994 in namespace container-probe-2387
  Jun  5 13:00:37.073: INFO: Get pod liveness-352e95e6-d5b2-45ee-9220-a4f0ecf82994 in namespace container-probe-2387
  Jun  5 13:00:39.080: INFO: Get pod liveness-352e95e6-d5b2-45ee-9220-a4f0ecf82994 in namespace container-probe-2387
  Jun  5 13:00:41.086: INFO: Get pod liveness-352e95e6-d5b2-45ee-9220-a4f0ecf82994 in namespace container-probe-2387
  Jun  5 13:00:43.092: INFO: Get pod liveness-352e95e6-d5b2-45ee-9220-a4f0ecf82994 in namespace container-probe-2387
  Jun  5 13:00:45.098: INFO: Get pod liveness-352e95e6-d5b2-45ee-9220-a4f0ecf82994 in namespace container-probe-2387
  Jun  5 13:00:47.105: INFO: Get pod liveness-352e95e6-d5b2-45ee-9220-a4f0ecf82994 in namespace container-probe-2387
  Jun  5 13:00:49.112: INFO: Get pod liveness-352e95e6-d5b2-45ee-9220-a4f0ecf82994 in namespace container-probe-2387
  Jun  5 13:00:51.119: INFO: Get pod liveness-352e95e6-d5b2-45ee-9220-a4f0ecf82994 in namespace container-probe-2387
  Jun  5 13:00:53.126: INFO: Get pod liveness-352e95e6-d5b2-45ee-9220-a4f0ecf82994 in namespace container-probe-2387
  Jun  5 13:00:55.133: INFO: Get pod liveness-352e95e6-d5b2-45ee-9220-a4f0ecf82994 in namespace container-probe-2387
  Jun  5 13:00:57.139: INFO: Get pod liveness-352e95e6-d5b2-45ee-9220-a4f0ecf82994 in namespace container-probe-2387
  Jun  5 13:00:59.146: INFO: Get pod liveness-352e95e6-d5b2-45ee-9220-a4f0ecf82994 in namespace container-probe-2387
  Jun  5 13:01:01.152: INFO: Get pod liveness-352e95e6-d5b2-45ee-9220-a4f0ecf82994 in namespace container-probe-2387
  Jun  5 13:01:03.158: INFO: Get pod liveness-352e95e6-d5b2-45ee-9220-a4f0ecf82994 in namespace container-probe-2387
  Jun  5 13:01:05.165: INFO: Get pod liveness-352e95e6-d5b2-45ee-9220-a4f0ecf82994 in namespace container-probe-2387
  Jun  5 13:01:07.171: INFO: Get pod liveness-352e95e6-d5b2-45ee-9220-a4f0ecf82994 in namespace container-probe-2387
  Jun  5 13:01:09.176: INFO: Get pod liveness-352e95e6-d5b2-45ee-9220-a4f0ecf82994 in namespace container-probe-2387
  Jun  5 13:01:11.180: INFO: Get pod liveness-352e95e6-d5b2-45ee-9220-a4f0ecf82994 in namespace container-probe-2387
  Jun  5 13:01:13.186: INFO: Get pod liveness-352e95e6-d5b2-45ee-9220-a4f0ecf82994 in namespace container-probe-2387
  Jun  5 13:01:15.193: INFO: Get pod liveness-352e95e6-d5b2-45ee-9220-a4f0ecf82994 in namespace container-probe-2387
  Jun  5 13:01:17.199: INFO: Get pod liveness-352e95e6-d5b2-45ee-9220-a4f0ecf82994 in namespace container-probe-2387
  Jun  5 13:01:19.207: INFO: Get pod liveness-352e95e6-d5b2-45ee-9220-a4f0ecf82994 in namespace container-probe-2387
  Jun  5 13:01:21.213: INFO: Get pod liveness-352e95e6-d5b2-45ee-9220-a4f0ecf82994 in namespace container-probe-2387
  Jun  5 13:01:23.219: INFO: Get pod liveness-352e95e6-d5b2-45ee-9220-a4f0ecf82994 in namespace container-probe-2387
  Jun  5 13:01:25.225: INFO: Get pod liveness-352e95e6-d5b2-45ee-9220-a4f0ecf82994 in namespace container-probe-2387
  Jun  5 13:01:27.232: INFO: Get pod liveness-352e95e6-d5b2-45ee-9220-a4f0ecf82994 in namespace container-probe-2387
  Jun  5 13:01:29.238: INFO: Get pod liveness-352e95e6-d5b2-45ee-9220-a4f0ecf82994 in namespace container-probe-2387
  Jun  5 13:01:31.243: INFO: Get pod liveness-352e95e6-d5b2-45ee-9220-a4f0ecf82994 in namespace container-probe-2387
  Jun  5 13:01:33.248: INFO: Get pod liveness-352e95e6-d5b2-45ee-9220-a4f0ecf82994 in namespace container-probe-2387
  Jun  5 13:01:35.255: INFO: Get pod liveness-352e95e6-d5b2-45ee-9220-a4f0ecf82994 in namespace container-probe-2387
  Jun  5 13:01:37.260: INFO: Get pod liveness-352e95e6-d5b2-45ee-9220-a4f0ecf82994 in namespace container-probe-2387
  Jun  5 13:01:39.268: INFO: Get pod liveness-352e95e6-d5b2-45ee-9220-a4f0ecf82994 in namespace container-probe-2387
  Jun  5 13:01:41.275: INFO: Get pod liveness-352e95e6-d5b2-45ee-9220-a4f0ecf82994 in namespace container-probe-2387
  Jun  5 13:01:43.280: INFO: Get pod liveness-352e95e6-d5b2-45ee-9220-a4f0ecf82994 in namespace container-probe-2387
  Jun  5 13:01:45.287: INFO: Get pod liveness-352e95e6-d5b2-45ee-9220-a4f0ecf82994 in namespace container-probe-2387
  Jun  5 13:01:47.292: INFO: Get pod liveness-352e95e6-d5b2-45ee-9220-a4f0ecf82994 in namespace container-probe-2387
  Jun  5 13:01:49.300: INFO: Get pod liveness-352e95e6-d5b2-45ee-9220-a4f0ecf82994 in namespace container-probe-2387
  Jun  5 13:01:51.306: INFO: Get pod liveness-352e95e6-d5b2-45ee-9220-a4f0ecf82994 in namespace container-probe-2387
  Jun  5 13:01:53.313: INFO: Get pod liveness-352e95e6-d5b2-45ee-9220-a4f0ecf82994 in namespace container-probe-2387
  Jun  5 13:01:55.319: INFO: Get pod liveness-352e95e6-d5b2-45ee-9220-a4f0ecf82994 in namespace container-probe-2387
  Jun  5 13:01:57.324: INFO: Get pod liveness-352e95e6-d5b2-45ee-9220-a4f0ecf82994 in namespace container-probe-2387
  Jun  5 13:01:59.330: INFO: Get pod liveness-352e95e6-d5b2-45ee-9220-a4f0ecf82994 in namespace container-probe-2387
  Jun  5 13:02:01.336: INFO: Get pod liveness-352e95e6-d5b2-45ee-9220-a4f0ecf82994 in namespace container-probe-2387
  Jun  5 13:02:03.342: INFO: Get pod liveness-352e95e6-d5b2-45ee-9220-a4f0ecf82994 in namespace container-probe-2387
  Jun  5 13:02:05.348: INFO: Get pod liveness-352e95e6-d5b2-45ee-9220-a4f0ecf82994 in namespace container-probe-2387
  Jun  5 13:02:07.353: INFO: Get pod liveness-352e95e6-d5b2-45ee-9220-a4f0ecf82994 in namespace container-probe-2387
  Jun  5 13:02:09.358: INFO: Get pod liveness-352e95e6-d5b2-45ee-9220-a4f0ecf82994 in namespace container-probe-2387
  Jun  5 13:02:11.362: INFO: Get pod liveness-352e95e6-d5b2-45ee-9220-a4f0ecf82994 in namespace container-probe-2387
  Jun  5 13:02:13.369: INFO: Get pod liveness-352e95e6-d5b2-45ee-9220-a4f0ecf82994 in namespace container-probe-2387
  Jun  5 13:02:15.373: INFO: Get pod liveness-352e95e6-d5b2-45ee-9220-a4f0ecf82994 in namespace container-probe-2387
  Jun  5 13:02:17.379: INFO: Get pod liveness-352e95e6-d5b2-45ee-9220-a4f0ecf82994 in namespace container-probe-2387
  Jun  5 13:02:19.386: INFO: Get pod liveness-352e95e6-d5b2-45ee-9220-a4f0ecf82994 in namespace container-probe-2387
  Jun  5 13:02:21.393: INFO: Get pod liveness-352e95e6-d5b2-45ee-9220-a4f0ecf82994 in namespace container-probe-2387
  Jun  5 13:02:23.399: INFO: Get pod liveness-352e95e6-d5b2-45ee-9220-a4f0ecf82994 in namespace container-probe-2387
  Jun  5 13:02:25.405: INFO: Get pod liveness-352e95e6-d5b2-45ee-9220-a4f0ecf82994 in namespace container-probe-2387
  Jun  5 13:02:27.411: INFO: Get pod liveness-352e95e6-d5b2-45ee-9220-a4f0ecf82994 in namespace container-probe-2387
  Jun  5 13:02:29.415: INFO: Get pod liveness-352e95e6-d5b2-45ee-9220-a4f0ecf82994 in namespace container-probe-2387
  Jun  5 13:02:31.422: INFO: Get pod liveness-352e95e6-d5b2-45ee-9220-a4f0ecf82994 in namespace container-probe-2387
  Jun  5 13:02:33.428: INFO: Get pod liveness-352e95e6-d5b2-45ee-9220-a4f0ecf82994 in namespace container-probe-2387
  Jun  5 13:02:35.434: INFO: Get pod liveness-352e95e6-d5b2-45ee-9220-a4f0ecf82994 in namespace container-probe-2387
  Jun  5 13:02:37.440: INFO: Get pod liveness-352e95e6-d5b2-45ee-9220-a4f0ecf82994 in namespace container-probe-2387
  Jun  5 13:02:39.443: INFO: Get pod liveness-352e95e6-d5b2-45ee-9220-a4f0ecf82994 in namespace container-probe-2387
  Jun  5 13:02:41.449: INFO: Get pod liveness-352e95e6-d5b2-45ee-9220-a4f0ecf82994 in namespace container-probe-2387
  Jun  5 13:02:43.455: INFO: Get pod liveness-352e95e6-d5b2-45ee-9220-a4f0ecf82994 in namespace container-probe-2387
  Jun  5 13:02:45.461: INFO: Get pod liveness-352e95e6-d5b2-45ee-9220-a4f0ecf82994 in namespace container-probe-2387
  Jun  5 13:02:47.466: INFO: Get pod liveness-352e95e6-d5b2-45ee-9220-a4f0ecf82994 in namespace container-probe-2387
  Jun  5 13:02:49.474: INFO: Get pod liveness-352e95e6-d5b2-45ee-9220-a4f0ecf82994 in namespace container-probe-2387
  Jun  5 13:02:51.479: INFO: Get pod liveness-352e95e6-d5b2-45ee-9220-a4f0ecf82994 in namespace container-probe-2387
  Jun  5 13:02:53.485: INFO: Get pod liveness-352e95e6-d5b2-45ee-9220-a4f0ecf82994 in namespace container-probe-2387
  Jun  5 13:02:55.490: INFO: Get pod liveness-352e95e6-d5b2-45ee-9220-a4f0ecf82994 in namespace container-probe-2387
  Jun  5 13:02:57.495: INFO: Get pod liveness-352e95e6-d5b2-45ee-9220-a4f0ecf82994 in namespace container-probe-2387
  Jun  5 13:02:59.501: INFO: Get pod liveness-352e95e6-d5b2-45ee-9220-a4f0ecf82994 in namespace container-probe-2387
  Jun  5 13:03:01.507: INFO: Get pod liveness-352e95e6-d5b2-45ee-9220-a4f0ecf82994 in namespace container-probe-2387
  Jun  5 13:03:03.512: INFO: Get pod liveness-352e95e6-d5b2-45ee-9220-a4f0ecf82994 in namespace container-probe-2387
  Jun  5 13:03:05.517: INFO: Get pod liveness-352e95e6-d5b2-45ee-9220-a4f0ecf82994 in namespace container-probe-2387
  Jun  5 13:03:07.524: INFO: Get pod liveness-352e95e6-d5b2-45ee-9220-a4f0ecf82994 in namespace container-probe-2387
  Jun  5 13:03:09.531: INFO: Get pod liveness-352e95e6-d5b2-45ee-9220-a4f0ecf82994 in namespace container-probe-2387
  Jun  5 13:03:11.537: INFO: Get pod liveness-352e95e6-d5b2-45ee-9220-a4f0ecf82994 in namespace container-probe-2387
  Jun  5 13:03:13.544: INFO: Get pod liveness-352e95e6-d5b2-45ee-9220-a4f0ecf82994 in namespace container-probe-2387
  Jun  5 13:03:15.550: INFO: Get pod liveness-352e95e6-d5b2-45ee-9220-a4f0ecf82994 in namespace container-probe-2387
  Jun  5 13:03:17.555: INFO: Get pod liveness-352e95e6-d5b2-45ee-9220-a4f0ecf82994 in namespace container-probe-2387
  Jun  5 13:03:19.562: INFO: Get pod liveness-352e95e6-d5b2-45ee-9220-a4f0ecf82994 in namespace container-probe-2387
  Jun  5 13:03:21.567: INFO: Get pod liveness-352e95e6-d5b2-45ee-9220-a4f0ecf82994 in namespace container-probe-2387
  Jun  5 13:03:23.574: INFO: Get pod liveness-352e95e6-d5b2-45ee-9220-a4f0ecf82994 in namespace container-probe-2387
  Jun  5 13:03:25.581: INFO: Get pod liveness-352e95e6-d5b2-45ee-9220-a4f0ecf82994 in namespace container-probe-2387
  Jun  5 13:03:27.586: INFO: Get pod liveness-352e95e6-d5b2-45ee-9220-a4f0ecf82994 in namespace container-probe-2387
  Jun  5 13:03:29.594: INFO: Get pod liveness-352e95e6-d5b2-45ee-9220-a4f0ecf82994 in namespace container-probe-2387
  Jun  5 13:03:31.601: INFO: Get pod liveness-352e95e6-d5b2-45ee-9220-a4f0ecf82994 in namespace container-probe-2387
  Jun  5 13:03:33.608: INFO: Get pod liveness-352e95e6-d5b2-45ee-9220-a4f0ecf82994 in namespace container-probe-2387
  Jun  5 13:03:35.613: INFO: Get pod liveness-352e95e6-d5b2-45ee-9220-a4f0ecf82994 in namespace container-probe-2387
  Jun  5 13:03:37.617: INFO: Get pod liveness-352e95e6-d5b2-45ee-9220-a4f0ecf82994 in namespace container-probe-2387
  Jun  5 13:03:39.623: INFO: Get pod liveness-352e95e6-d5b2-45ee-9220-a4f0ecf82994 in namespace container-probe-2387
  Jun  5 13:03:41.629: INFO: Get pod liveness-352e95e6-d5b2-45ee-9220-a4f0ecf82994 in namespace container-probe-2387
  Jun  5 13:03:43.635: INFO: Get pod liveness-352e95e6-d5b2-45ee-9220-a4f0ecf82994 in namespace container-probe-2387
  Jun  5 13:03:45.641: INFO: Get pod liveness-352e95e6-d5b2-45ee-9220-a4f0ecf82994 in namespace container-probe-2387
  Jun  5 13:03:47.645: INFO: Get pod liveness-352e95e6-d5b2-45ee-9220-a4f0ecf82994 in namespace container-probe-2387
  Jun  5 13:03:49.653: INFO: Get pod liveness-352e95e6-d5b2-45ee-9220-a4f0ecf82994 in namespace container-probe-2387
  Jun  5 13:03:51.659: INFO: Get pod liveness-352e95e6-d5b2-45ee-9220-a4f0ecf82994 in namespace container-probe-2387
  Jun  5 13:03:53.666: INFO: Get pod liveness-352e95e6-d5b2-45ee-9220-a4f0ecf82994 in namespace container-probe-2387
  Jun  5 13:03:55.672: INFO: Get pod liveness-352e95e6-d5b2-45ee-9220-a4f0ecf82994 in namespace container-probe-2387
  Jun  5 13:03:57.678: INFO: Get pod liveness-352e95e6-d5b2-45ee-9220-a4f0ecf82994 in namespace container-probe-2387
  Jun  5 13:03:59.683: INFO: Get pod liveness-352e95e6-d5b2-45ee-9220-a4f0ecf82994 in namespace container-probe-2387
  Jun  5 13:04:01.685: INFO: Get pod liveness-352e95e6-d5b2-45ee-9220-a4f0ecf82994 in namespace container-probe-2387
  Jun  5 13:04:03.690: INFO: Get pod liveness-352e95e6-d5b2-45ee-9220-a4f0ecf82994 in namespace container-probe-2387
  Jun  5 13:04:05.696: INFO: Get pod liveness-352e95e6-d5b2-45ee-9220-a4f0ecf82994 in namespace container-probe-2387
  Jun  5 13:04:07.701: INFO: Get pod liveness-352e95e6-d5b2-45ee-9220-a4f0ecf82994 in namespace container-probe-2387
  Jun  5 13:04:09.708: INFO: Get pod liveness-352e95e6-d5b2-45ee-9220-a4f0ecf82994 in namespace container-probe-2387
  Jun  5 13:04:11.714: INFO: Get pod liveness-352e95e6-d5b2-45ee-9220-a4f0ecf82994 in namespace container-probe-2387
  Jun  5 13:04:13.721: INFO: Get pod liveness-352e95e6-d5b2-45ee-9220-a4f0ecf82994 in namespace container-probe-2387
  Jun  5 13:04:15.727: INFO: Get pod liveness-352e95e6-d5b2-45ee-9220-a4f0ecf82994 in namespace container-probe-2387
  Jun  5 13:04:17.732: INFO: Get pod liveness-352e95e6-d5b2-45ee-9220-a4f0ecf82994 in namespace container-probe-2387
  Jun  5 13:04:19.738: INFO: Get pod liveness-352e95e6-d5b2-45ee-9220-a4f0ecf82994 in namespace container-probe-2387
  Jun  5 13:04:21.744: INFO: Get pod liveness-352e95e6-d5b2-45ee-9220-a4f0ecf82994 in namespace container-probe-2387
  Jun  5 13:04:23.751: INFO: Get pod liveness-352e95e6-d5b2-45ee-9220-a4f0ecf82994 in namespace container-probe-2387
  Jun  5 13:04:25.753: INFO: Get pod liveness-352e95e6-d5b2-45ee-9220-a4f0ecf82994 in namespace container-probe-2387
  Jun  5 13:04:27.756: INFO: Get pod liveness-352e95e6-d5b2-45ee-9220-a4f0ecf82994 in namespace container-probe-2387
  Jun  5 13:04:29.760: INFO: Get pod liveness-352e95e6-d5b2-45ee-9220-a4f0ecf82994 in namespace container-probe-2387
  Jun  5 13:04:31.764: INFO: Get pod liveness-352e95e6-d5b2-45ee-9220-a4f0ecf82994 in namespace container-probe-2387
  STEP: deleting the pod @ 06/05/24 13:04:33.764
  Jun  5 13:04:33.781: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2387" for this suite. @ 06/05/24 13:04:33.784
• [242.756 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:117
  STEP: Creating a kubernetes client @ 06/05/24 13:04:33.789
  Jun  5 13:04:33.789: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename field-validation @ 06/05/24 13:04:33.791
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:04:33.805
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:04:33.807
  STEP: apply creating a deployment @ 06/05/24 13:04:33.809
  Jun  5 13:04:33.816: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-1477" for this suite. @ 06/05/24 13:04:33.817
• [0.030 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:153
  STEP: Creating a kubernetes client @ 06/05/24 13:04:33.82
  Jun  5 13:04:33.820: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 06/05/24 13:04:33.821
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:04:33.83
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:04:33.831
  STEP: create the container to handle the HTTPGet hook request. @ 06/05/24 13:04:33.834
  STEP: create the pod with lifecycle hook @ 06/05/24 13:04:35.852
  STEP: delete the pod with lifecycle hook @ 06/05/24 13:04:37.869
  STEP: check prestop hook @ 06/05/24 13:04:39.889
  Jun  5 13:04:39.907: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-239" for this suite. @ 06/05/24 13:04:39.91
• [6.095 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:51
  STEP: Creating a kubernetes client @ 06/05/24 13:04:39.916
  Jun  5 13:04:39.916: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename kubelet-test @ 06/05/24 13:04:39.917
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:04:39.928
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:04:39.93
  Jun  5 13:04:41.962: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-8554" for this suite. @ 06/05/24 13:04:41.965
• [2.055 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:655
  STEP: Creating a kubernetes client @ 06/05/24 13:04:41.971
  Jun  5 13:04:41.971: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename job @ 06/05/24 13:04:41.972
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:04:41.982
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:04:41.985
  STEP: Creating a job @ 06/05/24 13:04:41.988
  STEP: Ensuring active pods == parallelism @ 06/05/24 13:04:41.994
  STEP: Orphaning one of the Job's Pods @ 06/05/24 13:04:44.001
  Jun  5 13:04:44.520: INFO: Successfully updated pod "adopt-release-7rgf2"
  STEP: Checking that the Job readopts the Pod @ 06/05/24 13:04:44.52
  STEP: Removing the labels from the Job's Pod @ 06/05/24 13:04:46.529
  Jun  5 13:04:47.042: INFO: Successfully updated pod "adopt-release-7rgf2"
  STEP: Checking that the Job releases the Pod @ 06/05/24 13:04:47.042
  Jun  5 13:04:49.053: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-1744" for this suite. @ 06/05/24 13:04:49.057
• [7.094 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:191
  STEP: Creating a kubernetes client @ 06/05/24 13:04:49.066
  Jun  5 13:04:49.066: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename dns @ 06/05/24 13:04:49.067
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:04:49.079
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:04:49.082
  STEP: Creating a test headless service @ 06/05/24 13:04:49.085
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-2014 A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-2014;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-2014 A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-2014;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-2014.svc A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-2014.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-2014.svc A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-2014.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-2014.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-2014.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-2014.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-2014.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-2014.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-2014.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-2014.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-2014.svc;check="$$(dig +notcp +noall +answer +search 52.223.96.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.96.223.52_udp@PTR;check="$$(dig +tcp +noall +answer +search 52.223.96.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.96.223.52_tcp@PTR;sleep 1; done
   @ 06/05/24 13:04:49.101
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-2014 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-2014;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-2014 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-2014;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-2014.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-2014.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-2014.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-2014.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-2014.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-2014.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-2014.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-2014.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-2014.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-2014.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-2014.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-2014.svc;check="$$(dig +notcp +noall +answer +search 52.223.96.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.96.223.52_udp@PTR;check="$$(dig +tcp +noall +answer +search 52.223.96.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.96.223.52_tcp@PTR;sleep 1; done
   @ 06/05/24 13:04:49.101
  STEP: creating a pod to probe DNS @ 06/05/24 13:04:49.101
  STEP: submitting the pod to kubernetes @ 06/05/24 13:04:49.101
  STEP: retrieving the pod @ 06/05/24 13:05:05.173
  STEP: looking for the results for each expected name from probers @ 06/05/24 13:05:05.175
  Jun  5 13:05:05.178: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-2014/dns-test-9baf98c5-96a5-4146-8139-85bdd6aad929: the server could not find the requested resource (get pods dns-test-9baf98c5-96a5-4146-8139-85bdd6aad929)
  Jun  5 13:05:05.180: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-2014/dns-test-9baf98c5-96a5-4146-8139-85bdd6aad929: the server could not find the requested resource (get pods dns-test-9baf98c5-96a5-4146-8139-85bdd6aad929)
  Jun  5 13:05:05.182: INFO: Unable to read wheezy_udp@dns-test-service.dns-2014 from pod dns-2014/dns-test-9baf98c5-96a5-4146-8139-85bdd6aad929: the server could not find the requested resource (get pods dns-test-9baf98c5-96a5-4146-8139-85bdd6aad929)
  Jun  5 13:05:05.184: INFO: Unable to read wheezy_tcp@dns-test-service.dns-2014 from pod dns-2014/dns-test-9baf98c5-96a5-4146-8139-85bdd6aad929: the server could not find the requested resource (get pods dns-test-9baf98c5-96a5-4146-8139-85bdd6aad929)
  Jun  5 13:05:05.186: INFO: Unable to read wheezy_udp@dns-test-service.dns-2014.svc from pod dns-2014/dns-test-9baf98c5-96a5-4146-8139-85bdd6aad929: the server could not find the requested resource (get pods dns-test-9baf98c5-96a5-4146-8139-85bdd6aad929)
  Jun  5 13:05:05.187: INFO: Unable to read wheezy_tcp@dns-test-service.dns-2014.svc from pod dns-2014/dns-test-9baf98c5-96a5-4146-8139-85bdd6aad929: the server could not find the requested resource (get pods dns-test-9baf98c5-96a5-4146-8139-85bdd6aad929)
  Jun  5 13:05:05.189: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-2014.svc from pod dns-2014/dns-test-9baf98c5-96a5-4146-8139-85bdd6aad929: the server could not find the requested resource (get pods dns-test-9baf98c5-96a5-4146-8139-85bdd6aad929)
  Jun  5 13:05:05.190: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-2014.svc from pod dns-2014/dns-test-9baf98c5-96a5-4146-8139-85bdd6aad929: the server could not find the requested resource (get pods dns-test-9baf98c5-96a5-4146-8139-85bdd6aad929)
  Jun  5 13:05:05.198: INFO: Unable to read jessie_udp@dns-test-service from pod dns-2014/dns-test-9baf98c5-96a5-4146-8139-85bdd6aad929: the server could not find the requested resource (get pods dns-test-9baf98c5-96a5-4146-8139-85bdd6aad929)
  Jun  5 13:05:05.199: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-2014/dns-test-9baf98c5-96a5-4146-8139-85bdd6aad929: the server could not find the requested resource (get pods dns-test-9baf98c5-96a5-4146-8139-85bdd6aad929)
  Jun  5 13:05:05.201: INFO: Unable to read jessie_udp@dns-test-service.dns-2014 from pod dns-2014/dns-test-9baf98c5-96a5-4146-8139-85bdd6aad929: the server could not find the requested resource (get pods dns-test-9baf98c5-96a5-4146-8139-85bdd6aad929)
  Jun  5 13:05:05.202: INFO: Unable to read jessie_tcp@dns-test-service.dns-2014 from pod dns-2014/dns-test-9baf98c5-96a5-4146-8139-85bdd6aad929: the server could not find the requested resource (get pods dns-test-9baf98c5-96a5-4146-8139-85bdd6aad929)
  Jun  5 13:05:05.203: INFO: Unable to read jessie_udp@dns-test-service.dns-2014.svc from pod dns-2014/dns-test-9baf98c5-96a5-4146-8139-85bdd6aad929: the server could not find the requested resource (get pods dns-test-9baf98c5-96a5-4146-8139-85bdd6aad929)
  Jun  5 13:05:05.204: INFO: Unable to read jessie_tcp@dns-test-service.dns-2014.svc from pod dns-2014/dns-test-9baf98c5-96a5-4146-8139-85bdd6aad929: the server could not find the requested resource (get pods dns-test-9baf98c5-96a5-4146-8139-85bdd6aad929)
  Jun  5 13:05:05.205: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-2014.svc from pod dns-2014/dns-test-9baf98c5-96a5-4146-8139-85bdd6aad929: the server could not find the requested resource (get pods dns-test-9baf98c5-96a5-4146-8139-85bdd6aad929)
  Jun  5 13:05:05.206: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-2014.svc from pod dns-2014/dns-test-9baf98c5-96a5-4146-8139-85bdd6aad929: the server could not find the requested resource (get pods dns-test-9baf98c5-96a5-4146-8139-85bdd6aad929)
  Jun  5 13:05:05.211: INFO: Lookups using dns-2014/dns-test-9baf98c5-96a5-4146-8139-85bdd6aad929 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-2014 wheezy_tcp@dns-test-service.dns-2014 wheezy_udp@dns-test-service.dns-2014.svc wheezy_tcp@dns-test-service.dns-2014.svc wheezy_udp@_http._tcp.dns-test-service.dns-2014.svc wheezy_tcp@_http._tcp.dns-test-service.dns-2014.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-2014 jessie_tcp@dns-test-service.dns-2014 jessie_udp@dns-test-service.dns-2014.svc jessie_tcp@dns-test-service.dns-2014.svc jessie_udp@_http._tcp.dns-test-service.dns-2014.svc jessie_tcp@_http._tcp.dns-test-service.dns-2014.svc]

  Jun  5 13:05:05.214: INFO: Pod client logs for webserver: 
  Jun  5 13:05:05.218: INFO: Pod client logs for querier: 
  Jun  5 13:05:05.222: INFO: Pod client logs for jessie-querier: 
  Jun  5 13:05:10.178: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-2014/dns-test-9baf98c5-96a5-4146-8139-85bdd6aad929: the server could not find the requested resource (get pods dns-test-9baf98c5-96a5-4146-8139-85bdd6aad929)
  Jun  5 13:05:10.179: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-2014/dns-test-9baf98c5-96a5-4146-8139-85bdd6aad929: the server could not find the requested resource (get pods dns-test-9baf98c5-96a5-4146-8139-85bdd6aad929)
  Jun  5 13:05:10.181: INFO: Unable to read wheezy_udp@dns-test-service.dns-2014 from pod dns-2014/dns-test-9baf98c5-96a5-4146-8139-85bdd6aad929: the server could not find the requested resource (get pods dns-test-9baf98c5-96a5-4146-8139-85bdd6aad929)
  Jun  5 13:05:10.182: INFO: Unable to read wheezy_tcp@dns-test-service.dns-2014 from pod dns-2014/dns-test-9baf98c5-96a5-4146-8139-85bdd6aad929: the server could not find the requested resource (get pods dns-test-9baf98c5-96a5-4146-8139-85bdd6aad929)
  Jun  5 13:05:10.184: INFO: Unable to read wheezy_udp@dns-test-service.dns-2014.svc from pod dns-2014/dns-test-9baf98c5-96a5-4146-8139-85bdd6aad929: the server could not find the requested resource (get pods dns-test-9baf98c5-96a5-4146-8139-85bdd6aad929)
  Jun  5 13:05:10.185: INFO: Unable to read wheezy_tcp@dns-test-service.dns-2014.svc from pod dns-2014/dns-test-9baf98c5-96a5-4146-8139-85bdd6aad929: the server could not find the requested resource (get pods dns-test-9baf98c5-96a5-4146-8139-85bdd6aad929)
  Jun  5 13:05:10.187: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-2014.svc from pod dns-2014/dns-test-9baf98c5-96a5-4146-8139-85bdd6aad929: the server could not find the requested resource (get pods dns-test-9baf98c5-96a5-4146-8139-85bdd6aad929)
  Jun  5 13:05:10.189: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-2014.svc from pod dns-2014/dns-test-9baf98c5-96a5-4146-8139-85bdd6aad929: the server could not find the requested resource (get pods dns-test-9baf98c5-96a5-4146-8139-85bdd6aad929)
  Jun  5 13:05:10.199: INFO: Unable to read jessie_udp@dns-test-service from pod dns-2014/dns-test-9baf98c5-96a5-4146-8139-85bdd6aad929: the server could not find the requested resource (get pods dns-test-9baf98c5-96a5-4146-8139-85bdd6aad929)
  Jun  5 13:05:10.201: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-2014/dns-test-9baf98c5-96a5-4146-8139-85bdd6aad929: the server could not find the requested resource (get pods dns-test-9baf98c5-96a5-4146-8139-85bdd6aad929)
  Jun  5 13:05:10.202: INFO: Unable to read jessie_udp@dns-test-service.dns-2014 from pod dns-2014/dns-test-9baf98c5-96a5-4146-8139-85bdd6aad929: the server could not find the requested resource (get pods dns-test-9baf98c5-96a5-4146-8139-85bdd6aad929)
  Jun  5 13:05:10.204: INFO: Unable to read jessie_tcp@dns-test-service.dns-2014 from pod dns-2014/dns-test-9baf98c5-96a5-4146-8139-85bdd6aad929: the server could not find the requested resource (get pods dns-test-9baf98c5-96a5-4146-8139-85bdd6aad929)
  Jun  5 13:05:10.206: INFO: Unable to read jessie_udp@dns-test-service.dns-2014.svc from pod dns-2014/dns-test-9baf98c5-96a5-4146-8139-85bdd6aad929: the server could not find the requested resource (get pods dns-test-9baf98c5-96a5-4146-8139-85bdd6aad929)
  Jun  5 13:05:10.207: INFO: Unable to read jessie_tcp@dns-test-service.dns-2014.svc from pod dns-2014/dns-test-9baf98c5-96a5-4146-8139-85bdd6aad929: the server could not find the requested resource (get pods dns-test-9baf98c5-96a5-4146-8139-85bdd6aad929)
  Jun  5 13:05:10.209: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-2014.svc from pod dns-2014/dns-test-9baf98c5-96a5-4146-8139-85bdd6aad929: the server could not find the requested resource (get pods dns-test-9baf98c5-96a5-4146-8139-85bdd6aad929)
  Jun  5 13:05:10.211: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-2014.svc from pod dns-2014/dns-test-9baf98c5-96a5-4146-8139-85bdd6aad929: the server could not find the requested resource (get pods dns-test-9baf98c5-96a5-4146-8139-85bdd6aad929)
  Jun  5 13:05:10.216: INFO: Lookups using dns-2014/dns-test-9baf98c5-96a5-4146-8139-85bdd6aad929 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-2014 wheezy_tcp@dns-test-service.dns-2014 wheezy_udp@dns-test-service.dns-2014.svc wheezy_tcp@dns-test-service.dns-2014.svc wheezy_udp@_http._tcp.dns-test-service.dns-2014.svc wheezy_tcp@_http._tcp.dns-test-service.dns-2014.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-2014 jessie_tcp@dns-test-service.dns-2014 jessie_udp@dns-test-service.dns-2014.svc jessie_tcp@dns-test-service.dns-2014.svc jessie_udp@_http._tcp.dns-test-service.dns-2014.svc jessie_tcp@_http._tcp.dns-test-service.dns-2014.svc]

  Jun  5 13:05:10.221: INFO: Pod client logs for webserver: 
  Jun  5 13:05:10.225: INFO: Pod client logs for querier: 
  Jun  5 13:05:10.230: INFO: Pod client logs for jessie-querier: 
  Jun  5 13:05:15.181: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-2014/dns-test-9baf98c5-96a5-4146-8139-85bdd6aad929: the server could not find the requested resource (get pods dns-test-9baf98c5-96a5-4146-8139-85bdd6aad929)
  Jun  5 13:05:15.184: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-2014/dns-test-9baf98c5-96a5-4146-8139-85bdd6aad929: the server could not find the requested resource (get pods dns-test-9baf98c5-96a5-4146-8139-85bdd6aad929)
  Jun  5 13:05:15.186: INFO: Unable to read wheezy_udp@dns-test-service.dns-2014 from pod dns-2014/dns-test-9baf98c5-96a5-4146-8139-85bdd6aad929: the server could not find the requested resource (get pods dns-test-9baf98c5-96a5-4146-8139-85bdd6aad929)
  Jun  5 13:05:15.188: INFO: Unable to read wheezy_tcp@dns-test-service.dns-2014 from pod dns-2014/dns-test-9baf98c5-96a5-4146-8139-85bdd6aad929: the server could not find the requested resource (get pods dns-test-9baf98c5-96a5-4146-8139-85bdd6aad929)
  Jun  5 13:05:15.191: INFO: Unable to read wheezy_udp@dns-test-service.dns-2014.svc from pod dns-2014/dns-test-9baf98c5-96a5-4146-8139-85bdd6aad929: the server could not find the requested resource (get pods dns-test-9baf98c5-96a5-4146-8139-85bdd6aad929)
  Jun  5 13:05:15.193: INFO: Unable to read wheezy_tcp@dns-test-service.dns-2014.svc from pod dns-2014/dns-test-9baf98c5-96a5-4146-8139-85bdd6aad929: the server could not find the requested resource (get pods dns-test-9baf98c5-96a5-4146-8139-85bdd6aad929)
  Jun  5 13:05:15.195: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-2014.svc from pod dns-2014/dns-test-9baf98c5-96a5-4146-8139-85bdd6aad929: the server could not find the requested resource (get pods dns-test-9baf98c5-96a5-4146-8139-85bdd6aad929)
  Jun  5 13:05:15.197: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-2014.svc from pod dns-2014/dns-test-9baf98c5-96a5-4146-8139-85bdd6aad929: the server could not find the requested resource (get pods dns-test-9baf98c5-96a5-4146-8139-85bdd6aad929)
  Jun  5 13:05:15.207: INFO: Unable to read jessie_udp@dns-test-service from pod dns-2014/dns-test-9baf98c5-96a5-4146-8139-85bdd6aad929: the server could not find the requested resource (get pods dns-test-9baf98c5-96a5-4146-8139-85bdd6aad929)
  Jun  5 13:05:15.209: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-2014/dns-test-9baf98c5-96a5-4146-8139-85bdd6aad929: the server could not find the requested resource (get pods dns-test-9baf98c5-96a5-4146-8139-85bdd6aad929)
  Jun  5 13:05:15.211: INFO: Unable to read jessie_udp@dns-test-service.dns-2014 from pod dns-2014/dns-test-9baf98c5-96a5-4146-8139-85bdd6aad929: the server could not find the requested resource (get pods dns-test-9baf98c5-96a5-4146-8139-85bdd6aad929)
  Jun  5 13:05:15.213: INFO: Unable to read jessie_tcp@dns-test-service.dns-2014 from pod dns-2014/dns-test-9baf98c5-96a5-4146-8139-85bdd6aad929: the server could not find the requested resource (get pods dns-test-9baf98c5-96a5-4146-8139-85bdd6aad929)
  Jun  5 13:05:15.214: INFO: Unable to read jessie_udp@dns-test-service.dns-2014.svc from pod dns-2014/dns-test-9baf98c5-96a5-4146-8139-85bdd6aad929: the server could not find the requested resource (get pods dns-test-9baf98c5-96a5-4146-8139-85bdd6aad929)
  Jun  5 13:05:15.216: INFO: Unable to read jessie_tcp@dns-test-service.dns-2014.svc from pod dns-2014/dns-test-9baf98c5-96a5-4146-8139-85bdd6aad929: the server could not find the requested resource (get pods dns-test-9baf98c5-96a5-4146-8139-85bdd6aad929)
  Jun  5 13:05:15.217: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-2014.svc from pod dns-2014/dns-test-9baf98c5-96a5-4146-8139-85bdd6aad929: the server could not find the requested resource (get pods dns-test-9baf98c5-96a5-4146-8139-85bdd6aad929)
  Jun  5 13:05:15.218: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-2014.svc from pod dns-2014/dns-test-9baf98c5-96a5-4146-8139-85bdd6aad929: the server could not find the requested resource (get pods dns-test-9baf98c5-96a5-4146-8139-85bdd6aad929)
  Jun  5 13:05:15.223: INFO: Lookups using dns-2014/dns-test-9baf98c5-96a5-4146-8139-85bdd6aad929 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-2014 wheezy_tcp@dns-test-service.dns-2014 wheezy_udp@dns-test-service.dns-2014.svc wheezy_tcp@dns-test-service.dns-2014.svc wheezy_udp@_http._tcp.dns-test-service.dns-2014.svc wheezy_tcp@_http._tcp.dns-test-service.dns-2014.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-2014 jessie_tcp@dns-test-service.dns-2014 jessie_udp@dns-test-service.dns-2014.svc jessie_tcp@dns-test-service.dns-2014.svc jessie_udp@_http._tcp.dns-test-service.dns-2014.svc jessie_tcp@_http._tcp.dns-test-service.dns-2014.svc]

  Jun  5 13:05:15.228: INFO: Pod client logs for webserver: 
  Jun  5 13:05:15.232: INFO: Pod client logs for querier: 
  Jun  5 13:05:15.236: INFO: Pod client logs for jessie-querier: 
  Jun  5 13:05:20.204: INFO: Unable to read jessie_udp@dns-test-service from pod dns-2014/dns-test-9baf98c5-96a5-4146-8139-85bdd6aad929: the server could not find the requested resource (get pods dns-test-9baf98c5-96a5-4146-8139-85bdd6aad929)
  Jun  5 13:05:20.205: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-2014/dns-test-9baf98c5-96a5-4146-8139-85bdd6aad929: the server could not find the requested resource (get pods dns-test-9baf98c5-96a5-4146-8139-85bdd6aad929)
  Jun  5 13:05:20.207: INFO: Unable to read jessie_udp@dns-test-service.dns-2014 from pod dns-2014/dns-test-9baf98c5-96a5-4146-8139-85bdd6aad929: the server could not find the requested resource (get pods dns-test-9baf98c5-96a5-4146-8139-85bdd6aad929)
  Jun  5 13:05:20.208: INFO: Unable to read jessie_tcp@dns-test-service.dns-2014 from pod dns-2014/dns-test-9baf98c5-96a5-4146-8139-85bdd6aad929: the server could not find the requested resource (get pods dns-test-9baf98c5-96a5-4146-8139-85bdd6aad929)
  Jun  5 13:05:20.210: INFO: Unable to read jessie_udp@dns-test-service.dns-2014.svc from pod dns-2014/dns-test-9baf98c5-96a5-4146-8139-85bdd6aad929: the server could not find the requested resource (get pods dns-test-9baf98c5-96a5-4146-8139-85bdd6aad929)
  Jun  5 13:05:20.212: INFO: Unable to read jessie_tcp@dns-test-service.dns-2014.svc from pod dns-2014/dns-test-9baf98c5-96a5-4146-8139-85bdd6aad929: the server could not find the requested resource (get pods dns-test-9baf98c5-96a5-4146-8139-85bdd6aad929)
  Jun  5 13:05:20.213: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-2014.svc from pod dns-2014/dns-test-9baf98c5-96a5-4146-8139-85bdd6aad929: the server could not find the requested resource (get pods dns-test-9baf98c5-96a5-4146-8139-85bdd6aad929)
  Jun  5 13:05:20.215: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-2014.svc from pod dns-2014/dns-test-9baf98c5-96a5-4146-8139-85bdd6aad929: the server could not find the requested resource (get pods dns-test-9baf98c5-96a5-4146-8139-85bdd6aad929)
  Jun  5 13:05:20.223: INFO: Lookups using dns-2014/dns-test-9baf98c5-96a5-4146-8139-85bdd6aad929 failed for: [jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-2014 jessie_tcp@dns-test-service.dns-2014 jessie_udp@dns-test-service.dns-2014.svc jessie_tcp@dns-test-service.dns-2014.svc jessie_udp@_http._tcp.dns-test-service.dns-2014.svc jessie_tcp@_http._tcp.dns-test-service.dns-2014.svc]

  Jun  5 13:05:20.230: INFO: Pod client logs for webserver: 
  Jun  5 13:05:20.233: INFO: Pod client logs for querier: 
  Jun  5 13:05:20.237: INFO: Pod client logs for jessie-querier: 
  Jun  5 13:05:25.211: INFO: DNS probes using dns-2014/dns-test-9baf98c5-96a5-4146-8139-85bdd6aad929 succeeded

  STEP: deleting the pod @ 06/05/24 13:05:25.211
  STEP: deleting the test service @ 06/05/24 13:05:25.222
  STEP: deleting the test headless service @ 06/05/24 13:05:25.242
  Jun  5 13:05:25.251: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-2014" for this suite. @ 06/05/24 13:05:25.253
• [36.191 seconds]
------------------------------
S
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:115
  STEP: Creating a kubernetes client @ 06/05/24 13:05:25.256
  Jun  5 13:05:25.256: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename var-expansion @ 06/05/24 13:05:25.257
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:05:25.265
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:05:25.266
  STEP: Creating a pod to test substitution in volume subpath @ 06/05/24 13:05:25.268
  STEP: Saw pod success @ 06/05/24 13:05:29.283
  Jun  5 13:05:29.286: INFO: Trying to get logs from node k8sconformance-m02 pod var-expansion-fdb75a8b-dc62-498a-9a00-271fd96e4beb container dapi-container: <nil>
  STEP: delete the pod @ 06/05/24 13:05:29.294
  Jun  5 13:05:29.310: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-9348" for this suite. @ 06/05/24 13:05:29.313
• [4.061 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:89
  STEP: Creating a kubernetes client @ 06/05/24 13:05:29.319
  Jun  5 13:05:29.319: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename containers @ 06/05/24 13:05:29.32
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:05:29.331
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:05:29.334
  STEP: Creating a pod to test override all @ 06/05/24 13:05:29.336
  STEP: Saw pod success @ 06/05/24 13:05:33.354
  Jun  5 13:05:33.358: INFO: Trying to get logs from node k8sconformance-m02 pod client-containers-408c9cb2-8a8b-4da4-97b9-e3acf43c1c4e container agnhost-container: <nil>
  STEP: delete the pod @ 06/05/24 13:05:33.364
  Jun  5 13:05:33.379: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-5767" for this suite. @ 06/05/24 13:05:33.382
• [4.067 seconds]
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:52
  STEP: Creating a kubernetes client @ 06/05/24 13:05:33.385
  Jun  5 13:05:33.385: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename container-runtime @ 06/05/24 13:05:33.386
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:05:33.398
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:05:33.401
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 06/05/24 13:05:33.411
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 06/05/24 13:05:51.506
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 06/05/24 13:05:51.51
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 06/05/24 13:05:51.515
  STEP: Container 'terminate-cmd-rpa': should be possible to delete @ 06/05/24 13:05:51.515
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 06/05/24 13:05:51.536
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 06/05/24 13:05:53.544
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 06/05/24 13:05:55.553
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 06/05/24 13:05:55.555
  STEP: Container 'terminate-cmd-rpof': should be possible to delete @ 06/05/24 13:05:55.555
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 06/05/24 13:05:55.566
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 06/05/24 13:05:56.57
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 06/05/24 13:05:58.577
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 06/05/24 13:05:58.583
  STEP: Container 'terminate-cmd-rpn': should be possible to delete @ 06/05/24 13:05:58.583
  Jun  5 13:05:58.596: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-835" for this suite. @ 06/05/24 13:05:58.598
• [25.216 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:177
  STEP: Creating a kubernetes client @ 06/05/24 13:05:58.602
  Jun  5 13:05:58.602: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename podtemplate @ 06/05/24 13:05:58.602
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:05:58.609
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:05:58.61
  STEP: Create a pod template @ 06/05/24 13:05:58.612
  STEP: Replace a pod template @ 06/05/24 13:05:58.615
  Jun  5 13:05:58.619: INFO: Found updated podtemplate annotation: "true"

  Jun  5 13:05:58.619: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-5272" for this suite. @ 06/05/24 13:05:58.62
• [0.021 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:263
  STEP: Creating a kubernetes client @ 06/05/24 13:05:58.623
  Jun  5 13:05:58.623: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename projected @ 06/05/24 13:05:58.624
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:05:58.632
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:05:58.635
  STEP: Creating a pod to test downward API volume plugin @ 06/05/24 13:05:58.637
  STEP: Saw pod success @ 06/05/24 13:06:02.655
  Jun  5 13:06:02.658: INFO: Trying to get logs from node k8sconformance-m02 pod downwardapi-volume-2f04581d-d60b-429f-93fe-0391e965b2bc container client-container: <nil>
  STEP: delete the pod @ 06/05/24 13:06:02.665
  Jun  5 13:06:02.680: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5899" for this suite. @ 06/05/24 13:06:02.683
• [4.063 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:175
  STEP: Creating a kubernetes client @ 06/05/24 13:06:02.687
  Jun  5 13:06:02.687: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename projected @ 06/05/24 13:06:02.687
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:06:02.697
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:06:02.699
  STEP: Creating configMap with name cm-test-opt-del-14be25fb-f642-4cc9-a651-0b0b6439dfc4 @ 06/05/24 13:06:02.704
  STEP: Creating configMap with name cm-test-opt-upd-d2b4ce93-277a-4d7d-9cdd-188f1f5e178c @ 06/05/24 13:06:02.708
  STEP: Creating the pod @ 06/05/24 13:06:02.711
  STEP: Deleting configmap cm-test-opt-del-14be25fb-f642-4cc9-a651-0b0b6439dfc4 @ 06/05/24 13:06:04.751
  STEP: Updating configmap cm-test-opt-upd-d2b4ce93-277a-4d7d-9cdd-188f1f5e178c @ 06/05/24 13:06:04.757
  STEP: Creating configMap with name cm-test-opt-create-0fb05e2b-c028-44c2-97fa-d864ec5f755f @ 06/05/24 13:06:04.763
  STEP: waiting to observe update in volume @ 06/05/24 13:06:04.767
  Jun  5 13:07:11.190: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4063" for this suite. @ 06/05/24 13:07:11.192
• [68.511 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:241
  STEP: Creating a kubernetes client @ 06/05/24 13:07:11.199
  Jun  5 13:07:11.199: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename configmap @ 06/05/24 13:07:11.2
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:07:11.213
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:07:11.215
  STEP: Creating configMap with name cm-test-opt-del-a52ec19d-bde3-4d0d-921b-5e70d1ce8c28 @ 06/05/24 13:07:11.221
  STEP: Creating configMap with name cm-test-opt-upd-7507c0cd-1b85-4d93-aedd-8b1472fd5fe4 @ 06/05/24 13:07:11.225
  STEP: Creating the pod @ 06/05/24 13:07:11.228
  STEP: Deleting configmap cm-test-opt-del-a52ec19d-bde3-4d0d-921b-5e70d1ce8c28 @ 06/05/24 13:07:13.271
  STEP: Updating configmap cm-test-opt-upd-7507c0cd-1b85-4d93-aedd-8b1472fd5fe4 @ 06/05/24 13:07:13.276
  STEP: Creating configMap with name cm-test-opt-create-39b2b582-0546-4f8b-8680-85bc71f0a02f @ 06/05/24 13:07:13.28
  STEP: waiting to observe update in volume @ 06/05/24 13:07:13.284
  Jun  5 13:08:25.756: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4105" for this suite. @ 06/05/24 13:08:25.757
• [74.562 seconds]
------------------------------
SS
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:399
  STEP: Creating a kubernetes client @ 06/05/24 13:08:25.761
  Jun  5 13:08:25.761: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename kubectl @ 06/05/24 13:08:25.762
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:08:25.769
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:08:25.771
  STEP: creating all guestbook components @ 06/05/24 13:08:25.773
  Jun  5 13:08:25.773: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  Jun  5 13:08:25.773: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=kubectl-6032 create -f -'
  Jun  5 13:08:25.852: INFO: stderr: ""
  Jun  5 13:08:25.852: INFO: stdout: "service/agnhost-replica created\n"
  Jun  5 13:08:25.852: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  Jun  5 13:08:25.852: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=kubectl-6032 create -f -'
  Jun  5 13:08:25.921: INFO: stderr: ""
  Jun  5 13:08:25.922: INFO: stdout: "service/agnhost-primary created\n"
  Jun  5 13:08:25.922: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  Jun  5 13:08:25.922: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=kubectl-6032 create -f -'
  Jun  5 13:08:25.996: INFO: stderr: ""
  Jun  5 13:08:25.996: INFO: stdout: "service/frontend created\n"
  Jun  5 13:08:25.996: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.47
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  Jun  5 13:08:25.996: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=kubectl-6032 create -f -'
  Jun  5 13:08:26.054: INFO: stderr: ""
  Jun  5 13:08:26.054: INFO: stdout: "deployment.apps/frontend created\n"
  Jun  5 13:08:26.054: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.47
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  Jun  5 13:08:26.054: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=kubectl-6032 create -f -'
  Jun  5 13:08:26.130: INFO: stderr: ""
  Jun  5 13:08:26.130: INFO: stdout: "deployment.apps/agnhost-primary created\n"
  Jun  5 13:08:26.130: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.47
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  Jun  5 13:08:26.130: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=kubectl-6032 create -f -'
  Jun  5 13:08:26.189: INFO: stderr: ""
  Jun  5 13:08:26.189: INFO: stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 06/05/24 13:08:26.189
  Jun  5 13:08:26.189: INFO: Waiting for all frontend pods to be Running.
  Jun  5 13:08:31.240: INFO: Waiting for frontend to serve content.
  Jun  5 13:08:31.248: INFO: Trying to add a new entry to the guestbook.
  Jun  5 13:08:31.257: INFO: Verifying that added entry can be retrieved.
  STEP: using delete to clean up resources @ 06/05/24 13:08:31.262
  Jun  5 13:08:31.262: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=kubectl-6032 delete --grace-period=0 --force -f -'
  Jun  5 13:08:31.310: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jun  5 13:08:31.310: INFO: stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 06/05/24 13:08:31.31
  Jun  5 13:08:31.310: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=kubectl-6032 delete --grace-period=0 --force -f -'
  Jun  5 13:08:31.360: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jun  5 13:08:31.360: INFO: stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 06/05/24 13:08:31.36
  Jun  5 13:08:31.360: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=kubectl-6032 delete --grace-period=0 --force -f -'
  Jun  5 13:08:31.403: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jun  5 13:08:31.403: INFO: stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 06/05/24 13:08:31.403
  Jun  5 13:08:31.403: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=kubectl-6032 delete --grace-period=0 --force -f -'
  Jun  5 13:08:31.443: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jun  5 13:08:31.443: INFO: stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 06/05/24 13:08:31.443
  Jun  5 13:08:31.443: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=kubectl-6032 delete --grace-period=0 --force -f -'
  Jun  5 13:08:31.501: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jun  5 13:08:31.501: INFO: stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 06/05/24 13:08:31.501
  Jun  5 13:08:31.501: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=kubectl-6032 delete --grace-period=0 --force -f -'
  Jun  5 13:08:31.551: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jun  5 13:08:31.551: INFO: stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  Jun  5 13:08:31.551: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6032" for this suite. @ 06/05/24 13:08:31.554
• [5.797 seconds]
------------------------------
SS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:87
  STEP: Creating a kubernetes client @ 06/05/24 13:08:31.558
  Jun  5 13:08:31.558: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename disruption @ 06/05/24 13:08:31.558
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:08:31.569
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:08:31.571
  STEP: Creating a kubernetes client @ 06/05/24 13:08:31.572
  Jun  5 13:08:31.572: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename disruption-2 @ 06/05/24 13:08:31.573
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:08:31.583
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:08:31.585
  STEP: Waiting for the pdb to be processed @ 06/05/24 13:08:31.592
  STEP: Waiting for the pdb to be processed @ 06/05/24 13:08:33.602
  STEP: Waiting for the pdb to be processed @ 06/05/24 13:08:33.61
  STEP: listing a collection of PDBs across all namespaces @ 06/05/24 13:08:35.614
  STEP: listing a collection of PDBs in namespace disruption-8602 @ 06/05/24 13:08:35.617
  STEP: deleting a collection of PDBs @ 06/05/24 13:08:35.619
  STEP: Waiting for the PDB collection to be deleted @ 06/05/24 13:08:35.627
  Jun  5 13:08:35.630: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-3274" for this suite. @ 06/05/24 13:08:35.633
  Jun  5 13:08:35.637: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-8602" for this suite. @ 06/05/24 13:08:35.64
• [4.086 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:277
  STEP: Creating a kubernetes client @ 06/05/24 13:08:35.644
  Jun  5 13:08:35.644: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename svcaccounts @ 06/05/24 13:08:35.645
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:08:35.656
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:08:35.658
  STEP: Creating a pod to test service account token:  @ 06/05/24 13:08:35.66
  STEP: Saw pod success @ 06/05/24 13:08:39.681
  Jun  5 13:08:39.683: INFO: Trying to get logs from node k8sconformance-m02 pod test-pod-787cab4b-0f09-47e2-9892-869218f97598 container agnhost-container: <nil>
  STEP: delete the pod @ 06/05/24 13:08:39.689
  Jun  5 13:08:39.701: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-1447" for this suite. @ 06/05/24 13:08:39.703
• [4.063 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:286
  STEP: Creating a kubernetes client @ 06/05/24 13:08:39.707
  Jun  5 13:08:39.707: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename dns @ 06/05/24 13:08:39.708
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:08:39.717
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:08:39.72
  STEP: Creating a test headless service @ 06/05/24 13:08:39.721
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-9077.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-querier-2.dns-test-service-2.dns-9077.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-9077.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-querier-2.dns-test-service-2.dns-9077.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-9077.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service-2.dns-9077.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-9077.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service-2.dns-9077.svc.cluster.local;sleep 1; done
   @ 06/05/24 13:08:39.725
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-9077.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-9077.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-9077.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-9077.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-9077.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-9077.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-9077.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-9077.svc.cluster.local;sleep 1; done
   @ 06/05/24 13:08:39.725
  STEP: creating a pod to probe DNS @ 06/05/24 13:08:39.725
  STEP: submitting the pod to kubernetes @ 06/05/24 13:08:39.725
  STEP: retrieving the pod @ 06/05/24 13:08:41.737
  STEP: looking for the results for each expected name from probers @ 06/05/24 13:08:41.739
  Jun  5 13:08:41.741: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-9077.svc.cluster.local from pod dns-9077/dns-test-f347ec5c-59a7-4e70-b317-db3bd5e5415d: the server could not find the requested resource (get pods dns-test-f347ec5c-59a7-4e70-b317-db3bd5e5415d)
  Jun  5 13:08:41.743: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-9077.svc.cluster.local from pod dns-9077/dns-test-f347ec5c-59a7-4e70-b317-db3bd5e5415d: the server could not find the requested resource (get pods dns-test-f347ec5c-59a7-4e70-b317-db3bd5e5415d)
  Jun  5 13:08:41.745: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-9077.svc.cluster.local from pod dns-9077/dns-test-f347ec5c-59a7-4e70-b317-db3bd5e5415d: the server could not find the requested resource (get pods dns-test-f347ec5c-59a7-4e70-b317-db3bd5e5415d)
  Jun  5 13:08:41.747: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-9077.svc.cluster.local from pod dns-9077/dns-test-f347ec5c-59a7-4e70-b317-db3bd5e5415d: the server could not find the requested resource (get pods dns-test-f347ec5c-59a7-4e70-b317-db3bd5e5415d)
  Jun  5 13:08:41.749: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-9077.svc.cluster.local from pod dns-9077/dns-test-f347ec5c-59a7-4e70-b317-db3bd5e5415d: the server could not find the requested resource (get pods dns-test-f347ec5c-59a7-4e70-b317-db3bd5e5415d)
  Jun  5 13:08:41.750: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-9077.svc.cluster.local from pod dns-9077/dns-test-f347ec5c-59a7-4e70-b317-db3bd5e5415d: the server could not find the requested resource (get pods dns-test-f347ec5c-59a7-4e70-b317-db3bd5e5415d)
  Jun  5 13:08:41.752: INFO: Unable to read jessie_udp@dns-test-service-2.dns-9077.svc.cluster.local from pod dns-9077/dns-test-f347ec5c-59a7-4e70-b317-db3bd5e5415d: the server could not find the requested resource (get pods dns-test-f347ec5c-59a7-4e70-b317-db3bd5e5415d)
  Jun  5 13:08:41.753: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-9077.svc.cluster.local from pod dns-9077/dns-test-f347ec5c-59a7-4e70-b317-db3bd5e5415d: the server could not find the requested resource (get pods dns-test-f347ec5c-59a7-4e70-b317-db3bd5e5415d)
  Jun  5 13:08:41.753: INFO: Lookups using dns-9077/dns-test-f347ec5c-59a7-4e70-b317-db3bd5e5415d failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-9077.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-9077.svc.cluster.local wheezy_udp@dns-test-service-2.dns-9077.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-9077.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-9077.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-9077.svc.cluster.local jessie_udp@dns-test-service-2.dns-9077.svc.cluster.local jessie_tcp@dns-test-service-2.dns-9077.svc.cluster.local]

  Jun  5 13:08:41.757: INFO: Pod client logs for webserver: 
  Jun  5 13:08:41.762: INFO: Pod client logs for querier: 
  Jun  5 13:08:41.766: INFO: Pod client logs for jessie-querier: 
  Jun  5 13:08:46.745: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-9077.svc.cluster.local from pod dns-9077/dns-test-f347ec5c-59a7-4e70-b317-db3bd5e5415d: the server could not find the requested resource (get pods dns-test-f347ec5c-59a7-4e70-b317-db3bd5e5415d)
  Jun  5 13:08:46.749: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-9077.svc.cluster.local from pod dns-9077/dns-test-f347ec5c-59a7-4e70-b317-db3bd5e5415d: the server could not find the requested resource (get pods dns-test-f347ec5c-59a7-4e70-b317-db3bd5e5415d)
  Jun  5 13:08:46.751: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-9077.svc.cluster.local from pod dns-9077/dns-test-f347ec5c-59a7-4e70-b317-db3bd5e5415d: the server could not find the requested resource (get pods dns-test-f347ec5c-59a7-4e70-b317-db3bd5e5415d)
  Jun  5 13:08:46.753: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-9077.svc.cluster.local from pod dns-9077/dns-test-f347ec5c-59a7-4e70-b317-db3bd5e5415d: the server could not find the requested resource (get pods dns-test-f347ec5c-59a7-4e70-b317-db3bd5e5415d)
  Jun  5 13:08:46.756: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-9077.svc.cluster.local from pod dns-9077/dns-test-f347ec5c-59a7-4e70-b317-db3bd5e5415d: the server could not find the requested resource (get pods dns-test-f347ec5c-59a7-4e70-b317-db3bd5e5415d)
  Jun  5 13:08:46.758: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-9077.svc.cluster.local from pod dns-9077/dns-test-f347ec5c-59a7-4e70-b317-db3bd5e5415d: the server could not find the requested resource (get pods dns-test-f347ec5c-59a7-4e70-b317-db3bd5e5415d)
  Jun  5 13:08:46.759: INFO: Unable to read jessie_udp@dns-test-service-2.dns-9077.svc.cluster.local from pod dns-9077/dns-test-f347ec5c-59a7-4e70-b317-db3bd5e5415d: the server could not find the requested resource (get pods dns-test-f347ec5c-59a7-4e70-b317-db3bd5e5415d)
  Jun  5 13:08:46.762: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-9077.svc.cluster.local from pod dns-9077/dns-test-f347ec5c-59a7-4e70-b317-db3bd5e5415d: the server could not find the requested resource (get pods dns-test-f347ec5c-59a7-4e70-b317-db3bd5e5415d)
  Jun  5 13:08:46.762: INFO: Lookups using dns-9077/dns-test-f347ec5c-59a7-4e70-b317-db3bd5e5415d failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-9077.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-9077.svc.cluster.local wheezy_udp@dns-test-service-2.dns-9077.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-9077.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-9077.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-9077.svc.cluster.local jessie_udp@dns-test-service-2.dns-9077.svc.cluster.local jessie_tcp@dns-test-service-2.dns-9077.svc.cluster.local]

  Jun  5 13:08:46.768: INFO: Pod client logs for webserver: 
  Jun  5 13:08:46.774: INFO: Pod client logs for querier: 
  Jun  5 13:08:46.781: INFO: Pod client logs for jessie-querier: 
  Jun  5 13:08:51.746: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-9077.svc.cluster.local from pod dns-9077/dns-test-f347ec5c-59a7-4e70-b317-db3bd5e5415d: the server could not find the requested resource (get pods dns-test-f347ec5c-59a7-4e70-b317-db3bd5e5415d)
  Jun  5 13:08:51.749: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-9077.svc.cluster.local from pod dns-9077/dns-test-f347ec5c-59a7-4e70-b317-db3bd5e5415d: the server could not find the requested resource (get pods dns-test-f347ec5c-59a7-4e70-b317-db3bd5e5415d)
  Jun  5 13:08:51.751: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-9077.svc.cluster.local from pod dns-9077/dns-test-f347ec5c-59a7-4e70-b317-db3bd5e5415d: the server could not find the requested resource (get pods dns-test-f347ec5c-59a7-4e70-b317-db3bd5e5415d)
  Jun  5 13:08:51.754: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-9077.svc.cluster.local from pod dns-9077/dns-test-f347ec5c-59a7-4e70-b317-db3bd5e5415d: the server could not find the requested resource (get pods dns-test-f347ec5c-59a7-4e70-b317-db3bd5e5415d)
  Jun  5 13:08:51.757: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-9077.svc.cluster.local from pod dns-9077/dns-test-f347ec5c-59a7-4e70-b317-db3bd5e5415d: the server could not find the requested resource (get pods dns-test-f347ec5c-59a7-4e70-b317-db3bd5e5415d)
  Jun  5 13:08:51.759: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-9077.svc.cluster.local from pod dns-9077/dns-test-f347ec5c-59a7-4e70-b317-db3bd5e5415d: the server could not find the requested resource (get pods dns-test-f347ec5c-59a7-4e70-b317-db3bd5e5415d)
  Jun  5 13:08:51.762: INFO: Unable to read jessie_udp@dns-test-service-2.dns-9077.svc.cluster.local from pod dns-9077/dns-test-f347ec5c-59a7-4e70-b317-db3bd5e5415d: the server could not find the requested resource (get pods dns-test-f347ec5c-59a7-4e70-b317-db3bd5e5415d)
  Jun  5 13:08:51.764: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-9077.svc.cluster.local from pod dns-9077/dns-test-f347ec5c-59a7-4e70-b317-db3bd5e5415d: the server could not find the requested resource (get pods dns-test-f347ec5c-59a7-4e70-b317-db3bd5e5415d)
  Jun  5 13:08:51.764: INFO: Lookups using dns-9077/dns-test-f347ec5c-59a7-4e70-b317-db3bd5e5415d failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-9077.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-9077.svc.cluster.local wheezy_udp@dns-test-service-2.dns-9077.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-9077.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-9077.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-9077.svc.cluster.local jessie_udp@dns-test-service-2.dns-9077.svc.cluster.local jessie_tcp@dns-test-service-2.dns-9077.svc.cluster.local]

  Jun  5 13:08:51.771: INFO: Pod client logs for webserver: 
  Jun  5 13:08:51.778: INFO: Pod client logs for querier: 
  Jun  5 13:08:51.785: INFO: Pod client logs for jessie-querier: 
  Jun  5 13:08:56.745: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-9077.svc.cluster.local from pod dns-9077/dns-test-f347ec5c-59a7-4e70-b317-db3bd5e5415d: the server could not find the requested resource (get pods dns-test-f347ec5c-59a7-4e70-b317-db3bd5e5415d)
  Jun  5 13:08:56.748: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-9077.svc.cluster.local from pod dns-9077/dns-test-f347ec5c-59a7-4e70-b317-db3bd5e5415d: the server could not find the requested resource (get pods dns-test-f347ec5c-59a7-4e70-b317-db3bd5e5415d)
  Jun  5 13:08:56.750: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-9077.svc.cluster.local from pod dns-9077/dns-test-f347ec5c-59a7-4e70-b317-db3bd5e5415d: the server could not find the requested resource (get pods dns-test-f347ec5c-59a7-4e70-b317-db3bd5e5415d)
  Jun  5 13:08:56.752: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-9077.svc.cluster.local from pod dns-9077/dns-test-f347ec5c-59a7-4e70-b317-db3bd5e5415d: the server could not find the requested resource (get pods dns-test-f347ec5c-59a7-4e70-b317-db3bd5e5415d)
  Jun  5 13:08:56.754: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-9077.svc.cluster.local from pod dns-9077/dns-test-f347ec5c-59a7-4e70-b317-db3bd5e5415d: the server could not find the requested resource (get pods dns-test-f347ec5c-59a7-4e70-b317-db3bd5e5415d)
  Jun  5 13:08:56.756: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-9077.svc.cluster.local from pod dns-9077/dns-test-f347ec5c-59a7-4e70-b317-db3bd5e5415d: the server could not find the requested resource (get pods dns-test-f347ec5c-59a7-4e70-b317-db3bd5e5415d)
  Jun  5 13:08:56.758: INFO: Unable to read jessie_udp@dns-test-service-2.dns-9077.svc.cluster.local from pod dns-9077/dns-test-f347ec5c-59a7-4e70-b317-db3bd5e5415d: the server could not find the requested resource (get pods dns-test-f347ec5c-59a7-4e70-b317-db3bd5e5415d)
  Jun  5 13:08:56.759: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-9077.svc.cluster.local from pod dns-9077/dns-test-f347ec5c-59a7-4e70-b317-db3bd5e5415d: the server could not find the requested resource (get pods dns-test-f347ec5c-59a7-4e70-b317-db3bd5e5415d)
  Jun  5 13:08:56.759: INFO: Lookups using dns-9077/dns-test-f347ec5c-59a7-4e70-b317-db3bd5e5415d failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-9077.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-9077.svc.cluster.local wheezy_udp@dns-test-service-2.dns-9077.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-9077.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-9077.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-9077.svc.cluster.local jessie_udp@dns-test-service-2.dns-9077.svc.cluster.local jessie_tcp@dns-test-service-2.dns-9077.svc.cluster.local]

  Jun  5 13:08:56.765: INFO: Pod client logs for webserver: 
  Jun  5 13:08:56.771: INFO: Pod client logs for querier: 
  Jun  5 13:08:56.776: INFO: Pod client logs for jessie-querier: 
  Jun  5 13:09:01.744: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-9077.svc.cluster.local from pod dns-9077/dns-test-f347ec5c-59a7-4e70-b317-db3bd5e5415d: the server could not find the requested resource (get pods dns-test-f347ec5c-59a7-4e70-b317-db3bd5e5415d)
  Jun  5 13:09:01.748: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-9077.svc.cluster.local from pod dns-9077/dns-test-f347ec5c-59a7-4e70-b317-db3bd5e5415d: the server could not find the requested resource (get pods dns-test-f347ec5c-59a7-4e70-b317-db3bd5e5415d)
  Jun  5 13:09:01.750: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-9077.svc.cluster.local from pod dns-9077/dns-test-f347ec5c-59a7-4e70-b317-db3bd5e5415d: the server could not find the requested resource (get pods dns-test-f347ec5c-59a7-4e70-b317-db3bd5e5415d)
  Jun  5 13:09:01.753: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-9077.svc.cluster.local from pod dns-9077/dns-test-f347ec5c-59a7-4e70-b317-db3bd5e5415d: the server could not find the requested resource (get pods dns-test-f347ec5c-59a7-4e70-b317-db3bd5e5415d)
  Jun  5 13:09:01.756: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-9077.svc.cluster.local from pod dns-9077/dns-test-f347ec5c-59a7-4e70-b317-db3bd5e5415d: the server could not find the requested resource (get pods dns-test-f347ec5c-59a7-4e70-b317-db3bd5e5415d)
  Jun  5 13:09:01.758: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-9077.svc.cluster.local from pod dns-9077/dns-test-f347ec5c-59a7-4e70-b317-db3bd5e5415d: the server could not find the requested resource (get pods dns-test-f347ec5c-59a7-4e70-b317-db3bd5e5415d)
  Jun  5 13:09:01.760: INFO: Unable to read jessie_udp@dns-test-service-2.dns-9077.svc.cluster.local from pod dns-9077/dns-test-f347ec5c-59a7-4e70-b317-db3bd5e5415d: the server could not find the requested resource (get pods dns-test-f347ec5c-59a7-4e70-b317-db3bd5e5415d)
  Jun  5 13:09:01.762: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-9077.svc.cluster.local from pod dns-9077/dns-test-f347ec5c-59a7-4e70-b317-db3bd5e5415d: the server could not find the requested resource (get pods dns-test-f347ec5c-59a7-4e70-b317-db3bd5e5415d)
  Jun  5 13:09:01.762: INFO: Lookups using dns-9077/dns-test-f347ec5c-59a7-4e70-b317-db3bd5e5415d failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-9077.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-9077.svc.cluster.local wheezy_udp@dns-test-service-2.dns-9077.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-9077.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-9077.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-9077.svc.cluster.local jessie_udp@dns-test-service-2.dns-9077.svc.cluster.local jessie_tcp@dns-test-service-2.dns-9077.svc.cluster.local]

  Jun  5 13:09:01.769: INFO: Pod client logs for webserver: 
  Jun  5 13:09:01.776: INFO: Pod client logs for querier: 
  Jun  5 13:09:01.782: INFO: Pod client logs for jessie-querier: 
  Jun  5 13:09:06.746: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-9077.svc.cluster.local from pod dns-9077/dns-test-f347ec5c-59a7-4e70-b317-db3bd5e5415d: the server could not find the requested resource (get pods dns-test-f347ec5c-59a7-4e70-b317-db3bd5e5415d)
  Jun  5 13:09:06.749: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-9077.svc.cluster.local from pod dns-9077/dns-test-f347ec5c-59a7-4e70-b317-db3bd5e5415d: the server could not find the requested resource (get pods dns-test-f347ec5c-59a7-4e70-b317-db3bd5e5415d)
  Jun  5 13:09:06.752: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-9077.svc.cluster.local from pod dns-9077/dns-test-f347ec5c-59a7-4e70-b317-db3bd5e5415d: the server could not find the requested resource (get pods dns-test-f347ec5c-59a7-4e70-b317-db3bd5e5415d)
  Jun  5 13:09:06.754: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-9077.svc.cluster.local from pod dns-9077/dns-test-f347ec5c-59a7-4e70-b317-db3bd5e5415d: the server could not find the requested resource (get pods dns-test-f347ec5c-59a7-4e70-b317-db3bd5e5415d)
  Jun  5 13:09:06.756: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-9077.svc.cluster.local from pod dns-9077/dns-test-f347ec5c-59a7-4e70-b317-db3bd5e5415d: the server could not find the requested resource (get pods dns-test-f347ec5c-59a7-4e70-b317-db3bd5e5415d)
  Jun  5 13:09:06.758: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-9077.svc.cluster.local from pod dns-9077/dns-test-f347ec5c-59a7-4e70-b317-db3bd5e5415d: the server could not find the requested resource (get pods dns-test-f347ec5c-59a7-4e70-b317-db3bd5e5415d)
  Jun  5 13:09:06.760: INFO: Unable to read jessie_udp@dns-test-service-2.dns-9077.svc.cluster.local from pod dns-9077/dns-test-f347ec5c-59a7-4e70-b317-db3bd5e5415d: the server could not find the requested resource (get pods dns-test-f347ec5c-59a7-4e70-b317-db3bd5e5415d)
  Jun  5 13:09:06.763: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-9077.svc.cluster.local from pod dns-9077/dns-test-f347ec5c-59a7-4e70-b317-db3bd5e5415d: the server could not find the requested resource (get pods dns-test-f347ec5c-59a7-4e70-b317-db3bd5e5415d)
  Jun  5 13:09:06.763: INFO: Lookups using dns-9077/dns-test-f347ec5c-59a7-4e70-b317-db3bd5e5415d failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-9077.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-9077.svc.cluster.local wheezy_udp@dns-test-service-2.dns-9077.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-9077.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-9077.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-9077.svc.cluster.local jessie_udp@dns-test-service-2.dns-9077.svc.cluster.local jessie_tcp@dns-test-service-2.dns-9077.svc.cluster.local]

  Jun  5 13:09:06.770: INFO: Pod client logs for webserver: 
  Jun  5 13:09:06.776: INFO: Pod client logs for querier: 
  Jun  5 13:09:06.782: INFO: Pod client logs for jessie-querier: 
  Jun  5 13:09:11.761: INFO: DNS probes using dns-9077/dns-test-f347ec5c-59a7-4e70-b317-db3bd5e5415d succeeded

  STEP: deleting the pod @ 06/05/24 13:09:11.761
  STEP: deleting the test headless service @ 06/05/24 13:09:11.772
  Jun  5 13:09:11.785: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-9077" for this suite. @ 06/05/24 13:09:11.791
• [32.107 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support PriorityLevelConfiguration API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:514
  STEP: Creating a kubernetes client @ 06/05/24 13:09:11.815
  Jun  5 13:09:11.815: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename apf @ 06/05/24 13:09:11.816
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:09:11.823
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:09:11.825
  STEP: getting /apis @ 06/05/24 13:09:11.826
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 06/05/24 13:09:11.828
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 06/05/24 13:09:11.828
  STEP: creating @ 06/05/24 13:09:11.829
  STEP: getting @ 06/05/24 13:09:11.838
  STEP: listing @ 06/05/24 13:09:11.839
  STEP: watching @ 06/05/24 13:09:11.841
  Jun  5 13:09:11.841: INFO: starting watch
  STEP: patching @ 06/05/24 13:09:11.841
  STEP: updating @ 06/05/24 13:09:11.844
  Jun  5 13:09:11.847: INFO: waiting for watch events with expected annotations
  STEP: getting /status @ 06/05/24 13:09:11.847
  STEP: patching /status @ 06/05/24 13:09:11.849
  STEP: updating /status @ 06/05/24 13:09:11.853
  STEP: deleting @ 06/05/24 13:09:11.857
  STEP: deleting a collection @ 06/05/24 13:09:11.862
  Jun  5 13:09:11.872: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-5685" for this suite. @ 06/05/24 13:09:11.873
• [0.063 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:289
  STEP: Creating a kubernetes client @ 06/05/24 13:09:11.878
  Jun  5 13:09:11.878: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename field-validation @ 06/05/24 13:09:11.879
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:09:11.885
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:09:11.886
  Jun  5 13:09:11.888: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  Jun  5 13:09:14.973: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-2815" for this suite. @ 06/05/24 13:09:14.976
• [3.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:132
  STEP: Creating a kubernetes client @ 06/05/24 13:09:14.983
  Jun  5 13:09:14.983: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename downward-api @ 06/05/24 13:09:14.984
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:09:14.995
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:09:14.998
  STEP: Creating the pod @ 06/05/24 13:09:15.001
  Jun  5 13:09:17.542: INFO: Successfully updated pod "labelsupdate2c637902-b49c-4a26-b749-d7a7e6caa5be"
  Jun  5 13:09:21.573: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4080" for this suite. @ 06/05/24 13:09:21.576
• [6.597 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] StorageClasses CSI Conformance should run through the lifecycle of a StorageClass [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/storageclass.go:53
  STEP: Creating a kubernetes client @ 06/05/24 13:09:21.581
  Jun  5 13:09:21.581: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename csi-storageclass @ 06/05/24 13:09:21.582
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:09:21.593
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:09:21.596
  STEP: Creating a StorageClass @ 06/05/24 13:09:21.598
  STEP: Get StorageClass "e2e-49dgh" @ 06/05/24 13:09:21.602
  STEP: Patching the StorageClass "e2e-49dgh" @ 06/05/24 13:09:21.604
  STEP: Delete StorageClass "e2e-49dgh" @ 06/05/24 13:09:21.608
  STEP: Confirm deletion of StorageClass "e2e-49dgh" @ 06/05/24 13:09:21.612
  STEP: Create a replacement StorageClass @ 06/05/24 13:09:21.615
  STEP: Updating StorageClass "e2e-v2-rc8qv" @ 06/05/24 13:09:21.62
  STEP: Listing all StorageClass with the labelSelector: "e2e-v2-rc8qv=updated" @ 06/05/24 13:09:21.629
  STEP: Deleting StorageClass "e2e-v2-rc8qv" via DeleteCollection @ 06/05/24 13:09:21.635
  STEP: Confirm deletion of StorageClass "e2e-v2-rc8qv" @ 06/05/24 13:09:21.639
  Jun  5 13:09:21.640: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csi-storageclass-5731" for this suite. @ 06/05/24 13:09:21.641
• [0.063 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:254
  STEP: Creating a kubernetes client @ 06/05/24 13:09:21.644
  Jun  5 13:09:21.644: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename namespaces @ 06/05/24 13:09:21.645
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:09:21.651
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:09:21.653
  STEP: Creating a test namespace @ 06/05/24 13:09:21.654
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:09:21.661
  STEP: Creating a service in the namespace @ 06/05/24 13:09:21.662
  STEP: Deleting the namespace @ 06/05/24 13:09:21.67
  STEP: Waiting for the namespace to be removed. @ 06/05/24 13:09:21.678
  STEP: Recreating the namespace @ 06/05/24 13:09:27.681
  STEP: Verifying there is no service in the namespace @ 06/05/24 13:09:27.695
  Jun  5 13:09:27.697: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-1265" for this suite. @ 06/05/24 13:09:27.7
  STEP: Destroying namespace "nsdeletetest-6752" for this suite. @ 06/05/24 13:09:27.705
  Jun  5 13:09:27.707: INFO: Namespace nsdeletetest-6752 was already deleted
  STEP: Destroying namespace "nsdeletetest-860" for this suite. @ 06/05/24 13:09:27.707
• [6.069 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 06/05/24 13:09:27.715
  Jun  5 13:09:27.715: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename projected @ 06/05/24 13:09:27.716
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:09:27.727
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:09:27.73
  STEP: Creating projection with secret that has name projected-secret-test-map-a8d4a813-d9d5-4b2b-9376-b84d4fea5404 @ 06/05/24 13:09:27.734
  STEP: Creating a pod to test consume secrets @ 06/05/24 13:09:27.741
  STEP: Saw pod success @ 06/05/24 13:09:31.76
  Jun  5 13:09:31.762: INFO: Trying to get logs from node k8sconformance-m02 pod pod-projected-secrets-07244378-0ce8-4f34-8c16-807cac4a59df container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 06/05/24 13:09:31.767
  Jun  5 13:09:31.778: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-593" for this suite. @ 06/05/24 13:09:31.78
• [4.069 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:253
  STEP: Creating a kubernetes client @ 06/05/24 13:09:31.784
  Jun  5 13:09:31.784: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename limitrange @ 06/05/24 13:09:31.785
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:09:31.791
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:09:31.793
  STEP: Creating LimitRange "e2e-limitrange-wznpj" in namespace "limitrange-2621" @ 06/05/24 13:09:31.794
  STEP: Creating another limitRange in another namespace @ 06/05/24 13:09:31.798
  Jun  5 13:09:31.807: INFO: Namespace "e2e-limitrange-wznpj-5858" created
  Jun  5 13:09:31.807: INFO: Creating LimitRange "e2e-limitrange-wznpj" in namespace "e2e-limitrange-wznpj-5858"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-wznpj" @ 06/05/24 13:09:31.812
  Jun  5 13:09:31.813: INFO: Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-wznpj" in "limitrange-2621" namespace @ 06/05/24 13:09:31.813
  Jun  5 13:09:31.817: INFO: LimitRange "e2e-limitrange-wznpj" has been patched
  STEP: Delete LimitRange "e2e-limitrange-wznpj" by Collection with labelSelector: "e2e-limitrange-wznpj=patched" @ 06/05/24 13:09:31.817
  STEP: Confirm that the limitRange "e2e-limitrange-wznpj" has been deleted @ 06/05/24 13:09:31.82
  Jun  5 13:09:31.820: INFO: Requesting list of LimitRange to confirm quantity
  Jun  5 13:09:31.821: INFO: Found 0 LimitRange with label "e2e-limitrange-wznpj=patched"
  Jun  5 13:09:31.821: INFO: LimitRange "e2e-limitrange-wznpj" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-wznpj" @ 06/05/24 13:09:31.821
  Jun  5 13:09:31.823: INFO: Found 1 limitRange
  Jun  5 13:09:31.823: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-2621" for this suite. @ 06/05/24 13:09:31.824
  STEP: Destroying namespace "e2e-limitrange-wznpj-5858" for this suite. @ 06/05/24 13:09:31.827
• [0.046 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1698
  STEP: Creating a kubernetes client @ 06/05/24 13:09:31.83
  Jun  5 13:09:31.830: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename kubectl @ 06/05/24 13:09:31.831
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:09:31.837
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:09:31.839
  STEP: creating Agnhost RC @ 06/05/24 13:09:31.84
  Jun  5 13:09:31.840: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=kubectl-9700 create -f -'
  Jun  5 13:09:31.911: INFO: stderr: ""
  Jun  5 13:09:31.911: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 06/05/24 13:09:31.911
  Jun  5 13:09:32.918: INFO: Selector matched 1 pods for map[app:agnhost]
  Jun  5 13:09:32.918: INFO: Found 1 / 1
  Jun  5 13:09:32.918: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 06/05/24 13:09:32.918
  Jun  5 13:09:32.923: INFO: Selector matched 1 pods for map[app:agnhost]
  Jun  5 13:09:32.923: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Jun  5 13:09:32.923: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=kubectl-9700 patch pod agnhost-primary-tfz9w -p {"metadata":{"annotations":{"x":"y"}}}'
  Jun  5 13:09:32.973: INFO: stderr: ""
  Jun  5 13:09:32.973: INFO: stdout: "pod/agnhost-primary-tfz9w patched\n"
  STEP: checking annotations @ 06/05/24 13:09:32.973
  Jun  5 13:09:32.975: INFO: Selector matched 1 pods for map[app:agnhost]
  Jun  5 13:09:32.975: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Jun  5 13:09:32.975: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9700" for this suite. @ 06/05/24 13:09:32.977
• [1.149 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:62
  STEP: Creating a kubernetes client @ 06/05/24 13:09:32.98
  Jun  5 13:09:32.980: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename limitrange @ 06/05/24 13:09:32.98
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:09:32.988
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:09:32.99
  STEP: Creating a LimitRange @ 06/05/24 13:09:32.991
  STEP: Setting up watch @ 06/05/24 13:09:32.991
  STEP: Submitting a LimitRange @ 06/05/24 13:09:33.093
  STEP: Verifying LimitRange creation was observed @ 06/05/24 13:09:33.1
  STEP: Fetching the LimitRange to ensure it has proper values @ 06/05/24 13:09:33.1
  Jun  5 13:09:33.104: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  Jun  5 13:09:33.104: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 06/05/24 13:09:33.104
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 06/05/24 13:09:33.109
  Jun  5 13:09:33.113: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  Jun  5 13:09:33.113: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 06/05/24 13:09:33.113
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 06/05/24 13:09:33.118
  Jun  5 13:09:33.122: INFO: Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  Jun  5 13:09:33.122: INFO: Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 06/05/24 13:09:33.122
  STEP: Failing to create a Pod with more than max resources @ 06/05/24 13:09:33.125
  STEP: Updating a LimitRange @ 06/05/24 13:09:33.128
  STEP: Verifying LimitRange updating is effective @ 06/05/24 13:09:33.133
  STEP: Creating a Pod with less than former min resources @ 06/05/24 13:09:35.14
  STEP: Failing to create a Pod with more than max resources @ 06/05/24 13:09:35.147
  STEP: Deleting a LimitRange @ 06/05/24 13:09:35.15
  STEP: Verifying the LimitRange was deleted @ 06/05/24 13:09:35.159
  Jun  5 13:09:40.165: INFO: limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 06/05/24 13:09:40.165
  Jun  5 13:09:40.173: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-3026" for this suite. @ 06/05/24 13:09:40.176
• [7.203 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:98
  STEP: Creating a kubernetes client @ 06/05/24 13:09:40.183
  Jun  5 13:09:40.183: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 06/05/24 13:09:40.185
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:09:40.197
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:09:40.199
  STEP: creating a target pod @ 06/05/24 13:09:40.203
  STEP: adding an ephemeral container @ 06/05/24 13:09:42.221
  STEP: checking pod container endpoints @ 06/05/24 13:09:44.244
  Jun  5 13:09:44.245: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-6903 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun  5 13:09:44.245: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  Jun  5 13:09:44.245: INFO: ExecWithOptions: Clientset creation
  Jun  5 13:09:44.245: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/ephemeral-containers-test-6903/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  Jun  5 13:09:44.306: INFO: Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 06/05/24 13:09:44.311
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 06/05/24 13:09:44.314
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 06/05/24 13:09:44.323
  Jun  5 13:09:44.327: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-6903" for this suite. @ 06/05/24 13:09:44.33
• [4.154 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:176
  STEP: Creating a kubernetes client @ 06/05/24 13:09:44.337
  Jun  5 13:09:44.337: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename events @ 06/05/24 13:09:44.338
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:09:44.348
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:09:44.35
  STEP: Create set of events @ 06/05/24 13:09:44.351
  Jun  5 13:09:44.354: INFO: created test-event-1
  Jun  5 13:09:44.360: INFO: created test-event-2
  Jun  5 13:09:44.363: INFO: created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 06/05/24 13:09:44.363
  STEP: delete collection of events @ 06/05/24 13:09:44.365
  Jun  5 13:09:44.365: INFO: requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 06/05/24 13:09:44.385
  Jun  5 13:09:44.385: INFO: requesting list of events to confirm quantity
  Jun  5 13:09:44.386: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-5380" for this suite. @ 06/05/24 13:09:44.388
• [0.053 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 06/05/24 13:09:44.391
  Jun  5 13:09:44.391: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename subpath @ 06/05/24 13:09:44.392
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:09:44.401
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:09:44.402
  STEP: Setting up data @ 06/05/24 13:09:44.404
  STEP: Creating pod pod-subpath-test-configmap-t8w7 @ 06/05/24 13:09:44.409
  STEP: Creating a pod to test atomic-volume-subpath @ 06/05/24 13:09:44.409
  STEP: Saw pod success @ 06/05/24 13:10:06.476
  Jun  5 13:10:06.479: INFO: Trying to get logs from node k8sconformance-m02 pod pod-subpath-test-configmap-t8w7 container test-container-subpath-configmap-t8w7: <nil>
  STEP: delete the pod @ 06/05/24 13:10:06.488
  STEP: Deleting pod pod-subpath-test-configmap-t8w7 @ 06/05/24 13:10:06.502
  Jun  5 13:10:06.502: INFO: Deleting pod "pod-subpath-test-configmap-t8w7" in namespace "subpath-639"
  Jun  5 13:10:06.505: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-639" for this suite. @ 06/05/24 13:10:06.507
• [22.120 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:168
  STEP: Creating a kubernetes client @ 06/05/24 13:10:06.512
  Jun  5 13:10:06.512: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename downward-api @ 06/05/24 13:10:06.513
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:10:06.522
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:10:06.524
  STEP: Creating a pod to test downward api env vars @ 06/05/24 13:10:06.526
  STEP: Saw pod success @ 06/05/24 13:10:08.541
  Jun  5 13:10:08.544: INFO: Trying to get logs from node k8sconformance-m02 pod downward-api-608b96e2-af8b-40f1-945b-934cfd9ab084 container dapi-container: <nil>
  STEP: delete the pod @ 06/05/24 13:10:08.551
  Jun  5 13:10:08.566: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2813" for this suite. @ 06/05/24 13:10:08.57
• [2.062 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:177
  STEP: Creating a kubernetes client @ 06/05/24 13:10:08.575
  Jun  5 13:10:08.575: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename replicaset @ 06/05/24 13:10:08.576
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:10:08.585
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:10:08.587
  STEP: Create a Replicaset @ 06/05/24 13:10:08.593
  STEP: Verify that the required pods have come up. @ 06/05/24 13:10:08.596
  Jun  5 13:10:08.598: INFO: Pod name sample-pod: Found 0 pods out of 1
  Jun  5 13:10:13.603: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 06/05/24 13:10:13.603
  STEP: Getting /status @ 06/05/24 13:10:13.603
  Jun  5 13:10:13.605: INFO: Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 06/05/24 13:10:13.605
  Jun  5 13:10:13.613: INFO: updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 06/05/24 13:10:13.614
  Jun  5 13:10:13.616: INFO: Observed &ReplicaSet event: ADDED
  Jun  5 13:10:13.616: INFO: Observed &ReplicaSet event: MODIFIED
  Jun  5 13:10:13.616: INFO: Observed &ReplicaSet event: MODIFIED
  Jun  5 13:10:13.616: INFO: Observed &ReplicaSet event: MODIFIED
  Jun  5 13:10:13.617: INFO: Found replicaset test-rs in namespace replicaset-14 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Jun  5 13:10:13.617: INFO: Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 06/05/24 13:10:13.617
  Jun  5 13:10:13.617: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Jun  5 13:10:13.622: INFO: Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 06/05/24 13:10:13.622
  Jun  5 13:10:13.624: INFO: Observed &ReplicaSet event: ADDED
  Jun  5 13:10:13.624: INFO: Observed &ReplicaSet event: MODIFIED
  Jun  5 13:10:13.624: INFO: Observed &ReplicaSet event: MODIFIED
  Jun  5 13:10:13.624: INFO: Observed &ReplicaSet event: MODIFIED
  Jun  5 13:10:13.624: INFO: Observed replicaset test-rs in namespace replicaset-14 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Jun  5 13:10:13.624: INFO: Observed &ReplicaSet event: MODIFIED
  Jun  5 13:10:13.624: INFO: Found replicaset test-rs in namespace replicaset-14 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  Jun  5 13:10:13.625: INFO: Replicaset test-rs has a patched status
  Jun  5 13:10:13.625: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-14" for this suite. @ 06/05/24 13:10:13.627
• [5.057 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1015
  STEP: Creating a kubernetes client @ 06/05/24 13:10:13.632
  Jun  5 13:10:13.632: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename resourcequota @ 06/05/24 13:10:13.633
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:10:13.641
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:10:13.643
  STEP: Creating resourceQuota "e2e-rq-status-7qdrq" @ 06/05/24 13:10:13.646
  Jun  5 13:10:13.652: INFO: Resource quota "e2e-rq-status-7qdrq" reports spec: hard cpu limit of 500m
  Jun  5 13:10:13.652: INFO: Resource quota "e2e-rq-status-7qdrq" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-7qdrq" /status @ 06/05/24 13:10:13.652
  STEP: Confirm /status for "e2e-rq-status-7qdrq" resourceQuota via watch @ 06/05/24 13:10:13.656
  Jun  5 13:10:13.657: INFO: observed resourceQuota "e2e-rq-status-7qdrq" in namespace "resourcequota-2421" with hard status: v1.ResourceList(nil)
  Jun  5 13:10:13.657: INFO: Found resourceQuota "e2e-rq-status-7qdrq" in namespace "resourcequota-2421" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  Jun  5 13:10:13.657: INFO: ResourceQuota "e2e-rq-status-7qdrq" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 06/05/24 13:10:13.658
  Jun  5 13:10:13.663: INFO: Resource quota "e2e-rq-status-7qdrq" reports spec: hard cpu limit of 1
  Jun  5 13:10:13.663: INFO: Resource quota "e2e-rq-status-7qdrq" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-7qdrq" /status @ 06/05/24 13:10:13.663
  STEP: Confirm /status for "e2e-rq-status-7qdrq" resourceQuota via watch @ 06/05/24 13:10:13.667
  Jun  5 13:10:13.668: INFO: observed resourceQuota "e2e-rq-status-7qdrq" in namespace "resourcequota-2421" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  Jun  5 13:10:13.668: INFO: Found resourceQuota "e2e-rq-status-7qdrq" in namespace "resourcequota-2421" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  Jun  5 13:10:13.668: INFO: ResourceQuota "e2e-rq-status-7qdrq" /status was patched
  STEP: Get "e2e-rq-status-7qdrq" /status @ 06/05/24 13:10:13.668
  Jun  5 13:10:13.669: INFO: Resourcequota "e2e-rq-status-7qdrq" reports status: hard cpu of 1
  Jun  5 13:10:13.669: INFO: Resourcequota "e2e-rq-status-7qdrq" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-7qdrq" /status before checking Spec is unchanged @ 06/05/24 13:10:13.671
  Jun  5 13:10:13.674: INFO: Resourcequota "e2e-rq-status-7qdrq" reports status: hard cpu of 2
  Jun  5 13:10:13.674: INFO: Resourcequota "e2e-rq-status-7qdrq" reports status: hard memory of 2Gi
  Jun  5 13:10:13.674: INFO: Found resourceQuota "e2e-rq-status-7qdrq" in namespace "resourcequota-2421" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  Jun  5 13:10:13.676: INFO: ResourceQuota "e2e-rq-status-7qdrq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7qdrq", GenerateName:"", Namespace:"resourcequota-2421", SelfLink:"", UID:"39a92d59-5b82-48ed-a12e-ee4ebd9a0d0d", ResourceVersion:"3347", Generation:0, CreationTimestamp:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7qdrq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000880300), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000880360), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0008803a8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jun  5 13:10:18.677: INFO: ResourceQuota "e2e-rq-status-7qdrq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7qdrq", GenerateName:"", Namespace:"resourcequota-2421", SelfLink:"", UID:"39a92d59-5b82-48ed-a12e-ee4ebd9a0d0d", ResourceVersion:"3347", Generation:0, CreationTimestamp:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7qdrq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0008806f0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0008807c8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000880840), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jun  5 13:10:23.682: INFO: ResourceQuota "e2e-rq-status-7qdrq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7qdrq", GenerateName:"", Namespace:"resourcequota-2421", SelfLink:"", UID:"39a92d59-5b82-48ed-a12e-ee4ebd9a0d0d", ResourceVersion:"3347", Generation:0, CreationTimestamp:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7qdrq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000880ed0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000880fa8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000881008), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jun  5 13:10:28.681: INFO: ResourceQuota "e2e-rq-status-7qdrq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7qdrq", GenerateName:"", Namespace:"resourcequota-2421", SelfLink:"", UID:"39a92d59-5b82-48ed-a12e-ee4ebd9a0d0d", ResourceVersion:"3347", Generation:0, CreationTimestamp:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7qdrq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004708d38), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004708d80), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004708db0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jun  5 13:10:33.680: INFO: ResourceQuota "e2e-rq-status-7qdrq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7qdrq", GenerateName:"", Namespace:"resourcequota-2421", SelfLink:"", UID:"39a92d59-5b82-48ed-a12e-ee4ebd9a0d0d", ResourceVersion:"3347", Generation:0, CreationTimestamp:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7qdrq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0008818f0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000881950), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000881a40), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jun  5 13:10:38.682: INFO: ResourceQuota "e2e-rq-status-7qdrq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7qdrq", GenerateName:"", Namespace:"resourcequota-2421", SelfLink:"", UID:"39a92d59-5b82-48ed-a12e-ee4ebd9a0d0d", ResourceVersion:"3347", Generation:0, CreationTimestamp:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7qdrq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003f300c0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003f300f0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003f30168), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jun  5 13:10:43.681: INFO: ResourceQuota "e2e-rq-status-7qdrq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7qdrq", GenerateName:"", Namespace:"resourcequota-2421", SelfLink:"", UID:"39a92d59-5b82-48ed-a12e-ee4ebd9a0d0d", ResourceVersion:"3347", Generation:0, CreationTimestamp:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7qdrq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003f30390), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003f303c0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003f30420), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jun  5 13:10:48.681: INFO: ResourceQuota "e2e-rq-status-7qdrq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7qdrq", GenerateName:"", Namespace:"resourcequota-2421", SelfLink:"", UID:"39a92d59-5b82-48ed-a12e-ee4ebd9a0d0d", ResourceVersion:"3347", Generation:0, CreationTimestamp:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7qdrq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003f307c8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003f30828), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003f30858), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jun  5 13:10:53.678: INFO: ResourceQuota "e2e-rq-status-7qdrq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7qdrq", GenerateName:"", Namespace:"resourcequota-2421", SelfLink:"", UID:"39a92d59-5b82-48ed-a12e-ee4ebd9a0d0d", ResourceVersion:"3347", Generation:0, CreationTimestamp:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7qdrq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003f30ae0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003f30b10), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003f30b88), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jun  5 13:10:58.680: INFO: ResourceQuota "e2e-rq-status-7qdrq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7qdrq", GenerateName:"", Namespace:"resourcequota-2421", SelfLink:"", UID:"39a92d59-5b82-48ed-a12e-ee4ebd9a0d0d", ResourceVersion:"3347", Generation:0, CreationTimestamp:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7qdrq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004708fd8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004709008), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004709050), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jun  5 13:11:03.680: INFO: ResourceQuota "e2e-rq-status-7qdrq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7qdrq", GenerateName:"", Namespace:"resourcequota-2421", SelfLink:"", UID:"39a92d59-5b82-48ed-a12e-ee4ebd9a0d0d", ResourceVersion:"3347", Generation:0, CreationTimestamp:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7qdrq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003f30fc0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003f31038), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003f31080), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jun  5 13:11:08.679: INFO: ResourceQuota "e2e-rq-status-7qdrq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7qdrq", GenerateName:"", Namespace:"resourcequota-2421", SelfLink:"", UID:"39a92d59-5b82-48ed-a12e-ee4ebd9a0d0d", ResourceVersion:"3347", Generation:0, CreationTimestamp:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7qdrq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0047092c0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0047092f0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004709338), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jun  5 13:11:13.677: INFO: ResourceQuota "e2e-rq-status-7qdrq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7qdrq", GenerateName:"", Namespace:"resourcequota-2421", SelfLink:"", UID:"39a92d59-5b82-48ed-a12e-ee4ebd9a0d0d", ResourceVersion:"3347", Generation:0, CreationTimestamp:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7qdrq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003f313b0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003f31410), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003f31470), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jun  5 13:11:18.681: INFO: ResourceQuota "e2e-rq-status-7qdrq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7qdrq", GenerateName:"", Namespace:"resourcequota-2421", SelfLink:"", UID:"39a92d59-5b82-48ed-a12e-ee4ebd9a0d0d", ResourceVersion:"3347", Generation:0, CreationTimestamp:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7qdrq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003f317e8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003f31818), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003f31878), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jun  5 13:11:23.680: INFO: ResourceQuota "e2e-rq-status-7qdrq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7qdrq", GenerateName:"", Namespace:"resourcequota-2421", SelfLink:"", UID:"39a92d59-5b82-48ed-a12e-ee4ebd9a0d0d", ResourceVersion:"3347", Generation:0, CreationTimestamp:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7qdrq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003f31ab8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003f31b48), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003f31b78), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jun  5 13:11:28.683: INFO: ResourceQuota "e2e-rq-status-7qdrq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7qdrq", GenerateName:"", Namespace:"resourcequota-2421", SelfLink:"", UID:"39a92d59-5b82-48ed-a12e-ee4ebd9a0d0d", ResourceVersion:"3347", Generation:0, CreationTimestamp:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7qdrq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c4c3d8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c4c450), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c4c4c8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jun  5 13:11:33.681: INFO: ResourceQuota "e2e-rq-status-7qdrq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7qdrq", GenerateName:"", Namespace:"resourcequota-2421", SelfLink:"", UID:"39a92d59-5b82-48ed-a12e-ee4ebd9a0d0d", ResourceVersion:"3347", Generation:0, CreationTimestamp:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7qdrq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004709650), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004709680), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0047096b0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jun  5 13:11:38.682: INFO: ResourceQuota "e2e-rq-status-7qdrq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7qdrq", GenerateName:"", Namespace:"resourcequota-2421", SelfLink:"", UID:"39a92d59-5b82-48ed-a12e-ee4ebd9a0d0d", ResourceVersion:"3347", Generation:0, CreationTimestamp:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7qdrq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c4c750), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c4c7c8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c4c810), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jun  5 13:11:43.682: INFO: ResourceQuota "e2e-rq-status-7qdrq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7qdrq", GenerateName:"", Namespace:"resourcequota-2421", SelfLink:"", UID:"39a92d59-5b82-48ed-a12e-ee4ebd9a0d0d", ResourceVersion:"3347", Generation:0, CreationTimestamp:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7qdrq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004709908), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004709950), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004709980), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jun  5 13:11:48.682: INFO: ResourceQuota "e2e-rq-status-7qdrq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7qdrq", GenerateName:"", Namespace:"resourcequota-2421", SelfLink:"", UID:"39a92d59-5b82-48ed-a12e-ee4ebd9a0d0d", ResourceVersion:"3347", Generation:0, CreationTimestamp:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7qdrq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004709b00), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004709b30), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004709b60), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jun  5 13:11:53.682: INFO: ResourceQuota "e2e-rq-status-7qdrq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7qdrq", GenerateName:"", Namespace:"resourcequota-2421", SelfLink:"", UID:"39a92d59-5b82-48ed-a12e-ee4ebd9a0d0d", ResourceVersion:"3347", Generation:0, CreationTimestamp:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7qdrq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004709d10), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004709d40), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004709d70), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jun  5 13:11:58.680: INFO: ResourceQuota "e2e-rq-status-7qdrq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7qdrq", GenerateName:"", Namespace:"resourcequota-2421", SelfLink:"", UID:"39a92d59-5b82-48ed-a12e-ee4ebd9a0d0d", ResourceVersion:"3347", Generation:0, CreationTimestamp:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7qdrq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c4ccd8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c4cd50), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c4cdb0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jun  5 13:12:03.681: INFO: ResourceQuota "e2e-rq-status-7qdrq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7qdrq", GenerateName:"", Namespace:"resourcequota-2421", SelfLink:"", UID:"39a92d59-5b82-48ed-a12e-ee4ebd9a0d0d", ResourceVersion:"3347", Generation:0, CreationTimestamp:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7qdrq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c4d050), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c4d098), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c4d110), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jun  5 13:12:08.681: INFO: ResourceQuota "e2e-rq-status-7qdrq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7qdrq", GenerateName:"", Namespace:"resourcequota-2421", SelfLink:"", UID:"39a92d59-5b82-48ed-a12e-ee4ebd9a0d0d", ResourceVersion:"3347", Generation:0, CreationTimestamp:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7qdrq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0049920f0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004992150), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004992198), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jun  5 13:12:13.682: INFO: ResourceQuota "e2e-rq-status-7qdrq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7qdrq", GenerateName:"", Namespace:"resourcequota-2421", SelfLink:"", UID:"39a92d59-5b82-48ed-a12e-ee4ebd9a0d0d", ResourceVersion:"3347", Generation:0, CreationTimestamp:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7qdrq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004708150), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004708180), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0047081c8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jun  5 13:12:18.681: INFO: ResourceQuota "e2e-rq-status-7qdrq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7qdrq", GenerateName:"", Namespace:"resourcequota-2421", SelfLink:"", UID:"39a92d59-5b82-48ed-a12e-ee4ebd9a0d0d", ResourceVersion:"3347", Generation:0, CreationTimestamp:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7qdrq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000812528), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0008125a0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0008125d0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jun  5 13:12:23.680: INFO: ResourceQuota "e2e-rq-status-7qdrq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7qdrq", GenerateName:"", Namespace:"resourcequota-2421", SelfLink:"", UID:"39a92d59-5b82-48ed-a12e-ee4ebd9a0d0d", ResourceVersion:"3347", Generation:0, CreationTimestamp:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7qdrq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000812960), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0008129c0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0008129f0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jun  5 13:12:28.679: INFO: ResourceQuota "e2e-rq-status-7qdrq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7qdrq", GenerateName:"", Namespace:"resourcequota-2421", SelfLink:"", UID:"39a92d59-5b82-48ed-a12e-ee4ebd9a0d0d", ResourceVersion:"3347", Generation:0, CreationTimestamp:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7qdrq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000812e10), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000812e88), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000812f18), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jun  5 13:12:33.680: INFO: ResourceQuota "e2e-rq-status-7qdrq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7qdrq", GenerateName:"", Namespace:"resourcequota-2421", SelfLink:"", UID:"39a92d59-5b82-48ed-a12e-ee4ebd9a0d0d", ResourceVersion:"3347", Generation:0, CreationTimestamp:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7qdrq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000813308), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000813350), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000813458), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jun  5 13:12:38.680: INFO: ResourceQuota "e2e-rq-status-7qdrq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7qdrq", GenerateName:"", Namespace:"resourcequota-2421", SelfLink:"", UID:"39a92d59-5b82-48ed-a12e-ee4ebd9a0d0d", ResourceVersion:"3347", Generation:0, CreationTimestamp:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7qdrq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004708678), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0047086a8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0047086d8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jun  5 13:12:43.682: INFO: ResourceQuota "e2e-rq-status-7qdrq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7qdrq", GenerateName:"", Namespace:"resourcequota-2421", SelfLink:"", UID:"39a92d59-5b82-48ed-a12e-ee4ebd9a0d0d", ResourceVersion:"3347", Generation:0, CreationTimestamp:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7qdrq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004708858), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004708888), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0047088b8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jun  5 13:12:48.681: INFO: ResourceQuota "e2e-rq-status-7qdrq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7qdrq", GenerateName:"", Namespace:"resourcequota-2421", SelfLink:"", UID:"39a92d59-5b82-48ed-a12e-ee4ebd9a0d0d", ResourceVersion:"3347", Generation:0, CreationTimestamp:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7qdrq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004708a98), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004708ae0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004708b10), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jun  5 13:12:53.679: INFO: ResourceQuota "e2e-rq-status-7qdrq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7qdrq", GenerateName:"", Namespace:"resourcequota-2421", SelfLink:"", UID:"39a92d59-5b82-48ed-a12e-ee4ebd9a0d0d", ResourceVersion:"3347", Generation:0, CreationTimestamp:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7qdrq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004992588), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0049925d0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004992618), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jun  5 13:12:58.679: INFO: ResourceQuota "e2e-rq-status-7qdrq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7qdrq", GenerateName:"", Namespace:"resourcequota-2421", SelfLink:"", UID:"39a92d59-5b82-48ed-a12e-ee4ebd9a0d0d", ResourceVersion:"3347", Generation:0, CreationTimestamp:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7qdrq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004708d08), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004708d38), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004708d80), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jun  5 13:13:03.679: INFO: ResourceQuota "e2e-rq-status-7qdrq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7qdrq", GenerateName:"", Namespace:"resourcequota-2421", SelfLink:"", UID:"39a92d59-5b82-48ed-a12e-ee4ebd9a0d0d", ResourceVersion:"3347", Generation:0, CreationTimestamp:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7qdrq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000813c38), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000813c68), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000813cc8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jun  5 13:13:08.682: INFO: ResourceQuota "e2e-rq-status-7qdrq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7qdrq", GenerateName:"", Namespace:"resourcequota-2421", SelfLink:"", UID:"39a92d59-5b82-48ed-a12e-ee4ebd9a0d0d", ResourceVersion:"3347", Generation:0, CreationTimestamp:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7qdrq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004708ee8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004708f18), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004708f48), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jun  5 13:13:13.681: INFO: ResourceQuota "e2e-rq-status-7qdrq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7qdrq", GenerateName:"", Namespace:"resourcequota-2421", SelfLink:"", UID:"39a92d59-5b82-48ed-a12e-ee4ebd9a0d0d", ResourceVersion:"3347", Generation:0, CreationTimestamp:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7qdrq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0043562a0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0043562d0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004356330), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jun  5 13:13:18.679: INFO: ResourceQuota "e2e-rq-status-7qdrq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7qdrq", GenerateName:"", Namespace:"resourcequota-2421", SelfLink:"", UID:"39a92d59-5b82-48ed-a12e-ee4ebd9a0d0d", ResourceVersion:"3347", Generation:0, CreationTimestamp:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7qdrq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c4c1c8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c4c1f8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c4c240), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jun  5 13:13:23.684: INFO: ResourceQuota "e2e-rq-status-7qdrq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7qdrq", GenerateName:"", Namespace:"resourcequota-2421", SelfLink:"", UID:"39a92d59-5b82-48ed-a12e-ee4ebd9a0d0d", ResourceVersion:"3347", Generation:0, CreationTimestamp:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7qdrq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c4c5a0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c4c5d0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c4c600), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jun  5 13:13:28.680: INFO: ResourceQuota "e2e-rq-status-7qdrq" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-7qdrq", GenerateName:"", Namespace:"resourcequota-2421", SelfLink:"", UID:"39a92d59-5b82-48ed-a12e-ee4ebd9a0d0d", ResourceVersion:"3347", Generation:0, CreationTimestamp:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-7qdrq"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0043567c8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004356810), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 5, 13, 10, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004356840), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  Jun  5 13:13:33.680: INFO: ResourceQuota "e2e-rq-status-7qdrq" Spec was unchanged and /status reset
  Jun  5 13:13:33.680: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2421" for this suite. @ 06/05/24 13:13:33.683
• [200.058 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 06/05/24 13:13:33.69
  Jun  5 13:13:33.690: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename subpath @ 06/05/24 13:13:33.691
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:13:33.704
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:13:33.707
  STEP: Setting up data @ 06/05/24 13:13:33.711
  STEP: Creating pod pod-subpath-test-downwardapi-vgrq @ 06/05/24 13:13:33.718
  STEP: Creating a pod to test atomic-volume-subpath @ 06/05/24 13:13:33.718
  STEP: Saw pod success @ 06/05/24 13:13:57.788
  Jun  5 13:13:57.791: INFO: Trying to get logs from node k8sconformance-m02 pod pod-subpath-test-downwardapi-vgrq container test-container-subpath-downwardapi-vgrq: <nil>
  STEP: delete the pod @ 06/05/24 13:13:57.812
  STEP: Deleting pod pod-subpath-test-downwardapi-vgrq @ 06/05/24 13:13:57.821
  Jun  5 13:13:57.822: INFO: Deleting pod "pod-subpath-test-downwardapi-vgrq" in namespace "subpath-8354"
  Jun  5 13:13:57.824: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-8354" for this suite. @ 06/05/24 13:13:57.826
• [24.141 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:86
  STEP: Creating a kubernetes client @ 06/05/24 13:13:57.832
  Jun  5 13:13:57.832: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename downward-api @ 06/05/24 13:13:57.833
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:13:57.842
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:13:57.844
  STEP: Creating a pod to test downward API volume plugin @ 06/05/24 13:13:57.847
  STEP: Saw pod success @ 06/05/24 13:14:01.867
  Jun  5 13:14:01.870: INFO: Trying to get logs from node k8sconformance-m02 pod downwardapi-volume-efd54036-61ef-4e42-9fd5-600a44cae4da container client-container: <nil>
  STEP: delete the pod @ 06/05/24 13:14:01.877
  Jun  5 13:14:01.890: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4850" for this suite. @ 06/05/24 13:14:01.893
• [4.067 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:132
  STEP: Creating a kubernetes client @ 06/05/24 13:14:01.899
  Jun  5 13:14:01.899: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename replicaset @ 06/05/24 13:14:01.9
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:14:01.913
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:14:01.916
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 06/05/24 13:14:01.918
  STEP: When a replicaset with a matching selector is created @ 06/05/24 13:14:03.935
  STEP: Then the orphan pod is adopted @ 06/05/24 13:14:03.941
  STEP: When the matched label of one of its pods change @ 06/05/24 13:14:04.947
  Jun  5 13:14:04.949: INFO: Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 06/05/24 13:14:04.961
  Jun  5 13:14:05.968: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-98" for this suite. @ 06/05/24 13:14:05.971
• [4.080 seconds]
------------------------------
S
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:875
  STEP: Creating a kubernetes client @ 06/05/24 13:14:05.979
  Jun  5 13:14:05.979: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename daemonsets @ 06/05/24 13:14:05.98
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:14:05.99
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:14:05.993
  STEP: Creating simple DaemonSet "daemon-set" @ 06/05/24 13:14:06.014
  STEP: Check that daemon pods launch on every node of the cluster. @ 06/05/24 13:14:06.019
  Jun  5 13:14:06.024: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun  5 13:14:06.024: INFO: Node k8sconformance is running 0 daemon pod, expected 1
  Jun  5 13:14:07.026: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun  5 13:14:07.026: INFO: Node k8sconformance is running 0 daemon pod, expected 1
  Jun  5 13:14:08.027: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Jun  5 13:14:08.027: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Getting /status @ 06/05/24 13:14:08.03
  Jun  5 13:14:08.033: INFO: Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 06/05/24 13:14:08.033
  Jun  5 13:14:08.042: INFO: updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 06/05/24 13:14:08.042
  Jun  5 13:14:08.044: INFO: Observed &DaemonSet event: ADDED
  Jun  5 13:14:08.044: INFO: Observed &DaemonSet event: MODIFIED
  Jun  5 13:14:08.044: INFO: Observed &DaemonSet event: MODIFIED
  Jun  5 13:14:08.044: INFO: Observed &DaemonSet event: MODIFIED
  Jun  5 13:14:08.045: INFO: Observed &DaemonSet event: MODIFIED
  Jun  5 13:14:08.045: INFO: Found daemon set daemon-set in namespace daemonsets-8809 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Jun  5 13:14:08.045: INFO: Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 06/05/24 13:14:08.045
  STEP: watching for the daemon set status to be patched @ 06/05/24 13:14:08.051
  Jun  5 13:14:08.052: INFO: Observed &DaemonSet event: ADDED
  Jun  5 13:14:08.052: INFO: Observed &DaemonSet event: MODIFIED
  Jun  5 13:14:08.052: INFO: Observed &DaemonSet event: MODIFIED
  Jun  5 13:14:08.053: INFO: Observed &DaemonSet event: MODIFIED
  Jun  5 13:14:08.053: INFO: Observed &DaemonSet event: MODIFIED
  Jun  5 13:14:08.053: INFO: Observed daemon set daemon-set in namespace daemonsets-8809 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Jun  5 13:14:08.053: INFO: Observed &DaemonSet event: MODIFIED
  Jun  5 13:14:08.053: INFO: Found daemon set daemon-set in namespace daemonsets-8809 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  Jun  5 13:14:08.053: INFO: Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 06/05/24 13:14:08.057
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-8809, will wait for the garbage collector to delete the pods @ 06/05/24 13:14:08.057
  Jun  5 13:14:08.117: INFO: Deleting DaemonSet.extensions daemon-set took: 7.01121ms
  Jun  5 13:14:08.217: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.447978ms
  Jun  5 13:14:10.723: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun  5 13:14:10.723: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Jun  5 13:14:10.725: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"3716"},"items":null}

  Jun  5 13:14:10.727: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"3716"},"items":null}

  Jun  5 13:14:10.734: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-8809" for this suite. @ 06/05/24 13:14:10.736
• [4.763 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:142
  STEP: Creating a kubernetes client @ 06/05/24 13:14:10.742
  Jun  5 13:14:10.742: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename crd-webhook @ 06/05/24 13:14:10.743
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:14:10.756
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:14:10.759
  STEP: Setting up server cert @ 06/05/24 13:14:10.762
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 06/05/24 13:14:10.87
  STEP: Deploying the custom resource conversion webhook pod @ 06/05/24 13:14:10.874
  STEP: Wait for the deployment to be ready @ 06/05/24 13:14:10.881
  Jun  5 13:14:10.886: INFO: deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 06/05/24 13:14:12.9
  STEP: Verifying the service has paired with the endpoint @ 06/05/24 13:14:12.913
  Jun  5 13:14:13.913: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  Jun  5 13:14:13.922: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Creating a v1 custom resource @ 06/05/24 13:14:16.484
  STEP: v2 custom resource should be converted @ 06/05/24 13:14:16.489
  Jun  5 13:14:17.032: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-293" for this suite. @ 06/05/24 13:14:17.034
• [6.297 seconds]
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:200
  STEP: Creating a kubernetes client @ 06/05/24 13:14:17.04
  Jun  5 13:14:17.040: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename emptydir @ 06/05/24 13:14:17.041
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:14:17.053
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:14:17.057
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 06/05/24 13:14:17.06
  STEP: Saw pod success @ 06/05/24 13:14:19.07
  Jun  5 13:14:19.071: INFO: Trying to get logs from node k8sconformance-m02 pod pod-3bcebc8d-d825-4b90-87f6-ee52722e98f8 container test-container: <nil>
  STEP: delete the pod @ 06/05/24 13:14:19.079
  Jun  5 13:14:19.092: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5839" for this suite. @ 06/05/24 13:14:19.095
• [2.061 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:183
  STEP: Creating a kubernetes client @ 06/05/24 13:14:19.101
  Jun  5 13:14:19.101: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename kubelet-test @ 06/05/24 13:14:19.102
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:14:19.112
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:14:19.115
  Jun  5 13:14:21.141: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-3150" for this suite. @ 06/05/24 13:14:21.143
• [2.050 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:622
  STEP: Creating a kubernetes client @ 06/05/24 13:14:21.151
  Jun  5 13:14:21.151: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename field-validation @ 06/05/24 13:14:21.153
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:14:21.163
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:14:21.166
  Jun  5 13:14:21.169: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  W0605 13:14:23.721685      22 warnings.go:70] unknown field "alpha"
  W0605 13:14:23.721729      22 warnings.go:70] unknown field "beta"
  W0605 13:14:23.721739      22 warnings.go:70] unknown field "delta"
  W0605 13:14:23.721748      22 warnings.go:70] unknown field "epsilon"
  W0605 13:14:23.721757      22 warnings.go:70] unknown field "gamma"
  Jun  5 13:14:24.255: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-9567" for this suite. @ 06/05/24 13:14:24.257
• [3.110 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 06/05/24 13:14:24.261
  Jun  5 13:14:24.261: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename daemonsets @ 06/05/24 13:14:24.262
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:14:24.267
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:14:24.268
  Jun  5 13:14:24.276: INFO: Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 06/05/24 13:14:24.278
  Jun  5 13:14:24.280: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun  5 13:14:24.280: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 06/05/24 13:14:24.28
  Jun  5 13:14:24.291: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun  5 13:14:24.291: INFO: Node k8sconformance-m02 is running 0 daemon pod, expected 1
  Jun  5 13:14:25.294: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun  5 13:14:25.294: INFO: Node k8sconformance-m02 is running 0 daemon pod, expected 1
  Jun  5 13:14:26.292: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Jun  5 13:14:26.292: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 06/05/24 13:14:26.295
  Jun  5 13:14:26.308: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Jun  5 13:14:26.308: INFO: Number of running nodes: 0, number of available pods: 1 in daemonset daemon-set
  Jun  5 13:14:27.309: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun  5 13:14:27.309: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 06/05/24 13:14:27.309
  Jun  5 13:14:27.322: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun  5 13:14:27.322: INFO: Node k8sconformance-m02 is running 0 daemon pod, expected 1
  Jun  5 13:14:28.326: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun  5 13:14:28.326: INFO: Node k8sconformance-m02 is running 0 daemon pod, expected 1
  Jun  5 13:14:29.322: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Jun  5 13:14:29.322: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 06/05/24 13:14:29.326
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-307, will wait for the garbage collector to delete the pods @ 06/05/24 13:14:29.326
  Jun  5 13:14:29.382: INFO: Deleting DaemonSet.extensions daemon-set took: 3.998438ms
  Jun  5 13:14:29.482: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.542153ms
  Jun  5 13:14:30.988: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun  5 13:14:30.988: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Jun  5 13:14:30.990: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"3952"},"items":null}

  Jun  5 13:14:30.992: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"3952"},"items":null}

  Jun  5 13:14:31.007: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-307" for this suite. @ 06/05/24 13:14:31.011
• [6.755 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PreStop should call prestop when killing a pod [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 06/05/24 13:14:31.019
  Jun  5 13:14:31.019: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename prestop @ 06/05/24 13:14:31.02
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:14:31.032
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:14:31.034
  STEP: Creating server pod server in namespace prestop-982 @ 06/05/24 13:14:31.036
  STEP: Waiting for pods to come up. @ 06/05/24 13:14:31.042
  STEP: Creating tester pod tester in namespace prestop-982 @ 06/05/24 13:14:33.055
  STEP: Deleting pre-stop pod @ 06/05/24 13:14:35.074
  Jun  5 13:14:40.088: INFO: Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  STEP: Deleting the server pod @ 06/05/24 13:14:40.089
  Jun  5 13:14:40.102: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "prestop-982" for this suite. @ 06/05/24 13:14:40.106
• [9.093 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:170
  STEP: Creating a kubernetes client @ 06/05/24 13:14:40.113
  Jun  5 13:14:40.113: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename emptydir @ 06/05/24 13:14:40.114
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:14:40.126
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:14:40.129
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 06/05/24 13:14:40.131
  STEP: Saw pod success @ 06/05/24 13:14:44.143
  Jun  5 13:14:44.144: INFO: Trying to get logs from node k8sconformance-m02 pod pod-f5b0f8ce-6c49-4c18-90d6-ee99ec449bd7 container test-container: <nil>
  STEP: delete the pod @ 06/05/24 13:14:44.148
  Jun  5 13:14:44.157: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2955" for this suite. @ 06/05/24 13:14:44.158
• [4.047 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:100
  STEP: Creating a kubernetes client @ 06/05/24 13:14:44.16
  Jun  5 13:14:44.160: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename projected @ 06/05/24 13:14:44.161
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:14:44.166
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:14:44.168
  STEP: Creating configMap with name projected-configmap-test-volume-map-30a09c95-0591-46b1-84db-8f31c3183117 @ 06/05/24 13:14:44.169
  STEP: Creating a pod to test consume configMaps @ 06/05/24 13:14:44.171
  STEP: Saw pod success @ 06/05/24 13:14:48.189
  Jun  5 13:14:48.192: INFO: Trying to get logs from node k8sconformance-m02 pod pod-projected-configmaps-bcbbe526-57c5-4848-a9c4-b1406139b87c container agnhost-container: <nil>
  STEP: delete the pod @ 06/05/24 13:14:48.2
  Jun  5 13:14:48.211: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4330" for this suite. @ 06/05/24 13:14:48.215
• [4.059 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3154
  STEP: Creating a kubernetes client @ 06/05/24 13:14:48.22
  Jun  5 13:14:48.220: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename services @ 06/05/24 13:14:48.221
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:14:48.232
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:14:48.235
  STEP: creating an Endpoint @ 06/05/24 13:14:48.24
  STEP: waiting for available Endpoint @ 06/05/24 13:14:48.243
  STEP: listing all Endpoints @ 06/05/24 13:14:48.245
  STEP: updating the Endpoint @ 06/05/24 13:14:48.247
  STEP: fetching the Endpoint @ 06/05/24 13:14:48.252
  STEP: patching the Endpoint @ 06/05/24 13:14:48.253
  STEP: fetching the Endpoint @ 06/05/24 13:14:48.259
  STEP: deleting the Endpoint by Collection @ 06/05/24 13:14:48.261
  STEP: waiting for Endpoint deletion @ 06/05/24 13:14:48.264
  STEP: fetching the Endpoint @ 06/05/24 13:14:48.265
  Jun  5 13:14:48.266: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-452" for this suite. @ 06/05/24 13:14:48.268
• [0.051 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:46
  STEP: Creating a kubernetes client @ 06/05/24 13:14:48.271
  Jun  5 13:14:48.271: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename downward-api @ 06/05/24 13:14:48.272
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:14:48.282
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:14:48.285
  STEP: Creating a pod to test downward api env vars @ 06/05/24 13:14:48.287
  STEP: Saw pod success @ 06/05/24 13:14:52.304
  Jun  5 13:14:52.307: INFO: Trying to get logs from node k8sconformance-m02 pod downward-api-943bbaaf-b589-495b-ba42-aa59db574607 container dapi-container: <nil>
  STEP: delete the pod @ 06/05/24 13:14:52.317
  Jun  5 13:14:52.332: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1412" for this suite. @ 06/05/24 13:14:52.335
• [4.068 seconds]
------------------------------
SS
------------------------------
[sig-network] Services should delete a collection of services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3565
  STEP: Creating a kubernetes client @ 06/05/24 13:14:52.339
  Jun  5 13:14:52.339: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename services @ 06/05/24 13:14:52.34
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:14:52.353
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:14:52.356
  STEP: creating a collection of services @ 06/05/24 13:14:52.359
  Jun  5 13:14:52.359: INFO: Creating e2e-svc-a-s5vhq
  Jun  5 13:14:52.370: INFO: Creating e2e-svc-b-48cjv
  Jun  5 13:14:52.382: INFO: Creating e2e-svc-c-ghsrf
  STEP: deleting service collection @ 06/05/24 13:14:52.396
  Jun  5 13:14:52.418: INFO: Collection of services has been deleted
  Jun  5 13:14:52.418: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4719" for this suite. @ 06/05/24 13:14:52.421
• [0.099 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:572
  STEP: Creating a kubernetes client @ 06/05/24 13:14:52.438
  Jun  5 13:14:52.438: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename webhook @ 06/05/24 13:14:52.439
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:14:52.446
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:14:52.447
  STEP: Setting up server cert @ 06/05/24 13:14:52.459
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/05/24 13:14:52.776
  STEP: Deploying the webhook pod @ 06/05/24 13:14:52.782
  STEP: Wait for the deployment to be ready @ 06/05/24 13:14:52.788
  Jun  5 13:14:52.793: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 06/05/24 13:14:54.804
  STEP: Verifying the service has paired with the endpoint @ 06/05/24 13:14:54.817
  Jun  5 13:14:55.818: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 06/05/24 13:14:55.888
  Jun  5 13:15:05.904: INFO: Waiting for webhook configuration to be ready...
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 06/05/24 13:15:06.025
  STEP: Deleting the collection of validation webhooks @ 06/05/24 13:15:06.05
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 06/05/24 13:15:06.08
  Jun  5 13:15:06.117: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3362" for this suite. @ 06/05/24 13:15:06.121
  STEP: Destroying namespace "webhook-markers-4566" for this suite. @ 06/05/24 13:15:06.125
• [13.693 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:168
  STEP: Creating a kubernetes client @ 06/05/24 13:15:06.132
  Jun  5 13:15:06.132: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename container-probe @ 06/05/24 13:15:06.132
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:15:06.141
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:15:06.143
  STEP: Creating pod liveness-50ea6a10-9783-47f7-a4d9-760e5ada8ec3 in namespace container-probe-660 @ 06/05/24 13:15:06.144
  STEP: checking the pod's current state and verifying that restartCount is present @ 06/05/24 13:15:08.16
  Jun  5 13:15:08.164: INFO: Initial restart count of pod liveness-50ea6a10-9783-47f7-a4d9-760e5ada8ec3 is 0
  Jun  5 13:15:08.166: INFO: Get pod liveness-50ea6a10-9783-47f7-a4d9-760e5ada8ec3 in namespace container-probe-660
  Jun  5 13:15:10.171: INFO: Get pod liveness-50ea6a10-9783-47f7-a4d9-760e5ada8ec3 in namespace container-probe-660
  Jun  5 13:15:12.177: INFO: Get pod liveness-50ea6a10-9783-47f7-a4d9-760e5ada8ec3 in namespace container-probe-660
  Jun  5 13:15:14.183: INFO: Get pod liveness-50ea6a10-9783-47f7-a4d9-760e5ada8ec3 in namespace container-probe-660
  Jun  5 13:15:16.189: INFO: Get pod liveness-50ea6a10-9783-47f7-a4d9-760e5ada8ec3 in namespace container-probe-660
  Jun  5 13:15:18.197: INFO: Get pod liveness-50ea6a10-9783-47f7-a4d9-760e5ada8ec3 in namespace container-probe-660
  Jun  5 13:15:20.203: INFO: Get pod liveness-50ea6a10-9783-47f7-a4d9-760e5ada8ec3 in namespace container-probe-660
  Jun  5 13:15:22.209: INFO: Get pod liveness-50ea6a10-9783-47f7-a4d9-760e5ada8ec3 in namespace container-probe-660
  Jun  5 13:15:24.216: INFO: Get pod liveness-50ea6a10-9783-47f7-a4d9-760e5ada8ec3 in namespace container-probe-660
  Jun  5 13:15:26.221: INFO: Get pod liveness-50ea6a10-9783-47f7-a4d9-760e5ada8ec3 in namespace container-probe-660
  Jun  5 13:15:28.228: INFO: Get pod liveness-50ea6a10-9783-47f7-a4d9-760e5ada8ec3 in namespace container-probe-660
  Jun  5 13:15:28.228: INFO: Restart count of pod container-probe-660/liveness-50ea6a10-9783-47f7-a4d9-760e5ada8ec3 is now 1 (20.064010247s elapsed)
  STEP: deleting the pod @ 06/05/24 13:15:28.228
  Jun  5 13:15:28.239: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-660" for this suite. @ 06/05/24 13:15:28.242
• [22.115 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:531
  STEP: Creating a kubernetes client @ 06/05/24 13:15:28.247
  Jun  5 13:15:28.247: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename svcaccounts @ 06/05/24 13:15:28.249
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:15:28.257
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:15:28.26
  Jun  5 13:15:28.268: INFO: created pod
  STEP: Saw pod success @ 06/05/24 13:15:32.284
  Jun  5 13:16:02.284: INFO: polling logs
  Jun  5 13:16:02.295: INFO: Pod logs: 
  I0605 13:15:28.908280       1 log.go:245] OK: Got token
  I0605 13:15:28.908317       1 log.go:245] validating with in-cluster discovery
  I0605 13:15:28.908445       1 log.go:245] OK: got issuer https://kubernetes.default.svc.cluster.local
  I0605 13:15:28.908457       1 log.go:245] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-798:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc00025da20), NotBefore:(*jwt.NumericDate)(0xc00025db08), IssuedAt:(*jwt.NumericDate)(0xc00025da30), ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-798", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"60538a4d-fdb2-4017-8eb9-8217ee08cc70"}}}
  I0605 13:15:28.914003       1 log.go:245] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc.cluster.local
  I0605 13:15:28.917909       1 log.go:245] OK: Validated signature on JWT
  I0605 13:15:28.918003       1 log.go:245] OK: Got valid claims from token!
  I0605 13:15:28.918027       1 log.go:245] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-798:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc0006908f0), NotBefore:(*jwt.NumericDate)(0xc000690918), IssuedAt:(*jwt.NumericDate)(0xc0006908f8), ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-798", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"60538a4d-fdb2-4017-8eb9-8217ee08cc70"}}}

  Jun  5 13:16:02.295: INFO: completed pod
  Jun  5 13:16:02.300: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-798" for this suite. @ 06/05/24 13:16:02.303
• [34.062 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2236
  STEP: Creating a kubernetes client @ 06/05/24 13:16:02.309
  Jun  5 13:16:02.309: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename services @ 06/05/24 13:16:02.31
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:16:02.321
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:16:02.325
  STEP: creating service in namespace services-6290 @ 06/05/24 13:16:02.328
  STEP: creating service affinity-nodeport-transition in namespace services-6290 @ 06/05/24 13:16:02.328
  STEP: creating replication controller affinity-nodeport-transition in namespace services-6290 @ 06/05/24 13:16:02.341
  I0605 13:16:02.348686      22 runners.go:197] Created replication controller with name: affinity-nodeport-transition, namespace: services-6290, replica count: 3
  I0605 13:16:05.400504      22 runners.go:197] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jun  5 13:16:05.411: INFO: Creating new exec pod
  Jun  5 13:16:08.427: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=services-6290 exec execpod-affinitysplhl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  Jun  5 13:16:08.518: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition 80 port [tcp/http] succeeded!\n"
  Jun  5 13:16:08.518: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun  5 13:16:08.518: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=services-6290 exec execpod-affinitysplhl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.98.26.8 80'
  Jun  5 13:16:08.615: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.98.26.8 80\nConnection to 10.98.26.8 80 port [tcp/http] succeeded!\n"
  Jun  5 13:16:08.615: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun  5 13:16:08.615: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=services-6290 exec execpod-affinitysplhl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.67.2 31461'
  Jun  5 13:16:08.712: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.67.2 31461\nConnection to 192.168.67.2 31461 port [tcp/*] succeeded!\n"
  Jun  5 13:16:08.712: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun  5 13:16:08.712: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=services-6290 exec execpod-affinitysplhl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.67.3 31461'
  Jun  5 13:16:08.808: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.67.3 31461\nConnection to 192.168.67.3 31461 port [tcp/*] succeeded!\n"
  Jun  5 13:16:08.808: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun  5 13:16:08.817: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=services-6290 exec execpod-affinitysplhl -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.67.2:31461/ ; done'
  Jun  5 13:16:08.988: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.67.2:31461/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.67.2:31461/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.67.2:31461/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.67.2:31461/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.67.2:31461/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.67.2:31461/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.67.2:31461/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.67.2:31461/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.67.2:31461/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.67.2:31461/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.67.2:31461/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.67.2:31461/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.67.2:31461/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.67.2:31461/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.67.2:31461/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.67.2:31461/\n"
  Jun  5 13:16:08.988: INFO: stdout: "\naffinity-nodeport-transition-sxhh9\naffinity-nodeport-transition-sxhh9\naffinity-nodeport-transition-g2td2\naffinity-nodeport-transition-sxhh9\naffinity-nodeport-transition-9rpld\naffinity-nodeport-transition-9rpld\naffinity-nodeport-transition-sxhh9\naffinity-nodeport-transition-g2td2\naffinity-nodeport-transition-9rpld\naffinity-nodeport-transition-9rpld\naffinity-nodeport-transition-g2td2\naffinity-nodeport-transition-g2td2\naffinity-nodeport-transition-sxhh9\naffinity-nodeport-transition-9rpld\naffinity-nodeport-transition-9rpld\naffinity-nodeport-transition-g2td2"
  Jun  5 13:16:08.988: INFO: Received response from host: affinity-nodeport-transition-sxhh9
  Jun  5 13:16:08.988: INFO: Received response from host: affinity-nodeport-transition-sxhh9
  Jun  5 13:16:08.988: INFO: Received response from host: affinity-nodeport-transition-g2td2
  Jun  5 13:16:08.988: INFO: Received response from host: affinity-nodeport-transition-sxhh9
  Jun  5 13:16:08.988: INFO: Received response from host: affinity-nodeport-transition-9rpld
  Jun  5 13:16:08.988: INFO: Received response from host: affinity-nodeport-transition-9rpld
  Jun  5 13:16:08.988: INFO: Received response from host: affinity-nodeport-transition-sxhh9
  Jun  5 13:16:08.988: INFO: Received response from host: affinity-nodeport-transition-g2td2
  Jun  5 13:16:08.988: INFO: Received response from host: affinity-nodeport-transition-9rpld
  Jun  5 13:16:08.988: INFO: Received response from host: affinity-nodeport-transition-9rpld
  Jun  5 13:16:08.988: INFO: Received response from host: affinity-nodeport-transition-g2td2
  Jun  5 13:16:08.988: INFO: Received response from host: affinity-nodeport-transition-g2td2
  Jun  5 13:16:08.988: INFO: Received response from host: affinity-nodeport-transition-sxhh9
  Jun  5 13:16:08.988: INFO: Received response from host: affinity-nodeport-transition-9rpld
  Jun  5 13:16:08.988: INFO: Received response from host: affinity-nodeport-transition-9rpld
  Jun  5 13:16:08.988: INFO: Received response from host: affinity-nodeport-transition-g2td2
  Jun  5 13:16:08.992: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=services-6290 exec execpod-affinitysplhl -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.67.2:31461/ ; done'
  Jun  5 13:16:09.151: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.67.2:31461/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.67.2:31461/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.67.2:31461/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.67.2:31461/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.67.2:31461/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.67.2:31461/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.67.2:31461/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.67.2:31461/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.67.2:31461/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.67.2:31461/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.67.2:31461/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.67.2:31461/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.67.2:31461/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.67.2:31461/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.67.2:31461/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.67.2:31461/\n"
  Jun  5 13:16:09.151: INFO: stdout: "\naffinity-nodeport-transition-sxhh9\naffinity-nodeport-transition-sxhh9\naffinity-nodeport-transition-sxhh9\naffinity-nodeport-transition-sxhh9\naffinity-nodeport-transition-sxhh9\naffinity-nodeport-transition-sxhh9\naffinity-nodeport-transition-sxhh9\naffinity-nodeport-transition-sxhh9\naffinity-nodeport-transition-sxhh9\naffinity-nodeport-transition-sxhh9\naffinity-nodeport-transition-sxhh9\naffinity-nodeport-transition-sxhh9\naffinity-nodeport-transition-sxhh9\naffinity-nodeport-transition-sxhh9\naffinity-nodeport-transition-sxhh9\naffinity-nodeport-transition-sxhh9"
  Jun  5 13:16:09.151: INFO: Received response from host: affinity-nodeport-transition-sxhh9
  Jun  5 13:16:09.151: INFO: Received response from host: affinity-nodeport-transition-sxhh9
  Jun  5 13:16:09.151: INFO: Received response from host: affinity-nodeport-transition-sxhh9
  Jun  5 13:16:09.151: INFO: Received response from host: affinity-nodeport-transition-sxhh9
  Jun  5 13:16:09.151: INFO: Received response from host: affinity-nodeport-transition-sxhh9
  Jun  5 13:16:09.151: INFO: Received response from host: affinity-nodeport-transition-sxhh9
  Jun  5 13:16:09.151: INFO: Received response from host: affinity-nodeport-transition-sxhh9
  Jun  5 13:16:09.151: INFO: Received response from host: affinity-nodeport-transition-sxhh9
  Jun  5 13:16:09.151: INFO: Received response from host: affinity-nodeport-transition-sxhh9
  Jun  5 13:16:09.151: INFO: Received response from host: affinity-nodeport-transition-sxhh9
  Jun  5 13:16:09.151: INFO: Received response from host: affinity-nodeport-transition-sxhh9
  Jun  5 13:16:09.151: INFO: Received response from host: affinity-nodeport-transition-sxhh9
  Jun  5 13:16:09.151: INFO: Received response from host: affinity-nodeport-transition-sxhh9
  Jun  5 13:16:09.151: INFO: Received response from host: affinity-nodeport-transition-sxhh9
  Jun  5 13:16:09.151: INFO: Received response from host: affinity-nodeport-transition-sxhh9
  Jun  5 13:16:09.151: INFO: Received response from host: affinity-nodeport-transition-sxhh9
  Jun  5 13:16:09.151: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-6290, will wait for the garbage collector to delete the pods @ 06/05/24 13:16:09.161
  Jun  5 13:16:09.218: INFO: Deleting ReplicationController affinity-nodeport-transition took: 4.743432ms
  Jun  5 13:16:09.318: INFO: Terminating ReplicationController affinity-nodeport-transition pods took: 100.125264ms
  Jun  5 13:16:12.338: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6290" for this suite. @ 06/05/24 13:16:12.341
• [10.037 seconds]
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:450
  STEP: Creating a kubernetes client @ 06/05/24 13:16:12.347
  Jun  5 13:16:12.347: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename taint-multiple-pods @ 06/05/24 13:16:12.347
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:16:12.356
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:16:12.358
  Jun  5 13:16:12.360: INFO: Waiting up to 1m0s for all nodes to be ready
  Jun  5 13:17:12.361: INFO: Waiting for terminating namespaces to be deleted...
  Jun  5 13:17:12.366: INFO: Starting informer...
  STEP: Starting pods... @ 06/05/24 13:17:12.366
  Jun  5 13:17:12.587: INFO: Pod1 is running on k8sconformance-m02. Tainting Node
  Jun  5 13:17:14.807: INFO: Pod2 is running on k8sconformance-m02. Tainting Node
  STEP: Trying to apply a taint on the Node @ 06/05/24 13:17:14.807
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 06/05/24 13:17:14.817
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 06/05/24 13:17:14.82
  Jun  5 13:17:20.848: INFO: Noticed Pod "taint-eviction-b1" gets evicted.
  Jun  5 13:17:41.031: INFO: Noticed Pod "taint-eviction-b2" gets evicted.
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 06/05/24 13:17:41.042
  Jun  5 13:17:41.045: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-multiple-pods-1386" for this suite. @ 06/05/24 13:17:41.047
• [88.705 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 06/05/24 13:17:41.052
  Jun  5 13:17:41.052: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename pods @ 06/05/24 13:17:41.053
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:17:41.067
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:17:41.07
  STEP: Saw pod success @ 06/05/24 13:17:47.109
  Jun  5 13:17:47.112: INFO: Trying to get logs from node k8sconformance-m02 pod client-envvars-d1a3f44f-b8ef-45cc-9244-8fb75b2e8525 container env3cont: <nil>
  STEP: delete the pod @ 06/05/24 13:17:47.128
  Jun  5 13:17:47.143: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7828" for this suite. @ 06/05/24 13:17:47.146
• [6.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance] [sig-storage, Serial, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:188
  STEP: Creating a kubernetes client @ 06/05/24 13:17:47.152
  Jun  5 13:17:47.152: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename emptydir-wrapper @ 06/05/24 13:17:47.152
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:17:47.162
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:17:47.165
  STEP: Creating 50 configmaps @ 06/05/24 13:17:47.168
  STEP: Creating RC which spawns configmap-volume pods @ 06/05/24 13:17:47.409
  Jun  5 13:17:47.506: INFO: Pod name wrapped-volume-race-fb71424c-1a4e-434b-b67d-1b040324b526: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 06/05/24 13:17:47.506
  STEP: Creating RC which spawns configmap-volume pods @ 06/05/24 13:17:49.578
  Jun  5 13:17:49.591: INFO: Pod name wrapped-volume-race-a4da082e-9b73-4876-8663-bec46bce67e5: Found 0 pods out of 5
  Jun  5 13:17:54.602: INFO: Pod name wrapped-volume-race-a4da082e-9b73-4876-8663-bec46bce67e5: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 06/05/24 13:17:54.602
  STEP: Creating RC which spawns configmap-volume pods @ 06/05/24 13:17:54.62
  Jun  5 13:17:54.643: INFO: Pod name wrapped-volume-race-d6de0f7a-4c9b-4bc5-b945-61cdd5be9616: Found 0 pods out of 5
  Jun  5 13:17:59.655: INFO: Pod name wrapped-volume-race-d6de0f7a-4c9b-4bc5-b945-61cdd5be9616: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 06/05/24 13:17:59.655
  STEP: deleting ReplicationController wrapped-volume-race-d6de0f7a-4c9b-4bc5-b945-61cdd5be9616 in namespace emptydir-wrapper-3386, will wait for the garbage collector to delete the pods @ 06/05/24 13:17:59.67
  Jun  5 13:17:59.732: INFO: Deleting ReplicationController wrapped-volume-race-d6de0f7a-4c9b-4bc5-b945-61cdd5be9616 took: 8.516338ms
  Jun  5 13:17:59.832: INFO: Terminating ReplicationController wrapped-volume-race-d6de0f7a-4c9b-4bc5-b945-61cdd5be9616 pods took: 100.441915ms
  STEP: deleting ReplicationController wrapped-volume-race-a4da082e-9b73-4876-8663-bec46bce67e5 in namespace emptydir-wrapper-3386, will wait for the garbage collector to delete the pods @ 06/05/24 13:18:00.733
  Jun  5 13:18:00.798: INFO: Deleting ReplicationController wrapped-volume-race-a4da082e-9b73-4876-8663-bec46bce67e5 took: 8.216277ms
  Jun  5 13:18:00.898: INFO: Terminating ReplicationController wrapped-volume-race-a4da082e-9b73-4876-8663-bec46bce67e5 pods took: 100.333357ms
  STEP: deleting ReplicationController wrapped-volume-race-fb71424c-1a4e-434b-b67d-1b040324b526 in namespace emptydir-wrapper-3386, will wait for the garbage collector to delete the pods @ 06/05/24 13:18:01.799
  Jun  5 13:18:01.865: INFO: Deleting ReplicationController wrapped-volume-race-fb71424c-1a4e-434b-b67d-1b040324b526 took: 9.710554ms
  Jun  5 13:18:01.966: INFO: Terminating ReplicationController wrapped-volume-race-fb71424c-1a4e-434b-b67d-1b040324b526 pods took: 100.607879ms
  STEP: Cleaning up the configMaps @ 06/05/24 13:18:02.567
  Jun  5 13:18:02.755: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-3386" for this suite. @ 06/05/24 13:18:02.758
• [15.610 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:135
  STEP: Creating a kubernetes client @ 06/05/24 13:18:02.762
  Jun  5 13:18:02.762: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename security-context @ 06/05/24 13:18:02.763
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:18:02.772
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:18:02.775
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 06/05/24 13:18:02.778
  STEP: Saw pod success @ 06/05/24 13:18:06.795
  Jun  5 13:18:06.799: INFO: Trying to get logs from node k8sconformance-m02 pod security-context-5036e577-6a5f-4dd0-af0a-3f99ff2783d7 container test-container: <nil>
  STEP: delete the pod @ 06/05/24 13:18:06.805
  Jun  5 13:18:06.820: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-977" for this suite. @ 06/05/24 13:18:06.823
• [4.065 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:55
  STEP: Creating a kubernetes client @ 06/05/24 13:18:06.828
  Jun  5 13:18:06.828: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename projected @ 06/05/24 13:18:06.829
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:18:06.838
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:18:06.841
  STEP: Creating a pod to test downward API volume plugin @ 06/05/24 13:18:06.844
  STEP: Saw pod success @ 06/05/24 13:18:08.856
  Jun  5 13:18:08.859: INFO: Trying to get logs from node k8sconformance-m02 pod downwardapi-volume-9b19c985-76d1-4c45-8b6c-c0e7735985a7 container client-container: <nil>
  STEP: delete the pod @ 06/05/24 13:18:08.866
  Jun  5 13:18:08.880: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1805" for this suite. @ 06/05/24 13:18:08.882
• [2.059 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pods.go:163
  STEP: Creating a kubernetes client @ 06/05/24 13:18:08.887
  Jun  5 13:18:08.887: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename pods @ 06/05/24 13:18:08.888
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:18:08.896
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:18:08.899
  STEP: creating the pod @ 06/05/24 13:18:08.901
  STEP: submitting the pod to kubernetes @ 06/05/24 13:18:08.901
  STEP: verifying QOS class is set on the pod @ 06/05/24 13:18:08.906
  Jun  5 13:18:08.908: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3147" for this suite. @ 06/05/24 13:18:08.912
• [0.031 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:78
  STEP: Creating a kubernetes client @ 06/05/24 13:18:08.918
  Jun  5 13:18:08.918: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename resourcequota @ 06/05/24 13:18:08.919
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:18:08.927
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:18:08.929
  STEP: Counting existing ResourceQuota @ 06/05/24 13:18:08.93
  STEP: Creating a ResourceQuota @ 06/05/24 13:18:13.934
  STEP: Ensuring resource quota status is calculated @ 06/05/24 13:18:13.94
  Jun  5 13:18:15.944: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3413" for this suite. @ 06/05/24 13:18:15.948
• [7.036 seconds]
------------------------------
S
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:166
  STEP: Creating a kubernetes client @ 06/05/24 13:18:15.954
  Jun  5 13:18:15.954: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename replicaset @ 06/05/24 13:18:15.955
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:18:15.966
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:18:15.969
  STEP: Create a ReplicaSet @ 06/05/24 13:18:15.971
  STEP: Verify that the required pods have come up @ 06/05/24 13:18:15.976
  Jun  5 13:18:15.979: INFO: Pod name sample-pod: Found 0 pods out of 3
  Jun  5 13:18:20.984: INFO: Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 06/05/24 13:18:20.984
  Jun  5 13:18:20.986: INFO: Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 06/05/24 13:18:20.986
  STEP: DeleteCollection of the ReplicaSets @ 06/05/24 13:18:20.988
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 06/05/24 13:18:20.995
  Jun  5 13:18:20.998: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-6937" for this suite. @ 06/05/24 13:18:21.001
• [5.052 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:64
  STEP: Creating a kubernetes client @ 06/05/24 13:18:21.006
  Jun  5 13:18:21.007: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename field-validation @ 06/05/24 13:18:21.008
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:18:21.026
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:18:21.032
  STEP: apply creating a deployment @ 06/05/24 13:18:21.036
  Jun  5 13:18:21.044: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-5883" for this suite. @ 06/05/24 13:18:21.045
• [0.043 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 06/05/24 13:18:21.05
  Jun  5 13:18:21.050: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename subpath @ 06/05/24 13:18:21.05
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:18:21.055
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:18:21.057
  STEP: Setting up data @ 06/05/24 13:18:21.066
  STEP: Creating pod pod-subpath-test-projected-gxv4 @ 06/05/24 13:18:21.076
  STEP: Creating a pod to test atomic-volume-subpath @ 06/05/24 13:18:21.076
  STEP: Saw pod success @ 06/05/24 13:18:45.144
  Jun  5 13:18:45.147: INFO: Trying to get logs from node k8sconformance-m02 pod pod-subpath-test-projected-gxv4 container test-container-subpath-projected-gxv4: <nil>
  STEP: delete the pod @ 06/05/24 13:18:45.157
  STEP: Deleting pod pod-subpath-test-projected-gxv4 @ 06/05/24 13:18:45.173
  Jun  5 13:18:45.173: INFO: Deleting pod "pod-subpath-test-projected-gxv4" in namespace "subpath-2278"
  Jun  5 13:18:45.175: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-2278" for this suite. @ 06/05/24 13:18:45.178
• [24.133 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 06/05/24 13:18:45.183
  Jun  5 13:18:45.183: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename secrets @ 06/05/24 13:18:45.185
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:18:45.195
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:18:45.198
  STEP: Creating secret with name secret-test-map-2c70531b-1a86-443f-b61c-c8c3355325dd @ 06/05/24 13:18:45.2
  STEP: Creating a pod to test consume secrets @ 06/05/24 13:18:45.204
  STEP: Saw pod success @ 06/05/24 13:18:49.225
  Jun  5 13:18:49.228: INFO: Trying to get logs from node k8sconformance-m02 pod pod-secrets-0d963688-efa9-46b1-a3bc-dfa3cd3d6497 container secret-volume-test: <nil>
  STEP: delete the pod @ 06/05/24 13:18:49.236
  Jun  5 13:18:49.250: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3806" for this suite. @ 06/05/24 13:18:49.253
• [4.077 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:164
  STEP: Creating a kubernetes client @ 06/05/24 13:18:49.26
  Jun  5 13:18:49.260: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename projected @ 06/05/24 13:18:49.261
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:18:49.273
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:18:49.276
  STEP: Creating the pod @ 06/05/24 13:18:49.279
  Jun  5 13:18:51.821: INFO: Successfully updated pod "annotationupdate4028df00-516e-416d-9689-80e3a6fb871f"
  Jun  5 13:18:53.843: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7182" for this suite. @ 06/05/24 13:18:53.846
• [4.591 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 06/05/24 13:18:53.852
  Jun  5 13:18:53.852: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename events @ 06/05/24 13:18:53.853
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:18:53.863
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:18:53.866
  STEP: creating a test event @ 06/05/24 13:18:53.868
  STEP: listing events in all namespaces @ 06/05/24 13:18:53.874
  STEP: listing events in test namespace @ 06/05/24 13:18:53.878
  STEP: listing events with field selection filtering on source @ 06/05/24 13:18:53.88
  STEP: listing events with field selection filtering on reportingController @ 06/05/24 13:18:53.882
  STEP: getting the test event @ 06/05/24 13:18:53.883
  STEP: patching the test event @ 06/05/24 13:18:53.885
  STEP: getting the test event @ 06/05/24 13:18:53.893
  STEP: updating the test event @ 06/05/24 13:18:53.895
  STEP: getting the test event @ 06/05/24 13:18:53.9
  STEP: deleting the test event @ 06/05/24 13:18:53.902
  STEP: listing events in all namespaces @ 06/05/24 13:18:53.91
  STEP: listing events in test namespace @ 06/05/24 13:18:53.915
  Jun  5 13:18:53.916: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-936" for this suite. @ 06/05/24 13:18:53.919
• [0.071 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:198
  STEP: Creating a kubernetes client @ 06/05/24 13:18:53.923
  Jun  5 13:18:53.923: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename container-probe @ 06/05/24 13:18:53.924
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:18:53.935
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:18:53.938
  STEP: Creating pod liveness-d7945961-a9ac-4b88-8a0a-763a8d0ae548 in namespace container-probe-212 @ 06/05/24 13:18:53.941
  STEP: checking the pod's current state and verifying that restartCount is present @ 06/05/24 13:18:55.955
  Jun  5 13:18:55.957: INFO: Initial restart count of pod liveness-d7945961-a9ac-4b88-8a0a-763a8d0ae548 is 0
  Jun  5 13:18:55.960: INFO: Get pod liveness-d7945961-a9ac-4b88-8a0a-763a8d0ae548 in namespace container-probe-212
  Jun  5 13:18:57.966: INFO: Get pod liveness-d7945961-a9ac-4b88-8a0a-763a8d0ae548 in namespace container-probe-212
  Jun  5 13:18:59.970: INFO: Get pod liveness-d7945961-a9ac-4b88-8a0a-763a8d0ae548 in namespace container-probe-212
  Jun  5 13:19:01.976: INFO: Get pod liveness-d7945961-a9ac-4b88-8a0a-763a8d0ae548 in namespace container-probe-212
  Jun  5 13:19:03.981: INFO: Get pod liveness-d7945961-a9ac-4b88-8a0a-763a8d0ae548 in namespace container-probe-212
  Jun  5 13:19:05.989: INFO: Get pod liveness-d7945961-a9ac-4b88-8a0a-763a8d0ae548 in namespace container-probe-212
  Jun  5 13:19:07.994: INFO: Get pod liveness-d7945961-a9ac-4b88-8a0a-763a8d0ae548 in namespace container-probe-212
  Jun  5 13:19:10.001: INFO: Get pod liveness-d7945961-a9ac-4b88-8a0a-763a8d0ae548 in namespace container-probe-212
  Jun  5 13:19:12.007: INFO: Get pod liveness-d7945961-a9ac-4b88-8a0a-763a8d0ae548 in namespace container-probe-212
  Jun  5 13:19:14.014: INFO: Get pod liveness-d7945961-a9ac-4b88-8a0a-763a8d0ae548 in namespace container-probe-212
  Jun  5 13:19:16.021: INFO: Get pod liveness-d7945961-a9ac-4b88-8a0a-763a8d0ae548 in namespace container-probe-212
  Jun  5 13:19:16.021: INFO: Restart count of pod container-probe-212/liveness-d7945961-a9ac-4b88-8a0a-763a8d0ae548 is now 1 (20.063118198s elapsed)
  Jun  5 13:19:18.026: INFO: Get pod liveness-d7945961-a9ac-4b88-8a0a-763a8d0ae548 in namespace container-probe-212
  Jun  5 13:19:20.032: INFO: Get pod liveness-d7945961-a9ac-4b88-8a0a-763a8d0ae548 in namespace container-probe-212
  Jun  5 13:19:22.038: INFO: Get pod liveness-d7945961-a9ac-4b88-8a0a-763a8d0ae548 in namespace container-probe-212
  Jun  5 13:19:24.044: INFO: Get pod liveness-d7945961-a9ac-4b88-8a0a-763a8d0ae548 in namespace container-probe-212
  Jun  5 13:19:26.051: INFO: Get pod liveness-d7945961-a9ac-4b88-8a0a-763a8d0ae548 in namespace container-probe-212
  Jun  5 13:19:28.057: INFO: Get pod liveness-d7945961-a9ac-4b88-8a0a-763a8d0ae548 in namespace container-probe-212
  Jun  5 13:19:30.064: INFO: Get pod liveness-d7945961-a9ac-4b88-8a0a-763a8d0ae548 in namespace container-probe-212
  Jun  5 13:19:32.070: INFO: Get pod liveness-d7945961-a9ac-4b88-8a0a-763a8d0ae548 in namespace container-probe-212
  Jun  5 13:19:34.075: INFO: Get pod liveness-d7945961-a9ac-4b88-8a0a-763a8d0ae548 in namespace container-probe-212
  Jun  5 13:19:36.081: INFO: Get pod liveness-d7945961-a9ac-4b88-8a0a-763a8d0ae548 in namespace container-probe-212
  Jun  5 13:19:36.081: INFO: Restart count of pod container-probe-212/liveness-d7945961-a9ac-4b88-8a0a-763a8d0ae548 is now 2 (40.123774697s elapsed)
  Jun  5 13:19:38.087: INFO: Get pod liveness-d7945961-a9ac-4b88-8a0a-763a8d0ae548 in namespace container-probe-212
  Jun  5 13:19:40.093: INFO: Get pod liveness-d7945961-a9ac-4b88-8a0a-763a8d0ae548 in namespace container-probe-212
  Jun  5 13:19:42.098: INFO: Get pod liveness-d7945961-a9ac-4b88-8a0a-763a8d0ae548 in namespace container-probe-212
  Jun  5 13:19:44.105: INFO: Get pod liveness-d7945961-a9ac-4b88-8a0a-763a8d0ae548 in namespace container-probe-212
  Jun  5 13:19:46.111: INFO: Get pod liveness-d7945961-a9ac-4b88-8a0a-763a8d0ae548 in namespace container-probe-212
  Jun  5 13:19:48.117: INFO: Get pod liveness-d7945961-a9ac-4b88-8a0a-763a8d0ae548 in namespace container-probe-212
  Jun  5 13:19:50.123: INFO: Get pod liveness-d7945961-a9ac-4b88-8a0a-763a8d0ae548 in namespace container-probe-212
  Jun  5 13:19:52.128: INFO: Get pod liveness-d7945961-a9ac-4b88-8a0a-763a8d0ae548 in namespace container-probe-212
  Jun  5 13:19:54.136: INFO: Get pod liveness-d7945961-a9ac-4b88-8a0a-763a8d0ae548 in namespace container-probe-212
  Jun  5 13:19:56.142: INFO: Get pod liveness-d7945961-a9ac-4b88-8a0a-763a8d0ae548 in namespace container-probe-212
  Jun  5 13:19:56.142: INFO: Restart count of pod container-probe-212/liveness-d7945961-a9ac-4b88-8a0a-763a8d0ae548 is now 3 (1m0.184538218s elapsed)
  Jun  5 13:19:58.147: INFO: Get pod liveness-d7945961-a9ac-4b88-8a0a-763a8d0ae548 in namespace container-probe-212
  Jun  5 13:20:00.153: INFO: Get pod liveness-d7945961-a9ac-4b88-8a0a-763a8d0ae548 in namespace container-probe-212
  Jun  5 13:20:02.159: INFO: Get pod liveness-d7945961-a9ac-4b88-8a0a-763a8d0ae548 in namespace container-probe-212
  Jun  5 13:20:04.166: INFO: Get pod liveness-d7945961-a9ac-4b88-8a0a-763a8d0ae548 in namespace container-probe-212
  Jun  5 13:20:06.171: INFO: Get pod liveness-d7945961-a9ac-4b88-8a0a-763a8d0ae548 in namespace container-probe-212
  Jun  5 13:20:08.178: INFO: Get pod liveness-d7945961-a9ac-4b88-8a0a-763a8d0ae548 in namespace container-probe-212
  Jun  5 13:20:10.184: INFO: Get pod liveness-d7945961-a9ac-4b88-8a0a-763a8d0ae548 in namespace container-probe-212
  Jun  5 13:20:12.189: INFO: Get pod liveness-d7945961-a9ac-4b88-8a0a-763a8d0ae548 in namespace container-probe-212
  Jun  5 13:20:14.198: INFO: Get pod liveness-d7945961-a9ac-4b88-8a0a-763a8d0ae548 in namespace container-probe-212
  Jun  5 13:20:16.205: INFO: Get pod liveness-d7945961-a9ac-4b88-8a0a-763a8d0ae548 in namespace container-probe-212
  Jun  5 13:20:16.205: INFO: Restart count of pod container-probe-212/liveness-d7945961-a9ac-4b88-8a0a-763a8d0ae548 is now 4 (1m20.247108352s elapsed)
  Jun  5 13:20:18.211: INFO: Get pod liveness-d7945961-a9ac-4b88-8a0a-763a8d0ae548 in namespace container-probe-212
  Jun  5 13:20:20.217: INFO: Get pod liveness-d7945961-a9ac-4b88-8a0a-763a8d0ae548 in namespace container-probe-212
  Jun  5 13:20:22.222: INFO: Get pod liveness-d7945961-a9ac-4b88-8a0a-763a8d0ae548 in namespace container-probe-212
  Jun  5 13:20:24.229: INFO: Get pod liveness-d7945961-a9ac-4b88-8a0a-763a8d0ae548 in namespace container-probe-212
  Jun  5 13:20:26.235: INFO: Get pod liveness-d7945961-a9ac-4b88-8a0a-763a8d0ae548 in namespace container-probe-212
  Jun  5 13:20:28.241: INFO: Get pod liveness-d7945961-a9ac-4b88-8a0a-763a8d0ae548 in namespace container-probe-212
  Jun  5 13:20:30.248: INFO: Get pod liveness-d7945961-a9ac-4b88-8a0a-763a8d0ae548 in namespace container-probe-212
  Jun  5 13:20:32.253: INFO: Get pod liveness-d7945961-a9ac-4b88-8a0a-763a8d0ae548 in namespace container-probe-212
  Jun  5 13:20:34.260: INFO: Get pod liveness-d7945961-a9ac-4b88-8a0a-763a8d0ae548 in namespace container-probe-212
  Jun  5 13:20:36.267: INFO: Get pod liveness-d7945961-a9ac-4b88-8a0a-763a8d0ae548 in namespace container-probe-212
  Jun  5 13:20:38.271: INFO: Get pod liveness-d7945961-a9ac-4b88-8a0a-763a8d0ae548 in namespace container-probe-212
  Jun  5 13:20:40.278: INFO: Get pod liveness-d7945961-a9ac-4b88-8a0a-763a8d0ae548 in namespace container-probe-212
  Jun  5 13:20:42.283: INFO: Get pod liveness-d7945961-a9ac-4b88-8a0a-763a8d0ae548 in namespace container-probe-212
  Jun  5 13:20:44.290: INFO: Get pod liveness-d7945961-a9ac-4b88-8a0a-763a8d0ae548 in namespace container-probe-212
  Jun  5 13:20:46.297: INFO: Get pod liveness-d7945961-a9ac-4b88-8a0a-763a8d0ae548 in namespace container-probe-212
  Jun  5 13:20:48.302: INFO: Get pod liveness-d7945961-a9ac-4b88-8a0a-763a8d0ae548 in namespace container-probe-212
  Jun  5 13:20:50.305: INFO: Get pod liveness-d7945961-a9ac-4b88-8a0a-763a8d0ae548 in namespace container-probe-212
  Jun  5 13:20:52.310: INFO: Get pod liveness-d7945961-a9ac-4b88-8a0a-763a8d0ae548 in namespace container-probe-212
  Jun  5 13:20:54.317: INFO: Get pod liveness-d7945961-a9ac-4b88-8a0a-763a8d0ae548 in namespace container-probe-212
  Jun  5 13:20:56.323: INFO: Get pod liveness-d7945961-a9ac-4b88-8a0a-763a8d0ae548 in namespace container-probe-212
  Jun  5 13:20:58.330: INFO: Get pod liveness-d7945961-a9ac-4b88-8a0a-763a8d0ae548 in namespace container-probe-212
  Jun  5 13:21:00.336: INFO: Get pod liveness-d7945961-a9ac-4b88-8a0a-763a8d0ae548 in namespace container-probe-212
  Jun  5 13:21:02.342: INFO: Get pod liveness-d7945961-a9ac-4b88-8a0a-763a8d0ae548 in namespace container-probe-212
  Jun  5 13:21:04.349: INFO: Get pod liveness-d7945961-a9ac-4b88-8a0a-763a8d0ae548 in namespace container-probe-212
  Jun  5 13:21:06.355: INFO: Get pod liveness-d7945961-a9ac-4b88-8a0a-763a8d0ae548 in namespace container-probe-212
  Jun  5 13:21:08.361: INFO: Get pod liveness-d7945961-a9ac-4b88-8a0a-763a8d0ae548 in namespace container-probe-212
  Jun  5 13:21:10.367: INFO: Get pod liveness-d7945961-a9ac-4b88-8a0a-763a8d0ae548 in namespace container-probe-212
  Jun  5 13:21:12.373: INFO: Get pod liveness-d7945961-a9ac-4b88-8a0a-763a8d0ae548 in namespace container-probe-212
  Jun  5 13:21:14.381: INFO: Get pod liveness-d7945961-a9ac-4b88-8a0a-763a8d0ae548 in namespace container-probe-212
  Jun  5 13:21:16.387: INFO: Get pod liveness-d7945961-a9ac-4b88-8a0a-763a8d0ae548 in namespace container-probe-212
  Jun  5 13:21:16.387: INFO: Restart count of pod container-probe-212/liveness-d7945961-a9ac-4b88-8a0a-763a8d0ae548 is now 5 (2m20.429997235s elapsed)
  STEP: deleting the pod @ 06/05/24 13:21:16.388
  Jun  5 13:21:16.401: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-212" for this suite. @ 06/05/24 13:21:16.406
• [142.487 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:210
  STEP: Creating a kubernetes client @ 06/05/24 13:21:16.413
  Jun  5 13:21:16.413: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename webhook @ 06/05/24 13:21:16.414
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:21:16.427
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:21:16.43
  STEP: Setting up server cert @ 06/05/24 13:21:16.447
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/05/24 13:21:16.641
  STEP: Deploying the webhook pod @ 06/05/24 13:21:16.644
  STEP: Wait for the deployment to be ready @ 06/05/24 13:21:16.651
  Jun  5 13:21:16.654: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 06/05/24 13:21:18.665
  STEP: Verifying the service has paired with the endpoint @ 06/05/24 13:21:18.677
  Jun  5 13:21:19.678: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 06/05/24 13:21:19.683
  STEP: create a pod @ 06/05/24 13:21:19.699
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 06/05/24 13:21:21.711
  Jun  5 13:21:21.711: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=webhook-4151 attach --namespace=webhook-4151 to-be-attached-pod -i -c=container1'
  Jun  5 13:21:21.759: INFO: rc: 1
  Jun  5 13:21:21.788: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4151" for this suite. @ 06/05/24 13:21:21.79
  STEP: Destroying namespace "webhook-markers-9352" for this suite. @ 06/05/24 13:21:21.799
• [5.390 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Services should serve multiport endpoints from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:846
  STEP: Creating a kubernetes client @ 06/05/24 13:21:21.803
  Jun  5 13:21:21.803: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename services @ 06/05/24 13:21:21.804
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:21:21.814
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:21:21.816
  STEP: creating service multi-endpoint-test in namespace services-5095 @ 06/05/24 13:21:21.817
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-5095 to expose endpoints map[] @ 06/05/24 13:21:21.833
  Jun  5 13:21:21.835: INFO: Failed go get Endpoints object: endpoints "multi-endpoint-test" not found
  Jun  5 13:21:22.842: INFO: successfully validated that service multi-endpoint-test in namespace services-5095 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-5095 @ 06/05/24 13:21:22.842
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-5095 to expose endpoints map[pod1:[100]] @ 06/05/24 13:21:24.865
  Jun  5 13:21:24.872: INFO: successfully validated that service multi-endpoint-test in namespace services-5095 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-5095 @ 06/05/24 13:21:24.872
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-5095 to expose endpoints map[pod1:[100] pod2:[101]] @ 06/05/24 13:21:26.886
  Jun  5 13:21:26.896: INFO: successfully validated that service multi-endpoint-test in namespace services-5095 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 06/05/24 13:21:26.896
  Jun  5 13:21:26.896: INFO: Creating new exec pod
  Jun  5 13:21:29.909: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=services-5095 exec execpod7drfz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  Jun  5 13:21:30.017: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test 80 port [tcp/http] succeeded!\n"
  Jun  5 13:21:30.017: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun  5 13:21:30.017: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=services-5095 exec execpod7drfz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.96.220.252 80'
  Jun  5 13:21:30.118: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.96.220.252 80\nConnection to 10.96.220.252 80 port [tcp/http] succeeded!\n"
  Jun  5 13:21:30.118: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun  5 13:21:30.118: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=services-5095 exec execpod7drfz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  Jun  5 13:21:30.223: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test 81 port [tcp/*] succeeded!\n"
  Jun  5 13:21:30.223: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun  5 13:21:30.223: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=services-5095 exec execpod7drfz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.96.220.252 81'
  Jun  5 13:21:30.317: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.96.220.252 81\nConnection to 10.96.220.252 81 port [tcp/*] succeeded!\n"
  Jun  5 13:21:30.317: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-5095 @ 06/05/24 13:21:30.317
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-5095 to expose endpoints map[pod2:[101]] @ 06/05/24 13:21:30.325
  Jun  5 13:21:30.344: INFO: successfully validated that service multi-endpoint-test in namespace services-5095 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-5095 @ 06/05/24 13:21:30.344
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-5095 to expose endpoints map[] @ 06/05/24 13:21:30.364
  Jun  5 13:21:30.373: INFO: successfully validated that service multi-endpoint-test in namespace services-5095 exposes endpoints map[]
  Jun  5 13:21:30.387: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5095" for this suite. @ 06/05/24 13:21:30.39
• [8.591 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 06/05/24 13:21:30.394
  Jun  5 13:21:30.394: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename watch @ 06/05/24 13:21:30.395
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:21:30.401
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:21:30.403
  STEP: creating a new configmap @ 06/05/24 13:21:30.404
  STEP: modifying the configmap once @ 06/05/24 13:21:30.407
  STEP: modifying the configmap a second time @ 06/05/24 13:21:30.412
  STEP: deleting the configmap @ 06/05/24 13:21:30.416
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 06/05/24 13:21:30.418
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 06/05/24 13:21:30.419
  Jun  5 13:21:30.419: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-2048  b794b060-dca6-44d8-9f8a-c63c34a74040 5774 0 2024-06-05 13:21:30 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-06-05 13:21:30 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun  5 13:21:30.419: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-2048  b794b060-dca6-44d8-9f8a-c63c34a74040 5775 0 2024-06-05 13:21:30 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-06-05 13:21:30 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun  5 13:21:30.419: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-2048" for this suite. @ 06/05/24 13:21:30.421
• [0.029 seconds]
------------------------------
SSS
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3338
  STEP: Creating a kubernetes client @ 06/05/24 13:21:30.423
  Jun  5 13:21:30.423: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename services @ 06/05/24 13:21:30.424
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:21:30.429
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:21:30.43
  STEP: creating a Service @ 06/05/24 13:21:30.433
  STEP: watching for the Service to be added @ 06/05/24 13:21:30.442
  Jun  5 13:21:30.443: INFO: Found Service test-service-7wgcj in namespace services-9561 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 30819}]
  Jun  5 13:21:30.443: INFO: Service test-service-7wgcj created
  STEP: Getting /status @ 06/05/24 13:21:30.443
  Jun  5 13:21:30.446: INFO: Service test-service-7wgcj has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 06/05/24 13:21:30.446
  STEP: watching for the Service to be patched @ 06/05/24 13:21:30.449
  Jun  5 13:21:30.450: INFO: observed Service test-service-7wgcj in namespace services-9561 with annotations: map[] & LoadBalancer: {[]}
  Jun  5 13:21:30.450: INFO: Found Service test-service-7wgcj in namespace services-9561 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  <nil> []}]}
  Jun  5 13:21:30.450: INFO: Service test-service-7wgcj has service status patched
  STEP: updating the ServiceStatus @ 06/05/24 13:21:30.451
  Jun  5 13:21:30.456: INFO: updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 06/05/24 13:21:30.457
  Jun  5 13:21:30.458: INFO: Observed Service test-service-7wgcj in namespace services-9561 with annotations: map[] & Conditions: {[]}
  Jun  5 13:21:30.458: INFO: Observed event: &Service{ObjectMeta:{test-service-7wgcj  services-9561  3ac9344f-cfed-4f33-8590-be39a47905f7 5783 0 2024-06-05 13:21:30 +0000 UTC <nil> <nil> map[test-service-static:true] map[patchedstatus:true] [] [] [{e2e.test Update v1 2024-06-05 13:21:30 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:test-service-static":{}}},"f:spec":{"f:allocateLoadBalancerNodePorts":{},"f:externalTrafficPolicy":{},"f:internalTrafficPolicy":{},"f:loadBalancerClass":{},"f:ports":{".":{},"k:{\"port\":80,\"protocol\":\"TCP\"}":{".":{},"f:name":{},"f:port":{},"f:protocol":{},"f:targetPort":{}}},"f:sessionAffinity":{},"f:type":{}}} } {e2e.test Update v1 2024-06-05 13:21:30 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:patchedstatus":{}}},"f:status":{"f:loadBalancer":{"f:ingress":{}}}} status}]},Spec:ServiceSpec{Ports:[]ServicePort{ServicePort{Name:http,Protocol:TCP,Port:80,TargetPort:{0 80 },NodePort:30819,AppProtocol:nil,},},Selector:map[string]string{},ClusterIP:10.110.67.90,Type:LoadBalancer,ExternalIPs:[],SessionAffinity:None,LoadBalancerIP:,LoadBalancerSourceRanges:[],ExternalName:,ExternalTrafficPolicy:Cluster,HealthCheckNodePort:0,PublishNotReadyAddresses:false,SessionAffinityConfig:nil,IPFamilyPolicy:*SingleStack,ClusterIPs:[10.110.67.90],IPFamilies:[IPv4],AllocateLoadBalancerNodePorts:*true,LoadBalancerClass:*example.com/internal-vip,InternalTrafficPolicy:*Cluster,},Status:ServiceStatus{LoadBalancer:LoadBalancerStatus{Ingress:[]LoadBalancerIngress{LoadBalancerIngress{IP:203.0.113.1,Hostname:,IPMode:nil,Ports:[]PortStatus{},},},},Conditions:[]Condition{},},}
  Jun  5 13:21:30.458: INFO: Found Service test-service-7wgcj in namespace services-9561 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Jun  5 13:21:30.458: INFO: Service test-service-7wgcj has service status updated
  STEP: patching the service @ 06/05/24 13:21:30.458
  STEP: watching for the Service to be patched @ 06/05/24 13:21:30.465
  Jun  5 13:21:30.466: INFO: observed Service test-service-7wgcj in namespace services-9561 with labels: map[test-service-static:true]
  Jun  5 13:21:30.466: INFO: observed Service test-service-7wgcj in namespace services-9561 with labels: map[test-service-static:true]
  Jun  5 13:21:30.466: INFO: observed Service test-service-7wgcj in namespace services-9561 with labels: map[test-service-static:true]
  Jun  5 13:21:30.466: INFO: Found Service test-service-7wgcj in namespace services-9561 with labels: map[test-service:patched test-service-static:true]
  Jun  5 13:21:30.466: INFO: Service test-service-7wgcj patched
  STEP: deleting the service @ 06/05/24 13:21:30.466
  STEP: watching for the Service to be deleted @ 06/05/24 13:21:30.475
  Jun  5 13:21:30.476: INFO: Observed event: ADDED
  Jun  5 13:21:30.476: INFO: Observed event: MODIFIED
  Jun  5 13:21:30.476: INFO: Observed event: MODIFIED
  Jun  5 13:21:30.476: INFO: Observed event: MODIFIED
  Jun  5 13:21:30.476: INFO: Found Service test-service-7wgcj in namespace services-9561 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  Jun  5 13:21:30.476: INFO: Service test-service-7wgcj deleted
  Jun  5 13:21:30.476: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9561" for this suite. @ 06/05/24 13:21:30.479
• [0.058 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 06/05/24 13:21:30.482
  Jun  5 13:21:30.482: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename deployment @ 06/05/24 13:21:30.482
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:21:30.488
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:21:30.49
  Jun  5 13:21:30.494: INFO: Pod name rollover-pod: Found 0 pods out of 1
  Jun  5 13:21:35.502: INFO: Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 06/05/24 13:21:35.502
  Jun  5 13:21:35.502: INFO: Waiting for pods owned by replica set "test-rollover-controller" to become ready
  Jun  5 13:21:37.508: INFO: Creating deployment "test-rollover-deployment"
  Jun  5 13:21:37.518: INFO: Make sure deployment "test-rollover-deployment" performs scaling operations
  Jun  5 13:21:39.528: INFO: Check revision of new replica set for deployment "test-rollover-deployment"
  Jun  5 13:21:39.534: INFO: Ensure that both replica sets have 1 created replica
  Jun  5 13:21:39.538: INFO: Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  Jun  5 13:21:39.547: INFO: Updating deployment test-rollover-deployment
  Jun  5 13:21:39.547: INFO: Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  Jun  5 13:21:41.556: INFO: Wait for revision update of deployment "test-rollover-deployment" to 2
  Jun  5 13:21:41.561: INFO: Make sure deployment "test-rollover-deployment" is complete
  Jun  5 13:21:41.566: INFO: all replica sets need to contain the pod-template-hash label
  Jun  5 13:21:41.566: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.June, 5, 13, 21, 37, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 5, 13, 21, 37, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 5, 13, 21, 41, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 5, 13, 21, 37, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jun  5 13:21:43.576: INFO: all replica sets need to contain the pod-template-hash label
  Jun  5 13:21:43.577: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.June, 5, 13, 21, 37, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 5, 13, 21, 37, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 5, 13, 21, 41, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 5, 13, 21, 37, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jun  5 13:21:45.572: INFO: all replica sets need to contain the pod-template-hash label
  Jun  5 13:21:45.572: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.June, 5, 13, 21, 37, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 5, 13, 21, 37, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 5, 13, 21, 41, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 5, 13, 21, 37, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jun  5 13:21:47.573: INFO: all replica sets need to contain the pod-template-hash label
  Jun  5 13:21:47.573: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.June, 5, 13, 21, 37, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 5, 13, 21, 37, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 5, 13, 21, 41, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 5, 13, 21, 37, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jun  5 13:21:49.576: INFO: all replica sets need to contain the pod-template-hash label
  Jun  5 13:21:49.576: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.June, 5, 13, 21, 37, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 5, 13, 21, 37, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 5, 13, 21, 41, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 5, 13, 21, 37, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jun  5 13:21:51.576: INFO: 
  Jun  5 13:21:51.576: INFO: Ensure that both old replica sets have no replicas
  Jun  5 13:21:51.583: INFO: Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5885",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "69dcb278-ddc1-4125-921b-6c3659fbd592",
      ResourceVersion: (string) (len=4) "5914",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853190497,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853190499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853190511,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853190497,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853190497,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853190511,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853190497,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-68774655d5\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Jun  5 13:21:51.587: INFO: New ReplicaSet "test-rollover-deployment-68774655d5" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-68774655d5",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5885",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "56bb89c6-905e-4325-a426-f6d036e3177b",
      ResourceVersion: (string) (len=4) "5904",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853190499,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "68774655d5"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "69dcb278-ddc1-4125-921b-6c3659fbd592",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853190499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 36 39 64 63 62 32  37 38 2d 64 64 63 31 2d  |\"69dcb278-ddc1-|
              00000120  34 31 32 35 2d 39 32 31  62 2d 36 63 33 36 35 39  |4125-921b-6c3659|
              00000130  66 62 64 35 39 32 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |fbd592\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853190511,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "68774655d5"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "68774655d5",
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jun  5 13:21:51.588: INFO: All old ReplicaSets of Deployment "test-rollover-deployment":
  Jun  5 13:21:51.588: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5885",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3654035f-2acb-4cbe-a72f-554a9ac952c1",
      ResourceVersion: (string) (len=4) "5913",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853190490,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "69dcb278-ddc1-4125-921b-6c3659fbd592",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853190490,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853190511,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  36 39 64 63 62 32 37 38  2d 64 64 63 31 2d 34 31  |69dcb278-ddc1-41|
              000000c0  32 35 2d 39 32 31 62 2d  36 63 33 36 35 39 66 62  |25-921b-6c3659fb|
              000000d0  64 35 39 32 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |d592\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853190511,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "pod": (string) (len=5) "httpd",
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "pod": (string) (len=5) "httpd",
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jun  5 13:21:51.589: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-664fc6c874",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5885",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f836a5be-94c0-408c-bbb0-95ff04b50fa3",
      ResourceVersion: (string) (len=4) "5877",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853190497,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "69dcb278-ddc1-4125-921b-6c3659fbd592",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853190499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 36 39 64 63 62 32  37 38 2d 64 64 63 31 2d  |\"69dcb278-ddc1-|
              00000120  34 31 32 35 2d 39 32 31  62 2d 36 63 33 36 35 39  |4125-921b-6c3659|
              00000130  66 62 64 35 39 32 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |fbd592\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853190499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jun  5 13:21:51.592: INFO: Pod "test-rollover-deployment-68774655d5-2dtrd" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-68774655d5-2dtrd",
      GenerateName: (string) (len=36) "test-rollover-deployment-68774655d5-",
      Namespace: (string) (len=15) "deployment-5885",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "655a6342-8ad8-4766-b49d-5070fa1a3351",
      ResourceVersion: (string) (len=4) "5892",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853190499,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "68774655d5"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-68774655d5",
          UID: (types.UID) (len=36) "56bb89c6-905e-4325-a426-f6d036e3177b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853190499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 36  62 62 38 39 63 36 2d 39  |d\":\"56bb89c6-9|
              00000090  30 35 65 2d 34 33 32 35  2d 61 34 32 36 2d 66 36  |05e-4325-a426-f6|
              000000a0  64 30 33 36 65 33 31 37  37 62 5c 22 7d 22 3a 7b  |d036e3177b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853190501,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 39  31 5c 22 7d 22 3a 7b 22  |.244.1.91\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-tk78v",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-tk78v",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "k8sconformance-m02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853190501,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853190499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853190501,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853190501,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853190499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.67.3",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.67.3"
        }
      },
      PodIP: (string) (len=11) "10.244.1.91",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.1.91"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853190499,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63853190500,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          ImageID: (string) (len=129) "docker-pullable://registry.k8s.io/e2e-test-images/agnhost@sha256:cc249acbd34692826b2b335335615e060fdb3c0bca4954507aa3a1d1194de253",
          ContainerID: (string) (len=73) "docker://2ac923aff623e92ff123ed766cb240f73e57935ca3c86ef88be016fe12c02f0e",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun  5 13:21:51.594: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-5885" for this suite. @ 06/05/24 13:21:51.597
• [21.119 seconds]
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/controller_revision.go:126
  STEP: Creating a kubernetes client @ 06/05/24 13:21:51.601
  Jun  5 13:21:51.601: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename controllerrevisions @ 06/05/24 13:21:51.602
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:21:51.611
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:21:51.614
  STEP: Creating DaemonSet "e2e-2jzgh-daemon-set" @ 06/05/24 13:21:51.626
  STEP: Check that daemon pods launch on every node of the cluster. @ 06/05/24 13:21:51.63
  Jun  5 13:21:51.635: INFO: Number of nodes with available pods controlled by daemonset e2e-2jzgh-daemon-set: 0
  Jun  5 13:21:51.635: INFO: Node k8sconformance is running 0 daemon pod, expected 1
  Jun  5 13:21:52.638: INFO: Number of nodes with available pods controlled by daemonset e2e-2jzgh-daemon-set: 1
  Jun  5 13:21:52.638: INFO: Node k8sconformance is running 0 daemon pod, expected 1
  Jun  5 13:21:53.639: INFO: Number of nodes with available pods controlled by daemonset e2e-2jzgh-daemon-set: 2
  Jun  5 13:21:53.639: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset e2e-2jzgh-daemon-set
  STEP: Confirm DaemonSet "e2e-2jzgh-daemon-set" successfully created with "daemonset-name=e2e-2jzgh-daemon-set" label @ 06/05/24 13:21:53.641
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-2jzgh-daemon-set" @ 06/05/24 13:21:53.646
  Jun  5 13:21:53.649: INFO: Located ControllerRevision: "e2e-2jzgh-daemon-set-79555d7b5d"
  STEP: Patching ControllerRevision "e2e-2jzgh-daemon-set-79555d7b5d" @ 06/05/24 13:21:53.651
  Jun  5 13:21:53.658: INFO: e2e-2jzgh-daemon-set-79555d7b5d has been patched
  STEP: Create a new ControllerRevision @ 06/05/24 13:21:53.658
  Jun  5 13:21:53.663: INFO: Created ControllerRevision: e2e-2jzgh-daemon-set-58d96448d4
  STEP: Confirm that there are two ControllerRevisions @ 06/05/24 13:21:53.663
  Jun  5 13:21:53.663: INFO: Requesting list of ControllerRevisions to confirm quantity
  Jun  5 13:21:53.665: INFO: Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-2jzgh-daemon-set-79555d7b5d" @ 06/05/24 13:21:53.665
  STEP: Confirm that there is only one ControllerRevision @ 06/05/24 13:21:53.669
  Jun  5 13:21:53.669: INFO: Requesting list of ControllerRevisions to confirm quantity
  Jun  5 13:21:53.672: INFO: Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-2jzgh-daemon-set-58d96448d4" @ 06/05/24 13:21:53.677
  Jun  5 13:21:53.684: INFO: e2e-2jzgh-daemon-set-58d96448d4 has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 06/05/24 13:21:53.684
  W0605 13:21:53.689956      22 warnings.go:70] unknown field "updateStrategy"
  STEP: Confirm that there are two ControllerRevisions @ 06/05/24 13:21:53.69
  Jun  5 13:21:53.690: INFO: Requesting list of ControllerRevisions to confirm quantity
  Jun  5 13:21:54.690: INFO: Requesting list of ControllerRevisions to confirm quantity
  Jun  5 13:21:54.695: INFO: Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-2jzgh-daemon-set-58d96448d4=updated" @ 06/05/24 13:21:54.695
  STEP: Confirm that there is only one ControllerRevision @ 06/05/24 13:21:54.701
  Jun  5 13:21:54.701: INFO: Requesting list of ControllerRevisions to confirm quantity
  Jun  5 13:21:54.704: INFO: Found 1 ControllerRevisions
  Jun  5 13:21:54.706: INFO: ControllerRevision "e2e-2jzgh-daemon-set-6647cc6d45" has revision 3
  STEP: Deleting DaemonSet "e2e-2jzgh-daemon-set" @ 06/05/24 13:21:54.709
  STEP: deleting DaemonSet.extensions e2e-2jzgh-daemon-set in namespace controllerrevisions-580, will wait for the garbage collector to delete the pods @ 06/05/24 13:21:54.709
  Jun  5 13:21:54.766: INFO: Deleting DaemonSet.extensions e2e-2jzgh-daemon-set took: 4.944919ms
  Jun  5 13:21:54.867: INFO: Terminating DaemonSet.extensions e2e-2jzgh-daemon-set pods took: 101.089473ms
  Jun  5 13:21:57.573: INFO: Number of nodes with available pods controlled by daemonset e2e-2jzgh-daemon-set: 0
  Jun  5 13:21:57.573: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset e2e-2jzgh-daemon-set
  Jun  5 13:21:57.575: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"6022"},"items":null}

  Jun  5 13:21:57.578: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"6022"},"items":null}

  Jun  5 13:21:57.586: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-580" for this suite. @ 06/05/24 13:21:57.588
• [5.992 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:164
  STEP: Creating a kubernetes client @ 06/05/24 13:21:57.593
  Jun  5 13:21:57.593: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename downward-api @ 06/05/24 13:21:57.594
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:21:57.606
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:21:57.609
  STEP: Creating the pod @ 06/05/24 13:21:57.612
  Jun  5 13:22:00.161: INFO: Successfully updated pod "annotationupdate6cf67a09-30c1-423d-b4c4-0014e27f3dce"
  Jun  5 13:22:02.180: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7301" for this suite. @ 06/05/24 13:22:02.184
• [4.596 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:624
  STEP: Creating a kubernetes client @ 06/05/24 13:22:02.19
  Jun  5 13:22:02.190: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename sched-preemption @ 06/05/24 13:22:02.191
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:22:02.205
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:22:02.209
  Jun  5 13:22:02.224: INFO: Waiting up to 1m0s for all nodes to be ready
  Jun  5 13:23:02.231: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 06/05/24 13:23:02.234
  Jun  5 13:23:02.234: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename sched-preemption-path @ 06/05/24 13:23:02.235
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:23:02.247
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:23:02.25
  STEP: Finding an available node @ 06/05/24 13:23:02.253
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 06/05/24 13:23:02.253
  STEP: Explicitly delete pod here to free the resource it takes. @ 06/05/24 13:23:04.27
  Jun  5 13:23:04.283: INFO: found a healthy node: k8sconformance-m02
  Jun  5 13:23:10.345: INFO: pods created so far: [1 1 1]
  Jun  5 13:23:10.345: INFO: length of pods created so far: 3
  Jun  5 13:23:12.361: INFO: pods created so far: [2 2 1]
  Jun  5 13:23:19.417: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-391" for this suite. @ 06/05/24 13:23:19.422
  Jun  5 13:23:19.426: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-5044" for this suite. @ 06/05/24 13:23:19.429
• [77.244 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:237
  STEP: Creating a kubernetes client @ 06/05/24 13:23:19.435
  Jun  5 13:23:19.435: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename projected @ 06/05/24 13:23:19.436
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:23:19.446
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:23:19.449
  STEP: Creating a pod to test downward API volume plugin @ 06/05/24 13:23:19.452
  STEP: Saw pod success @ 06/05/24 13:23:21.465
  Jun  5 13:23:21.468: INFO: Trying to get logs from node k8sconformance-m02 pod downwardapi-volume-77a4874d-5d1e-4669-92ef-34c08e358ce4 container client-container: <nil>
  STEP: delete the pod @ 06/05/24 13:23:21.475
  Jun  5 13:23:21.490: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6117" for this suite. @ 06/05/24 13:23:21.492
• [2.063 seconds]
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingress.go:558
  STEP: Creating a kubernetes client @ 06/05/24 13:23:21.498
  Jun  5 13:23:21.498: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename ingress @ 06/05/24 13:23:21.499
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:23:21.508
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:23:21.511
  STEP: getting /apis @ 06/05/24 13:23:21.514
  STEP: getting /apis/networking.k8s.io @ 06/05/24 13:23:21.517
  STEP: getting /apis/networking.k8s.iov1 @ 06/05/24 13:23:21.518
  STEP: creating @ 06/05/24 13:23:21.519
  STEP: getting @ 06/05/24 13:23:21.533
  STEP: listing @ 06/05/24 13:23:21.534
  STEP: watching @ 06/05/24 13:23:21.536
  Jun  5 13:23:21.536: INFO: starting watch
  STEP: cluster-wide listing @ 06/05/24 13:23:21.537
  STEP: cluster-wide watching @ 06/05/24 13:23:21.539
  Jun  5 13:23:21.539: INFO: starting watch
  STEP: patching @ 06/05/24 13:23:21.54
  STEP: updating @ 06/05/24 13:23:21.543
  Jun  5 13:23:21.550: INFO: waiting for watch events with expected annotations
  Jun  5 13:23:21.550: INFO: saw patched and updated annotations
  STEP: patching /status @ 06/05/24 13:23:21.55
  STEP: updating /status @ 06/05/24 13:23:21.553
  STEP: get /status @ 06/05/24 13:23:21.558
  STEP: deleting @ 06/05/24 13:23:21.56
  STEP: deleting a collection @ 06/05/24 13:23:21.567
  Jun  5 13:23:21.575: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-1004" for this suite. @ 06/05/24 13:23:21.577
• [0.084 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:86
  STEP: Creating a kubernetes client @ 06/05/24 13:23:21.582
  Jun  5 13:23:21.582: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename replication-controller @ 06/05/24 13:23:21.583
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:23:21.592
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:23:21.594
  Jun  5 13:23:21.596: INFO: Creating quota "condition-test" that allows only two pods to run in the current namespace
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 06/05/24 13:23:22.606
  STEP: Checking rc "condition-test" has the desired failure condition set @ 06/05/24 13:23:22.612
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 06/05/24 13:23:23.618
  Jun  5 13:23:23.627: INFO: Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 06/05/24 13:23:23.628
  Jun  5 13:23:24.632: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-8325" for this suite. @ 06/05/24 13:23:24.634
• [3.056 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:190
  STEP: Creating a kubernetes client @ 06/05/24 13:23:24.639
  Jun  5 13:23:24.639: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename emptydir @ 06/05/24 13:23:24.64
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:23:24.652
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:23:24.654
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 06/05/24 13:23:24.657
  STEP: Saw pod success @ 06/05/24 13:23:26.666
  Jun  5 13:23:26.668: INFO: Trying to get logs from node k8sconformance-m02 pod pod-82a8902d-701d-45c0-8dbe-7c34f8948c9e container test-container: <nil>
  STEP: delete the pod @ 06/05/24 13:23:26.676
  Jun  5 13:23:26.682: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8196" for this suite. @ 06/05/24 13:23:26.684
• [2.048 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:50
  STEP: Creating a kubernetes client @ 06/05/24 13:23:26.686
  Jun  5 13:23:26.686: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename dns @ 06/05/24 13:23:26.687
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:23:26.694
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:23:26.696
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 06/05/24 13:23:26.698
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 06/05/24 13:23:26.698
  STEP: creating a pod to probe DNS @ 06/05/24 13:23:26.698
  STEP: submitting the pod to kubernetes @ 06/05/24 13:23:26.698
  STEP: retrieving the pod @ 06/05/24 13:23:28.709
  STEP: looking for the results for each expected name from probers @ 06/05/24 13:23:28.711
  Jun  5 13:23:28.721: INFO: DNS probes using dns-8857/dns-test-217086ce-95f0-4df2-903b-10a01d950492 succeeded

  STEP: deleting the pod @ 06/05/24 13:23:28.721
  Jun  5 13:23:28.734: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-8857" for this suite. @ 06/05/24 13:23:28.738
• [2.056 seconds]
------------------------------
SS
------------------------------
[sig-network] Services should serve a basic endpoint from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:785
  STEP: Creating a kubernetes client @ 06/05/24 13:23:28.743
  Jun  5 13:23:28.743: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename services @ 06/05/24 13:23:28.744
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:23:28.753
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:23:28.757
  STEP: creating service endpoint-test2 in namespace services-1890 @ 06/05/24 13:23:28.759
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-1890 to expose endpoints map[] @ 06/05/24 13:23:28.77
  Jun  5 13:23:28.774: INFO: Failed go get Endpoints object: endpoints "endpoint-test2" not found
  Jun  5 13:23:29.783: INFO: successfully validated that service endpoint-test2 in namespace services-1890 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-1890 @ 06/05/24 13:23:29.783
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-1890 to expose endpoints map[pod1:[80]] @ 06/05/24 13:23:31.801
  Jun  5 13:23:31.807: INFO: successfully validated that service endpoint-test2 in namespace services-1890 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 06/05/24 13:23:31.807
  Jun  5 13:23:31.807: INFO: Creating new exec pod
  Jun  5 13:23:34.819: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=services-1890 exec execpodqq5x7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Jun  5 13:23:34.916: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Jun  5 13:23:34.916: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun  5 13:23:34.916: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=services-1890 exec execpodqq5x7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.99.162.176 80'
  Jun  5 13:23:35.013: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.99.162.176 80\nConnection to 10.99.162.176 80 port [tcp/http] succeeded!\n"
  Jun  5 13:23:35.013: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-1890 @ 06/05/24 13:23:35.013
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-1890 to expose endpoints map[pod1:[80] pod2:[80]] @ 06/05/24 13:23:37.031
  Jun  5 13:23:37.039: INFO: successfully validated that service endpoint-test2 in namespace services-1890 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 06/05/24 13:23:37.039
  Jun  5 13:23:38.040: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=services-1890 exec execpodqq5x7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Jun  5 13:23:38.161: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Jun  5 13:23:38.161: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun  5 13:23:38.161: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=services-1890 exec execpodqq5x7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.99.162.176 80'
  Jun  5 13:23:38.262: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.99.162.176 80\nConnection to 10.99.162.176 80 port [tcp/http] succeeded!\n"
  Jun  5 13:23:38.262: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-1890 @ 06/05/24 13:23:38.262
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-1890 to expose endpoints map[pod2:[80]] @ 06/05/24 13:23:38.274
  Jun  5 13:23:38.287: INFO: successfully validated that service endpoint-test2 in namespace services-1890 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 06/05/24 13:23:38.287
  Jun  5 13:23:39.288: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=services-1890 exec execpodqq5x7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Jun  5 13:23:39.384: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Jun  5 13:23:39.384: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun  5 13:23:39.384: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=services-1890 exec execpodqq5x7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.99.162.176 80'
  Jun  5 13:23:39.471: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.99.162.176 80\nConnection to 10.99.162.176 80 port [tcp/http] succeeded!\n"
  Jun  5 13:23:39.471: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-1890 @ 06/05/24 13:23:39.471
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-1890 to expose endpoints map[] @ 06/05/24 13:23:39.483
  Jun  5 13:23:39.501: INFO: successfully validated that service endpoint-test2 in namespace services-1890 exposes endpoints map[]
  Jun  5 13:23:39.518: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1890" for this suite. @ 06/05/24 13:23:39.521
• [10.782 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:349
  STEP: Creating a kubernetes client @ 06/05/24 13:23:39.525
  Jun  5 13:23:39.525: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename security-context-test @ 06/05/24 13:23:39.525
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:23:39.535
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:23:39.536
  Jun  5 13:23:43.559: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-7686" for this suite. @ 06/05/24 13:23:43.562
• [4.041 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:123
  STEP: Creating a kubernetes client @ 06/05/24 13:23:43.566
  Jun  5 13:23:43.566: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename podtemplate @ 06/05/24 13:23:43.567
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:23:43.58
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:23:43.583
  STEP: Create set of pod templates @ 06/05/24 13:23:43.586
  Jun  5 13:23:43.590: INFO: created test-podtemplate-1
  Jun  5 13:23:43.594: INFO: created test-podtemplate-2
  Jun  5 13:23:43.600: INFO: created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 06/05/24 13:23:43.6
  STEP: delete collection of pod templates @ 06/05/24 13:23:43.603
  Jun  5 13:23:43.603: INFO: requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 06/05/24 13:23:43.614
  Jun  5 13:23:43.614: INFO: requesting list of pod templates to confirm quantity
  Jun  5 13:23:43.617: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-599" for this suite. @ 06/05/24 13:23:43.62
• [0.058 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:286
  STEP: Creating a kubernetes client @ 06/05/24 13:23:43.624
  Jun  5 13:23:43.624: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename proxy @ 06/05/24 13:23:43.626
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:23:43.637
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:23:43.64
  Jun  5 13:23:43.643: INFO: Creating pod...
  Jun  5 13:23:45.658: INFO: Creating service...
  Jun  5 13:23:45.671: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8925/pods/agnhost/proxy/some/path/with/DELETE
  Jun  5 13:23:45.675: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Jun  5 13:23:45.675: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8925/pods/agnhost/proxy/some/path/with/GET
  Jun  5 13:23:45.680: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  Jun  5 13:23:45.680: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8925/pods/agnhost/proxy/some/path/with/HEAD
  Jun  5 13:23:45.683: INFO: http.Client request:HEAD | StatusCode:200
  Jun  5 13:23:45.683: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8925/pods/agnhost/proxy/some/path/with/OPTIONS
  Jun  5 13:23:45.685: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Jun  5 13:23:45.685: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8925/pods/agnhost/proxy/some/path/with/PATCH
  Jun  5 13:23:45.687: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Jun  5 13:23:45.687: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8925/pods/agnhost/proxy/some/path/with/POST
  Jun  5 13:23:45.689: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Jun  5 13:23:45.689: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8925/pods/agnhost/proxy/some/path/with/PUT
  Jun  5 13:23:45.691: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Jun  5 13:23:45.691: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8925/services/test-service/proxy/some/path/with/DELETE
  Jun  5 13:23:45.694: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Jun  5 13:23:45.694: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8925/services/test-service/proxy/some/path/with/GET
  Jun  5 13:23:45.696: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  Jun  5 13:23:45.696: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8925/services/test-service/proxy/some/path/with/HEAD
  Jun  5 13:23:45.697: INFO: http.Client request:HEAD | StatusCode:200
  Jun  5 13:23:45.697: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8925/services/test-service/proxy/some/path/with/OPTIONS
  Jun  5 13:23:45.699: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Jun  5 13:23:45.699: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8925/services/test-service/proxy/some/path/with/PATCH
  Jun  5 13:23:45.700: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Jun  5 13:23:45.700: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8925/services/test-service/proxy/some/path/with/POST
  Jun  5 13:23:45.701: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Jun  5 13:23:45.701: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-8925/services/test-service/proxy/some/path/with/PUT
  Jun  5 13:23:45.703: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Jun  5 13:23:45.703: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-8925" for this suite. @ 06/05/24 13:23:45.704
• [2.083 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 06/05/24 13:23:45.707
  Jun  5 13:23:45.707: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename init-container @ 06/05/24 13:23:45.708
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:23:45.716
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:23:45.718
  STEP: creating the pod @ 06/05/24 13:23:45.72
  Jun  5 13:23:45.720: INFO: PodSpec: initContainers in spec.initContainers
  Jun  5 13:23:48.921: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-9667" for this suite. @ 06/05/24 13:23:48.924
• [3.221 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:70
  STEP: Creating a kubernetes client @ 06/05/24 13:23:48.929
  Jun  5 13:23:48.929: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename downward-api @ 06/05/24 13:23:48.93
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:23:48.939
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:23:48.941
  STEP: Creating a pod to test downward API volume plugin @ 06/05/24 13:23:48.943
  STEP: Saw pod success @ 06/05/24 13:23:50.955
  Jun  5 13:23:50.957: INFO: Trying to get logs from node k8sconformance-m02 pod downwardapi-volume-8de15e97-ef80-4576-a688-a79aed5ea096 container client-container: <nil>
  STEP: delete the pod @ 06/05/24 13:23:50.964
  Jun  5 13:23:50.974: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7951" for this suite. @ 06/05/24 13:23:50.976
• [2.051 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:90
  STEP: Creating a kubernetes client @ 06/05/24 13:23:50.98
  Jun  5 13:23:50.980: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename configmap @ 06/05/24 13:23:50.981
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:23:50.993
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:23:50.996
  STEP: Creating configMap with name configmap-test-volume-map-9a1972cf-dc16-4635-b567-6c80100ff039 @ 06/05/24 13:23:50.998
  STEP: Creating a pod to test consume configMaps @ 06/05/24 13:23:51.001
  STEP: Saw pod success @ 06/05/24 13:23:55.019
  Jun  5 13:23:55.022: INFO: Trying to get logs from node k8sconformance-m02 pod pod-configmaps-92b6752d-f4aa-4360-8e5d-41dc4cc6000a container agnhost-container: <nil>
  STEP: delete the pod @ 06/05/24 13:23:55.029
  Jun  5 13:23:55.044: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5098" for this suite. @ 06/05/24 13:23:55.047
• [4.071 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:376
  STEP: Creating a kubernetes client @ 06/05/24 13:23:55.052
  Jun  5 13:23:55.052: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename projected @ 06/05/24 13:23:55.053
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:23:55.065
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:23:55.067
  STEP: Creating configMap with name projected-configmap-test-volume-dd5c5107-e29b-463a-92bc-ab8c8b373cd3 @ 06/05/24 13:23:55.069
  STEP: Creating a pod to test consume configMaps @ 06/05/24 13:23:55.071
  STEP: Saw pod success @ 06/05/24 13:23:59.089
  Jun  5 13:23:59.093: INFO: Trying to get logs from node k8sconformance-m02 pod pod-projected-configmaps-15022b9b-9ea3-43e2-9a97-a9e85b63bc59 container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 06/05/24 13:23:59.101
  Jun  5 13:23:59.115: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8072" for this suite. @ 06/05/24 13:23:59.117
• [4.070 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1731
  STEP: Creating a kubernetes client @ 06/05/24 13:23:59.122
  Jun  5 13:23:59.122: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename kubectl @ 06/05/24 13:23:59.122
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:23:59.131
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:23:59.134
  Jun  5 13:23:59.136: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=kubectl-1205 version'
  Jun  5 13:23:59.174: INFO: stderr: ""
  Jun  5 13:23:59.174: INFO: stdout: "Client Version: v1.29.5\nKustomize Version: v5.0.4-0.20230601165947-6ce0bf390ce3\nServer Version: v1.29.5\n"
  Jun  5 13:23:59.174: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1205" for this suite. @ 06/05/24 13:23:59.176
• [0.057 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 06/05/24 13:23:59.178
  Jun  5 13:23:59.178: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename projected @ 06/05/24 13:23:59.179
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:23:59.186
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:23:59.187
  STEP: Creating secret with name projected-secret-test-80ab783a-ac23-497d-aa90-0c00fe84834a @ 06/05/24 13:23:59.189
  STEP: Creating a pod to test consume secrets @ 06/05/24 13:23:59.191
  STEP: Saw pod success @ 06/05/24 13:24:01.201
  Jun  5 13:24:01.204: INFO: Trying to get logs from node k8sconformance-m02 pod pod-projected-secrets-f8a4ca89-cb98-4af4-bbcc-d6323eb6fa41 container secret-volume-test: <nil>
  STEP: delete the pod @ 06/05/24 13:24:01.212
  Jun  5 13:24:01.226: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7251" for this suite. @ 06/05/24 13:24:01.229
• [2.055 seconds]
------------------------------
S
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:109
  STEP: Creating a kubernetes client @ 06/05/24 13:24:01.234
  Jun  5 13:24:01.234: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename kubelet-test @ 06/05/24 13:24:01.235
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:24:01.245
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:24:01.248
  Jun  5 13:24:05.268: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-5699" for this suite. @ 06/05/24 13:24:05.272
• [4.042 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:902
  STEP: Creating a kubernetes client @ 06/05/24 13:24:05.276
  Jun  5 13:24:05.276: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename statefulset @ 06/05/24 13:24:05.277
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:24:05.287
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:24:05.29
  STEP: Creating service test in namespace statefulset-7968 @ 06/05/24 13:24:05.292
  STEP: Creating statefulset ss in namespace statefulset-7968 @ 06/05/24 13:24:05.3
  Jun  5 13:24:05.311: INFO: Found 0 stateful pods, waiting for 1
  Jun  5 13:24:15.316: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 06/05/24 13:24:15.322
  STEP: updating a scale subresource @ 06/05/24 13:24:15.324
  STEP: verifying the statefulset Spec.Replicas was modified @ 06/05/24 13:24:15.329
  STEP: Patch a scale subresource @ 06/05/24 13:24:15.331
  STEP: verifying the statefulset Spec.Replicas was modified @ 06/05/24 13:24:15.339
  Jun  5 13:24:15.343: INFO: Deleting all statefulset in ns statefulset-7968
  Jun  5 13:24:15.346: INFO: Scaling statefulset ss to 0
  Jun  5 13:24:25.363: INFO: Waiting for statefulset status.replicas updated to 0
  Jun  5 13:24:25.366: INFO: Deleting statefulset ss
  Jun  5 13:24:25.375: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-7968" for this suite. @ 06/05/24 13:24:25.382
• [20.113 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:58
  STEP: Creating a kubernetes client @ 06/05/24 13:24:25.39
  Jun  5 13:24:25.390: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename projected @ 06/05/24 13:24:25.391
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:24:25.403
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:24:25.405
  STEP: Creating configMap with name projected-configmap-test-volume-937ed047-8f8c-4d0e-b7e2-cbaf6d0c4886 @ 06/05/24 13:24:25.408
  STEP: Creating a pod to test consume configMaps @ 06/05/24 13:24:25.411
  STEP: Saw pod success @ 06/05/24 13:24:29.428
  Jun  5 13:24:29.431: INFO: Trying to get logs from node k8sconformance-m02 pod pod-projected-configmaps-dd2b7bef-cd43-415e-b8f6-7f9465bb50b7 container agnhost-container: <nil>
  STEP: delete the pod @ 06/05/24 13:24:29.438
  Jun  5 13:24:29.449: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6425" for this suite. @ 06/05/24 13:24:29.451
• [4.066 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 06/05/24 13:24:29.457
  Jun  5 13:24:29.457: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename cronjob @ 06/05/24 13:24:29.457
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:24:29.467
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:24:29.47
  STEP: Creating a cronjob @ 06/05/24 13:24:29.472
  STEP: Ensuring more than one job is running at a time @ 06/05/24 13:24:29.476
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 06/05/24 13:26:01.482
  STEP: Removing cronjob @ 06/05/24 13:26:01.485
  Jun  5 13:26:01.489: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-3095" for this suite. @ 06/05/24 13:26:01.492
• [92.042 seconds]
------------------------------
SSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:232
  STEP: Creating a kubernetes client @ 06/05/24 13:26:01.498
  Jun  5 13:26:01.498: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename container-runtime @ 06/05/24 13:26:01.5
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:26:01.516
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:26:01.519
  STEP: create the container @ 06/05/24 13:26:01.523
  W0605 13:26:01.532037      22 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 06/05/24 13:26:01.532
  STEP: get the container status @ 06/05/24 13:26:03.543
  STEP: the container should be terminated @ 06/05/24 13:26:03.544
  STEP: the termination message should be set @ 06/05/24 13:26:03.544
  Jun  5 13:26:03.544: INFO: Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 06/05/24 13:26:03.544
  Jun  5 13:26:03.555: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-8300" for this suite. @ 06/05/24 13:26:03.556
• [2.063 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:527
  STEP: Creating a kubernetes client @ 06/05/24 13:26:03.563
  Jun  5 13:26:03.563: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename container-probe @ 06/05/24 13:26:03.564
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:26:03.571
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:26:03.573
  STEP: Creating pod test-grpc-b7e3c9aa-5fe5-462f-85d1-4b472ddb4201 in namespace container-probe-38 @ 06/05/24 13:26:03.577
  STEP: checking the pod's current state and verifying that restartCount is present @ 06/05/24 13:26:05.59
  Jun  5 13:26:05.592: INFO: Initial restart count of pod test-grpc-b7e3c9aa-5fe5-462f-85d1-4b472ddb4201 is 0
  Jun  5 13:26:05.595: INFO: Get pod test-grpc-b7e3c9aa-5fe5-462f-85d1-4b472ddb4201 in namespace container-probe-38
  Jun  5 13:26:07.600: INFO: Get pod test-grpc-b7e3c9aa-5fe5-462f-85d1-4b472ddb4201 in namespace container-probe-38
  Jun  5 13:26:09.606: INFO: Get pod test-grpc-b7e3c9aa-5fe5-462f-85d1-4b472ddb4201 in namespace container-probe-38
  Jun  5 13:26:11.612: INFO: Get pod test-grpc-b7e3c9aa-5fe5-462f-85d1-4b472ddb4201 in namespace container-probe-38
  Jun  5 13:26:13.617: INFO: Get pod test-grpc-b7e3c9aa-5fe5-462f-85d1-4b472ddb4201 in namespace container-probe-38
  Jun  5 13:26:15.624: INFO: Get pod test-grpc-b7e3c9aa-5fe5-462f-85d1-4b472ddb4201 in namespace container-probe-38
  Jun  5 13:26:17.630: INFO: Get pod test-grpc-b7e3c9aa-5fe5-462f-85d1-4b472ddb4201 in namespace container-probe-38
  Jun  5 13:26:19.634: INFO: Get pod test-grpc-b7e3c9aa-5fe5-462f-85d1-4b472ddb4201 in namespace container-probe-38
  Jun  5 13:26:21.636: INFO: Get pod test-grpc-b7e3c9aa-5fe5-462f-85d1-4b472ddb4201 in namespace container-probe-38
  Jun  5 13:26:23.640: INFO: Get pod test-grpc-b7e3c9aa-5fe5-462f-85d1-4b472ddb4201 in namespace container-probe-38
  Jun  5 13:26:25.647: INFO: Get pod test-grpc-b7e3c9aa-5fe5-462f-85d1-4b472ddb4201 in namespace container-probe-38
  Jun  5 13:26:27.653: INFO: Get pod test-grpc-b7e3c9aa-5fe5-462f-85d1-4b472ddb4201 in namespace container-probe-38
  Jun  5 13:26:29.659: INFO: Get pod test-grpc-b7e3c9aa-5fe5-462f-85d1-4b472ddb4201 in namespace container-probe-38
  Jun  5 13:26:31.662: INFO: Get pod test-grpc-b7e3c9aa-5fe5-462f-85d1-4b472ddb4201 in namespace container-probe-38
  Jun  5 13:26:33.665: INFO: Get pod test-grpc-b7e3c9aa-5fe5-462f-85d1-4b472ddb4201 in namespace container-probe-38
  Jun  5 13:26:35.672: INFO: Get pod test-grpc-b7e3c9aa-5fe5-462f-85d1-4b472ddb4201 in namespace container-probe-38
  Jun  5 13:26:37.676: INFO: Get pod test-grpc-b7e3c9aa-5fe5-462f-85d1-4b472ddb4201 in namespace container-probe-38
  Jun  5 13:26:39.681: INFO: Get pod test-grpc-b7e3c9aa-5fe5-462f-85d1-4b472ddb4201 in namespace container-probe-38
  Jun  5 13:26:41.684: INFO: Get pod test-grpc-b7e3c9aa-5fe5-462f-85d1-4b472ddb4201 in namespace container-probe-38
  Jun  5 13:26:43.689: INFO: Get pod test-grpc-b7e3c9aa-5fe5-462f-85d1-4b472ddb4201 in namespace container-probe-38
  Jun  5 13:26:45.695: INFO: Get pod test-grpc-b7e3c9aa-5fe5-462f-85d1-4b472ddb4201 in namespace container-probe-38
  Jun  5 13:26:47.701: INFO: Get pod test-grpc-b7e3c9aa-5fe5-462f-85d1-4b472ddb4201 in namespace container-probe-38
  Jun  5 13:26:49.704: INFO: Get pod test-grpc-b7e3c9aa-5fe5-462f-85d1-4b472ddb4201 in namespace container-probe-38
  Jun  5 13:26:51.709: INFO: Get pod test-grpc-b7e3c9aa-5fe5-462f-85d1-4b472ddb4201 in namespace container-probe-38
  Jun  5 13:26:53.715: INFO: Get pod test-grpc-b7e3c9aa-5fe5-462f-85d1-4b472ddb4201 in namespace container-probe-38
  Jun  5 13:26:55.722: INFO: Get pod test-grpc-b7e3c9aa-5fe5-462f-85d1-4b472ddb4201 in namespace container-probe-38
  Jun  5 13:26:57.729: INFO: Get pod test-grpc-b7e3c9aa-5fe5-462f-85d1-4b472ddb4201 in namespace container-probe-38
  Jun  5 13:26:59.733: INFO: Get pod test-grpc-b7e3c9aa-5fe5-462f-85d1-4b472ddb4201 in namespace container-probe-38
  Jun  5 13:27:01.739: INFO: Get pod test-grpc-b7e3c9aa-5fe5-462f-85d1-4b472ddb4201 in namespace container-probe-38
  Jun  5 13:27:03.743: INFO: Get pod test-grpc-b7e3c9aa-5fe5-462f-85d1-4b472ddb4201 in namespace container-probe-38
  Jun  5 13:27:05.749: INFO: Get pod test-grpc-b7e3c9aa-5fe5-462f-85d1-4b472ddb4201 in namespace container-probe-38
  Jun  5 13:27:07.753: INFO: Get pod test-grpc-b7e3c9aa-5fe5-462f-85d1-4b472ddb4201 in namespace container-probe-38
  Jun  5 13:27:09.756: INFO: Get pod test-grpc-b7e3c9aa-5fe5-462f-85d1-4b472ddb4201 in namespace container-probe-38
  Jun  5 13:27:11.760: INFO: Get pod test-grpc-b7e3c9aa-5fe5-462f-85d1-4b472ddb4201 in namespace container-probe-38
  Jun  5 13:27:13.765: INFO: Get pod test-grpc-b7e3c9aa-5fe5-462f-85d1-4b472ddb4201 in namespace container-probe-38
  Jun  5 13:27:15.772: INFO: Get pod test-grpc-b7e3c9aa-5fe5-462f-85d1-4b472ddb4201 in namespace container-probe-38
  Jun  5 13:27:17.778: INFO: Get pod test-grpc-b7e3c9aa-5fe5-462f-85d1-4b472ddb4201 in namespace container-probe-38
  Jun  5 13:27:19.785: INFO: Get pod test-grpc-b7e3c9aa-5fe5-462f-85d1-4b472ddb4201 in namespace container-probe-38
  Jun  5 13:27:21.791: INFO: Get pod test-grpc-b7e3c9aa-5fe5-462f-85d1-4b472ddb4201 in namespace container-probe-38
  Jun  5 13:27:23.797: INFO: Get pod test-grpc-b7e3c9aa-5fe5-462f-85d1-4b472ddb4201 in namespace container-probe-38
  Jun  5 13:27:25.804: INFO: Get pod test-grpc-b7e3c9aa-5fe5-462f-85d1-4b472ddb4201 in namespace container-probe-38
  Jun  5 13:27:27.811: INFO: Get pod test-grpc-b7e3c9aa-5fe5-462f-85d1-4b472ddb4201 in namespace container-probe-38
  Jun  5 13:27:29.815: INFO: Get pod test-grpc-b7e3c9aa-5fe5-462f-85d1-4b472ddb4201 in namespace container-probe-38
  Jun  5 13:27:31.821: INFO: Get pod test-grpc-b7e3c9aa-5fe5-462f-85d1-4b472ddb4201 in namespace container-probe-38
  Jun  5 13:27:33.827: INFO: Get pod test-grpc-b7e3c9aa-5fe5-462f-85d1-4b472ddb4201 in namespace container-probe-38
  Jun  5 13:27:35.834: INFO: Get pod test-grpc-b7e3c9aa-5fe5-462f-85d1-4b472ddb4201 in namespace container-probe-38
  Jun  5 13:27:37.840: INFO: Get pod test-grpc-b7e3c9aa-5fe5-462f-85d1-4b472ddb4201 in namespace container-probe-38
  Jun  5 13:27:39.847: INFO: Get pod test-grpc-b7e3c9aa-5fe5-462f-85d1-4b472ddb4201 in namespace container-probe-38
  Jun  5 13:27:41.853: INFO: Get pod test-grpc-b7e3c9aa-5fe5-462f-85d1-4b472ddb4201 in namespace container-probe-38
  Jun  5 13:27:43.861: INFO: Get pod test-grpc-b7e3c9aa-5fe5-462f-85d1-4b472ddb4201 in namespace container-probe-38
  Jun  5 13:27:45.867: INFO: Get pod test-grpc-b7e3c9aa-5fe5-462f-85d1-4b472ddb4201 in namespace container-probe-38
  Jun  5 13:27:47.875: INFO: Get pod test-grpc-b7e3c9aa-5fe5-462f-85d1-4b472ddb4201 in namespace container-probe-38
  Jun  5 13:27:49.881: INFO: Get pod test-grpc-b7e3c9aa-5fe5-462f-85d1-4b472ddb4201 in namespace container-probe-38
  Jun  5 13:27:51.888: INFO: Get pod test-grpc-b7e3c9aa-5fe5-462f-85d1-4b472ddb4201 in namespace container-probe-38
  Jun  5 13:27:53.894: INFO: Get pod test-grpc-b7e3c9aa-5fe5-462f-85d1-4b472ddb4201 in namespace container-probe-38
  Jun  5 13:27:55.902: INFO: Get pod test-grpc-b7e3c9aa-5fe5-462f-85d1-4b472ddb4201 in namespace container-probe-38
  Jun  5 13:27:57.908: INFO: Get pod test-grpc-b7e3c9aa-5fe5-462f-85d1-4b472ddb4201 in namespace container-probe-38
  Jun  5 13:27:59.914: INFO: Get pod test-grpc-b7e3c9aa-5fe5-462f-85d1-4b472ddb4201 in namespace container-probe-38
  Jun  5 13:28:01.920: INFO: Get pod test-grpc-b7e3c9aa-5fe5-462f-85d1-4b472ddb4201 in namespace container-probe-38
  Jun  5 13:28:03.926: INFO: Get pod test-grpc-b7e3c9aa-5fe5-462f-85d1-4b472ddb4201 in namespace container-probe-38
  Jun  5 13:28:05.933: INFO: Get pod test-grpc-b7e3c9aa-5fe5-462f-85d1-4b472ddb4201 in namespace container-probe-38
  Jun  5 13:28:07.939: INFO: Get pod test-grpc-b7e3c9aa-5fe5-462f-85d1-4b472ddb4201 in namespace container-probe-38
  Jun  5 13:28:09.943: INFO: Get pod test-grpc-b7e3c9aa-5fe5-462f-85d1-4b472ddb4201 in namespace container-probe-38
  Jun  5 13:28:11.945: INFO: Get pod test-grpc-b7e3c9aa-5fe5-462f-85d1-4b472ddb4201 in namespace container-probe-38
  Jun  5 13:28:13.949: INFO: Get pod test-grpc-b7e3c9aa-5fe5-462f-85d1-4b472ddb4201 in namespace container-probe-38
  Jun  5 13:28:15.954: INFO: Get pod test-grpc-b7e3c9aa-5fe5-462f-85d1-4b472ddb4201 in namespace container-probe-38
  Jun  5 13:28:17.960: INFO: Get pod test-grpc-b7e3c9aa-5fe5-462f-85d1-4b472ddb4201 in namespace container-probe-38
  Jun  5 13:28:19.966: INFO: Get pod test-grpc-b7e3c9aa-5fe5-462f-85d1-4b472ddb4201 in namespace container-probe-38
  Jun  5 13:28:21.971: INFO: Get pod test-grpc-b7e3c9aa-5fe5-462f-85d1-4b472ddb4201 in namespace container-probe-38
  Jun  5 13:28:23.978: INFO: Get pod test-grpc-b7e3c9aa-5fe5-462f-85d1-4b472ddb4201 in namespace container-probe-38
  Jun  5 13:28:25.984: INFO: Get pod test-grpc-b7e3c9aa-5fe5-462f-85d1-4b472ddb4201 in namespace container-probe-38
  Jun  5 13:28:27.991: INFO: Get pod test-grpc-b7e3c9aa-5fe5-462f-85d1-4b472ddb4201 in namespace container-probe-38
  Jun  5 13:28:29.997: INFO: Get pod test-grpc-b7e3c9aa-5fe5-462f-85d1-4b472ddb4201 in namespace container-probe-38
  Jun  5 13:28:32.004: INFO: Get pod test-grpc-b7e3c9aa-5fe5-462f-85d1-4b472ddb4201 in namespace container-probe-38
  Jun  5 13:28:34.011: INFO: Get pod test-grpc-b7e3c9aa-5fe5-462f-85d1-4b472ddb4201 in namespace container-probe-38
  Jun  5 13:28:36.018: INFO: Get pod test-grpc-b7e3c9aa-5fe5-462f-85d1-4b472ddb4201 in namespace container-probe-38
  Jun  5 13:28:38.024: INFO: Get pod test-grpc-b7e3c9aa-5fe5-462f-85d1-4b472ddb4201 in namespace container-probe-38
  Jun  5 13:28:40.031: INFO: Get pod test-grpc-b7e3c9aa-5fe5-462f-85d1-4b472ddb4201 in namespace container-probe-38
  Jun  5 13:28:42.037: INFO: Get pod test-grpc-b7e3c9aa-5fe5-462f-85d1-4b472ddb4201 in namespace container-probe-38
  Jun  5 13:28:44.043: INFO: Get pod test-grpc-b7e3c9aa-5fe5-462f-85d1-4b472ddb4201 in namespace container-probe-38
  Jun  5 13:28:46.051: INFO: Get pod test-grpc-b7e3c9aa-5fe5-462f-85d1-4b472ddb4201 in namespace container-probe-38
  Jun  5 13:28:48.057: INFO: Get pod test-grpc-b7e3c9aa-5fe5-462f-85d1-4b472ddb4201 in namespace container-probe-38
  Jun  5 13:28:50.063: INFO: Get pod test-grpc-b7e3c9aa-5fe5-462f-85d1-4b472ddb4201 in namespace container-probe-38
  Jun  5 13:28:52.069: INFO: Get pod test-grpc-b7e3c9aa-5fe5-462f-85d1-4b472ddb4201 in namespace container-probe-38
  Jun  5 13:28:54.074: INFO: Get pod test-grpc-b7e3c9aa-5fe5-462f-85d1-4b472ddb4201 in namespace container-probe-38
  Jun  5 13:28:56.080: INFO: Get pod test-grpc-b7e3c9aa-5fe5-462f-85d1-4b472ddb4201 in namespace container-probe-38
  Jun  5 13:28:58.087: INFO: Get pod test-grpc-b7e3c9aa-5fe5-462f-85d1-4b472ddb4201 in namespace container-probe-38
  Jun  5 13:29:00.093: INFO: Get pod test-grpc-b7e3c9aa-5fe5-462f-85d1-4b472ddb4201 in namespace container-probe-38
  Jun  5 13:29:02.098: INFO: Get pod test-grpc-b7e3c9aa-5fe5-462f-85d1-4b472ddb4201 in namespace container-probe-38
  Jun  5 13:29:04.101: INFO: Get pod test-grpc-b7e3c9aa-5fe5-462f-85d1-4b472ddb4201 in namespace container-probe-38
  Jun  5 13:29:06.108: INFO: Get pod test-grpc-b7e3c9aa-5fe5-462f-85d1-4b472ddb4201 in namespace container-probe-38
  Jun  5 13:29:08.113: INFO: Get pod test-grpc-b7e3c9aa-5fe5-462f-85d1-4b472ddb4201 in namespace container-probe-38
  Jun  5 13:29:10.119: INFO: Get pod test-grpc-b7e3c9aa-5fe5-462f-85d1-4b472ddb4201 in namespace container-probe-38
  Jun  5 13:29:12.124: INFO: Get pod test-grpc-b7e3c9aa-5fe5-462f-85d1-4b472ddb4201 in namespace container-probe-38
  Jun  5 13:29:14.128: INFO: Get pod test-grpc-b7e3c9aa-5fe5-462f-85d1-4b472ddb4201 in namespace container-probe-38
  Jun  5 13:29:16.135: INFO: Get pod test-grpc-b7e3c9aa-5fe5-462f-85d1-4b472ddb4201 in namespace container-probe-38
  Jun  5 13:29:18.141: INFO: Get pod test-grpc-b7e3c9aa-5fe5-462f-85d1-4b472ddb4201 in namespace container-probe-38
  Jun  5 13:29:20.147: INFO: Get pod test-grpc-b7e3c9aa-5fe5-462f-85d1-4b472ddb4201 in namespace container-probe-38
  Jun  5 13:29:22.153: INFO: Get pod test-grpc-b7e3c9aa-5fe5-462f-85d1-4b472ddb4201 in namespace container-probe-38
  Jun  5 13:29:24.158: INFO: Get pod test-grpc-b7e3c9aa-5fe5-462f-85d1-4b472ddb4201 in namespace container-probe-38
  Jun  5 13:29:26.166: INFO: Get pod test-grpc-b7e3c9aa-5fe5-462f-85d1-4b472ddb4201 in namespace container-probe-38
  Jun  5 13:29:28.172: INFO: Get pod test-grpc-b7e3c9aa-5fe5-462f-85d1-4b472ddb4201 in namespace container-probe-38
  Jun  5 13:29:30.177: INFO: Get pod test-grpc-b7e3c9aa-5fe5-462f-85d1-4b472ddb4201 in namespace container-probe-38
  Jun  5 13:29:32.183: INFO: Get pod test-grpc-b7e3c9aa-5fe5-462f-85d1-4b472ddb4201 in namespace container-probe-38
  Jun  5 13:29:34.190: INFO: Get pod test-grpc-b7e3c9aa-5fe5-462f-85d1-4b472ddb4201 in namespace container-probe-38
  Jun  5 13:29:36.197: INFO: Get pod test-grpc-b7e3c9aa-5fe5-462f-85d1-4b472ddb4201 in namespace container-probe-38
  Jun  5 13:29:38.204: INFO: Get pod test-grpc-b7e3c9aa-5fe5-462f-85d1-4b472ddb4201 in namespace container-probe-38
  Jun  5 13:29:40.209: INFO: Get pod test-grpc-b7e3c9aa-5fe5-462f-85d1-4b472ddb4201 in namespace container-probe-38
  Jun  5 13:29:42.215: INFO: Get pod test-grpc-b7e3c9aa-5fe5-462f-85d1-4b472ddb4201 in namespace container-probe-38
  Jun  5 13:29:44.221: INFO: Get pod test-grpc-b7e3c9aa-5fe5-462f-85d1-4b472ddb4201 in namespace container-probe-38
  Jun  5 13:29:46.228: INFO: Get pod test-grpc-b7e3c9aa-5fe5-462f-85d1-4b472ddb4201 in namespace container-probe-38
  Jun  5 13:29:48.235: INFO: Get pod test-grpc-b7e3c9aa-5fe5-462f-85d1-4b472ddb4201 in namespace container-probe-38
  Jun  5 13:29:50.240: INFO: Get pod test-grpc-b7e3c9aa-5fe5-462f-85d1-4b472ddb4201 in namespace container-probe-38
  Jun  5 13:29:52.246: INFO: Get pod test-grpc-b7e3c9aa-5fe5-462f-85d1-4b472ddb4201 in namespace container-probe-38
  Jun  5 13:29:54.253: INFO: Get pod test-grpc-b7e3c9aa-5fe5-462f-85d1-4b472ddb4201 in namespace container-probe-38
  Jun  5 13:29:56.260: INFO: Get pod test-grpc-b7e3c9aa-5fe5-462f-85d1-4b472ddb4201 in namespace container-probe-38
  Jun  5 13:29:58.265: INFO: Get pod test-grpc-b7e3c9aa-5fe5-462f-85d1-4b472ddb4201 in namespace container-probe-38
  Jun  5 13:30:00.271: INFO: Get pod test-grpc-b7e3c9aa-5fe5-462f-85d1-4b472ddb4201 in namespace container-probe-38
  Jun  5 13:30:02.276: INFO: Get pod test-grpc-b7e3c9aa-5fe5-462f-85d1-4b472ddb4201 in namespace container-probe-38
  Jun  5 13:30:04.282: INFO: Get pod test-grpc-b7e3c9aa-5fe5-462f-85d1-4b472ddb4201 in namespace container-probe-38
  STEP: deleting the pod @ 06/05/24 13:30:06.283
  Jun  5 13:30:06.296: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-38" for this suite. @ 06/05/24 13:30:06.301
• [242.744 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:270
  STEP: Creating a kubernetes client @ 06/05/24 13:30:06.307
  Jun  5 13:30:06.307: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename custom-resource-definition @ 06/05/24 13:30:06.309
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:30:06.323
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:30:06.326
  Jun  5 13:30:06.328: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  Jun  5 13:30:09.419: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-1272" for this suite. @ 06/05/24 13:30:09.423
• [3.120 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 06/05/24 13:30:09.427
  Jun  5 13:30:09.427: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename subpath @ 06/05/24 13:30:09.429
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:30:09.439
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:30:09.443
  STEP: Setting up data @ 06/05/24 13:30:09.445
  STEP: Creating pod pod-subpath-test-secret-zvzn @ 06/05/24 13:30:09.455
  STEP: Creating a pod to test atomic-volume-subpath @ 06/05/24 13:30:09.455
  STEP: Saw pod success @ 06/05/24 13:30:33.534
  Jun  5 13:30:33.537: INFO: Trying to get logs from node k8sconformance-m02 pod pod-subpath-test-secret-zvzn container test-container-subpath-secret-zvzn: <nil>
  STEP: delete the pod @ 06/05/24 13:30:33.559
  STEP: Deleting pod pod-subpath-test-secret-zvzn @ 06/05/24 13:30:33.57
  Jun  5 13:30:33.570: INFO: Deleting pod "pod-subpath-test-secret-zvzn" in namespace "subpath-3196"
  Jun  5 13:30:33.572: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-3196" for this suite. @ 06/05/24 13:30:33.574
• [24.151 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should return chunks of results for list calls [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:83
  STEP: Creating a kubernetes client @ 06/05/24 13:30:33.579
  Jun  5 13:30:33.579: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename chunking @ 06/05/24 13:30:33.579
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:30:33.591
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:30:33.593
  STEP: creating a large number of resources @ 06/05/24 13:30:33.596
  STEP: retrieving those results in paged fashion several times @ 06/05/24 13:30:51.288
  Jun  5 13:30:51.337: INFO: Retrieved 17/17 results with rv 7882 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzg4Miwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDE2XHUwMDAwIn0
  Jun  5 13:30:51.387: INFO: Retrieved 17/17 results with rv 7882 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzg4Miwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDMzXHUwMDAwIn0
  Jun  5 13:30:51.436: INFO: Retrieved 17/17 results with rv 7882 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzg4Miwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDUwXHUwMDAwIn0
  Jun  5 13:30:51.486: INFO: Retrieved 17/17 results with rv 7882 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzg4Miwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDY3XHUwMDAwIn0
  Jun  5 13:30:51.535: INFO: Retrieved 17/17 results with rv 7882 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzg4Miwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDg0XHUwMDAwIn0
  Jun  5 13:30:51.585: INFO: Retrieved 17/17 results with rv 7882 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzg4Miwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTAxXHUwMDAwIn0
  Jun  5 13:30:51.634: INFO: Retrieved 17/17 results with rv 7882 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzg4Miwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTE4XHUwMDAwIn0
  Jun  5 13:30:51.683: INFO: Retrieved 17/17 results with rv 7882 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzg4Miwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTM1XHUwMDAwIn0
  Jun  5 13:30:51.735: INFO: Retrieved 17/17 results with rv 7882 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzg4Miwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTUyXHUwMDAwIn0
  Jun  5 13:30:51.786: INFO: Retrieved 17/17 results with rv 7882 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzg4Miwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTY5XHUwMDAwIn0
  Jun  5 13:30:51.836: INFO: Retrieved 17/17 results with rv 7882 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzg4Miwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTg2XHUwMDAwIn0
  Jun  5 13:30:51.888: INFO: Retrieved 17/17 results with rv 7882 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzg4Miwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjAzXHUwMDAwIn0
  Jun  5 13:30:51.936: INFO: Retrieved 17/17 results with rv 7882 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzg4Miwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjIwXHUwMDAwIn0
  Jun  5 13:30:51.986: INFO: Retrieved 17/17 results with rv 7882 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzg4Miwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjM3XHUwMDAwIn0
  Jun  5 13:30:52.035: INFO: Retrieved 17/17 results with rv 7882 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzg4Miwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjU0XHUwMDAwIn0
  Jun  5 13:30:52.085: INFO: Retrieved 17/17 results with rv 7882 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzg4Miwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjcxXHUwMDAwIn0
  Jun  5 13:30:52.136: INFO: Retrieved 17/17 results with rv 7882 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzg4Miwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjg4XHUwMDAwIn0
  Jun  5 13:30:52.186: INFO: Retrieved 17/17 results with rv 7882 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzg4Miwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzA1XHUwMDAwIn0
  Jun  5 13:30:52.236: INFO: Retrieved 17/17 results with rv 7882 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzg4Miwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzIyXHUwMDAwIn0
  Jun  5 13:30:52.285: INFO: Retrieved 17/17 results with rv 7882 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzg4Miwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzM5XHUwMDAwIn0
  Jun  5 13:30:52.336: INFO: Retrieved 17/17 results with rv 7882 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzg4Miwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzU2XHUwMDAwIn0
  Jun  5 13:30:52.384: INFO: Retrieved 17/17 results with rv 7882 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzg4Miwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzczXHUwMDAwIn0
  Jun  5 13:30:52.436: INFO: Retrieved 17/17 results with rv 7882 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzg4Miwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzkwXHUwMDAwIn0
  Jun  5 13:30:52.485: INFO: Retrieved 9/17 results with rv 7882 and continue 
  Jun  5 13:30:52.535: INFO: Retrieved 17/17 results with rv 7883 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzg4Mywic3RhcnQiOiJ0ZW1wbGF0ZS0wMDE2XHUwMDAwIn0
  Jun  5 13:30:52.586: INFO: Retrieved 17/17 results with rv 7883 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzg4Mywic3RhcnQiOiJ0ZW1wbGF0ZS0wMDMzXHUwMDAwIn0
  Jun  5 13:30:52.636: INFO: Retrieved 17/17 results with rv 7883 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzg4Mywic3RhcnQiOiJ0ZW1wbGF0ZS0wMDUwXHUwMDAwIn0
  Jun  5 13:30:52.683: INFO: Retrieved 17/17 results with rv 7883 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzg4Mywic3RhcnQiOiJ0ZW1wbGF0ZS0wMDY3XHUwMDAwIn0
  Jun  5 13:30:52.737: INFO: Retrieved 17/17 results with rv 7883 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzg4Mywic3RhcnQiOiJ0ZW1wbGF0ZS0wMDg0XHUwMDAwIn0
  Jun  5 13:30:52.786: INFO: Retrieved 17/17 results with rv 7883 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzg4Mywic3RhcnQiOiJ0ZW1wbGF0ZS0wMTAxXHUwMDAwIn0
  Jun  5 13:30:52.833: INFO: Retrieved 17/17 results with rv 7883 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzg4Mywic3RhcnQiOiJ0ZW1wbGF0ZS0wMTE4XHUwMDAwIn0
  Jun  5 13:30:52.886: INFO: Retrieved 17/17 results with rv 7883 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzg4Mywic3RhcnQiOiJ0ZW1wbGF0ZS0wMTM1XHUwMDAwIn0
  Jun  5 13:30:52.936: INFO: Retrieved 17/17 results with rv 7883 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzg4Mywic3RhcnQiOiJ0ZW1wbGF0ZS0wMTUyXHUwMDAwIn0
  Jun  5 13:30:52.986: INFO: Retrieved 17/17 results with rv 7883 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzg4Mywic3RhcnQiOiJ0ZW1wbGF0ZS0wMTY5XHUwMDAwIn0
  Jun  5 13:30:53.036: INFO: Retrieved 17/17 results with rv 7883 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzg4Mywic3RhcnQiOiJ0ZW1wbGF0ZS0wMTg2XHUwMDAwIn0
  Jun  5 13:30:53.086: INFO: Retrieved 17/17 results with rv 7883 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzg4Mywic3RhcnQiOiJ0ZW1wbGF0ZS0wMjAzXHUwMDAwIn0
  Jun  5 13:30:53.135: INFO: Retrieved 17/17 results with rv 7883 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzg4Mywic3RhcnQiOiJ0ZW1wbGF0ZS0wMjIwXHUwMDAwIn0
  Jun  5 13:30:53.185: INFO: Retrieved 17/17 results with rv 7883 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzg4Mywic3RhcnQiOiJ0ZW1wbGF0ZS0wMjM3XHUwMDAwIn0
  Jun  5 13:30:53.236: INFO: Retrieved 17/17 results with rv 7883 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzg4Mywic3RhcnQiOiJ0ZW1wbGF0ZS0wMjU0XHUwMDAwIn0
  Jun  5 13:30:53.286: INFO: Retrieved 17/17 results with rv 7883 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzg4Mywic3RhcnQiOiJ0ZW1wbGF0ZS0wMjcxXHUwMDAwIn0
  Jun  5 13:30:53.336: INFO: Retrieved 17/17 results with rv 7883 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzg4Mywic3RhcnQiOiJ0ZW1wbGF0ZS0wMjg4XHUwMDAwIn0
  Jun  5 13:30:53.386: INFO: Retrieved 17/17 results with rv 7883 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzg4Mywic3RhcnQiOiJ0ZW1wbGF0ZS0wMzA1XHUwMDAwIn0
  Jun  5 13:30:53.436: INFO: Retrieved 17/17 results with rv 7883 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzg4Mywic3RhcnQiOiJ0ZW1wbGF0ZS0wMzIyXHUwMDAwIn0
  Jun  5 13:30:53.484: INFO: Retrieved 17/17 results with rv 7883 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzg4Mywic3RhcnQiOiJ0ZW1wbGF0ZS0wMzM5XHUwMDAwIn0
  Jun  5 13:30:53.535: INFO: Retrieved 17/17 results with rv 7883 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzg4Mywic3RhcnQiOiJ0ZW1wbGF0ZS0wMzU2XHUwMDAwIn0
  Jun  5 13:30:53.585: INFO: Retrieved 17/17 results with rv 7883 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzg4Mywic3RhcnQiOiJ0ZW1wbGF0ZS0wMzczXHUwMDAwIn0
  Jun  5 13:30:53.635: INFO: Retrieved 17/17 results with rv 7883 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzg4Mywic3RhcnQiOiJ0ZW1wbGF0ZS0wMzkwXHUwMDAwIn0
  Jun  5 13:30:53.683: INFO: Retrieved 9/17 results with rv 7883 and continue 
  Jun  5 13:30:53.736: INFO: Retrieved 17/17 results with rv 7884 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzg4NCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDE2XHUwMDAwIn0
  Jun  5 13:30:53.786: INFO: Retrieved 17/17 results with rv 7884 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzg4NCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDMzXHUwMDAwIn0
  Jun  5 13:30:53.836: INFO: Retrieved 17/17 results with rv 7884 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzg4NCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDUwXHUwMDAwIn0
  Jun  5 13:30:53.886: INFO: Retrieved 17/17 results with rv 7884 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzg4NCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDY3XHUwMDAwIn0
  Jun  5 13:30:53.936: INFO: Retrieved 17/17 results with rv 7884 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzg4NCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDg0XHUwMDAwIn0
  Jun  5 13:30:53.984: INFO: Retrieved 17/17 results with rv 7884 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzg4NCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTAxXHUwMDAwIn0
  Jun  5 13:30:54.036: INFO: Retrieved 17/17 results with rv 7884 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzg4NCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTE4XHUwMDAwIn0
  Jun  5 13:30:54.086: INFO: Retrieved 17/17 results with rv 7884 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzg4NCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTM1XHUwMDAwIn0
  Jun  5 13:30:54.137: INFO: Retrieved 17/17 results with rv 7884 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzg4NCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTUyXHUwMDAwIn0
  Jun  5 13:30:54.186: INFO: Retrieved 17/17 results with rv 7884 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzg4NCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTY5XHUwMDAwIn0
  Jun  5 13:30:54.234: INFO: Retrieved 17/17 results with rv 7884 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzg4NCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTg2XHUwMDAwIn0
  Jun  5 13:30:54.285: INFO: Retrieved 17/17 results with rv 7884 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzg4NCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjAzXHUwMDAwIn0
  Jun  5 13:30:54.335: INFO: Retrieved 17/17 results with rv 7884 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzg4NCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjIwXHUwMDAwIn0
  Jun  5 13:30:54.383: INFO: Retrieved 17/17 results with rv 7884 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzg4NCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjM3XHUwMDAwIn0
  Jun  5 13:30:54.436: INFO: Retrieved 17/17 results with rv 7884 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzg4NCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjU0XHUwMDAwIn0
  Jun  5 13:30:54.485: INFO: Retrieved 17/17 results with rv 7884 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzg4NCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjcxXHUwMDAwIn0
  Jun  5 13:30:54.536: INFO: Retrieved 17/17 results with rv 7884 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzg4NCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjg4XHUwMDAwIn0
  Jun  5 13:30:54.585: INFO: Retrieved 17/17 results with rv 7884 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzg4NCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzA1XHUwMDAwIn0
  Jun  5 13:30:54.635: INFO: Retrieved 17/17 results with rv 7884 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzg4NCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzIyXHUwMDAwIn0
  Jun  5 13:30:54.683: INFO: Retrieved 17/17 results with rv 7884 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzg4NCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzM5XHUwMDAwIn0
  Jun  5 13:30:54.736: INFO: Retrieved 17/17 results with rv 7884 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzg4NCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzU2XHUwMDAwIn0
  Jun  5 13:30:54.784: INFO: Retrieved 17/17 results with rv 7884 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzg4NCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzczXHUwMDAwIn0
  Jun  5 13:30:54.835: INFO: Retrieved 17/17 results with rv 7884 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzg4NCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzkwXHUwMDAwIn0
  Jun  5 13:30:54.885: INFO: Retrieved 9/17 results with rv 7884 and continue 
  STEP: retrieving those results all at once @ 06/05/24 13:30:54.885
  Jun  5 13:30:54.944: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-4557" for this suite. @ 06/05/24 13:30:54.985
• [21.460 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:332
  STEP: Creating a kubernetes client @ 06/05/24 13:30:55.039
  Jun  5 13:30:55.039: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename statefulset @ 06/05/24 13:30:55.04
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:30:55.054
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:30:55.057
  STEP: Creating service test in namespace statefulset-7210 @ 06/05/24 13:30:55.06
  STEP: Creating a new StatefulSet @ 06/05/24 13:30:55.065
  Jun  5 13:30:55.073: INFO: Found 0 stateful pods, waiting for 3
  Jun  5 13:31:05.078: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Jun  5 13:31:05.078: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Jun  5 13:31:05.078: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 06/05/24 13:31:05.086
  Jun  5 13:31:05.110: INFO: Updating stateful set ss2
  STEP: Creating a new revision @ 06/05/24 13:31:05.11
  STEP: Not applying an update when the partition is greater than the number of replicas @ 06/05/24 13:31:15.122
  STEP: Performing a canary update @ 06/05/24 13:31:15.122
  Jun  5 13:31:15.146: INFO: Updating stateful set ss2
  Jun  5 13:31:15.153: INFO: Waiting for Pod statefulset-7210/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  STEP: Restoring Pods to the correct revision when they are deleted @ 06/05/24 13:31:25.156
  Jun  5 13:31:25.191: INFO: Found 1 stateful pods, waiting for 3
  Jun  5 13:31:35.193: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Jun  5 13:31:35.193: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Jun  5 13:31:35.193: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 06/05/24 13:31:35.198
  Jun  5 13:31:35.222: INFO: Updating stateful set ss2
  Jun  5 13:31:35.230: INFO: Waiting for Pod statefulset-7210/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  Jun  5 13:31:45.242: INFO: Updating stateful set ss2
  Jun  5 13:31:45.244: INFO: Waiting for StatefulSet statefulset-7210/ss2 to complete update
  Jun  5 13:31:45.244: INFO: Waiting for Pod statefulset-7210/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  Jun  5 13:31:55.255: INFO: Deleting all statefulset in ns statefulset-7210
  Jun  5 13:31:55.258: INFO: Scaling statefulset ss2 to 0
  Jun  5 13:32:05.274: INFO: Waiting for statefulset status.replicas updated to 0
  Jun  5 13:32:05.277: INFO: Deleting statefulset ss2
  Jun  5 13:32:05.288: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-7210" for this suite. @ 06/05/24 13:32:05.29
• [70.256 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:151
  STEP: Creating a kubernetes client @ 06/05/24 13:32:05.296
  Jun  5 13:32:05.296: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename container-probe @ 06/05/24 13:32:05.297
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:32:05.309
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:32:05.311
  STEP: Creating pod busybox-ad7fc1cf-c1df-4536-9500-992138f01f1f in namespace container-probe-2843 @ 06/05/24 13:32:05.313
  STEP: checking the pod's current state and verifying that restartCount is present @ 06/05/24 13:32:07.328
  Jun  5 13:32:07.331: INFO: Initial restart count of pod busybox-ad7fc1cf-c1df-4536-9500-992138f01f1f is 0
  Jun  5 13:32:07.333: INFO: Get pod busybox-ad7fc1cf-c1df-4536-9500-992138f01f1f in namespace container-probe-2843
  Jun  5 13:32:09.340: INFO: Get pod busybox-ad7fc1cf-c1df-4536-9500-992138f01f1f in namespace container-probe-2843
  Jun  5 13:32:11.345: INFO: Get pod busybox-ad7fc1cf-c1df-4536-9500-992138f01f1f in namespace container-probe-2843
  Jun  5 13:32:13.352: INFO: Get pod busybox-ad7fc1cf-c1df-4536-9500-992138f01f1f in namespace container-probe-2843
  Jun  5 13:32:15.358: INFO: Get pod busybox-ad7fc1cf-c1df-4536-9500-992138f01f1f in namespace container-probe-2843
  Jun  5 13:32:17.364: INFO: Get pod busybox-ad7fc1cf-c1df-4536-9500-992138f01f1f in namespace container-probe-2843
  Jun  5 13:32:19.368: INFO: Get pod busybox-ad7fc1cf-c1df-4536-9500-992138f01f1f in namespace container-probe-2843
  Jun  5 13:32:21.374: INFO: Get pod busybox-ad7fc1cf-c1df-4536-9500-992138f01f1f in namespace container-probe-2843
  Jun  5 13:32:23.379: INFO: Get pod busybox-ad7fc1cf-c1df-4536-9500-992138f01f1f in namespace container-probe-2843
  Jun  5 13:32:25.386: INFO: Get pod busybox-ad7fc1cf-c1df-4536-9500-992138f01f1f in namespace container-probe-2843
  Jun  5 13:32:27.391: INFO: Get pod busybox-ad7fc1cf-c1df-4536-9500-992138f01f1f in namespace container-probe-2843
  Jun  5 13:32:29.397: INFO: Get pod busybox-ad7fc1cf-c1df-4536-9500-992138f01f1f in namespace container-probe-2843
  Jun  5 13:32:31.403: INFO: Get pod busybox-ad7fc1cf-c1df-4536-9500-992138f01f1f in namespace container-probe-2843
  Jun  5 13:32:33.408: INFO: Get pod busybox-ad7fc1cf-c1df-4536-9500-992138f01f1f in namespace container-probe-2843
  Jun  5 13:32:35.415: INFO: Get pod busybox-ad7fc1cf-c1df-4536-9500-992138f01f1f in namespace container-probe-2843
  Jun  5 13:32:37.422: INFO: Get pod busybox-ad7fc1cf-c1df-4536-9500-992138f01f1f in namespace container-probe-2843
  Jun  5 13:32:39.428: INFO: Get pod busybox-ad7fc1cf-c1df-4536-9500-992138f01f1f in namespace container-probe-2843
  Jun  5 13:32:41.435: INFO: Get pod busybox-ad7fc1cf-c1df-4536-9500-992138f01f1f in namespace container-probe-2843
  Jun  5 13:32:43.441: INFO: Get pod busybox-ad7fc1cf-c1df-4536-9500-992138f01f1f in namespace container-probe-2843
  Jun  5 13:32:45.448: INFO: Get pod busybox-ad7fc1cf-c1df-4536-9500-992138f01f1f in namespace container-probe-2843
  Jun  5 13:32:47.450: INFO: Get pod busybox-ad7fc1cf-c1df-4536-9500-992138f01f1f in namespace container-probe-2843
  Jun  5 13:32:49.454: INFO: Get pod busybox-ad7fc1cf-c1df-4536-9500-992138f01f1f in namespace container-probe-2843
  Jun  5 13:32:51.460: INFO: Get pod busybox-ad7fc1cf-c1df-4536-9500-992138f01f1f in namespace container-probe-2843
  Jun  5 13:32:53.467: INFO: Get pod busybox-ad7fc1cf-c1df-4536-9500-992138f01f1f in namespace container-probe-2843
  Jun  5 13:32:55.474: INFO: Get pod busybox-ad7fc1cf-c1df-4536-9500-992138f01f1f in namespace container-probe-2843
  Jun  5 13:32:57.480: INFO: Get pod busybox-ad7fc1cf-c1df-4536-9500-992138f01f1f in namespace container-probe-2843
  Jun  5 13:32:59.486: INFO: Get pod busybox-ad7fc1cf-c1df-4536-9500-992138f01f1f in namespace container-probe-2843
  Jun  5 13:33:01.491: INFO: Get pod busybox-ad7fc1cf-c1df-4536-9500-992138f01f1f in namespace container-probe-2843
  Jun  5 13:33:03.495: INFO: Get pod busybox-ad7fc1cf-c1df-4536-9500-992138f01f1f in namespace container-probe-2843
  Jun  5 13:33:05.498: INFO: Get pod busybox-ad7fc1cf-c1df-4536-9500-992138f01f1f in namespace container-probe-2843
  Jun  5 13:33:07.502: INFO: Get pod busybox-ad7fc1cf-c1df-4536-9500-992138f01f1f in namespace container-probe-2843
  Jun  5 13:33:09.509: INFO: Get pod busybox-ad7fc1cf-c1df-4536-9500-992138f01f1f in namespace container-probe-2843
  Jun  5 13:33:11.516: INFO: Get pod busybox-ad7fc1cf-c1df-4536-9500-992138f01f1f in namespace container-probe-2843
  Jun  5 13:33:13.522: INFO: Get pod busybox-ad7fc1cf-c1df-4536-9500-992138f01f1f in namespace container-probe-2843
  Jun  5 13:33:15.530: INFO: Get pod busybox-ad7fc1cf-c1df-4536-9500-992138f01f1f in namespace container-probe-2843
  Jun  5 13:33:17.535: INFO: Get pod busybox-ad7fc1cf-c1df-4536-9500-992138f01f1f in namespace container-probe-2843
  Jun  5 13:33:19.541: INFO: Get pod busybox-ad7fc1cf-c1df-4536-9500-992138f01f1f in namespace container-probe-2843
  Jun  5 13:33:21.546: INFO: Get pod busybox-ad7fc1cf-c1df-4536-9500-992138f01f1f in namespace container-probe-2843
  Jun  5 13:33:23.553: INFO: Get pod busybox-ad7fc1cf-c1df-4536-9500-992138f01f1f in namespace container-probe-2843
  Jun  5 13:33:25.559: INFO: Get pod busybox-ad7fc1cf-c1df-4536-9500-992138f01f1f in namespace container-probe-2843
  Jun  5 13:33:27.566: INFO: Get pod busybox-ad7fc1cf-c1df-4536-9500-992138f01f1f in namespace container-probe-2843
  Jun  5 13:33:29.573: INFO: Get pod busybox-ad7fc1cf-c1df-4536-9500-992138f01f1f in namespace container-probe-2843
  Jun  5 13:33:31.580: INFO: Get pod busybox-ad7fc1cf-c1df-4536-9500-992138f01f1f in namespace container-probe-2843
  Jun  5 13:33:33.585: INFO: Get pod busybox-ad7fc1cf-c1df-4536-9500-992138f01f1f in namespace container-probe-2843
  Jun  5 13:33:35.592: INFO: Get pod busybox-ad7fc1cf-c1df-4536-9500-992138f01f1f in namespace container-probe-2843
  Jun  5 13:33:37.598: INFO: Get pod busybox-ad7fc1cf-c1df-4536-9500-992138f01f1f in namespace container-probe-2843
  Jun  5 13:33:39.604: INFO: Get pod busybox-ad7fc1cf-c1df-4536-9500-992138f01f1f in namespace container-probe-2843
  Jun  5 13:33:41.609: INFO: Get pod busybox-ad7fc1cf-c1df-4536-9500-992138f01f1f in namespace container-probe-2843
  Jun  5 13:33:43.617: INFO: Get pod busybox-ad7fc1cf-c1df-4536-9500-992138f01f1f in namespace container-probe-2843
  Jun  5 13:33:45.623: INFO: Get pod busybox-ad7fc1cf-c1df-4536-9500-992138f01f1f in namespace container-probe-2843
  Jun  5 13:33:47.630: INFO: Get pod busybox-ad7fc1cf-c1df-4536-9500-992138f01f1f in namespace container-probe-2843
  Jun  5 13:33:49.636: INFO: Get pod busybox-ad7fc1cf-c1df-4536-9500-992138f01f1f in namespace container-probe-2843
  Jun  5 13:33:51.642: INFO: Get pod busybox-ad7fc1cf-c1df-4536-9500-992138f01f1f in namespace container-probe-2843
  Jun  5 13:33:53.648: INFO: Get pod busybox-ad7fc1cf-c1df-4536-9500-992138f01f1f in namespace container-probe-2843
  Jun  5 13:33:55.652: INFO: Get pod busybox-ad7fc1cf-c1df-4536-9500-992138f01f1f in namespace container-probe-2843
  Jun  5 13:33:57.658: INFO: Get pod busybox-ad7fc1cf-c1df-4536-9500-992138f01f1f in namespace container-probe-2843
  Jun  5 13:33:59.664: INFO: Get pod busybox-ad7fc1cf-c1df-4536-9500-992138f01f1f in namespace container-probe-2843
  Jun  5 13:34:01.671: INFO: Get pod busybox-ad7fc1cf-c1df-4536-9500-992138f01f1f in namespace container-probe-2843
  Jun  5 13:34:03.677: INFO: Get pod busybox-ad7fc1cf-c1df-4536-9500-992138f01f1f in namespace container-probe-2843
  Jun  5 13:34:05.681: INFO: Get pod busybox-ad7fc1cf-c1df-4536-9500-992138f01f1f in namespace container-probe-2843
  Jun  5 13:34:07.685: INFO: Get pod busybox-ad7fc1cf-c1df-4536-9500-992138f01f1f in namespace container-probe-2843
  Jun  5 13:34:09.690: INFO: Get pod busybox-ad7fc1cf-c1df-4536-9500-992138f01f1f in namespace container-probe-2843
  Jun  5 13:34:11.693: INFO: Get pod busybox-ad7fc1cf-c1df-4536-9500-992138f01f1f in namespace container-probe-2843
  Jun  5 13:34:13.698: INFO: Get pod busybox-ad7fc1cf-c1df-4536-9500-992138f01f1f in namespace container-probe-2843
  Jun  5 13:34:15.704: INFO: Get pod busybox-ad7fc1cf-c1df-4536-9500-992138f01f1f in namespace container-probe-2843
  Jun  5 13:34:17.710: INFO: Get pod busybox-ad7fc1cf-c1df-4536-9500-992138f01f1f in namespace container-probe-2843
  Jun  5 13:34:19.716: INFO: Get pod busybox-ad7fc1cf-c1df-4536-9500-992138f01f1f in namespace container-probe-2843
  Jun  5 13:34:21.722: INFO: Get pod busybox-ad7fc1cf-c1df-4536-9500-992138f01f1f in namespace container-probe-2843
  Jun  5 13:34:23.728: INFO: Get pod busybox-ad7fc1cf-c1df-4536-9500-992138f01f1f in namespace container-probe-2843
  Jun  5 13:34:25.734: INFO: Get pod busybox-ad7fc1cf-c1df-4536-9500-992138f01f1f in namespace container-probe-2843
  Jun  5 13:34:27.739: INFO: Get pod busybox-ad7fc1cf-c1df-4536-9500-992138f01f1f in namespace container-probe-2843
  Jun  5 13:34:29.746: INFO: Get pod busybox-ad7fc1cf-c1df-4536-9500-992138f01f1f in namespace container-probe-2843
  Jun  5 13:34:31.751: INFO: Get pod busybox-ad7fc1cf-c1df-4536-9500-992138f01f1f in namespace container-probe-2843
  Jun  5 13:34:33.755: INFO: Get pod busybox-ad7fc1cf-c1df-4536-9500-992138f01f1f in namespace container-probe-2843
  Jun  5 13:34:35.759: INFO: Get pod busybox-ad7fc1cf-c1df-4536-9500-992138f01f1f in namespace container-probe-2843
  Jun  5 13:34:37.763: INFO: Get pod busybox-ad7fc1cf-c1df-4536-9500-992138f01f1f in namespace container-probe-2843
  Jun  5 13:34:39.766: INFO: Get pod busybox-ad7fc1cf-c1df-4536-9500-992138f01f1f in namespace container-probe-2843
  Jun  5 13:34:41.771: INFO: Get pod busybox-ad7fc1cf-c1df-4536-9500-992138f01f1f in namespace container-probe-2843
  Jun  5 13:34:43.776: INFO: Get pod busybox-ad7fc1cf-c1df-4536-9500-992138f01f1f in namespace container-probe-2843
  Jun  5 13:34:45.783: INFO: Get pod busybox-ad7fc1cf-c1df-4536-9500-992138f01f1f in namespace container-probe-2843
  Jun  5 13:34:47.789: INFO: Get pod busybox-ad7fc1cf-c1df-4536-9500-992138f01f1f in namespace container-probe-2843
  Jun  5 13:34:49.796: INFO: Get pod busybox-ad7fc1cf-c1df-4536-9500-992138f01f1f in namespace container-probe-2843
  Jun  5 13:34:51.802: INFO: Get pod busybox-ad7fc1cf-c1df-4536-9500-992138f01f1f in namespace container-probe-2843
  Jun  5 13:34:53.805: INFO: Get pod busybox-ad7fc1cf-c1df-4536-9500-992138f01f1f in namespace container-probe-2843
  Jun  5 13:34:55.812: INFO: Get pod busybox-ad7fc1cf-c1df-4536-9500-992138f01f1f in namespace container-probe-2843
  Jun  5 13:34:57.816: INFO: Get pod busybox-ad7fc1cf-c1df-4536-9500-992138f01f1f in namespace container-probe-2843
  Jun  5 13:34:59.822: INFO: Get pod busybox-ad7fc1cf-c1df-4536-9500-992138f01f1f in namespace container-probe-2843
  Jun  5 13:35:01.828: INFO: Get pod busybox-ad7fc1cf-c1df-4536-9500-992138f01f1f in namespace container-probe-2843
  Jun  5 13:35:03.834: INFO: Get pod busybox-ad7fc1cf-c1df-4536-9500-992138f01f1f in namespace container-probe-2843
  Jun  5 13:35:05.841: INFO: Get pod busybox-ad7fc1cf-c1df-4536-9500-992138f01f1f in namespace container-probe-2843
  Jun  5 13:35:07.847: INFO: Get pod busybox-ad7fc1cf-c1df-4536-9500-992138f01f1f in namespace container-probe-2843
  Jun  5 13:35:09.851: INFO: Get pod busybox-ad7fc1cf-c1df-4536-9500-992138f01f1f in namespace container-probe-2843
  Jun  5 13:35:11.856: INFO: Get pod busybox-ad7fc1cf-c1df-4536-9500-992138f01f1f in namespace container-probe-2843
  Jun  5 13:35:13.862: INFO: Get pod busybox-ad7fc1cf-c1df-4536-9500-992138f01f1f in namespace container-probe-2843
  Jun  5 13:35:15.870: INFO: Get pod busybox-ad7fc1cf-c1df-4536-9500-992138f01f1f in namespace container-probe-2843
  Jun  5 13:35:17.876: INFO: Get pod busybox-ad7fc1cf-c1df-4536-9500-992138f01f1f in namespace container-probe-2843
  Jun  5 13:35:19.881: INFO: Get pod busybox-ad7fc1cf-c1df-4536-9500-992138f01f1f in namespace container-probe-2843
  Jun  5 13:35:21.887: INFO: Get pod busybox-ad7fc1cf-c1df-4536-9500-992138f01f1f in namespace container-probe-2843
  Jun  5 13:35:23.894: INFO: Get pod busybox-ad7fc1cf-c1df-4536-9500-992138f01f1f in namespace container-probe-2843
  Jun  5 13:35:25.901: INFO: Get pod busybox-ad7fc1cf-c1df-4536-9500-992138f01f1f in namespace container-probe-2843
  Jun  5 13:35:27.906: INFO: Get pod busybox-ad7fc1cf-c1df-4536-9500-992138f01f1f in namespace container-probe-2843
  Jun  5 13:35:29.912: INFO: Get pod busybox-ad7fc1cf-c1df-4536-9500-992138f01f1f in namespace container-probe-2843
  Jun  5 13:35:31.919: INFO: Get pod busybox-ad7fc1cf-c1df-4536-9500-992138f01f1f in namespace container-probe-2843
  Jun  5 13:35:33.925: INFO: Get pod busybox-ad7fc1cf-c1df-4536-9500-992138f01f1f in namespace container-probe-2843
  Jun  5 13:35:35.932: INFO: Get pod busybox-ad7fc1cf-c1df-4536-9500-992138f01f1f in namespace container-probe-2843
  Jun  5 13:35:37.938: INFO: Get pod busybox-ad7fc1cf-c1df-4536-9500-992138f01f1f in namespace container-probe-2843
  Jun  5 13:35:39.944: INFO: Get pod busybox-ad7fc1cf-c1df-4536-9500-992138f01f1f in namespace container-probe-2843
  Jun  5 13:35:41.948: INFO: Get pod busybox-ad7fc1cf-c1df-4536-9500-992138f01f1f in namespace container-probe-2843
  Jun  5 13:35:43.951: INFO: Get pod busybox-ad7fc1cf-c1df-4536-9500-992138f01f1f in namespace container-probe-2843
  Jun  5 13:35:45.956: INFO: Get pod busybox-ad7fc1cf-c1df-4536-9500-992138f01f1f in namespace container-probe-2843
  Jun  5 13:35:47.962: INFO: Get pod busybox-ad7fc1cf-c1df-4536-9500-992138f01f1f in namespace container-probe-2843
  Jun  5 13:35:49.968: INFO: Get pod busybox-ad7fc1cf-c1df-4536-9500-992138f01f1f in namespace container-probe-2843
  Jun  5 13:35:51.974: INFO: Get pod busybox-ad7fc1cf-c1df-4536-9500-992138f01f1f in namespace container-probe-2843
  Jun  5 13:35:53.980: INFO: Get pod busybox-ad7fc1cf-c1df-4536-9500-992138f01f1f in namespace container-probe-2843
  Jun  5 13:35:55.987: INFO: Get pod busybox-ad7fc1cf-c1df-4536-9500-992138f01f1f in namespace container-probe-2843
  Jun  5 13:35:57.993: INFO: Get pod busybox-ad7fc1cf-c1df-4536-9500-992138f01f1f in namespace container-probe-2843
  Jun  5 13:36:00.000: INFO: Get pod busybox-ad7fc1cf-c1df-4536-9500-992138f01f1f in namespace container-probe-2843
  Jun  5 13:36:02.006: INFO: Get pod busybox-ad7fc1cf-c1df-4536-9500-992138f01f1f in namespace container-probe-2843
  Jun  5 13:36:04.013: INFO: Get pod busybox-ad7fc1cf-c1df-4536-9500-992138f01f1f in namespace container-probe-2843
  Jun  5 13:36:06.019: INFO: Get pod busybox-ad7fc1cf-c1df-4536-9500-992138f01f1f in namespace container-probe-2843
  STEP: deleting the pod @ 06/05/24 13:36:08.02
  Jun  5 13:36:08.032: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2843" for this suite. @ 06/05/24 13:36:08.036
• [242.747 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 06/05/24 13:36:08.044
  Jun  5 13:36:08.044: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename watch @ 06/05/24 13:36:08.045
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:36:08.057
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:36:08.059
  STEP: creating a watch on configmaps with a certain label @ 06/05/24 13:36:08.062
  STEP: creating a new configmap @ 06/05/24 13:36:08.063
  STEP: modifying the configmap once @ 06/05/24 13:36:08.068
  STEP: changing the label value of the configmap @ 06/05/24 13:36:08.075
  STEP: Expecting to observe a delete notification for the watched object @ 06/05/24 13:36:08.087
  Jun  5 13:36:08.087: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-277  7df45074-9922-44dd-b526-09141117df69 8913 0 2024-06-05 13:36:08 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-06-05 13:36:08 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun  5 13:36:08.087: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-277  7df45074-9922-44dd-b526-09141117df69 8914 0 2024-06-05 13:36:08 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-06-05 13:36:08 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun  5 13:36:08.087: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-277  7df45074-9922-44dd-b526-09141117df69 8915 0 2024-06-05 13:36:08 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-06-05 13:36:08 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 06/05/24 13:36:08.087
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 06/05/24 13:36:08.092
  STEP: changing the label value of the configmap back @ 06/05/24 13:36:18.093
  STEP: modifying the configmap a third time @ 06/05/24 13:36:18.103
  STEP: deleting the configmap @ 06/05/24 13:36:18.115
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 06/05/24 13:36:18.122
  Jun  5 13:36:18.122: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-277  7df45074-9922-44dd-b526-09141117df69 8934 0 2024-06-05 13:36:08 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-06-05 13:36:18 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun  5 13:36:18.122: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-277  7df45074-9922-44dd-b526-09141117df69 8935 0 2024-06-05 13:36:08 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-06-05 13:36:18 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun  5 13:36:18.122: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-277  7df45074-9922-44dd-b526-09141117df69 8936 0 2024-06-05 13:36:08 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-06-05 13:36:18 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun  5 13:36:18.123: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-277" for this suite. @ 06/05/24 13:36:18.125
• [10.085 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 06/05/24 13:36:18.128
  Jun  5 13:36:18.128: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename secrets @ 06/05/24 13:36:18.129
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:36:18.137
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:36:18.139
  Jun  5 13:36:18.162: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4944" for this suite. @ 06/05/24 13:36:18.164
• [0.039 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 06/05/24 13:36:18.167
  Jun  5 13:36:18.167: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename deployment @ 06/05/24 13:36:18.168
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:36:18.177
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:36:18.179
  Jun  5 13:36:18.186: INFO: Pod name cleanup-pod: Found 0 pods out of 1
  Jun  5 13:36:23.189: INFO: Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 06/05/24 13:36:23.189
  Jun  5 13:36:23.189: INFO: Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 06/05/24 13:36:23.196
  Jun  5 13:36:23.203: INFO: Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4774",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cea0fb28-9183-4607-8b1e-a05ab7705033",
      ResourceVersion: (string) (len=4) "8969",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853191383,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853191383,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 0,
      Replicas: (int32) 0,
      UpdatedReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) <nil>,
      CollisionCount: (*int32)(<nil>)
    }
  }


  Jun  5 13:36:23.206: INFO: New ReplicaSet "test-cleanup-deployment-7bc75bbdf6" of Deployment "test-cleanup-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-cleanup-deployment-7bc75bbdf6",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4774",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a32eb396-aeae-4bdc-90b6-88df70ea6069",
      ResourceVersion: (string) (len=4) "8971",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853191383,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7bc75bbdf6"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "cea0fb28-9183-4607-8b1e-a05ab7705033",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853191383,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 63 65 61 30 66 62  32 38 2d 39 31 38 33 2d  |\"cea0fb28-9183-|
              00000120  34 36 30 37 2d 38 62 31  65 2d 61 30 35 61 62 37  |4607-8b1e-a05ab7|
              00000130  37 30 35 30 33 33 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |705033\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "7bc75bbdf6",
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "7bc75bbdf6"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 0,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jun  5 13:36:23.208: INFO: All old ReplicaSets of Deployment "test-cleanup-deployment":
  Jun  5 13:36:23.208: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4774",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b0faee07-f580-4931-ad77-567ce1558de2",
      ResourceVersion: (string) (len=4) "8970",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853191378,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "pod": (string) (len=5) "httpd",
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "cea0fb28-9183-4607-8b1e-a05ab7705033",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853191378,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=483) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000050  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000060  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000070  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000080  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000090  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              000000a0  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000b0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000c0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000d0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000f0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000100  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000110  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000120  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000130  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000140  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000160  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000170  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000180  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000190  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000001a0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001b0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001c0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001d0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001e0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853191379,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853191383,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=103) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000020  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              00000030  22 75 69 64 5c 22 3a 5c  22 63 65 61 30 66 62 32  |"uid\":\"cea0fb2|
              00000040  38 2d 39 31 38 33 2d 34  36 30 37 2d 38 62 31 65  |8-9183-4607-8b1e|
              00000050  2d 61 30 35 61 62 37 37  30 35 30 33 33 5c 22 7d  |-a05ab7705033\"}|
              00000060  22 3a 7b 7d 7d 7d 7d                              |":{}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "pod": (string) (len=5) "httpd",
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jun  5 13:36:23.213: INFO: Pod "test-cleanup-controller-f4s7b" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=29) "test-cleanup-controller-f4s7b",
      GenerateName: (string) (len=24) "test-cleanup-controller-",
      Namespace: (string) (len=15) "deployment-4774",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0bc3b2b4-4ea2-4005-90d5-f6ee658ba4ab",
      ResourceVersion: (string) (len=4) "8963",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853191378,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=23) "test-cleanup-controller",
          UID: (types.UID) (len=36) "b0faee07-f580-4931-ad77-567ce1558de2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853191378,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=500) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 2c 22 66  |},"f:pod":{}},"f|
              00000050  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000060  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000070  75 69 64 5c 22 3a 5c 22  62 30 66 61 65 65 30 37  |uid\":\"b0faee07|
              00000080  2d 66 35 38 30 2d 34 39  33 31 2d 61 64 37 37 2d  |-f580-4931-ad77-|
              00000090  35 36 37 63 65 31 35 35  38 64 65 32 5c 22 7d 22  |567ce1558de2\"}"|
              000000a0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000b0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000c0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              000000d0  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              000000e0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              000000f0  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000100  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000110  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000120  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000130  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000140  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000150  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000160  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              00000170  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              00000180  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              00000190  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001a0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001b0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001c0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              000001d0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              000001e0  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              000001f0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853191379,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 31  32 38 5c 22 7d 22 3a 7b  |.244.1.128\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6tcqj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6tcqj",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)(<nil>),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "k8sconformance-m02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853191379,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853191378,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853191379,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853191379,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853191378,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.67.3",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.67.3"
        }
      },
      PodIP: (string) (len=12) "10.244.1.128",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.1.128"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853191378,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63853191378,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=127) "docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=73) "docker://973d8114170db43ec2d52d0bd08ae7045d7138bd8030c678dc56f3c2ff806497",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun  5 13:36:23.217: INFO: Pod "test-cleanup-deployment-7bc75bbdf6-x76v4" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-cleanup-deployment-7bc75bbdf6-x76v4",
      GenerateName: (string) (len=35) "test-cleanup-deployment-7bc75bbdf6-",
      Namespace: (string) (len=15) "deployment-4774",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f1a7c7e6-cd80-4460-976c-7fc1971bbfff",
      ResourceVersion: (string) (len=4) "8973",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853191383,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7bc75bbdf6"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-cleanup-deployment-7bc75bbdf6",
          UID: (types.UID) (len=36) "a32eb396-aeae-4bdc-90b6-88df70ea6069",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853191383,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 33  32 65 62 33 39 36 2d 61  |d\":\"a32eb396-a|
              00000090  65 61 65 2d 34 62 64 63  2d 39 30 62 36 2d 38 38  |eae-4bdc-90b6-88|
              000000a0  64 66 37 30 65 61 36 30  36 39 5c 22 7d 22 3a 7b  |df70ea6069\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2zk2b",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2zk2b",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun  5 13:36:23.218: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-4774" for this suite. @ 06/05/24 13:36:23.224
• [5.062 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] Services should provide secure master service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:775
  STEP: Creating a kubernetes client @ 06/05/24 13:36:23.23
  Jun  5 13:36:23.230: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename services @ 06/05/24 13:36:23.232
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:36:23.24
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:36:23.242
  Jun  5 13:36:23.244: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7323" for this suite. @ 06/05/24 13:36:23.246
• [0.019 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] IngressClass API should support creating IngressClass API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingressclass.go:268
  STEP: Creating a kubernetes client @ 06/05/24 13:36:23.25
  Jun  5 13:36:23.250: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename ingressclass @ 06/05/24 13:36:23.251
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:36:23.259
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:36:23.26
  STEP: getting /apis @ 06/05/24 13:36:23.262
  STEP: getting /apis/networking.k8s.io @ 06/05/24 13:36:23.264
  STEP: getting /apis/networking.k8s.iov1 @ 06/05/24 13:36:23.265
  STEP: creating @ 06/05/24 13:36:23.265
  STEP: getting @ 06/05/24 13:36:23.276
  STEP: listing @ 06/05/24 13:36:23.278
  STEP: watching @ 06/05/24 13:36:23.279
  Jun  5 13:36:23.279: INFO: starting watch
  STEP: patching @ 06/05/24 13:36:23.28
  STEP: updating @ 06/05/24 13:36:23.282
  Jun  5 13:36:23.285: INFO: waiting for watch events with expected annotations
  Jun  5 13:36:23.285: INFO: saw patched and updated annotations
  STEP: deleting @ 06/05/24 13:36:23.285
  STEP: deleting a collection @ 06/05/24 13:36:23.29
  Jun  5 13:36:23.296: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-7603" for this suite. @ 06/05/24 13:36:23.298
• [0.050 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:54
  STEP: Creating a kubernetes client @ 06/05/24 13:36:23.3
  Jun  5 13:36:23.300: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename podtemplate @ 06/05/24 13:36:23.301
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:36:23.31
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:36:23.311
  Jun  5 13:36:23.328: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-4082" for this suite. @ 06/05/24 13:36:23.33
• [0.032 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:103
  STEP: Creating a kubernetes client @ 06/05/24 13:36:23.333
  Jun  5 13:36:23.333: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename resourcequota @ 06/05/24 13:36:23.333
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:36:23.341
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:36:23.343
  STEP: Counting existing ResourceQuota @ 06/05/24 13:36:23.345
  STEP: Creating a ResourceQuota @ 06/05/24 13:36:28.347
  STEP: Ensuring resource quota status is calculated @ 06/05/24 13:36:28.351
  STEP: Creating a Service @ 06/05/24 13:36:30.357
  STEP: Creating a NodePort Service @ 06/05/24 13:36:30.379
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 06/05/24 13:36:30.399
  STEP: Ensuring resource quota status captures service creation @ 06/05/24 13:36:30.416
  STEP: Deleting Services @ 06/05/24 13:36:32.422
  STEP: Ensuring resource quota status released usage @ 06/05/24 13:36:32.454
  Jun  5 13:36:34.460: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1290" for this suite. @ 06/05/24 13:36:34.463
• [11.138 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:505
  STEP: Creating a kubernetes client @ 06/05/24 13:36:34.471
  Jun  5 13:36:34.471: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename configmap @ 06/05/24 13:36:34.472
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:36:34.491
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:36:34.493
  Jun  5 13:36:34.527: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5304" for this suite. @ 06/05/24 13:36:34.53
• [0.063 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:69
  STEP: Creating a kubernetes client @ 06/05/24 13:36:34.535
  Jun  5 13:36:34.535: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename crd-publish-openapi @ 06/05/24 13:36:34.536
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:36:34.547
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:36:34.549
  Jun  5 13:36:34.552: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 06/05/24 13:36:35.706
  Jun  5 13:36:35.706: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=crd-publish-openapi-4292 --namespace=crd-publish-openapi-4292 create -f -'
  Jun  5 13:36:37.773: INFO: stderr: ""
  Jun  5 13:36:37.773: INFO: stdout: "e2e-test-crd-publish-openapi-7857-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  Jun  5 13:36:37.773: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=crd-publish-openapi-4292 --namespace=crd-publish-openapi-4292 delete e2e-test-crd-publish-openapi-7857-crds test-foo'
  Jun  5 13:36:37.819: INFO: stderr: ""
  Jun  5 13:36:37.819: INFO: stdout: "e2e-test-crd-publish-openapi-7857-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  Jun  5 13:36:37.819: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=crd-publish-openapi-4292 --namespace=crd-publish-openapi-4292 apply -f -'
  Jun  5 13:36:37.859: INFO: stderr: ""
  Jun  5 13:36:37.859: INFO: stdout: "e2e-test-crd-publish-openapi-7857-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  Jun  5 13:36:37.859: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=crd-publish-openapi-4292 --namespace=crd-publish-openapi-4292 delete e2e-test-crd-publish-openapi-7857-crds test-foo'
  Jun  5 13:36:37.902: INFO: stderr: ""
  Jun  5 13:36:37.902: INFO: stdout: "e2e-test-crd-publish-openapi-7857-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 06/05/24 13:36:37.902
  Jun  5 13:36:37.902: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=crd-publish-openapi-4292 --namespace=crd-publish-openapi-4292 create -f -'
  Jun  5 13:36:37.946: INFO: rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 06/05/24 13:36:37.946
  Jun  5 13:36:37.946: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=crd-publish-openapi-4292 --namespace=crd-publish-openapi-4292 create -f -'
  Jun  5 13:36:37.985: INFO: rc: 1
  Jun  5 13:36:37.986: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=crd-publish-openapi-4292 --namespace=crd-publish-openapi-4292 apply -f -'
  Jun  5 13:36:38.023: INFO: rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 06/05/24 13:36:38.024
  Jun  5 13:36:38.024: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=crd-publish-openapi-4292 --namespace=crd-publish-openapi-4292 create -f -'
  Jun  5 13:36:38.062: INFO: rc: 1
  Jun  5 13:36:38.062: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=crd-publish-openapi-4292 --namespace=crd-publish-openapi-4292 apply -f -'
  Jun  5 13:36:38.106: INFO: rc: 1
  STEP: kubectl explain works to explain CR properties @ 06/05/24 13:36:38.106
  Jun  5 13:36:38.106: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=crd-publish-openapi-4292 explain e2e-test-crd-publish-openapi-7857-crds'
  Jun  5 13:36:38.144: INFO: stderr: ""
  Jun  5 13:36:38.144: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-7857-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 06/05/24 13:36:38.144
  Jun  5 13:36:38.144: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=crd-publish-openapi-4292 explain e2e-test-crd-publish-openapi-7857-crds.metadata'
  Jun  5 13:36:38.186: INFO: stderr: ""
  Jun  5 13:36:38.186: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-7857-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  Jun  5 13:36:38.186: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=crd-publish-openapi-4292 explain e2e-test-crd-publish-openapi-7857-crds.spec'
  Jun  5 13:36:38.223: INFO: stderr: ""
  Jun  5 13:36:38.223: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-7857-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  Jun  5 13:36:38.223: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=crd-publish-openapi-4292 explain e2e-test-crd-publish-openapi-7857-crds.spec.bars'
  Jun  5 13:36:38.261: INFO: stderr: ""
  Jun  5 13:36:38.261: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-7857-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 06/05/24 13:36:38.261
  Jun  5 13:36:38.261: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=crd-publish-openapi-4292 explain e2e-test-crd-publish-openapi-7857-crds.spec.bars2'
  Jun  5 13:36:38.296: INFO: rc: 1
  Jun  5 13:36:39.443: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4292" for this suite. @ 06/05/24 13:36:39.451
• [4.922 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:55
  STEP: Creating a kubernetes client @ 06/05/24 13:36:39.457
  Jun  5 13:36:39.457: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename downward-api @ 06/05/24 13:36:39.458
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:36:39.467
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:36:39.469
  STEP: Creating a pod to test downward API volume plugin @ 06/05/24 13:36:39.472
  STEP: Saw pod success @ 06/05/24 13:36:43.491
  Jun  5 13:36:43.494: INFO: Trying to get logs from node k8sconformance-m02 pod downwardapi-volume-80e8a0cc-465f-45e3-8aea-c9194766ddc9 container client-container: <nil>
  STEP: delete the pod @ 06/05/24 13:36:43.511
  Jun  5 13:36:43.524: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6189" for this suite. @ 06/05/24 13:36:43.526
• [4.072 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:189
  STEP: Creating a kubernetes client @ 06/05/24 13:36:43.529
  Jun  5 13:36:43.529: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename var-expansion @ 06/05/24 13:36:43.53
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:36:43.535
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:36:43.537
  Jun  5 13:36:45.550: INFO: Deleting pod "var-expansion-cc39b7ac-7391-4d62-9463-8a22df995d53" in namespace "var-expansion-5102"
  Jun  5 13:36:45.556: INFO: Wait up to 5m0s for pod "var-expansion-cc39b7ac-7391-4d62-9463-8a22df995d53" to be fully deleted
  Jun  5 13:36:47.563: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-5102" for this suite. @ 06/05/24 13:36:47.566
• [4.043 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 06/05/24 13:36:47.573
  Jun  5 13:36:47.573: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename secrets @ 06/05/24 13:36:47.575
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:36:47.587
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:36:47.59
  STEP: Creating secret with name secret-test-c5eca87f-7602-442a-b220-f78012b073a8 @ 06/05/24 13:36:47.593
  STEP: Creating a pod to test consume secrets @ 06/05/24 13:36:47.598
  STEP: Saw pod success @ 06/05/24 13:36:51.619
  Jun  5 13:36:51.623: INFO: Trying to get logs from node k8sconformance-m02 pod pod-secrets-3c8d98a8-242e-4241-b5f5-dd2fb5597339 container secret-volume-test: <nil>
  STEP: delete the pod @ 06/05/24 13:36:51.631
  Jun  5 13:36:51.644: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2345" for this suite. @ 06/05/24 13:36:51.647
• [4.077 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:223
  STEP: Creating a kubernetes client @ 06/05/24 13:36:51.65
  Jun  5 13:36:51.650: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename downward-api @ 06/05/24 13:36:51.651
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:36:51.659
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:36:51.66
  STEP: Creating a pod to test downward API volume plugin @ 06/05/24 13:36:51.662
  STEP: Saw pod success @ 06/05/24 13:36:55.681
  Jun  5 13:36:55.683: INFO: Trying to get logs from node k8sconformance-m02 pod downwardapi-volume-d43d6c27-8c9f-41a7-b291-300ef7d9a9ea container client-container: <nil>
  STEP: delete the pod @ 06/05/24 13:36:55.689
  Jun  5 13:36:55.701: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8124" for this suite. @ 06/05/24 13:36:55.704
• [4.058 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 06/05/24 13:36:55.708
  Jun  5 13:36:55.708: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename pods @ 06/05/24 13:36:55.709
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:36:55.719
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:36:55.722
  Jun  5 13:36:55.724: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: creating the pod @ 06/05/24 13:36:55.725
  STEP: submitting the pod to kubernetes @ 06/05/24 13:36:55.725
  Jun  5 13:36:57.809: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2456" for this suite. @ 06/05/24 13:36:57.811
• [2.108 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:329
  STEP: Creating a kubernetes client @ 06/05/24 13:36:57.817
  Jun  5 13:36:57.817: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename dns @ 06/05/24 13:36:57.817
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:36:57.824
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:36:57.826
  STEP: Creating a test externalName service @ 06/05/24 13:36:57.828
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-7511.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-7511.svc.cluster.local; sleep 1; done
   @ 06/05/24 13:36:57.831
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-7511.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-7511.svc.cluster.local; sleep 1; done
   @ 06/05/24 13:36:57.831
  STEP: creating a pod to probe DNS @ 06/05/24 13:36:57.831
  STEP: submitting the pod to kubernetes @ 06/05/24 13:36:57.831
  STEP: retrieving the pod @ 06/05/24 13:36:59.846
  STEP: looking for the results for each expected name from probers @ 06/05/24 13:36:59.849
  Jun  5 13:36:59.855: INFO: DNS probes using dns-test-3d6e7da7-bf1c-4a76-8026-173c07676c93 succeeded

  STEP: changing the externalName to bar.example.com @ 06/05/24 13:36:59.855
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-7511.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-7511.svc.cluster.local; sleep 1; done
   @ 06/05/24 13:36:59.862
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-7511.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-7511.svc.cluster.local; sleep 1; done
   @ 06/05/24 13:36:59.862
  STEP: creating a second pod to probe DNS @ 06/05/24 13:36:59.862
  STEP: submitting the pod to kubernetes @ 06/05/24 13:36:59.862
  STEP: retrieving the pod @ 06/05/24 13:37:01.879
  STEP: looking for the results for each expected name from probers @ 06/05/24 13:37:01.882
  Jun  5 13:37:01.886: INFO: File wheezy_udp@dns-test-service-3.dns-7511.svc.cluster.local from pod  dns-7511/dns-test-f385a17f-35e6-4d4e-b484-9581501cf788 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Jun  5 13:37:01.889: INFO: File jessie_udp@dns-test-service-3.dns-7511.svc.cluster.local from pod  dns-7511/dns-test-f385a17f-35e6-4d4e-b484-9581501cf788 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Jun  5 13:37:01.889: INFO: Lookups using dns-7511/dns-test-f385a17f-35e6-4d4e-b484-9581501cf788 failed for: [wheezy_udp@dns-test-service-3.dns-7511.svc.cluster.local jessie_udp@dns-test-service-3.dns-7511.svc.cluster.local]

  Jun  5 13:37:01.899: INFO: Pod client logs for webserver: 
  Jun  5 13:37:01.906: INFO: Pod client logs for querier: 
  Jun  5 13:37:01.911: INFO: Pod client logs for jessie-querier: 
  Jun  5 13:37:06.888: INFO: File wheezy_udp@dns-test-service-3.dns-7511.svc.cluster.local from pod  dns-7511/dns-test-f385a17f-35e6-4d4e-b484-9581501cf788 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Jun  5 13:37:06.892: INFO: File jessie_udp@dns-test-service-3.dns-7511.svc.cluster.local from pod  dns-7511/dns-test-f385a17f-35e6-4d4e-b484-9581501cf788 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Jun  5 13:37:06.892: INFO: Lookups using dns-7511/dns-test-f385a17f-35e6-4d4e-b484-9581501cf788 failed for: [wheezy_udp@dns-test-service-3.dns-7511.svc.cluster.local jessie_udp@dns-test-service-3.dns-7511.svc.cluster.local]

  Jun  5 13:37:06.900: INFO: Pod client logs for webserver: 
  Jun  5 13:37:06.906: INFO: Pod client logs for querier: 
  Jun  5 13:37:06.913: INFO: Pod client logs for jessie-querier: 
  Jun  5 13:37:11.887: INFO: File wheezy_udp@dns-test-service-3.dns-7511.svc.cluster.local from pod  dns-7511/dns-test-f385a17f-35e6-4d4e-b484-9581501cf788 contains '' instead of 'bar.example.com.'
  Jun  5 13:37:11.891: INFO: File jessie_udp@dns-test-service-3.dns-7511.svc.cluster.local from pod  dns-7511/dns-test-f385a17f-35e6-4d4e-b484-9581501cf788 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Jun  5 13:37:11.891: INFO: Lookups using dns-7511/dns-test-f385a17f-35e6-4d4e-b484-9581501cf788 failed for: [wheezy_udp@dns-test-service-3.dns-7511.svc.cluster.local jessie_udp@dns-test-service-3.dns-7511.svc.cluster.local]

  Jun  5 13:37:11.896: INFO: Pod client logs for webserver: 
  Jun  5 13:37:11.901: INFO: Pod client logs for querier: 
  Jun  5 13:37:11.907: INFO: Pod client logs for jessie-querier: 
  Jun  5 13:37:16.888: INFO: File wheezy_udp@dns-test-service-3.dns-7511.svc.cluster.local from pod  dns-7511/dns-test-f385a17f-35e6-4d4e-b484-9581501cf788 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Jun  5 13:37:16.891: INFO: File jessie_udp@dns-test-service-3.dns-7511.svc.cluster.local from pod  dns-7511/dns-test-f385a17f-35e6-4d4e-b484-9581501cf788 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Jun  5 13:37:16.891: INFO: Lookups using dns-7511/dns-test-f385a17f-35e6-4d4e-b484-9581501cf788 failed for: [wheezy_udp@dns-test-service-3.dns-7511.svc.cluster.local jessie_udp@dns-test-service-3.dns-7511.svc.cluster.local]

  Jun  5 13:37:16.899: INFO: Pod client logs for webserver: 
  Jun  5 13:37:16.906: INFO: Pod client logs for querier: 
  Jun  5 13:37:16.912: INFO: Pod client logs for jessie-querier: 
  Jun  5 13:37:21.890: INFO: File wheezy_udp@dns-test-service-3.dns-7511.svc.cluster.local from pod  dns-7511/dns-test-f385a17f-35e6-4d4e-b484-9581501cf788 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Jun  5 13:37:21.893: INFO: File jessie_udp@dns-test-service-3.dns-7511.svc.cluster.local from pod  dns-7511/dns-test-f385a17f-35e6-4d4e-b484-9581501cf788 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Jun  5 13:37:21.893: INFO: Lookups using dns-7511/dns-test-f385a17f-35e6-4d4e-b484-9581501cf788 failed for: [wheezy_udp@dns-test-service-3.dns-7511.svc.cluster.local jessie_udp@dns-test-service-3.dns-7511.svc.cluster.local]

  Jun  5 13:37:21.901: INFO: Pod client logs for webserver: 
  Jun  5 13:37:21.908: INFO: Pod client logs for querier: 
  Jun  5 13:37:21.916: INFO: Pod client logs for jessie-querier: 
  Jun  5 13:37:26.889: INFO: File wheezy_udp@dns-test-service-3.dns-7511.svc.cluster.local from pod  dns-7511/dns-test-f385a17f-35e6-4d4e-b484-9581501cf788 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Jun  5 13:37:26.893: INFO: File jessie_udp@dns-test-service-3.dns-7511.svc.cluster.local from pod  dns-7511/dns-test-f385a17f-35e6-4d4e-b484-9581501cf788 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Jun  5 13:37:26.893: INFO: Lookups using dns-7511/dns-test-f385a17f-35e6-4d4e-b484-9581501cf788 failed for: [wheezy_udp@dns-test-service-3.dns-7511.svc.cluster.local jessie_udp@dns-test-service-3.dns-7511.svc.cluster.local]

  Jun  5 13:37:26.900: INFO: Pod client logs for webserver: 
  Jun  5 13:37:26.907: INFO: Pod client logs for querier: 
  Jun  5 13:37:26.915: INFO: Pod client logs for jessie-querier: 
  Jun  5 13:37:31.892: INFO: DNS probes using dns-test-f385a17f-35e6-4d4e-b484-9581501cf788 succeeded

  STEP: changing the service to type=ClusterIP @ 06/05/24 13:37:31.892
  W0605 13:37:31.909329      22 warnings.go:70] spec.externalName is ignored when spec.type is not "ExternalName"
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-7511.svc.cluster.local A > /results/wheezy_udp@dns-test-service-3.dns-7511.svc.cluster.local; sleep 1; done
   @ 06/05/24 13:37:31.909
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-7511.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-7511.svc.cluster.local; sleep 1; done
   @ 06/05/24 13:37:31.909
  STEP: creating a third pod to probe DNS @ 06/05/24 13:37:31.909
  STEP: submitting the pod to kubernetes @ 06/05/24 13:37:31.912
  STEP: retrieving the pod @ 06/05/24 13:37:33.927
  STEP: looking for the results for each expected name from probers @ 06/05/24 13:37:33.93
  Jun  5 13:37:33.936: INFO: DNS probes using dns-test-6474dff5-d106-48c4-9b33-ef2f8ae6a2fa succeeded

  STEP: deleting the pod @ 06/05/24 13:37:33.936
  STEP: deleting the pod @ 06/05/24 13:37:33.946
  STEP: deleting the pod @ 06/05/24 13:37:33.956
  STEP: deleting the test externalName service @ 06/05/24 13:37:33.971
  Jun  5 13:37:33.993: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-7511" for this suite. @ 06/05/24 13:37:33.996
• [36.182 seconds]
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:357
  STEP: Creating a kubernetes client @ 06/05/24 13:37:33.999
  Jun  5 13:37:33.999: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename crd-publish-openapi @ 06/05/24 13:37:34
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:37:34.009
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:37:34.012
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 06/05/24 13:37:34.013
  Jun  5 13:37:34.014: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  Jun  5 13:37:35.167: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  Jun  5 13:37:39.846: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6854" for this suite. @ 06/05/24 13:37:39.853
• [5.860 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:321
  STEP: Creating a kubernetes client @ 06/05/24 13:37:39.859
  Jun  5 13:37:39.859: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename statefulset @ 06/05/24 13:37:39.86
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:37:39.867
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:37:39.869
  STEP: Creating service test in namespace statefulset-4834 @ 06/05/24 13:37:39.871
  STEP: Creating a new StatefulSet @ 06/05/24 13:37:39.874
  Jun  5 13:37:39.880: INFO: Found 0 stateful pods, waiting for 3
  Jun  5 13:37:49.887: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Jun  5 13:37:49.887: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Jun  5 13:37:49.887: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  Jun  5 13:37:49.896: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=statefulset-4834 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jun  5 13:37:50.004: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jun  5 13:37:50.004: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jun  5 13:37:50.004: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 06/05/24 13:38:00.016
  Jun  5 13:38:00.036: INFO: Updating stateful set ss2
  STEP: Creating a new revision @ 06/05/24 13:38:00.036
  STEP: Updating Pods in reverse ordinal order @ 06/05/24 13:38:10.047
  Jun  5 13:38:10.049: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=statefulset-4834 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jun  5 13:38:10.158: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Jun  5 13:38:10.158: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jun  5 13:38:10.158: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  STEP: Rolling back to a previous revision @ 06/05/24 13:38:20.175
  Jun  5 13:38:20.175: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=statefulset-4834 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jun  5 13:38:20.285: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jun  5 13:38:20.285: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jun  5 13:38:20.285: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jun  5 13:38:30.318: INFO: Updating stateful set ss2
  STEP: Rolling back update in reverse ordinal order @ 06/05/24 13:38:40.328
  Jun  5 13:38:40.332: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=statefulset-4834 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jun  5 13:38:40.446: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Jun  5 13:38:40.446: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jun  5 13:38:40.446: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Jun  5 13:38:50.464: INFO: Deleting all statefulset in ns statefulset-4834
  Jun  5 13:38:50.466: INFO: Scaling statefulset ss2 to 0
  Jun  5 13:39:00.480: INFO: Waiting for statefulset status.replicas updated to 0
  Jun  5 13:39:00.483: INFO: Deleting statefulset ss2
  Jun  5 13:39:00.494: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-4834" for this suite. @ 06/05/24 13:39:00.497
• [80.643 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1416
  STEP: Creating a kubernetes client @ 06/05/24 13:39:00.503
  Jun  5 13:39:00.503: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename services @ 06/05/24 13:39:00.503
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:39:00.515
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:39:00.518
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-5992 @ 06/05/24 13:39:00.52
  STEP: changing the ExternalName service to type=ClusterIP @ 06/05/24 13:39:00.524
  STEP: creating replication controller externalname-service in namespace services-5992 @ 06/05/24 13:39:00.534
  I0605 13:39:00.542690      22 runners.go:197] Created replication controller with name: externalname-service, namespace: services-5992, replica count: 2
  I0605 13:39:03.595348      22 runners.go:197] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jun  5 13:39:03.595: INFO: Creating new exec pod
  Jun  5 13:39:06.613: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=services-5992 exec execpodxbkd9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Jun  5 13:39:06.719: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Jun  5 13:39:06.719: INFO: stdout: "externalname-service-hsxjz"
  Jun  5 13:39:06.719: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=services-5992 exec execpodxbkd9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.98.204.210 80'
  Jun  5 13:39:06.804: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.98.204.210 80\nConnection to 10.98.204.210 80 port [tcp/http] succeeded!\n"
  Jun  5 13:39:06.804: INFO: stdout: "externalname-service-hsxjz"
  Jun  5 13:39:06.805: INFO: Cleaning up the ExternalName to ClusterIP test service
  Jun  5 13:39:06.822: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5992" for this suite. @ 06/05/24 13:39:06.826
• [6.328 seconds]
------------------------------
S
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 06/05/24 13:39:06.831
  Jun  5 13:39:06.831: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename secrets @ 06/05/24 13:39:06.832
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:39:06.841
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:39:06.843
  STEP: Creating secret with name s-test-opt-del-ef82361e-1325-4a70-a997-9add71559a02 @ 06/05/24 13:39:06.848
  STEP: Creating secret with name s-test-opt-upd-d3257036-6d01-4169-b6df-e33688f2a5e0 @ 06/05/24 13:39:06.852
  STEP: Creating the pod @ 06/05/24 13:39:06.855
  STEP: Deleting secret s-test-opt-del-ef82361e-1325-4a70-a997-9add71559a02 @ 06/05/24 13:39:08.893
  STEP: Updating secret s-test-opt-upd-d3257036-6d01-4169-b6df-e33688f2a5e0 @ 06/05/24 13:39:08.898
  STEP: Creating secret with name s-test-opt-create-9e4bf01c-de6b-4217-abec-51d27d2bbc0a @ 06/05/24 13:39:08.9
  STEP: waiting to observe update in volume @ 06/05/24 13:39:08.903
  Jun  5 13:39:12.949: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1980" for this suite. @ 06/05/24 13:39:12.952
• [6.127 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:176
  STEP: Creating a kubernetes client @ 06/05/24 13:39:12.959
  Jun  5 13:39:12.959: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename configmap @ 06/05/24 13:39:12.96
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:39:12.973
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:39:12.975
  STEP: Creating configMap with name configmap-test-upd-2317e30e-5e60-4687-b87f-342d524c8ad3 @ 06/05/24 13:39:12.98
  STEP: Creating the pod @ 06/05/24 13:39:12.984
  STEP: Waiting for pod with text data @ 06/05/24 13:39:15
  STEP: Waiting for pod with binary data @ 06/05/24 13:39:15.007
  Jun  5 13:39:15.013: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-553" for this suite. @ 06/05/24 13:39:15.016
• [2.061 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:90
  STEP: Creating a kubernetes client @ 06/05/24 13:39:15.02
  Jun  5 13:39:15.021: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename projected @ 06/05/24 13:39:15.022
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:39:15.033
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:39:15.036
  STEP: Creating configMap with name projected-configmap-test-volume-map-64b11426-75e7-4687-8a75-c48a0d728f76 @ 06/05/24 13:39:15.038
  STEP: Creating a pod to test consume configMaps @ 06/05/24 13:39:15.042
  STEP: Saw pod success @ 06/05/24 13:39:17.058
  Jun  5 13:39:17.061: INFO: Trying to get logs from node k8sconformance-m02 pod pod-projected-configmaps-ac1d8ae6-d347-48fa-aea5-a43e63901992 container agnhost-container: <nil>
  STEP: delete the pod @ 06/05/24 13:39:17.068
  Jun  5 13:39:17.079: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1837" for this suite. @ 06/05/24 13:39:17.082
• [2.065 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:48
  STEP: Creating a kubernetes client @ 06/05/24 13:39:17.086
  Jun  5 13:39:17.086: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename configmap @ 06/05/24 13:39:17.087
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:39:17.097
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:39:17.099
  STEP: Creating configMap with name configmap-test-volume-58fa95ff-3daa-4580-95ab-c02dd699428b @ 06/05/24 13:39:17.101
  STEP: Creating a pod to test consume configMaps @ 06/05/24 13:39:17.105
  STEP: Saw pod success @ 06/05/24 13:39:19.12
  Jun  5 13:39:19.123: INFO: Trying to get logs from node k8sconformance-m02 pod pod-configmaps-ea146e34-195d-4b14-afe7-1e4131c92c93 container agnhost-container: <nil>
  STEP: delete the pod @ 06/05/24 13:39:19.13
  Jun  5 13:39:19.144: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6083" for this suite. @ 06/05/24 13:39:19.147
• [2.065 seconds]
------------------------------
S
------------------------------
[sig-node] RuntimeClass should support RuntimeClasses API operations [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:191
  STEP: Creating a kubernetes client @ 06/05/24 13:39:19.151
  Jun  5 13:39:19.151: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename runtimeclass @ 06/05/24 13:39:19.152
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:39:19.164
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:39:19.167
  STEP: getting /apis @ 06/05/24 13:39:19.17
  STEP: getting /apis/node.k8s.io @ 06/05/24 13:39:19.173
  STEP: getting /apis/node.k8s.io/v1 @ 06/05/24 13:39:19.174
  STEP: creating @ 06/05/24 13:39:19.175
  STEP: watching @ 06/05/24 13:39:19.189
  Jun  5 13:39:19.189: INFO: starting watch
  STEP: getting @ 06/05/24 13:39:19.194
  STEP: listing @ 06/05/24 13:39:19.197
  STEP: patching @ 06/05/24 13:39:19.199
  STEP: updating @ 06/05/24 13:39:19.203
  Jun  5 13:39:19.207: INFO: waiting for watch events with expected annotations
  STEP: deleting @ 06/05/24 13:39:19.208
  STEP: deleting a collection @ 06/05/24 13:39:19.218
  Jun  5 13:39:19.228: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-4309" for this suite. @ 06/05/24 13:39:19.23
• [0.084 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 06/05/24 13:39:19.236
  Jun  5 13:39:19.236: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename pods @ 06/05/24 13:39:19.236
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:39:19.246
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:39:19.248
  STEP: creating the pod @ 06/05/24 13:39:19.25
  STEP: submitting the pod to kubernetes @ 06/05/24 13:39:19.25
  W0605 13:39:19.256052      22 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: verifying the pod is in kubernetes @ 06/05/24 13:39:21.268
  STEP: updating the pod @ 06/05/24 13:39:21.271
  Jun  5 13:39:21.785: INFO: Successfully updated pod "pod-update-activedeadlineseconds-5d917a37-16ac-4bcf-98cb-7faa13f14c49"
  Jun  5 13:39:25.801: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8996" for this suite. @ 06/05/24 13:39:25.805
• [6.577 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1533
  STEP: Creating a kubernetes client @ 06/05/24 13:39:25.813
  Jun  5 13:39:25.813: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename services @ 06/05/24 13:39:25.815
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:39:25.826
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:39:25.829
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-1400 @ 06/05/24 13:39:25.832
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 06/05/24 13:39:25.847
  STEP: creating service externalsvc in namespace services-1400 @ 06/05/24 13:39:25.847
  STEP: creating replication controller externalsvc in namespace services-1400 @ 06/05/24 13:39:25.861
  I0605 13:39:25.867360      22 runners.go:197] Created replication controller with name: externalsvc, namespace: services-1400, replica count: 2
  I0605 13:39:28.920189      22 runners.go:197] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the NodePort service to type=ExternalName @ 06/05/24 13:39:28.922
  Jun  5 13:39:28.936: INFO: Creating new exec pod
  Jun  5 13:39:30.951: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=services-1400 exec execpod5h2d2 -- /bin/sh -x -c nslookup nodeport-service.services-1400.svc.cluster.local'
  Jun  5 13:39:31.066: INFO: stderr: "+ nslookup nodeport-service.services-1400.svc.cluster.local\n"
  Jun  5 13:39:31.066: INFO: stdout: "Server:\t\t10.96.0.10\nAddress:\t10.96.0.10#53\n\nnodeport-service.services-1400.svc.cluster.local\tcanonical name = externalsvc.services-1400.svc.cluster.local.\nName:\texternalsvc.services-1400.svc.cluster.local\nAddress: 10.106.87.50\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-1400, will wait for the garbage collector to delete the pods @ 06/05/24 13:39:31.066
  Jun  5 13:39:31.128: INFO: Deleting ReplicationController externalsvc took: 8.359672ms
  Jun  5 13:39:31.229: INFO: Terminating ReplicationController externalsvc pods took: 100.584719ms
  Jun  5 13:39:34.139: INFO: Cleaning up the NodePort to ExternalName test service
  Jun  5 13:39:34.144: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1400" for this suite. @ 06/05/24 13:39:34.146
• [8.336 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:160
  STEP: Creating a kubernetes client @ 06/05/24 13:39:34.149
  Jun  5 13:39:34.149: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename emptydir @ 06/05/24 13:39:34.15
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:39:34.156
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:39:34.157
  STEP: Creating a pod to test emptydir volume type on node default medium @ 06/05/24 13:39:34.159
  STEP: Saw pod success @ 06/05/24 13:39:38.175
  Jun  5 13:39:38.178: INFO: Trying to get logs from node k8sconformance-m02 pod pod-7f0e5758-fee8-4ba4-9255-f7c28b4f1aa6 container test-container: <nil>
  STEP: delete the pod @ 06/05/24 13:39:38.185
  Jun  5 13:39:38.200: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1825" for this suite. @ 06/05/24 13:39:38.203
• [4.060 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:209
  STEP: Creating a kubernetes client @ 06/05/24 13:39:38.209
  Jun  5 13:39:38.209: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename projected @ 06/05/24 13:39:38.21
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:39:38.222
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:39:38.224
  STEP: Creating a pod to test downward API volume plugin @ 06/05/24 13:39:38.227
  STEP: Saw pod success @ 06/05/24 13:39:42.247
  Jun  5 13:39:42.250: INFO: Trying to get logs from node k8sconformance-m02 pod downwardapi-volume-98f3a557-d0ad-4549-bfd3-8128745af45d container client-container: <nil>
  STEP: delete the pod @ 06/05/24 13:39:42.257
  Jun  5 13:39:42.271: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5832" for this suite. @ 06/05/24 13:39:42.274
• [4.070 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:223
  STEP: Creating a kubernetes client @ 06/05/24 13:39:42.28
  Jun  5 13:39:42.280: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename projected @ 06/05/24 13:39:42.281
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:39:42.294
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:39:42.297
  STEP: Creating a pod to test downward API volume plugin @ 06/05/24 13:39:42.299
  STEP: Saw pod success @ 06/05/24 13:39:46.318
  Jun  5 13:39:46.321: INFO: Trying to get logs from node k8sconformance-m02 pod downwardapi-volume-af4a34f8-7031-4da3-98ca-92a9b36b32c4 container client-container: <nil>
  STEP: delete the pod @ 06/05/24 13:39:46.328
  Jun  5 13:39:46.342: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2850" for this suite. @ 06/05/24 13:39:46.345
• [4.070 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:163
  STEP: Creating a kubernetes client @ 06/05/24 13:39:46.35
  Jun  5 13:39:46.350: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename resourcequota @ 06/05/24 13:39:46.351
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:39:46.363
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:39:46.366
  STEP: Discovering how many secrets are in namespace by default @ 06/05/24 13:39:46.368
  STEP: Counting existing ResourceQuota @ 06/05/24 13:39:51.371
  STEP: Creating a ResourceQuota @ 06/05/24 13:39:56.376
  STEP: Ensuring resource quota status is calculated @ 06/05/24 13:39:56.382
  STEP: Creating a Secret @ 06/05/24 13:39:58.389
  STEP: Ensuring resource quota status captures secret creation @ 06/05/24 13:39:58.401
  STEP: Deleting a secret @ 06/05/24 13:40:00.408
  STEP: Ensuring resource quota status released usage @ 06/05/24 13:40:00.416
  Jun  5 13:40:02.422: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-486" for this suite. @ 06/05/24 13:40:02.425
• [16.082 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:139
  STEP: Creating a kubernetes client @ 06/05/24 13:40:02.432
  Jun  5 13:40:02.432: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename configmap @ 06/05/24 13:40:02.433
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:40:02.445
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:40:02.448
  STEP: Creating configMap that has name configmap-test-emptyKey-2ba771b3-374e-427b-a9d1-a6b8b2bd45b4 @ 06/05/24 13:40:02.451
  Jun  5 13:40:02.453: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5534" for this suite. @ 06/05/24 13:40:02.456
• [0.029 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:131
  STEP: Creating a kubernetes client @ 06/05/24 13:40:02.461
  Jun  5 13:40:02.461: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename runtimeclass @ 06/05/24 13:40:02.462
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:40:02.472
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:40:02.474
  Jun  5 13:40:04.502: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-5028" for this suite. @ 06/05/24 13:40:04.506
• [2.053 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:134
  STEP: Creating a kubernetes client @ 06/05/24 13:40:04.514
  Jun  5 13:40:04.514: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename container-probe @ 06/05/24 13:40:04.515
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:40:04.527
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:40:04.53
  STEP: Creating pod busybox-b2ed1424-e663-405a-b5a3-d7e5bca368fb in namespace container-probe-7365 @ 06/05/24 13:40:04.533
  STEP: checking the pod's current state and verifying that restartCount is present @ 06/05/24 13:40:06.549
  Jun  5 13:40:06.552: INFO: Initial restart count of pod busybox-b2ed1424-e663-405a-b5a3-d7e5bca368fb is 0
  Jun  5 13:40:06.554: INFO: Get pod busybox-b2ed1424-e663-405a-b5a3-d7e5bca368fb in namespace container-probe-7365
  Jun  5 13:40:08.561: INFO: Get pod busybox-b2ed1424-e663-405a-b5a3-d7e5bca368fb in namespace container-probe-7365
  Jun  5 13:40:10.566: INFO: Get pod busybox-b2ed1424-e663-405a-b5a3-d7e5bca368fb in namespace container-probe-7365
  Jun  5 13:40:12.573: INFO: Get pod busybox-b2ed1424-e663-405a-b5a3-d7e5bca368fb in namespace container-probe-7365
  Jun  5 13:40:14.579: INFO: Get pod busybox-b2ed1424-e663-405a-b5a3-d7e5bca368fb in namespace container-probe-7365
  Jun  5 13:40:16.585: INFO: Get pod busybox-b2ed1424-e663-405a-b5a3-d7e5bca368fb in namespace container-probe-7365
  Jun  5 13:40:18.593: INFO: Get pod busybox-b2ed1424-e663-405a-b5a3-d7e5bca368fb in namespace container-probe-7365
  Jun  5 13:40:20.597: INFO: Get pod busybox-b2ed1424-e663-405a-b5a3-d7e5bca368fb in namespace container-probe-7365
  Jun  5 13:40:22.604: INFO: Get pod busybox-b2ed1424-e663-405a-b5a3-d7e5bca368fb in namespace container-probe-7365
  Jun  5 13:40:24.609: INFO: Get pod busybox-b2ed1424-e663-405a-b5a3-d7e5bca368fb in namespace container-probe-7365
  Jun  5 13:40:26.615: INFO: Get pod busybox-b2ed1424-e663-405a-b5a3-d7e5bca368fb in namespace container-probe-7365
  Jun  5 13:40:28.620: INFO: Get pod busybox-b2ed1424-e663-405a-b5a3-d7e5bca368fb in namespace container-probe-7365
  Jun  5 13:40:30.625: INFO: Get pod busybox-b2ed1424-e663-405a-b5a3-d7e5bca368fb in namespace container-probe-7365
  Jun  5 13:40:32.632: INFO: Get pod busybox-b2ed1424-e663-405a-b5a3-d7e5bca368fb in namespace container-probe-7365
  Jun  5 13:40:34.637: INFO: Get pod busybox-b2ed1424-e663-405a-b5a3-d7e5bca368fb in namespace container-probe-7365
  Jun  5 13:40:36.642: INFO: Get pod busybox-b2ed1424-e663-405a-b5a3-d7e5bca368fb in namespace container-probe-7365
  Jun  5 13:40:38.648: INFO: Get pod busybox-b2ed1424-e663-405a-b5a3-d7e5bca368fb in namespace container-probe-7365
  Jun  5 13:40:40.654: INFO: Get pod busybox-b2ed1424-e663-405a-b5a3-d7e5bca368fb in namespace container-probe-7365
  Jun  5 13:40:42.660: INFO: Get pod busybox-b2ed1424-e663-405a-b5a3-d7e5bca368fb in namespace container-probe-7365
  Jun  5 13:40:44.666: INFO: Get pod busybox-b2ed1424-e663-405a-b5a3-d7e5bca368fb in namespace container-probe-7365
  Jun  5 13:40:46.673: INFO: Get pod busybox-b2ed1424-e663-405a-b5a3-d7e5bca368fb in namespace container-probe-7365
  Jun  5 13:40:48.680: INFO: Get pod busybox-b2ed1424-e663-405a-b5a3-d7e5bca368fb in namespace container-probe-7365
  Jun  5 13:40:50.684: INFO: Get pod busybox-b2ed1424-e663-405a-b5a3-d7e5bca368fb in namespace container-probe-7365
  Jun  5 13:40:52.690: INFO: Get pod busybox-b2ed1424-e663-405a-b5a3-d7e5bca368fb in namespace container-probe-7365
  Jun  5 13:40:54.695: INFO: Get pod busybox-b2ed1424-e663-405a-b5a3-d7e5bca368fb in namespace container-probe-7365
  Jun  5 13:40:56.700: INFO: Get pod busybox-b2ed1424-e663-405a-b5a3-d7e5bca368fb in namespace container-probe-7365
  Jun  5 13:40:56.700: INFO: Restart count of pod container-probe-7365/busybox-b2ed1424-e663-405a-b5a3-d7e5bca368fb is now 1 (50.1483526s elapsed)
  STEP: deleting the pod @ 06/05/24 13:40:56.7
  Jun  5 13:40:56.712: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-7365" for this suite. @ 06/05/24 13:40:56.716
• [52.207 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:274
  STEP: Creating a kubernetes client @ 06/05/24 13:40:56.722
  Jun  5 13:40:56.722: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename namespaces @ 06/05/24 13:40:56.723
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:40:56.734
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:40:56.736
  STEP: creating a Namespace @ 06/05/24 13:40:56.739
  STEP: patching the Namespace @ 06/05/24 13:40:56.751
  STEP: get the Namespace and ensuring it has the label @ 06/05/24 13:40:56.758
  Jun  5 13:40:56.761: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-8487" for this suite. @ 06/05/24 13:40:56.763
  STEP: Destroying namespace "nspatchtest-2b7e9a88-40cc-433f-82eb-8294224462b2-7266" for this suite. @ 06/05/24 13:40:56.767
• [0.052 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:168
  STEP: Creating a kubernetes client @ 06/05/24 13:40:56.778
  Jun  5 13:40:56.778: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename field-validation @ 06/05/24 13:40:56.779
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:40:56.789
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:40:56.791
  Jun  5 13:40:56.793: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  W0605 13:40:59.344980      22 warnings.go:70] unknown field "alpha"
  W0605 13:40:59.345022      22 warnings.go:70] unknown field "beta"
  W0605 13:40:59.345032      22 warnings.go:70] unknown field "delta"
  W0605 13:40:59.345042      22 warnings.go:70] unknown field "epsilon"
  W0605 13:40:59.345051      22 warnings.go:70] unknown field "gamma"
  Jun  5 13:40:59.903: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-7852" for this suite. @ 06/05/24 13:40:59.905
• [3.131 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:153
  STEP: Creating a kubernetes client @ 06/05/24 13:40:59.91
  Jun  5 13:40:59.910: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename crd-publish-openapi @ 06/05/24 13:40:59.911
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:40:59.923
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:40:59.926
  Jun  5 13:40:59.929: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 06/05/24 13:41:01.077
  Jun  5 13:41:01.077: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=crd-publish-openapi-1359 --namespace=crd-publish-openapi-1359 create -f -'
  Jun  5 13:41:01.129: INFO: stderr: ""
  Jun  5 13:41:01.129: INFO: stdout: "e2e-test-crd-publish-openapi-7080-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  Jun  5 13:41:01.129: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=crd-publish-openapi-1359 --namespace=crd-publish-openapi-1359 delete e2e-test-crd-publish-openapi-7080-crds test-cr'
  Jun  5 13:41:01.168: INFO: stderr: ""
  Jun  5 13:41:01.168: INFO: stdout: "e2e-test-crd-publish-openapi-7080-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  Jun  5 13:41:01.168: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=crd-publish-openapi-1359 --namespace=crd-publish-openapi-1359 apply -f -'
  Jun  5 13:41:01.212: INFO: stderr: ""
  Jun  5 13:41:01.212: INFO: stdout: "e2e-test-crd-publish-openapi-7080-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  Jun  5 13:41:01.212: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=crd-publish-openapi-1359 --namespace=crd-publish-openapi-1359 delete e2e-test-crd-publish-openapi-7080-crds test-cr'
  Jun  5 13:41:01.253: INFO: stderr: ""
  Jun  5 13:41:01.253: INFO: stdout: "e2e-test-crd-publish-openapi-7080-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 06/05/24 13:41:01.253
  Jun  5 13:41:01.253: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=crd-publish-openapi-1359 explain e2e-test-crd-publish-openapi-7080-crds'
  Jun  5 13:41:01.290: INFO: stderr: ""
  Jun  5 13:41:01.290: INFO: stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-7080-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  Jun  5 13:41:02.436: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-1359" for this suite. @ 06/05/24 13:41:02.44
• [2.534 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 06/05/24 13:41:02.445
  Jun  5 13:41:02.445: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename tables @ 06/05/24 13:41:02.445
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:41:02.452
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:41:02.453
  Jun  5 13:41:02.456: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-3640" for this suite. @ 06/05/24 13:41:02.458
• [0.016 seconds]
------------------------------
SSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:155
  STEP: Creating a kubernetes client @ 06/05/24 13:41:02.46
  Jun  5 13:41:02.460: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename var-expansion @ 06/05/24 13:41:02.461
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:41:02.47
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:41:02.472
  Jun  5 13:41:04.487: INFO: Deleting pod "var-expansion-bb3b7850-f49b-4007-a9c0-22e090eeb0d2" in namespace "var-expansion-5610"
  Jun  5 13:41:04.497: INFO: Wait up to 5m0s for pod "var-expansion-bb3b7850-f49b-4007-a9c0-22e090eeb0d2" to be fully deleted
  Jun  5 13:41:08.511: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-5610" for this suite. @ 06/05/24 13:41:08.515
• [6.060 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:836
  STEP: Creating a kubernetes client @ 06/05/24 13:41:08.522
  Jun  5 13:41:08.522: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename daemonsets @ 06/05/24 13:41:08.523
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:41:08.535
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:41:08.538
  STEP: Creating simple DaemonSet "daemon-set" @ 06/05/24 13:41:08.552
  STEP: Check that daemon pods launch on every node of the cluster. @ 06/05/24 13:41:08.557
  Jun  5 13:41:08.562: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun  5 13:41:08.562: INFO: Node k8sconformance is running 0 daemon pod, expected 1
  Jun  5 13:41:09.568: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun  5 13:41:09.568: INFO: Node k8sconformance is running 0 daemon pod, expected 1
  Jun  5 13:41:10.568: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Jun  5 13:41:10.568: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: listing all DaemonSets @ 06/05/24 13:41:10.571
  STEP: DeleteCollection of the DaemonSets @ 06/05/24 13:41:10.573
  STEP: Verify that ReplicaSets have been deleted @ 06/05/24 13:41:10.579
  Jun  5 13:41:10.586: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"10675"},"items":null}

  Jun  5 13:41:10.589: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"10675"},"items":[{"metadata":{"name":"daemon-set-8s6d6","generateName":"daemon-set-","namespace":"daemonsets-8187","uid":"65e53c17-338a-48ba-8570-32af80f89a7d","resourceVersion":"10670","creationTimestamp":"2024-06-05T13:41:08Z","labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"ecdf232a-f24a-4f08-8f5c-c137b3f041e8","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-06-05T13:41:08Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"ecdf232a-f24a-4f08-8f5c-c137b3f041e8\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-06-05T13:41:09Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.0.29\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-9sb68","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-9sb68","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"k8sconformance","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["k8sconformance"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-05T13:41:09Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-05T13:41:08Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-05T13:41:09Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-05T13:41:09Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-05T13:41:08Z"}],"hostIP":"192.168.67.2","hostIPs":[{"ip":"192.168.67.2"}],"podIP":"10.244.0.29","podIPs":[{"ip":"10.244.0.29"}],"startTime":"2024-06-05T13:41:08Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-06-05T13:41:09Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"docker://7f357f68242bd4346d83ccf2d6808a68896a3255b02090f7b69f78821e9a8783","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-pvbjp","generateName":"daemon-set-","namespace":"daemonsets-8187","uid":"a0b7e383-8193-4411-9864-5cc64a00abc4","resourceVersion":"10672","creationTimestamp":"2024-06-05T13:41:08Z","labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"ecdf232a-f24a-4f08-8f5c-c137b3f041e8","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-06-05T13:41:08Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"ecdf232a-f24a-4f08-8f5c-c137b3f041e8\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-06-05T13:41:10Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.1.157\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-w5rft","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-w5rft","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"k8sconformance-m02","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["k8sconformance-m02"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-05T13:41:10Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-05T13:41:08Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-05T13:41:10Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-05T13:41:10Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-05T13:41:08Z"}],"hostIP":"192.168.67.3","hostIPs":[{"ip":"192.168.67.3"}],"podIP":"10.244.1.157","podIPs":[{"ip":"10.244.1.157"}],"startTime":"2024-06-05T13:41:08Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-06-05T13:41:09Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"docker://da74035a0f0146a74cecfa42031cb7363e9e0ed52efe0b8337723f2e96202e04","started":true}],"qosClass":"BestEffort"}}]}

  Jun  5 13:41:10.598: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-8187" for this suite. @ 06/05/24 13:41:10.601
• [2.083 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 06/05/24 13:41:10.605
  Jun  5 13:41:10.605: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename projected @ 06/05/24 13:41:10.606
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:41:10.617
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:41:10.619
  STEP: Creating projection with secret that has name projected-secret-test-313e2817-ec9d-49b6-b59c-fb7b946e74b1 @ 06/05/24 13:41:10.622
  STEP: Creating a pod to test consume secrets @ 06/05/24 13:41:10.625
  STEP: Saw pod success @ 06/05/24 13:41:14.649
  Jun  5 13:41:14.652: INFO: Trying to get logs from node k8sconformance-m02 pod pod-projected-secrets-68b4a7ba-7968-4856-980f-5c1440f0b1d1 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 06/05/24 13:41:14.659
  Jun  5 13:41:14.677: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3339" for this suite. @ 06/05/24 13:41:14.682
• [4.082 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:195
  STEP: Creating a kubernetes client @ 06/05/24 13:41:14.687
  Jun  5 13:41:14.687: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename projected @ 06/05/24 13:41:14.688
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:41:14.698
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:41:14.702
  STEP: Creating a pod to test downward API volume plugin @ 06/05/24 13:41:14.704
  STEP: Saw pod success @ 06/05/24 13:41:18.719
  Jun  5 13:41:18.722: INFO: Trying to get logs from node k8sconformance-m02 pod downwardapi-volume-e749d3e6-6b74-4db5-b50b-a02f2aeaedd8 container client-container: <nil>
  STEP: delete the pod @ 06/05/24 13:41:18.729
  Jun  5 13:41:18.743: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9612" for this suite. @ 06/05/24 13:41:18.746
• [4.064 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:887
  STEP: Creating a kubernetes client @ 06/05/24 13:41:18.751
  Jun  5 13:41:18.751: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename kubectl @ 06/05/24 13:41:18.752
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:41:18.763
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:41:18.767
  STEP: validating api versions @ 06/05/24 13:41:18.77
  Jun  5 13:41:18.770: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=kubectl-1008 api-versions'
  Jun  5 13:41:18.806: INFO: stderr: ""
  Jun  5 13:41:18.806: INFO: stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1beta3\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\nv1\n"
  Jun  5 13:41:18.806: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1008" for this suite. @ 06/05/24 13:41:18.807
• [0.059 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:550
  STEP: Creating a kubernetes client @ 06/05/24 13:41:18.81
  Jun  5 13:41:18.810: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename container-probe @ 06/05/24 13:41:18.811
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:41:18.818
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:41:18.819
  STEP: Creating pod test-grpc-e8cab555-c672-4fa7-999b-da806f5f7560 in namespace container-probe-6853 @ 06/05/24 13:41:18.821
  STEP: checking the pod's current state and verifying that restartCount is present @ 06/05/24 13:41:20.832
  Jun  5 13:41:20.835: INFO: Initial restart count of pod test-grpc-e8cab555-c672-4fa7-999b-da806f5f7560 is 0
  Jun  5 13:41:20.838: INFO: Get pod test-grpc-e8cab555-c672-4fa7-999b-da806f5f7560 in namespace container-probe-6853
  Jun  5 13:41:22.844: INFO: Get pod test-grpc-e8cab555-c672-4fa7-999b-da806f5f7560 in namespace container-probe-6853
  Jun  5 13:41:24.851: INFO: Get pod test-grpc-e8cab555-c672-4fa7-999b-da806f5f7560 in namespace container-probe-6853
  Jun  5 13:41:26.856: INFO: Get pod test-grpc-e8cab555-c672-4fa7-999b-da806f5f7560 in namespace container-probe-6853
  Jun  5 13:41:28.863: INFO: Get pod test-grpc-e8cab555-c672-4fa7-999b-da806f5f7560 in namespace container-probe-6853
  Jun  5 13:41:30.869: INFO: Get pod test-grpc-e8cab555-c672-4fa7-999b-da806f5f7560 in namespace container-probe-6853
  Jun  5 13:41:32.874: INFO: Get pod test-grpc-e8cab555-c672-4fa7-999b-da806f5f7560 in namespace container-probe-6853
  Jun  5 13:41:34.880: INFO: Get pod test-grpc-e8cab555-c672-4fa7-999b-da806f5f7560 in namespace container-probe-6853
  Jun  5 13:41:36.887: INFO: Get pod test-grpc-e8cab555-c672-4fa7-999b-da806f5f7560 in namespace container-probe-6853
  Jun  5 13:41:38.894: INFO: Get pod test-grpc-e8cab555-c672-4fa7-999b-da806f5f7560 in namespace container-probe-6853
  Jun  5 13:41:40.899: INFO: Get pod test-grpc-e8cab555-c672-4fa7-999b-da806f5f7560 in namespace container-probe-6853
  Jun  5 13:41:42.906: INFO: Get pod test-grpc-e8cab555-c672-4fa7-999b-da806f5f7560 in namespace container-probe-6853
  Jun  5 13:41:44.912: INFO: Get pod test-grpc-e8cab555-c672-4fa7-999b-da806f5f7560 in namespace container-probe-6853
  Jun  5 13:41:46.918: INFO: Get pod test-grpc-e8cab555-c672-4fa7-999b-da806f5f7560 in namespace container-probe-6853
  Jun  5 13:41:48.924: INFO: Get pod test-grpc-e8cab555-c672-4fa7-999b-da806f5f7560 in namespace container-probe-6853
  Jun  5 13:41:50.931: INFO: Get pod test-grpc-e8cab555-c672-4fa7-999b-da806f5f7560 in namespace container-probe-6853
  Jun  5 13:41:52.937: INFO: Get pod test-grpc-e8cab555-c672-4fa7-999b-da806f5f7560 in namespace container-probe-6853
  Jun  5 13:41:54.944: INFO: Get pod test-grpc-e8cab555-c672-4fa7-999b-da806f5f7560 in namespace container-probe-6853
  Jun  5 13:41:56.948: INFO: Get pod test-grpc-e8cab555-c672-4fa7-999b-da806f5f7560 in namespace container-probe-6853
  Jun  5 13:41:58.953: INFO: Get pod test-grpc-e8cab555-c672-4fa7-999b-da806f5f7560 in namespace container-probe-6853
  Jun  5 13:42:00.959: INFO: Get pod test-grpc-e8cab555-c672-4fa7-999b-da806f5f7560 in namespace container-probe-6853
  Jun  5 13:42:02.965: INFO: Get pod test-grpc-e8cab555-c672-4fa7-999b-da806f5f7560 in namespace container-probe-6853
  Jun  5 13:42:04.972: INFO: Get pod test-grpc-e8cab555-c672-4fa7-999b-da806f5f7560 in namespace container-probe-6853
  Jun  5 13:42:06.978: INFO: Get pod test-grpc-e8cab555-c672-4fa7-999b-da806f5f7560 in namespace container-probe-6853
  Jun  5 13:42:08.984: INFO: Get pod test-grpc-e8cab555-c672-4fa7-999b-da806f5f7560 in namespace container-probe-6853
  Jun  5 13:42:10.990: INFO: Get pod test-grpc-e8cab555-c672-4fa7-999b-da806f5f7560 in namespace container-probe-6853
  Jun  5 13:42:12.997: INFO: Get pod test-grpc-e8cab555-c672-4fa7-999b-da806f5f7560 in namespace container-probe-6853
  Jun  5 13:42:15.004: INFO: Get pod test-grpc-e8cab555-c672-4fa7-999b-da806f5f7560 in namespace container-probe-6853
  Jun  5 13:42:17.010: INFO: Get pod test-grpc-e8cab555-c672-4fa7-999b-da806f5f7560 in namespace container-probe-6853
  Jun  5 13:42:19.015: INFO: Get pod test-grpc-e8cab555-c672-4fa7-999b-da806f5f7560 in namespace container-probe-6853
  Jun  5 13:42:21.023: INFO: Get pod test-grpc-e8cab555-c672-4fa7-999b-da806f5f7560 in namespace container-probe-6853
  Jun  5 13:42:23.029: INFO: Get pod test-grpc-e8cab555-c672-4fa7-999b-da806f5f7560 in namespace container-probe-6853
  Jun  5 13:42:25.036: INFO: Get pod test-grpc-e8cab555-c672-4fa7-999b-da806f5f7560 in namespace container-probe-6853
  Jun  5 13:42:25.036: INFO: Restart count of pod container-probe-6853/test-grpc-e8cab555-c672-4fa7-999b-da806f5f7560 is now 1 (1m4.20091378s elapsed)
  STEP: deleting the pod @ 06/05/24 13:42:25.037
  Jun  5 13:42:25.046: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-6853" for this suite. @ 06/05/24 13:42:25.05
• [66.245 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:250
  STEP: Creating a kubernetes client @ 06/05/24 13:42:25.055
  Jun  5 13:42:25.055: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename webhook @ 06/05/24 13:42:25.056
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:42:25.069
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:42:25.073
  STEP: Setting up server cert @ 06/05/24 13:42:25.084
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/05/24 13:42:25.281
  STEP: Deploying the webhook pod @ 06/05/24 13:42:25.285
  STEP: Wait for the deployment to be ready @ 06/05/24 13:42:25.291
  Jun  5 13:42:25.293: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 06/05/24 13:42:27.31
  STEP: Verifying the service has paired with the endpoint @ 06/05/24 13:42:27.323
  Jun  5 13:42:28.324: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 06/05/24 13:42:28.332
  STEP: create a configmap that should be updated by the webhook @ 06/05/24 13:42:28.35
  Jun  5 13:42:28.387: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5843" for this suite. @ 06/05/24 13:42:28.389
  STEP: Destroying namespace "webhook-markers-3203" for this suite. @ 06/05/24 13:42:28.394
• [3.343 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:70
  STEP: Creating a kubernetes client @ 06/05/24 13:42:28.399
  Jun  5 13:42:28.399: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename replication-controller @ 06/05/24 13:42:28.4
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:42:28.411
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:42:28.413
  STEP: Creating replication controller my-hostname-basic-42327a6f-a1a2-4e73-9032-7de5570e0eca @ 06/05/24 13:42:28.414
  Jun  5 13:42:28.418: INFO: Pod name my-hostname-basic-42327a6f-a1a2-4e73-9032-7de5570e0eca: Found 0 pods out of 1
  Jun  5 13:42:33.421: INFO: Pod name my-hostname-basic-42327a6f-a1a2-4e73-9032-7de5570e0eca: Found 1 pods out of 1
  Jun  5 13:42:33.422: INFO: Ensuring all pods for ReplicationController "my-hostname-basic-42327a6f-a1a2-4e73-9032-7de5570e0eca" are running
  Jun  5 13:42:33.424: INFO: Pod "my-hostname-basic-42327a6f-a1a2-4e73-9032-7de5570e0eca-zsgj8" is running and ready(conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-06-05 13:42:30 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-06-05 13:42:28 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-06-05 13:42:30 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-06-05 13:42:30 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-06-05 13:42:28 +0000 UTC Reason: Message:}])
  Jun  5 13:42:33.424: INFO: Trying to dial the pod
  STEP: trying to dial each unique pod @ 06/05/24 13:42:33.424
  Jun  5 13:42:33.431: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-7427" for this suite. @ 06/05/24 13:42:33.434
• [5.039 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 06/05/24 13:42:33.438
  Jun  5 13:42:33.438: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename init-container @ 06/05/24 13:42:33.439
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:42:33.449
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:42:33.451
  STEP: creating the pod @ 06/05/24 13:42:33.452
  Jun  5 13:42:33.452: INFO: PodSpec: initContainers in spec.initContainers
  Jun  5 13:43:21.651: INFO: init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-d85846c2-30c7-4469-8345-64ec40d31c92", GenerateName:"", Namespace:"init-container-2414", SelfLink:"", UID:"d92aeca1-94ac-48c1-8964-690cc18c6851", ResourceVersion:"11036", Generation:0, CreationTimestamp:time.Date(2024, time.June, 5, 13, 42, 33, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"452942984"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 5, 13, 42, 33, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004047110), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 5, 13, 43, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004047158), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-zd8j9", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc004b69260), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-zd8j9", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-zd8j9", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.9", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-zd8j9", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc00346b2a8), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"k8sconformance-m02", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc000356bd0), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc00346b320)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc00346b340)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc00346b348), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc00346b34c), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc004ae69b0), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"PodReadyToStartContainers", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.June, 5, 13, 42, 35, 0, time.Local), Reason:"", Message:""}, v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.June, 5, 13, 42, 33, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.June, 5, 13, 42, 33, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.June, 5, 13, 42, 33, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.June, 5, 13, 42, 33, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"192.168.67.3", HostIPs:[]v1.HostIP{v1.HostIP{IP:"192.168.67.3"}}, PodIP:"10.244.1.163", PodIPs:[]v1.PodIP{v1.PodIP{IP:"10.244.1.163"}}, StartTime:time.Date(2024, time.June, 5, 13, 42, 33, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc000356d20)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc000357500)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"docker-pullable://registry.k8s.io/e2e-test-images/busybox@sha256:a9155b13325b2abef48e71de77bb8ac015412a566829f621d06bfae5c699b1b9", ContainerID:"docker://c37594a83ba06ccdda55c4885f6620f0e1d0bde22a2c6d3d147e0b633eb73c12", Started:(*bool)(0xc00346b3ea), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc004b692e0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"", ContainerID:"", Started:(*bool)(0xc00346b3ff), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc004b692a0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.9", ImageID:"", ContainerID:"", Started:(*bool)(0xc00346b3cf), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  Jun  5 13:43:21.651: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-2414" for this suite. @ 06/05/24 13:43:21.654
• [48.221 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:380
  STEP: Creating a kubernetes client @ 06/05/24 13:43:21.659
  Jun  5 13:43:21.659: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename proxy @ 06/05/24 13:43:21.66
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:43:21.676
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:43:21.678
  Jun  5 13:43:21.680: INFO: Creating pod...
  Jun  5 13:43:23.693: INFO: Creating service...
  Jun  5 13:43:23.706: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-610/pods/agnhost/proxy?method=DELETE
  Jun  5 13:43:23.711: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Jun  5 13:43:23.711: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-610/pods/agnhost/proxy?method=OPTIONS
  Jun  5 13:43:23.715: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Jun  5 13:43:23.715: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-610/pods/agnhost/proxy?method=PATCH
  Jun  5 13:43:23.718: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Jun  5 13:43:23.718: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-610/pods/agnhost/proxy?method=POST
  Jun  5 13:43:23.720: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Jun  5 13:43:23.720: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-610/pods/agnhost/proxy?method=PUT
  Jun  5 13:43:23.722: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Jun  5 13:43:23.722: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-610/services/e2e-proxy-test-service/proxy?method=DELETE
  Jun  5 13:43:23.725: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Jun  5 13:43:23.725: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-610/services/e2e-proxy-test-service/proxy?method=OPTIONS
  Jun  5 13:43:23.728: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Jun  5 13:43:23.728: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-610/services/e2e-proxy-test-service/proxy?method=PATCH
  Jun  5 13:43:23.731: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Jun  5 13:43:23.731: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-610/services/e2e-proxy-test-service/proxy?method=POST
  Jun  5 13:43:23.734: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Jun  5 13:43:23.734: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-610/services/e2e-proxy-test-service/proxy?method=PUT
  Jun  5 13:43:23.737: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Jun  5 13:43:23.737: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-610/pods/agnhost/proxy?method=GET
  Jun  5 13:43:23.739: INFO: http.Client request:GET StatusCode:301
  Jun  5 13:43:23.739: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-610/services/e2e-proxy-test-service/proxy?method=GET
  Jun  5 13:43:23.741: INFO: http.Client request:GET StatusCode:301
  Jun  5 13:43:23.741: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-610/pods/agnhost/proxy?method=HEAD
  Jun  5 13:43:23.743: INFO: http.Client request:HEAD StatusCode:301
  Jun  5 13:43:23.743: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-610/services/e2e-proxy-test-service/proxy?method=HEAD
  Jun  5 13:43:23.745: INFO: http.Client request:HEAD StatusCode:301
  Jun  5 13:43:23.745: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-610" for this suite. @ 06/05/24 13:43:23.747
• [2.093 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:251
  STEP: Creating a kubernetes client @ 06/05/24 13:43:23.752
  Jun  5 13:43:23.752: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename projected @ 06/05/24 13:43:23.753
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:43:23.764
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:43:23.766
  STEP: Creating a pod to test downward API volume plugin @ 06/05/24 13:43:23.767
  STEP: Saw pod success @ 06/05/24 13:43:27.781
  Jun  5 13:43:27.784: INFO: Trying to get logs from node k8sconformance-m02 pod downwardapi-volume-f1960bb3-b16a-482d-879f-0065fb127eaa container client-container: <nil>
  STEP: delete the pod @ 06/05/24 13:43:27.803
  Jun  5 13:43:27.814: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3466" for this suite. @ 06/05/24 13:43:27.817
• [4.068 seconds]
------------------------------
SS
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:649
  STEP: Creating a kubernetes client @ 06/05/24 13:43:27.82
  Jun  5 13:43:27.820: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename svcaccounts @ 06/05/24 13:43:27.822
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:43:27.831
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:43:27.833
  STEP: creating a ServiceAccount @ 06/05/24 13:43:27.836
  STEP: watching for the ServiceAccount to be added @ 06/05/24 13:43:27.843
  STEP: patching the ServiceAccount @ 06/05/24 13:43:27.844
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 06/05/24 13:43:27.85
  STEP: deleting the ServiceAccount @ 06/05/24 13:43:27.852
  Jun  5 13:43:27.860: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-685" for this suite. @ 06/05/24 13:43:27.863
• [0.047 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:480
  STEP: Creating a kubernetes client @ 06/05/24 13:43:27.869
  Jun  5 13:43:27.869: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename gc @ 06/05/24 13:43:27.87
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:43:27.88
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:43:27.882
  STEP: create the deployment @ 06/05/24 13:43:27.885
  W0605 13:43:27.888309      22 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 06/05/24 13:43:27.888
  STEP: delete the deployment @ 06/05/24 13:43:28.39
  STEP: wait for all rs to be garbage collected @ 06/05/24 13:43:28.394
  STEP: expected 0 rs, got 1 rs @ 06/05/24 13:43:28.396
  STEP: expected 0 pods, got 2 pods @ 06/05/24 13:43:28.399
  STEP: Gathering metrics @ 06/05/24 13:43:28.899
  Jun  5 13:43:28.967: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Jun  5 13:43:28.967: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-1293" for this suite. @ 06/05/24 13:43:28.969
• [1.104 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:572
  STEP: Creating a kubernetes client @ 06/05/24 13:43:28.973
  Jun  5 13:43:28.973: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename job @ 06/05/24 13:43:28.973
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:43:28.981
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:43:28.983
  STEP: Creating a job @ 06/05/24 13:43:28.986
  STEP: Ensuring job reaches completions @ 06/05/24 13:43:28.991
  Jun  5 13:43:38.997: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-6493" for this suite. @ 06/05/24 13:43:39
• [10.035 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:251
  STEP: Creating a kubernetes client @ 06/05/24 13:43:39.008
  Jun  5 13:43:39.008: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename downward-api @ 06/05/24 13:43:39.009
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:43:39.021
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:43:39.024
  STEP: Creating a pod to test downward API volume plugin @ 06/05/24 13:43:39.026
  STEP: Saw pod success @ 06/05/24 13:43:43.049
  Jun  5 13:43:43.052: INFO: Trying to get logs from node k8sconformance-m02 pod downwardapi-volume-0412261b-13d5-4ac0-88e6-2502379d9a34 container client-container: <nil>
  STEP: delete the pod @ 06/05/24 13:43:43.059
  Jun  5 13:43:43.072: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2330" for this suite. @ 06/05/24 13:43:43.076
• [4.072 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1863
  STEP: Creating a kubernetes client @ 06/05/24 13:43:43.081
  Jun  5 13:43:43.081: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename kubectl @ 06/05/24 13:43:43.082
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:43:43.093
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:43:43.096
  STEP: Starting the proxy @ 06/05/24 13:43:43.098
  Jun  5 13:43:43.099: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=kubectl-2686 proxy --unix-socket=/tmp/kubectl-proxy-unix4115071228/test'
  STEP: retrieving proxy /api/ output @ 06/05/24 13:43:43.136
  Jun  5 13:43:43.137: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2686" for this suite. @ 06/05/24 13:43:43.139
• [0.060 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 06/05/24 13:43:43.141
  Jun  5 13:43:43.141: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename csiinlinevolumes @ 06/05/24 13:43:43.142
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:43:43.15
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:43:43.151
  STEP: creating @ 06/05/24 13:43:43.153
  STEP: getting @ 06/05/24 13:43:43.162
  STEP: listing in namespace @ 06/05/24 13:43:43.165
  STEP: patching @ 06/05/24 13:43:43.166
  STEP: deleting @ 06/05/24 13:43:43.17
  Jun  5 13:43:43.176: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-2543" for this suite. @ 06/05/24 13:43:43.177
• [0.041 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2199
  STEP: Creating a kubernetes client @ 06/05/24 13:43:43.182
  Jun  5 13:43:43.182: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename services @ 06/05/24 13:43:43.183
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:43:43.19
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:43:43.192
  STEP: creating service in namespace services-9554 @ 06/05/24 13:43:43.193
  STEP: creating service affinity-clusterip-transition in namespace services-9554 @ 06/05/24 13:43:43.193
  STEP: creating replication controller affinity-clusterip-transition in namespace services-9554 @ 06/05/24 13:43:43.201
  I0605 13:43:43.207554      22 runners.go:197] Created replication controller with name: affinity-clusterip-transition, namespace: services-9554, replica count: 3
  I0605 13:43:46.259592      22 runners.go:197] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jun  5 13:43:46.267: INFO: Creating new exec pod
  Jun  5 13:43:49.280: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=services-9554 exec execpod-affinityn8s99 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  Jun  5 13:43:49.397: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition 80 port [tcp/http] succeeded!\n"
  Jun  5 13:43:49.397: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun  5 13:43:49.397: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=services-9554 exec execpod-affinityn8s99 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.110.14.184 80'
  Jun  5 13:43:49.498: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.110.14.184 80\nConnection to 10.110.14.184 80 port [tcp/http] succeeded!\n"
  Jun  5 13:43:49.498: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun  5 13:43:49.504: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=services-9554 exec execpod-affinityn8s99 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.110.14.184:80/ ; done'
  Jun  5 13:43:49.660: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.14.184:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.14.184:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.14.184:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.14.184:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.14.184:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.14.184:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.14.184:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.14.184:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.14.184:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.14.184:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.14.184:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.14.184:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.14.184:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.14.184:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.14.184:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.14.184:80/\n"
  Jun  5 13:43:49.660: INFO: stdout: "\naffinity-clusterip-transition-fmhrw\naffinity-clusterip-transition-cdljn\naffinity-clusterip-transition-fmhrw\naffinity-clusterip-transition-cdljn\naffinity-clusterip-transition-cdljn\naffinity-clusterip-transition-gptcj\naffinity-clusterip-transition-fmhrw\naffinity-clusterip-transition-cdljn\naffinity-clusterip-transition-gptcj\naffinity-clusterip-transition-cdljn\naffinity-clusterip-transition-cdljn\naffinity-clusterip-transition-cdljn\naffinity-clusterip-transition-cdljn\naffinity-clusterip-transition-gptcj\naffinity-clusterip-transition-gptcj\naffinity-clusterip-transition-cdljn"
  Jun  5 13:43:49.660: INFO: Received response from host: affinity-clusterip-transition-fmhrw
  Jun  5 13:43:49.660: INFO: Received response from host: affinity-clusterip-transition-cdljn
  Jun  5 13:43:49.660: INFO: Received response from host: affinity-clusterip-transition-fmhrw
  Jun  5 13:43:49.660: INFO: Received response from host: affinity-clusterip-transition-cdljn
  Jun  5 13:43:49.661: INFO: Received response from host: affinity-clusterip-transition-cdljn
  Jun  5 13:43:49.661: INFO: Received response from host: affinity-clusterip-transition-gptcj
  Jun  5 13:43:49.661: INFO: Received response from host: affinity-clusterip-transition-fmhrw
  Jun  5 13:43:49.661: INFO: Received response from host: affinity-clusterip-transition-cdljn
  Jun  5 13:43:49.661: INFO: Received response from host: affinity-clusterip-transition-gptcj
  Jun  5 13:43:49.661: INFO: Received response from host: affinity-clusterip-transition-cdljn
  Jun  5 13:43:49.661: INFO: Received response from host: affinity-clusterip-transition-cdljn
  Jun  5 13:43:49.661: INFO: Received response from host: affinity-clusterip-transition-cdljn
  Jun  5 13:43:49.661: INFO: Received response from host: affinity-clusterip-transition-cdljn
  Jun  5 13:43:49.661: INFO: Received response from host: affinity-clusterip-transition-gptcj
  Jun  5 13:43:49.661: INFO: Received response from host: affinity-clusterip-transition-gptcj
  Jun  5 13:43:49.661: INFO: Received response from host: affinity-clusterip-transition-cdljn
  Jun  5 13:43:49.667: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=services-9554 exec execpod-affinityn8s99 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.110.14.184:80/ ; done'
  Jun  5 13:43:49.837: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.14.184:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.14.184:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.14.184:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.14.184:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.14.184:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.14.184:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.14.184:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.14.184:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.14.184:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.14.184:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.14.184:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.14.184:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.14.184:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.14.184:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.14.184:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.110.14.184:80/\n"
  Jun  5 13:43:49.837: INFO: stdout: "\naffinity-clusterip-transition-cdljn\naffinity-clusterip-transition-cdljn\naffinity-clusterip-transition-cdljn\naffinity-clusterip-transition-cdljn\naffinity-clusterip-transition-cdljn\naffinity-clusterip-transition-cdljn\naffinity-clusterip-transition-cdljn\naffinity-clusterip-transition-cdljn\naffinity-clusterip-transition-cdljn\naffinity-clusterip-transition-cdljn\naffinity-clusterip-transition-cdljn\naffinity-clusterip-transition-cdljn\naffinity-clusterip-transition-cdljn\naffinity-clusterip-transition-cdljn\naffinity-clusterip-transition-cdljn\naffinity-clusterip-transition-cdljn"
  Jun  5 13:43:49.837: INFO: Received response from host: affinity-clusterip-transition-cdljn
  Jun  5 13:43:49.837: INFO: Received response from host: affinity-clusterip-transition-cdljn
  Jun  5 13:43:49.837: INFO: Received response from host: affinity-clusterip-transition-cdljn
  Jun  5 13:43:49.837: INFO: Received response from host: affinity-clusterip-transition-cdljn
  Jun  5 13:43:49.837: INFO: Received response from host: affinity-clusterip-transition-cdljn
  Jun  5 13:43:49.837: INFO: Received response from host: affinity-clusterip-transition-cdljn
  Jun  5 13:43:49.837: INFO: Received response from host: affinity-clusterip-transition-cdljn
  Jun  5 13:43:49.837: INFO: Received response from host: affinity-clusterip-transition-cdljn
  Jun  5 13:43:49.837: INFO: Received response from host: affinity-clusterip-transition-cdljn
  Jun  5 13:43:49.838: INFO: Received response from host: affinity-clusterip-transition-cdljn
  Jun  5 13:43:49.838: INFO: Received response from host: affinity-clusterip-transition-cdljn
  Jun  5 13:43:49.838: INFO: Received response from host: affinity-clusterip-transition-cdljn
  Jun  5 13:43:49.838: INFO: Received response from host: affinity-clusterip-transition-cdljn
  Jun  5 13:43:49.838: INFO: Received response from host: affinity-clusterip-transition-cdljn
  Jun  5 13:43:49.838: INFO: Received response from host: affinity-clusterip-transition-cdljn
  Jun  5 13:43:49.838: INFO: Received response from host: affinity-clusterip-transition-cdljn
  Jun  5 13:43:49.838: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-9554, will wait for the garbage collector to delete the pods @ 06/05/24 13:43:49.851
  Jun  5 13:43:49.909: INFO: Deleting ReplicationController affinity-clusterip-transition took: 5.588916ms
  Jun  5 13:43:50.010: INFO: Terminating ReplicationController affinity-clusterip-transition pods took: 100.910573ms
  Jun  5 13:43:52.320: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9554" for this suite. @ 06/05/24 13:43:52.323
• [9.144 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:224
  STEP: Creating a kubernetes client @ 06/05/24 13:43:52.326
  Jun  5 13:43:52.326: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename sched-preemption @ 06/05/24 13:43:52.327
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:43:52.335
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:43:52.337
  Jun  5 13:43:52.347: INFO: Waiting up to 1m0s for all nodes to be ready
  Jun  5 13:44:52.353: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 06/05/24 13:44:52.356
  Jun  5 13:44:52.373: INFO: Created pod: pod0-0-sched-preemption-low-priority
  Jun  5 13:44:52.380: INFO: Created pod: pod0-1-sched-preemption-medium-priority
  Jun  5 13:44:52.400: INFO: Created pod: pod1-0-sched-preemption-medium-priority
  Jun  5 13:44:52.408: INFO: Created pod: pod1-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 06/05/24 13:44:52.408
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 06/05/24 13:44:54.428
  Jun  5 13:45:00.511: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-5633" for this suite. @ 06/05/24 13:45:00.514
• [68.192 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:530
  STEP: Creating a kubernetes client @ 06/05/24 13:45:00.518
  Jun  5 13:45:00.518: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename security-context-test @ 06/05/24 13:45:00.519
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:45:00.53
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:45:00.533
  Jun  5 13:45:04.564: INFO: Got logs for pod "busybox-privileged-false-ff69fbfd-125e-461d-81d9-fca9ce6c172b": "ip: RTNETLINK answers: Operation not permitted\n"
  Jun  5 13:45:04.564: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-5233" for this suite. @ 06/05/24 13:45:04.567
• [4.057 seconds]
------------------------------
S
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 06/05/24 13:45:04.575
  Jun  5 13:45:04.575: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 06/05/24 13:45:04.576
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:45:04.586
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:45:04.589
  STEP: creating a target pod @ 06/05/24 13:45:04.591
  STEP: adding an ephemeral container @ 06/05/24 13:45:06.612
  STEP: checking pod container endpoints @ 06/05/24 13:45:08.63
  Jun  5 13:45:08.630: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-3439 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun  5 13:45:08.630: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  Jun  5 13:45:08.631: INFO: ExecWithOptions: Clientset creation
  Jun  5 13:45:08.631: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/ephemeral-containers-test-3439/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  Jun  5 13:45:08.707: INFO: Exec stderr: ""
  Jun  5 13:45:08.714: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-3439" for this suite. @ 06/05/24 13:45:08.716
• [4.147 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:322
  STEP: Creating a kubernetes client @ 06/05/24 13:45:08.722
  Jun  5 13:45:08.722: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename gc @ 06/05/24 13:45:08.723
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:45:08.733
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:45:08.736
  STEP: create the rc @ 06/05/24 13:45:08.739
  W0605 13:45:08.743595      22 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 06/05/24 13:45:13.749
  STEP: wait for all pods to be garbage collected @ 06/05/24 13:45:13.753
  STEP: Gathering metrics @ 06/05/24 13:45:18.764
  Jun  5 13:45:18.851: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Jun  5 13:45:18.851: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-1395" for this suite. @ 06/05/24 13:45:18.853
• [10.133 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:305
  STEP: Creating a kubernetes client @ 06/05/24 13:45:18.856
  Jun  5 13:45:18.856: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename namespaces @ 06/05/24 13:45:18.856
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:45:18.863
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:45:18.865
  STEP: Read namespace status @ 06/05/24 13:45:18.866
  Jun  5 13:45:18.867: INFO: Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 06/05/24 13:45:18.867
  Jun  5 13:45:18.871: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 06/05/24 13:45:18.871
  Jun  5 13:45:18.875: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  Jun  5 13:45:18.875: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-3668" for this suite. @ 06/05/24 13:45:18.877
• [0.024 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 06/05/24 13:45:18.88
  Jun  5 13:45:18.880: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename secrets @ 06/05/24 13:45:18.881
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:45:18.886
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:45:18.888
  STEP: Creating secret with name secret-test-9060b826-ca91-41c1-9378-e881edc49a77 @ 06/05/24 13:45:18.89
  STEP: Creating a pod to test consume secrets @ 06/05/24 13:45:18.893
  STEP: Saw pod success @ 06/05/24 13:45:22.909
  Jun  5 13:45:22.911: INFO: Trying to get logs from node k8sconformance-m02 pod pod-secrets-ba270cd4-3675-47ac-8c12-3f2754fef5ab container secret-volume-test: <nil>
  STEP: delete the pod @ 06/05/24 13:45:22.919
  Jun  5 13:45:22.931: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6304" for this suite. @ 06/05/24 13:45:22.934
• [4.058 seconds]
------------------------------
S
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:100
  STEP: Creating a kubernetes client @ 06/05/24 13:45:22.939
  Jun  5 13:45:22.939: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename emptydir @ 06/05/24 13:45:22.94
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:45:22.947
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:45:22.948
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 06/05/24 13:45:22.95
  STEP: Saw pod success @ 06/05/24 13:45:26.969
  Jun  5 13:45:26.972: INFO: Trying to get logs from node k8sconformance-m02 pod pod-efda10a1-41b3-4ae6-86a4-ac26df1840c2 container test-container: <nil>
  STEP: delete the pod @ 06/05/24 13:45:26.98
  Jun  5 13:45:26.992: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2160" for this suite. @ 06/05/24 13:45:26.995
• [4.061 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:150
  STEP: Creating a kubernetes client @ 06/05/24 13:45:27
  Jun  5 13:45:27.000: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename emptydir @ 06/05/24 13:45:27.001
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:45:27.011
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:45:27.014
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 06/05/24 13:45:27.017
  STEP: Saw pod success @ 06/05/24 13:45:31.038
  Jun  5 13:45:31.041: INFO: Trying to get logs from node k8sconformance-m02 pod pod-c4f71192-82e2-41c3-a75c-c6b0d91b44e1 container test-container: <nil>
  STEP: delete the pod @ 06/05/24 13:45:31.049
  Jun  5 13:45:31.061: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2388" for this suite. @ 06/05/24 13:45:31.064
• [4.069 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:808
  STEP: Creating a kubernetes client @ 06/05/24 13:45:31.069
  Jun  5 13:45:31.069: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename resourcequota @ 06/05/24 13:45:31.07
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:45:31.081
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:45:31.084
  STEP: Creating a ResourceQuota with best effort scope @ 06/05/24 13:45:31.087
  STEP: Ensuring ResourceQuota status is calculated @ 06/05/24 13:45:31.091
  STEP: Creating a ResourceQuota with not best effort scope @ 06/05/24 13:45:33.097
  STEP: Ensuring ResourceQuota status is calculated @ 06/05/24 13:45:33.103
  STEP: Creating a best-effort pod @ 06/05/24 13:45:35.109
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 06/05/24 13:45:35.123
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 06/05/24 13:45:37.128
  STEP: Deleting the pod @ 06/05/24 13:45:39.134
  STEP: Ensuring resource quota status released the pod usage @ 06/05/24 13:45:39.147
  STEP: Creating a not best-effort pod @ 06/05/24 13:45:41.152
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 06/05/24 13:45:41.162
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 06/05/24 13:45:43.168
  STEP: Deleting the pod @ 06/05/24 13:45:45.174
  STEP: Ensuring resource quota status released the pod usage @ 06/05/24 13:45:45.186
  Jun  5 13:45:47.191: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8611" for this suite. @ 06/05/24 13:45:47.194
• [16.132 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:784
  STEP: Creating a kubernetes client @ 06/05/24 13:45:47.201
  Jun  5 13:45:47.201: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename job @ 06/05/24 13:45:47.203
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:45:47.214
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:45:47.216
  STEP: Creating a job @ 06/05/24 13:45:47.218
  STEP: Ensure pods equal to parallelism count is attached to the job @ 06/05/24 13:45:47.222
  STEP: patching /status @ 06/05/24 13:45:49.23
  STEP: updating /status @ 06/05/24 13:45:49.242
  STEP: get /status @ 06/05/24 13:45:49.249
  Jun  5 13:45:49.250: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-727" for this suite. @ 06/05/24 13:45:49.252
• [2.053 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:170
  STEP: Creating a kubernetes client @ 06/05/24 13:45:49.254
  Jun  5 13:45:49.254: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename configmap @ 06/05/24 13:45:49.255
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:45:49.261
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:45:49.263
  STEP: creating a ConfigMap @ 06/05/24 13:45:49.264
  STEP: fetching the ConfigMap @ 06/05/24 13:45:49.267
  STEP: patching the ConfigMap @ 06/05/24 13:45:49.268
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 06/05/24 13:45:49.272
  STEP: deleting the ConfigMap by collection with a label selector @ 06/05/24 13:45:49.274
  STEP: listing all ConfigMaps in test namespace @ 06/05/24 13:45:49.278
  Jun  5 13:45:49.280: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2529" for this suite. @ 06/05/24 13:45:49.282
• [0.030 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 06/05/24 13:45:49.284
  Jun  5 13:45:49.284: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename pods @ 06/05/24 13:45:49.285
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:45:49.292
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:45:49.294
  Jun  5 13:45:49.296: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: creating the pod @ 06/05/24 13:45:49.297
  STEP: submitting the pod to kubernetes @ 06/05/24 13:45:49.297
  Jun  5 13:45:51.315: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8484" for this suite. @ 06/05/24 13:45:51.317
• [2.036 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:332
  STEP: Creating a kubernetes client @ 06/05/24 13:45:51.32
  Jun  5 13:45:51.320: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename webhook @ 06/05/24 13:45:51.321
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:45:51.329
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:45:51.331
  STEP: Setting up server cert @ 06/05/24 13:45:51.344
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/05/24 13:45:51.466
  STEP: Deploying the webhook pod @ 06/05/24 13:45:51.47
  STEP: Wait for the deployment to be ready @ 06/05/24 13:45:51.476
  Jun  5 13:45:51.478: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 06/05/24 13:45:53.489
  STEP: Verifying the service has paired with the endpoint @ 06/05/24 13:45:53.5
  Jun  5 13:45:54.501: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Jun  5 13:45:54.508: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-2916-crds.webhook.example.com via the AdmissionRegistration API @ 06/05/24 13:45:55.021
  STEP: Creating a custom resource that should be mutated by the webhook @ 06/05/24 13:45:55.04
  Jun  5 13:45:57.635: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-170" for this suite. @ 06/05/24 13:45:57.639
  STEP: Destroying namespace "webhook-markers-5461" for this suite. @ 06/05/24 13:45:57.645
• [6.330 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:397
  STEP: Creating a kubernetes client @ 06/05/24 13:45:57.651
  Jun  5 13:45:57.651: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename resourcequota @ 06/05/24 13:45:57.652
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:45:57.664
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:45:57.667
  STEP: Counting existing ResourceQuota @ 06/05/24 13:45:57.67
  STEP: Creating a ResourceQuota @ 06/05/24 13:46:02.673
  STEP: Ensuring resource quota status is calculated @ 06/05/24 13:46:02.677
  STEP: Creating a ReplicationController @ 06/05/24 13:46:04.681
  STEP: Ensuring resource quota status captures replication controller creation @ 06/05/24 13:46:04.693
  STEP: Deleting a ReplicationController @ 06/05/24 13:46:06.698
  STEP: Ensuring resource quota status released usage @ 06/05/24 13:46:06.705
  Jun  5 13:46:08.710: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5941" for this suite. @ 06/05/24 13:46:08.712
• [11.067 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 06/05/24 13:46:08.718
  Jun  5 13:46:08.718: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename subjectreview @ 06/05/24 13:46:08.719
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:46:08.732
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:46:08.735
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-4000" @ 06/05/24 13:46:08.738
  Jun  5 13:46:08.742: INFO: saUsername: "system:serviceaccount:subjectreview-4000:e2e"
  Jun  5 13:46:08.742: INFO: saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-4000"}
  Jun  5 13:46:08.742: INFO: saUID: "3988e6e5-b4e3-42a5-802b-f6cf6ce24959"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-4000:e2e" @ 06/05/24 13:46:08.742
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-4000:e2e" @ 06/05/24 13:46:08.743
  Jun  5 13:46:08.744: INFO: sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-4000:e2e" api 'list' configmaps in "subjectreview-4000" namespace @ 06/05/24 13:46:08.744
  Jun  5 13:46:08.746: INFO: SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-4000:e2e" @ 06/05/24 13:46:08.746
  Jun  5 13:46:08.748: INFO: lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  Jun  5 13:46:08.748: INFO: LocalSubjectAccessReview has been verified
  Jun  5 13:46:08.748: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-4000" for this suite. @ 06/05/24 13:46:08.751
• [0.037 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 06/05/24 13:46:08.755
  Jun  5 13:46:08.755: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename projected @ 06/05/24 13:46:08.756
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:46:08.765
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:46:08.767
  STEP: Creating secret with name s-test-opt-del-cb44ac0a-9a04-47ee-8c8e-797527a25fb3 @ 06/05/24 13:46:08.771
  STEP: Creating secret with name s-test-opt-upd-50008525-d7b1-47ba-816a-1a1f1173ee85 @ 06/05/24 13:46:08.775
  STEP: Creating the pod @ 06/05/24 13:46:08.779
  STEP: Deleting secret s-test-opt-del-cb44ac0a-9a04-47ee-8c8e-797527a25fb3 @ 06/05/24 13:46:10.814
  STEP: Updating secret s-test-opt-upd-50008525-d7b1-47ba-816a-1a1f1173ee85 @ 06/05/24 13:46:10.819
  STEP: Creating secret with name s-test-opt-create-942876fe-f484-4329-945c-2be6b2943039 @ 06/05/24 13:46:10.825
  STEP: waiting to observe update in volume @ 06/05/24 13:46:10.829
  Jun  5 13:47:23.308: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7942" for this suite. @ 06/05/24 13:47:23.312
• [74.562 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:453
  STEP: Creating a kubernetes client @ 06/05/24 13:47:23.318
  Jun  5 13:47:23.318: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename resourcequota @ 06/05/24 13:47:23.32
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:47:23.332
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:47:23.336
  STEP: Counting existing ResourceQuota @ 06/05/24 13:47:23.338
  STEP: Creating a ResourceQuota @ 06/05/24 13:47:28.342
  STEP: Ensuring resource quota status is calculated @ 06/05/24 13:47:28.346
  STEP: Creating a ReplicaSet @ 06/05/24 13:47:30.353
  STEP: Ensuring resource quota status captures replicaset creation @ 06/05/24 13:47:30.366
  STEP: Deleting a ReplicaSet @ 06/05/24 13:47:32.372
  STEP: Ensuring resource quota status released usage @ 06/05/24 13:47:32.379
  Jun  5 13:47:34.385: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7936" for this suite. @ 06/05/24 13:47:34.389
• [11.076 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:61
  STEP: Creating a kubernetes client @ 06/05/24 13:47:34.401
  Jun  5 13:47:34.401: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename containers @ 06/05/24 13:47:34.402
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:47:34.412
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:47:34.415
  STEP: Creating a pod to test override arguments @ 06/05/24 13:47:34.417
  STEP: Saw pod success @ 06/05/24 13:47:38.437
  Jun  5 13:47:38.440: INFO: Trying to get logs from node k8sconformance-m02 pod client-containers-14ec8525-554f-4c55-8803-9c3424da7f55 container agnhost-container: <nil>
  STEP: delete the pod @ 06/05/24 13:47:38.448
  Jun  5 13:47:38.460: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-3519" for this suite. @ 06/05/24 13:47:38.463
• [4.067 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 06/05/24 13:47:38.468
  Jun  5 13:47:38.468: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename certificates @ 06/05/24 13:47:38.469
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:47:38.479
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:47:38.481
  STEP: getting /apis @ 06/05/24 13:47:38.704
  STEP: getting /apis/certificates.k8s.io @ 06/05/24 13:47:38.706
  STEP: getting /apis/certificates.k8s.io/v1 @ 06/05/24 13:47:38.707
  STEP: creating @ 06/05/24 13:47:38.707
  STEP: getting @ 06/05/24 13:47:38.717
  STEP: listing @ 06/05/24 13:47:38.718
  STEP: watching @ 06/05/24 13:47:38.719
  Jun  5 13:47:38.719: INFO: starting watch
  STEP: patching @ 06/05/24 13:47:38.719
  STEP: updating @ 06/05/24 13:47:38.723
  Jun  5 13:47:38.725: INFO: waiting for watch events with expected annotations
  Jun  5 13:47:38.725: INFO: saw patched and updated annotations
  STEP: getting /approval @ 06/05/24 13:47:38.726
  STEP: patching /approval @ 06/05/24 13:47:38.727
  STEP: updating /approval @ 06/05/24 13:47:38.731
  STEP: getting /status @ 06/05/24 13:47:38.733
  STEP: patching /status @ 06/05/24 13:47:38.734
  STEP: updating /status @ 06/05/24 13:47:38.739
  STEP: deleting @ 06/05/24 13:47:38.743
  STEP: deleting a collection @ 06/05/24 13:47:38.751
  Jun  5 13:47:38.760: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-14" for this suite. @ 06/05/24 13:47:38.763
• [0.299 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:107
  STEP: Creating a kubernetes client @ 06/05/24 13:47:38.767
  Jun  5 13:47:38.767: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename container-probe @ 06/05/24 13:47:38.768
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:47:38.778
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:47:38.781
  Jun  5 13:48:38.795: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-43" for this suite. @ 06/05/24 13:48:38.798
• [60.037 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should run through the lifecycle of a PV and a PVC [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:430
  STEP: Creating a kubernetes client @ 06/05/24 13:48:38.804
  Jun  5 13:48:38.804: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename pv @ 06/05/24 13:48:38.806
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:48:38.819
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:48:38.822
  STEP: Creating initial PV and PVC @ 06/05/24 13:48:38.825
  Jun  5 13:48:38.825: INFO: Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-5895" @ 06/05/24 13:48:38.837
  STEP: Listing PVCs in namespace "pv-5895" @ 06/05/24 13:48:38.84
  STEP: Patching the PV "pv-5895-qh82t" @ 06/05/24 13:48:38.841
  STEP: Patching the PVC "pvc-jdpdq" @ 06/05/24 13:48:38.853
  STEP: Getting PV "pv-5895-qh82t" @ 06/05/24 13:48:38.859
  STEP: Getting PVC "pvc-jdpdq" @ 06/05/24 13:48:38.86
  STEP: Deleting PVC "pvc-jdpdq" @ 06/05/24 13:48:38.862
  STEP: Confirm deletion of PVC "pvc-jdpdq" @ 06/05/24 13:48:38.866
  STEP: Deleting PV "pv-5895-qh82t" @ 06/05/24 13:48:40.873
  STEP: Confirm deletion of PV "pv-5895-qh82t" @ 06/05/24 13:48:40.882
  STEP: Recreating another PV & PVC @ 06/05/24 13:48:42.892
  Jun  5 13:48:42.892: INFO: Creating a PV followed by a PVC
  STEP: Updating the PV "pv-5895-kbhbw" @ 06/05/24 13:48:42.904
  STEP: Updating the PVC "pvc-lqsp7" @ 06/05/24 13:48:42.913
  STEP: Listing PVCs in all namespaces with the labelSelector: "pvc-lqsp7=updated" @ 06/05/24 13:48:42.921
  STEP: Deleting PVC "pvc-lqsp7" via DeleteCollection @ 06/05/24 13:48:42.923
  STEP: Confirm deletion of PVC "pvc-lqsp7" @ 06/05/24 13:48:42.93
  STEP: Deleting PV "pv-5895-kbhbw" via DeleteCollection @ 06/05/24 13:48:44.937
  STEP: Confirm deletion of PV "pv-5895-kbhbw" @ 06/05/24 13:48:44.945
  Jun  5 13:48:46.950: INFO: AfterEach: deleting 1 PVCs and 1 PVs...
  Jun  5 13:48:46.950: INFO: Deleting PersistentVolumeClaim "pvc-lqsp7"
  Jun  5 13:48:46.952: INFO: Deleting PersistentVolume "pv-5895-kbhbw"
  Jun  5 13:48:46.954: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-5895" for this suite. @ 06/05/24 13:48:46.957
• [8.158 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:708
  STEP: Creating a kubernetes client @ 06/05/24 13:48:46.962
  Jun  5 13:48:46.962: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename sched-pred @ 06/05/24 13:48:46.963
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:48:46.976
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:48:46.978
  Jun  5 13:48:46.981: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Jun  5 13:48:46.986: INFO: Waiting for terminating namespaces to be deleted...
  Jun  5 13:48:46.988: INFO: 
  Logging pods the apiserver thinks is on node k8sconformance before test
  Jun  5 13:48:46.992: INFO: coredns-76f75df574-xgft9 from kube-system started at 2024-06-05 12:48:31 +0000 UTC (1 container statuses recorded)
  Jun  5 13:48:46.992: INFO: 	Container coredns ready: true, restart count 1
  Jun  5 13:48:46.992: INFO: etcd-k8sconformance from kube-system started at 2024-06-05 12:48:19 +0000 UTC (1 container statuses recorded)
  Jun  5 13:48:46.992: INFO: 	Container etcd ready: true, restart count 0
  Jun  5 13:48:46.992: INFO: kindnet-rzd2z from kube-system started at 2024-06-05 12:48:30 +0000 UTC (1 container statuses recorded)
  Jun  5 13:48:46.992: INFO: 	Container kindnet-cni ready: true, restart count 0
  Jun  5 13:48:46.992: INFO: kube-apiserver-k8sconformance from kube-system started at 2024-06-05 12:48:19 +0000 UTC (1 container statuses recorded)
  Jun  5 13:48:46.992: INFO: 	Container kube-apiserver ready: true, restart count 0
  Jun  5 13:48:46.992: INFO: kube-controller-manager-k8sconformance from kube-system started at 2024-06-05 12:48:19 +0000 UTC (1 container statuses recorded)
  Jun  5 13:48:46.992: INFO: 	Container kube-controller-manager ready: true, restart count 0
  Jun  5 13:48:46.992: INFO: kube-proxy-gpz28 from kube-system started at 2024-06-05 12:48:30 +0000 UTC (1 container statuses recorded)
  Jun  5 13:48:46.992: INFO: 	Container kube-proxy ready: true, restart count 0
  Jun  5 13:48:46.992: INFO: kube-scheduler-k8sconformance from kube-system started at 2024-06-05 12:48:19 +0000 UTC (1 container statuses recorded)
  Jun  5 13:48:46.992: INFO: 	Container kube-scheduler ready: true, restart count 0
  Jun  5 13:48:46.992: INFO: storage-provisioner from kube-system started at 2024-06-05 12:48:32 +0000 UTC (1 container statuses recorded)
  Jun  5 13:48:46.992: INFO: 	Container storage-provisioner ready: true, restart count 1
  Jun  5 13:48:46.992: INFO: sonobuoy-systemd-logs-daemon-set-8cb29c0a4b934094-xqm4q from sonobuoy started at 2024-06-05 12:50:55 +0000 UTC (2 container statuses recorded)
  Jun  5 13:48:46.992: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun  5 13:48:46.992: INFO: 	Container systemd-logs ready: true, restart count 0
  Jun  5 13:48:46.992: INFO: 
  Logging pods the apiserver thinks is on node k8sconformance-m02 before test
  Jun  5 13:48:46.995: INFO: kindnet-ln8np from kube-system started at 2024-06-05 13:17:41 +0000 UTC (1 container statuses recorded)
  Jun  5 13:48:46.995: INFO: 	Container kindnet-cni ready: true, restart count 0
  Jun  5 13:48:46.995: INFO: kube-proxy-5kd5n from kube-system started at 2024-06-05 12:48:59 +0000 UTC (1 container statuses recorded)
  Jun  5 13:48:46.995: INFO: 	Container kube-proxy ready: true, restart count 0
  Jun  5 13:48:46.995: INFO: sonobuoy from sonobuoy started at 2024-06-05 12:50:51 +0000 UTC (1 container statuses recorded)
  Jun  5 13:48:46.995: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Jun  5 13:48:46.995: INFO: sonobuoy-e2e-job-faabc61b98714bf2 from sonobuoy started at 2024-06-05 12:50:55 +0000 UTC (2 container statuses recorded)
  Jun  5 13:48:46.995: INFO: 	Container e2e ready: true, restart count 0
  Jun  5 13:48:46.995: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun  5 13:48:46.995: INFO: sonobuoy-systemd-logs-daemon-set-8cb29c0a4b934094-jbbcp from sonobuoy started at 2024-06-05 12:50:55 +0000 UTC (2 container statuses recorded)
  Jun  5 13:48:46.996: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun  5 13:48:46.996: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 06/05/24 13:48:46.996
  STEP: Explicitly delete pod here to free the resource it takes. @ 06/05/24 13:48:49.01
  STEP: Trying to apply a random label on the found node. @ 06/05/24 13:48:49.021
  STEP: verifying the node has the label kubernetes.io/e2e-5d8e61a9-dae6-49b0-9bf4-69604362f6f0 95 @ 06/05/24 13:48:49.029
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 06/05/24 13:48:49.033
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 192.168.67.3 on the node which pod4 resides and expect not scheduled @ 06/05/24 13:48:51.045
  STEP: removing the label kubernetes.io/e2e-5d8e61a9-dae6-49b0-9bf4-69604362f6f0 off the node k8sconformance-m02 @ 06/05/24 13:53:51.056
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-5d8e61a9-dae6-49b0-9bf4-69604362f6f0 @ 06/05/24 13:53:51.07
  Jun  5 13:53:51.074: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-4931" for this suite. @ 06/05/24 13:53:51.079
• [304.123 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:134
  STEP: Creating a kubernetes client @ 06/05/24 13:53:51.085
  Jun  5 13:53:51.085: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename kubelet-test @ 06/05/24 13:53:51.086
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:53:51.099
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:53:51.102
  Jun  5 13:53:51.123: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-3358" for this suite. @ 06/05/24 13:53:51.128
• [0.049 seconds]
------------------------------
SSS
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:425
  STEP: Creating a kubernetes client @ 06/05/24 13:53:51.134
  Jun  5 13:53:51.134: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename replication-controller @ 06/05/24 13:53:51.135
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:53:51.141
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:53:51.142
  STEP: Creating ReplicationController "e2e-rc-86kp8" @ 06/05/24 13:53:51.144
  Jun  5 13:53:51.147: INFO: Get Replication Controller "e2e-rc-86kp8" to confirm replicas
  Jun  5 13:53:52.147: INFO: Get Replication Controller "e2e-rc-86kp8" to confirm replicas
  Jun  5 13:53:52.152: INFO: Found 1 replicas for "e2e-rc-86kp8" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-86kp8" @ 06/05/24 13:53:52.152
  STEP: Updating a scale subresource @ 06/05/24 13:53:52.154
  STEP: Verifying replicas where modified for replication controller "e2e-rc-86kp8" @ 06/05/24 13:53:52.16
  Jun  5 13:53:52.160: INFO: Get Replication Controller "e2e-rc-86kp8" to confirm replicas
  Jun  5 13:53:53.160: INFO: Get Replication Controller "e2e-rc-86kp8" to confirm replicas
  Jun  5 13:53:53.165: INFO: Found 2 replicas for "e2e-rc-86kp8" replication controller
  Jun  5 13:53:53.166: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-3048" for this suite. @ 06/05/24 13:53:53.169
• [2.041 seconds]
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:855
  STEP: Creating a kubernetes client @ 06/05/24 13:53:53.175
  Jun  5 13:53:53.175: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename job @ 06/05/24 13:53:53.177
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:53:53.19
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:53:53.193
  STEP: Creating a suspended job @ 06/05/24 13:53:53.198
  STEP: Patching the Job @ 06/05/24 13:53:53.203
  STEP: Watching for Job to be patched @ 06/05/24 13:53:53.217
  Jun  5 13:53:53.219: INFO: Event ADDED observed for Job e2e-nj4jj in namespace job-8028 with labels: map[e2e-job-label:e2e-nj4jj] and annotations: map[]
  Jun  5 13:53:53.219: INFO: Event MODIFIED observed for Job e2e-nj4jj in namespace job-8028 with labels: map[e2e-job-label:e2e-nj4jj] and annotations: map[]
  Jun  5 13:53:53.219: INFO: Event MODIFIED found for Job e2e-nj4jj in namespace job-8028 with labels: map[e2e-job-label:e2e-nj4jj e2e-nj4jj:patched] and annotations: map[]
  STEP: Updating the job @ 06/05/24 13:53:53.219
  STEP: Watching for Job to be updated @ 06/05/24 13:53:53.227
  Jun  5 13:53:53.228: INFO: Event MODIFIED found for Job e2e-nj4jj in namespace job-8028 with labels: map[e2e-job-label:e2e-nj4jj e2e-nj4jj:patched] and annotations: map[updated:true]
  Jun  5 13:53:53.228: INFO: Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 06/05/24 13:53:53.228
  Jun  5 13:53:53.230: INFO: Job: e2e-nj4jj as labels: map[e2e-job-label:e2e-nj4jj e2e-nj4jj:patched]
  STEP: Waiting for job to complete @ 06/05/24 13:53:53.23
  STEP: Delete a job collection with a labelselector @ 06/05/24 13:54:01.235
  STEP: Watching for Job to be deleted @ 06/05/24 13:54:01.243
  Jun  5 13:54:01.245: INFO: Event MODIFIED observed for Job e2e-nj4jj in namespace job-8028 with labels: map[e2e-job-label:e2e-nj4jj e2e-nj4jj:patched] and annotations: map[updated:true]
  Jun  5 13:54:01.246: INFO: Event MODIFIED observed for Job e2e-nj4jj in namespace job-8028 with labels: map[e2e-job-label:e2e-nj4jj e2e-nj4jj:patched] and annotations: map[updated:true]
  Jun  5 13:54:01.246: INFO: Event MODIFIED observed for Job e2e-nj4jj in namespace job-8028 with labels: map[e2e-job-label:e2e-nj4jj e2e-nj4jj:patched] and annotations: map[updated:true]
  Jun  5 13:54:01.246: INFO: Event MODIFIED observed for Job e2e-nj4jj in namespace job-8028 with labels: map[e2e-job-label:e2e-nj4jj e2e-nj4jj:patched] and annotations: map[updated:true]
  Jun  5 13:54:01.246: INFO: Event MODIFIED observed for Job e2e-nj4jj in namespace job-8028 with labels: map[e2e-job-label:e2e-nj4jj e2e-nj4jj:patched] and annotations: map[updated:true]
  Jun  5 13:54:01.246: INFO: Event DELETED found for Job e2e-nj4jj in namespace job-8028 with labels: map[e2e-job-label:e2e-nj4jj e2e-nj4jj:patched] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 06/05/24 13:54:01.246
  Jun  5 13:54:01.249: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-8028" for this suite. @ 06/05/24 13:54:01.252
• [8.082 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:105
  STEP: Creating a kubernetes client @ 06/05/24 13:54:01.258
  Jun  5 13:54:01.258: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename endpointslice @ 06/05/24 13:54:01.259
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:54:01.274
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:54:01.279
  Jun  5 13:54:03.327: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-3186" for this suite. @ 06/05/24 13:54:03.332
• [2.079 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:639
  STEP: Creating a kubernetes client @ 06/05/24 13:54:03.337
  Jun  5 13:54:03.337: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename gc @ 06/05/24 13:54:03.338
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:54:03.346
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:54:03.349
  STEP: create the rc @ 06/05/24 13:54:03.354
  W0605 13:54:03.359353      22 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 06/05/24 13:54:09.364
  STEP: wait for the rc to be deleted @ 06/05/24 13:54:09.375
  Jun  5 13:54:10.388: INFO: 80 pods remaining
  Jun  5 13:54:10.388: INFO: 80 pods has nil DeletionTimestamp
  Jun  5 13:54:10.388: INFO: 
  Jun  5 13:54:11.391: INFO: 71 pods remaining
  Jun  5 13:54:11.391: INFO: 70 pods has nil DeletionTimestamp
  Jun  5 13:54:11.391: INFO: 
  Jun  5 13:54:12.388: INFO: 60 pods remaining
  Jun  5 13:54:12.388: INFO: 60 pods has nil DeletionTimestamp
  Jun  5 13:54:12.388: INFO: 
  Jun  5 13:54:13.386: INFO: 40 pods remaining
  Jun  5 13:54:13.386: INFO: 40 pods has nil DeletionTimestamp
  Jun  5 13:54:13.386: INFO: 
  Jun  5 13:54:14.382: INFO: 31 pods remaining
  Jun  5 13:54:14.382: INFO: 30 pods has nil DeletionTimestamp
  Jun  5 13:54:14.382: INFO: 
  Jun  5 13:54:15.386: INFO: 20 pods remaining
  Jun  5 13:54:15.386: INFO: 20 pods has nil DeletionTimestamp
  Jun  5 13:54:15.386: INFO: 
  STEP: Gathering metrics @ 06/05/24 13:54:16.381
  Jun  5 13:54:16.526: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Jun  5 13:54:16.526: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-3869" for this suite. @ 06/05/24 13:54:16.528
• [13.196 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1053
  STEP: Creating a kubernetes client @ 06/05/24 13:54:16.534
  Jun  5 13:54:16.534: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename kubectl @ 06/05/24 13:54:16.535
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:54:16.542
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:54:16.544
  STEP: create deployment with httpd image @ 06/05/24 13:54:16.546
  Jun  5 13:54:16.546: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=kubectl-2765 create -f -'
  Jun  5 13:54:16.605: INFO: stderr: ""
  Jun  5 13:54:16.605: INFO: stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 06/05/24 13:54:16.605
  Jun  5 13:54:16.605: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=kubectl-2765 diff -f -'
  Jun  5 13:54:16.705: INFO: rc: 1
  Jun  5 13:54:16.705: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=kubectl-2765 delete -f -'
  Jun  5 13:54:16.756: INFO: stderr: ""
  Jun  5 13:54:16.756: INFO: stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  Jun  5 13:54:16.756: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2765" for this suite. @ 06/05/24 13:54:16.758
• [0.228 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:424
  STEP: Creating a kubernetes client @ 06/05/24 13:54:16.762
  Jun  5 13:54:16.762: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename configmap @ 06/05/24 13:54:16.763
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:54:16.77
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:54:16.771
  STEP: Creating configMap with name configmap-test-volume-450c8132-97d3-4a87-8b02-f5911110c777 @ 06/05/24 13:54:16.772
  STEP: Creating a pod to test consume configMaps @ 06/05/24 13:54:16.775
  STEP: Saw pod success @ 06/05/24 13:54:20.793
  Jun  5 13:54:20.797: INFO: Trying to get logs from node k8sconformance-m02 pod pod-configmaps-904e161f-02eb-48cc-9fc1-ee276233489c container configmap-volume-test: <nil>
  STEP: delete the pod @ 06/05/24 13:54:20.811
  Jun  5 13:54:20.823: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-346" for this suite. @ 06/05/24 13:54:20.827
• [4.069 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:144
  STEP: Creating a kubernetes client @ 06/05/24 13:54:20.832
  Jun  5 13:54:20.832: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename replicaset @ 06/05/24 13:54:20.833
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:54:20.842
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:54:20.846
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 06/05/24 13:54:20.848
  Jun  5 13:54:20.855: INFO: Pod name sample-pod: Found 0 pods out of 1
  Jun  5 13:54:25.861: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 06/05/24 13:54:25.861
  STEP: getting scale subresource @ 06/05/24 13:54:25.861
  STEP: updating a scale subresource @ 06/05/24 13:54:25.864
  STEP: verifying the replicaset Spec.Replicas was modified @ 06/05/24 13:54:25.868
  STEP: Patch a scale subresource @ 06/05/24 13:54:25.87
  Jun  5 13:54:25.880: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-7843" for this suite. @ 06/05/24 13:54:25.885
• [5.061 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:897
  STEP: Creating a kubernetes client @ 06/05/24 13:54:25.894
  Jun  5 13:54:25.894: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename pods @ 06/05/24 13:54:25.895
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:54:25.904
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:54:25.905
  STEP: creating a Pod with a static label @ 06/05/24 13:54:25.909
  STEP: watching for Pod to be ready @ 06/05/24 13:54:25.913
  Jun  5 13:54:25.914: INFO: observed Pod pod-test in namespace pods-7002 in phase Pending with labels: map[test-pod-static:true] & conditions []
  Jun  5 13:54:25.917: INFO: observed Pod pod-test in namespace pods-7002 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-06-05 13:54:25 +0000 UTC  }]
  Jun  5 13:54:25.929: INFO: observed Pod pod-test in namespace pods-7002 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-06-05 13:54:25 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-06-05 13:54:25 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-06-05 13:54:25 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-06-05 13:54:25 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-06-05 13:54:25 +0000 UTC  }]
  Jun  5 13:54:27.162: INFO: Found Pod pod-test in namespace pods-7002 in phase Running with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-06-05 13:54:27 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-06-05 13:54:25 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2024-06-05 13:54:27 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2024-06-05 13:54:27 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-06-05 13:54:25 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 06/05/24 13:54:27.165
  STEP: getting the Pod and ensuring that it's patched @ 06/05/24 13:54:27.175
  STEP: replacing the Pod's status Ready condition to False @ 06/05/24 13:54:27.179
  STEP: check the Pod again to ensure its Ready conditions are False @ 06/05/24 13:54:27.187
  STEP: deleting the Pod via a Collection with a LabelSelector @ 06/05/24 13:54:27.187
  STEP: watching for the Pod to be deleted @ 06/05/24 13:54:27.194
  Jun  5 13:54:27.196: INFO: observed event type MODIFIED
  Jun  5 13:54:28.715: INFO: observed event type MODIFIED
  Jun  5 13:54:29.211: INFO: observed event type MODIFIED
  Jun  5 13:54:29.279: INFO: observed event type MODIFIED
  Jun  5 13:54:30.234: INFO: observed event type MODIFIED
  Jun  5 13:54:30.240: INFO: observed event type MODIFIED
  Jun  5 13:54:30.245: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7002" for this suite. @ 06/05/24 13:54:30.25
• [4.362 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:85
  STEP: Creating a kubernetes client @ 06/05/24 13:54:30.256
  Jun  5 13:54:30.256: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename pod-network-test @ 06/05/24 13:54:30.257
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:54:30.263
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:54:30.265
  STEP: Performing setup for networking test in namespace pod-network-test-585 @ 06/05/24 13:54:30.266
  STEP: creating a selector @ 06/05/24 13:54:30.266
  STEP: Creating the service pods in kubernetes @ 06/05/24 13:54:30.266
  Jun  5 13:54:30.266: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 06/05/24 13:54:42.309
  Jun  5 13:54:44.328: INFO: Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  Jun  5 13:54:44.328: INFO: Breadth first check of 10.244.0.86 on host 192.168.67.2...
  Jun  5 13:54:44.330: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.1.252:9080/dial?request=hostname&protocol=http&host=10.244.0.86&port=8083&tries=1'] Namespace:pod-network-test-585 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun  5 13:54:44.330: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  Jun  5 13:54:44.331: INFO: ExecWithOptions: Clientset creation
  Jun  5 13:54:44.331: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-585/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.1.252%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.244.0.86%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Jun  5 13:54:44.409: INFO: Waiting for responses: map[]
  Jun  5 13:54:44.409: INFO: reached 10.244.0.86 after 0/1 tries
  Jun  5 13:54:44.409: INFO: Breadth first check of 10.244.1.251 on host 192.168.67.3...
  Jun  5 13:54:44.412: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.1.252:9080/dial?request=hostname&protocol=http&host=10.244.1.251&port=8083&tries=1'] Namespace:pod-network-test-585 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun  5 13:54:44.412: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  Jun  5 13:54:44.413: INFO: ExecWithOptions: Clientset creation
  Jun  5 13:54:44.413: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-585/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.1.252%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.244.1.251%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Jun  5 13:54:44.485: INFO: Waiting for responses: map[]
  Jun  5 13:54:44.485: INFO: reached 10.244.1.251 after 0/1 tries
  Jun  5 13:54:44.485: INFO: Going to retry 0 out of 2 pods....
  Jun  5 13:54:44.486: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-585" for this suite. @ 06/05/24 13:54:44.489
• [14.238 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:273
  STEP: Creating a kubernetes client @ 06/05/24 13:54:44.494
  Jun  5 13:54:44.494: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename webhook @ 06/05/24 13:54:44.495
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:54:44.505
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:54:44.507
  STEP: Setting up server cert @ 06/05/24 13:54:44.523
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/05/24 13:54:44.682
  STEP: Deploying the webhook pod @ 06/05/24 13:54:44.686
  STEP: Wait for the deployment to be ready @ 06/05/24 13:54:44.693
  Jun  5 13:54:44.697: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 06/05/24 13:54:46.708
  STEP: Verifying the service has paired with the endpoint @ 06/05/24 13:54:46.719
  Jun  5 13:54:47.719: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 06/05/24 13:54:47.726
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 06/05/24 13:54:47.743
  STEP: Creating a dummy validating-webhook-configuration object @ 06/05/24 13:54:47.757
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 06/05/24 13:54:47.765
  STEP: Creating a dummy mutating-webhook-configuration object @ 06/05/24 13:54:47.769
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 06/05/24 13:54:47.778
  Jun  5 13:54:47.816: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9165" for this suite. @ 06/05/24 13:54:47.818
  STEP: Destroying namespace "webhook-markers-1727" for this suite. @ 06/05/24 13:54:47.821
• [3.331 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 06/05/24 13:54:47.825
  Jun  5 13:54:47.825: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename projected @ 06/05/24 13:54:47.826
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:54:47.835
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:54:47.838
  STEP: Creating projection with secret that has name projected-secret-test-map-d6995a36-4722-4886-a186-230daa7f22e4 @ 06/05/24 13:54:47.84
  STEP: Creating a pod to test consume secrets @ 06/05/24 13:54:47.843
  STEP: Saw pod success @ 06/05/24 13:54:49.851
  Jun  5 13:54:49.853: INFO: Trying to get logs from node k8sconformance-m02 pod pod-projected-secrets-883a3998-e604-46c9-a121-32843f78b6c3 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 06/05/24 13:54:49.857
  Jun  5 13:54:49.866: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8852" for this suite. @ 06/05/24 13:54:49.867
• [2.046 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:163
  STEP: Creating a kubernetes client @ 06/05/24 13:54:49.872
  Jun  5 13:54:49.872: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename svcaccounts @ 06/05/24 13:54:49.873
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:54:49.879
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:54:49.881
  Jun  5 13:54:49.895: INFO: created pod pod-service-account-defaultsa
  Jun  5 13:54:49.895: INFO: pod pod-service-account-defaultsa service account token volume mount: true
  Jun  5 13:54:49.901: INFO: created pod pod-service-account-mountsa
  Jun  5 13:54:49.901: INFO: pod pod-service-account-mountsa service account token volume mount: true
  Jun  5 13:54:49.908: INFO: created pod pod-service-account-nomountsa
  Jun  5 13:54:49.908: INFO: pod pod-service-account-nomountsa service account token volume mount: false
  Jun  5 13:54:49.916: INFO: created pod pod-service-account-defaultsa-mountspec
  Jun  5 13:54:49.916: INFO: pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  Jun  5 13:54:49.925: INFO: created pod pod-service-account-mountsa-mountspec
  Jun  5 13:54:49.925: INFO: pod pod-service-account-mountsa-mountspec service account token volume mount: true
  Jun  5 13:54:49.930: INFO: created pod pod-service-account-nomountsa-mountspec
  Jun  5 13:54:49.931: INFO: pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  Jun  5 13:54:49.935: INFO: created pod pod-service-account-defaultsa-nomountspec
  Jun  5 13:54:49.935: INFO: pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  Jun  5 13:54:49.941: INFO: created pod pod-service-account-mountsa-nomountspec
  Jun  5 13:54:49.941: INFO: pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  Jun  5 13:54:49.949: INFO: created pod pod-service-account-nomountsa-nomountspec
  Jun  5 13:54:49.949: INFO: pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  Jun  5 13:54:49.949: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-7625" for this suite. @ 06/05/24 13:54:49.952
• [0.089 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:48
  STEP: Creating a kubernetes client @ 06/05/24 13:54:49.961
  Jun  5 13:54:49.961: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename projected @ 06/05/24 13:54:49.961
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:54:49.971
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:54:49.973
  STEP: Creating configMap with name projected-configmap-test-volume-935a9db0-d0fe-4d92-a8c9-c37ebb940e86 @ 06/05/24 13:54:49.974
  STEP: Creating a pod to test consume configMaps @ 06/05/24 13:54:49.978
  STEP: Saw pod success @ 06/05/24 13:54:54.002
  Jun  5 13:54:54.006: INFO: Trying to get logs from node k8sconformance pod pod-projected-configmaps-7083b9f5-66ad-4395-aaa8-684af443e38a container agnhost-container: <nil>
  STEP: delete the pod @ 06/05/24 13:54:54.015
  Jun  5 13:54:54.032: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8111" for this suite. @ 06/05/24 13:54:54.036
• [4.080 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:214
  STEP: Creating a kubernetes client @ 06/05/24 13:54:54.041
  Jun  5 13:54:54.041: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 06/05/24 13:54:54.042
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:54:54.052
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:54:54.055
  STEP: create the container to handle the HTTPGet hook request. @ 06/05/24 13:54:54.06
  STEP: create the pod with lifecycle hook @ 06/05/24 13:54:56.081
  STEP: delete the pod with lifecycle hook @ 06/05/24 13:54:58.101
  STEP: check prestop hook @ 06/05/24 13:55:00.118
  Jun  5 13:55:00.126: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-4353" for this suite. @ 06/05/24 13:55:00.129
• [6.096 seconds]
------------------------------
S
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 06/05/24 13:55:00.137
  Jun  5 13:55:00.137: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename deployment @ 06/05/24 13:55:00.138
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:55:00.149
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:55:00.152
  Jun  5 13:55:00.155: INFO: Creating replica set "test-rolling-update-controller" (going to be adopted)
  Jun  5 13:55:00.164: INFO: Pod name sample-pod: Found 0 pods out of 1
  Jun  5 13:55:05.169: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 06/05/24 13:55:05.169
  Jun  5 13:55:05.169: INFO: Creating deployment "test-rolling-update-deployment"
  Jun  5 13:55:05.174: INFO: Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  Jun  5 13:55:05.179: INFO: new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  Jun  5 13:55:07.188: INFO: Ensuring status for deployment "test-rolling-update-deployment" is the expected
  Jun  5 13:55:07.191: INFO: Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  Jun  5 13:55:07.198: INFO: Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5959",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cc9eedfc-4f3d-4fce-93f4-0d72bb4bd110",
      ResourceVersion: (string) (len=5) "15283",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853192505,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853192505,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853192506,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853192505,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853192505,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853192506,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853192505,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=83) "ReplicaSet \"test-rolling-update-deployment-7ddb77f68b\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Jun  5 13:55:07.201: INFO: New ReplicaSet "test-rolling-update-deployment-7ddb77f68b" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rolling-update-deployment-7ddb77f68b",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5959",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7ad723f1-e89e-4f3c-9883-3d72fc90aa92",
      ResourceVersion: (string) (len=5) "15273",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853192505,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7ddb77f68b"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "cc9eedfc-4f3d-4fce-93f4-0d72bb4bd110",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853192505,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 63 63 39 65 65 64  66 63 2d 34 66 33 64 2d  |\"cc9eedfc-4f3d-|
              00000120  34 66 63 65 2d 39 33 66  34 2d 30 64 37 32 62 62  |4fce-93f4-0d72bb|
              00000130  34 62 64 31 31 30 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |4bd110\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853192506,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "7ddb77f68b"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "7ddb77f68b"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jun  5 13:55:07.202: INFO: All old ReplicaSets of Deployment "test-rolling-update-deployment":
  Jun  5 13:55:07.202: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5959",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a810ee62-1333-4f87-8b6b-a97383634927",
      ResourceVersion: (string) (len=5) "15282",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853192500,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "pod": (string) (len=5) "httpd",
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "cc9eedfc-4f3d-4fce-93f4-0d72bb4bd110",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853192500,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853192506,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 63 63 39 65 65 64 66  |"uid\":\"cc9eedf|
              000000b0  63 2d 34 66 33 64 2d 34  66 63 65 2d 39 33 66 34  |c-4f3d-4fce-93f4|
              000000c0  2d 30 64 37 32 62 62 34  62 64 31 31 30 5c 22 7d  |-0d72bb4bd110\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853192506,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "pod": (string) (len=5) "httpd",
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jun  5 13:55:07.206: INFO: Pod "test-rolling-update-deployment-7ddb77f68b-89tdt" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=47) "test-rolling-update-deployment-7ddb77f68b-89tdt",
      GenerateName: (string) (len=42) "test-rolling-update-deployment-7ddb77f68b-",
      Namespace: (string) (len=15) "deployment-5959",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fdf4d376-4087-4229-ab90-14a1c6c2dfbc",
      ResourceVersion: (string) (len=5) "15272",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853192505,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "7ddb77f68b",
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=41) "test-rolling-update-deployment-7ddb77f68b",
          UID: (types.UID) (len=36) "7ad723f1-e89e-4f3c-9883-3d72fc90aa92",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853192505,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 61  64 37 32 33 66 31 2d 65  |d\":\"7ad723f1-e|
              00000090  38 39 65 2d 34 66 33 63  2d 39 38 38 33 2d 33 64  |89e-4f3c-9883-3d|
              000000a0  37 32 66 63 39 30 61 61  39 32 5c 22 7d 22 3a 7b  |72fc90aa92\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853192506,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 31  31 5c 22 7d 22 3a 7b 22  |.244.1.11\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mpzxv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mpzxv",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "k8sconformance-m02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853192506,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853192505,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853192506,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853192506,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853192505,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.67.3",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.67.3"
        }
      },
      PodIP: (string) (len=11) "10.244.1.11",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.1.11"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853192505,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63853192505,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          ImageID: (string) (len=129) "docker-pullable://registry.k8s.io/e2e-test-images/agnhost@sha256:cc249acbd34692826b2b335335615e060fdb3c0bca4954507aa3a1d1194de253",
          ContainerID: (string) (len=73) "docker://8d642d382966bbfeda129a7416c468273112077029a6d159eba554bfc16a5029",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun  5 13:55:07.208: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-5959" for this suite. @ 06/05/24 13:55:07.211
• [7.078 seconds]
------------------------------
S
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:269
  STEP: Creating a kubernetes client @ 06/05/24 13:55:07.215
  Jun  5 13:55:07.215: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename downward-api @ 06/05/24 13:55:07.216
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:55:07.224
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:55:07.227
  STEP: Creating a pod to test downward api env vars @ 06/05/24 13:55:07.228
  STEP: Saw pod success @ 06/05/24 13:55:09.243
  Jun  5 13:55:09.245: INFO: Trying to get logs from node k8sconformance-m02 pod downward-api-24c431d8-5bcd-4d95-8163-c88a5fc37e7c container dapi-container: <nil>
  STEP: delete the pod @ 06/05/24 13:55:09.252
  Jun  5 13:55:09.267: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9109" for this suite. @ 06/05/24 13:55:09.27
• [2.059 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:130
  STEP: Creating a kubernetes client @ 06/05/24 13:55:09.275
  Jun  5 13:55:09.275: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename emptydir @ 06/05/24 13:55:09.277
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:55:09.289
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:55:09.292
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 06/05/24 13:55:09.295
  STEP: Saw pod success @ 06/05/24 13:55:11.309
  Jun  5 13:55:11.312: INFO: Trying to get logs from node k8sconformance-m02 pod pod-2c40b544-8b0a-473c-b752-0d03e01058d2 container test-container: <nil>
  STEP: delete the pod @ 06/05/24 13:55:11.319
  Jun  5 13:55:11.332: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6700" for this suite. @ 06/05/24 13:55:11.335
• [2.065 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 06/05/24 13:55:11.341
  Jun  5 13:55:11.341: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename daemonsets @ 06/05/24 13:55:11.342
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:55:11.352
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:55:11.355
  STEP: Creating a simple DaemonSet "daemon-set" @ 06/05/24 13:55:11.369
  STEP: Check that daemon pods launch on every node of the cluster. @ 06/05/24 13:55:11.373
  Jun  5 13:55:11.378: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun  5 13:55:11.378: INFO: Node k8sconformance is running 0 daemon pod, expected 1
  Jun  5 13:55:12.377: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Jun  5 13:55:12.378: INFO: Node k8sconformance is running 0 daemon pod, expected 1
  Jun  5 13:55:13.382: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Jun  5 13:55:13.382: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 06/05/24 13:55:13.385
  Jun  5 13:55:13.405: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Jun  5 13:55:13.405: INFO: Node k8sconformance is running 0 daemon pod, expected 1
  Jun  5 13:55:14.404: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Jun  5 13:55:14.404: INFO: Node k8sconformance is running 0 daemon pod, expected 1
  Jun  5 13:55:15.406: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Jun  5 13:55:15.406: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 06/05/24 13:55:15.406
  STEP: Deleting DaemonSet "daemon-set" @ 06/05/24 13:55:15.41
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-3173, will wait for the garbage collector to delete the pods @ 06/05/24 13:55:15.41
  Jun  5 13:55:15.471: INFO: Deleting DaemonSet.extensions daemon-set took: 8.677576ms
  Jun  5 13:55:15.572: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.840774ms
  Jun  5 13:55:16.677: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun  5 13:55:16.677: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Jun  5 13:55:16.679: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"15423"},"items":null}

  Jun  5 13:55:16.681: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"15423"},"items":null}

  Jun  5 13:55:16.688: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-3173" for this suite. @ 06/05/24 13:55:16.69
• [5.354 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:155
  STEP: Creating a kubernetes client @ 06/05/24 13:55:16.696
  Jun  5 13:55:16.696: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename replicaset @ 06/05/24 13:55:16.697
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:55:16.706
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:55:16.709
  Jun  5 13:55:16.718: INFO: Pod name sample-pod: Found 0 pods out of 1
  Jun  5 13:55:21.721: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 06/05/24 13:55:21.721
  STEP: Scaling up "test-rs" replicaset @ 06/05/24 13:55:21.721
  Jun  5 13:55:21.727: INFO: Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 06/05/24 13:55:21.727
  Jun  5 13:55:21.735: INFO: observed ReplicaSet test-rs in namespace replicaset-8963 with ReadyReplicas 1, AvailableReplicas 1
  Jun  5 13:55:21.745: INFO: observed ReplicaSet test-rs in namespace replicaset-8963 with ReadyReplicas 1, AvailableReplicas 1
  Jun  5 13:55:21.757: INFO: observed ReplicaSet test-rs in namespace replicaset-8963 with ReadyReplicas 1, AvailableReplicas 1
  Jun  5 13:55:21.761: INFO: observed ReplicaSet test-rs in namespace replicaset-8963 with ReadyReplicas 1, AvailableReplicas 1
  Jun  5 13:55:22.734: INFO: observed ReplicaSet test-rs in namespace replicaset-8963 with ReadyReplicas 2, AvailableReplicas 2
  Jun  5 13:55:23.328: INFO: observed Replicaset test-rs in namespace replicaset-8963 with ReadyReplicas 3 found true
  Jun  5 13:55:23.328: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-8963" for this suite. @ 06/05/24 13:55:23.332
• [6.641 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support FlowSchema API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:270
  STEP: Creating a kubernetes client @ 06/05/24 13:55:23.338
  Jun  5 13:55:23.338: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename apf @ 06/05/24 13:55:23.339
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:55:23.35
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:55:23.353
  STEP: getting /apis @ 06/05/24 13:55:23.356
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 06/05/24 13:55:23.36
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 06/05/24 13:55:23.361
  STEP: creating @ 06/05/24 13:55:23.361
  STEP: getting @ 06/05/24 13:55:23.375
  STEP: listing @ 06/05/24 13:55:23.377
  STEP: watching @ 06/05/24 13:55:23.381
  Jun  5 13:55:23.381: INFO: starting watch
  STEP: patching @ 06/05/24 13:55:23.382
  STEP: updating @ 06/05/24 13:55:23.386
  Jun  5 13:55:23.391: INFO: waiting for watch events with expected annotations
  Jun  5 13:55:23.391: INFO: missing expected annotations, waiting: map[string]string(nil)
  STEP: getting /status @ 06/05/24 13:55:23.391
  STEP: patching /status @ 06/05/24 13:55:23.393
  STEP: updating /status @ 06/05/24 13:55:23.398
  STEP: deleting @ 06/05/24 13:55:23.425
  STEP: deleting a collection @ 06/05/24 13:55:23.434
  Jun  5 13:55:23.448: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-4258" for this suite. @ 06/05/24 13:55:23.45
• [0.116 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:276
  STEP: Creating a kubernetes client @ 06/05/24 13:55:23.454
  Jun  5 13:55:23.455: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename crd-publish-openapi @ 06/05/24 13:55:23.456
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:55:23.466
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:55:23.469
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 06/05/24 13:55:23.472
  Jun  5 13:55:23.472: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  Jun  5 13:55:24.626: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  Jun  5 13:55:29.241: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6164" for this suite. @ 06/05/24 13:55:29.246
• [5.794 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:104
  STEP: Creating a kubernetes client @ 06/05/24 13:55:29.249
  Jun  5 13:55:29.249: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename replication-controller @ 06/05/24 13:55:29.25
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:55:29.259
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:55:29.26
  STEP: Given a ReplicationController is created @ 06/05/24 13:55:29.262
  STEP: When the matched label of one of its pods change @ 06/05/24 13:55:29.266
  Jun  5 13:55:29.268: INFO: Pod name pod-release: Found 0 pods out of 1
  Jun  5 13:55:34.274: INFO: Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 06/05/24 13:55:34.284
  Jun  5 13:55:35.293: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-7604" for this suite. @ 06/05/24 13:55:35.297
• [6.054 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 06/05/24 13:55:35.303
  Jun  5 13:55:35.303: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename crd-watch @ 06/05/24 13:55:35.304
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:55:35.317
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:55:35.32
  Jun  5 13:55:35.322: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Creating first CR  @ 06/05/24 13:55:37.867
  Jun  5 13:55:37.871: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-06-05T13:55:37Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-06-05T13:55:37Z]] name:name1 resourceVersion:15631 uid:bd64c114-d28e-4156-9d82-523b2e77154f] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Creating second CR @ 06/05/24 13:55:47.872
  Jun  5 13:55:47.877: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-06-05T13:55:47Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-06-05T13:55:47Z]] name:name2 resourceVersion:15660 uid:e644a4b0-0241-4890-aa1e-caffa7b56eb9] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying first CR @ 06/05/24 13:55:57.877
  Jun  5 13:55:57.886: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-06-05T13:55:37Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-06-05T13:55:57Z]] name:name1 resourceVersion:15670 uid:bd64c114-d28e-4156-9d82-523b2e77154f] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying second CR @ 06/05/24 13:56:07.887
  Jun  5 13:56:07.897: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-06-05T13:55:47Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-06-05T13:56:07Z]] name:name2 resourceVersion:15680 uid:e644a4b0-0241-4890-aa1e-caffa7b56eb9] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting first CR @ 06/05/24 13:56:17.898
  Jun  5 13:56:17.908: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-06-05T13:55:37Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-06-05T13:55:57Z]] name:name1 resourceVersion:15690 uid:bd64c114-d28e-4156-9d82-523b2e77154f] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting second CR @ 06/05/24 13:56:27.908
  Jun  5 13:56:27.919: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-06-05T13:55:47Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-06-05T13:56:07Z]] name:name2 resourceVersion:15700 uid:e644a4b0-0241-4890-aa1e-caffa7b56eb9] num:map[num1:9223372036854775807 num2:1000000]]}
  Jun  5 13:56:38.435: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-3599" for this suite. @ 06/05/24 13:56:38.439
• [63.143 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:47
  STEP: Creating a kubernetes client @ 06/05/24 13:56:38.446
  Jun  5 13:56:38.446: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename var-expansion @ 06/05/24 13:56:38.448
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:56:38.46
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:56:38.463
  STEP: Creating a pod to test env composition @ 06/05/24 13:56:38.466
  STEP: Saw pod success @ 06/05/24 13:56:42.487
  Jun  5 13:56:42.489: INFO: Trying to get logs from node k8sconformance-m02 pod var-expansion-86093519-3d49-46b6-b6f1-515d5c6e5b11 container dapi-container: <nil>
  STEP: delete the pod @ 06/05/24 13:56:42.505
  Jun  5 13:56:42.517: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-9386" for this suite. @ 06/05/24 13:56:42.52
• [4.077 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:94
  STEP: Creating a kubernetes client @ 06/05/24 13:56:42.524
  Jun  5 13:56:42.524: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename configmap @ 06/05/24 13:56:42.525
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:56:42.534
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:56:42.537
  STEP: Creating configMap configmap-679/configmap-test-8f3e2b58-d6d0-4706-86db-26e386722af9 @ 06/05/24 13:56:42.539
  STEP: Creating a pod to test consume configMaps @ 06/05/24 13:56:42.543
  STEP: Saw pod success @ 06/05/24 13:56:46.562
  Jun  5 13:56:46.565: INFO: Trying to get logs from node k8sconformance-m02 pod pod-configmaps-a95ef4f2-8567-4bc9-86b0-ee76e8259f47 container env-test: <nil>
  STEP: delete the pod @ 06/05/24 13:56:46.573
  Jun  5 13:56:46.586: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-679" for this suite. @ 06/05/24 13:56:46.59
• [4.071 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:948
  STEP: Creating a kubernetes client @ 06/05/24 13:56:46.596
  Jun  5 13:56:46.596: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename resourcequota @ 06/05/24 13:56:46.597
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:56:46.608
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:56:46.611
  STEP: Creating a ResourceQuota @ 06/05/24 13:56:46.614
  STEP: Getting a ResourceQuota @ 06/05/24 13:56:46.618
  STEP: Listing all ResourceQuotas with LabelSelector @ 06/05/24 13:56:46.62
  STEP: Patching the ResourceQuota @ 06/05/24 13:56:46.621
  STEP: Deleting a Collection of ResourceQuotas @ 06/05/24 13:56:46.626
  STEP: Verifying the deleted ResourceQuota @ 06/05/24 13:56:46.631
  Jun  5 13:56:46.633: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7725" for this suite. @ 06/05/24 13:56:46.635
• [0.043 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 06/05/24 13:56:46.64
  Jun  5 13:56:46.640: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename projected @ 06/05/24 13:56:46.641
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:56:46.649
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:56:46.652
  STEP: Creating projection with secret that has name projected-secret-test-8256ae4c-61a4-4a82-86b6-f5d607a7a617 @ 06/05/24 13:56:46.655
  STEP: Creating a pod to test consume secrets @ 06/05/24 13:56:46.658
  STEP: Saw pod success @ 06/05/24 13:56:50.682
  Jun  5 13:56:50.684: INFO: Trying to get logs from node k8sconformance-m02 pod pod-projected-secrets-48eb7a2f-0040-4094-a519-842d85d7ee0a container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 06/05/24 13:56:50.691
  Jun  5 13:56:50.705: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9482" for this suite. @ 06/05/24 13:56:50.708
• [4.073 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 06/05/24 13:56:50.713
  Jun  5 13:56:50.713: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename secrets @ 06/05/24 13:56:50.714
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:56:50.723
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:56:50.725
  STEP: Creating secret with name secret-test-ac7911c4-65f6-4700-b51b-7827ebd2f5c8 @ 06/05/24 13:56:50.727
  STEP: Creating a pod to test consume secrets @ 06/05/24 13:56:50.731
  STEP: Saw pod success @ 06/05/24 13:56:54.75
  Jun  5 13:56:54.753: INFO: Trying to get logs from node k8sconformance-m02 pod pod-secrets-b28ffdfe-faba-4207-a74d-d51a5ba8fc57 container secret-volume-test: <nil>
  STEP: delete the pod @ 06/05/24 13:56:54.761
  Jun  5 13:56:54.771: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8378" for this suite. @ 06/05/24 13:56:54.773
• [4.065 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:110
  STEP: Creating a kubernetes client @ 06/05/24 13:56:54.778
  Jun  5 13:56:54.778: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename projected @ 06/05/24 13:56:54.779
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:56:54.796
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:56:54.804
  STEP: Creating configMap with name projected-configmap-test-volume-map-0f968e1b-6209-4f85-b72f-626f4b4afbc4 @ 06/05/24 13:56:54.815
  STEP: Creating a pod to test consume configMaps @ 06/05/24 13:56:54.82
  STEP: Saw pod success @ 06/05/24 13:56:58.839
  Jun  5 13:56:58.841: INFO: Trying to get logs from node k8sconformance-m02 pod pod-projected-configmaps-0922c605-5cf6-403e-a396-fcc4d01d953f container agnhost-container: <nil>
  STEP: delete the pod @ 06/05/24 13:56:58.848
  Jun  5 13:56:58.865: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8634" for this suite. @ 06/05/24 13:56:58.869
• [4.096 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 06/05/24 13:56:58.875
  Jun  5 13:56:58.875: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename daemonsets @ 06/05/24 13:56:58.876
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:56:58.885
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:56:58.888
  Jun  5 13:56:58.904: INFO: Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 06/05/24 13:56:58.908
  Jun  5 13:56:58.914: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun  5 13:56:58.914: INFO: Node k8sconformance is running 0 daemon pod, expected 1
  Jun  5 13:56:59.914: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Jun  5 13:56:59.914: INFO: Node k8sconformance-m02 is running 0 daemon pod, expected 1
  Jun  5 13:57:00.917: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Jun  5 13:57:00.917: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Update daemon pods image. @ 06/05/24 13:57:00.925
  STEP: Check that daemon pods images are updated. @ 06/05/24 13:57:00.937
  Jun  5 13:57:00.940: INFO: Wrong image for pod: daemon-set-b478f. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Jun  5 13:57:00.940: INFO: Wrong image for pod: daemon-set-pbvkq. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Jun  5 13:57:01.942: INFO: Wrong image for pod: daemon-set-pbvkq. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Jun  5 13:57:01.942: INFO: Pod daemon-set-t8fcz is not available
  Jun  5 13:57:03.941: INFO: Pod daemon-set-44dl5 is not available
  STEP: Check that daemon pods are still running on every node of the cluster. @ 06/05/24 13:57:03.943
  Jun  5 13:57:03.949: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Jun  5 13:57:03.949: INFO: Node k8sconformance-m02 is running 0 daemon pod, expected 1
  Jun  5 13:57:04.951: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Jun  5 13:57:04.951: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 06/05/24 13:57:04.961
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-6395, will wait for the garbage collector to delete the pods @ 06/05/24 13:57:04.962
  Jun  5 13:57:05.024: INFO: Deleting DaemonSet.extensions daemon-set took: 10.156527ms
  Jun  5 13:57:05.125: INFO: Terminating DaemonSet.extensions daemon-set pods took: 101.216307ms
  Jun  5 13:57:07.730: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun  5 13:57:07.730: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Jun  5 13:57:07.733: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"15968"},"items":null}

  Jun  5 13:57:07.735: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"15968"},"items":null}

  Jun  5 13:57:07.742: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-6395" for this suite. @ 06/05/24 13:57:07.744
• [8.875 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:818
  STEP: Creating a kubernetes client @ 06/05/24 13:57:07.75
  Jun  5 13:57:07.750: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename gc @ 06/05/24 13:57:07.751
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:57:07.761
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:57:07.764
  Jun  5 13:57:07.793: INFO: pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"a1f0d22b-4a37-4a3f-b159-c311d3813017", Controller:(*bool)(0xc00389e70e), BlockOwnerDeletion:(*bool)(0xc00389e70f)}}
  Jun  5 13:57:07.799: INFO: pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"872b4b2f-ff36-42f2-9eef-fe4e6b5eb200", Controller:(*bool)(0xc00389e93e), BlockOwnerDeletion:(*bool)(0xc00389e93f)}}
  Jun  5 13:57:07.803: INFO: pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"426ed04e-4d05-466c-96ee-d734103ed501", Controller:(*bool)(0xc003889a1e), BlockOwnerDeletion:(*bool)(0xc003889a1f)}}
  Jun  5 13:57:12.810: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-6438" for this suite. @ 06/05/24 13:57:12.813
• [5.068 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:58
  STEP: Creating a kubernetes client @ 06/05/24 13:57:12.818
  Jun  5 13:57:12.818: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename events @ 06/05/24 13:57:12.819
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:57:12.83
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:57:12.833
  STEP: creating a test event @ 06/05/24 13:57:12.835
  STEP: listing all events in all namespaces @ 06/05/24 13:57:12.838
  STEP: patching the test event @ 06/05/24 13:57:12.84
  STEP: fetching the test event @ 06/05/24 13:57:12.843
  STEP: updating the test event @ 06/05/24 13:57:12.845
  STEP: getting the test event @ 06/05/24 13:57:12.852
  STEP: deleting the test event @ 06/05/24 13:57:12.853
  STEP: listing all events in all namespaces @ 06/05/24 13:57:12.857
  Jun  5 13:57:12.859: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-9610" for this suite. @ 06/05/24 13:57:12.861
• [0.047 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0 [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1838
  STEP: Creating a kubernetes client @ 06/05/24 13:57:12.865
  Jun  5 13:57:12.865: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename kubectl @ 06/05/24 13:57:12.867
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:57:12.876
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:57:12.878
  STEP: starting the proxy server @ 06/05/24 13:57:12.879
  Jun  5 13:57:12.879: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=kubectl-2190 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 06/05/24 13:57:12.91
  Jun  5 13:57:12.914: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2190" for this suite. @ 06/05/24 13:57:12.916
• [0.054 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:59
  STEP: Creating a kubernetes client @ 06/05/24 13:57:12.92
  Jun  5 13:57:12.920: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename custom-resource-definition @ 06/05/24 13:57:12.92
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:57:12.927
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:57:12.929
  Jun  5 13:57:12.930: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  Jun  5 13:57:13.955: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-2928" for this suite. @ 06/05/24 13:57:13.959
• [1.045 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:92
  STEP: Creating a kubernetes client @ 06/05/24 13:57:13.965
  Jun  5 13:57:13.965: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename downward-api @ 06/05/24 13:57:13.966
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:57:13.976
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:57:13.98
  STEP: Creating a pod to test downward api env vars @ 06/05/24 13:57:13.982
  STEP: Saw pod success @ 06/05/24 13:57:15.994
  Jun  5 13:57:15.996: INFO: Trying to get logs from node k8sconformance-m02 pod downward-api-d6797043-b456-44bf-8439-d4bc50bdd970 container dapi-container: <nil>
  STEP: delete the pod @ 06/05/24 13:57:16.006
  Jun  5 13:57:16.022: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9148" for this suite. @ 06/05/24 13:57:16.024
• [2.061 seconds]
------------------------------
SSS
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:80
  STEP: Creating a kubernetes client @ 06/05/24 13:57:16.026
  Jun  5 13:57:16.026: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename svcaccounts @ 06/05/24 13:57:16.027
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:57:16.035
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:57:16.036
  STEP: reading a file in the container @ 06/05/24 13:57:18.049
  Jun  5 13:57:18.049: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-8861 pod-service-account-fc7beb6d-ac89-4866-9dff-4cb8f95ea21d -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 06/05/24 13:57:18.146
  Jun  5 13:57:18.147: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-8861 pod-service-account-fc7beb6d-ac89-4866-9dff-4cb8f95ea21d -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  STEP: reading a file in the container @ 06/05/24 13:57:18.237
  Jun  5 13:57:18.237: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-8861 pod-service-account-fc7beb6d-ac89-4866-9dff-4cb8f95ea21d -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  Jun  5 13:57:18.330: INFO: Got root ca configmap in namespace "svcaccounts-8861"
  Jun  5 13:57:18.332: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-8861" for this suite. @ 06/05/24 13:57:18.334
• [2.313 seconds]
------------------------------
SSS
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 06/05/24 13:57:18.339
  Jun  5 13:57:18.339: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename proxy @ 06/05/24 13:57:18.34
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:57:18.352
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:57:18.355
  STEP: starting an echo server on multiple ports @ 06/05/24 13:57:18.367
  STEP: creating replication controller proxy-service-t5v7h in namespace proxy-2126 @ 06/05/24 13:57:18.367
  I0605 13:57:18.375042      22 runners.go:197] Created replication controller with name: proxy-service-t5v7h, namespace: proxy-2126, replica count: 1
  I0605 13:57:19.426303      22 runners.go:197] proxy-service-t5v7h Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0605 13:57:20.426840      22 runners.go:197] proxy-service-t5v7h Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jun  5 13:57:20.432: INFO: setup took 2.074497745s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 06/05/24 13:57:20.432
  Jun  5 13:57:20.440: INFO: (0) /api/v1/namespaces/proxy-2126/pods/http:proxy-service-t5v7h-2jtst:1080/proxy/: <a href="/api/v1/namespaces/proxy-2126/pods/http:proxy-service-t5v7h-2jtst:1080/proxy/rewriteme">... (200; 7.798115ms)
  Jun  5 13:57:20.440: INFO: (0) /api/v1/namespaces/proxy-2126/pods/proxy-service-t5v7h-2jtst:1080/proxy/: <a href="/api/v1/namespaces/proxy-2126/pods/proxy-service-t5v7h-2jtst:1080/proxy/rewriteme">test<... (200; 8.454558ms)
  Jun  5 13:57:20.440: INFO: (0) /api/v1/namespaces/proxy-2126/pods/http:proxy-service-t5v7h-2jtst:160/proxy/: foo (200; 8.351983ms)
  Jun  5 13:57:20.441: INFO: (0) /api/v1/namespaces/proxy-2126/pods/http:proxy-service-t5v7h-2jtst:162/proxy/: bar (200; 9.236098ms)
  Jun  5 13:57:20.441: INFO: (0) /api/v1/namespaces/proxy-2126/pods/proxy-service-t5v7h-2jtst:162/proxy/: bar (200; 9.636553ms)
  Jun  5 13:57:20.441: INFO: (0) /api/v1/namespaces/proxy-2126/services/http:proxy-service-t5v7h:portname1/proxy/: foo (200; 9.377078ms)
  Jun  5 13:57:20.441: INFO: (0) /api/v1/namespaces/proxy-2126/services/http:proxy-service-t5v7h:portname2/proxy/: bar (200; 9.631165ms)
  Jun  5 13:57:20.441: INFO: (0) /api/v1/namespaces/proxy-2126/services/proxy-service-t5v7h:portname1/proxy/: foo (200; 9.525827ms)
  Jun  5 13:57:20.441: INFO: (0) /api/v1/namespaces/proxy-2126/services/proxy-service-t5v7h:portname2/proxy/: bar (200; 9.655584ms)
  Jun  5 13:57:20.441: INFO: (0) /api/v1/namespaces/proxy-2126/pods/proxy-service-t5v7h-2jtst:160/proxy/: foo (200; 9.514192ms)
  Jun  5 13:57:20.441: INFO: (0) /api/v1/namespaces/proxy-2126/pods/proxy-service-t5v7h-2jtst/proxy/: <a href="/api/v1/namespaces/proxy-2126/pods/proxy-service-t5v7h-2jtst/proxy/rewriteme">test</a> (200; 9.478579ms)
  Jun  5 13:57:20.447: INFO: (0) /api/v1/namespaces/proxy-2126/services/https:proxy-service-t5v7h:tlsportname2/proxy/: tls qux (200; 15.614045ms)
  Jun  5 13:57:20.448: INFO: (0) /api/v1/namespaces/proxy-2126/pods/https:proxy-service-t5v7h-2jtst:462/proxy/: tls qux (200; 15.554881ms)
  Jun  5 13:57:20.448: INFO: (0) /api/v1/namespaces/proxy-2126/pods/https:proxy-service-t5v7h-2jtst:443/proxy/: <a href="/api/v1/namespaces/proxy-2126/pods/https:proxy-service-t5v7h-2jtst:443/proxy/tlsrewritem... (200; 15.989456ms)
  Jun  5 13:57:20.450: INFO: (0) /api/v1/namespaces/proxy-2126/services/https:proxy-service-t5v7h:tlsportname1/proxy/: tls baz (200; 18.58744ms)
  Jun  5 13:57:20.450: INFO: (0) /api/v1/namespaces/proxy-2126/pods/https:proxy-service-t5v7h-2jtst:460/proxy/: tls baz (200; 18.583ms)
  Jun  5 13:57:20.457: INFO: (1) /api/v1/namespaces/proxy-2126/pods/https:proxy-service-t5v7h-2jtst:460/proxy/: tls baz (200; 6.622ms)
  Jun  5 13:57:20.458: INFO: (1) /api/v1/namespaces/proxy-2126/pods/https:proxy-service-t5v7h-2jtst:462/proxy/: tls qux (200; 6.945176ms)
  Jun  5 13:57:20.458: INFO: (1) /api/v1/namespaces/proxy-2126/services/https:proxy-service-t5v7h:tlsportname2/proxy/: tls qux (200; 6.92037ms)
  Jun  5 13:57:20.458: INFO: (1) /api/v1/namespaces/proxy-2126/pods/https:proxy-service-t5v7h-2jtst:443/proxy/: <a href="/api/v1/namespaces/proxy-2126/pods/https:proxy-service-t5v7h-2jtst:443/proxy/tlsrewritem... (200; 7.069516ms)
  Jun  5 13:57:20.458: INFO: (1) /api/v1/namespaces/proxy-2126/pods/proxy-service-t5v7h-2jtst:1080/proxy/: <a href="/api/v1/namespaces/proxy-2126/pods/proxy-service-t5v7h-2jtst:1080/proxy/rewriteme">test<... (200; 7.015967ms)
  Jun  5 13:57:20.458: INFO: (1) /api/v1/namespaces/proxy-2126/pods/proxy-service-t5v7h-2jtst:162/proxy/: bar (200; 6.970768ms)
  Jun  5 13:57:20.458: INFO: (1) /api/v1/namespaces/proxy-2126/pods/proxy-service-t5v7h-2jtst:160/proxy/: foo (200; 7.024435ms)
  Jun  5 13:57:20.458: INFO: (1) /api/v1/namespaces/proxy-2126/services/https:proxy-service-t5v7h:tlsportname1/proxy/: tls baz (200; 7.163484ms)
  Jun  5 13:57:20.458: INFO: (1) /api/v1/namespaces/proxy-2126/services/proxy-service-t5v7h:portname2/proxy/: bar (200; 7.021307ms)
  Jun  5 13:57:20.458: INFO: (1) /api/v1/namespaces/proxy-2126/pods/http:proxy-service-t5v7h-2jtst:1080/proxy/: <a href="/api/v1/namespaces/proxy-2126/pods/http:proxy-service-t5v7h-2jtst:1080/proxy/rewriteme">... (200; 7.048264ms)
  Jun  5 13:57:20.458: INFO: (1) /api/v1/namespaces/proxy-2126/services/http:proxy-service-t5v7h:portname1/proxy/: foo (200; 7.094975ms)
  Jun  5 13:57:20.458: INFO: (1) /api/v1/namespaces/proxy-2126/pods/proxy-service-t5v7h-2jtst/proxy/: <a href="/api/v1/namespaces/proxy-2126/pods/proxy-service-t5v7h-2jtst/proxy/rewriteme">test</a> (200; 7.048231ms)
  Jun  5 13:57:20.458: INFO: (1) /api/v1/namespaces/proxy-2126/pods/http:proxy-service-t5v7h-2jtst:162/proxy/: bar (200; 7.245223ms)
  Jun  5 13:57:20.458: INFO: (1) /api/v1/namespaces/proxy-2126/services/http:proxy-service-t5v7h:portname2/proxy/: bar (200; 7.160087ms)
  Jun  5 13:57:20.458: INFO: (1) /api/v1/namespaces/proxy-2126/services/proxy-service-t5v7h:portname1/proxy/: foo (200; 7.202627ms)
  Jun  5 13:57:20.458: INFO: (1) /api/v1/namespaces/proxy-2126/pods/http:proxy-service-t5v7h-2jtst:160/proxy/: foo (200; 7.193971ms)
  Jun  5 13:57:20.465: INFO: (2) /api/v1/namespaces/proxy-2126/pods/http:proxy-service-t5v7h-2jtst:160/proxy/: foo (200; 7.232857ms)
  Jun  5 13:57:20.465: INFO: (2) /api/v1/namespaces/proxy-2126/pods/https:proxy-service-t5v7h-2jtst:460/proxy/: tls baz (200; 7.32745ms)
  Jun  5 13:57:20.465: INFO: (2) /api/v1/namespaces/proxy-2126/pods/proxy-service-t5v7h-2jtst:160/proxy/: foo (200; 7.353446ms)
  Jun  5 13:57:20.465: INFO: (2) /api/v1/namespaces/proxy-2126/pods/proxy-service-t5v7h-2jtst:162/proxy/: bar (200; 7.51475ms)
  Jun  5 13:57:20.465: INFO: (2) /api/v1/namespaces/proxy-2126/pods/proxy-service-t5v7h-2jtst/proxy/: <a href="/api/v1/namespaces/proxy-2126/pods/proxy-service-t5v7h-2jtst/proxy/rewriteme">test</a> (200; 7.379991ms)
  Jun  5 13:57:20.466: INFO: (2) /api/v1/namespaces/proxy-2126/pods/proxy-service-t5v7h-2jtst:1080/proxy/: <a href="/api/v1/namespaces/proxy-2126/pods/proxy-service-t5v7h-2jtst:1080/proxy/rewriteme">test<... (200; 7.430025ms)
  Jun  5 13:57:20.466: INFO: (2) /api/v1/namespaces/proxy-2126/pods/http:proxy-service-t5v7h-2jtst:162/proxy/: bar (200; 7.358041ms)
  Jun  5 13:57:20.466: INFO: (2) /api/v1/namespaces/proxy-2126/pods/http:proxy-service-t5v7h-2jtst:1080/proxy/: <a href="/api/v1/namespaces/proxy-2126/pods/http:proxy-service-t5v7h-2jtst:1080/proxy/rewriteme">... (200; 7.402055ms)
  Jun  5 13:57:20.466: INFO: (2) /api/v1/namespaces/proxy-2126/pods/https:proxy-service-t5v7h-2jtst:462/proxy/: tls qux (200; 7.556065ms)
  Jun  5 13:57:20.466: INFO: (2) /api/v1/namespaces/proxy-2126/pods/https:proxy-service-t5v7h-2jtst:443/proxy/: <a href="/api/v1/namespaces/proxy-2126/pods/https:proxy-service-t5v7h-2jtst:443/proxy/tlsrewritem... (200; 8.176297ms)
  Jun  5 13:57:20.467: INFO: (2) /api/v1/namespaces/proxy-2126/services/http:proxy-service-t5v7h:portname1/proxy/: foo (200; 8.635212ms)
  Jun  5 13:57:20.467: INFO: (2) /api/v1/namespaces/proxy-2126/services/https:proxy-service-t5v7h:tlsportname2/proxy/: tls qux (200; 8.637838ms)
  Jun  5 13:57:20.467: INFO: (2) /api/v1/namespaces/proxy-2126/services/proxy-service-t5v7h:portname1/proxy/: foo (200; 8.659953ms)
  Jun  5 13:57:20.467: INFO: (2) /api/v1/namespaces/proxy-2126/services/proxy-service-t5v7h:portname2/proxy/: bar (200; 8.753211ms)
  Jun  5 13:57:20.467: INFO: (2) /api/v1/namespaces/proxy-2126/services/https:proxy-service-t5v7h:tlsportname1/proxy/: tls baz (200; 8.701342ms)
  Jun  5 13:57:20.467: INFO: (2) /api/v1/namespaces/proxy-2126/services/http:proxy-service-t5v7h:portname2/proxy/: bar (200; 8.8929ms)
  Jun  5 13:57:20.471: INFO: (3) /api/v1/namespaces/proxy-2126/pods/http:proxy-service-t5v7h-2jtst:1080/proxy/: <a href="/api/v1/namespaces/proxy-2126/pods/http:proxy-service-t5v7h-2jtst:1080/proxy/rewriteme">... (200; 4.097922ms)
  Jun  5 13:57:20.472: INFO: (3) /api/v1/namespaces/proxy-2126/pods/proxy-service-t5v7h-2jtst:160/proxy/: foo (200; 5.080244ms)
  Jun  5 13:57:20.472: INFO: (3) /api/v1/namespaces/proxy-2126/pods/http:proxy-service-t5v7h-2jtst:160/proxy/: foo (200; 4.997209ms)
  Jun  5 13:57:20.472: INFO: (3) /api/v1/namespaces/proxy-2126/pods/https:proxy-service-t5v7h-2jtst:443/proxy/: <a href="/api/v1/namespaces/proxy-2126/pods/https:proxy-service-t5v7h-2jtst:443/proxy/tlsrewritem... (200; 5.072221ms)
  Jun  5 13:57:20.472: INFO: (3) /api/v1/namespaces/proxy-2126/pods/proxy-service-t5v7h-2jtst/proxy/: <a href="/api/v1/namespaces/proxy-2126/pods/proxy-service-t5v7h-2jtst/proxy/rewriteme">test</a> (200; 5.15998ms)
  Jun  5 13:57:20.472: INFO: (3) /api/v1/namespaces/proxy-2126/pods/proxy-service-t5v7h-2jtst:162/proxy/: bar (200; 5.176258ms)
  Jun  5 13:57:20.472: INFO: (3) /api/v1/namespaces/proxy-2126/pods/proxy-service-t5v7h-2jtst:1080/proxy/: <a href="/api/v1/namespaces/proxy-2126/pods/proxy-service-t5v7h-2jtst:1080/proxy/rewriteme">test<... (200; 5.346718ms)
  Jun  5 13:57:20.472: INFO: (3) /api/v1/namespaces/proxy-2126/pods/https:proxy-service-t5v7h-2jtst:462/proxy/: tls qux (200; 5.181172ms)
  Jun  5 13:57:20.473: INFO: (3) /api/v1/namespaces/proxy-2126/services/https:proxy-service-t5v7h:tlsportname2/proxy/: tls qux (200; 5.617714ms)
  Jun  5 13:57:20.473: INFO: (3) /api/v1/namespaces/proxy-2126/pods/https:proxy-service-t5v7h-2jtst:460/proxy/: tls baz (200; 5.585207ms)
  Jun  5 13:57:20.473: INFO: (3) /api/v1/namespaces/proxy-2126/pods/http:proxy-service-t5v7h-2jtst:162/proxy/: bar (200; 5.772918ms)
  Jun  5 13:57:20.474: INFO: (3) /api/v1/namespaces/proxy-2126/services/http:proxy-service-t5v7h:portname1/proxy/: foo (200; 6.825587ms)
  Jun  5 13:57:20.474: INFO: (3) /api/v1/namespaces/proxy-2126/services/http:proxy-service-t5v7h:portname2/proxy/: bar (200; 6.867838ms)
  Jun  5 13:57:20.474: INFO: (3) /api/v1/namespaces/proxy-2126/services/https:proxy-service-t5v7h:tlsportname1/proxy/: tls baz (200; 6.776062ms)
  Jun  5 13:57:20.474: INFO: (3) /api/v1/namespaces/proxy-2126/services/proxy-service-t5v7h:portname1/proxy/: foo (200; 6.80171ms)
  Jun  5 13:57:20.474: INFO: (3) /api/v1/namespaces/proxy-2126/services/proxy-service-t5v7h:portname2/proxy/: bar (200; 6.851162ms)
  Jun  5 13:57:20.478: INFO: (4) /api/v1/namespaces/proxy-2126/pods/proxy-service-t5v7h-2jtst:162/proxy/: bar (200; 3.875778ms)
  Jun  5 13:57:20.478: INFO: (4) /api/v1/namespaces/proxy-2126/pods/http:proxy-service-t5v7h-2jtst:1080/proxy/: <a href="/api/v1/namespaces/proxy-2126/pods/http:proxy-service-t5v7h-2jtst:1080/proxy/rewriteme">... (200; 4.108384ms)
  Jun  5 13:57:20.479: INFO: (4) /api/v1/namespaces/proxy-2126/pods/proxy-service-t5v7h-2jtst:160/proxy/: foo (200; 5.12366ms)
  Jun  5 13:57:20.479: INFO: (4) /api/v1/namespaces/proxy-2126/pods/proxy-service-t5v7h-2jtst/proxy/: <a href="/api/v1/namespaces/proxy-2126/pods/proxy-service-t5v7h-2jtst/proxy/rewriteme">test</a> (200; 5.126964ms)
  Jun  5 13:57:20.479: INFO: (4) /api/v1/namespaces/proxy-2126/pods/http:proxy-service-t5v7h-2jtst:160/proxy/: foo (200; 5.293474ms)
  Jun  5 13:57:20.479: INFO: (4) /api/v1/namespaces/proxy-2126/pods/proxy-service-t5v7h-2jtst:1080/proxy/: <a href="/api/v1/namespaces/proxy-2126/pods/proxy-service-t5v7h-2jtst:1080/proxy/rewriteme">test<... (200; 5.178489ms)
  Jun  5 13:57:20.479: INFO: (4) /api/v1/namespaces/proxy-2126/pods/https:proxy-service-t5v7h-2jtst:462/proxy/: tls qux (200; 5.177319ms)
  Jun  5 13:57:20.479: INFO: (4) /api/v1/namespaces/proxy-2126/pods/https:proxy-service-t5v7h-2jtst:443/proxy/: <a href="/api/v1/namespaces/proxy-2126/pods/https:proxy-service-t5v7h-2jtst:443/proxy/tlsrewritem... (200; 5.277786ms)
  Jun  5 13:57:20.479: INFO: (4) /api/v1/namespaces/proxy-2126/pods/http:proxy-service-t5v7h-2jtst:162/proxy/: bar (200; 5.268129ms)
  Jun  5 13:57:20.480: INFO: (4) /api/v1/namespaces/proxy-2126/pods/https:proxy-service-t5v7h-2jtst:460/proxy/: tls baz (200; 5.224112ms)
  Jun  5 13:57:20.480: INFO: (4) /api/v1/namespaces/proxy-2126/services/http:proxy-service-t5v7h:portname1/proxy/: foo (200; 5.505764ms)
  Jun  5 13:57:20.480: INFO: (4) /api/v1/namespaces/proxy-2126/services/https:proxy-service-t5v7h:tlsportname1/proxy/: tls baz (200; 5.966109ms)
  Jun  5 13:57:20.480: INFO: (4) /api/v1/namespaces/proxy-2126/services/proxy-service-t5v7h:portname2/proxy/: bar (200; 5.948736ms)
  Jun  5 13:57:20.480: INFO: (4) /api/v1/namespaces/proxy-2126/services/proxy-service-t5v7h:portname1/proxy/: foo (200; 6.239781ms)
  Jun  5 13:57:20.480: INFO: (4) /api/v1/namespaces/proxy-2126/services/http:proxy-service-t5v7h:portname2/proxy/: bar (200; 6.167015ms)
  Jun  5 13:57:20.480: INFO: (4) /api/v1/namespaces/proxy-2126/services/https:proxy-service-t5v7h:tlsportname2/proxy/: tls qux (200; 6.170297ms)
  Jun  5 13:57:20.485: INFO: (5) /api/v1/namespaces/proxy-2126/pods/proxy-service-t5v7h-2jtst:160/proxy/: foo (200; 4.89882ms)
  Jun  5 13:57:20.485: INFO: (5) /api/v1/namespaces/proxy-2126/pods/proxy-service-t5v7h-2jtst/proxy/: <a href="/api/v1/namespaces/proxy-2126/pods/proxy-service-t5v7h-2jtst/proxy/rewriteme">test</a> (200; 4.90899ms)
  Jun  5 13:57:20.485: INFO: (5) /api/v1/namespaces/proxy-2126/pods/https:proxy-service-t5v7h-2jtst:460/proxy/: tls baz (200; 4.884793ms)
  Jun  5 13:57:20.485: INFO: (5) /api/v1/namespaces/proxy-2126/pods/proxy-service-t5v7h-2jtst:1080/proxy/: <a href="/api/v1/namespaces/proxy-2126/pods/proxy-service-t5v7h-2jtst:1080/proxy/rewriteme">test<... (200; 4.927176ms)
  Jun  5 13:57:20.486: INFO: (5) /api/v1/namespaces/proxy-2126/pods/https:proxy-service-t5v7h-2jtst:462/proxy/: tls qux (200; 4.904384ms)
  Jun  5 13:57:20.486: INFO: (5) /api/v1/namespaces/proxy-2126/pods/http:proxy-service-t5v7h-2jtst:1080/proxy/: <a href="/api/v1/namespaces/proxy-2126/pods/http:proxy-service-t5v7h-2jtst:1080/proxy/rewriteme">... (200; 4.972364ms)
  Jun  5 13:57:20.486: INFO: (5) /api/v1/namespaces/proxy-2126/pods/https:proxy-service-t5v7h-2jtst:443/proxy/: <a href="/api/v1/namespaces/proxy-2126/pods/https:proxy-service-t5v7h-2jtst:443/proxy/tlsrewritem... (200; 4.970026ms)
  Jun  5 13:57:20.486: INFO: (5) /api/v1/namespaces/proxy-2126/pods/proxy-service-t5v7h-2jtst:162/proxy/: bar (200; 5.054963ms)
  Jun  5 13:57:20.486: INFO: (5) /api/v1/namespaces/proxy-2126/pods/http:proxy-service-t5v7h-2jtst:160/proxy/: foo (200; 5.609041ms)
  Jun  5 13:57:20.487: INFO: (5) /api/v1/namespaces/proxy-2126/services/http:proxy-service-t5v7h:portname2/proxy/: bar (200; 5.932436ms)
  Jun  5 13:57:20.487: INFO: (5) /api/v1/namespaces/proxy-2126/pods/http:proxy-service-t5v7h-2jtst:162/proxy/: bar (200; 5.899967ms)
  Jun  5 13:57:20.487: INFO: (5) /api/v1/namespaces/proxy-2126/services/https:proxy-service-t5v7h:tlsportname1/proxy/: tls baz (200; 6.569606ms)
  Jun  5 13:57:20.487: INFO: (5) /api/v1/namespaces/proxy-2126/services/http:proxy-service-t5v7h:portname1/proxy/: foo (200; 6.624218ms)
  Jun  5 13:57:20.487: INFO: (5) /api/v1/namespaces/proxy-2126/services/proxy-service-t5v7h:portname2/proxy/: bar (200; 6.660558ms)
  Jun  5 13:57:20.487: INFO: (5) /api/v1/namespaces/proxy-2126/services/proxy-service-t5v7h:portname1/proxy/: foo (200; 6.764814ms)
  Jun  5 13:57:20.488: INFO: (5) /api/v1/namespaces/proxy-2126/services/https:proxy-service-t5v7h:tlsportname2/proxy/: tls qux (200; 7.022883ms)
  Jun  5 13:57:20.492: INFO: (6) /api/v1/namespaces/proxy-2126/pods/proxy-service-t5v7h-2jtst:160/proxy/: foo (200; 3.75391ms)
  Jun  5 13:57:20.492: INFO: (6) /api/v1/namespaces/proxy-2126/pods/proxy-service-t5v7h-2jtst:1080/proxy/: <a href="/api/v1/namespaces/proxy-2126/pods/proxy-service-t5v7h-2jtst:1080/proxy/rewriteme">test<... (200; 3.943757ms)
  Jun  5 13:57:20.492: INFO: (6) /api/v1/namespaces/proxy-2126/pods/http:proxy-service-t5v7h-2jtst:1080/proxy/: <a href="/api/v1/namespaces/proxy-2126/pods/http:proxy-service-t5v7h-2jtst:1080/proxy/rewriteme">... (200; 3.876442ms)
  Jun  5 13:57:20.492: INFO: (6) /api/v1/namespaces/proxy-2126/pods/proxy-service-t5v7h-2jtst:162/proxy/: bar (200; 3.988062ms)
  Jun  5 13:57:20.492: INFO: (6) /api/v1/namespaces/proxy-2126/pods/https:proxy-service-t5v7h-2jtst:460/proxy/: tls baz (200; 3.818318ms)
  Jun  5 13:57:20.492: INFO: (6) /api/v1/namespaces/proxy-2126/pods/https:proxy-service-t5v7h-2jtst:443/proxy/: <a href="/api/v1/namespaces/proxy-2126/pods/https:proxy-service-t5v7h-2jtst:443/proxy/tlsrewritem... (200; 4.033921ms)
  Jun  5 13:57:20.492: INFO: (6) /api/v1/namespaces/proxy-2126/pods/http:proxy-service-t5v7h-2jtst:160/proxy/: foo (200; 3.920708ms)
  Jun  5 13:57:20.492: INFO: (6) /api/v1/namespaces/proxy-2126/pods/http:proxy-service-t5v7h-2jtst:162/proxy/: bar (200; 3.919197ms)
  Jun  5 13:57:20.492: INFO: (6) /api/v1/namespaces/proxy-2126/pods/https:proxy-service-t5v7h-2jtst:462/proxy/: tls qux (200; 3.975806ms)
  Jun  5 13:57:20.492: INFO: (6) /api/v1/namespaces/proxy-2126/services/https:proxy-service-t5v7h:tlsportname1/proxy/: tls baz (200; 3.903775ms)
  Jun  5 13:57:20.492: INFO: (6) /api/v1/namespaces/proxy-2126/pods/proxy-service-t5v7h-2jtst/proxy/: <a href="/api/v1/namespaces/proxy-2126/pods/proxy-service-t5v7h-2jtst/proxy/rewriteme">test</a> (200; 3.881794ms)
  Jun  5 13:57:20.492: INFO: (6) /api/v1/namespaces/proxy-2126/services/http:proxy-service-t5v7h:portname1/proxy/: foo (200; 4.163322ms)
  Jun  5 13:57:20.492: INFO: (6) /api/v1/namespaces/proxy-2126/services/https:proxy-service-t5v7h:tlsportname2/proxy/: tls qux (200; 4.272864ms)
  Jun  5 13:57:20.492: INFO: (6) /api/v1/namespaces/proxy-2126/services/http:proxy-service-t5v7h:portname2/proxy/: bar (200; 4.393136ms)
  Jun  5 13:57:20.492: INFO: (6) /api/v1/namespaces/proxy-2126/services/proxy-service-t5v7h:portname2/proxy/: bar (200; 4.372207ms)
  Jun  5 13:57:20.492: INFO: (6) /api/v1/namespaces/proxy-2126/services/proxy-service-t5v7h:portname1/proxy/: foo (200; 4.332362ms)
  Jun  5 13:57:20.495: INFO: (7) /api/v1/namespaces/proxy-2126/pods/proxy-service-t5v7h-2jtst:1080/proxy/: <a href="/api/v1/namespaces/proxy-2126/pods/proxy-service-t5v7h-2jtst:1080/proxy/rewriteme">test<... (200; 2.97161ms)
  Jun  5 13:57:20.496: INFO: (7) /api/v1/namespaces/proxy-2126/pods/proxy-service-t5v7h-2jtst:160/proxy/: foo (200; 3.340053ms)
  Jun  5 13:57:20.496: INFO: (7) /api/v1/namespaces/proxy-2126/pods/http:proxy-service-t5v7h-2jtst:160/proxy/: foo (200; 3.613183ms)
  Jun  5 13:57:20.496: INFO: (7) /api/v1/namespaces/proxy-2126/pods/https:proxy-service-t5v7h-2jtst:460/proxy/: tls baz (200; 3.625728ms)
  Jun  5 13:57:20.496: INFO: (7) /api/v1/namespaces/proxy-2126/pods/http:proxy-service-t5v7h-2jtst:162/proxy/: bar (200; 3.61484ms)
  Jun  5 13:57:20.496: INFO: (7) /api/v1/namespaces/proxy-2126/pods/http:proxy-service-t5v7h-2jtst:1080/proxy/: <a href="/api/v1/namespaces/proxy-2126/pods/http:proxy-service-t5v7h-2jtst:1080/proxy/rewriteme">... (200; 3.628564ms)
  Jun  5 13:57:20.496: INFO: (7) /api/v1/namespaces/proxy-2126/pods/https:proxy-service-t5v7h-2jtst:462/proxy/: tls qux (200; 3.614787ms)
  Jun  5 13:57:20.496: INFO: (7) /api/v1/namespaces/proxy-2126/pods/proxy-service-t5v7h-2jtst:162/proxy/: bar (200; 3.631083ms)
  Jun  5 13:57:20.496: INFO: (7) /api/v1/namespaces/proxy-2126/pods/proxy-service-t5v7h-2jtst/proxy/: <a href="/api/v1/namespaces/proxy-2126/pods/proxy-service-t5v7h-2jtst/proxy/rewriteme">test</a> (200; 3.684552ms)
  Jun  5 13:57:20.496: INFO: (7) /api/v1/namespaces/proxy-2126/pods/https:proxy-service-t5v7h-2jtst:443/proxy/: <a href="/api/v1/namespaces/proxy-2126/pods/https:proxy-service-t5v7h-2jtst:443/proxy/tlsrewritem... (200; 3.677362ms)
  Jun  5 13:57:20.496: INFO: (7) /api/v1/namespaces/proxy-2126/services/proxy-service-t5v7h:portname2/proxy/: bar (200; 3.896195ms)
  Jun  5 13:57:20.496: INFO: (7) /api/v1/namespaces/proxy-2126/services/https:proxy-service-t5v7h:tlsportname1/proxy/: tls baz (200; 4.018571ms)
  Jun  5 13:57:20.496: INFO: (7) /api/v1/namespaces/proxy-2126/services/proxy-service-t5v7h:portname1/proxy/: foo (200; 4.141806ms)
  Jun  5 13:57:20.496: INFO: (7) /api/v1/namespaces/proxy-2126/services/http:proxy-service-t5v7h:portname2/proxy/: bar (200; 4.143441ms)
  Jun  5 13:57:20.497: INFO: (7) /api/v1/namespaces/proxy-2126/services/http:proxy-service-t5v7h:portname1/proxy/: foo (200; 4.189605ms)
  Jun  5 13:57:20.497: INFO: (7) /api/v1/namespaces/proxy-2126/services/https:proxy-service-t5v7h:tlsportname2/proxy/: tls qux (200; 4.22564ms)
  Jun  5 13:57:20.500: INFO: (8) /api/v1/namespaces/proxy-2126/pods/proxy-service-t5v7h-2jtst:160/proxy/: foo (200; 3.095972ms)
  Jun  5 13:57:20.500: INFO: (8) /api/v1/namespaces/proxy-2126/pods/http:proxy-service-t5v7h-2jtst:160/proxy/: foo (200; 3.059858ms)
  Jun  5 13:57:20.500: INFO: (8) /api/v1/namespaces/proxy-2126/pods/proxy-service-t5v7h-2jtst:162/proxy/: bar (200; 3.14001ms)
  Jun  5 13:57:20.500: INFO: (8) /api/v1/namespaces/proxy-2126/pods/http:proxy-service-t5v7h-2jtst:162/proxy/: bar (200; 3.199277ms)
  Jun  5 13:57:20.500: INFO: (8) /api/v1/namespaces/proxy-2126/pods/proxy-service-t5v7h-2jtst/proxy/: <a href="/api/v1/namespaces/proxy-2126/pods/proxy-service-t5v7h-2jtst/proxy/rewriteme">test</a> (200; 3.279288ms)
  Jun  5 13:57:20.500: INFO: (8) /api/v1/namespaces/proxy-2126/pods/https:proxy-service-t5v7h-2jtst:460/proxy/: tls baz (200; 3.266557ms)
  Jun  5 13:57:20.500: INFO: (8) /api/v1/namespaces/proxy-2126/pods/https:proxy-service-t5v7h-2jtst:462/proxy/: tls qux (200; 3.254001ms)
  Jun  5 13:57:20.500: INFO: (8) /api/v1/namespaces/proxy-2126/pods/http:proxy-service-t5v7h-2jtst:1080/proxy/: <a href="/api/v1/namespaces/proxy-2126/pods/http:proxy-service-t5v7h-2jtst:1080/proxy/rewriteme">... (200; 3.33828ms)
  Jun  5 13:57:20.500: INFO: (8) /api/v1/namespaces/proxy-2126/pods/proxy-service-t5v7h-2jtst:1080/proxy/: <a href="/api/v1/namespaces/proxy-2126/pods/proxy-service-t5v7h-2jtst:1080/proxy/rewriteme">test<... (200; 3.295818ms)
  Jun  5 13:57:20.500: INFO: (8) /api/v1/namespaces/proxy-2126/pods/https:proxy-service-t5v7h-2jtst:443/proxy/: <a href="/api/v1/namespaces/proxy-2126/pods/https:proxy-service-t5v7h-2jtst:443/proxy/tlsrewritem... (200; 3.354733ms)
  Jun  5 13:57:20.500: INFO: (8) /api/v1/namespaces/proxy-2126/services/proxy-service-t5v7h:portname1/proxy/: foo (200; 3.482569ms)
  Jun  5 13:57:20.500: INFO: (8) /api/v1/namespaces/proxy-2126/services/proxy-service-t5v7h:portname2/proxy/: bar (200; 3.628956ms)
  Jun  5 13:57:20.500: INFO: (8) /api/v1/namespaces/proxy-2126/services/http:proxy-service-t5v7h:portname2/proxy/: bar (200; 3.560688ms)
  Jun  5 13:57:20.500: INFO: (8) /api/v1/namespaces/proxy-2126/services/http:proxy-service-t5v7h:portname1/proxy/: foo (200; 3.66262ms)
  Jun  5 13:57:20.500: INFO: (8) /api/v1/namespaces/proxy-2126/services/https:proxy-service-t5v7h:tlsportname2/proxy/: tls qux (200; 3.706822ms)
  Jun  5 13:57:20.500: INFO: (8) /api/v1/namespaces/proxy-2126/services/https:proxy-service-t5v7h:tlsportname1/proxy/: tls baz (200; 3.615814ms)
  Jun  5 13:57:20.503: INFO: (9) /api/v1/namespaces/proxy-2126/pods/http:proxy-service-t5v7h-2jtst:162/proxy/: bar (200; 2.3491ms)
  Jun  5 13:57:20.503: INFO: (9) /api/v1/namespaces/proxy-2126/pods/http:proxy-service-t5v7h-2jtst:1080/proxy/: <a href="/api/v1/namespaces/proxy-2126/pods/http:proxy-service-t5v7h-2jtst:1080/proxy/rewriteme">... (200; 2.368421ms)
  Jun  5 13:57:20.503: INFO: (9) /api/v1/namespaces/proxy-2126/pods/proxy-service-t5v7h-2jtst:162/proxy/: bar (200; 2.359681ms)
  Jun  5 13:57:20.503: INFO: (9) /api/v1/namespaces/proxy-2126/pods/http:proxy-service-t5v7h-2jtst:160/proxy/: foo (200; 2.338446ms)
  Jun  5 13:57:20.503: INFO: (9) /api/v1/namespaces/proxy-2126/pods/proxy-service-t5v7h-2jtst:1080/proxy/: <a href="/api/v1/namespaces/proxy-2126/pods/proxy-service-t5v7h-2jtst:1080/proxy/rewriteme">test<... (200; 2.429384ms)
  Jun  5 13:57:20.503: INFO: (9) /api/v1/namespaces/proxy-2126/pods/https:proxy-service-t5v7h-2jtst:443/proxy/: <a href="/api/v1/namespaces/proxy-2126/pods/https:proxy-service-t5v7h-2jtst:443/proxy/tlsrewritem... (200; 2.582373ms)
  Jun  5 13:57:20.503: INFO: (9) /api/v1/namespaces/proxy-2126/pods/proxy-service-t5v7h-2jtst:160/proxy/: foo (200; 2.579209ms)
  Jun  5 13:57:20.503: INFO: (9) /api/v1/namespaces/proxy-2126/pods/https:proxy-service-t5v7h-2jtst:462/proxy/: tls qux (200; 2.632277ms)
  Jun  5 13:57:20.503: INFO: (9) /api/v1/namespaces/proxy-2126/pods/proxy-service-t5v7h-2jtst/proxy/: <a href="/api/v1/namespaces/proxy-2126/pods/proxy-service-t5v7h-2jtst/proxy/rewriteme">test</a> (200; 2.616995ms)
  Jun  5 13:57:20.503: INFO: (9) /api/v1/namespaces/proxy-2126/services/http:proxy-service-t5v7h:portname2/proxy/: bar (200; 2.6978ms)
  Jun  5 13:57:20.503: INFO: (9) /api/v1/namespaces/proxy-2126/services/proxy-service-t5v7h:portname2/proxy/: bar (200; 2.763616ms)
  Jun  5 13:57:20.503: INFO: (9) /api/v1/namespaces/proxy-2126/services/http:proxy-service-t5v7h:portname1/proxy/: foo (200; 2.93612ms)
  Jun  5 13:57:20.503: INFO: (9) /api/v1/namespaces/proxy-2126/services/https:proxy-service-t5v7h:tlsportname2/proxy/: tls qux (200; 2.913914ms)
  Jun  5 13:57:20.503: INFO: (9) /api/v1/namespaces/proxy-2126/services/https:proxy-service-t5v7h:tlsportname1/proxy/: tls baz (200; 3.024181ms)
  Jun  5 13:57:20.503: INFO: (9) /api/v1/namespaces/proxy-2126/pods/https:proxy-service-t5v7h-2jtst:460/proxy/: tls baz (200; 3.053165ms)
  Jun  5 13:57:20.503: INFO: (9) /api/v1/namespaces/proxy-2126/services/proxy-service-t5v7h:portname1/proxy/: foo (200; 3.004484ms)
  Jun  5 13:57:20.505: INFO: (10) /api/v1/namespaces/proxy-2126/pods/http:proxy-service-t5v7h-2jtst:162/proxy/: bar (200; 1.767792ms)
  Jun  5 13:57:20.505: INFO: (10) /api/v1/namespaces/proxy-2126/pods/https:proxy-service-t5v7h-2jtst:443/proxy/: <a href="/api/v1/namespaces/proxy-2126/pods/https:proxy-service-t5v7h-2jtst:443/proxy/tlsrewritem... (200; 1.932516ms)
  Jun  5 13:57:20.506: INFO: (10) /api/v1/namespaces/proxy-2126/pods/http:proxy-service-t5v7h-2jtst:1080/proxy/: <a href="/api/v1/namespaces/proxy-2126/pods/http:proxy-service-t5v7h-2jtst:1080/proxy/rewriteme">... (200; 2.058966ms)
  Jun  5 13:57:20.506: INFO: (10) /api/v1/namespaces/proxy-2126/pods/http:proxy-service-t5v7h-2jtst:160/proxy/: foo (200; 2.369036ms)
  Jun  5 13:57:20.506: INFO: (10) /api/v1/namespaces/proxy-2126/pods/proxy-service-t5v7h-2jtst:160/proxy/: foo (200; 2.364014ms)
  Jun  5 13:57:20.506: INFO: (10) /api/v1/namespaces/proxy-2126/pods/proxy-service-t5v7h-2jtst/proxy/: <a href="/api/v1/namespaces/proxy-2126/pods/proxy-service-t5v7h-2jtst/proxy/rewriteme">test</a> (200; 2.390718ms)
  Jun  5 13:57:20.506: INFO: (10) /api/v1/namespaces/proxy-2126/pods/https:proxy-service-t5v7h-2jtst:460/proxy/: tls baz (200; 2.391973ms)
  Jun  5 13:57:20.506: INFO: (10) /api/v1/namespaces/proxy-2126/pods/proxy-service-t5v7h-2jtst:1080/proxy/: <a href="/api/v1/namespaces/proxy-2126/pods/proxy-service-t5v7h-2jtst:1080/proxy/rewriteme">test<... (200; 2.433482ms)
  Jun  5 13:57:20.506: INFO: (10) /api/v1/namespaces/proxy-2126/pods/proxy-service-t5v7h-2jtst:162/proxy/: bar (200; 2.390532ms)
  Jun  5 13:57:20.506: INFO: (10) /api/v1/namespaces/proxy-2126/pods/https:proxy-service-t5v7h-2jtst:462/proxy/: tls qux (200; 2.430789ms)
  Jun  5 13:57:20.506: INFO: (10) /api/v1/namespaces/proxy-2126/services/http:proxy-service-t5v7h:portname2/proxy/: bar (200; 2.591007ms)
  Jun  5 13:57:20.506: INFO: (10) /api/v1/namespaces/proxy-2126/services/proxy-service-t5v7h:portname1/proxy/: foo (200; 2.652478ms)
  Jun  5 13:57:20.506: INFO: (10) /api/v1/namespaces/proxy-2126/services/https:proxy-service-t5v7h:tlsportname2/proxy/: tls qux (200; 2.811322ms)
  Jun  5 13:57:20.506: INFO: (10) /api/v1/namespaces/proxy-2126/services/https:proxy-service-t5v7h:tlsportname1/proxy/: tls baz (200; 2.766359ms)
  Jun  5 13:57:20.506: INFO: (10) /api/v1/namespaces/proxy-2126/services/proxy-service-t5v7h:portname2/proxy/: bar (200; 2.743604ms)
  Jun  5 13:57:20.506: INFO: (10) /api/v1/namespaces/proxy-2126/services/http:proxy-service-t5v7h:portname1/proxy/: foo (200; 2.755642ms)
  Jun  5 13:57:20.508: INFO: (11) /api/v1/namespaces/proxy-2126/pods/http:proxy-service-t5v7h-2jtst:162/proxy/: bar (200; 1.852321ms)
  Jun  5 13:57:20.508: INFO: (11) /api/v1/namespaces/proxy-2126/pods/proxy-service-t5v7h-2jtst:160/proxy/: foo (200; 1.880324ms)
  Jun  5 13:57:20.509: INFO: (11) /api/v1/namespaces/proxy-2126/pods/proxy-service-t5v7h-2jtst/proxy/: <a href="/api/v1/namespaces/proxy-2126/pods/proxy-service-t5v7h-2jtst/proxy/rewriteme">test</a> (200; 2.247557ms)
  Jun  5 13:57:20.509: INFO: (11) /api/v1/namespaces/proxy-2126/pods/http:proxy-service-t5v7h-2jtst:1080/proxy/: <a href="/api/v1/namespaces/proxy-2126/pods/http:proxy-service-t5v7h-2jtst:1080/proxy/rewriteme">... (200; 2.207598ms)
  Jun  5 13:57:20.509: INFO: (11) /api/v1/namespaces/proxy-2126/pods/http:proxy-service-t5v7h-2jtst:160/proxy/: foo (200; 2.232736ms)
  Jun  5 13:57:20.509: INFO: (11) /api/v1/namespaces/proxy-2126/pods/proxy-service-t5v7h-2jtst:1080/proxy/: <a href="/api/v1/namespaces/proxy-2126/pods/proxy-service-t5v7h-2jtst:1080/proxy/rewriteme">test<... (200; 2.244337ms)
  Jun  5 13:57:20.509: INFO: (11) /api/v1/namespaces/proxy-2126/pods/https:proxy-service-t5v7h-2jtst:462/proxy/: tls qux (200; 2.235715ms)
  Jun  5 13:57:20.509: INFO: (11) /api/v1/namespaces/proxy-2126/services/proxy-service-t5v7h:portname1/proxy/: foo (200; 2.278412ms)
  Jun  5 13:57:20.509: INFO: (11) /api/v1/namespaces/proxy-2126/services/https:proxy-service-t5v7h:tlsportname2/proxy/: tls qux (200; 2.49075ms)
  Jun  5 13:57:20.509: INFO: (11) /api/v1/namespaces/proxy-2126/services/proxy-service-t5v7h:portname2/proxy/: bar (200; 2.491239ms)
  Jun  5 13:57:20.509: INFO: (11) /api/v1/namespaces/proxy-2126/pods/proxy-service-t5v7h-2jtst:162/proxy/: bar (200; 2.479532ms)
  Jun  5 13:57:20.509: INFO: (11) /api/v1/namespaces/proxy-2126/pods/https:proxy-service-t5v7h-2jtst:443/proxy/: <a href="/api/v1/namespaces/proxy-2126/pods/https:proxy-service-t5v7h-2jtst:443/proxy/tlsrewritem... (200; 2.489555ms)
  Jun  5 13:57:20.509: INFO: (11) /api/v1/namespaces/proxy-2126/services/http:proxy-service-t5v7h:portname1/proxy/: foo (200; 2.510217ms)
  Jun  5 13:57:20.509: INFO: (11) /api/v1/namespaces/proxy-2126/services/https:proxy-service-t5v7h:tlsportname1/proxy/: tls baz (200; 2.580282ms)
  Jun  5 13:57:20.509: INFO: (11) /api/v1/namespaces/proxy-2126/services/http:proxy-service-t5v7h:portname2/proxy/: bar (200; 2.479433ms)
  Jun  5 13:57:20.509: INFO: (11) /api/v1/namespaces/proxy-2126/pods/https:proxy-service-t5v7h-2jtst:460/proxy/: tls baz (200; 2.56325ms)
  Jun  5 13:57:20.511: INFO: (12) /api/v1/namespaces/proxy-2126/pods/proxy-service-t5v7h-2jtst:1080/proxy/: <a href="/api/v1/namespaces/proxy-2126/pods/proxy-service-t5v7h-2jtst:1080/proxy/rewriteme">test<... (200; 2.191774ms)
  Jun  5 13:57:20.511: INFO: (12) /api/v1/namespaces/proxy-2126/pods/proxy-service-t5v7h-2jtst:162/proxy/: bar (200; 2.158437ms)
  Jun  5 13:57:20.511: INFO: (12) /api/v1/namespaces/proxy-2126/pods/https:proxy-service-t5v7h-2jtst:462/proxy/: tls qux (200; 2.184239ms)
  Jun  5 13:57:20.511: INFO: (12) /api/v1/namespaces/proxy-2126/pods/https:proxy-service-t5v7h-2jtst:460/proxy/: tls baz (200; 2.176433ms)
  Jun  5 13:57:20.511: INFO: (12) /api/v1/namespaces/proxy-2126/pods/http:proxy-service-t5v7h-2jtst:162/proxy/: bar (200; 2.262208ms)
  Jun  5 13:57:20.511: INFO: (12) /api/v1/namespaces/proxy-2126/pods/http:proxy-service-t5v7h-2jtst:1080/proxy/: <a href="/api/v1/namespaces/proxy-2126/pods/http:proxy-service-t5v7h-2jtst:1080/proxy/rewriteme">... (200; 2.172614ms)
  Jun  5 13:57:20.511: INFO: (12) /api/v1/namespaces/proxy-2126/services/http:proxy-service-t5v7h:portname1/proxy/: foo (200; 2.206828ms)
  Jun  5 13:57:20.511: INFO: (12) /api/v1/namespaces/proxy-2126/services/https:proxy-service-t5v7h:tlsportname1/proxy/: tls baz (200; 2.181239ms)
  Jun  5 13:57:20.511: INFO: (12) /api/v1/namespaces/proxy-2126/services/proxy-service-t5v7h:portname1/proxy/: foo (200; 2.261288ms)
  Jun  5 13:57:20.511: INFO: (12) /api/v1/namespaces/proxy-2126/pods/http:proxy-service-t5v7h-2jtst:160/proxy/: foo (200; 2.320279ms)
  Jun  5 13:57:20.511: INFO: (12) /api/v1/namespaces/proxy-2126/services/https:proxy-service-t5v7h:tlsportname2/proxy/: tls qux (200; 2.345025ms)
  Jun  5 13:57:20.511: INFO: (12) /api/v1/namespaces/proxy-2126/pods/https:proxy-service-t5v7h-2jtst:443/proxy/: <a href="/api/v1/namespaces/proxy-2126/pods/https:proxy-service-t5v7h-2jtst:443/proxy/tlsrewritem... (200; 2.287195ms)
  Jun  5 13:57:20.511: INFO: (12) /api/v1/namespaces/proxy-2126/pods/proxy-service-t5v7h-2jtst/proxy/: <a href="/api/v1/namespaces/proxy-2126/pods/proxy-service-t5v7h-2jtst/proxy/rewriteme">test</a> (200; 2.346571ms)
  Jun  5 13:57:20.511: INFO: (12) /api/v1/namespaces/proxy-2126/services/http:proxy-service-t5v7h:portname2/proxy/: bar (200; 2.256267ms)
  Jun  5 13:57:20.511: INFO: (12) /api/v1/namespaces/proxy-2126/services/proxy-service-t5v7h:portname2/proxy/: bar (200; 2.330351ms)
  Jun  5 13:57:20.511: INFO: (12) /api/v1/namespaces/proxy-2126/pods/proxy-service-t5v7h-2jtst:160/proxy/: foo (200; 2.358416ms)
  Jun  5 13:57:20.513: INFO: (13) /api/v1/namespaces/proxy-2126/pods/https:proxy-service-t5v7h-2jtst:443/proxy/: <a href="/api/v1/namespaces/proxy-2126/pods/https:proxy-service-t5v7h-2jtst:443/proxy/tlsrewritem... (200; 1.76403ms)
  Jun  5 13:57:20.513: INFO: (13) /api/v1/namespaces/proxy-2126/pods/http:proxy-service-t5v7h-2jtst:160/proxy/: foo (200; 1.719523ms)
  Jun  5 13:57:20.513: INFO: (13) /api/v1/namespaces/proxy-2126/pods/http:proxy-service-t5v7h-2jtst:162/proxy/: bar (200; 1.776546ms)
  Jun  5 13:57:20.513: INFO: (13) /api/v1/namespaces/proxy-2126/pods/proxy-service-t5v7h-2jtst:1080/proxy/: <a href="/api/v1/namespaces/proxy-2126/pods/proxy-service-t5v7h-2jtst:1080/proxy/rewriteme">test<... (200; 1.818701ms)
  Jun  5 13:57:20.513: INFO: (13) /api/v1/namespaces/proxy-2126/pods/proxy-service-t5v7h-2jtst:160/proxy/: foo (200; 1.960928ms)
  Jun  5 13:57:20.513: INFO: (13) /api/v1/namespaces/proxy-2126/pods/proxy-service-t5v7h-2jtst:162/proxy/: bar (200; 1.981418ms)
  Jun  5 13:57:20.513: INFO: (13) /api/v1/namespaces/proxy-2126/pods/https:proxy-service-t5v7h-2jtst:460/proxy/: tls baz (200; 2.024598ms)
  Jun  5 13:57:20.513: INFO: (13) /api/v1/namespaces/proxy-2126/pods/http:proxy-service-t5v7h-2jtst:1080/proxy/: <a href="/api/v1/namespaces/proxy-2126/pods/http:proxy-service-t5v7h-2jtst:1080/proxy/rewriteme">... (200; 2.01113ms)
  Jun  5 13:57:20.514: INFO: (13) /api/v1/namespaces/proxy-2126/pods/proxy-service-t5v7h-2jtst/proxy/: <a href="/api/v1/namespaces/proxy-2126/pods/proxy-service-t5v7h-2jtst/proxy/rewriteme">test</a> (200; 2.271963ms)
  Jun  5 13:57:20.514: INFO: (13) /api/v1/namespaces/proxy-2126/pods/https:proxy-service-t5v7h-2jtst:462/proxy/: tls qux (200; 2.301948ms)
  Jun  5 13:57:20.514: INFO: (13) /api/v1/namespaces/proxy-2126/services/https:proxy-service-t5v7h:tlsportname1/proxy/: tls baz (200; 2.356875ms)
  Jun  5 13:57:20.514: INFO: (13) /api/v1/namespaces/proxy-2126/services/https:proxy-service-t5v7h:tlsportname2/proxy/: tls qux (200; 2.357284ms)
  Jun  5 13:57:20.514: INFO: (13) /api/v1/namespaces/proxy-2126/services/proxy-service-t5v7h:portname1/proxy/: foo (200; 2.368117ms)
  Jun  5 13:57:20.514: INFO: (13) /api/v1/namespaces/proxy-2126/services/proxy-service-t5v7h:portname2/proxy/: bar (200; 2.45852ms)
  Jun  5 13:57:20.514: INFO: (13) /api/v1/namespaces/proxy-2126/services/http:proxy-service-t5v7h:portname2/proxy/: bar (200; 2.408158ms)
  Jun  5 13:57:20.514: INFO: (13) /api/v1/namespaces/proxy-2126/services/http:proxy-service-t5v7h:portname1/proxy/: foo (200; 2.478767ms)
  Jun  5 13:57:20.516: INFO: (14) /api/v1/namespaces/proxy-2126/pods/proxy-service-t5v7h-2jtst:160/proxy/: foo (200; 2.15809ms)
  Jun  5 13:57:20.516: INFO: (14) /api/v1/namespaces/proxy-2126/pods/proxy-service-t5v7h-2jtst:162/proxy/: bar (200; 2.122353ms)
  Jun  5 13:57:20.516: INFO: (14) /api/v1/namespaces/proxy-2126/pods/http:proxy-service-t5v7h-2jtst:1080/proxy/: <a href="/api/v1/namespaces/proxy-2126/pods/http:proxy-service-t5v7h-2jtst:1080/proxy/rewriteme">... (200; 2.121603ms)
  Jun  5 13:57:20.516: INFO: (14) /api/v1/namespaces/proxy-2126/pods/http:proxy-service-t5v7h-2jtst:160/proxy/: foo (200; 2.166289ms)
  Jun  5 13:57:20.516: INFO: (14) /api/v1/namespaces/proxy-2126/pods/http:proxy-service-t5v7h-2jtst:162/proxy/: bar (200; 2.168071ms)
  Jun  5 13:57:20.516: INFO: (14) /api/v1/namespaces/proxy-2126/pods/proxy-service-t5v7h-2jtst/proxy/: <a href="/api/v1/namespaces/proxy-2126/pods/proxy-service-t5v7h-2jtst/proxy/rewriteme">test</a> (200; 2.165385ms)
  Jun  5 13:57:20.516: INFO: (14) /api/v1/namespaces/proxy-2126/pods/https:proxy-service-t5v7h-2jtst:443/proxy/: <a href="/api/v1/namespaces/proxy-2126/pods/https:proxy-service-t5v7h-2jtst:443/proxy/tlsrewritem... (200; 2.181521ms)
  Jun  5 13:57:20.516: INFO: (14) /api/v1/namespaces/proxy-2126/pods/https:proxy-service-t5v7h-2jtst:462/proxy/: tls qux (200; 2.246875ms)
  Jun  5 13:57:20.516: INFO: (14) /api/v1/namespaces/proxy-2126/services/proxy-service-t5v7h:portname2/proxy/: bar (200; 2.34516ms)
  Jun  5 13:57:20.516: INFO: (14) /api/v1/namespaces/proxy-2126/services/https:proxy-service-t5v7h:tlsportname1/proxy/: tls baz (200; 2.306259ms)
  Jun  5 13:57:20.516: INFO: (14) /api/v1/namespaces/proxy-2126/pods/https:proxy-service-t5v7h-2jtst:460/proxy/: tls baz (200; 2.331668ms)
  Jun  5 13:57:20.516: INFO: (14) /api/v1/namespaces/proxy-2126/pods/proxy-service-t5v7h-2jtst:1080/proxy/: <a href="/api/v1/namespaces/proxy-2126/pods/proxy-service-t5v7h-2jtst:1080/proxy/rewriteme">test<... (200; 2.415812ms)
  Jun  5 13:57:20.516: INFO: (14) /api/v1/namespaces/proxy-2126/services/http:proxy-service-t5v7h:portname1/proxy/: foo (200; 2.357467ms)
  Jun  5 13:57:20.516: INFO: (14) /api/v1/namespaces/proxy-2126/services/https:proxy-service-t5v7h:tlsportname2/proxy/: tls qux (200; 2.362058ms)
  Jun  5 13:57:20.516: INFO: (14) /api/v1/namespaces/proxy-2126/services/proxy-service-t5v7h:portname1/proxy/: foo (200; 2.411961ms)
  Jun  5 13:57:20.516: INFO: (14) /api/v1/namespaces/proxy-2126/services/http:proxy-service-t5v7h:portname2/proxy/: bar (200; 2.551893ms)
  Jun  5 13:57:20.518: INFO: (15) /api/v1/namespaces/proxy-2126/pods/https:proxy-service-t5v7h-2jtst:443/proxy/: <a href="/api/v1/namespaces/proxy-2126/pods/https:proxy-service-t5v7h-2jtst:443/proxy/tlsrewritem... (200; 1.856674ms)
  Jun  5 13:57:20.518: INFO: (15) /api/v1/namespaces/proxy-2126/pods/proxy-service-t5v7h-2jtst:1080/proxy/: <a href="/api/v1/namespaces/proxy-2126/pods/proxy-service-t5v7h-2jtst:1080/proxy/rewriteme">test<... (200; 1.943638ms)
  Jun  5 13:57:20.518: INFO: (15) /api/v1/namespaces/proxy-2126/pods/http:proxy-service-t5v7h-2jtst:160/proxy/: foo (200; 1.89586ms)
  Jun  5 13:57:20.519: INFO: (15) /api/v1/namespaces/proxy-2126/pods/http:proxy-service-t5v7h-2jtst:1080/proxy/: <a href="/api/v1/namespaces/proxy-2126/pods/http:proxy-service-t5v7h-2jtst:1080/proxy/rewriteme">... (200; 1.98131ms)
  Jun  5 13:57:20.519: INFO: (15) /api/v1/namespaces/proxy-2126/services/http:proxy-service-t5v7h:portname1/proxy/: foo (200; 2.100682ms)
  Jun  5 13:57:20.519: INFO: (15) /api/v1/namespaces/proxy-2126/pods/proxy-service-t5v7h-2jtst:160/proxy/: foo (200; 2.132062ms)
  Jun  5 13:57:20.519: INFO: (15) /api/v1/namespaces/proxy-2126/pods/proxy-service-t5v7h-2jtst:162/proxy/: bar (200; 2.07808ms)
  Jun  5 13:57:20.519: INFO: (15) /api/v1/namespaces/proxy-2126/pods/http:proxy-service-t5v7h-2jtst:162/proxy/: bar (200; 2.133433ms)
  Jun  5 13:57:20.519: INFO: (15) /api/v1/namespaces/proxy-2126/services/https:proxy-service-t5v7h:tlsportname1/proxy/: tls baz (200; 2.100656ms)
  Jun  5 13:57:20.519: INFO: (15) /api/v1/namespaces/proxy-2126/pods/https:proxy-service-t5v7h-2jtst:460/proxy/: tls baz (200; 2.145511ms)
  Jun  5 13:57:20.519: INFO: (15) /api/v1/namespaces/proxy-2126/services/https:proxy-service-t5v7h:tlsportname2/proxy/: tls qux (200; 2.199736ms)
  Jun  5 13:57:20.519: INFO: (15) /api/v1/namespaces/proxy-2126/pods/https:proxy-service-t5v7h-2jtst:462/proxy/: tls qux (200; 2.181551ms)
  Jun  5 13:57:20.519: INFO: (15) /api/v1/namespaces/proxy-2126/pods/proxy-service-t5v7h-2jtst/proxy/: <a href="/api/v1/namespaces/proxy-2126/pods/proxy-service-t5v7h-2jtst/proxy/rewriteme">test</a> (200; 2.200901ms)
  Jun  5 13:57:20.519: INFO: (15) /api/v1/namespaces/proxy-2126/services/http:proxy-service-t5v7h:portname2/proxy/: bar (200; 2.20352ms)
  Jun  5 13:57:20.519: INFO: (15) /api/v1/namespaces/proxy-2126/services/proxy-service-t5v7h:portname1/proxy/: foo (200; 2.230774ms)
  Jun  5 13:57:20.519: INFO: (15) /api/v1/namespaces/proxy-2126/services/proxy-service-t5v7h:portname2/proxy/: bar (200; 2.376156ms)
  Jun  5 13:57:20.521: INFO: (16) /api/v1/namespaces/proxy-2126/pods/https:proxy-service-t5v7h-2jtst:443/proxy/: <a href="/api/v1/namespaces/proxy-2126/pods/https:proxy-service-t5v7h-2jtst:443/proxy/tlsrewritem... (200; 1.996974ms)
  Jun  5 13:57:20.521: INFO: (16) /api/v1/namespaces/proxy-2126/pods/proxy-service-t5v7h-2jtst/proxy/: <a href="/api/v1/namespaces/proxy-2126/pods/proxy-service-t5v7h-2jtst/proxy/rewriteme">test</a> (200; 2.023547ms)
  Jun  5 13:57:20.521: INFO: (16) /api/v1/namespaces/proxy-2126/pods/http:proxy-service-t5v7h-2jtst:162/proxy/: bar (200; 2.010231ms)
  Jun  5 13:57:20.521: INFO: (16) /api/v1/namespaces/proxy-2126/services/https:proxy-service-t5v7h:tlsportname2/proxy/: tls qux (200; 2.129445ms)
  Jun  5 13:57:20.521: INFO: (16) /api/v1/namespaces/proxy-2126/pods/https:proxy-service-t5v7h-2jtst:462/proxy/: tls qux (200; 2.062084ms)
  Jun  5 13:57:20.521: INFO: (16) /api/v1/namespaces/proxy-2126/pods/http:proxy-service-t5v7h-2jtst:1080/proxy/: <a href="/api/v1/namespaces/proxy-2126/pods/http:proxy-service-t5v7h-2jtst:1080/proxy/rewriteme">... (200; 2.07912ms)
  Jun  5 13:57:20.521: INFO: (16) /api/v1/namespaces/proxy-2126/pods/http:proxy-service-t5v7h-2jtst:160/proxy/: foo (200; 2.095724ms)
  Jun  5 13:57:20.521: INFO: (16) /api/v1/namespaces/proxy-2126/services/http:proxy-service-t5v7h:portname1/proxy/: foo (200; 2.141165ms)
  Jun  5 13:57:20.521: INFO: (16) /api/v1/namespaces/proxy-2126/pods/proxy-service-t5v7h-2jtst:1080/proxy/: <a href="/api/v1/namespaces/proxy-2126/pods/proxy-service-t5v7h-2jtst:1080/proxy/rewriteme">test<... (200; 2.098039ms)
  Jun  5 13:57:20.521: INFO: (16) /api/v1/namespaces/proxy-2126/pods/proxy-service-t5v7h-2jtst:162/proxy/: bar (200; 2.109535ms)
  Jun  5 13:57:20.521: INFO: (16) /api/v1/namespaces/proxy-2126/pods/https:proxy-service-t5v7h-2jtst:460/proxy/: tls baz (200; 2.105451ms)
  Jun  5 13:57:20.521: INFO: (16) /api/v1/namespaces/proxy-2126/pods/proxy-service-t5v7h-2jtst:160/proxy/: foo (200; 2.118721ms)
  Jun  5 13:57:20.521: INFO: (16) /api/v1/namespaces/proxy-2126/services/proxy-service-t5v7h:portname1/proxy/: foo (200; 2.172742ms)
  Jun  5 13:57:20.521: INFO: (16) /api/v1/namespaces/proxy-2126/services/http:proxy-service-t5v7h:portname2/proxy/: bar (200; 2.240263ms)
  Jun  5 13:57:20.521: INFO: (16) /api/v1/namespaces/proxy-2126/services/https:proxy-service-t5v7h:tlsportname1/proxy/: tls baz (200; 2.301841ms)
  Jun  5 13:57:20.521: INFO: (16) /api/v1/namespaces/proxy-2126/services/proxy-service-t5v7h:portname2/proxy/: bar (200; 2.282072ms)
  Jun  5 13:57:20.523: INFO: (17) /api/v1/namespaces/proxy-2126/pods/http:proxy-service-t5v7h-2jtst:160/proxy/: foo (200; 1.74957ms)
  Jun  5 13:57:20.523: INFO: (17) /api/v1/namespaces/proxy-2126/pods/proxy-service-t5v7h-2jtst/proxy/: <a href="/api/v1/namespaces/proxy-2126/pods/proxy-service-t5v7h-2jtst/proxy/rewriteme">test</a> (200; 1.740723ms)
  Jun  5 13:57:20.523: INFO: (17) /api/v1/namespaces/proxy-2126/pods/proxy-service-t5v7h-2jtst:1080/proxy/: <a href="/api/v1/namespaces/proxy-2126/pods/proxy-service-t5v7h-2jtst:1080/proxy/rewriteme">test<... (200; 1.747952ms)
  Jun  5 13:57:20.523: INFO: (17) /api/v1/namespaces/proxy-2126/pods/http:proxy-service-t5v7h-2jtst:162/proxy/: bar (200; 1.754636ms)
  Jun  5 13:57:20.523: INFO: (17) /api/v1/namespaces/proxy-2126/pods/proxy-service-t5v7h-2jtst:162/proxy/: bar (200; 1.742493ms)
  Jun  5 13:57:20.523: INFO: (17) /api/v1/namespaces/proxy-2126/pods/proxy-service-t5v7h-2jtst:160/proxy/: foo (200; 1.795854ms)
  Jun  5 13:57:20.523: INFO: (17) /api/v1/namespaces/proxy-2126/pods/https:proxy-service-t5v7h-2jtst:443/proxy/: <a href="/api/v1/namespaces/proxy-2126/pods/https:proxy-service-t5v7h-2jtst:443/proxy/tlsrewritem... (200; 1.751489ms)
  Jun  5 13:57:20.523: INFO: (17) /api/v1/namespaces/proxy-2126/pods/http:proxy-service-t5v7h-2jtst:1080/proxy/: <a href="/api/v1/namespaces/proxy-2126/pods/http:proxy-service-t5v7h-2jtst:1080/proxy/rewriteme">... (200; 1.803431ms)
  Jun  5 13:57:20.523: INFO: (17) /api/v1/namespaces/proxy-2126/pods/https:proxy-service-t5v7h-2jtst:460/proxy/: tls baz (200; 2.000188ms)
  Jun  5 13:57:20.523: INFO: (17) /api/v1/namespaces/proxy-2126/pods/https:proxy-service-t5v7h-2jtst:462/proxy/: tls qux (200; 1.998138ms)
  Jun  5 13:57:20.524: INFO: (17) /api/v1/namespaces/proxy-2126/services/https:proxy-service-t5v7h:tlsportname2/proxy/: tls qux (200; 2.102112ms)
  Jun  5 13:57:20.524: INFO: (17) /api/v1/namespaces/proxy-2126/services/proxy-service-t5v7h:portname2/proxy/: bar (200; 2.121689ms)
  Jun  5 13:57:20.524: INFO: (17) /api/v1/namespaces/proxy-2126/services/http:proxy-service-t5v7h:portname2/proxy/: bar (200; 2.115303ms)
  Jun  5 13:57:20.524: INFO: (17) /api/v1/namespaces/proxy-2126/services/https:proxy-service-t5v7h:tlsportname1/proxy/: tls baz (200; 2.185176ms)
  Jun  5 13:57:20.524: INFO: (17) /api/v1/namespaces/proxy-2126/services/proxy-service-t5v7h:portname1/proxy/: foo (200; 2.197305ms)
  Jun  5 13:57:20.524: INFO: (17) /api/v1/namespaces/proxy-2126/services/http:proxy-service-t5v7h:portname1/proxy/: foo (200; 2.240905ms)
  Jun  5 13:57:20.525: INFO: (18) /api/v1/namespaces/proxy-2126/pods/https:proxy-service-t5v7h-2jtst:460/proxy/: tls baz (200; 1.533818ms)
  Jun  5 13:57:20.525: INFO: (18) /api/v1/namespaces/proxy-2126/pods/http:proxy-service-t5v7h-2jtst:162/proxy/: bar (200; 1.759447ms)
  Jun  5 13:57:20.525: INFO: (18) /api/v1/namespaces/proxy-2126/pods/proxy-service-t5v7h-2jtst/proxy/: <a href="/api/v1/namespaces/proxy-2126/pods/proxy-service-t5v7h-2jtst/proxy/rewriteme">test</a> (200; 1.729627ms)
  Jun  5 13:57:20.525: INFO: (18) /api/v1/namespaces/proxy-2126/pods/proxy-service-t5v7h-2jtst:160/proxy/: foo (200; 1.816786ms)
  Jun  5 13:57:20.526: INFO: (18) /api/v1/namespaces/proxy-2126/pods/http:proxy-service-t5v7h-2jtst:1080/proxy/: <a href="/api/v1/namespaces/proxy-2126/pods/http:proxy-service-t5v7h-2jtst:1080/proxy/rewriteme">... (200; 1.831077ms)
  Jun  5 13:57:20.526: INFO: (18) /api/v1/namespaces/proxy-2126/pods/proxy-service-t5v7h-2jtst:1080/proxy/: <a href="/api/v1/namespaces/proxy-2126/pods/proxy-service-t5v7h-2jtst:1080/proxy/rewriteme">test<... (200; 1.922738ms)
  Jun  5 13:57:20.526: INFO: (18) /api/v1/namespaces/proxy-2126/services/http:proxy-service-t5v7h:portname2/proxy/: bar (200; 2.020224ms)
  Jun  5 13:57:20.526: INFO: (18) /api/v1/namespaces/proxy-2126/pods/https:proxy-service-t5v7h-2jtst:462/proxy/: tls qux (200; 1.99986ms)
  Jun  5 13:57:20.526: INFO: (18) /api/v1/namespaces/proxy-2126/pods/proxy-service-t5v7h-2jtst:162/proxy/: bar (200; 1.984404ms)
  Jun  5 13:57:20.526: INFO: (18) /api/v1/namespaces/proxy-2126/pods/https:proxy-service-t5v7h-2jtst:443/proxy/: <a href="/api/v1/namespaces/proxy-2126/pods/https:proxy-service-t5v7h-2jtst:443/proxy/tlsrewritem... (200; 1.971935ms)
  Jun  5 13:57:20.526: INFO: (18) /api/v1/namespaces/proxy-2126/services/proxy-service-t5v7h:portname1/proxy/: foo (200; 2.45392ms)
  Jun  5 13:57:20.526: INFO: (18) /api/v1/namespaces/proxy-2126/services/https:proxy-service-t5v7h:tlsportname2/proxy/: tls qux (200; 2.442233ms)
  Jun  5 13:57:20.526: INFO: (18) /api/v1/namespaces/proxy-2126/services/https:proxy-service-t5v7h:tlsportname1/proxy/: tls baz (200; 2.441781ms)
  Jun  5 13:57:20.526: INFO: (18) /api/v1/namespaces/proxy-2126/pods/http:proxy-service-t5v7h-2jtst:160/proxy/: foo (200; 2.434396ms)
  Jun  5 13:57:20.526: INFO: (18) /api/v1/namespaces/proxy-2126/services/proxy-service-t5v7h:portname2/proxy/: bar (200; 2.547582ms)
  Jun  5 13:57:20.526: INFO: (18) /api/v1/namespaces/proxy-2126/services/http:proxy-service-t5v7h:portname1/proxy/: foo (200; 2.636314ms)
  Jun  5 13:57:20.528: INFO: (19) /api/v1/namespaces/proxy-2126/pods/proxy-service-t5v7h-2jtst/proxy/: <a href="/api/v1/namespaces/proxy-2126/pods/proxy-service-t5v7h-2jtst/proxy/rewriteme">test</a> (200; 1.648601ms)
  Jun  5 13:57:20.528: INFO: (19) /api/v1/namespaces/proxy-2126/pods/http:proxy-service-t5v7h-2jtst:160/proxy/: foo (200; 1.690249ms)
  Jun  5 13:57:20.528: INFO: (19) /api/v1/namespaces/proxy-2126/pods/http:proxy-service-t5v7h-2jtst:1080/proxy/: <a href="/api/v1/namespaces/proxy-2126/pods/http:proxy-service-t5v7h-2jtst:1080/proxy/rewriteme">... (200; 1.766526ms)
  Jun  5 13:57:20.528: INFO: (19) /api/v1/namespaces/proxy-2126/pods/http:proxy-service-t5v7h-2jtst:162/proxy/: bar (200; 1.773562ms)
  Jun  5 13:57:20.528: INFO: (19) /api/v1/namespaces/proxy-2126/pods/proxy-service-t5v7h-2jtst:160/proxy/: foo (200; 1.774323ms)
  Jun  5 13:57:20.528: INFO: (19) /api/v1/namespaces/proxy-2126/pods/proxy-service-t5v7h-2jtst:1080/proxy/: <a href="/api/v1/namespaces/proxy-2126/pods/proxy-service-t5v7h-2jtst:1080/proxy/rewriteme">test<... (200; 1.767703ms)
  Jun  5 13:57:20.528: INFO: (19) /api/v1/namespaces/proxy-2126/pods/https:proxy-service-t5v7h-2jtst:460/proxy/: tls baz (200; 1.831123ms)
  Jun  5 13:57:20.528: INFO: (19) /api/v1/namespaces/proxy-2126/pods/https:proxy-service-t5v7h-2jtst:443/proxy/: <a href="/api/v1/namespaces/proxy-2126/pods/https:proxy-service-t5v7h-2jtst:443/proxy/tlsrewritem... (200; 1.811683ms)
  Jun  5 13:57:20.528: INFO: (19) /api/v1/namespaces/proxy-2126/pods/https:proxy-service-t5v7h-2jtst:462/proxy/: tls qux (200; 1.842554ms)
  Jun  5 13:57:20.528: INFO: (19) /api/v1/namespaces/proxy-2126/pods/proxy-service-t5v7h-2jtst:162/proxy/: bar (200; 1.819302ms)
  Jun  5 13:57:20.528: INFO: (19) /api/v1/namespaces/proxy-2126/services/https:proxy-service-t5v7h:tlsportname2/proxy/: tls qux (200; 1.950544ms)
  Jun  5 13:57:20.528: INFO: (19) /api/v1/namespaces/proxy-2126/services/http:proxy-service-t5v7h:portname1/proxy/: foo (200; 1.968423ms)
  Jun  5 13:57:20.529: INFO: (19) /api/v1/namespaces/proxy-2126/services/proxy-service-t5v7h:portname2/proxy/: bar (200; 2.188993ms)
  Jun  5 13:57:20.529: INFO: (19) /api/v1/namespaces/proxy-2126/services/https:proxy-service-t5v7h:tlsportname1/proxy/: tls baz (200; 2.192903ms)
  Jun  5 13:57:20.529: INFO: (19) /api/v1/namespaces/proxy-2126/services/http:proxy-service-t5v7h:portname2/proxy/: bar (200; 2.186378ms)
  Jun  5 13:57:20.529: INFO: (19) /api/v1/namespaces/proxy-2126/services/proxy-service-t5v7h:portname1/proxy/: foo (200; 2.25589ms)
  STEP: deleting ReplicationController proxy-service-t5v7h in namespace proxy-2126, will wait for the garbage collector to delete the pods @ 06/05/24 13:57:20.529
  Jun  5 13:57:20.591: INFO: Deleting ReplicationController proxy-service-t5v7h took: 10.330074ms
  Jun  5 13:57:20.692: INFO: Terminating ReplicationController proxy-service-t5v7h pods took: 101.173255ms
  Jun  5 13:57:22.992: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-2126" for this suite. @ 06/05/24 13:57:22.997
• [4.665 seconds]
------------------------------
SSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1373
  STEP: Creating a kubernetes client @ 06/05/24 13:57:23.005
  Jun  5 13:57:23.005: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename kubectl @ 06/05/24 13:57:23.006
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:57:23.016
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:57:23.019
  STEP: validating cluster-info @ 06/05/24 13:57:23.022
  Jun  5 13:57:23.022: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=kubectl-1535 cluster-info'
  Jun  5 13:57:23.063: INFO: stderr: ""
  Jun  5 13:57:23.063: INFO: stdout: "\x1b[0;32mKubernetes control plane\x1b[0m is running at \x1b[0;33mhttps://10.96.0.1:443\x1b[0m\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  Jun  5 13:57:23.063: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1535" for this suite. @ 06/05/24 13:57:23.066
• [0.065 seconds]
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 06/05/24 13:57:23.069
  Jun  5 13:57:23.069: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename watch @ 06/05/24 13:57:23.07
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:57:23.076
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:57:23.077
  STEP: getting a starting resourceVersion @ 06/05/24 13:57:23.078
  STEP: starting a background goroutine to produce watch events @ 06/05/24 13:57:23.079
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 06/05/24 13:57:23.079
  Jun  5 13:57:25.877: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-1647" for this suite. @ 06/05/24 13:57:25.925
• [2.905 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:46
  STEP: Creating a kubernetes client @ 06/05/24 13:57:25.975
  Jun  5 13:57:25.975: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename configmap @ 06/05/24 13:57:25.976
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:57:25.986
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:57:25.989
  STEP: Creating configMap configmap-5994/configmap-test-0e446113-b319-41f3-9d88-8a4f48ca3155 @ 06/05/24 13:57:25.991
  STEP: Creating a pod to test consume configMaps @ 06/05/24 13:57:25.994
  STEP: Saw pod success @ 06/05/24 13:57:30.01
  Jun  5 13:57:30.012: INFO: Trying to get logs from node k8sconformance-m02 pod pod-configmaps-48cc8f3a-6226-4fd3-8346-78b13a8f17d2 container env-test: <nil>
  STEP: delete the pod @ 06/05/24 13:57:30.017
  Jun  5 13:57:30.028: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5994" for this suite. @ 06/05/24 13:57:30.029
• [4.057 seconds]
------------------------------
[sig-api-machinery] server version should find the server version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/server_version.go:41
  STEP: Creating a kubernetes client @ 06/05/24 13:57:30.032
  Jun  5 13:57:30.032: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename server-version @ 06/05/24 13:57:30.033
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:57:30.042
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:57:30.044
  STEP: Request ServerVersion @ 06/05/24 13:57:30.046
  STEP: Confirm major version @ 06/05/24 13:57:30.046
  Jun  5 13:57:30.047: INFO: Major version: 1
  STEP: Confirm minor version @ 06/05/24 13:57:30.047
  Jun  5 13:57:30.047: INFO: cleanMinorVersion: 29
  Jun  5 13:57:30.047: INFO: Minor version: 29
  Jun  5 13:57:30.047: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-3069" for this suite. @ 06/05/24 13:57:30.049
• [0.020 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 06/05/24 13:57:30.053
  Jun  5 13:57:30.054: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename endpointslicemirroring @ 06/05/24 13:57:30.055
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:57:30.07
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:57:30.077
  STEP: mirroring a new custom Endpoint @ 06/05/24 13:57:30.101
  Jun  5 13:57:30.107: INFO: Waiting for at least 1 EndpointSlice to exist, got 0
  STEP: mirroring an update to a custom Endpoint @ 06/05/24 13:57:32.112
  Jun  5 13:57:32.122: INFO: Expected EndpointSlice to have 10.2.3.4 as address, got 10.1.2.3
  STEP: mirroring deletion of a custom Endpoint @ 06/05/24 13:57:34.125
  Jun  5 13:57:34.131: INFO: Waiting for 0 EndpointSlices to exist, got 1
  Jun  5 13:57:36.137: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-8066" for this suite. @ 06/05/24 13:57:36.14
• [6.093 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:230
  STEP: Creating a kubernetes client @ 06/05/24 13:57:36.147
  Jun  5 13:57:36.147: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename emptydir @ 06/05/24 13:57:36.147
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:57:36.159
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:57:36.162
  STEP: Creating Pod @ 06/05/24 13:57:36.165
  STEP: Reading file content from the nginx-container @ 06/05/24 13:57:38.183
  Jun  5 13:57:38.183: INFO: ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-4115 PodName:pod-sharedvolume-54d70d6b-e522-4825-8f11-1633ea0f3664 ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun  5 13:57:38.183: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  Jun  5 13:57:38.184: INFO: ExecWithOptions: Clientset creation
  Jun  5 13:57:38.184: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/emptydir-4115/pods/pod-sharedvolume-54d70d6b-e522-4825-8f11-1633ea0f3664/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&container=busybox-main-container&stderr=true&stdout=true)
  Jun  5 13:57:38.253: INFO: Exec stderr: ""
  Jun  5 13:57:38.253: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4115" for this suite. @ 06/05/24 13:57:38.257
• [2.119 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:120
  STEP: Creating a kubernetes client @ 06/05/24 13:57:38.265
  Jun  5 13:57:38.265: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename emptydir @ 06/05/24 13:57:38.266
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:57:38.278
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:57:38.281
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 06/05/24 13:57:38.284
  STEP: Saw pod success @ 06/05/24 13:57:40.299
  Jun  5 13:57:40.302: INFO: Trying to get logs from node k8sconformance-m02 pod pod-7b657ad8-519f-4c32-bc7e-c2c8c3e38df2 container test-container: <nil>
  STEP: delete the pod @ 06/05/24 13:57:40.309
  Jun  5 13:57:40.322: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4505" for this suite. @ 06/05/24 13:57:40.325
• [2.064 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:86
  STEP: Creating a kubernetes client @ 06/05/24 13:57:40.33
  Jun  5 13:57:40.330: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename custom-resource-definition @ 06/05/24 13:57:40.331
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:57:40.343
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:57:40.347
  Jun  5 13:57:40.350: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  Jun  5 13:57:46.538: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-5954" for this suite. @ 06/05/24 13:57:46.543
• [6.220 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:356
  STEP: Creating a kubernetes client @ 06/05/24 13:57:46.55
  Jun  5 13:57:46.550: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename endpointslice @ 06/05/24 13:57:46.551
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:57:46.563
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:57:46.566
  STEP: getting /apis @ 06/05/24 13:57:46.569
  STEP: getting /apis/discovery.k8s.io @ 06/05/24 13:57:46.574
  STEP: getting /apis/discovery.k8s.iov1 @ 06/05/24 13:57:46.575
  STEP: creating @ 06/05/24 13:57:46.576
  STEP: getting @ 06/05/24 13:57:46.589
  STEP: listing @ 06/05/24 13:57:46.592
  STEP: watching @ 06/05/24 13:57:46.594
  Jun  5 13:57:46.594: INFO: starting watch
  STEP: cluster-wide listing @ 06/05/24 13:57:46.596
  STEP: cluster-wide watching @ 06/05/24 13:57:46.598
  Jun  5 13:57:46.598: INFO: starting watch
  STEP: patching @ 06/05/24 13:57:46.599
  STEP: updating @ 06/05/24 13:57:46.603
  Jun  5 13:57:46.609: INFO: waiting for watch events with expected annotations
  Jun  5 13:57:46.609: INFO: saw patched and updated annotations
  STEP: deleting @ 06/05/24 13:57:46.609
  STEP: deleting a collection @ 06/05/24 13:57:46.618
  Jun  5 13:57:46.628: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-1331" for this suite. @ 06/05/24 13:57:46.631
• [0.086 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:71
  STEP: Creating a kubernetes client @ 06/05/24 13:57:46.637
  Jun  5 13:57:46.637: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename container-probe @ 06/05/24 13:57:46.638
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:57:46.646
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:57:46.649
  Jun  5 13:58:08.716: INFO: Container started at 2024-06-05 13:57:47 +0000 UTC, pod became ready at 2024-06-05 13:58:06 +0000 UTC
  Jun  5 13:58:08.716: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2613" for this suite. @ 06/05/24 13:58:08.719
• [22.089 seconds]
------------------------------
SS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:470
  STEP: Creating a kubernetes client @ 06/05/24 13:58:08.725
  Jun  5 13:58:08.725: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename sched-pred @ 06/05/24 13:58:08.727
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:58:08.737
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:58:08.739
  Jun  5 13:58:08.742: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Jun  5 13:58:08.749: INFO: Waiting for terminating namespaces to be deleted...
  Jun  5 13:58:08.751: INFO: 
  Logging pods the apiserver thinks is on node k8sconformance before test
  Jun  5 13:58:08.755: INFO: coredns-76f75df574-xgft9 from kube-system started at 2024-06-05 12:48:31 +0000 UTC (1 container statuses recorded)
  Jun  5 13:58:08.755: INFO: 	Container coredns ready: true, restart count 1
  Jun  5 13:58:08.755: INFO: etcd-k8sconformance from kube-system started at 2024-06-05 12:48:19 +0000 UTC (1 container statuses recorded)
  Jun  5 13:58:08.755: INFO: 	Container etcd ready: true, restart count 0
  Jun  5 13:58:08.755: INFO: kindnet-rzd2z from kube-system started at 2024-06-05 12:48:30 +0000 UTC (1 container statuses recorded)
  Jun  5 13:58:08.755: INFO: 	Container kindnet-cni ready: true, restart count 0
  Jun  5 13:58:08.755: INFO: kube-apiserver-k8sconformance from kube-system started at 2024-06-05 12:48:19 +0000 UTC (1 container statuses recorded)
  Jun  5 13:58:08.755: INFO: 	Container kube-apiserver ready: true, restart count 0
  Jun  5 13:58:08.755: INFO: kube-controller-manager-k8sconformance from kube-system started at 2024-06-05 12:48:19 +0000 UTC (1 container statuses recorded)
  Jun  5 13:58:08.755: INFO: 	Container kube-controller-manager ready: true, restart count 0
  Jun  5 13:58:08.755: INFO: kube-proxy-gpz28 from kube-system started at 2024-06-05 12:48:30 +0000 UTC (1 container statuses recorded)
  Jun  5 13:58:08.755: INFO: 	Container kube-proxy ready: true, restart count 0
  Jun  5 13:58:08.755: INFO: kube-scheduler-k8sconformance from kube-system started at 2024-06-05 12:48:19 +0000 UTC (1 container statuses recorded)
  Jun  5 13:58:08.755: INFO: 	Container kube-scheduler ready: true, restart count 0
  Jun  5 13:58:08.755: INFO: storage-provisioner from kube-system started at 2024-06-05 12:48:32 +0000 UTC (1 container statuses recorded)
  Jun  5 13:58:08.755: INFO: 	Container storage-provisioner ready: true, restart count 1
  Jun  5 13:58:08.755: INFO: sonobuoy-systemd-logs-daemon-set-8cb29c0a4b934094-xqm4q from sonobuoy started at 2024-06-05 12:50:55 +0000 UTC (2 container statuses recorded)
  Jun  5 13:58:08.755: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun  5 13:58:08.755: INFO: 	Container systemd-logs ready: true, restart count 0
  Jun  5 13:58:08.755: INFO: 
  Logging pods the apiserver thinks is on node k8sconformance-m02 before test
  Jun  5 13:58:08.760: INFO: test-webserver-072fc9c1-4ca9-4f8d-b200-0b12cc637d1b from container-probe-2613 started at 2024-06-05 13:57:46 +0000 UTC (1 container statuses recorded)
  Jun  5 13:58:08.760: INFO: 	Container test-webserver ready: true, restart count 0
  Jun  5 13:58:08.760: INFO: kindnet-ln8np from kube-system started at 2024-06-05 13:17:41 +0000 UTC (1 container statuses recorded)
  Jun  5 13:58:08.760: INFO: 	Container kindnet-cni ready: true, restart count 0
  Jun  5 13:58:08.760: INFO: kube-proxy-5kd5n from kube-system started at 2024-06-05 12:48:59 +0000 UTC (1 container statuses recorded)
  Jun  5 13:58:08.760: INFO: 	Container kube-proxy ready: true, restart count 0
  Jun  5 13:58:08.760: INFO: sonobuoy from sonobuoy started at 2024-06-05 12:50:51 +0000 UTC (1 container statuses recorded)
  Jun  5 13:58:08.760: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Jun  5 13:58:08.760: INFO: sonobuoy-e2e-job-faabc61b98714bf2 from sonobuoy started at 2024-06-05 12:50:55 +0000 UTC (2 container statuses recorded)
  Jun  5 13:58:08.760: INFO: 	Container e2e ready: true, restart count 0
  Jun  5 13:58:08.760: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun  5 13:58:08.760: INFO: sonobuoy-systemd-logs-daemon-set-8cb29c0a4b934094-jbbcp from sonobuoy started at 2024-06-05 12:50:55 +0000 UTC (2 container statuses recorded)
  Jun  5 13:58:08.760: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun  5 13:58:08.760: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 06/05/24 13:58:08.76
  STEP: Explicitly delete pod here to free the resource it takes. @ 06/05/24 13:58:10.774
  STEP: Trying to apply a random label on the found node. @ 06/05/24 13:58:10.784
  STEP: verifying the node has the label kubernetes.io/e2e-ada02ebf-067c-4666-9463-ba249b132180 42 @ 06/05/24 13:58:10.792
  STEP: Trying to relaunch the pod, now with labels. @ 06/05/24 13:58:10.795
  STEP: removing the label kubernetes.io/e2e-ada02ebf-067c-4666-9463-ba249b132180 off the node k8sconformance-m02 @ 06/05/24 13:58:12.814
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-ada02ebf-067c-4666-9463-ba249b132180 @ 06/05/24 13:58:12.826
  Jun  5 13:58:12.829: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-65" for this suite. @ 06/05/24 13:58:12.832
• [4.112 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:400
  STEP: Creating a kubernetes client @ 06/05/24 13:58:12.842
  Jun  5 13:58:12.842: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename namespaces @ 06/05/24 13:58:12.843
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:58:12.852
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:58:12.855
  STEP: Creating namespace "e2e-ns-wtdqs" @ 06/05/24 13:58:12.857
  Jun  5 13:58:12.864: INFO: Namespace "e2e-ns-wtdqs-3103" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-wtdqs-3103" @ 06/05/24 13:58:12.864
  Jun  5 13:58:12.869: INFO: Namespace "e2e-ns-wtdqs-3103" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-wtdqs-3103" @ 06/05/24 13:58:12.869
  Jun  5 13:58:12.873: INFO: Namespace "e2e-ns-wtdqs-3103" has []v1.FinalizerName{"kubernetes"}
  Jun  5 13:58:12.873: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-8246" for this suite. @ 06/05/24 13:58:12.875
  STEP: Destroying namespace "e2e-ns-wtdqs-3103" for this suite. @ 06/05/24 13:58:12.879
• [0.040 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:407
  STEP: Creating a kubernetes client @ 06/05/24 13:58:12.882
  Jun  5 13:58:12.882: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename dns @ 06/05/24 13:58:12.883
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:58:12.888
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:58:12.889
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 06/05/24 13:58:12.892
  Jun  5 13:58:12.895: INFO: Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-7303  d5f00974-d930-4094-baeb-37643dcbd0cb 16572 0 2024-06-05 13:58:12 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2024-06-05 13:58:12 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-82vf6,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,ClusterTrustBundle:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.47,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-82vf6,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},},}
  STEP: Verifying customized DNS suffix list is configured on pod... @ 06/05/24 13:58:14.903
  Jun  5 13:58:14.903: INFO: ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-7303 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun  5 13:58:14.903: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  Jun  5 13:58:14.904: INFO: ExecWithOptions: Clientset creation
  Jun  5 13:58:14.904: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/dns-7303/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  STEP: Verifying customized DNS server is configured on pod... @ 06/05/24 13:58:14.982
  Jun  5 13:58:14.982: INFO: ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-7303 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun  5 13:58:14.982: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  Jun  5 13:58:14.983: INFO: ExecWithOptions: Clientset creation
  Jun  5 13:58:14.983: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/dns-7303/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Jun  5 13:58:15.046: INFO: Deleting pod test-dns-nameservers...
  Jun  5 13:58:15.056: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-7303" for this suite. @ 06/05/24 13:58:15.059
• [2.181 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:611
  STEP: Creating a kubernetes client @ 06/05/24 13:58:15.064
  Jun  5 13:58:15.064: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename security-context-test @ 06/05/24 13:58:15.065
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:58:15.074
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:58:15.076
  Jun  5 13:58:19.105: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-2592" for this suite. @ 06/05/24 13:58:19.108
• [4.050 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:47
  STEP: Creating a kubernetes client @ 06/05/24 13:58:19.115
  Jun  5 13:58:19.115: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename secrets @ 06/05/24 13:58:19.116
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:58:19.128
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:58:19.131
  STEP: Creating secret with name secret-test-e4162a1d-94d0-46fe-885d-5a449b77547a @ 06/05/24 13:58:19.134
  STEP: Creating a pod to test consume secrets @ 06/05/24 13:58:19.138
  STEP: Saw pod success @ 06/05/24 13:58:23.163
  Jun  5 13:58:23.166: INFO: Trying to get logs from node k8sconformance-m02 pod pod-secrets-b5e21b0d-3c8a-4c11-9576-c6e8c6531d26 container secret-env-test: <nil>
  STEP: delete the pod @ 06/05/24 13:58:23.174
  Jun  5 13:58:23.187: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-517" for this suite. @ 06/05/24 13:58:23.189
• [4.079 seconds]
------------------------------
S
------------------------------
[sig-apps] Job should delete a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:627
  STEP: Creating a kubernetes client @ 06/05/24 13:58:23.194
  Jun  5 13:58:23.194: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename job @ 06/05/24 13:58:23.195
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:58:23.205
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:58:23.207
  STEP: Creating a job @ 06/05/24 13:58:23.209
  STEP: Ensuring active pods == parallelism @ 06/05/24 13:58:23.214
  STEP: delete a job @ 06/05/24 13:58:25.22
  STEP: deleting Job.batch foo in namespace job-5445, will wait for the garbage collector to delete the pods @ 06/05/24 13:58:25.22
  Jun  5 13:58:25.282: INFO: Deleting Job.batch foo took: 8.62634ms
  Jun  5 13:58:25.383: INFO: Terminating Job.batch foo pods took: 100.898123ms
  STEP: Ensuring job was deleted @ 06/05/24 13:58:27.884
  Jun  5 13:58:27.890: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-5445" for this suite. @ 06/05/24 13:58:27.894
• [4.705 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:75
  STEP: Creating a kubernetes client @ 06/05/24 13:58:27.899
  Jun  5 13:58:27.899: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename projected @ 06/05/24 13:58:27.9
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:58:27.911
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:58:27.913
  STEP: Creating configMap with name projected-configmap-test-volume-adf8496c-96c8-4f1c-8a87-1db6b3737eba @ 06/05/24 13:58:27.916
  STEP: Creating a pod to test consume configMaps @ 06/05/24 13:58:27.92
  STEP: Saw pod success @ 06/05/24 13:58:31.937
  Jun  5 13:58:31.940: INFO: Trying to get logs from node k8sconformance-m02 pod pod-projected-configmaps-bb06e114-1e2a-4aef-a089-6f56c1ee322d container agnhost-container: <nil>
  STEP: delete the pod @ 06/05/24 13:58:31.948
  Jun  5 13:58:31.965: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4848" for this suite. @ 06/05/24 13:58:31.969
• [4.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:126
  STEP: Creating a kubernetes client @ 06/05/24 13:58:31.979
  Jun  5 13:58:31.979: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename discovery @ 06/05/24 13:58:31.98
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:58:31.989
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:58:31.991
  STEP: Setting up server cert @ 06/05/24 13:58:31.993
  Jun  5 13:58:32.150: INFO: Checking APIGroup: apiregistration.k8s.io
  Jun  5 13:58:32.151: INFO: PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  Jun  5 13:58:32.151: INFO: Versions found [{apiregistration.k8s.io/v1 v1}]
  Jun  5 13:58:32.151: INFO: apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  Jun  5 13:58:32.151: INFO: Checking APIGroup: apps
  Jun  5 13:58:32.151: INFO: PreferredVersion.GroupVersion: apps/v1
  Jun  5 13:58:32.151: INFO: Versions found [{apps/v1 v1}]
  Jun  5 13:58:32.151: INFO: apps/v1 matches apps/v1
  Jun  5 13:58:32.151: INFO: Checking APIGroup: events.k8s.io
  Jun  5 13:58:32.152: INFO: PreferredVersion.GroupVersion: events.k8s.io/v1
  Jun  5 13:58:32.152: INFO: Versions found [{events.k8s.io/v1 v1}]
  Jun  5 13:58:32.152: INFO: events.k8s.io/v1 matches events.k8s.io/v1
  Jun  5 13:58:32.152: INFO: Checking APIGroup: authentication.k8s.io
  Jun  5 13:58:32.152: INFO: PreferredVersion.GroupVersion: authentication.k8s.io/v1
  Jun  5 13:58:32.152: INFO: Versions found [{authentication.k8s.io/v1 v1}]
  Jun  5 13:58:32.152: INFO: authentication.k8s.io/v1 matches authentication.k8s.io/v1
  Jun  5 13:58:32.152: INFO: Checking APIGroup: authorization.k8s.io
  Jun  5 13:58:32.153: INFO: PreferredVersion.GroupVersion: authorization.k8s.io/v1
  Jun  5 13:58:32.153: INFO: Versions found [{authorization.k8s.io/v1 v1}]
  Jun  5 13:58:32.153: INFO: authorization.k8s.io/v1 matches authorization.k8s.io/v1
  Jun  5 13:58:32.153: INFO: Checking APIGroup: autoscaling
  Jun  5 13:58:32.154: INFO: PreferredVersion.GroupVersion: autoscaling/v2
  Jun  5 13:58:32.154: INFO: Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  Jun  5 13:58:32.154: INFO: autoscaling/v2 matches autoscaling/v2
  Jun  5 13:58:32.154: INFO: Checking APIGroup: batch
  Jun  5 13:58:32.154: INFO: PreferredVersion.GroupVersion: batch/v1
  Jun  5 13:58:32.154: INFO: Versions found [{batch/v1 v1}]
  Jun  5 13:58:32.154: INFO: batch/v1 matches batch/v1
  Jun  5 13:58:32.154: INFO: Checking APIGroup: certificates.k8s.io
  Jun  5 13:58:32.155: INFO: PreferredVersion.GroupVersion: certificates.k8s.io/v1
  Jun  5 13:58:32.155: INFO: Versions found [{certificates.k8s.io/v1 v1}]
  Jun  5 13:58:32.155: INFO: certificates.k8s.io/v1 matches certificates.k8s.io/v1
  Jun  5 13:58:32.155: INFO: Checking APIGroup: networking.k8s.io
  Jun  5 13:58:32.155: INFO: PreferredVersion.GroupVersion: networking.k8s.io/v1
  Jun  5 13:58:32.155: INFO: Versions found [{networking.k8s.io/v1 v1}]
  Jun  5 13:58:32.155: INFO: networking.k8s.io/v1 matches networking.k8s.io/v1
  Jun  5 13:58:32.155: INFO: Checking APIGroup: policy
  Jun  5 13:58:32.155: INFO: PreferredVersion.GroupVersion: policy/v1
  Jun  5 13:58:32.155: INFO: Versions found [{policy/v1 v1}]
  Jun  5 13:58:32.155: INFO: policy/v1 matches policy/v1
  Jun  5 13:58:32.155: INFO: Checking APIGroup: rbac.authorization.k8s.io
  Jun  5 13:58:32.156: INFO: PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  Jun  5 13:58:32.156: INFO: Versions found [{rbac.authorization.k8s.io/v1 v1}]
  Jun  5 13:58:32.156: INFO: rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  Jun  5 13:58:32.156: INFO: Checking APIGroup: storage.k8s.io
  Jun  5 13:58:32.156: INFO: PreferredVersion.GroupVersion: storage.k8s.io/v1
  Jun  5 13:58:32.156: INFO: Versions found [{storage.k8s.io/v1 v1}]
  Jun  5 13:58:32.156: INFO: storage.k8s.io/v1 matches storage.k8s.io/v1
  Jun  5 13:58:32.156: INFO: Checking APIGroup: admissionregistration.k8s.io
  Jun  5 13:58:32.157: INFO: PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  Jun  5 13:58:32.157: INFO: Versions found [{admissionregistration.k8s.io/v1 v1}]
  Jun  5 13:58:32.157: INFO: admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  Jun  5 13:58:32.157: INFO: Checking APIGroup: apiextensions.k8s.io
  Jun  5 13:58:32.157: INFO: PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  Jun  5 13:58:32.157: INFO: Versions found [{apiextensions.k8s.io/v1 v1}]
  Jun  5 13:58:32.157: INFO: apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  Jun  5 13:58:32.157: INFO: Checking APIGroup: scheduling.k8s.io
  Jun  5 13:58:32.158: INFO: PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  Jun  5 13:58:32.158: INFO: Versions found [{scheduling.k8s.io/v1 v1}]
  Jun  5 13:58:32.158: INFO: scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  Jun  5 13:58:32.158: INFO: Checking APIGroup: coordination.k8s.io
  Jun  5 13:58:32.158: INFO: PreferredVersion.GroupVersion: coordination.k8s.io/v1
  Jun  5 13:58:32.158: INFO: Versions found [{coordination.k8s.io/v1 v1}]
  Jun  5 13:58:32.158: INFO: coordination.k8s.io/v1 matches coordination.k8s.io/v1
  Jun  5 13:58:32.158: INFO: Checking APIGroup: node.k8s.io
  Jun  5 13:58:32.159: INFO: PreferredVersion.GroupVersion: node.k8s.io/v1
  Jun  5 13:58:32.159: INFO: Versions found [{node.k8s.io/v1 v1}]
  Jun  5 13:58:32.159: INFO: node.k8s.io/v1 matches node.k8s.io/v1
  Jun  5 13:58:32.159: INFO: Checking APIGroup: discovery.k8s.io
  Jun  5 13:58:32.159: INFO: PreferredVersion.GroupVersion: discovery.k8s.io/v1
  Jun  5 13:58:32.159: INFO: Versions found [{discovery.k8s.io/v1 v1}]
  Jun  5 13:58:32.159: INFO: discovery.k8s.io/v1 matches discovery.k8s.io/v1
  Jun  5 13:58:32.159: INFO: Checking APIGroup: flowcontrol.apiserver.k8s.io
  Jun  5 13:58:32.160: INFO: PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1
  Jun  5 13:58:32.160: INFO: Versions found [{flowcontrol.apiserver.k8s.io/v1 v1} {flowcontrol.apiserver.k8s.io/v1beta3 v1beta3}]
  Jun  5 13:58:32.160: INFO: flowcontrol.apiserver.k8s.io/v1 matches flowcontrol.apiserver.k8s.io/v1
  Jun  5 13:58:32.160: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-93" for this suite. @ 06/05/24 13:58:32.161
• [0.184 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:714
  STEP: Creating a kubernetes client @ 06/05/24 13:58:32.164
  Jun  5 13:58:32.164: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename gc @ 06/05/24 13:58:32.164
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:58:32.173
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:58:32.174
  STEP: create the rc1 @ 06/05/24 13:58:32.177
  STEP: create the rc2 @ 06/05/24 13:58:32.179
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 06/05/24 13:58:38.188
  STEP: delete the rc simpletest-rc-to-be-deleted @ 06/05/24 13:58:38.553
  STEP: wait for the rc to be deleted @ 06/05/24 13:58:38.559
  Jun  5 13:58:43.570: INFO: 71 pods remaining
  Jun  5 13:58:43.570: INFO: 71 pods has nil DeletionTimestamp
  Jun  5 13:58:43.570: INFO: 
  STEP: Gathering metrics @ 06/05/24 13:58:48.573
  Jun  5 13:58:48.675: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Jun  5 13:58:48.675: INFO: Deleting pod "simpletest-rc-to-be-deleted-25gxg" in namespace "gc-2380"
  Jun  5 13:58:48.682: INFO: Deleting pod "simpletest-rc-to-be-deleted-25vbm" in namespace "gc-2380"
  Jun  5 13:58:48.690: INFO: Deleting pod "simpletest-rc-to-be-deleted-28v9n" in namespace "gc-2380"
  Jun  5 13:58:48.701: INFO: Deleting pod "simpletest-rc-to-be-deleted-2c6m7" in namespace "gc-2380"
  Jun  5 13:58:48.710: INFO: Deleting pod "simpletest-rc-to-be-deleted-2xlj7" in namespace "gc-2380"
  Jun  5 13:58:48.722: INFO: Deleting pod "simpletest-rc-to-be-deleted-2z9n5" in namespace "gc-2380"
  Jun  5 13:58:48.734: INFO: Deleting pod "simpletest-rc-to-be-deleted-4rr8k" in namespace "gc-2380"
  Jun  5 13:58:48.747: INFO: Deleting pod "simpletest-rc-to-be-deleted-54xqv" in namespace "gc-2380"
  Jun  5 13:58:48.754: INFO: Deleting pod "simpletest-rc-to-be-deleted-592wd" in namespace "gc-2380"
  Jun  5 13:58:48.765: INFO: Deleting pod "simpletest-rc-to-be-deleted-5cd5m" in namespace "gc-2380"
  Jun  5 13:58:48.778: INFO: Deleting pod "simpletest-rc-to-be-deleted-5mlwf" in namespace "gc-2380"
  Jun  5 13:58:48.793: INFO: Deleting pod "simpletest-rc-to-be-deleted-66fbw" in namespace "gc-2380"
  Jun  5 13:58:48.806: INFO: Deleting pod "simpletest-rc-to-be-deleted-6hkpt" in namespace "gc-2380"
  Jun  5 13:58:48.817: INFO: Deleting pod "simpletest-rc-to-be-deleted-6nm76" in namespace "gc-2380"
  Jun  5 13:58:48.834: INFO: Deleting pod "simpletest-rc-to-be-deleted-6qh56" in namespace "gc-2380"
  Jun  5 13:58:48.847: INFO: Deleting pod "simpletest-rc-to-be-deleted-6xgbq" in namespace "gc-2380"
  Jun  5 13:58:48.867: INFO: Deleting pod "simpletest-rc-to-be-deleted-82whq" in namespace "gc-2380"
  Jun  5 13:58:48.875: INFO: Deleting pod "simpletest-rc-to-be-deleted-8kl4f" in namespace "gc-2380"
  Jun  5 13:58:48.891: INFO: Deleting pod "simpletest-rc-to-be-deleted-8vww7" in namespace "gc-2380"
  Jun  5 13:58:48.911: INFO: Deleting pod "simpletest-rc-to-be-deleted-8x8nx" in namespace "gc-2380"
  Jun  5 13:58:48.928: INFO: Deleting pod "simpletest-rc-to-be-deleted-92t62" in namespace "gc-2380"
  Jun  5 13:58:48.946: INFO: Deleting pod "simpletest-rc-to-be-deleted-9j2tf" in namespace "gc-2380"
  Jun  5 13:58:48.974: INFO: Deleting pod "simpletest-rc-to-be-deleted-9jgbn" in namespace "gc-2380"
  Jun  5 13:58:48.982: INFO: Deleting pod "simpletest-rc-to-be-deleted-9wkh9" in namespace "gc-2380"
  Jun  5 13:58:49.000: INFO: Deleting pod "simpletest-rc-to-be-deleted-b2qwl" in namespace "gc-2380"
  Jun  5 13:58:49.023: INFO: Deleting pod "simpletest-rc-to-be-deleted-b7867" in namespace "gc-2380"
  Jun  5 13:58:49.036: INFO: Deleting pod "simpletest-rc-to-be-deleted-c8z5k" in namespace "gc-2380"
  Jun  5 13:58:49.048: INFO: Deleting pod "simpletest-rc-to-be-deleted-cblfl" in namespace "gc-2380"
  Jun  5 13:58:49.068: INFO: Deleting pod "simpletest-rc-to-be-deleted-cftbw" in namespace "gc-2380"
  Jun  5 13:58:49.088: INFO: Deleting pod "simpletest-rc-to-be-deleted-cq8h6" in namespace "gc-2380"
  Jun  5 13:58:49.105: INFO: Deleting pod "simpletest-rc-to-be-deleted-csr6j" in namespace "gc-2380"
  Jun  5 13:58:49.120: INFO: Deleting pod "simpletest-rc-to-be-deleted-cwjmj" in namespace "gc-2380"
  Jun  5 13:58:49.143: INFO: Deleting pod "simpletest-rc-to-be-deleted-d6rcm" in namespace "gc-2380"
  Jun  5 13:58:49.167: INFO: Deleting pod "simpletest-rc-to-be-deleted-fgcrp" in namespace "gc-2380"
  Jun  5 13:58:49.186: INFO: Deleting pod "simpletest-rc-to-be-deleted-frdv8" in namespace "gc-2380"
  Jun  5 13:58:49.198: INFO: Deleting pod "simpletest-rc-to-be-deleted-gdxgp" in namespace "gc-2380"
  Jun  5 13:58:49.213: INFO: Deleting pod "simpletest-rc-to-be-deleted-ggrrn" in namespace "gc-2380"
  Jun  5 13:58:49.229: INFO: Deleting pod "simpletest-rc-to-be-deleted-gn5sp" in namespace "gc-2380"
  Jun  5 13:58:49.243: INFO: Deleting pod "simpletest-rc-to-be-deleted-gxx9c" in namespace "gc-2380"
  Jun  5 13:58:49.254: INFO: Deleting pod "simpletest-rc-to-be-deleted-j47rb" in namespace "gc-2380"
  Jun  5 13:58:49.268: INFO: Deleting pod "simpletest-rc-to-be-deleted-jfn7w" in namespace "gc-2380"
  Jun  5 13:58:49.293: INFO: Deleting pod "simpletest-rc-to-be-deleted-jpk74" in namespace "gc-2380"
  Jun  5 13:58:49.306: INFO: Deleting pod "simpletest-rc-to-be-deleted-k27wp" in namespace "gc-2380"
  Jun  5 13:58:49.322: INFO: Deleting pod "simpletest-rc-to-be-deleted-kl4gz" in namespace "gc-2380"
  Jun  5 13:58:49.338: INFO: Deleting pod "simpletest-rc-to-be-deleted-kx6cr" in namespace "gc-2380"
  Jun  5 13:58:49.358: INFO: Deleting pod "simpletest-rc-to-be-deleted-lffpz" in namespace "gc-2380"
  Jun  5 13:58:49.370: INFO: Deleting pod "simpletest-rc-to-be-deleted-lgpj7" in namespace "gc-2380"
  Jun  5 13:58:49.381: INFO: Deleting pod "simpletest-rc-to-be-deleted-ljq8f" in namespace "gc-2380"
  Jun  5 13:58:49.398: INFO: Deleting pod "simpletest-rc-to-be-deleted-lmvss" in namespace "gc-2380"
  Jun  5 13:58:49.410: INFO: Deleting pod "simpletest-rc-to-be-deleted-lq892" in namespace "gc-2380"
  Jun  5 13:58:49.424: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-2380" for this suite. @ 06/05/24 13:58:49.431
• [17.275 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:889
  STEP: Creating a kubernetes client @ 06/05/24 13:58:49.439
  Jun  5 13:58:49.439: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename resourcequota @ 06/05/24 13:58:49.439
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:58:49.455
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:58:49.457
  STEP: Creating a ResourceQuota @ 06/05/24 13:58:49.461
  STEP: Getting a ResourceQuota @ 06/05/24 13:58:49.468
  STEP: Updating a ResourceQuota @ 06/05/24 13:58:49.472
  STEP: Verifying a ResourceQuota was modified @ 06/05/24 13:58:49.481
  STEP: Deleting a ResourceQuota @ 06/05/24 13:58:49.483
  STEP: Verifying the deleted ResourceQuota @ 06/05/24 13:58:49.494
  Jun  5 13:58:49.496: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8544" for this suite. @ 06/05/24 13:58:49.499
• [0.069 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:96
  STEP: Creating a kubernetes client @ 06/05/24 13:58:49.508
  Jun  5 13:58:49.508: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename pod-network-test @ 06/05/24 13:58:49.509
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:58:49.518
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:58:49.522
  STEP: Performing setup for networking test in namespace pod-network-test-271 @ 06/05/24 13:58:49.526
  STEP: creating a selector @ 06/05/24 13:58:49.526
  STEP: Creating the service pods in kubernetes @ 06/05/24 13:58:49.526
  Jun  5 13:58:49.526: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 06/05/24 13:59:11.624
  Jun  5 13:59:13.642: INFO: Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  Jun  5 13:59:13.642: INFO: Breadth first check of 10.244.0.142 on host 192.168.67.2...
  Jun  5 13:59:13.644: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.1.93:9080/dial?request=hostname&protocol=udp&host=10.244.0.142&port=8081&tries=1'] Namespace:pod-network-test-271 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun  5 13:59:13.644: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  Jun  5 13:59:13.645: INFO: ExecWithOptions: Clientset creation
  Jun  5 13:59:13.645: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-271/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.1.93%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.244.0.142%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Jun  5 13:59:13.716: INFO: Waiting for responses: map[]
  Jun  5 13:59:13.716: INFO: reached 10.244.0.142 after 0/1 tries
  Jun  5 13:59:13.716: INFO: Breadth first check of 10.244.1.92 on host 192.168.67.3...
  Jun  5 13:59:13.718: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.1.93:9080/dial?request=hostname&protocol=udp&host=10.244.1.92&port=8081&tries=1'] Namespace:pod-network-test-271 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun  5 13:59:13.718: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  Jun  5 13:59:13.718: INFO: ExecWithOptions: Clientset creation
  Jun  5 13:59:13.718: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-271/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.1.93%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.244.1.92%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Jun  5 13:59:13.788: INFO: Waiting for responses: map[]
  Jun  5 13:59:13.788: INFO: reached 10.244.1.92 after 0/1 tries
  Jun  5 13:59:13.788: INFO: Going to retry 0 out of 2 pods....
  Jun  5 13:59:13.788: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-271" for this suite. @ 06/05/24 13:59:13.791
• [24.287 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:194
  STEP: Creating a kubernetes client @ 06/05/24 13:59:13.795
  Jun  5 13:59:13.795: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename crd-publish-openapi @ 06/05/24 13:59:13.796
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:59:13.809
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:59:13.818
  Jun  5 13:59:13.827: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 06/05/24 13:59:14.973
  Jun  5 13:59:14.973: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=crd-publish-openapi-1312 --namespace=crd-publish-openapi-1312 create -f -'
  Jun  5 13:59:15.033: INFO: stderr: ""
  Jun  5 13:59:15.033: INFO: stdout: "e2e-test-crd-publish-openapi-1028-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  Jun  5 13:59:15.033: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=crd-publish-openapi-1312 --namespace=crd-publish-openapi-1312 delete e2e-test-crd-publish-openapi-1028-crds test-cr'
  Jun  5 13:59:15.080: INFO: stderr: ""
  Jun  5 13:59:15.080: INFO: stdout: "e2e-test-crd-publish-openapi-1028-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  Jun  5 13:59:15.080: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=crd-publish-openapi-1312 --namespace=crd-publish-openapi-1312 apply -f -'
  Jun  5 13:59:15.125: INFO: stderr: ""
  Jun  5 13:59:15.125: INFO: stdout: "e2e-test-crd-publish-openapi-1028-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  Jun  5 13:59:15.125: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=crd-publish-openapi-1312 --namespace=crd-publish-openapi-1312 delete e2e-test-crd-publish-openapi-1028-crds test-cr'
  Jun  5 13:59:15.168: INFO: stderr: ""
  Jun  5 13:59:15.168: INFO: stdout: "e2e-test-crd-publish-openapi-1028-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 06/05/24 13:59:15.168
  Jun  5 13:59:15.168: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=crd-publish-openapi-1312 explain e2e-test-crd-publish-openapi-1028-crds'
  Jun  5 13:59:15.206: INFO: stderr: ""
  Jun  5 13:59:15.206: INFO: stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-1028-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  Jun  5 13:59:16.344: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-1312" for this suite. @ 06/05/24 13:59:16.351
• [2.563 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:41
  STEP: Creating a kubernetes client @ 06/05/24 13:59:16.358
  Jun  5 13:59:16.358: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename containers @ 06/05/24 13:59:16.359
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:59:16.367
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:59:16.369
  Jun  5 13:59:18.392: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-9856" for this suite. @ 06/05/24 13:59:18.394
• [2.039 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIStorageCapacity should support CSIStorageCapacities API operations [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csistoragecapacity.go:50
  STEP: Creating a kubernetes client @ 06/05/24 13:59:18.397
  Jun  5 13:59:18.397: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename csistoragecapacity @ 06/05/24 13:59:18.398
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:59:18.403
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:59:18.405
  STEP: getting /apis @ 06/05/24 13:59:18.406
  STEP: getting /apis/storage.k8s.io @ 06/05/24 13:59:18.408
  STEP: getting /apis/storage.k8s.io/v1 @ 06/05/24 13:59:18.409
  STEP: creating @ 06/05/24 13:59:18.41
  STEP: watching @ 06/05/24 13:59:18.42
  Jun  5 13:59:18.420: INFO: starting watch
  STEP: getting @ 06/05/24 13:59:18.425
  STEP: listing in namespace @ 06/05/24 13:59:18.429
  STEP: listing across namespaces @ 06/05/24 13:59:18.432
  STEP: patching @ 06/05/24 13:59:18.433
  STEP: updating @ 06/05/24 13:59:18.438
  Jun  5 13:59:18.442: INFO: waiting for watch events with expected annotations in namespace
  Jun  5 13:59:18.442: INFO: waiting for watch events with expected annotations across namespace
  STEP: deleting @ 06/05/24 13:59:18.442
  STEP: deleting a collection @ 06/05/24 13:59:18.45
  Jun  5 13:59:18.459: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-8261" for this suite. @ 06/05/24 13:59:18.462
• [0.069 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:315
  STEP: Creating a kubernetes client @ 06/05/24 13:59:18.466
  Jun  5 13:59:18.466: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename webhook @ 06/05/24 13:59:18.468
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:59:18.479
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:59:18.482
  STEP: Setting up server cert @ 06/05/24 13:59:18.498
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/05/24 13:59:18.636
  STEP: Deploying the webhook pod @ 06/05/24 13:59:18.639
  STEP: Wait for the deployment to be ready @ 06/05/24 13:59:18.645
  Jun  5 13:59:18.649: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 06/05/24 13:59:20.659
  STEP: Verifying the service has paired with the endpoint @ 06/05/24 13:59:20.669
  Jun  5 13:59:21.670: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Jun  5 13:59:21.681: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-6712-crds.webhook.example.com via the AdmissionRegistration API @ 06/05/24 13:59:22.191
  STEP: Creating a custom resource while v1 is storage version @ 06/05/24 13:59:22.207
  STEP: Patching Custom Resource Definition to set v2 as storage @ 06/05/24 13:59:24.255
  STEP: Patching the custom resource while v2 is storage version @ 06/05/24 13:59:24.274
  Jun  5 13:59:24.850: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6749" for this suite. @ 06/05/24 13:59:24.854
  STEP: Destroying namespace "webhook-markers-8833" for this suite. @ 06/05/24 13:59:24.859
• [6.397 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:248
  STEP: Creating a kubernetes client @ 06/05/24 13:59:24.864
  Jun  5 13:59:24.864: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename container-runtime @ 06/05/24 13:59:24.865
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:59:24.877
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:59:24.88
  STEP: create the container @ 06/05/24 13:59:24.883
  W0605 13:59:24.888497      22 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 06/05/24 13:59:24.888
  STEP: get the container status @ 06/05/24 13:59:27.905
  STEP: the container should be terminated @ 06/05/24 13:59:27.908
  STEP: the termination message should be set @ 06/05/24 13:59:27.908
  Jun  5 13:59:27.908: INFO: Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 06/05/24 13:59:27.908
  Jun  5 13:59:27.924: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-7741" for this suite. @ 06/05/24 13:59:27.927
• [3.067 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:141
  STEP: Creating a kubernetes client @ 06/05/24 13:59:27.931
  Jun  5 13:59:27.931: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename secrets @ 06/05/24 13:59:27.932
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:59:27.944
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:59:27.948
  STEP: Creating projection with secret that has name secret-emptykey-test-19be23f4-dfe9-4675-9c9f-639dba717e2f @ 06/05/24 13:59:27.95
  Jun  5 13:59:27.952: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4121" for this suite. @ 06/05/24 13:59:27.954
• [0.027 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:1031
  STEP: Creating a kubernetes client @ 06/05/24 13:59:27.958
  Jun  5 13:59:27.958: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename statefulset @ 06/05/24 13:59:27.959
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:59:27.971
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:59:27.974
  STEP: Creating service test in namespace statefulset-5441 @ 06/05/24 13:59:27.976
  STEP: Creating statefulset ss in namespace statefulset-5441 @ 06/05/24 13:59:27.986
  Jun  5 13:59:27.994: INFO: Found 0 stateful pods, waiting for 1
  Jun  5 13:59:37.995: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 06/05/24 13:59:38
  STEP: Getting /status @ 06/05/24 13:59:38.012
  Jun  5 13:59:38.014: INFO: StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 06/05/24 13:59:38.014
  Jun  5 13:59:38.019: INFO: updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 06/05/24 13:59:38.019
  Jun  5 13:59:38.021: INFO: Observed &StatefulSet event: ADDED
  Jun  5 13:59:38.021: INFO: Found Statefulset ss in namespace statefulset-5441 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Jun  5 13:59:38.021: INFO: Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 06/05/24 13:59:38.021
  Jun  5 13:59:38.021: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Jun  5 13:59:38.029: INFO: Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 06/05/24 13:59:38.029
  Jun  5 13:59:38.031: INFO: Observed &StatefulSet event: ADDED
  Jun  5 13:59:38.031: INFO: Observed Statefulset ss in namespace statefulset-5441 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Jun  5 13:59:38.031: INFO: Observed &StatefulSet event: MODIFIED
  Jun  5 13:59:38.031: INFO: Deleting all statefulset in ns statefulset-5441
  Jun  5 13:59:38.034: INFO: Scaling statefulset ss to 0
  Jun  5 13:59:48.046: INFO: Waiting for statefulset status.replicas updated to 0
  Jun  5 13:59:48.049: INFO: Deleting statefulset ss
  Jun  5 13:59:48.065: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-5441" for this suite. @ 06/05/24 13:59:48.068
• [20.115 seconds]
------------------------------
SSS
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 06/05/24 13:59:48.074
  Jun  5 13:59:48.074: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename pods @ 06/05/24 13:59:48.075
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:59:48.088
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:59:48.091
  STEP: creating pod @ 06/05/24 13:59:48.095
  Jun  5 13:59:50.119: INFO: Pod pod-hostip-8d8bd15f-ca24-4f4d-8107-8feb0052fa66 has hostIP: 192.168.67.3
  Jun  5 13:59:50.119: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6811" for this suite. @ 06/05/24 13:59:50.122
• [2.052 seconds]
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:95
  STEP: Creating a kubernetes client @ 06/05/24 13:59:50.126
  Jun  5 13:59:50.126: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename var-expansion @ 06/05/24 13:59:50.128
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:59:50.138
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:59:50.141
  STEP: Creating a pod to test substitution in container's args @ 06/05/24 13:59:50.144
  STEP: Saw pod success @ 06/05/24 13:59:54.163
  Jun  5 13:59:54.165: INFO: Trying to get logs from node k8sconformance-m02 pod var-expansion-9e26a051-0ec2-43b1-92ce-0bf8f41b6981 container dapi-container: <nil>
  STEP: delete the pod @ 06/05/24 13:59:54.171
  Jun  5 13:59:54.185: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-9953" for this suite. @ 06/05/24 13:59:54.186
• [4.065 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:216
  STEP: Creating a kubernetes client @ 06/05/24 13:59:54.191
  Jun  5 13:59:54.191: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename container-runtime @ 06/05/24 13:59:54.192
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:59:54.201
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:59:54.203
  STEP: create the container @ 06/05/24 13:59:54.205
  W0605 13:59:54.210287      22 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Failed @ 06/05/24 13:59:54.21
  STEP: get the container status @ 06/05/24 13:59:56.222
  STEP: the container should be terminated @ 06/05/24 13:59:56.224
  STEP: the termination message should be set @ 06/05/24 13:59:56.225
  Jun  5 13:59:56.225: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 06/05/24 13:59:56.225
  Jun  5 13:59:56.236: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-6265" for this suite. @ 06/05/24 13:59:56.239
• [2.052 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 06/05/24 13:59:56.243
  Jun  5 13:59:56.243: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename deployment @ 06/05/24 13:59:56.244
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 13:59:56.254
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 13:59:56.257
  STEP: creating a Deployment @ 06/05/24 13:59:56.262
  STEP: waiting for Deployment to be created @ 06/05/24 13:59:56.267
  STEP: waiting for all Replicas to be Ready @ 06/05/24 13:59:56.269
  Jun  5 13:59:56.270: INFO: observed Deployment test-deployment in namespace deployment-407 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Jun  5 13:59:56.270: INFO: observed Deployment test-deployment in namespace deployment-407 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Jun  5 13:59:56.277: INFO: observed Deployment test-deployment in namespace deployment-407 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Jun  5 13:59:56.277: INFO: observed Deployment test-deployment in namespace deployment-407 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Jun  5 13:59:56.288: INFO: observed Deployment test-deployment in namespace deployment-407 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Jun  5 13:59:56.288: INFO: observed Deployment test-deployment in namespace deployment-407 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Jun  5 13:59:56.307: INFO: observed Deployment test-deployment in namespace deployment-407 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Jun  5 13:59:56.307: INFO: observed Deployment test-deployment in namespace deployment-407 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Jun  5 13:59:56.912: INFO: observed Deployment test-deployment in namespace deployment-407 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  Jun  5 13:59:56.912: INFO: observed Deployment test-deployment in namespace deployment-407 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  Jun  5 13:59:57.615: INFO: observed Deployment test-deployment in namespace deployment-407 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 06/05/24 13:59:57.615
  Jun  5 13:59:57.625: INFO: observed event type ADDED
  STEP: waiting for Replicas to scale @ 06/05/24 13:59:57.625
  Jun  5 13:59:57.626: INFO: observed Deployment test-deployment in namespace deployment-407 with ReadyReplicas 0
  Jun  5 13:59:57.626: INFO: observed Deployment test-deployment in namespace deployment-407 with ReadyReplicas 0
  Jun  5 13:59:57.626: INFO: observed Deployment test-deployment in namespace deployment-407 with ReadyReplicas 0
  Jun  5 13:59:57.626: INFO: observed Deployment test-deployment in namespace deployment-407 with ReadyReplicas 0
  Jun  5 13:59:57.627: INFO: observed Deployment test-deployment in namespace deployment-407 with ReadyReplicas 0
  Jun  5 13:59:57.627: INFO: observed Deployment test-deployment in namespace deployment-407 with ReadyReplicas 0
  Jun  5 13:59:57.627: INFO: observed Deployment test-deployment in namespace deployment-407 with ReadyReplicas 0
  Jun  5 13:59:57.627: INFO: observed Deployment test-deployment in namespace deployment-407 with ReadyReplicas 0
  Jun  5 13:59:57.627: INFO: observed Deployment test-deployment in namespace deployment-407 with ReadyReplicas 1
  Jun  5 13:59:57.627: INFO: observed Deployment test-deployment in namespace deployment-407 with ReadyReplicas 1
  Jun  5 13:59:57.627: INFO: observed Deployment test-deployment in namespace deployment-407 with ReadyReplicas 2
  Jun  5 13:59:57.627: INFO: observed Deployment test-deployment in namespace deployment-407 with ReadyReplicas 2
  Jun  5 13:59:57.627: INFO: observed Deployment test-deployment in namespace deployment-407 with ReadyReplicas 2
  Jun  5 13:59:57.627: INFO: observed Deployment test-deployment in namespace deployment-407 with ReadyReplicas 2
  Jun  5 13:59:57.635: INFO: observed Deployment test-deployment in namespace deployment-407 with ReadyReplicas 2
  Jun  5 13:59:57.635: INFO: observed Deployment test-deployment in namespace deployment-407 with ReadyReplicas 2
  Jun  5 13:59:57.653: INFO: observed Deployment test-deployment in namespace deployment-407 with ReadyReplicas 2
  Jun  5 13:59:57.653: INFO: observed Deployment test-deployment in namespace deployment-407 with ReadyReplicas 2
  Jun  5 13:59:57.660: INFO: observed Deployment test-deployment in namespace deployment-407 with ReadyReplicas 1
  Jun  5 13:59:57.660: INFO: observed Deployment test-deployment in namespace deployment-407 with ReadyReplicas 1
  Jun  5 13:59:57.671: INFO: observed Deployment test-deployment in namespace deployment-407 with ReadyReplicas 1
  Jun  5 13:59:57.671: INFO: observed Deployment test-deployment in namespace deployment-407 with ReadyReplicas 1
  Jun  5 13:59:58.976: INFO: observed Deployment test-deployment in namespace deployment-407 with ReadyReplicas 2
  Jun  5 13:59:58.976: INFO: observed Deployment test-deployment in namespace deployment-407 with ReadyReplicas 2
  Jun  5 13:59:58.995: INFO: observed Deployment test-deployment in namespace deployment-407 with ReadyReplicas 1
  STEP: listing Deployments @ 06/05/24 13:59:58.995
  Jun  5 13:59:58.998: INFO: Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 06/05/24 13:59:58.999
  Jun  5 13:59:59.007: INFO: observed Deployment test-deployment in namespace deployment-407 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 06/05/24 13:59:59.007
  Jun  5 13:59:59.010: INFO: observed Deployment test-deployment in namespace deployment-407 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Jun  5 13:59:59.014: INFO: observed Deployment test-deployment in namespace deployment-407 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Jun  5 13:59:59.027: INFO: observed Deployment test-deployment in namespace deployment-407 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Jun  5 13:59:59.039: INFO: observed Deployment test-deployment in namespace deployment-407 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Jun  5 13:59:59.050: INFO: observed Deployment test-deployment in namespace deployment-407 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Jun  5 14:00:00.016: INFO: observed Deployment test-deployment in namespace deployment-407 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Jun  5 14:00:00.028: INFO: observed Deployment test-deployment in namespace deployment-407 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Jun  5 14:00:00.043: INFO: observed Deployment test-deployment in namespace deployment-407 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Jun  5 14:00:00.051: INFO: observed Deployment test-deployment in namespace deployment-407 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Jun  5 14:00:00.664: INFO: observed Deployment test-deployment in namespace deployment-407 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 06/05/24 14:00:00.679
  STEP: fetching the DeploymentStatus @ 06/05/24 14:00:00.685
  Jun  5 14:00:00.690: INFO: observed Deployment test-deployment in namespace deployment-407 with ReadyReplicas 1
  Jun  5 14:00:00.690: INFO: observed Deployment test-deployment in namespace deployment-407 with ReadyReplicas 1
  Jun  5 14:00:00.690: INFO: observed Deployment test-deployment in namespace deployment-407 with ReadyReplicas 1
  Jun  5 14:00:00.690: INFO: observed Deployment test-deployment in namespace deployment-407 with ReadyReplicas 1
  Jun  5 14:00:00.690: INFO: observed Deployment test-deployment in namespace deployment-407 with ReadyReplicas 1
  Jun  5 14:00:00.690: INFO: observed Deployment test-deployment in namespace deployment-407 with ReadyReplicas 2
  Jun  5 14:00:00.691: INFO: observed Deployment test-deployment in namespace deployment-407 with ReadyReplicas 2
  Jun  5 14:00:00.691: INFO: observed Deployment test-deployment in namespace deployment-407 with ReadyReplicas 2
  Jun  5 14:00:00.691: INFO: observed Deployment test-deployment in namespace deployment-407 with ReadyReplicas 2
  Jun  5 14:00:00.691: INFO: observed Deployment test-deployment in namespace deployment-407 with ReadyReplicas 3
  STEP: deleting the Deployment @ 06/05/24 14:00:00.691
  Jun  5 14:00:00.696: INFO: observed event type MODIFIED
  Jun  5 14:00:00.697: INFO: observed event type MODIFIED
  Jun  5 14:00:00.697: INFO: observed event type MODIFIED
  Jun  5 14:00:00.697: INFO: observed event type MODIFIED
  Jun  5 14:00:00.697: INFO: observed event type MODIFIED
  Jun  5 14:00:00.697: INFO: observed event type MODIFIED
  Jun  5 14:00:00.697: INFO: observed event type MODIFIED
  Jun  5 14:00:00.698: INFO: observed event type MODIFIED
  Jun  5 14:00:00.698: INFO: observed event type MODIFIED
  Jun  5 14:00:00.698: INFO: observed event type MODIFIED
  Jun  5 14:00:00.698: INFO: observed event type MODIFIED
  Jun  5 14:00:00.698: INFO: observed event type MODIFIED
  Jun  5 14:00:00.698: INFO: observed event type MODIFIED
  Jun  5 14:00:00.704: INFO: Log out all the ReplicaSets if there is no deployment created
  Jun  5 14:00:00.708: INFO: ReplicaSet "test-deployment-64fd565c98":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-64fd565c98",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-407",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "08cf2925-aebc-40c9-a297-5f313fa6b368",
      ResourceVersion: (string) (len=5) "19240",
      Generation: (int64) 4,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853192797,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "16e03bd2-f3d0-4942-a15d-a94e3e90718f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853192800,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 31 36 65 30  33 62 64 32 2d 66 33 64  |":\"16e03bd2-f3d|
              00000130  30 2d 34 39 34 32 2d 61  31 35 64 2d 61 39 34 65  |0-4942-a15d-a94e|
              00000140  33 65 39 30 37 31 38 66  5c 22 7d 22 3a 7b 7d 7d  |3e90718f\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853192800,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=25) "registry.k8s.io/pause:3.9",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(2),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 4,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  Jun  5 14:00:00.718: INFO: pod: "test-deployment-64fd565c98-8fnx4":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-64fd565c98-8fnx4",
      GenerateName: (string) (len=27) "test-deployment-64fd565c98-",
      Namespace: (string) (len=14) "deployment-407",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ca730a3d-c735-48c0-8ecb-6c921cabfd5a",
      ResourceVersion: (string) (len=5) "19232",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853192799,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853192802,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-64fd565c98",
          UID: (types.UID) (len=36) "08cf2925-aebc-40c9-a297-5f313fa6b368",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853192799,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  30 38 63 66 32 39 32 35  |uid\":\"08cf2925|
              000000a0  2d 61 65 62 63 2d 34 30  63 39 2d 61 32 39 37 2d  |-aebc-40c9-a297-|
              000000b0  35 66 33 31 33 66 61 36  62 33 36 38 5c 22 7d 22  |5f313fa6b368\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853192800,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 30 2e 31  34 34 5c 22 7d 22 3a 7b  |.244.0.144\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5hxbj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5hxbj",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "k8sconformance",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853192800,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853192799,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853192800,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853192800,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853192799,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.67.2",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.67.2"
        }
      },
      PodIP: (string) (len=12) "10.244.0.144",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.0.144"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853192799,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63853192799,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          ImageID: (string) (len=111) "docker-pullable://registry.k8s.io/pause@sha256:7031c1b283388d2c2e09b57badb803c05ebed362dc88d84b480cc47f72a21097",
          ContainerID: (string) (len=73) "docker://62af68d8421d70b428e9267243071b214dabbb6bb5f0a5e2a3a5265119b3b270",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Jun  5 14:00:00.721: INFO: pod: "test-deployment-64fd565c98-rd4qq":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-64fd565c98-rd4qq",
      GenerateName: (string) (len=27) "test-deployment-64fd565c98-",
      Namespace: (string) (len=14) "deployment-407",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2607757e-130f-4a56-b90c-348713c0c587",
      ResourceVersion: (string) (len=5) "19236",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853192797,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853192802,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-64fd565c98",
          UID: (types.UID) (len=36) "08cf2925-aebc-40c9-a297-5f313fa6b368",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853192797,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  30 38 63 66 32 39 32 35  |uid\":\"08cf2925|
              000000a0  2d 61 65 62 63 2d 34 30  63 39 2d 61 32 39 37 2d  |-aebc-40c9-a297-|
              000000b0  35 66 33 31 33 66 61 36  62 33 36 38 5c 22 7d 22  |5f313fa6b368\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853192798,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 31  30 32 5c 22 7d 22 3a 7b  |.244.1.102\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4rjpd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4rjpd",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "k8sconformance-m02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853192798,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853192797,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853192798,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853192798,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853192797,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.67.3",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.67.3"
        }
      },
      PodIP: (string) (len=12) "10.244.1.102",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.1.102"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853192797,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63853192798,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          ImageID: (string) (len=111) "docker-pullable://registry.k8s.io/pause@sha256:7031c1b283388d2c2e09b57badb803c05ebed362dc88d84b480cc47f72a21097",
          ContainerID: (string) (len=73) "docker://83d5b6b46415b9cf65f4120f5153d2b80882af22d513f46a222ed6b40cbd01b5",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Jun  5 14:00:00.724: INFO: ReplicaSet "test-deployment-79ff746c4":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=25) "test-deployment-79ff746c4",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-407",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "36462855-932c-41e1-8ce2-12830a7ee4af",
      ResourceVersion: (string) (len=5) "19231",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853192799,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "3"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "16e03bd2-f3d0-4942-a15d-a94e3e90718f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853192800,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 31 36 65 30  33 62 64 32 2d 66 33 64  |":\"16e03bd2-f3d|
              00000130  30 2d 34 39 34 32 2d 61  31 35 64 2d 61 39 34 65  |0-4942-a15d-a94e|
              00000140  33 65 39 30 37 31 38 66  5c 22 7d 22 3a 7b 7d 7d  |3e90718f\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853192800,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=22) "test-deployment-static": (string) (len=4) "true",
          (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 2,
      AvailableReplicas: (int32) 2,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  Jun  5 14:00:00.729: INFO: pod: "test-deployment-79ff746c4-4nbqv":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-79ff746c4-4nbqv",
      GenerateName: (string) (len=26) "test-deployment-79ff746c4-",
      Namespace: (string) (len=14) "deployment-407",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ba83d102-1915-4ca0-9fa5-3eb79b129a72",
      ResourceVersion: (string) (len=5) "19248",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853192800,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853192801,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(1),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=25) "test-deployment-79ff746c4",
          UID: (types.UID) (len=36) "36462855-932c-41e1-8ce2-12830a7ee4af",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853192800,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  33 36 34 36 32 38 35 35  |uid\":\"36462855|
              000000a0  2d 39 33 32 63 2d 34 31  65 31 2d 38 63 65 32 2d  |-932c-41e1-8ce2-|
              000000b0  31 32 38 33 30 61 37 65  65 34 61 66 5c 22 7d 22  |12830a7ee4af\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853192800,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 30 2e 31  34 35 5c 22 7d 22 3a 7b  |.244.0.145\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-cszlr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-cszlr",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "k8sconformance",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853192800,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853192800,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853192800,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853192800,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853192800,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.67.2",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.67.2"
        }
      },
      PodIP: (string) (len=12) "10.244.0.145",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.0.145"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853192800,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63853192800,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=127) "docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=73) "docker://ef46dd978d9a7119c7817e0689455bd31f1d5f180a809a41c22a58c3a87362f6",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Jun  5 14:00:00.731: INFO: pod: "test-deployment-79ff746c4-ftxcq":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-79ff746c4-ftxcq",
      GenerateName: (string) (len=26) "test-deployment-79ff746c4-",
      Namespace: (string) (len=14) "deployment-407",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e243f522-0255-4f2d-9d5f-d622c746f10b",
      ResourceVersion: (string) (len=5) "19249",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853192799,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853192801,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(1),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=25) "test-deployment-79ff746c4",
          UID: (types.UID) (len=36) "36462855-932c-41e1-8ce2-12830a7ee4af",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853192799,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  33 36 34 36 32 38 35 35  |uid\":\"36462855|
              000000a0  2d 39 33 32 63 2d 34 31  65 31 2d 38 63 65 32 2d  |-932c-41e1-8ce2-|
              000000b0  31 32 38 33 30 61 37 65  65 34 61 66 5c 22 7d 22  |12830a7ee4af\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853192799,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 31  30 33 5c 22 7d 22 3a 7b  |.244.1.103\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8npbv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8npbv",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "k8sconformance-m02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853192799,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853192799,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853192799,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853192799,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853192799,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.67.3",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.67.3"
        }
      },
      PodIP: (string) (len=12) "10.244.1.103",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.1.103"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853192799,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63853192799,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=127) "docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=73) "docker://3c55def54328755a258f8397851a340defd259c69890675bd0d8faa489e5abfa",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Jun  5 14:00:00.733: INFO: ReplicaSet "test-deployment-7fcc79b8c7":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-7fcc79b8c7",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-407",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0b7381b2-03be-4263-938f-9a9d87a4b032",
      ResourceVersion: (string) (len=5) "19156",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853192796,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "7fcc79b8c7",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "16e03bd2-f3d0-4942-a15d-a94e3e90718f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853192798,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 31 36 65 30  33 62 64 32 2d 66 33 64  |":\"16e03bd2-f3d|
              00000130  30 2d 34 39 34 32 2d 61  31 35 64 2d 61 39 34 65  |0-4942-a15d-a94e|
              00000140  33 65 39 30 37 31 38 66  5c 22 7d 22 3a 7b 7d 7d  |3e90718f\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853192798,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "7fcc79b8c7",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "7fcc79b8c7",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  Jun  5 14:00:00.735: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-407" for this suite. @ 06/05/24 14:00:00.737
• [4.498 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:161
  STEP: Creating a kubernetes client @ 06/05/24 14:00:00.741
  Jun  5 14:00:00.741: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename cronjob @ 06/05/24 14:00:00.742
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:00:00.75
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:00:00.752
  STEP: Creating a ReplaceConcurrent cronjob @ 06/05/24 14:00:00.753
  STEP: Ensuring a job is scheduled @ 06/05/24 14:00:00.758
  STEP: Ensuring exactly one is scheduled @ 06/05/24 14:01:00.764
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 06/05/24 14:01:00.766
  STEP: Ensuring the job is replaced with a new one @ 06/05/24 14:01:00.769
  STEP: Removing cronjob @ 06/05/24 14:02:00.775
  Jun  5 14:02:00.779: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-6147" for this suite. @ 06/05/24 14:02:00.781
• [120.044 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 06/05/24 14:02:00.786
  Jun  5 14:02:00.786: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename watch @ 06/05/24 14:02:00.787
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:02:00.798
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:02:00.801
  STEP: creating a watch on configmaps with label A @ 06/05/24 14:02:00.803
  STEP: creating a watch on configmaps with label B @ 06/05/24 14:02:00.804
  STEP: creating a watch on configmaps with label A or B @ 06/05/24 14:02:00.804
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 06/05/24 14:02:00.805
  Jun  5 14:02:00.808: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7852  98352825-a2c4-42fd-b834-aad21f2cf88c 19475 0 2024-06-05 14:02:00 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-06-05 14:02:00 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun  5 14:02:00.808: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7852  98352825-a2c4-42fd-b834-aad21f2cf88c 19475 0 2024-06-05 14:02:00 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-06-05 14:02:00 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 06/05/24 14:02:00.808
  Jun  5 14:02:00.813: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7852  98352825-a2c4-42fd-b834-aad21f2cf88c 19476 0 2024-06-05 14:02:00 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-06-05 14:02:00 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun  5 14:02:00.813: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7852  98352825-a2c4-42fd-b834-aad21f2cf88c 19476 0 2024-06-05 14:02:00 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-06-05 14:02:00 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 06/05/24 14:02:00.813
  Jun  5 14:02:00.817: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7852  98352825-a2c4-42fd-b834-aad21f2cf88c 19477 0 2024-06-05 14:02:00 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-06-05 14:02:00 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun  5 14:02:00.817: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7852  98352825-a2c4-42fd-b834-aad21f2cf88c 19477 0 2024-06-05 14:02:00 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-06-05 14:02:00 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 06/05/24 14:02:00.817
  Jun  5 14:02:00.820: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7852  98352825-a2c4-42fd-b834-aad21f2cf88c 19478 0 2024-06-05 14:02:00 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-06-05 14:02:00 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun  5 14:02:00.820: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7852  98352825-a2c4-42fd-b834-aad21f2cf88c 19478 0 2024-06-05 14:02:00 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-06-05 14:02:00 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 06/05/24 14:02:00.82
  Jun  5 14:02:00.823: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-7852  8d0fc957-5de8-4774-a573-61ec35792297 19479 0 2024-06-05 14:02:00 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-06-05 14:02:00 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun  5 14:02:00.823: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-7852  8d0fc957-5de8-4774-a573-61ec35792297 19479 0 2024-06-05 14:02:00 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-06-05 14:02:00 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 06/05/24 14:02:10.827
  Jun  5 14:02:10.837: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-7852  8d0fc957-5de8-4774-a573-61ec35792297 19507 0 2024-06-05 14:02:00 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-06-05 14:02:00 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun  5 14:02:10.837: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-7852  8d0fc957-5de8-4774-a573-61ec35792297 19507 0 2024-06-05 14:02:00 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-06-05 14:02:00 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun  5 14:02:20.841: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-7852" for this suite. @ 06/05/24 14:02:20.848
• [20.068 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:199
  STEP: Creating a kubernetes client @ 06/05/24 14:02:20.855
  Jun  5 14:02:20.855: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename webhook @ 06/05/24 14:02:20.856
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:02:20.87
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:02:20.874
  STEP: Setting up server cert @ 06/05/24 14:02:20.892
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/05/24 14:02:21.064
  STEP: Deploying the webhook pod @ 06/05/24 14:02:21.068
  STEP: Wait for the deployment to be ready @ 06/05/24 14:02:21.075
  Jun  5 14:02:21.080: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 06/05/24 14:02:23.091
  STEP: Verifying the service has paired with the endpoint @ 06/05/24 14:02:23.102
  Jun  5 14:02:24.103: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 06/05/24 14:02:24.112
  STEP: create a pod that should be denied by the webhook @ 06/05/24 14:02:24.129
  STEP: create a pod that causes the webhook to hang @ 06/05/24 14:02:24.138
  STEP: create a configmap that should be denied by the webhook @ 06/05/24 14:02:34.142
  STEP: create a configmap that should be admitted by the webhook @ 06/05/24 14:02:34.154
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 06/05/24 14:02:34.163
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 06/05/24 14:02:34.169
  STEP: create a namespace that bypass the webhook @ 06/05/24 14:02:34.173
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 06/05/24 14:02:34.182
  Jun  5 14:02:34.217: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9489" for this suite. @ 06/05/24 14:02:34.223
  STEP: Destroying namespace "webhook-markers-2945" for this suite. @ 06/05/24 14:02:34.229
  STEP: Destroying namespace "exempted-namespace-4472" for this suite. @ 06/05/24 14:02:34.233
• [13.384 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 06/05/24 14:02:34.239
  Jun  5 14:02:34.239: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename deployment @ 06/05/24 14:02:34.24
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:02:34.25
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:02:34.253
  Jun  5 14:02:34.255: INFO: Creating deployment "test-recreate-deployment"
  Jun  5 14:02:34.259: INFO: Waiting deployment "test-recreate-deployment" to be updated to revision 1
  Jun  5 14:02:34.263: INFO: deployment "test-recreate-deployment" doesn't have the required revision set
  Jun  5 14:02:36.272: INFO: Waiting deployment "test-recreate-deployment" to complete
  Jun  5 14:02:36.274: INFO: Triggering a new rollout for deployment "test-recreate-deployment"
  Jun  5 14:02:36.286: INFO: Updating deployment test-recreate-deployment
  Jun  5 14:02:36.286: INFO: Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  Jun  5 14:02:36.354: INFO: Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2671",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fb7e07ea-62b3-4781-ad9d-a1156879b650",
      ResourceVersion: (string) (len=5) "19641",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853192954,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853192956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853192956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853192956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853192956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853192956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853192954,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=63) "ReplicaSet \"test-recreate-deployment-76fb77d45\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Jun  5 14:02:36.357: INFO: New ReplicaSet "test-recreate-deployment-76fb77d45" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-76fb77d45",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2671",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "30d9acc0-c800-4c4d-a104-32ce7ce85a12",
      ResourceVersion: (string) (len=5) "19638",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853192956,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "fb7e07ea-62b3-4781-ad9d-a1156879b650",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853192956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 66 62 37 65 30 37  65 61 2d 36 32 62 33 2d  |\"fb7e07ea-62b3-|
              00000120  34 37 38 31 2d 61 64 39  64 2d 61 31 31 35 36 38  |4781-ad9d-a11568|
              00000130  37 39 62 36 35 30 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |79b650\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853192956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jun  5 14:02:36.358: INFO: All old ReplicaSets of Deployment "test-recreate-deployment":
  Jun  5 14:02:36.358: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-5cf87b5b86",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2671",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3222b1b9-d7c3-4392-81c6-81b6161c7669",
      ResourceVersion: (string) (len=5) "19629",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853192954,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5cf87b5b86"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "fb7e07ea-62b3-4781-ad9d-a1156879b650",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853192956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 66 62 37 65 30 37  65 61 2d 36 32 62 33 2d  |\"fb7e07ea-62b3-|
              00000120  34 37 38 31 2d 61 64 39  64 2d 61 31 31 35 36 38  |4781-ad9d-a11568|
              00000130  37 39 62 36 35 30 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |79b650\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853192956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5cf87b5b86"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5cf87b5b86"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jun  5 14:02:36.361: INFO: Pod "test-recreate-deployment-76fb77d45-brwv7" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-recreate-deployment-76fb77d45-brwv7",
      GenerateName: (string) (len=35) "test-recreate-deployment-76fb77d45-",
      Namespace: (string) (len=15) "deployment-2671",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e3a6d724-e934-4371-9831-765f5259ecce",
      ResourceVersion: (string) (len=5) "19640",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853192956,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-recreate-deployment-76fb77d45",
          UID: (types.UID) (len=36) "30d9acc0-c800-4c4d-a104-32ce7ce85a12",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853192956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 30  64 39 61 63 63 30 2d 63  |d\":\"30d9acc0-c|
              00000090  38 30 30 2d 34 63 34 64  2d 61 31 30 34 2d 33 32  |800-4c4d-a104-32|
              000000a0  63 65 37 63 65 38 35 61  31 32 5c 22 7d 22 3a 7b  |ce7ce85a12\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853192956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4r6zb",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4r6zb",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "k8sconformance-m02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853192956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853192956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853192956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853192956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853192956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.67.3",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.67.3"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853192956,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun  5 14:02:36.363: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-2671" for this suite. @ 06/05/24 14:02:36.366
• [2.131 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:751
  STEP: Creating a kubernetes client @ 06/05/24 14:02:36.37
  Jun  5 14:02:36.370: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename statefulset @ 06/05/24 14:02:36.37
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:02:36.378
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:02:36.379
  STEP: Creating service test in namespace statefulset-3927 @ 06/05/24 14:02:36.381
  STEP: Creating stateful set ss in namespace statefulset-3927 @ 06/05/24 14:02:36.384
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-3927 @ 06/05/24 14:02:36.389
  Jun  5 14:02:36.390: INFO: Found 0 stateful pods, waiting for 1
  Jun  5 14:02:46.394: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 06/05/24 14:02:46.394
  Jun  5 14:02:46.397: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=statefulset-3927 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jun  5 14:02:46.486: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jun  5 14:02:46.486: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jun  5 14:02:46.486: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jun  5 14:02:46.490: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  Jun  5 14:02:56.491: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Jun  5 14:02:56.491: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Jun  5 14:02:56.504: INFO: POD   NODE                PHASE    GRACE  CONDITIONS
  Jun  5 14:02:56.504: INFO: ss-0  k8sconformance-m02  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-06-05 14:02:37 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-06-05 14:02:36 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-06-05 14:02:46 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-06-05 14:02:46 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-06-05 14:02:36 +0000 UTC  }]
  Jun  5 14:02:56.504: INFO: 
  Jun  5 14:02:56.504: INFO: StatefulSet ss has not reached scale 3, at 1
  Jun  5 14:02:57.507: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.996135224s
  Jun  5 14:02:58.513: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.992843336s
  Jun  5 14:02:59.519: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.987972771s
  Jun  5 14:03:00.526: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.981449567s
  Jun  5 14:03:01.532: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.975005643s
  Jun  5 14:03:02.539: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.967862082s
  Jun  5 14:03:03.544: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.960946908s
  Jun  5 14:03:04.551: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.956707725s
  Jun  5 14:03:05.557: INFO: Verifying statefulset ss doesn't scale past 3 for another 949.9115ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-3927 @ 06/05/24 14:03:06.557
  Jun  5 14:03:06.565: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=statefulset-3927 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jun  5 14:03:06.664: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Jun  5 14:03:06.664: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jun  5 14:03:06.664: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Jun  5 14:03:06.664: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=statefulset-3927 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jun  5 14:03:06.775: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  Jun  5 14:03:06.775: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jun  5 14:03:06.775: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Jun  5 14:03:06.775: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=statefulset-3927 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jun  5 14:03:06.877: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  Jun  5 14:03:06.877: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jun  5 14:03:06.877: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Jun  5 14:03:06.881: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Jun  5 14:03:06.881: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  Jun  5 14:03:06.881: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 06/05/24 14:03:06.881
  Jun  5 14:03:06.884: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=statefulset-3927 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jun  5 14:03:06.972: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jun  5 14:03:06.972: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jun  5 14:03:06.972: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jun  5 14:03:06.972: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=statefulset-3927 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jun  5 14:03:07.077: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jun  5 14:03:07.077: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jun  5 14:03:07.077: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jun  5 14:03:07.077: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=statefulset-3927 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jun  5 14:03:07.182: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jun  5 14:03:07.182: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jun  5 14:03:07.182: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jun  5 14:03:07.182: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Jun  5 14:03:07.184: INFO: Waiting for statefulset status.readyReplicas to become 0, currently 3
  Jun  5 14:03:17.192: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Jun  5 14:03:17.192: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  Jun  5 14:03:17.192: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  Jun  5 14:03:17.206: INFO: POD   NODE                PHASE    GRACE  CONDITIONS
  Jun  5 14:03:17.206: INFO: ss-0  k8sconformance-m02  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-06-05 14:02:37 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-06-05 14:02:36 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-06-05 14:03:07 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-06-05 14:03:07 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-06-05 14:02:36 +0000 UTC  }]
  Jun  5 14:03:17.206: INFO: ss-1  k8sconformance      Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-06-05 14:02:57 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-06-05 14:02:56 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-06-05 14:03:07 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-06-05 14:03:07 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-06-05 14:02:56 +0000 UTC  }]
  Jun  5 14:03:17.206: INFO: ss-2  k8sconformance-m02  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-06-05 14:02:57 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-06-05 14:02:56 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-06-05 14:03:07 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-06-05 14:03:07 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-06-05 14:02:56 +0000 UTC  }]
  Jun  5 14:03:17.206: INFO: 
  Jun  5 14:03:17.206: INFO: StatefulSet ss has not reached scale 0, at 3
  Jun  5 14:03:18.211: INFO: Verifying statefulset ss doesn't scale past 0 for another 8.996012724s
  Jun  5 14:03:19.216: INFO: Verifying statefulset ss doesn't scale past 0 for another 7.991835913s
  Jun  5 14:03:20.219: INFO: Verifying statefulset ss doesn't scale past 0 for another 6.986515444s
  Jun  5 14:03:21.225: INFO: Verifying statefulset ss doesn't scale past 0 for another 5.982867972s
  Jun  5 14:03:22.232: INFO: Verifying statefulset ss doesn't scale past 0 for another 4.97624705s
  Jun  5 14:03:23.238: INFO: Verifying statefulset ss doesn't scale past 0 for another 3.969367761s
  Jun  5 14:03:24.244: INFO: Verifying statefulset ss doesn't scale past 0 for another 2.963801519s
  Jun  5 14:03:25.246: INFO: Verifying statefulset ss doesn't scale past 0 for another 1.958485407s
  Jun  5 14:03:26.252: INFO: Verifying statefulset ss doesn't scale past 0 for another 955.434774ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-3927 @ 06/05/24 14:03:27.253
  Jun  5 14:03:27.258: INFO: Scaling statefulset ss to 0
  Jun  5 14:03:27.267: INFO: Waiting for statefulset status.replicas updated to 0
  Jun  5 14:03:27.269: INFO: Deleting all statefulset in ns statefulset-3927
  Jun  5 14:03:27.271: INFO: Scaling statefulset ss to 0
  Jun  5 14:03:27.278: INFO: Waiting for statefulset status.replicas updated to 0
  Jun  5 14:03:27.279: INFO: Deleting statefulset ss
  Jun  5 14:03:27.290: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-3927" for this suite. @ 06/05/24 14:03:27.293
• [50.928 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 06/05/24 14:03:27.298
  Jun  5 14:03:27.298: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename watch @ 06/05/24 14:03:27.299
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:03:27.309
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:03:27.311
  STEP: creating a watch on configmaps @ 06/05/24 14:03:27.312
  STEP: creating a new configmap @ 06/05/24 14:03:27.313
  STEP: modifying the configmap once @ 06/05/24 14:03:27.317
  STEP: closing the watch once it receives two notifications @ 06/05/24 14:03:27.322
  Jun  5 14:03:27.322: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-3982  8d3266d4-ee72-42e8-8b9a-e9d11abf78d4 19895 0 2024-06-05 14:03:27 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-06-05 14:03:27 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun  5 14:03:27.323: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-3982  8d3266d4-ee72-42e8-8b9a-e9d11abf78d4 19896 0 2024-06-05 14:03:27 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-06-05 14:03:27 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 06/05/24 14:03:27.323
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 06/05/24 14:03:27.328
  STEP: deleting the configmap @ 06/05/24 14:03:27.329
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 06/05/24 14:03:27.332
  Jun  5 14:03:27.332: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-3982  8d3266d4-ee72-42e8-8b9a-e9d11abf78d4 19897 0 2024-06-05 14:03:27 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-06-05 14:03:27 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun  5 14:03:27.332: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-3982  8d3266d4-ee72-42e8-8b9a-e9d11abf78d4 19898 0 2024-06-05 14:03:27 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-06-05 14:03:27 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Jun  5 14:03:27.332: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-3982" for this suite. @ 06/05/24 14:03:27.335
• [0.042 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:408
  STEP: Creating a kubernetes client @ 06/05/24 14:03:27.34
  Jun  5 14:03:27.340: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename job @ 06/05/24 14:03:27.341
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:03:27.351
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:03:27.354
  STEP: Creating Indexed job @ 06/05/24 14:03:27.357
  STEP: Ensuring job reaches completions @ 06/05/24 14:03:27.363
  STEP: Ensuring pods with index for job exist @ 06/05/24 14:03:35.371
  Jun  5 14:03:35.375: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-3133" for this suite. @ 06/05/24 14:03:35.378
• [8.047 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:70
  STEP: Creating a kubernetes client @ 06/05/24 14:03:35.388
  Jun  5 14:03:35.388: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename projected @ 06/05/24 14:03:35.389
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:03:35.406
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:03:35.411
  STEP: Creating a pod to test downward API volume plugin @ 06/05/24 14:03:35.417
  STEP: Saw pod success @ 06/05/24 14:03:39.439
  Jun  5 14:03:39.441: INFO: Trying to get logs from node k8sconformance-m02 pod downwardapi-volume-d407afbd-7eea-4859-9e30-3dc2c3859656 container client-container: <nil>
  STEP: delete the pod @ 06/05/24 14:03:39.457
  Jun  5 14:03:39.471: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5023" for this suite. @ 06/05/24 14:03:39.474
• [4.091 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:112
  STEP: Creating a kubernetes client @ 06/05/24 14:03:39.479
  Jun  5 14:03:39.479: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename replicaset @ 06/05/24 14:03:39.48
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:03:39.492
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:03:39.495
  Jun  5 14:03:39.497: INFO: Creating ReplicaSet my-hostname-basic-a55ee595-5b34-4441-899d-4d58560181cf
  Jun  5 14:03:39.504: INFO: Pod name my-hostname-basic-a55ee595-5b34-4441-899d-4d58560181cf: Found 0 pods out of 1
  Jun  5 14:03:44.509: INFO: Pod name my-hostname-basic-a55ee595-5b34-4441-899d-4d58560181cf: Found 1 pods out of 1
  Jun  5 14:03:44.510: INFO: Ensuring a pod for ReplicaSet "my-hostname-basic-a55ee595-5b34-4441-899d-4d58560181cf" is running
  Jun  5 14:03:44.514: INFO: Pod "my-hostname-basic-a55ee595-5b34-4441-899d-4d58560181cf-cmk7v" is running (conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-06-05 14:03:41 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-06-05 14:03:39 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-06-05 14:03:41 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-06-05 14:03:41 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-06-05 14:03:39 +0000 UTC Reason: Message:}])
  Jun  5 14:03:44.515: INFO: Trying to dial the pod
  STEP: trying to dial each unique pod @ 06/05/24 14:03:44.515
  Jun  5 14:03:44.522: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-7460" for this suite. @ 06/05/24 14:03:44.525
• [5.050 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:170
  STEP: Creating a kubernetes client @ 06/05/24 14:03:44.53
  Jun  5 14:03:44.530: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename security-context @ 06/05/24 14:03:44.531
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:03:44.54
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:03:44.542
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 06/05/24 14:03:44.544
  STEP: Saw pod success @ 06/05/24 14:03:48.568
  Jun  5 14:03:48.571: INFO: Trying to get logs from node k8sconformance-m02 pod security-context-e5b3b102-4678-4fa1-8f04-02c035955bb0 container test-container: <nil>
  STEP: delete the pod @ 06/05/24 14:03:48.578
  Jun  5 14:03:48.591: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-7360" for this suite. @ 06/05/24 14:03:48.594
• [4.069 seconds]
------------------------------
S
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:110
  STEP: Creating a kubernetes client @ 06/05/24 14:03:48.599
  Jun  5 14:03:48.599: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename configmap @ 06/05/24 14:03:48.6
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:03:48.61
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:03:48.613
  STEP: Creating configMap with name configmap-test-volume-map-93cad9f8-25c0-49be-b3c3-7dfd8f2ddb86 @ 06/05/24 14:03:48.616
  STEP: Creating a pod to test consume configMaps @ 06/05/24 14:03:48.62
  STEP: Saw pod success @ 06/05/24 14:03:50.634
  Jun  5 14:03:50.637: INFO: Trying to get logs from node k8sconformance-m02 pod pod-configmaps-94f2a26f-541a-4f66-a689-9d067ef7ef33 container agnhost-container: <nil>
  STEP: delete the pod @ 06/05/24 14:03:50.645
  Jun  5 14:03:50.661: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7715" for this suite. @ 06/05/24 14:03:50.664
• [2.070 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 06/05/24 14:03:50.67
  Jun  5 14:03:50.670: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename events @ 06/05/24 14:03:50.671
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:03:50.686
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:03:50.688
  STEP: Create set of events @ 06/05/24 14:03:50.689
  STEP: get a list of Events with a label in the current namespace @ 06/05/24 14:03:50.699
  STEP: delete a list of events @ 06/05/24 14:03:50.702
  Jun  5 14:03:50.702: INFO: requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 06/05/24 14:03:50.713
  Jun  5 14:03:50.715: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-9286" for this suite. @ 06/05/24 14:03:50.717
• [0.050 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:147
  STEP: Creating a kubernetes client @ 06/05/24 14:03:50.72
  Jun  5 14:03:50.720: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename kubelet-test @ 06/05/24 14:03:50.72
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:03:50.73
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:03:50.732
  STEP: Waiting for pod completion @ 06/05/24 14:03:50.74
  Jun  5 14:03:54.762: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-2454" for this suite. @ 06/05/24 14:03:54.766
• [4.051 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1798
  STEP: Creating a kubernetes client @ 06/05/24 14:03:54.771
  Jun  5 14:03:54.771: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename kubectl @ 06/05/24 14:03:54.772
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:03:54.781
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:03:54.784
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 06/05/24 14:03:54.786
  Jun  5 14:03:54.786: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=kubectl-1784 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  Jun  5 14:03:54.839: INFO: stderr: ""
  Jun  5 14:03:54.839: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 06/05/24 14:03:54.839
  STEP: verifying the pod e2e-test-httpd-pod was created @ 06/05/24 14:03:59.89
  Jun  5 14:03:59.890: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=kubectl-1784 get pod e2e-test-httpd-pod -o json'
  Jun  5 14:03:59.934: INFO: stderr: ""
  Jun  5 14:03:59.934: INFO: stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"creationTimestamp\": \"2024-06-05T14:03:54Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-1784\",\n        \"resourceVersion\": \"20194\",\n        \"uid\": \"d0a6c078-136c-41e9-a072-8b647a5a6ece\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-tm7fr\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"k8sconformance-m02\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-tm7fr\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-06-05T14:03:56Z\",\n                \"status\": \"True\",\n                \"type\": \"PodReadyToStartContainers\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-06-05T14:03:54Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-06-05T14:03:56Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-06-05T14:03:56Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-06-05T14:03:54Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"docker://e5f41300f9924f81ffb5832acfe06d52cf56dbf949321999948655e46710aed7\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2024-06-05T14:03:55Z\"\n                    }\n                }\n            }\n        ],\n        \"hostIP\": \"192.168.67.3\",\n        \"hostIPs\": [\n            {\n                \"ip\": \"192.168.67.3\"\n            }\n        ],\n        \"phase\": \"Running\",\n        \"podIP\": \"10.244.1.119\",\n        \"podIPs\": [\n            {\n                \"ip\": \"10.244.1.119\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2024-06-05T14:03:54Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 06/05/24 14:03:59.934
  Jun  5 14:03:59.934: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=kubectl-1784 replace -f -'
  Jun  5 14:04:00.000: INFO: stderr: ""
  Jun  5 14:04:00.000: INFO: stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.36.1-1 @ 06/05/24 14:04:00
  Jun  5 14:04:00.005: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=kubectl-1784 delete pods e2e-test-httpd-pod'
  Jun  5 14:04:01.604: INFO: stderr: ""
  Jun  5 14:04:01.604: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Jun  5 14:04:01.604: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1784" for this suite. @ 06/05/24 14:04:01.607
• [6.844 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:100
  STEP: Creating a kubernetes client @ 06/05/24 14:04:01.615
  Jun  5 14:04:01.615: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename configmap @ 06/05/24 14:04:01.616
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:04:01.628
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:04:01.63
  STEP: Creating configMap with name configmap-test-volume-map-15719f88-ad1c-4c3a-929e-1338d6de30b0 @ 06/05/24 14:04:01.632
  STEP: Creating a pod to test consume configMaps @ 06/05/24 14:04:01.636
  STEP: Saw pod success @ 06/05/24 14:04:05.656
  Jun  5 14:04:05.660: INFO: Trying to get logs from node k8sconformance-m02 pod pod-configmaps-074f77a3-684f-4510-a1d4-bd5596b31c44 container agnhost-container: <nil>
  STEP: delete the pod @ 06/05/24 14:04:05.668
  Jun  5 14:04:05.684: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3828" for this suite. @ 06/05/24 14:04:05.687
• [4.076 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:641
  STEP: Creating a kubernetes client @ 06/05/24 14:04:05.691
  Jun  5 14:04:05.691: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename statefulset @ 06/05/24 14:04:05.692
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:04:05.703
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:04:05.705
  STEP: Creating service test in namespace statefulset-6139 @ 06/05/24 14:04:05.706
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 06/05/24 14:04:05.708
  STEP: Creating stateful set ss in namespace statefulset-6139 @ 06/05/24 14:04:05.711
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-6139 @ 06/05/24 14:04:05.714
  Jun  5 14:04:05.716: INFO: Found 0 stateful pods, waiting for 1
  Jun  5 14:04:15.721: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 06/05/24 14:04:15.721
  Jun  5 14:04:15.724: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=statefulset-6139 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jun  5 14:04:15.828: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jun  5 14:04:15.828: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jun  5 14:04:15.828: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jun  5 14:04:15.831: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  Jun  5 14:04:25.832: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Jun  5 14:04:25.832: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Jun  5 14:04:25.844: INFO: Verifying statefulset ss doesn't scale past 1 for another 9.999999331s
  Jun  5 14:04:26.850: INFO: Verifying statefulset ss doesn't scale past 1 for another 8.996892859s
  Jun  5 14:04:27.857: INFO: Verifying statefulset ss doesn't scale past 1 for another 7.990479209s
  Jun  5 14:04:28.863: INFO: Verifying statefulset ss doesn't scale past 1 for another 6.984584296s
  Jun  5 14:04:29.869: INFO: Verifying statefulset ss doesn't scale past 1 for another 5.978265884s
  Jun  5 14:04:30.875: INFO: Verifying statefulset ss doesn't scale past 1 for another 4.972724339s
  Jun  5 14:04:31.881: INFO: Verifying statefulset ss doesn't scale past 1 for another 3.966045614s
  Jun  5 14:04:32.883: INFO: Verifying statefulset ss doesn't scale past 1 for another 2.960691002s
  Jun  5 14:04:33.887: INFO: Verifying statefulset ss doesn't scale past 1 for another 1.958098858s
  Jun  5 14:04:34.894: INFO: Verifying statefulset ss doesn't scale past 1 for another 953.068291ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-6139 @ 06/05/24 14:04:35.895
  Jun  5 14:04:35.902: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=statefulset-6139 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jun  5 14:04:36.012: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Jun  5 14:04:36.012: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jun  5 14:04:36.012: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Jun  5 14:04:36.015: INFO: Found 1 stateful pods, waiting for 3
  Jun  5 14:04:46.020: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Jun  5 14:04:46.020: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  Jun  5 14:04:46.020: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 06/05/24 14:04:46.02
  STEP: Scale down will halt with unhealthy stateful pod @ 06/05/24 14:04:46.02
  Jun  5 14:04:46.025: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=statefulset-6139 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jun  5 14:04:46.128: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jun  5 14:04:46.128: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jun  5 14:04:46.128: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jun  5 14:04:46.128: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=statefulset-6139 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jun  5 14:04:46.231: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jun  5 14:04:46.231: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jun  5 14:04:46.232: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jun  5 14:04:46.232: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=statefulset-6139 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Jun  5 14:04:46.341: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Jun  5 14:04:46.341: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Jun  5 14:04:46.341: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Jun  5 14:04:46.341: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Jun  5 14:04:46.344: INFO: Waiting for statefulset status.readyReplicas to become 0, currently 3
  Jun  5 14:04:56.352: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Jun  5 14:04:56.352: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  Jun  5 14:04:56.352: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  Jun  5 14:04:56.366: INFO: Verifying statefulset ss doesn't scale past 3 for another 9.999999375s
  Jun  5 14:04:57.373: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.995982711s
  Jun  5 14:04:58.378: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.989774774s
  Jun  5 14:04:59.384: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.984726192s
  Jun  5 14:05:00.390: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.978633099s
  Jun  5 14:05:01.395: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.973025587s
  Jun  5 14:05:02.404: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.966654741s
  Jun  5 14:05:03.408: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.957770621s
  Jun  5 14:05:04.415: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.95476012s
  Jun  5 14:05:05.422: INFO: Verifying statefulset ss doesn't scale past 3 for another 947.511265ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-6139 @ 06/05/24 14:05:06.423
  Jun  5 14:05:06.428: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=statefulset-6139 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jun  5 14:05:06.521: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Jun  5 14:05:06.521: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jun  5 14:05:06.521: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Jun  5 14:05:06.521: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=statefulset-6139 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jun  5 14:05:06.608: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Jun  5 14:05:06.608: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jun  5 14:05:06.608: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Jun  5 14:05:06.608: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=statefulset-6139 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Jun  5 14:05:06.693: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Jun  5 14:05:06.693: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Jun  5 14:05:06.693: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Jun  5 14:05:06.693: INFO: Scaling statefulset ss to 0
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 06/05/24 14:05:16.703
  Jun  5 14:05:16.703: INFO: Deleting all statefulset in ns statefulset-6139
  Jun  5 14:05:16.706: INFO: Scaling statefulset ss to 0
  Jun  5 14:05:16.715: INFO: Waiting for statefulset status.replicas updated to 0
  Jun  5 14:05:16.718: INFO: Deleting statefulset ss
  Jun  5 14:05:16.730: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6139" for this suite. @ 06/05/24 14:05:16.731
• [71.044 seconds]
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 06/05/24 14:05:16.736
  Jun  5 14:05:16.736: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename projected @ 06/05/24 14:05:16.737
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:05:16.743
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:05:16.744
  STEP: Creating projection with secret that has name projected-secret-test-64f55fea-8480-43d7-b9c2-2a4e7dadbf2a @ 06/05/24 14:05:16.746
  STEP: Creating a pod to test consume secrets @ 06/05/24 14:05:16.749
  STEP: Saw pod success @ 06/05/24 14:05:20.767
  Jun  5 14:05:20.769: INFO: Trying to get logs from node k8sconformance-m02 pod pod-projected-secrets-899277ac-425b-4c5b-8d8c-6a0c09697722 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 06/05/24 14:05:20.778
  Jun  5 14:05:20.794: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4146" for this suite. @ 06/05/24 14:05:20.797
• [4.067 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1538
  STEP: Creating a kubernetes client @ 06/05/24 14:05:20.805
  Jun  5 14:05:20.805: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename kubectl @ 06/05/24 14:05:20.806
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:05:20.816
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:05:20.819
  STEP: creating Agnhost RC @ 06/05/24 14:05:20.822
  Jun  5 14:05:20.822: INFO: namespace kubectl-6261
  Jun  5 14:05:20.822: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=kubectl-6261 create -f -'
  Jun  5 14:05:20.891: INFO: stderr: ""
  Jun  5 14:05:20.891: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 06/05/24 14:05:20.891
  Jun  5 14:05:21.893: INFO: Selector matched 1 pods for map[app:agnhost]
  Jun  5 14:05:21.894: INFO: Found 0 / 1
  Jun  5 14:05:22.897: INFO: Selector matched 1 pods for map[app:agnhost]
  Jun  5 14:05:22.897: INFO: Found 1 / 1
  Jun  5 14:05:22.897: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  Jun  5 14:05:22.901: INFO: Selector matched 1 pods for map[app:agnhost]
  Jun  5 14:05:22.901: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Jun  5 14:05:22.901: INFO: wait on agnhost-primary startup in kubectl-6261 
  Jun  5 14:05:22.901: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=kubectl-6261 logs agnhost-primary-nxzhg agnhost-primary'
  Jun  5 14:05:22.951: INFO: stderr: ""
  Jun  5 14:05:22.951: INFO: stdout: "Paused\n"
  STEP: exposing RC @ 06/05/24 14:05:22.951
  Jun  5 14:05:22.951: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=kubectl-6261 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  Jun  5 14:05:22.996: INFO: stderr: ""
  Jun  5 14:05:22.996: INFO: stdout: "service/rm2 exposed\n"
  Jun  5 14:05:22.999: INFO: Service rm2 in namespace kubectl-6261 found.
  STEP: exposing service @ 06/05/24 14:05:25.008
  Jun  5 14:05:25.008: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=kubectl-6261 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  Jun  5 14:05:25.061: INFO: stderr: ""
  Jun  5 14:05:25.061: INFO: stdout: "service/rm3 exposed\n"
  Jun  5 14:05:25.064: INFO: Service rm3 in namespace kubectl-6261 found.
  Jun  5 14:05:27.073: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6261" for this suite. @ 06/05/24 14:05:27.076
• [6.278 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:285
  STEP: Creating a kubernetes client @ 06/05/24 14:05:27.083
  Jun  5 14:05:27.083: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename webhook @ 06/05/24 14:05:27.084
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:05:27.097
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:05:27.1
  STEP: Setting up server cert @ 06/05/24 14:05:27.116
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/05/24 14:05:27.282
  STEP: Deploying the webhook pod @ 06/05/24 14:05:27.287
  STEP: Wait for the deployment to be ready @ 06/05/24 14:05:27.293
  Jun  5 14:05:27.296: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 06/05/24 14:05:29.308
  STEP: Verifying the service has paired with the endpoint @ 06/05/24 14:05:29.319
  Jun  5 14:05:30.319: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Jun  5 14:05:30.328: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-9430-crds.webhook.example.com via the AdmissionRegistration API @ 06/05/24 14:05:30.843
  STEP: Creating a custom resource that should be mutated by the webhook @ 06/05/24 14:05:30.859
  Jun  5 14:05:33.435: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8714" for this suite. @ 06/05/24 14:05:33.439
  STEP: Destroying namespace "webhook-markers-4427" for this suite. @ 06/05/24 14:05:33.445
• [6.366 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 06/05/24 14:05:33.448
  Jun  5 14:05:33.449: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename pods @ 06/05/24 14:05:33.449
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:05:33.456
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:05:33.458
  STEP: creating the pod @ 06/05/24 14:05:33.459
  STEP: setting up watch @ 06/05/24 14:05:33.459
  STEP: submitting the pod to kubernetes @ 06/05/24 14:05:33.562
  STEP: verifying the pod is in kubernetes @ 06/05/24 14:05:33.572
  STEP: verifying pod creation was observed @ 06/05/24 14:05:33.574
  STEP: deleting the pod gracefully @ 06/05/24 14:05:35.586
  STEP: verifying pod deletion was observed @ 06/05/24 14:05:35.593
  Jun  5 14:05:36.732: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7476" for this suite. @ 06/05/24 14:05:36.735
• [3.291 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should apply changes to a pv/pvc status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:669
  STEP: Creating a kubernetes client @ 06/05/24 14:05:36.739
  Jun  5 14:05:36.739: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename pv @ 06/05/24 14:05:36.74
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:05:36.75
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:05:36.752
  STEP: Creating initial PV and PVC @ 06/05/24 14:05:36.754
  Jun  5 14:05:36.754: INFO: Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-6910" @ 06/05/24 14:05:36.763
  STEP: Listing PVCs in namespace "pv-6910" @ 06/05/24 14:05:36.764
  STEP: Reading "pvc-rrbjj" Status @ 06/05/24 14:05:36.767
  STEP: Reading "pv-6910-vmfm2" Status @ 06/05/24 14:05:36.771
  STEP: Patching "pvc-rrbjj" Status @ 06/05/24 14:05:36.777
  STEP: Patching "pv-6910-vmfm2" Status @ 06/05/24 14:05:36.784
  STEP: Updating "pvc-rrbjj" Status @ 06/05/24 14:05:36.789
  STEP: Updating "pv-6910-vmfm2" Status @ 06/05/24 14:05:36.795
  Jun  5 14:05:36.800: INFO: AfterEach: deleting 1 PVCs and 1 PVs...
  Jun  5 14:05:36.800: INFO: Deleting PersistentVolumeClaim "pvc-rrbjj"
  Jun  5 14:05:36.804: INFO: Deleting PersistentVolume "pv-6910-vmfm2"
  Jun  5 14:05:36.812: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-6910" for this suite. @ 06/05/24 14:05:36.815
• [0.079 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:372
  STEP: Creating a kubernetes client @ 06/05/24 14:05:36.819
  Jun  5 14:05:36.819: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename namespaces @ 06/05/24 14:05:36.82
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:05:36.827
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:05:36.828
  STEP: Updating Namespace "namespaces-3346" @ 06/05/24 14:05:36.83
  Jun  5 14:05:36.834: INFO: Namespace "namespaces-3346" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"77813851-ef8b-4400-b533-03e779053b73", "kubernetes.io/metadata.name":"namespaces-3346", "namespaces-3346":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  Jun  5 14:05:36.834: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-3346" for this suite. @ 06/05/24 14:05:36.836
• [0.019 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1764
  STEP: Creating a kubernetes client @ 06/05/24 14:05:36.838
  Jun  5 14:05:36.838: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename kubectl @ 06/05/24 14:05:36.839
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:05:36.848
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:05:36.849
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 06/05/24 14:05:36.851
  Jun  5 14:05:36.851: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=kubectl-7517 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  Jun  5 14:05:36.893: INFO: stderr: ""
  Jun  5 14:05:36.893: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 06/05/24 14:05:36.893
  Jun  5 14:05:36.897: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=kubectl-7517 delete pods e2e-test-httpd-pod'
  Jun  5 14:05:38.754: INFO: stderr: ""
  Jun  5 14:05:38.754: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Jun  5 14:05:38.754: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7517" for this suite. @ 06/05/24 14:05:38.758
• [1.925 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2214
  STEP: Creating a kubernetes client @ 06/05/24 14:05:38.764
  Jun  5 14:05:38.764: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename services @ 06/05/24 14:05:38.764
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:05:38.776
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:05:38.779
  STEP: creating service in namespace services-8920 @ 06/05/24 14:05:38.781
  STEP: creating service affinity-nodeport in namespace services-8920 @ 06/05/24 14:05:38.781
  STEP: creating replication controller affinity-nodeport in namespace services-8920 @ 06/05/24 14:05:38.794
  I0605 14:05:38.802573      22 runners.go:197] Created replication controller with name: affinity-nodeport, namespace: services-8920, replica count: 3
  I0605 14:05:41.853960      22 runners.go:197] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jun  5 14:05:41.859: INFO: Creating new exec pod
  Jun  5 14:05:44.871: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=services-8920 exec execpod-affinity29v2c -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  Jun  5 14:05:44.973: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport 80\nConnection to affinity-nodeport 80 port [tcp/http] succeeded!\n"
  Jun  5 14:05:44.973: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun  5 14:05:44.973: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=services-8920 exec execpod-affinity29v2c -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.108.59.140 80'
  Jun  5 14:05:45.078: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.108.59.140 80\nConnection to 10.108.59.140 80 port [tcp/http] succeeded!\n"
  Jun  5 14:05:45.078: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun  5 14:05:45.079: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=services-8920 exec execpod-affinity29v2c -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.67.2 30894'
  Jun  5 14:05:45.180: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.67.2 30894\nConnection to 192.168.67.2 30894 port [tcp/*] succeeded!\n"
  Jun  5 14:05:45.180: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun  5 14:05:45.180: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=services-8920 exec execpod-affinity29v2c -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.67.3 30894'
  Jun  5 14:05:45.297: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.67.3 30894\nConnection to 192.168.67.3 30894 port [tcp/*] succeeded!\n"
  Jun  5 14:05:45.297: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun  5 14:05:45.297: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=services-8920 exec execpod-affinity29v2c -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.67.2:30894/ ; done'
  Jun  5 14:05:45.468: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.67.2:30894/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.67.2:30894/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.67.2:30894/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.67.2:30894/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.67.2:30894/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.67.2:30894/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.67.2:30894/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.67.2:30894/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.67.2:30894/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.67.2:30894/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.67.2:30894/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.67.2:30894/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.67.2:30894/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.67.2:30894/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.67.2:30894/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.67.2:30894/\n"
  Jun  5 14:05:45.468: INFO: stdout: "\naffinity-nodeport-7c28j\naffinity-nodeport-7c28j\naffinity-nodeport-7c28j\naffinity-nodeport-7c28j\naffinity-nodeport-7c28j\naffinity-nodeport-7c28j\naffinity-nodeport-7c28j\naffinity-nodeport-7c28j\naffinity-nodeport-7c28j\naffinity-nodeport-7c28j\naffinity-nodeport-7c28j\naffinity-nodeport-7c28j\naffinity-nodeport-7c28j\naffinity-nodeport-7c28j\naffinity-nodeport-7c28j\naffinity-nodeport-7c28j"
  Jun  5 14:05:45.468: INFO: Received response from host: affinity-nodeport-7c28j
  Jun  5 14:05:45.468: INFO: Received response from host: affinity-nodeport-7c28j
  Jun  5 14:05:45.468: INFO: Received response from host: affinity-nodeport-7c28j
  Jun  5 14:05:45.468: INFO: Received response from host: affinity-nodeport-7c28j
  Jun  5 14:05:45.468: INFO: Received response from host: affinity-nodeport-7c28j
  Jun  5 14:05:45.468: INFO: Received response from host: affinity-nodeport-7c28j
  Jun  5 14:05:45.468: INFO: Received response from host: affinity-nodeport-7c28j
  Jun  5 14:05:45.468: INFO: Received response from host: affinity-nodeport-7c28j
  Jun  5 14:05:45.468: INFO: Received response from host: affinity-nodeport-7c28j
  Jun  5 14:05:45.468: INFO: Received response from host: affinity-nodeport-7c28j
  Jun  5 14:05:45.468: INFO: Received response from host: affinity-nodeport-7c28j
  Jun  5 14:05:45.468: INFO: Received response from host: affinity-nodeport-7c28j
  Jun  5 14:05:45.468: INFO: Received response from host: affinity-nodeport-7c28j
  Jun  5 14:05:45.468: INFO: Received response from host: affinity-nodeport-7c28j
  Jun  5 14:05:45.468: INFO: Received response from host: affinity-nodeport-7c28j
  Jun  5 14:05:45.468: INFO: Received response from host: affinity-nodeport-7c28j
  Jun  5 14:05:45.468: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport in namespace services-8920, will wait for the garbage collector to delete the pods @ 06/05/24 14:05:45.48
  Jun  5 14:05:45.536: INFO: Deleting ReplicationController affinity-nodeport took: 4.376315ms
  Jun  5 14:05:45.637: INFO: Terminating ReplicationController affinity-nodeport pods took: 100.146544ms
  Jun  5 14:05:48.156: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8920" for this suite. @ 06/05/24 14:05:48.16
• [9.403 seconds]
------------------------------
S
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:95
  STEP: Creating a kubernetes client @ 06/05/24 14:05:48.166
  Jun  5 14:05:48.166: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename replication-controller @ 06/05/24 14:05:48.167
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:05:48.178
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:05:48.18
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 06/05/24 14:05:48.182
  STEP: When a replication controller with a matching selector is created @ 06/05/24 14:05:50.199
  STEP: Then the orphan pod is adopted @ 06/05/24 14:05:50.206
  Jun  5 14:05:51.214: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-6670" for this suite. @ 06/05/24 14:05:51.218
• [3.056 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:58
  STEP: Creating a kubernetes client @ 06/05/24 14:05:51.223
  Jun  5 14:05:51.223: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename configmap @ 06/05/24 14:05:51.224
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:05:51.237
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:05:51.24
  STEP: Creating configMap with name configmap-test-volume-4cb9240a-bd71-40da-acea-7a1aaebf1b08 @ 06/05/24 14:05:51.243
  STEP: Creating a pod to test consume configMaps @ 06/05/24 14:05:51.247
  STEP: Saw pod success @ 06/05/24 14:05:53.261
  Jun  5 14:05:53.263: INFO: Trying to get logs from node k8sconformance-m02 pod pod-configmaps-3e3f33b9-3084-4940-b2d2-7d30f5461430 container agnhost-container: <nil>
  STEP: delete the pod @ 06/05/24 14:05:53.27
  Jun  5 14:05:53.278: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4975" for this suite. @ 06/05/24 14:05:53.28
• [2.062 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:117
  STEP: Creating a kubernetes client @ 06/05/24 14:05:53.285
  Jun  5 14:05:53.285: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename dns @ 06/05/24 14:05:53.286
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:05:53.295
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:05:53.297
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-6477.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-1.dns-test-service.dns-6477.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/wheezy_hosts@dns-querier-1;sleep 1; done
   @ 06/05/24 14:05:53.299
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-6477.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-6477.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 06/05/24 14:05:53.299
  STEP: creating a pod to probe /etc/hosts @ 06/05/24 14:05:53.299
  STEP: submitting the pod to kubernetes @ 06/05/24 14:05:53.299
  STEP: retrieving the pod @ 06/05/24 14:05:55.312
  STEP: looking for the results for each expected name from probers @ 06/05/24 14:05:55.315
  Jun  5 14:05:55.326: INFO: DNS probes using dns-6477/dns-test-b313caa7-fd4a-4e9c-aa9b-40bcc09fa131 succeeded

  STEP: deleting the pod @ 06/05/24 14:05:55.326
  Jun  5 14:05:55.336: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-6477" for this suite. @ 06/05/24 14:05:55.341
• [2.061 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:237
  STEP: Creating a kubernetes client @ 06/05/24 14:05:55.347
  Jun  5 14:05:55.347: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename downward-api @ 06/05/24 14:05:55.348
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:05:55.356
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:05:55.358
  STEP: Creating a pod to test downward API volume plugin @ 06/05/24 14:05:55.361
  STEP: Saw pod success @ 06/05/24 14:05:57.378
  Jun  5 14:05:57.381: INFO: Trying to get logs from node k8sconformance-m02 pod downwardapi-volume-83f130d3-1f48-4f87-a38e-8a821113d473 container client-container: <nil>
  STEP: delete the pod @ 06/05/24 14:05:57.389
  Jun  5 14:05:57.406: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5458" for this suite. @ 06/05/24 14:05:57.409
• [2.066 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve endpoints on same port and different protocols [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3649
  STEP: Creating a kubernetes client @ 06/05/24 14:05:57.414
  Jun  5 14:05:57.414: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename services @ 06/05/24 14:05:57.415
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:05:57.426
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:05:57.429
  STEP: creating service multiprotocol-test in namespace services-7074 @ 06/05/24 14:05:57.431
  STEP: creating pod pod1 in namespace services-7074 @ 06/05/24 14:05:57.445
  STEP: Creating pod pod1 in namespace services-7074 @ 06/05/24 14:05:57.445
  STEP: waiting up to 3m0s for service multiprotocol-test in namespace services-7074 to expose endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]] @ 06/05/24 14:05:59.467
  Jun  5 14:05:59.474: INFO: successfully validated that service multiprotocol-test in namespace services-7074 exposes endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]]
  STEP: Checking if the Service forwards traffic to the TCP and UDP port @ 06/05/24 14:05:59.474
  Jun  5 14:05:59.474: INFO: Creating new exec pod
  Jun  5 14:06:01.487: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=services-7074 exec execpod2nsk4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.108.45.110 80'
  Jun  5 14:06:01.610: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.108.45.110 80\nConnection to 10.108.45.110 80 port [tcp/http] succeeded!\n"
  Jun  5 14:06:01.610: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun  5 14:06:01.610: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=services-7074 exec execpod2nsk4 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.108.45.110 80'
  Jun  5 14:06:05.708: INFO: stderr: "+ echo hostName\n+ nc -v -u -w 2 10.108.45.110 80\nConnection to 10.108.45.110 80 port [udp/*] succeeded!\n"
  Jun  5 14:06:05.708: INFO: stdout: "pod1"
  STEP: Checking if the Service forwards traffic to TCP only @ 06/05/24 14:06:05.708
  Jun  5 14:06:05.716: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=services-7074 exec execpod2nsk4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.108.45.110 80'
  Jun  5 14:06:05.824: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.108.45.110 80\nConnection to 10.108.45.110 80 port [tcp/http] succeeded!\n"
  Jun  5 14:06:05.824: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun  5 14:06:05.824: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=services-7074 exec execpod2nsk4 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.108.45.110 80'
  Jun  5 14:06:09.922: INFO: stderr: "+ echo hostName\n+ nc -v -u -w 2 10.108.45.110 80\nConnection to 10.108.45.110 80 port [udp/*] succeeded!\n"
  Jun  5 14:06:09.922: INFO: stdout: ""
  Jun  5 14:06:09.922: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=services-7074 exec execpod2nsk4 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.108.45.110 80'
  Jun  5 14:06:14.055: INFO: stderr: "+ echo hostName\n+ nc -v -u -w 2 10.108.45.110 80\nConnection to 10.108.45.110 80 port [udp/*] succeeded!\n"
  Jun  5 14:06:14.056: INFO: stdout: ""
  STEP: Checking if the Service forwards traffic to UDP only @ 06/05/24 14:06:14.056
  Jun  5 14:06:14.067: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=services-7074 exec execpod2nsk4 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.108.45.110 80'
  Jun  5 14:06:18.172: INFO: stderr: "+ echo hostName\n+ nc -v -u -w 2 10.108.45.110 80\nConnection to 10.108.45.110 80 port [udp/*] succeeded!\n"
  Jun  5 14:06:18.172: INFO: stdout: "pod1"
  Jun  5 14:06:18.172: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=services-7074 exec execpod2nsk4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.108.45.110 80'
  Jun  5 14:06:20.279: INFO: rc: 1
  Jun  5 14:06:20.279: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=services-7074 exec execpod2nsk4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.108.45.110 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.108.45.110 80
  nc: connect to 10.108.45.110 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  Jun  5 14:06:20.280: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=services-7074 exec execpod2nsk4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.108.45.110 80'
  Jun  5 14:06:22.377: INFO: rc: 1
  Jun  5 14:06:22.377: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=services-7074 exec execpod2nsk4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.108.45.110 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.108.45.110 80
  nc: connect to 10.108.45.110 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  Jun  5 14:06:22.378: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=services-7074 exec execpod2nsk4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.108.45.110 80'
  Jun  5 14:06:24.484: INFO: rc: 1
  Jun  5 14:06:24.484: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=services-7074 exec execpod2nsk4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.108.45.110 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.108.45.110 80
  nc: connect to 10.108.45.110 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  Jun  5 14:06:24.484: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7074" for this suite. @ 06/05/24 14:06:24.489
• [27.080 seconds]
------------------------------
S
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:349
  STEP: Creating a kubernetes client @ 06/05/24 14:06:24.494
  Jun  5 14:06:24.494: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename disruption @ 06/05/24 14:06:24.495
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:06:24.507
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:06:24.51
  STEP: Creating a pdb that targets all three pods in a test replica set @ 06/05/24 14:06:24.513
  STEP: Waiting for the pdb to be processed @ 06/05/24 14:06:24.517
  STEP: First trying to evict a pod which shouldn't be evictable @ 06/05/24 14:06:26.527
  STEP: Waiting for all pods to be running @ 06/05/24 14:06:26.527
  Jun  5 14:06:26.529: INFO: pods: 0 < 3
  STEP: locating a running pod @ 06/05/24 14:06:28.533
  STEP: Updating the pdb to allow a pod to be evicted @ 06/05/24 14:06:28.541
  STEP: Waiting for the pdb to be processed @ 06/05/24 14:06:28.547
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 06/05/24 14:06:30.551
  STEP: Waiting for all pods to be running @ 06/05/24 14:06:30.551
  STEP: Waiting for the pdb to observed all healthy pods @ 06/05/24 14:06:30.552
  STEP: Patching the pdb to disallow a pod to be evicted @ 06/05/24 14:06:30.57
  STEP: Waiting for the pdb to be processed @ 06/05/24 14:06:30.599
  STEP: Waiting for all pods to be running @ 06/05/24 14:06:32.603
  STEP: locating a running pod @ 06/05/24 14:06:32.605
  STEP: Deleting the pdb to allow a pod to be evicted @ 06/05/24 14:06:32.609
  STEP: Waiting for the pdb to be deleted @ 06/05/24 14:06:32.611
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 06/05/24 14:06:32.613
  STEP: Waiting for all pods to be running @ 06/05/24 14:06:32.613
  Jun  5 14:06:32.624: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-5687" for this suite. @ 06/05/24 14:06:32.628
• [8.143 seconds]
------------------------------
SS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:125
  STEP: Creating a kubernetes client @ 06/05/24 14:06:32.637
  Jun  5 14:06:32.637: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename pod-network-test @ 06/05/24 14:06:32.638
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:06:32.649
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:06:32.65
  STEP: Performing setup for networking test in namespace pod-network-test-5893 @ 06/05/24 14:06:32.652
  STEP: creating a selector @ 06/05/24 14:06:32.652
  STEP: Creating the service pods in kubernetes @ 06/05/24 14:06:32.652
  Jun  5 14:06:32.652: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 06/05/24 14:06:54.732
  Jun  5 14:06:56.753: INFO: Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  Jun  5 14:06:56.753: INFO: Going to poll 10.244.0.150 on port 8081 at least 0 times, with a maximum of 34 tries before failing
  Jun  5 14:06:56.754: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.244.0.150 8081 | grep -v '^\s*$'] Namespace:pod-network-test-5893 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun  5 14:06:56.754: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  Jun  5 14:06:56.755: INFO: ExecWithOptions: Clientset creation
  Jun  5 14:06:56.755: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-5893/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.244.0.150+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Jun  5 14:06:57.829: INFO: Found all 1 expected endpoints: [netserver-0]
  Jun  5 14:06:57.829: INFO: Going to poll 10.244.1.139 on port 8081 at least 0 times, with a maximum of 34 tries before failing
  Jun  5 14:06:57.833: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.244.1.139 8081 | grep -v '^\s*$'] Namespace:pod-network-test-5893 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun  5 14:06:57.833: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  Jun  5 14:06:57.834: INFO: ExecWithOptions: Clientset creation
  Jun  5 14:06:57.834: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-5893/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.244.1.139+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Jun  5 14:06:58.901: INFO: Found all 1 expected endpoints: [netserver-1]
  Jun  5 14:06:58.901: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-5893" for this suite. @ 06/05/24 14:06:58.905
• [26.274 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 06/05/24 14:06:58.912
  Jun  5 14:06:58.912: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename deployment @ 06/05/24 14:06:58.913
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:06:58.925
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:06:58.927
  Jun  5 14:06:58.930: INFO: Creating deployment "webserver-deployment"
  Jun  5 14:06:58.934: INFO: Waiting for observed generation 1
  Jun  5 14:07:00.942: INFO: Waiting for all required pods to come up
  Jun  5 14:07:00.945: INFO: Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 06/05/24 14:07:00.945
  Jun  5 14:07:00.946: INFO: Waiting for deployment "webserver-deployment" to complete
  Jun  5 14:07:00.949: INFO: Updating deployment "webserver-deployment" with a non-existent image
  Jun  5 14:07:00.958: INFO: Updating deployment webserver-deployment
  Jun  5 14:07:00.958: INFO: Waiting for observed generation 2
  Jun  5 14:07:02.967: INFO: Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  Jun  5 14:07:02.970: INFO: Waiting for the first rollout's replicaset to have .spec.replicas = 8
  Jun  5 14:07:02.972: INFO: Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  Jun  5 14:07:02.978: INFO: Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  Jun  5 14:07:02.978: INFO: Waiting for the second rollout's replicaset to have .spec.replicas = 5
  Jun  5 14:07:02.980: INFO: Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  Jun  5 14:07:02.984: INFO: Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  Jun  5 14:07:02.984: INFO: Scaling up the deployment "webserver-deployment" from 10 to 30
  Jun  5 14:07:02.995: INFO: Updating deployment webserver-deployment
  Jun  5 14:07:02.995: INFO: Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  Jun  5 14:07:02.999: INFO: Verifying that first rollout's replicaset has .spec.replicas = 20
  Jun  5 14:07:03.000: INFO: Verifying that second rollout's replicaset has .spec.replicas = 13
  Jun  5 14:07:05.009: INFO: Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4944",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "69bc4848-264e-489c-bfde-ddec25b44a88",
      ResourceVersion: (string) (len=5) "21723",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853193218,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193222,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193224,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 3,
      Replicas: (int32) 33,
      UpdatedReplicas: (int32) 13,
      ReadyReplicas: (int32) 15,
      AvailableReplicas: (int32) 15,
      UnavailableReplicas: (int32) 18,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193224,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=59) "ReplicaSet \"webserver-deployment-9b4f5bf69\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Jun  5 14:07:05.013: INFO: New ReplicaSet "webserver-deployment-9b4f5bf69" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4944",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "afe02e10-1d4b-4fc8-8f9b-1823021cab29",
      ResourceVersion: (string) (len=5) "21589",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853193220,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "69bc4848-264e-489c-bfde-ddec25b44a88",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 36 39 62 63 34 38  34 38 2d 32 36 34 65 2d  |\"69bc4848-264e-|
              00000120  34 38 39 63 2d 62 66 64  65 2d 64 64 65 63 32 35  |489c-bfde-ddec25|
              00000130  62 34 34 61 38 38 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |b44a88\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 13,
      FullyLabeledReplicas: (int32) 13,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jun  5 14:07:05.014: INFO: All old ReplicaSets of Deployment "webserver-deployment":
  Jun  5 14:07:05.014: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-557759b7c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4944",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "41a47c7b-8d0c-47ce-a7b4-7e6f14fcbcc2",
      ResourceVersion: (string) (len=5) "21722",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853193218,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "69bc4848-264e-489c-bfde-ddec25b44a88",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193222,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 36 39 62 63 34 38  34 38 2d 32 36 34 65 2d  |\"69bc4848-264e-|
              00000120  34 38 39 63 2d 62 66 64  65 2d 64 64 65 63 32 35  |489c-bfde-ddec25|
              00000130  62 34 34 61 38 38 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |b44a88\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193224,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 20,
      FullyLabeledReplicas: (int32) 20,
      ReadyReplicas: (int32) 15,
      AvailableReplicas: (int32) 15,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jun  5 14:07:05.021: INFO: Pod "webserver-deployment-557759b7c7-44rwr" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-44rwr",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4944",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a56736b3-c14d-47ba-937f-64680ccf88b4",
      ResourceVersion: (string) (len=5) "21607",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853193223,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "41a47c7b-8d0c-47ce-a7b4-7e6f14fcbcc2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 31  61 34 37 63 37 62 2d 38  |d\":\"41a47c7b-8|
              00000090  64 30 63 2d 34 37 63 65  2d 61 37 62 34 2d 37 65  |d0c-47ce-a7b4-7e|
              000000a0  36 66 31 34 66 63 62 63  63 32 5c 22 7d 22 3a 7b  |6f14fcbcc2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-c6dt7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-c6dt7",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "k8sconformance",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.67.2",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.67.2"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853193223,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun  5 14:07:05.023: INFO: Pod "webserver-deployment-557759b7c7-4lhqw" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-4lhqw",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4944",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a2722307-17e8-4a92-ac40-9be40effd811",
      ResourceVersion: (string) (len=5) "21712",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853193223,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "41a47c7b-8d0c-47ce-a7b4-7e6f14fcbcc2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 31  61 34 37 63 37 62 2d 38  |d\":\"41a47c7b-8|
              00000090  64 30 63 2d 34 37 63 65  2d 61 37 62 34 2d 37 65  |d0c-47ce-a7b4-7e|
              000000a0  36 66 31 34 66 63 62 63  63 32 5c 22 7d 22 3a 7b  |6f14fcbcc2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193224,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 31  35 34 5c 22 7d 22 3a 7b  |.244.1.154\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bg9gv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bg9gv",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "k8sconformance-m02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193224,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193224,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193224,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.67.3",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.67.3"
        }
      },
      PodIP: (string) (len=12) "10.244.1.154",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.1.154"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853193223,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63853193223,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=127) "docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=73) "docker://1bfcbf3d135457998629be6f0f312caa3f6a24f64abc7d568936512e68b29b6d",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun  5 14:07:05.024: INFO: Pod "webserver-deployment-557759b7c7-5g59j" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-5g59j",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4944",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8d03815f-7123-4063-9d03-d882447f586b",
      ResourceVersion: (string) (len=5) "21424",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853193218,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "41a47c7b-8d0c-47ce-a7b4-7e6f14fcbcc2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 31  61 34 37 63 37 62 2d 38  |d\":\"41a47c7b-8|
              00000090  64 30 63 2d 34 37 63 65  2d 61 37 62 34 2d 37 65  |d0c-47ce-a7b4-7e|
              000000a0  36 66 31 34 66 63 62 63  63 32 5c 22 7d 22 3a 7b  |6f14fcbcc2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193219,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 30 2e 31  35 33 5c 22 7d 22 3a 7b  |.244.0.153\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jr7ml",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jr7ml",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "k8sconformance",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193219,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193219,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193219,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.67.2",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.67.2"
        }
      },
      PodIP: (string) (len=12) "10.244.0.153",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.0.153"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853193218,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63853193219,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=127) "docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=73) "docker://e6f54e7bacafd10631c270147a99f5be7731d4787da8fb552bb1721a20da0279",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun  5 14:07:05.026: INFO: Pod "webserver-deployment-557759b7c7-5jr46" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-5jr46",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4944",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "85d35e62-a702-401c-beec-ae8fcb042a68",
      ResourceVersion: (string) (len=5) "21704",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853193223,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "41a47c7b-8d0c-47ce-a7b4-7e6f14fcbcc2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 31  61 34 37 63 37 62 2d 38  |d\":\"41a47c7b-8|
              00000090  64 30 63 2d 34 37 63 65  2d 61 37 62 34 2d 37 65  |d0c-47ce-a7b4-7e|
              000000a0  36 66 31 34 66 63 62 63  63 32 5c 22 7d 22 3a 7b  |6f14fcbcc2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193224,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 31  35 30 5c 22 7d 22 3a 7b  |.244.1.150\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vq7xs",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vq7xs",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "k8sconformance-m02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193224,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193224,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193224,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.67.3",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.67.3"
        }
      },
      PodIP: (string) (len=12) "10.244.1.150",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.1.150"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853193223,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63853193223,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=127) "docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=73) "docker://13384d2a0929ef252af334cadcfc4f4fd5e841a9f0ffb7c5b163d0722617b1dc",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun  5 14:07:05.028: INFO: Pod "webserver-deployment-557759b7c7-72hjf" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-72hjf",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4944",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7d323b71-5469-4519-9d62-cfc618c771c4",
      ResourceVersion: (string) (len=5) "21419",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853193218,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "41a47c7b-8d0c-47ce-a7b4-7e6f14fcbcc2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 31  61 34 37 63 37 62 2d 38  |d\":\"41a47c7b-8|
              00000090  64 30 63 2d 34 37 63 65  2d 61 37 62 34 2d 37 65  |d0c-47ce-a7b4-7e|
              000000a0  36 66 31 34 66 63 62 63  63 32 5c 22 7d 22 3a 7b  |6f14fcbcc2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193219,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 30 2e 31  35 34 5c 22 7d 22 3a 7b  |.244.0.154\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-55k7v",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-55k7v",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "k8sconformance",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193219,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193219,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193219,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.67.2",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.67.2"
        }
      },
      PodIP: (string) (len=12) "10.244.0.154",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.0.154"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853193218,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63853193219,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=127) "docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=73) "docker://f7770c5e502b4645d42f2bf382b56283a22cfbd39749244c7be324845d0b9246",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun  5 14:07:05.028: INFO: Pod "webserver-deployment-557759b7c7-87r8v" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-87r8v",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4944",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e0990fce-08ed-4d4c-a928-2dc993af1897",
      ResourceVersion: (string) (len=5) "21710",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853193223,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "41a47c7b-8d0c-47ce-a7b4-7e6f14fcbcc2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 31  61 34 37 63 37 62 2d 38  |d\":\"41a47c7b-8|
              00000090  64 30 63 2d 34 37 63 65  2d 61 37 62 34 2d 37 65  |d0c-47ce-a7b4-7e|
              000000a0  36 66 31 34 66 63 62 63  63 32 5c 22 7d 22 3a 7b  |6f14fcbcc2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193224,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 31  34 39 5c 22 7d 22 3a 7b  |.244.1.149\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-49p5r",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-49p5r",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "k8sconformance-m02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193224,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193224,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193224,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.67.3",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.67.3"
        }
      },
      PodIP: (string) (len=12) "10.244.1.149",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.1.149"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853193223,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63853193223,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=127) "docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=73) "docker://af072d71135201c320c40530384a56e734299585b33b681159b7185ab9ccc736",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun  5 14:07:05.029: INFO: Pod "webserver-deployment-557759b7c7-9526l" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-9526l",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4944",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4e1f462a-e758-4c8f-b681-386da7ae0f79",
      ResourceVersion: (string) (len=5) "21414",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853193218,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "41a47c7b-8d0c-47ce-a7b4-7e6f14fcbcc2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 31  61 34 37 63 37 62 2d 38  |d\":\"41a47c7b-8|
              00000090  64 30 63 2d 34 37 63 65  2d 61 37 62 34 2d 37 65  |d0c-47ce-a7b4-7e|
              000000a0  36 66 31 34 66 63 62 63  63 32 5c 22 7d 22 3a 7b  |6f14fcbcc2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193219,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 30 2e 31  35 31 5c 22 7d 22 3a 7b  |.244.0.151\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-v8sn5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-v8sn5",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "k8sconformance",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193219,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193219,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193219,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.67.2",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.67.2"
        }
      },
      PodIP: (string) (len=12) "10.244.0.151",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.0.151"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853193218,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63853193219,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=127) "docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=73) "docker://60fe4afa1c8f13660df6714cdcfd477cddc615dea957826031eadc88965b724e",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun  5 14:07:05.030: INFO: Pod "webserver-deployment-557759b7c7-9xdj6" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-9xdj6",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4944",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3e4c676e-9110-4f09-88e9-db2e86f15c39",
      ResourceVersion: (string) (len=5) "21721",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853193223,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "41a47c7b-8d0c-47ce-a7b4-7e6f14fcbcc2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 31  61 34 37 63 37 62 2d 38  |d\":\"41a47c7b-8|
              00000090  64 30 63 2d 34 37 63 65  2d 61 37 62 34 2d 37 65  |d0c-47ce-a7b4-7e|
              000000a0  36 66 31 34 66 63 62 63  63 32 5c 22 7d 22 3a 7b  |6f14fcbcc2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193224,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 31  35 32 5c 22 7d 22 3a 7b  |.244.1.152\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fsgmw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fsgmw",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "k8sconformance-m02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193224,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193224,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193224,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.67.3",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.67.3"
        }
      },
      PodIP: (string) (len=12) "10.244.1.152",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.1.152"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853193223,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63853193223,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=127) "docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=73) "docker://b9ca54f98d806f307fa414675493addbb495f8e5020d1041e2e6216ddfb42049",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun  5 14:07:05.031: INFO: Pod "webserver-deployment-557759b7c7-bdvjr" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-bdvjr",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4944",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fcd775a0-fead-41e5-b052-60c5ba050306",
      ResourceVersion: (string) (len=5) "21609",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853193223,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "41a47c7b-8d0c-47ce-a7b4-7e6f14fcbcc2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 31  61 34 37 63 37 62 2d 38  |d\":\"41a47c7b-8|
              00000090  64 30 63 2d 34 37 63 65  2d 61 37 62 34 2d 37 65  |d0c-47ce-a7b4-7e|
              000000a0  36 66 31 34 66 63 62 63  63 32 5c 22 7d 22 3a 7b  |6f14fcbcc2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fbsf4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fbsf4",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "k8sconformance-m02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.67.3",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.67.3"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853193223,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun  5 14:07:05.032: INFO: Pod "webserver-deployment-557759b7c7-f49d5" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-f49d5",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4944",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6826ad58-218c-41eb-bffb-b05c286948f5",
      ResourceVersion: (string) (len=5) "21597",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853193223,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "41a47c7b-8d0c-47ce-a7b4-7e6f14fcbcc2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 31  61 34 37 63 37 62 2d 38  |d\":\"41a47c7b-8|
              00000090  64 30 63 2d 34 37 63 65  2d 61 37 62 34 2d 37 65  |d0c-47ce-a7b4-7e|
              000000a0  36 66 31 34 66 63 62 63  63 32 5c 22 7d 22 3a 7b  |6f14fcbcc2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ppdfq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ppdfq",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "k8sconformance",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.67.2",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.67.2"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853193223,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun  5 14:07:05.033: INFO: Pod "webserver-deployment-557759b7c7-fxmm8" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-fxmm8",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4944",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "89805a82-757c-4e48-9317-1ff37078cd6e",
      ResourceVersion: (string) (len=5) "21432",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853193218,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "41a47c7b-8d0c-47ce-a7b4-7e6f14fcbcc2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 31  61 34 37 63 37 62 2d 38  |d\":\"41a47c7b-8|
              00000090  64 30 63 2d 34 37 63 65  2d 61 37 62 34 2d 37 65  |d0c-47ce-a7b4-7e|
              000000a0  36 66 31 34 66 63 62 63  63 32 5c 22 7d 22 3a 7b  |6f14fcbcc2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193219,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 31  34 33 5c 22 7d 22 3a 7b  |.244.1.143\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-92n9c",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-92n9c",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "k8sconformance-m02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193219,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193219,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193219,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.67.3",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.67.3"
        }
      },
      PodIP: (string) (len=12) "10.244.1.143",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.1.143"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853193218,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63853193219,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=127) "docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=73) "docker://aba86587c6667a4203175838462fa18f794393fe057f1f7e59075d73d3f57c8c",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun  5 14:07:05.033: INFO: Pod "webserver-deployment-557759b7c7-kjr6z" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-kjr6z",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4944",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3b08945b-f40c-4c43-8930-a24bcf3f93a4",
      ResourceVersion: (string) (len=5) "21412",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853193218,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "41a47c7b-8d0c-47ce-a7b4-7e6f14fcbcc2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 31  61 34 37 63 37 62 2d 38  |d\":\"41a47c7b-8|
              00000090  64 30 63 2d 34 37 63 65  2d 61 37 62 34 2d 37 65  |d0c-47ce-a7b4-7e|
              000000a0  36 66 31 34 66 63 62 63  63 32 5c 22 7d 22 3a 7b  |6f14fcbcc2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193219,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 30 2e 31  35 35 5c 22 7d 22 3a 7b  |.244.0.155\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4vg27",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4vg27",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "k8sconformance",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193219,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193219,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193219,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.67.2",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.67.2"
        }
      },
      PodIP: (string) (len=12) "10.244.0.155",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.0.155"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853193218,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63853193219,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=127) "docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=73) "docker://653961161fa14cbb7053c5268a0f0a46c3f8db193211dce55cbcf8372a51775e",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun  5 14:07:05.034: INFO: Pod "webserver-deployment-557759b7c7-llmzn" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-llmzn",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4944",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "66e7ace5-36c6-4291-8b46-267cce50ce9a",
      ResourceVersion: (string) (len=5) "21611",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853193223,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "41a47c7b-8d0c-47ce-a7b4-7e6f14fcbcc2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 31  61 34 37 63 37 62 2d 38  |d\":\"41a47c7b-8|
              00000090  64 30 63 2d 34 37 63 65  2d 61 37 62 34 2d 37 65  |d0c-47ce-a7b4-7e|
              000000a0  36 66 31 34 66 63 62 63  63 32 5c 22 7d 22 3a 7b  |6f14fcbcc2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-54f4g",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-54f4g",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "k8sconformance",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.67.2",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.67.2"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853193223,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun  5 14:07:05.035: INFO: Pod "webserver-deployment-557759b7c7-m7qp7" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-m7qp7",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4944",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cc9ed6de-f432-4341-a32f-2374eeae70b5",
      ResourceVersion: (string) (len=5) "21697",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853193223,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "41a47c7b-8d0c-47ce-a7b4-7e6f14fcbcc2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 31  61 34 37 63 37 62 2d 38  |d\":\"41a47c7b-8|
              00000090  64 30 63 2d 34 37 63 65  2d 61 37 62 34 2d 37 65  |d0c-47ce-a7b4-7e|
              000000a0  36 66 31 34 66 63 62 63  63 32 5c 22 7d 22 3a 7b  |6f14fcbcc2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193224,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 30 2e 31  36 31 5c 22 7d 22 3a 7b  |.244.0.161\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6qnkb",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6qnkb",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "k8sconformance",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193224,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193224,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193224,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.67.2",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.67.2"
        }
      },
      PodIP: (string) (len=12) "10.244.0.161",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.0.161"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853193223,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63853193223,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=127) "docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=73) "docker://bc2bccfb2f33ef8019aa9a64166a6ac5aa98dae0f0ea676d91e9a74efbf8973d",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun  5 14:07:05.036: INFO: Pod "webserver-deployment-557759b7c7-nrptn" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-nrptn",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4944",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fbdbe127-843d-4695-a762-66c8b4ba8972",
      ResourceVersion: (string) (len=5) "21702",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853193223,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "41a47c7b-8d0c-47ce-a7b4-7e6f14fcbcc2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 31  61 34 37 63 37 62 2d 38  |d\":\"41a47c7b-8|
              00000090  64 30 63 2d 34 37 63 65  2d 61 37 62 34 2d 37 65  |d0c-47ce-a7b4-7e|
              000000a0  36 66 31 34 66 63 62 63  63 32 5c 22 7d 22 3a 7b  |6f14fcbcc2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193224,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 30 2e 31  36 36 5c 22 7d 22 3a 7b  |.244.0.166\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9x8bm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9x8bm",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "k8sconformance",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193224,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193224,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193224,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.67.2",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.67.2"
        }
      },
      PodIP: (string) (len=12) "10.244.0.166",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.0.166"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853193223,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63853193223,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=127) "docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=73) "docker://d8909998ff2aa58d104d4b93d2bd912a5f490b7f5ca6d4fd9955ea7e7548e452",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun  5 14:07:05.036: INFO: Pod "webserver-deployment-557759b7c7-rlkw7" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-rlkw7",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4944",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b105b4a3-ca86-4314-9d8d-9512125c2746",
      ResourceVersion: (string) (len=5) "21625",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853193223,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "41a47c7b-8d0c-47ce-a7b4-7e6f14fcbcc2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 31  61 34 37 63 37 62 2d 38  |d\":\"41a47c7b-8|
              00000090  64 30 63 2d 34 37 63 65  2d 61 37 62 34 2d 37 65  |d0c-47ce-a7b4-7e|
              000000a0  36 66 31 34 66 63 62 63  63 32 5c 22 7d 22 3a 7b  |6f14fcbcc2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-m4fz8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-m4fz8",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "k8sconformance-m02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.67.3",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.67.3"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853193223,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun  5 14:07:05.037: INFO: Pod "webserver-deployment-557759b7c7-txj5p" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-txj5p",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4944",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a401cbe2-3b89-413a-9c40-26e06d83c7f8",
      ResourceVersion: (string) (len=5) "21717",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853193223,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "41a47c7b-8d0c-47ce-a7b4-7e6f14fcbcc2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 31  61 34 37 63 37 62 2d 38  |d\":\"41a47c7b-8|
              00000090  64 30 63 2d 34 37 63 65  2d 61 37 62 34 2d 37 65  |d0c-47ce-a7b4-7e|
              000000a0  36 66 31 34 66 63 62 63  63 32 5c 22 7d 22 3a 7b  |6f14fcbcc2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193224,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 31  35 33 5c 22 7d 22 3a 7b  |.244.1.153\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rsfhw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rsfhw",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "k8sconformance-m02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193224,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193224,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193224,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.67.3",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.67.3"
        }
      },
      PodIP: (string) (len=12) "10.244.1.153",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.1.153"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853193223,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63853193223,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=127) "docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=73) "docker://37efda4dcc2c4c8de36d541e5ad358936ed44ed818befcfb9fb783f974a44e97",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun  5 14:07:05.038: INFO: Pod "webserver-deployment-557759b7c7-zkncr" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-zkncr",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4944",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4e545770-3e02-4e21-ad6e-9cf8194e4af6",
      ResourceVersion: (string) (len=5) "21437",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853193218,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "41a47c7b-8d0c-47ce-a7b4-7e6f14fcbcc2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 31  61 34 37 63 37 62 2d 38  |d\":\"41a47c7b-8|
              00000090  64 30 63 2d 34 37 63 65  2d 61 37 62 34 2d 37 65  |d0c-47ce-a7b4-7e|
              000000a0  36 66 31 34 66 63 62 63  63 32 5c 22 7d 22 3a 7b  |6f14fcbcc2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193219,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 31  34 34 5c 22 7d 22 3a 7b  |.244.1.144\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-tj5d2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-tj5d2",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "k8sconformance-m02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193219,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193219,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193219,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.67.3",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.67.3"
        }
      },
      PodIP: (string) (len=12) "10.244.1.144",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.1.144"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853193218,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63853193219,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=127) "docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=73) "docker://b00394359a28562814759fc08d0f73be7658cfabbd8129e7bc69e3389977c50b",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun  5 14:07:05.040: INFO: Pod "webserver-deployment-557759b7c7-zttjk" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-zttjk",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4944",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4b25ca21-2c09-4b26-8d81-aee7e3207666",
      ResourceVersion: (string) (len=5) "21417",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853193218,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "41a47c7b-8d0c-47ce-a7b4-7e6f14fcbcc2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 31  61 34 37 63 37 62 2d 38  |d\":\"41a47c7b-8|
              00000090  64 30 63 2d 34 37 63 65  2d 61 37 62 34 2d 37 65  |d0c-47ce-a7b4-7e|
              000000a0  36 66 31 34 66 63 62 63  63 32 5c 22 7d 22 3a 7b  |6f14fcbcc2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193219,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 31  34 35 5c 22 7d 22 3a 7b  |.244.1.145\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-p9rxv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-p9rxv",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "k8sconformance-m02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193219,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193219,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193219,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.67.3",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.67.3"
        }
      },
      PodIP: (string) (len=12) "10.244.1.145",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.1.145"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853193218,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63853193219,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=127) "docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=73) "docker://9661d5426a522bcfaf6c0f195a588367bc63b0291e0567185bf2cbeb1ee4427e",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun  5 14:07:05.041: INFO: Pod "webserver-deployment-557759b7c7-zx6gq" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-zx6gq",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4944",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6d894ca2-8154-4fdf-bd4c-1a864b89aef4",
      ResourceVersion: (string) (len=5) "21430",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853193218,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "41a47c7b-8d0c-47ce-a7b4-7e6f14fcbcc2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 31  61 34 37 63 37 62 2d 38  |d\":\"41a47c7b-8|
              00000090  64 30 63 2d 34 37 63 65  2d 61 37 62 34 2d 37 65  |d0c-47ce-a7b4-7e|
              000000a0  36 66 31 34 66 63 62 63  63 32 5c 22 7d 22 3a 7b  |6f14fcbcc2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193219,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 30 2e 31  35 32 5c 22 7d 22 3a 7b  |.244.0.152\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lfgbl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lfgbl",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "k8sconformance",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193219,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193219,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193219,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.67.2",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.67.2"
        }
      },
      PodIP: (string) (len=12) "10.244.0.152",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.0.152"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853193218,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63853193219,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=127) "docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=73) "docker://55876f1ac48fa402b03a14b15013cb453e75a6e925e1a68062855da0511e50b7",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun  5 14:07:05.043: INFO: Pod "webserver-deployment-9b4f5bf69-4888c" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-4888c",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-4944",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cdfd2a42-b159-4cb1-bb21-48b25106643e",
      ResourceVersion: (string) (len=5) "21624",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853193223,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "afe02e10-1d4b-4fc8-8f9b-1823021cab29",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 66  65 30 32 65 31 30 2d 31  |d\":\"afe02e10-1|
              00000090  64 34 62 2d 34 66 63 38  2d 38 66 39 62 2d 31 38  |d4b-4fc8-8f9b-18|
              000000a0  32 33 30 32 31 63 61 62  32 39 5c 22 7d 22 3a 7b  |23021cab29\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-b4wjh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-b4wjh",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "k8sconformance",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.67.2",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.67.2"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853193223,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun  5 14:07:05.045: INFO: Pod "webserver-deployment-9b4f5bf69-6lgrv" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-6lgrv",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-4944",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "047d5b19-c730-445b-889d-ccf0f6ccede7",
      ResourceVersion: (string) (len=5) "21515",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853193220,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "afe02e10-1d4b-4fc8-8f9b-1823021cab29",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193220,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 66  65 30 32 65 31 30 2d 31  |d\":\"afe02e10-1|
              00000090  64 34 62 2d 34 66 63 38  2d 38 66 39 62 2d 31 38  |d4b-4fc8-8f9b-18|
              000000a0  32 33 30 32 31 63 61 62  32 39 5c 22 7d 22 3a 7b  |23021cab29\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193222,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=706) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 32 34  |:{\"ip\":\"10.24|
              00000290  34 2e 30 2e 31 35 36 5c  22 7d 22 3a 7b 22 2e 22  |4.0.156\"}":{"."|
              000002a0  3a 7b 7d 2c 22 66 3a 69  70 22 3a 7b 7d 7d 7d 2c  |:{},"f:ip":{}}},|
              000002b0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000002c0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-s6qbl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-s6qbl",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "k8sconformance",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193222,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193220,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193220,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193220,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193220,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.67.2",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.67.2"
        }
      },
      PodIP: (string) (len=12) "10.244.0.156",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.0.156"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853193220,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=169) "Error response from daemon: pull access denied for webserver, repository does not exist or may require 'docker login': denied: requested access to the resource is denied"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun  5 14:07:05.046: INFO: Pod "webserver-deployment-9b4f5bf69-6pwff" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-6pwff",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-4944",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ea93330b-165b-4d76-b3cf-8cf209e48488",
      ResourceVersion: (string) (len=5) "21605",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853193223,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "afe02e10-1d4b-4fc8-8f9b-1823021cab29",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 66  65 30 32 65 31 30 2d 31  |d\":\"afe02e10-1|
              00000090  64 34 62 2d 34 66 63 38  2d 38 66 39 62 2d 31 38  |d4b-4fc8-8f9b-18|
              000000a0  32 33 30 32 31 63 61 62  32 39 5c 22 7d 22 3a 7b  |23021cab29\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ftswn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ftswn",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "k8sconformance-m02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.67.3",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.67.3"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853193223,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun  5 14:07:05.047: INFO: Pod "webserver-deployment-9b4f5bf69-7bhcx" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-7bhcx",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-4944",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c2c5506d-b0b7-4c20-9c60-39e0a8a5c402",
      ResourceVersion: (string) (len=5) "21524",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853193220,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "afe02e10-1d4b-4fc8-8f9b-1823021cab29",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193220,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 66  65 30 32 65 31 30 2d 31  |d\":\"afe02e10-1|
              00000090  64 34 62 2d 34 66 63 38  2d 38 66 39 62 2d 31 38  |d4b-4fc8-8f9b-18|
              000000a0  32 33 30 32 31 63 61 62  32 39 5c 22 7d 22 3a 7b  |23021cab29\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193222,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=706) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 32 34  |:{\"ip\":\"10.24|
              00000290  34 2e 31 2e 31 34 38 5c  22 7d 22 3a 7b 22 2e 22  |4.1.148\"}":{"."|
              000002a0  3a 7b 7d 2c 22 66 3a 69  70 22 3a 7b 7d 7d 7d 2c  |:{},"f:ip":{}}},|
              000002b0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000002c0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-45xwp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-45xwp",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "k8sconformance-m02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193222,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193220,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193220,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193220,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193220,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.67.3",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.67.3"
        }
      },
      PodIP: (string) (len=12) "10.244.1.148",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.1.148"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853193220,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=169) "Error response from daemon: pull access denied for webserver, repository does not exist or may require 'docker login': denied: requested access to the resource is denied"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun  5 14:07:05.049: INFO: Pod "webserver-deployment-9b4f5bf69-7l4w5" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-7l4w5",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-4944",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1620e12f-3aa1-4952-a055-5ac29439b37b",
      ResourceVersion: (string) (len=5) "21573",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853193223,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "afe02e10-1d4b-4fc8-8f9b-1823021cab29",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 66  65 30 32 65 31 30 2d 31  |d\":\"afe02e10-1|
              00000090  64 34 62 2d 34 66 63 38  2d 38 66 39 62 2d 31 38  |d4b-4fc8-8f9b-18|
              000000a0  32 33 30 32 31 63 61 62  32 39 5c 22 7d 22 3a 7b  |23021cab29\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4wfnp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4wfnp",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "k8sconformance",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.67.2",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.67.2"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853193223,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun  5 14:07:05.050: INFO: Pod "webserver-deployment-9b4f5bf69-956j4" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-956j4",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-4944",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3f010500-e629-41d3-9568-1bcbe57807f8",
      ResourceVersion: (string) (len=5) "21613",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853193223,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "afe02e10-1d4b-4fc8-8f9b-1823021cab29",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 66  65 30 32 65 31 30 2d 31  |d\":\"afe02e10-1|
              00000090  64 34 62 2d 34 66 63 38  2d 38 66 39 62 2d 31 38  |d4b-4fc8-8f9b-18|
              000000a0  32 33 30 32 31 63 61 62  32 39 5c 22 7d 22 3a 7b  |23021cab29\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-kz84m",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-kz84m",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "k8sconformance-m02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.67.3",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.67.3"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853193223,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun  5 14:07:05.051: INFO: Pod "webserver-deployment-9b4f5bf69-br7nd" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-br7nd",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-4944",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "057fc196-b66a-4e4b-ad8f-32ce87947021",
      ResourceVersion: (string) (len=5) "21517",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853193221,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "afe02e10-1d4b-4fc8-8f9b-1823021cab29",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193221,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 66  65 30 32 65 31 30 2d 31  |d\":\"afe02e10-1|
              00000090  64 34 62 2d 34 66 63 38  2d 38 66 39 62 2d 31 38  |d4b-4fc8-8f9b-18|
              000000a0  32 33 30 32 31 63 61 62  32 39 5c 22 7d 22 3a 7b  |23021cab29\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193222,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=706) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 32 34  |:{\"ip\":\"10.24|
              00000290  34 2e 31 2e 31 34 37 5c  22 7d 22 3a 7b 22 2e 22  |4.1.147\"}":{"."|
              000002a0  3a 7b 7d 2c 22 66 3a 69  70 22 3a 7b 7d 7d 7d 2c  |:{},"f:ip":{}}},|
              000002b0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000002c0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-tw2pw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-tw2pw",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "k8sconformance-m02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193222,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193221,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193221,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193221,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193221,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.67.3",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.67.3"
        }
      },
      PodIP: (string) (len=12) "10.244.1.147",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.1.147"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853193221,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=169) "Error response from daemon: pull access denied for webserver, repository does not exist or may require 'docker login': denied: requested access to the resource is denied"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun  5 14:07:05.053: INFO: Pod "webserver-deployment-9b4f5bf69-cf55v" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-cf55v",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-4944",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f9a167f7-ada9-45a3-9d96-db7a18669e8b",
      ResourceVersion: (string) (len=5) "21520",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853193220,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "afe02e10-1d4b-4fc8-8f9b-1823021cab29",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193220,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 66  65 30 32 65 31 30 2d 31  |d\":\"afe02e10-1|
              00000090  64 34 62 2d 34 66 63 38  2d 38 66 39 62 2d 31 38  |d4b-4fc8-8f9b-18|
              000000a0  32 33 30 32 31 63 61 62  32 39 5c 22 7d 22 3a 7b  |23021cab29\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193222,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=706) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 32 34  |:{\"ip\":\"10.24|
              00000290  34 2e 31 2e 31 34 36 5c  22 7d 22 3a 7b 22 2e 22  |4.1.146\"}":{"."|
              000002a0  3a 7b 7d 2c 22 66 3a 69  70 22 3a 7b 7d 7d 7d 2c  |:{},"f:ip":{}}},|
              000002b0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000002c0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-msfft",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-msfft",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "k8sconformance-m02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193222,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193220,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193220,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193220,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193220,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.67.3",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.67.3"
        }
      },
      PodIP: (string) (len=12) "10.244.1.146",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.1.146"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853193220,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=169) "Error response from daemon: pull access denied for webserver, repository does not exist or may require 'docker login': denied: requested access to the resource is denied"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun  5 14:07:05.054: INFO: Pod "webserver-deployment-9b4f5bf69-n8f87" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-n8f87",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-4944",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ea1da3cc-181b-41cd-9f2a-8ab0c1468081",
      ResourceVersion: (string) (len=5) "21511",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853193221,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "afe02e10-1d4b-4fc8-8f9b-1823021cab29",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193221,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 66  65 30 32 65 31 30 2d 31  |d\":\"afe02e10-1|
              00000090  64 34 62 2d 34 66 63 38  2d 38 66 39 62 2d 31 38  |d4b-4fc8-8f9b-18|
              000000a0  32 33 30 32 31 63 61 62  32 39 5c 22 7d 22 3a 7b  |23021cab29\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193222,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=706) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 32 34  |:{\"ip\":\"10.24|
              00000290  34 2e 30 2e 31 35 37 5c  22 7d 22 3a 7b 22 2e 22  |4.0.157\"}":{"."|
              000002a0  3a 7b 7d 2c 22 66 3a 69  70 22 3a 7b 7d 7d 7d 2c  |:{},"f:ip":{}}},|
              000002b0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000002c0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xfst5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xfst5",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "k8sconformance",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193222,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193221,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193221,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193221,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193221,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.67.2",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.67.2"
        }
      },
      PodIP: (string) (len=12) "10.244.0.157",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.0.157"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853193221,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=169) "Error response from daemon: pull access denied for webserver, repository does not exist or may require 'docker login': denied: requested access to the resource is denied"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun  5 14:07:05.055: INFO: Pod "webserver-deployment-9b4f5bf69-r769j" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-r769j",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-4944",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6270ed54-63f0-40c2-b48d-1d474f3d796c",
      ResourceVersion: (string) (len=5) "21602",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853193223,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "afe02e10-1d4b-4fc8-8f9b-1823021cab29",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 66  65 30 32 65 31 30 2d 31  |d\":\"afe02e10-1|
              00000090  64 34 62 2d 34 66 63 38  2d 38 66 39 62 2d 31 38  |d4b-4fc8-8f9b-18|
              000000a0  32 33 30 32 31 63 61 62  32 39 5c 22 7d 22 3a 7b  |23021cab29\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5mbgf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5mbgf",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "k8sconformance",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.67.2",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.67.2"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853193223,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun  5 14:07:05.057: INFO: Pod "webserver-deployment-9b4f5bf69-szsps" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-szsps",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-4944",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7b8c8d8b-1b8c-42d2-86cf-22af576bf201",
      ResourceVersion: (string) (len=5) "21623",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853193223,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "afe02e10-1d4b-4fc8-8f9b-1823021cab29",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 66  65 30 32 65 31 30 2d 31  |d\":\"afe02e10-1|
              00000090  64 34 62 2d 34 66 63 38  2d 38 66 39 62 2d 31 38  |d4b-4fc8-8f9b-18|
              000000a0  32 33 30 32 31 63 61 62  32 39 5c 22 7d 22 3a 7b  |23021cab29\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zdf4l",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zdf4l",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "k8sconformance-m02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.67.3",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.67.3"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853193223,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun  5 14:07:05.058: INFO: Pod "webserver-deployment-9b4f5bf69-z8t2h" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-z8t2h",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-4944",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6b4df816-a600-4f49-970f-ce238602896e",
      ResourceVersion: (string) (len=5) "21583",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853193223,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "afe02e10-1d4b-4fc8-8f9b-1823021cab29",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 66  65 30 32 65 31 30 2d 31  |d\":\"afe02e10-1|
              00000090  64 34 62 2d 34 66 63 38  2d 38 66 39 62 2d 31 38  |d4b-4fc8-8f9b-18|
              000000a0  32 33 30 32 31 63 61 62  32 39 5c 22 7d 22 3a 7b  |23021cab29\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jjtlj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jjtlj",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "k8sconformance-m02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.67.3",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.67.3"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853193223,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun  5 14:07:05.059: INFO: Pod "webserver-deployment-9b4f5bf69-z95bp" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-z95bp",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-4944",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0c383016-8bb6-4646-82e9-b50c8c0dd668",
      ResourceVersion: (string) (len=5) "21588",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853193223,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "afe02e10-1d4b-4fc8-8f9b-1823021cab29",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 66  65 30 32 65 31 30 2d 31  |d\":\"afe02e10-1|
              00000090  64 34 62 2d 34 66 63 38  2d 38 66 39 62 2d 31 38  |d4b-4fc8-8f9b-18|
              000000a0  32 33 30 32 31 63 61 62  32 39 5c 22 7d 22 3a 7b  |23021cab29\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-tmcj9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-tmcj9",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "k8sconformance",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.67.2",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.67.2"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853193223,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun  5 14:07:05.060: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-4944" for this suite. @ 06/05/24 14:07:05.062
• [6.156 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:646
  STEP: Creating a kubernetes client @ 06/05/24 14:07:05.069
  Jun  5 14:07:05.069: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename webhook @ 06/05/24 14:07:05.069
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:07:05.079
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:07:05.082
  STEP: Setting up server cert @ 06/05/24 14:07:05.097
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/05/24 14:07:05.384
  STEP: Deploying the webhook pod @ 06/05/24 14:07:05.388
  STEP: Wait for the deployment to be ready @ 06/05/24 14:07:05.395
  Jun  5 14:07:05.398: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 06/05/24 14:07:07.41
  STEP: Verifying the service has paired with the endpoint @ 06/05/24 14:07:07.423
  Jun  5 14:07:08.424: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 06/05/24 14:07:08.474
  STEP: Creating a configMap that should be mutated @ 06/05/24 14:07:08.483
  STEP: Deleting the collection of validation webhooks @ 06/05/24 14:07:08.499
  STEP: Creating a configMap that should not be mutated @ 06/05/24 14:07:08.521
  Jun  5 14:07:08.546: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5684" for this suite. @ 06/05/24 14:07:08.548
  STEP: Destroying namespace "webhook-markers-7069" for this suite. @ 06/05/24 14:07:08.552
• [3.486 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:119
  STEP: Creating a kubernetes client @ 06/05/24 14:07:08.555
  Jun  5 14:07:08.555: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename webhook @ 06/05/24 14:07:08.556
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:07:08.562
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:07:08.564
  STEP: Setting up server cert @ 06/05/24 14:07:08.576
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/05/24 14:07:08.996
  STEP: Deploying the webhook pod @ 06/05/24 14:07:08.999
  STEP: Wait for the deployment to be ready @ 06/05/24 14:07:09.007
  Jun  5 14:07:09.010: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 06/05/24 14:07:11.031
  STEP: Verifying the service has paired with the endpoint @ 06/05/24 14:07:11.046
  Jun  5 14:07:12.047: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 06/05/24 14:07:12.05
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 06/05/24 14:07:12.051
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 06/05/24 14:07:12.051
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 06/05/24 14:07:12.051
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 06/05/24 14:07:12.051
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 06/05/24 14:07:12.051
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 06/05/24 14:07:12.052
  Jun  5 14:07:12.069: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5473" for this suite. @ 06/05/24 14:07:12.071
  STEP: Destroying namespace "webhook-markers-5541" for this suite. @ 06/05/24 14:07:12.075
• [3.524 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:136
  STEP: Creating a kubernetes client @ 06/05/24 14:07:12.079
  Jun  5 14:07:12.079: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 06/05/24 14:07:12.08
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:07:12.086
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:07:12.087
  STEP: create the container to handle the HTTPGet hook request. @ 06/05/24 14:07:12.09
  STEP: create the pod with lifecycle hook @ 06/05/24 14:07:14.107
  STEP: check poststart hook @ 06/05/24 14:07:16.126
  STEP: delete the pod with lifecycle hook @ 06/05/24 14:07:16.133
  Jun  5 14:07:18.151: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-5238" for this suite. @ 06/05/24 14:07:18.154
• [6.081 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:137
  STEP: Creating a kubernetes client @ 06/05/24 14:07:18.161
  Jun  5 14:07:18.161: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename dns @ 06/05/24 14:07:18.162
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:07:18.172
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:07:18.175
  STEP: Creating a test headless service @ 06/05/24 14:07:18.178
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-2418.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-2418.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-2418.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-2418.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-2418.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-2418.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-2418.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-2418.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-2418.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-2418.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-2418.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-2418.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 205.111.102.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.102.111.205_udp@PTR;check="$$(dig +tcp +noall +answer +search 205.111.102.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.102.111.205_tcp@PTR;sleep 1; done
   @ 06/05/24 14:07:18.197
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-2418.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-2418.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-2418.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-2418.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-2418.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-2418.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-2418.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-2418.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-2418.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-2418.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-2418.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-2418.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 205.111.102.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.102.111.205_udp@PTR;check="$$(dig +tcp +noall +answer +search 205.111.102.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.102.111.205_tcp@PTR;sleep 1; done
   @ 06/05/24 14:07:18.197
  STEP: creating a pod to probe DNS @ 06/05/24 14:07:18.197
  STEP: submitting the pod to kubernetes @ 06/05/24 14:07:18.197
  STEP: retrieving the pod @ 06/05/24 14:07:20.213
  STEP: looking for the results for each expected name from probers @ 06/05/24 14:07:20.214
  Jun  5 14:07:20.218: INFO: Unable to read wheezy_udp@dns-test-service.dns-2418.svc.cluster.local from pod dns-2418/dns-test-aee74213-d205-445b-a45e-37f0ddb8e117: the server could not find the requested resource (get pods dns-test-aee74213-d205-445b-a45e-37f0ddb8e117)
  Jun  5 14:07:20.220: INFO: Unable to read wheezy_tcp@dns-test-service.dns-2418.svc.cluster.local from pod dns-2418/dns-test-aee74213-d205-445b-a45e-37f0ddb8e117: the server could not find the requested resource (get pods dns-test-aee74213-d205-445b-a45e-37f0ddb8e117)
  Jun  5 14:07:20.222: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-2418.svc.cluster.local from pod dns-2418/dns-test-aee74213-d205-445b-a45e-37f0ddb8e117: the server could not find the requested resource (get pods dns-test-aee74213-d205-445b-a45e-37f0ddb8e117)
  Jun  5 14:07:20.224: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-2418.svc.cluster.local from pod dns-2418/dns-test-aee74213-d205-445b-a45e-37f0ddb8e117: the server could not find the requested resource (get pods dns-test-aee74213-d205-445b-a45e-37f0ddb8e117)
  Jun  5 14:07:20.235: INFO: Unable to read jessie_udp@dns-test-service.dns-2418.svc.cluster.local from pod dns-2418/dns-test-aee74213-d205-445b-a45e-37f0ddb8e117: the server could not find the requested resource (get pods dns-test-aee74213-d205-445b-a45e-37f0ddb8e117)
  Jun  5 14:07:20.247: INFO: Unable to read jessie_tcp@dns-test-service.dns-2418.svc.cluster.local from pod dns-2418/dns-test-aee74213-d205-445b-a45e-37f0ddb8e117: the server could not find the requested resource (get pods dns-test-aee74213-d205-445b-a45e-37f0ddb8e117)
  Jun  5 14:07:20.254: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-2418.svc.cluster.local from pod dns-2418/dns-test-aee74213-d205-445b-a45e-37f0ddb8e117: the server could not find the requested resource (get pods dns-test-aee74213-d205-445b-a45e-37f0ddb8e117)
  Jun  5 14:07:20.265: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-2418.svc.cluster.local from pod dns-2418/dns-test-aee74213-d205-445b-a45e-37f0ddb8e117: the server could not find the requested resource (get pods dns-test-aee74213-d205-445b-a45e-37f0ddb8e117)
  Jun  5 14:07:20.271: INFO: Lookups using dns-2418/dns-test-aee74213-d205-445b-a45e-37f0ddb8e117 failed for: [wheezy_udp@dns-test-service.dns-2418.svc.cluster.local wheezy_tcp@dns-test-service.dns-2418.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-2418.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-2418.svc.cluster.local jessie_udp@dns-test-service.dns-2418.svc.cluster.local jessie_tcp@dns-test-service.dns-2418.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-2418.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-2418.svc.cluster.local]

  Jun  5 14:07:20.275: INFO: Pod client logs for webserver: 
  Jun  5 14:07:20.278: INFO: Pod client logs for querier: 
  Jun  5 14:07:20.281: INFO: Pod client logs for jessie-querier: 
  Jun  5 14:07:25.223: INFO: Unable to read wheezy_udp@dns-test-service.dns-2418.svc.cluster.local from pod dns-2418/dns-test-aee74213-d205-445b-a45e-37f0ddb8e117: the server could not find the requested resource (get pods dns-test-aee74213-d205-445b-a45e-37f0ddb8e117)
  Jun  5 14:07:25.226: INFO: Unable to read wheezy_tcp@dns-test-service.dns-2418.svc.cluster.local from pod dns-2418/dns-test-aee74213-d205-445b-a45e-37f0ddb8e117: the server could not find the requested resource (get pods dns-test-aee74213-d205-445b-a45e-37f0ddb8e117)
  Jun  5 14:07:25.228: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-2418.svc.cluster.local from pod dns-2418/dns-test-aee74213-d205-445b-a45e-37f0ddb8e117: the server could not find the requested resource (get pods dns-test-aee74213-d205-445b-a45e-37f0ddb8e117)
  Jun  5 14:07:25.230: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-2418.svc.cluster.local from pod dns-2418/dns-test-aee74213-d205-445b-a45e-37f0ddb8e117: the server could not find the requested resource (get pods dns-test-aee74213-d205-445b-a45e-37f0ddb8e117)
  Jun  5 14:07:25.241: INFO: Unable to read jessie_udp@dns-test-service.dns-2418.svc.cluster.local from pod dns-2418/dns-test-aee74213-d205-445b-a45e-37f0ddb8e117: the server could not find the requested resource (get pods dns-test-aee74213-d205-445b-a45e-37f0ddb8e117)
  Jun  5 14:07:25.243: INFO: Unable to read jessie_tcp@dns-test-service.dns-2418.svc.cluster.local from pod dns-2418/dns-test-aee74213-d205-445b-a45e-37f0ddb8e117: the server could not find the requested resource (get pods dns-test-aee74213-d205-445b-a45e-37f0ddb8e117)
  Jun  5 14:07:25.245: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-2418.svc.cluster.local from pod dns-2418/dns-test-aee74213-d205-445b-a45e-37f0ddb8e117: the server could not find the requested resource (get pods dns-test-aee74213-d205-445b-a45e-37f0ddb8e117)
  Jun  5 14:07:25.248: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-2418.svc.cluster.local from pod dns-2418/dns-test-aee74213-d205-445b-a45e-37f0ddb8e117: the server could not find the requested resource (get pods dns-test-aee74213-d205-445b-a45e-37f0ddb8e117)
  Jun  5 14:07:25.256: INFO: Lookups using dns-2418/dns-test-aee74213-d205-445b-a45e-37f0ddb8e117 failed for: [wheezy_udp@dns-test-service.dns-2418.svc.cluster.local wheezy_tcp@dns-test-service.dns-2418.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-2418.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-2418.svc.cluster.local jessie_udp@dns-test-service.dns-2418.svc.cluster.local jessie_tcp@dns-test-service.dns-2418.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-2418.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-2418.svc.cluster.local]

  Jun  5 14:07:25.263: INFO: Pod client logs for webserver: 
  Jun  5 14:07:25.270: INFO: Pod client logs for querier: 
  Jun  5 14:07:25.276: INFO: Pod client logs for jessie-querier: 
  Jun  5 14:07:30.222: INFO: Unable to read wheezy_udp@dns-test-service.dns-2418.svc.cluster.local from pod dns-2418/dns-test-aee74213-d205-445b-a45e-37f0ddb8e117: the server could not find the requested resource (get pods dns-test-aee74213-d205-445b-a45e-37f0ddb8e117)
  Jun  5 14:07:30.225: INFO: Unable to read wheezy_tcp@dns-test-service.dns-2418.svc.cluster.local from pod dns-2418/dns-test-aee74213-d205-445b-a45e-37f0ddb8e117: the server could not find the requested resource (get pods dns-test-aee74213-d205-445b-a45e-37f0ddb8e117)
  Jun  5 14:07:30.227: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-2418.svc.cluster.local from pod dns-2418/dns-test-aee74213-d205-445b-a45e-37f0ddb8e117: the server could not find the requested resource (get pods dns-test-aee74213-d205-445b-a45e-37f0ddb8e117)
  Jun  5 14:07:30.229: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-2418.svc.cluster.local from pod dns-2418/dns-test-aee74213-d205-445b-a45e-37f0ddb8e117: the server could not find the requested resource (get pods dns-test-aee74213-d205-445b-a45e-37f0ddb8e117)
  Jun  5 14:07:30.239: INFO: Unable to read jessie_udp@dns-test-service.dns-2418.svc.cluster.local from pod dns-2418/dns-test-aee74213-d205-445b-a45e-37f0ddb8e117: the server could not find the requested resource (get pods dns-test-aee74213-d205-445b-a45e-37f0ddb8e117)
  Jun  5 14:07:30.241: INFO: Unable to read jessie_tcp@dns-test-service.dns-2418.svc.cluster.local from pod dns-2418/dns-test-aee74213-d205-445b-a45e-37f0ddb8e117: the server could not find the requested resource (get pods dns-test-aee74213-d205-445b-a45e-37f0ddb8e117)
  Jun  5 14:07:30.243: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-2418.svc.cluster.local from pod dns-2418/dns-test-aee74213-d205-445b-a45e-37f0ddb8e117: the server could not find the requested resource (get pods dns-test-aee74213-d205-445b-a45e-37f0ddb8e117)
  Jun  5 14:07:30.245: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-2418.svc.cluster.local from pod dns-2418/dns-test-aee74213-d205-445b-a45e-37f0ddb8e117: the server could not find the requested resource (get pods dns-test-aee74213-d205-445b-a45e-37f0ddb8e117)
  Jun  5 14:07:30.252: INFO: Lookups using dns-2418/dns-test-aee74213-d205-445b-a45e-37f0ddb8e117 failed for: [wheezy_udp@dns-test-service.dns-2418.svc.cluster.local wheezy_tcp@dns-test-service.dns-2418.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-2418.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-2418.svc.cluster.local jessie_udp@dns-test-service.dns-2418.svc.cluster.local jessie_tcp@dns-test-service.dns-2418.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-2418.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-2418.svc.cluster.local]

  Jun  5 14:07:30.258: INFO: Pod client logs for webserver: 
  Jun  5 14:07:30.265: INFO: Pod client logs for querier: 
  Jun  5 14:07:30.270: INFO: Pod client logs for jessie-querier: 
  Jun  5 14:07:35.224: INFO: Unable to read wheezy_udp@dns-test-service.dns-2418.svc.cluster.local from pod dns-2418/dns-test-aee74213-d205-445b-a45e-37f0ddb8e117: the server could not find the requested resource (get pods dns-test-aee74213-d205-445b-a45e-37f0ddb8e117)
  Jun  5 14:07:35.226: INFO: Unable to read wheezy_tcp@dns-test-service.dns-2418.svc.cluster.local from pod dns-2418/dns-test-aee74213-d205-445b-a45e-37f0ddb8e117: the server could not find the requested resource (get pods dns-test-aee74213-d205-445b-a45e-37f0ddb8e117)
  Jun  5 14:07:35.229: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-2418.svc.cluster.local from pod dns-2418/dns-test-aee74213-d205-445b-a45e-37f0ddb8e117: the server could not find the requested resource (get pods dns-test-aee74213-d205-445b-a45e-37f0ddb8e117)
  Jun  5 14:07:35.231: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-2418.svc.cluster.local from pod dns-2418/dns-test-aee74213-d205-445b-a45e-37f0ddb8e117: the server could not find the requested resource (get pods dns-test-aee74213-d205-445b-a45e-37f0ddb8e117)
  Jun  5 14:07:35.241: INFO: Unable to read jessie_udp@dns-test-service.dns-2418.svc.cluster.local from pod dns-2418/dns-test-aee74213-d205-445b-a45e-37f0ddb8e117: the server could not find the requested resource (get pods dns-test-aee74213-d205-445b-a45e-37f0ddb8e117)
  Jun  5 14:07:35.242: INFO: Unable to read jessie_tcp@dns-test-service.dns-2418.svc.cluster.local from pod dns-2418/dns-test-aee74213-d205-445b-a45e-37f0ddb8e117: the server could not find the requested resource (get pods dns-test-aee74213-d205-445b-a45e-37f0ddb8e117)
  Jun  5 14:07:35.243: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-2418.svc.cluster.local from pod dns-2418/dns-test-aee74213-d205-445b-a45e-37f0ddb8e117: the server could not find the requested resource (get pods dns-test-aee74213-d205-445b-a45e-37f0ddb8e117)
  Jun  5 14:07:35.245: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-2418.svc.cluster.local from pod dns-2418/dns-test-aee74213-d205-445b-a45e-37f0ddb8e117: the server could not find the requested resource (get pods dns-test-aee74213-d205-445b-a45e-37f0ddb8e117)
  Jun  5 14:07:35.250: INFO: Lookups using dns-2418/dns-test-aee74213-d205-445b-a45e-37f0ddb8e117 failed for: [wheezy_udp@dns-test-service.dns-2418.svc.cluster.local wheezy_tcp@dns-test-service.dns-2418.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-2418.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-2418.svc.cluster.local jessie_udp@dns-test-service.dns-2418.svc.cluster.local jessie_tcp@dns-test-service.dns-2418.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-2418.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-2418.svc.cluster.local]

  Jun  5 14:07:35.255: INFO: Pod client logs for webserver: 
  Jun  5 14:07:35.259: INFO: Pod client logs for querier: 
  Jun  5 14:07:35.263: INFO: Pod client logs for jessie-querier: 
  Jun  5 14:07:40.223: INFO: Unable to read wheezy_udp@dns-test-service.dns-2418.svc.cluster.local from pod dns-2418/dns-test-aee74213-d205-445b-a45e-37f0ddb8e117: the server could not find the requested resource (get pods dns-test-aee74213-d205-445b-a45e-37f0ddb8e117)
  Jun  5 14:07:40.227: INFO: Unable to read wheezy_tcp@dns-test-service.dns-2418.svc.cluster.local from pod dns-2418/dns-test-aee74213-d205-445b-a45e-37f0ddb8e117: the server could not find the requested resource (get pods dns-test-aee74213-d205-445b-a45e-37f0ddb8e117)
  Jun  5 14:07:40.229: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-2418.svc.cluster.local from pod dns-2418/dns-test-aee74213-d205-445b-a45e-37f0ddb8e117: the server could not find the requested resource (get pods dns-test-aee74213-d205-445b-a45e-37f0ddb8e117)
  Jun  5 14:07:40.232: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-2418.svc.cluster.local from pod dns-2418/dns-test-aee74213-d205-445b-a45e-37f0ddb8e117: the server could not find the requested resource (get pods dns-test-aee74213-d205-445b-a45e-37f0ddb8e117)
  Jun  5 14:07:40.242: INFO: Unable to read jessie_udp@dns-test-service.dns-2418.svc.cluster.local from pod dns-2418/dns-test-aee74213-d205-445b-a45e-37f0ddb8e117: the server could not find the requested resource (get pods dns-test-aee74213-d205-445b-a45e-37f0ddb8e117)
  Jun  5 14:07:40.245: INFO: Unable to read jessie_tcp@dns-test-service.dns-2418.svc.cluster.local from pod dns-2418/dns-test-aee74213-d205-445b-a45e-37f0ddb8e117: the server could not find the requested resource (get pods dns-test-aee74213-d205-445b-a45e-37f0ddb8e117)
  Jun  5 14:07:40.246: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-2418.svc.cluster.local from pod dns-2418/dns-test-aee74213-d205-445b-a45e-37f0ddb8e117: the server could not find the requested resource (get pods dns-test-aee74213-d205-445b-a45e-37f0ddb8e117)
  Jun  5 14:07:40.248: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-2418.svc.cluster.local from pod dns-2418/dns-test-aee74213-d205-445b-a45e-37f0ddb8e117: the server could not find the requested resource (get pods dns-test-aee74213-d205-445b-a45e-37f0ddb8e117)
  Jun  5 14:07:40.256: INFO: Lookups using dns-2418/dns-test-aee74213-d205-445b-a45e-37f0ddb8e117 failed for: [wheezy_udp@dns-test-service.dns-2418.svc.cluster.local wheezy_tcp@dns-test-service.dns-2418.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-2418.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-2418.svc.cluster.local jessie_udp@dns-test-service.dns-2418.svc.cluster.local jessie_tcp@dns-test-service.dns-2418.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-2418.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-2418.svc.cluster.local]

  Jun  5 14:07:40.262: INFO: Pod client logs for webserver: 
  Jun  5 14:07:40.268: INFO: Pod client logs for querier: 
  Jun  5 14:07:40.274: INFO: Pod client logs for jessie-querier: 
  Jun  5 14:07:45.222: INFO: Unable to read wheezy_udp@dns-test-service.dns-2418.svc.cluster.local from pod dns-2418/dns-test-aee74213-d205-445b-a45e-37f0ddb8e117: the server could not find the requested resource (get pods dns-test-aee74213-d205-445b-a45e-37f0ddb8e117)
  Jun  5 14:07:45.225: INFO: Unable to read wheezy_tcp@dns-test-service.dns-2418.svc.cluster.local from pod dns-2418/dns-test-aee74213-d205-445b-a45e-37f0ddb8e117: the server could not find the requested resource (get pods dns-test-aee74213-d205-445b-a45e-37f0ddb8e117)
  Jun  5 14:07:45.228: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-2418.svc.cluster.local from pod dns-2418/dns-test-aee74213-d205-445b-a45e-37f0ddb8e117: the server could not find the requested resource (get pods dns-test-aee74213-d205-445b-a45e-37f0ddb8e117)
  Jun  5 14:07:45.230: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-2418.svc.cluster.local from pod dns-2418/dns-test-aee74213-d205-445b-a45e-37f0ddb8e117: the server could not find the requested resource (get pods dns-test-aee74213-d205-445b-a45e-37f0ddb8e117)
  Jun  5 14:07:45.241: INFO: Unable to read jessie_udp@dns-test-service.dns-2418.svc.cluster.local from pod dns-2418/dns-test-aee74213-d205-445b-a45e-37f0ddb8e117: the server could not find the requested resource (get pods dns-test-aee74213-d205-445b-a45e-37f0ddb8e117)
  Jun  5 14:07:45.244: INFO: Unable to read jessie_tcp@dns-test-service.dns-2418.svc.cluster.local from pod dns-2418/dns-test-aee74213-d205-445b-a45e-37f0ddb8e117: the server could not find the requested resource (get pods dns-test-aee74213-d205-445b-a45e-37f0ddb8e117)
  Jun  5 14:07:45.246: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-2418.svc.cluster.local from pod dns-2418/dns-test-aee74213-d205-445b-a45e-37f0ddb8e117: the server could not find the requested resource (get pods dns-test-aee74213-d205-445b-a45e-37f0ddb8e117)
  Jun  5 14:07:45.248: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-2418.svc.cluster.local from pod dns-2418/dns-test-aee74213-d205-445b-a45e-37f0ddb8e117: the server could not find the requested resource (get pods dns-test-aee74213-d205-445b-a45e-37f0ddb8e117)
  Jun  5 14:07:45.256: INFO: Lookups using dns-2418/dns-test-aee74213-d205-445b-a45e-37f0ddb8e117 failed for: [wheezy_udp@dns-test-service.dns-2418.svc.cluster.local wheezy_tcp@dns-test-service.dns-2418.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-2418.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-2418.svc.cluster.local jessie_udp@dns-test-service.dns-2418.svc.cluster.local jessie_tcp@dns-test-service.dns-2418.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-2418.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-2418.svc.cluster.local]

  Jun  5 14:07:45.263: INFO: Pod client logs for webserver: 
  Jun  5 14:07:45.270: INFO: Pod client logs for querier: 
  Jun  5 14:07:45.276: INFO: Pod client logs for jessie-querier: 
  Jun  5 14:07:50.253: INFO: DNS probes using dns-2418/dns-test-aee74213-d205-445b-a45e-37f0ddb8e117 succeeded

  STEP: deleting the pod @ 06/05/24 14:07:50.253
  STEP: deleting the test service @ 06/05/24 14:07:50.265
  STEP: deleting the test headless service @ 06/05/24 14:07:50.296
  Jun  5 14:07:50.305: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-2418" for this suite. @ 06/05/24 14:07:50.31
• [32.154 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:199
  STEP: Creating a kubernetes client @ 06/05/24 14:07:50.315
  Jun  5 14:07:50.315: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename custom-resource-definition @ 06/05/24 14:07:50.316
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:07:50.324
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:07:50.326
  STEP: fetching the /apis discovery document @ 06/05/24 14:07:50.327
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 06/05/24 14:07:50.328
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 06/05/24 14:07:50.328
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 06/05/24 14:07:50.328
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 06/05/24 14:07:50.329
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 06/05/24 14:07:50.329
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 06/05/24 14:07:50.329
  Jun  5 14:07:50.329: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-7360" for this suite. @ 06/05/24 14:07:50.331
• [0.018 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 06/05/24 14:07:50.334
  Jun  5 14:07:50.334: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename daemonsets @ 06/05/24 14:07:50.334
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:07:50.343
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:07:50.344
  STEP: Creating simple DaemonSet "daemon-set" @ 06/05/24 14:07:50.352
  STEP: Check that daemon pods launch on every node of the cluster. @ 06/05/24 14:07:50.356
  Jun  5 14:07:50.360: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun  5 14:07:50.360: INFO: Node k8sconformance is running 0 daemon pod, expected 1
  Jun  5 14:07:51.364: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun  5 14:07:51.364: INFO: Node k8sconformance is running 0 daemon pod, expected 1
  Jun  5 14:07:52.364: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Jun  5 14:07:52.364: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 06/05/24 14:07:52.366
  Jun  5 14:07:52.380: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Jun  5 14:07:52.381: INFO: Node k8sconformance-m02 is running 0 daemon pod, expected 1
  Jun  5 14:07:53.383: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Jun  5 14:07:53.383: INFO: Node k8sconformance-m02 is running 0 daemon pod, expected 1
  Jun  5 14:07:54.385: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Jun  5 14:07:54.385: INFO: Node k8sconformance-m02 is running 0 daemon pod, expected 1
  Jun  5 14:07:55.380: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Jun  5 14:07:55.380: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 06/05/24 14:07:55.383
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-1934, will wait for the garbage collector to delete the pods @ 06/05/24 14:07:55.383
  Jun  5 14:07:55.438: INFO: Deleting DaemonSet.extensions daemon-set took: 3.630071ms
  Jun  5 14:07:55.538: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.366393ms
  Jun  5 14:07:57.042: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Jun  5 14:07:57.042: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Jun  5 14:07:57.045: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"22453"},"items":null}

  Jun  5 14:07:57.047: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"22453"},"items":null}

  Jun  5 14:07:57.053: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-1934" for this suite. @ 06/05/24 14:07:57.055
• [6.728 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:962
  STEP: Creating a kubernetes client @ 06/05/24 14:07:57.062
  Jun  5 14:07:57.062: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename statefulset @ 06/05/24 14:07:57.063
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:07:57.074
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:07:57.077
  STEP: Creating service test in namespace statefulset-2556 @ 06/05/24 14:07:57.08
  Jun  5 14:07:57.095: INFO: Found 0 stateful pods, waiting for 1
  Jun  5 14:08:07.098: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 06/05/24 14:08:07.103
  W0605 14:08:07.110387      22 warnings.go:70] unknown field "spec.template.spec.TerminationGracePeriodSeconds"
  Jun  5 14:08:07.117: INFO: Found 1 stateful pods, waiting for 2
  Jun  5 14:08:17.118: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Jun  5 14:08:17.118: INFO: Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 06/05/24 14:08:17.123
  STEP: Delete all of the StatefulSets @ 06/05/24 14:08:17.125
  STEP: Verify that StatefulSets have been deleted @ 06/05/24 14:08:17.131
  Jun  5 14:08:17.134: INFO: Deleting all statefulset in ns statefulset-2556
  Jun  5 14:08:17.147: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-2556" for this suite. @ 06/05/24 14:08:17.152
• [20.100 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Environment:NotInUserNS] [Conformance] [sig-node, NodeConformance, Environment:NotInUserNS, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:79
  STEP: Creating a kubernetes client @ 06/05/24 14:08:17.163
  Jun  5 14:08:17.163: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename sysctl @ 06/05/24 14:08:17.164
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:08:17.184
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:08:17.187
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 06/05/24 14:08:17.188
  STEP: Watching for error events or started pod @ 06/05/24 14:08:17.194
  STEP: Waiting for pod completion @ 06/05/24 14:08:19.199
  STEP: Checking that the pod succeeded @ 06/05/24 14:08:21.21
  STEP: Getting logs from the pod @ 06/05/24 14:08:21.21
  STEP: Checking that the sysctl is actually updated @ 06/05/24 14:08:21.216
  Jun  5 14:08:21.216: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-5834" for this suite. @ 06/05/24 14:08:21.219
• [4.061 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:357
  STEP: Creating a kubernetes client @ 06/05/24 14:08:21.224
  Jun  5 14:08:21.224: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename kubectl @ 06/05/24 14:08:21.225
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:08:21.235
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:08:21.237
  STEP: creating a replication controller @ 06/05/24 14:08:21.24
  Jun  5 14:08:21.240: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=kubectl-5986 create -f -'
  Jun  5 14:08:21.306: INFO: stderr: ""
  Jun  5 14:08:21.306: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 06/05/24 14:08:21.306
  Jun  5 14:08:21.306: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=kubectl-5986 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Jun  5 14:08:21.355: INFO: stderr: ""
  Jun  5 14:08:21.355: INFO: stdout: "update-demo-nautilus-bm5g8 update-demo-nautilus-x2l4k "
  Jun  5 14:08:21.355: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=kubectl-5986 get pods update-demo-nautilus-bm5g8 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jun  5 14:08:21.393: INFO: stderr: ""
  Jun  5 14:08:21.393: INFO: stdout: ""
  Jun  5 14:08:21.393: INFO: update-demo-nautilus-bm5g8 is created but not running
  Jun  5 14:08:26.393: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=kubectl-5986 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Jun  5 14:08:26.444: INFO: stderr: ""
  Jun  5 14:08:26.444: INFO: stdout: "update-demo-nautilus-bm5g8 update-demo-nautilus-x2l4k "
  Jun  5 14:08:26.444: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=kubectl-5986 get pods update-demo-nautilus-bm5g8 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jun  5 14:08:26.482: INFO: stderr: ""
  Jun  5 14:08:26.482: INFO: stdout: ""
  Jun  5 14:08:26.482: INFO: update-demo-nautilus-bm5g8 is created but not running
  Jun  5 14:08:31.486: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=kubectl-5986 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Jun  5 14:08:31.537: INFO: stderr: ""
  Jun  5 14:08:31.537: INFO: stdout: "update-demo-nautilus-bm5g8 update-demo-nautilus-x2l4k "
  Jun  5 14:08:31.537: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=kubectl-5986 get pods update-demo-nautilus-bm5g8 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jun  5 14:08:31.574: INFO: stderr: ""
  Jun  5 14:08:31.574: INFO: stdout: ""
  Jun  5 14:08:31.574: INFO: update-demo-nautilus-bm5g8 is created but not running
  Jun  5 14:08:36.575: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=kubectl-5986 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Jun  5 14:08:36.619: INFO: stderr: ""
  Jun  5 14:08:36.619: INFO: stdout: "update-demo-nautilus-bm5g8 update-demo-nautilus-x2l4k "
  Jun  5 14:08:36.620: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=kubectl-5986 get pods update-demo-nautilus-bm5g8 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jun  5 14:08:36.657: INFO: stderr: ""
  Jun  5 14:08:36.658: INFO: stdout: "true"
  Jun  5 14:08:36.658: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=kubectl-5986 get pods update-demo-nautilus-bm5g8 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Jun  5 14:08:36.704: INFO: stderr: ""
  Jun  5 14:08:36.704: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Jun  5 14:08:36.704: INFO: validating pod update-demo-nautilus-bm5g8
  Jun  5 14:08:36.706: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Jun  5 14:08:36.706: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Jun  5 14:08:36.707: INFO: update-demo-nautilus-bm5g8 is verified up and running
  Jun  5 14:08:36.707: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=kubectl-5986 get pods update-demo-nautilus-x2l4k -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jun  5 14:08:36.748: INFO: stderr: ""
  Jun  5 14:08:36.748: INFO: stdout: "true"
  Jun  5 14:08:36.748: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=kubectl-5986 get pods update-demo-nautilus-x2l4k -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Jun  5 14:08:36.788: INFO: stderr: ""
  Jun  5 14:08:36.788: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Jun  5 14:08:36.788: INFO: validating pod update-demo-nautilus-x2l4k
  Jun  5 14:08:36.790: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Jun  5 14:08:36.790: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Jun  5 14:08:36.790: INFO: update-demo-nautilus-x2l4k is verified up and running
  STEP: scaling down the replication controller @ 06/05/24 14:08:36.79
  Jun  5 14:08:36.790: INFO: scanned /root for discovery docs: <nil>
  Jun  5 14:08:36.790: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=kubectl-5986 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  Jun  5 14:08:37.846: INFO: stderr: ""
  Jun  5 14:08:37.846: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 06/05/24 14:08:37.846
  Jun  5 14:08:37.846: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=kubectl-5986 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Jun  5 14:08:37.889: INFO: stderr: ""
  Jun  5 14:08:37.889: INFO: stdout: "update-demo-nautilus-bm5g8 "
  Jun  5 14:08:37.889: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=kubectl-5986 get pods update-demo-nautilus-bm5g8 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jun  5 14:08:37.928: INFO: stderr: ""
  Jun  5 14:08:37.928: INFO: stdout: "true"
  Jun  5 14:08:37.928: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=kubectl-5986 get pods update-demo-nautilus-bm5g8 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Jun  5 14:08:37.963: INFO: stderr: ""
  Jun  5 14:08:37.963: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Jun  5 14:08:37.963: INFO: validating pod update-demo-nautilus-bm5g8
  Jun  5 14:08:37.965: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Jun  5 14:08:37.965: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Jun  5 14:08:37.965: INFO: update-demo-nautilus-bm5g8 is verified up and running
  STEP: scaling up the replication controller @ 06/05/24 14:08:37.965
  Jun  5 14:08:37.966: INFO: scanned /root for discovery docs: <nil>
  Jun  5 14:08:37.966: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=kubectl-5986 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  Jun  5 14:08:39.020: INFO: stderr: ""
  Jun  5 14:08:39.020: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 06/05/24 14:08:39.02
  Jun  5 14:08:39.020: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=kubectl-5986 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Jun  5 14:08:39.069: INFO: stderr: ""
  Jun  5 14:08:39.069: INFO: stdout: "update-demo-nautilus-bm5g8 update-demo-nautilus-dj4cr "
  Jun  5 14:08:39.069: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=kubectl-5986 get pods update-demo-nautilus-bm5g8 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jun  5 14:08:39.102: INFO: stderr: ""
  Jun  5 14:08:39.102: INFO: stdout: "true"
  Jun  5 14:08:39.102: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=kubectl-5986 get pods update-demo-nautilus-bm5g8 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Jun  5 14:08:39.138: INFO: stderr: ""
  Jun  5 14:08:39.138: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Jun  5 14:08:39.138: INFO: validating pod update-demo-nautilus-bm5g8
  Jun  5 14:08:39.139: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Jun  5 14:08:39.139: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Jun  5 14:08:39.139: INFO: update-demo-nautilus-bm5g8 is verified up and running
  Jun  5 14:08:39.139: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=kubectl-5986 get pods update-demo-nautilus-dj4cr -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jun  5 14:08:39.176: INFO: stderr: ""
  Jun  5 14:08:39.176: INFO: stdout: ""
  Jun  5 14:08:39.176: INFO: update-demo-nautilus-dj4cr is created but not running
  Jun  5 14:08:44.177: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=kubectl-5986 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Jun  5 14:08:44.228: INFO: stderr: ""
  Jun  5 14:08:44.228: INFO: stdout: "update-demo-nautilus-bm5g8 update-demo-nautilus-dj4cr "
  Jun  5 14:08:44.228: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=kubectl-5986 get pods update-demo-nautilus-bm5g8 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jun  5 14:08:44.273: INFO: stderr: ""
  Jun  5 14:08:44.273: INFO: stdout: "true"
  Jun  5 14:08:44.273: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=kubectl-5986 get pods update-demo-nautilus-bm5g8 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Jun  5 14:08:44.309: INFO: stderr: ""
  Jun  5 14:08:44.309: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Jun  5 14:08:44.309: INFO: validating pod update-demo-nautilus-bm5g8
  Jun  5 14:08:44.311: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Jun  5 14:08:44.311: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Jun  5 14:08:44.311: INFO: update-demo-nautilus-bm5g8 is verified up and running
  Jun  5 14:08:44.311: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=kubectl-5986 get pods update-demo-nautilus-dj4cr -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jun  5 14:08:44.349: INFO: stderr: ""
  Jun  5 14:08:44.349: INFO: stdout: "true"
  Jun  5 14:08:44.349: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=kubectl-5986 get pods update-demo-nautilus-dj4cr -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Jun  5 14:08:44.390: INFO: stderr: ""
  Jun  5 14:08:44.390: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Jun  5 14:08:44.390: INFO: validating pod update-demo-nautilus-dj4cr
  Jun  5 14:08:44.391: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Jun  5 14:08:44.391: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Jun  5 14:08:44.391: INFO: update-demo-nautilus-dj4cr is verified up and running
  STEP: using delete to clean up resources @ 06/05/24 14:08:44.391
  Jun  5 14:08:44.391: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=kubectl-5986 delete --grace-period=0 --force -f -'
  Jun  5 14:08:44.432: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jun  5 14:08:44.432: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  Jun  5 14:08:44.432: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=kubectl-5986 get rc,svc -l name=update-demo --no-headers'
  Jun  5 14:08:44.483: INFO: stderr: "No resources found in kubectl-5986 namespace.\n"
  Jun  5 14:08:44.483: INFO: stdout: ""
  Jun  5 14:08:44.483: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=kubectl-5986 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Jun  5 14:08:44.521: INFO: stderr: ""
  Jun  5 14:08:44.521: INFO: stdout: ""
  Jun  5 14:08:44.521: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5986" for this suite. @ 06/05/24 14:08:44.523
• [23.303 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:76
  STEP: Creating a kubernetes client @ 06/05/24 14:08:44.526
  Jun  5 14:08:44.526: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename var-expansion @ 06/05/24 14:08:44.527
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:08:44.536
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:08:44.538
  STEP: Creating a pod to test substitution in container's command @ 06/05/24 14:08:44.539
  STEP: Saw pod success @ 06/05/24 14:08:48.557
  Jun  5 14:08:48.559: INFO: Trying to get logs from node k8sconformance-m02 pod var-expansion-650583ae-fda8-4120-a6cf-9ea259725080 container dapi-container: <nil>
  STEP: delete the pod @ 06/05/24 14:08:48.566
  Jun  5 14:08:48.581: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-3903" for this suite. @ 06/05/24 14:08:48.584
• [4.061 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:846
  STEP: Creating a kubernetes client @ 06/05/24 14:08:48.594
  Jun  5 14:08:48.594: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename pods @ 06/05/24 14:08:48.595
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:08:48.604
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:08:48.607
  STEP: Create set of pods @ 06/05/24 14:08:48.609
  Jun  5 14:08:48.615: INFO: created test-pod-1
  Jun  5 14:08:48.621: INFO: created test-pod-2
  Jun  5 14:08:48.631: INFO: created test-pod-3
  STEP: waiting for all 3 pods to be running @ 06/05/24 14:08:48.631
  STEP: waiting for all pods to be deleted @ 06/05/24 14:08:50.67
  Jun  5 14:08:50.675: INFO: Pod quantity 3 is different from expected quantity 0
  Jun  5 14:08:51.675: INFO: Pod quantity 3 is different from expected quantity 0
  Jun  5 14:08:52.676: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3019" for this suite. @ 06/05/24 14:08:52.679
• [4.090 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:195
  STEP: Creating a kubernetes client @ 06/05/24 14:08:52.685
  Jun  5 14:08:52.685: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename container-runtime @ 06/05/24 14:08:52.686
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:08:52.699
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:08:52.702
  STEP: create the container @ 06/05/24 14:08:52.705
  W0605 14:08:52.711856      22 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 06/05/24 14:08:52.712
  STEP: get the container status @ 06/05/24 14:08:55.726
  STEP: the container should be terminated @ 06/05/24 14:08:55.729
  STEP: the termination message should be set @ 06/05/24 14:08:55.729
  Jun  5 14:08:55.729: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 06/05/24 14:08:55.729
  Jun  5 14:08:55.747: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-6667" for this suite. @ 06/05/24 14:08:55.752
• [3.073 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:238
  STEP: Creating a kubernetes client @ 06/05/24 14:08:55.76
  Jun  5 14:08:55.760: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename webhook @ 06/05/24 14:08:55.761
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:08:55.772
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:08:55.773
  STEP: Setting up server cert @ 06/05/24 14:08:55.785
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/05/24 14:08:55.928
  STEP: Deploying the webhook pod @ 06/05/24 14:08:55.932
  STEP: Wait for the deployment to be ready @ 06/05/24 14:08:55.938
  Jun  5 14:08:55.943: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 06/05/24 14:08:57.953
  STEP: Verifying the service has paired with the endpoint @ 06/05/24 14:08:57.964
  Jun  5 14:08:58.964: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 06/05/24 14:08:58.971
  STEP: create a namespace for the webhook @ 06/05/24 14:08:58.987
  STEP: create a configmap should be unconditionally rejected by the webhook @ 06/05/24 14:08:58.998
  Jun  5 14:08:59.029: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7167" for this suite. @ 06/05/24 14:08:59.032
  STEP: Destroying namespace "webhook-markers-1648" for this suite. @ 06/05/24 14:08:59.039
  STEP: Destroying namespace "fail-closed-namespace-9987" for this suite. @ 06/05/24 14:08:59.042
• [3.285 seconds]
------------------------------
SSSS
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet_etc_hosts.go:64
  STEP: Creating a kubernetes client @ 06/05/24 14:08:59.045
  Jun  5 14:08:59.045: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 06/05/24 14:08:59.046
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:08:59.054
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:08:59.057
  STEP: Setting up the test @ 06/05/24 14:08:59.059
  STEP: Creating hostNetwork=false pod @ 06/05/24 14:08:59.059
  STEP: Creating hostNetwork=true pod @ 06/05/24 14:09:01.078
  STEP: Running the test @ 06/05/24 14:09:03.093
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 06/05/24 14:09:03.093
  Jun  5 14:09:03.093: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-6118 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun  5 14:09:03.093: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  Jun  5 14:09:03.094: INFO: ExecWithOptions: Clientset creation
  Jun  5 14:09:03.094: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6118/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Jun  5 14:09:03.153: INFO: Exec stderr: ""
  Jun  5 14:09:03.153: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-6118 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun  5 14:09:03.153: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  Jun  5 14:09:03.154: INFO: ExecWithOptions: Clientset creation
  Jun  5 14:09:03.154: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6118/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Jun  5 14:09:03.220: INFO: Exec stderr: ""
  Jun  5 14:09:03.220: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-6118 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun  5 14:09:03.220: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  Jun  5 14:09:03.221: INFO: ExecWithOptions: Clientset creation
  Jun  5 14:09:03.221: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6118/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Jun  5 14:09:03.283: INFO: Exec stderr: ""
  Jun  5 14:09:03.283: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-6118 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun  5 14:09:03.283: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  Jun  5 14:09:03.283: INFO: ExecWithOptions: Clientset creation
  Jun  5 14:09:03.284: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6118/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Jun  5 14:09:03.338: INFO: Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 06/05/24 14:09:03.338
  Jun  5 14:09:03.338: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-6118 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun  5 14:09:03.338: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  Jun  5 14:09:03.338: INFO: ExecWithOptions: Clientset creation
  Jun  5 14:09:03.338: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6118/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  Jun  5 14:09:03.386: INFO: Exec stderr: ""
  Jun  5 14:09:03.386: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-6118 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun  5 14:09:03.386: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  Jun  5 14:09:03.387: INFO: ExecWithOptions: Clientset creation
  Jun  5 14:09:03.387: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6118/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  Jun  5 14:09:03.451: INFO: Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 06/05/24 14:09:03.451
  Jun  5 14:09:03.451: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-6118 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun  5 14:09:03.451: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  Jun  5 14:09:03.451: INFO: ExecWithOptions: Clientset creation
  Jun  5 14:09:03.451: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6118/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Jun  5 14:09:03.523: INFO: Exec stderr: ""
  Jun  5 14:09:03.523: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-6118 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun  5 14:09:03.523: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  Jun  5 14:09:03.524: INFO: ExecWithOptions: Clientset creation
  Jun  5 14:09:03.524: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6118/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Jun  5 14:09:03.588: INFO: Exec stderr: ""
  Jun  5 14:09:03.588: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-6118 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun  5 14:09:03.588: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  Jun  5 14:09:03.588: INFO: ExecWithOptions: Clientset creation
  Jun  5 14:09:03.588: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6118/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Jun  5 14:09:03.655: INFO: Exec stderr: ""
  Jun  5 14:09:03.655: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-6118 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun  5 14:09:03.655: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  Jun  5 14:09:03.655: INFO: ExecWithOptions: Clientset creation
  Jun  5 14:09:03.655: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6118/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Jun  5 14:09:03.711: INFO: Exec stderr: ""
  Jun  5 14:09:03.712: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-6118" for this suite. @ 06/05/24 14:09:03.715
• [4.676 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:219
  STEP: Creating a kubernetes client @ 06/05/24 14:09:03.721
  Jun  5 14:09:03.721: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename downward-api @ 06/05/24 14:09:03.722
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:09:03.734
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:09:03.738
  STEP: Creating a pod to test downward api env vars @ 06/05/24 14:09:03.74
  STEP: Saw pod success @ 06/05/24 14:09:07.76
  Jun  5 14:09:07.764: INFO: Trying to get logs from node k8sconformance-m02 pod downward-api-30723242-21f4-4921-b2ad-2167c0395783 container dapi-container: <nil>
  STEP: delete the pod @ 06/05/24 14:09:07.771
  Jun  5 14:09:07.790: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9418" for this suite. @ 06/05/24 14:09:07.794
• [4.077 seconds]
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:488
  STEP: Creating a kubernetes client @ 06/05/24 14:09:07.798
  Jun  5 14:09:07.798: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename security-context-test @ 06/05/24 14:09:07.8
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:09:07.813
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:09:07.815
  Jun  5 14:09:11.840: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-2195" for this suite. @ 06/05/24 14:09:11.844
• [4.052 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:125
  STEP: Creating a kubernetes client @ 06/05/24 14:09:11.85
  Jun  5 14:09:11.850: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename projected @ 06/05/24 14:09:11.851
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:09:11.861
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:09:11.864
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-10f628db-df04-4426-8070-16cd9ea9afe2 @ 06/05/24 14:09:11.869
  STEP: Creating the pod @ 06/05/24 14:09:11.872
  STEP: Updating configmap projected-configmap-test-upd-10f628db-df04-4426-8070-16cd9ea9afe2 @ 06/05/24 14:09:13.898
  STEP: waiting to observe update in volume @ 06/05/24 14:09:13.904
  Jun  5 14:10:20.322: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3074" for this suite. @ 06/05/24 14:10:20.325
• [68.481 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance] [sig-architecture, Conformance]
k8s.io/kubernetes/test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 06/05/24 14:10:20.332
  Jun  5 14:10:20.332: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename conformance-tests @ 06/05/24 14:10:20.333
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:10:20.345
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:10:20.348
  STEP: Getting node addresses @ 06/05/24 14:10:20.35
  Jun  5 14:10:20.350: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  Jun  5 14:10:20.354: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-2895" for this suite. @ 06/05/24 14:10:20.357
• [0.029 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:498
  STEP: Creating a kubernetes client @ 06/05/24 14:10:20.361
  Jun  5 14:10:20.361: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename webhook @ 06/05/24 14:10:20.362
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:10:20.374
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:10:20.377
  STEP: Setting up server cert @ 06/05/24 14:10:20.394
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/05/24 14:10:20.517
  STEP: Deploying the webhook pod @ 06/05/24 14:10:20.52
  STEP: Wait for the deployment to be ready @ 06/05/24 14:10:20.526
  Jun  5 14:10:20.528: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 06/05/24 14:10:22.539
  STEP: Verifying the service has paired with the endpoint @ 06/05/24 14:10:22.552
  Jun  5 14:10:23.552: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 06/05/24 14:10:23.56
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 06/05/24 14:10:23.579
  STEP: Creating a configMap that should not be mutated @ 06/05/24 14:10:23.584
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 06/05/24 14:10:23.592
  STEP: Creating a configMap that should be mutated @ 06/05/24 14:10:23.599
  Jun  5 14:10:23.642: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7557" for this suite. @ 06/05/24 14:10:23.644
  STEP: Destroying namespace "webhook-markers-5754" for this suite. @ 06/05/24 14:10:23.652
• [3.295 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:245
  STEP: Creating a kubernetes client @ 06/05/24 14:10:23.657
  Jun  5 14:10:23.657: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename namespaces @ 06/05/24 14:10:23.658
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:10:23.666
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:10:23.668
  STEP: Creating a test namespace @ 06/05/24 14:10:23.67
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:10:23.677
  STEP: Creating a pod in the namespace @ 06/05/24 14:10:23.679
  STEP: Waiting for the pod to have running status @ 06/05/24 14:10:23.685
  STEP: Deleting the namespace @ 06/05/24 14:10:25.689
  STEP: Waiting for the namespace to be removed. @ 06/05/24 14:10:25.695
  STEP: Recreating the namespace @ 06/05/24 14:10:36.701
  STEP: Verifying there are no pods in the namespace @ 06/05/24 14:10:36.716
  Jun  5 14:10:36.719: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-2588" for this suite. @ 06/05/24 14:10:36.722
  STEP: Destroying namespace "nsdeletetest-8737" for this suite. @ 06/05/24 14:10:36.727
  Jun  5 14:10:36.729: INFO: Namespace nsdeletetest-8737 was already deleted
  STEP: Destroying namespace "nsdeletetest-4689" for this suite. @ 06/05/24 14:10:36.73
• [13.077 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:210
  STEP: Creating a kubernetes client @ 06/05/24 14:10:36.734
  Jun  5 14:10:36.734: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename emptydir @ 06/05/24 14:10:36.735
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:10:36.744
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:10:36.747
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 06/05/24 14:10:36.749
  STEP: Saw pod success @ 06/05/24 14:10:40.77
  Jun  5 14:10:40.773: INFO: Trying to get logs from node k8sconformance-m02 pod pod-ec4bfd8d-1fc6-423d-9f21-6709d8b283cb container test-container: <nil>
  STEP: delete the pod @ 06/05/24 14:10:40.783
  Jun  5 14:10:40.798: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3843" for this suite. @ 06/05/24 14:10:40.801
• [4.072 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:391
  STEP: Creating a kubernetes client @ 06/05/24 14:10:40.806
  Jun  5 14:10:40.806: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename crd-publish-openapi @ 06/05/24 14:10:40.807
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:10:40.819
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:10:40.822
  STEP: set up a multi version CRD @ 06/05/24 14:10:40.824
  Jun  5 14:10:40.825: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: rename a version @ 06/05/24 14:10:43.779
  STEP: check the new version name is served @ 06/05/24 14:10:43.793
  STEP: check the old version name is removed @ 06/05/24 14:10:44.431
  STEP: check the other version is not changed @ 06/05/24 14:10:45.036
  Jun  5 14:10:47.368: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8030" for this suite. @ 06/05/24 14:10:47.373
• [6.572 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:300
  STEP: Creating a kubernetes client @ 06/05/24 14:10:47.378
  Jun  5 14:10:47.378: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename var-expansion @ 06/05/24 14:10:47.379
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:10:47.389
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:10:47.391
  STEP: creating the pod @ 06/05/24 14:10:47.394
  STEP: waiting for pod running @ 06/05/24 14:10:47.402
  STEP: creating a file in subpath @ 06/05/24 14:10:49.41
  Jun  5 14:10:49.413: INFO: ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-3130 PodName:var-expansion-0e329524-cb94-4ba3-8ec6-d8af2c0908ba ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun  5 14:10:49.413: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  Jun  5 14:10:49.414: INFO: ExecWithOptions: Clientset creation
  Jun  5 14:10:49.414: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/var-expansion-3130/pods/var-expansion-0e329524-cb94-4ba3-8ec6-d8af2c0908ba/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: test for file in mounted path @ 06/05/24 14:10:49.48
  Jun  5 14:10:49.483: INFO: ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-3130 PodName:var-expansion-0e329524-cb94-4ba3-8ec6-d8af2c0908ba ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun  5 14:10:49.483: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  Jun  5 14:10:49.484: INFO: ExecWithOptions: Clientset creation
  Jun  5 14:10:49.484: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/var-expansion-3130/pods/var-expansion-0e329524-cb94-4ba3-8ec6-d8af2c0908ba/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: updating the annotation value @ 06/05/24 14:10:49.544
  Jun  5 14:10:50.055: INFO: Successfully updated pod "var-expansion-0e329524-cb94-4ba3-8ec6-d8af2c0908ba"
  STEP: waiting for annotated pod running @ 06/05/24 14:10:50.055
  STEP: deleting the pod gracefully @ 06/05/24 14:10:50.058
  Jun  5 14:10:50.058: INFO: Deleting pod "var-expansion-0e329524-cb94-4ba3-8ec6-d8af2c0908ba" in namespace "var-expansion-3130"
  Jun  5 14:10:50.065: INFO: Wait up to 5m0s for pod "var-expansion-0e329524-cb94-4ba3-8ec6-d8af2c0908ba" to be fully deleted
  Jun  5 14:11:24.161: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-3130" for this suite. @ 06/05/24 14:11:24.165
• [36.794 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:75
  STEP: Creating a kubernetes client @ 06/05/24 14:11:24.172
  Jun  5 14:11:24.172: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename containers @ 06/05/24 14:11:24.173
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:11:24.183
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:11:24.186
  STEP: Creating a pod to test override command @ 06/05/24 14:11:24.189
  STEP: Saw pod success @ 06/05/24 14:11:28.212
  Jun  5 14:11:28.214: INFO: Trying to get logs from node k8sconformance-m02 pod client-containers-ad24704f-63d6-481f-b08d-e6fd1aa3ae7b container agnhost-container: <nil>
  STEP: delete the pod @ 06/05/24 14:11:28.221
  Jun  5 14:11:28.236: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-1972" for this suite. @ 06/05/24 14:11:28.24
• [4.074 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:140
  STEP: Creating a kubernetes client @ 06/05/24 14:11:28.246
  Jun  5 14:11:28.246: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename emptydir @ 06/05/24 14:11:28.247
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:11:28.256
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:11:28.258
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 06/05/24 14:11:28.26
  STEP: Saw pod success @ 06/05/24 14:11:32.282
  Jun  5 14:11:32.284: INFO: Trying to get logs from node k8sconformance-m02 pod pod-bc43837f-9ccd-4723-88a5-ce97d9bd4a58 container test-container: <nil>
  STEP: delete the pod @ 06/05/24 14:11:32.294
  Jun  5 14:11:32.309: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9058" for this suite. @ 06/05/24 14:11:32.312
• [4.071 seconds]
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:195
  STEP: Creating a kubernetes client @ 06/05/24 14:11:32.317
  Jun  5 14:11:32.317: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename downward-api @ 06/05/24 14:11:32.318
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:11:32.329
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:11:32.332
  STEP: Creating a pod to test downward API volume plugin @ 06/05/24 14:11:32.335
  STEP: Saw pod success @ 06/05/24 14:11:36.359
  Jun  5 14:11:36.362: INFO: Trying to get logs from node k8sconformance-m02 pod downwardapi-volume-95336c05-1ba9-4778-8384-75dcf713006a container client-container: <nil>
  STEP: delete the pod @ 06/05/24 14:11:36.37
  Jun  5 14:11:36.384: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1382" for this suite. @ 06/05/24 14:11:36.388
• [4.075 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1280
  STEP: Creating a kubernetes client @ 06/05/24 14:11:36.393
  Jun  5 14:11:36.393: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename services @ 06/05/24 14:11:36.394
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:11:36.405
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:11:36.408
  STEP: creating service nodeport-test with type=NodePort in namespace services-5211 @ 06/05/24 14:11:36.411
  STEP: creating replication controller nodeport-test in namespace services-5211 @ 06/05/24 14:11:36.429
  I0605 14:11:36.435373      22 runners.go:197] Created replication controller with name: nodeport-test, namespace: services-5211, replica count: 2
  I0605 14:11:39.487177      22 runners.go:197] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jun  5 14:11:39.487: INFO: Creating new exec pod
  Jun  5 14:11:42.505: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=services-5211 exec execpodfvzcm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  Jun  5 14:11:42.621: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  Jun  5 14:11:42.621: INFO: stdout: "nodeport-test-qb6jp"
  Jun  5 14:11:42.621: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=services-5211 exec execpodfvzcm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.111.118.36 80'
  Jun  5 14:11:42.721: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.111.118.36 80\nConnection to 10.111.118.36 80 port [tcp/http] succeeded!\n"
  Jun  5 14:11:42.721: INFO: stdout: "nodeport-test-5gwgd"
  Jun  5 14:11:42.721: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=services-5211 exec execpodfvzcm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.67.2 32641'
  Jun  5 14:11:42.814: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.67.2 32641\nConnection to 192.168.67.2 32641 port [tcp/*] succeeded!\n"
  Jun  5 14:11:42.814: INFO: stdout: ""
  Jun  5 14:11:43.722: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=services-5211 exec execpodfvzcm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.67.2 32641'
  Jun  5 14:11:43.808: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.67.2 32641\nConnection to 192.168.67.2 32641 port [tcp/*] succeeded!\n"
  Jun  5 14:11:43.808: INFO: stdout: "nodeport-test-5gwgd"
  Jun  5 14:11:43.808: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=services-5211 exec execpodfvzcm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.67.3 32641'
  Jun  5 14:11:43.899: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.67.3 32641\nConnection to 192.168.67.3 32641 port [tcp/*] succeeded!\n"
  Jun  5 14:11:43.899: INFO: stdout: "nodeport-test-qb6jp"
  Jun  5 14:11:43.899: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5211" for this suite. @ 06/05/24 14:11:43.903
• [7.517 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:371
  STEP: Creating a kubernetes client @ 06/05/24 14:11:43.911
  Jun  5 14:11:43.911: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename webhook @ 06/05/24 14:11:43.912
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:11:43.925
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:11:43.927
  STEP: Setting up server cert @ 06/05/24 14:11:43.942
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/05/24 14:11:44.212
  STEP: Deploying the webhook pod @ 06/05/24 14:11:44.217
  STEP: Wait for the deployment to be ready @ 06/05/24 14:11:44.224
  Jun  5 14:11:44.227: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  Jun  5 14:11:46.238: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 5, 14, 11, 44, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 5, 14, 11, 44, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 5, 14, 11, 44, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 5, 14, 11, 44, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7c55c7d74c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 06/05/24 14:11:48.242
  STEP: Verifying the service has paired with the endpoint @ 06/05/24 14:11:48.255
  Jun  5 14:11:49.256: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 06/05/24 14:11:49.263
  STEP: Registering slow webhook via the AdmissionRegistration API @ 06/05/24 14:11:49.263
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 06/05/24 14:11:49.282
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 06/05/24 14:11:50.29
  STEP: Registering slow webhook via the AdmissionRegistration API @ 06/05/24 14:11:50.29
  STEP: Having no error when timeout is longer than webhook latency @ 06/05/24 14:11:51.315
  STEP: Registering slow webhook via the AdmissionRegistration API @ 06/05/24 14:11:51.315
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 06/05/24 14:11:56.348
  STEP: Registering slow webhook via the AdmissionRegistration API @ 06/05/24 14:11:56.348
  Jun  5 14:12:01.424: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-479" for this suite. @ 06/05/24 14:12:01.429
  STEP: Destroying namespace "webhook-markers-7247" for this suite. @ 06/05/24 14:12:01.436
• [17.530 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:108
  STEP: Creating a kubernetes client @ 06/05/24 14:12:01.441
  Jun  5 14:12:01.441: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename disruption @ 06/05/24 14:12:01.442
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:12:01.451
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:12:01.455
  STEP: creating the pdb @ 06/05/24 14:12:01.457
  STEP: Waiting for the pdb to be processed @ 06/05/24 14:12:01.46
  STEP: updating the pdb @ 06/05/24 14:12:03.465
  STEP: Waiting for the pdb to be processed @ 06/05/24 14:12:03.473
  STEP: patching the pdb @ 06/05/24 14:12:05.478
  STEP: Waiting for the pdb to be processed @ 06/05/24 14:12:05.488
  STEP: Waiting for the pdb to be deleted @ 06/05/24 14:12:07.498
  Jun  5 14:12:07.500: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-4191" for this suite. @ 06/05/24 14:12:07.503
• [6.066 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should patch a pod status [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:1084
  STEP: Creating a kubernetes client @ 06/05/24 14:12:07.507
  Jun  5 14:12:07.507: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename pods @ 06/05/24 14:12:07.508
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:12:07.519
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:12:07.522
  STEP: Create a pod @ 06/05/24 14:12:07.525
  STEP: patching /status @ 06/05/24 14:12:09.54
  Jun  5 14:12:09.550: INFO: Status Message: "Patched by e2e test" and Reason: "E2E"
  Jun  5 14:12:09.550: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8236" for this suite. @ 06/05/24 14:12:09.554
• [2.052 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:110
  STEP: Creating a kubernetes client @ 06/05/24 14:12:09.559
  Jun  5 14:12:09.559: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename emptydir @ 06/05/24 14:12:09.56
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:12:09.57
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:12:09.573
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 06/05/24 14:12:09.575
  STEP: Saw pod success @ 06/05/24 14:12:13.6
  Jun  5 14:12:13.603: INFO: Trying to get logs from node k8sconformance-m02 pod pod-c8bae41d-df1d-4a90-8f77-35cf3746e94b container test-container: <nil>
  STEP: delete the pod @ 06/05/24 14:12:13.61
  Jun  5 14:12:13.624: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8275" for this suite. @ 06/05/24 14:12:13.628
• [4.074 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:344
  STEP: Creating a kubernetes client @ 06/05/24 14:12:13.633
  Jun  5 14:12:13.634: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename kubectl @ 06/05/24 14:12:13.635
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:12:13.647
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:12:13.649
  STEP: creating a replication controller @ 06/05/24 14:12:13.652
  Jun  5 14:12:13.652: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=kubectl-2133 create -f -'
  Jun  5 14:12:13.722: INFO: stderr: ""
  Jun  5 14:12:13.722: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 06/05/24 14:12:13.722
  Jun  5 14:12:13.722: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=kubectl-2133 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Jun  5 14:12:13.775: INFO: stderr: ""
  Jun  5 14:12:13.775: INFO: stdout: "update-demo-nautilus-rs6b7 update-demo-nautilus-vbsnk "
  Jun  5 14:12:13.775: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=kubectl-2133 get pods update-demo-nautilus-rs6b7 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jun  5 14:12:13.812: INFO: stderr: ""
  Jun  5 14:12:13.813: INFO: stdout: ""
  Jun  5 14:12:13.813: INFO: update-demo-nautilus-rs6b7 is created but not running
  Jun  5 14:12:18.814: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=kubectl-2133 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Jun  5 14:12:18.862: INFO: stderr: ""
  Jun  5 14:12:18.862: INFO: stdout: "update-demo-nautilus-rs6b7 update-demo-nautilus-vbsnk "
  Jun  5 14:12:18.862: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=kubectl-2133 get pods update-demo-nautilus-rs6b7 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jun  5 14:12:18.900: INFO: stderr: ""
  Jun  5 14:12:18.900: INFO: stdout: "true"
  Jun  5 14:12:18.900: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=kubectl-2133 get pods update-demo-nautilus-rs6b7 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Jun  5 14:12:18.938: INFO: stderr: ""
  Jun  5 14:12:18.938: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Jun  5 14:12:18.938: INFO: validating pod update-demo-nautilus-rs6b7
  Jun  5 14:12:18.940: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Jun  5 14:12:18.940: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Jun  5 14:12:18.940: INFO: update-demo-nautilus-rs6b7 is verified up and running
  Jun  5 14:12:18.940: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=kubectl-2133 get pods update-demo-nautilus-vbsnk -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Jun  5 14:12:18.982: INFO: stderr: ""
  Jun  5 14:12:18.982: INFO: stdout: "true"
  Jun  5 14:12:18.982: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=kubectl-2133 get pods update-demo-nautilus-vbsnk -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Jun  5 14:12:19.021: INFO: stderr: ""
  Jun  5 14:12:19.021: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Jun  5 14:12:19.021: INFO: validating pod update-demo-nautilus-vbsnk
  Jun  5 14:12:19.024: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Jun  5 14:12:19.024: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Jun  5 14:12:19.024: INFO: update-demo-nautilus-vbsnk is verified up and running
  STEP: using delete to clean up resources @ 06/05/24 14:12:19.024
  Jun  5 14:12:19.024: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=kubectl-2133 delete --grace-period=0 --force -f -'
  Jun  5 14:12:19.069: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jun  5 14:12:19.069: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  Jun  5 14:12:19.069: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=kubectl-2133 get rc,svc -l name=update-demo --no-headers'
  Jun  5 14:12:19.125: INFO: stderr: "No resources found in kubectl-2133 namespace.\n"
  Jun  5 14:12:19.125: INFO: stdout: ""
  Jun  5 14:12:19.125: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=kubectl-2133 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Jun  5 14:12:19.164: INFO: stderr: ""
  Jun  5 14:12:19.164: INFO: stdout: ""
  Jun  5 14:12:19.164: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2133" for this suite. @ 06/05/24 14:12:19.167
• [5.537 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2177
  STEP: Creating a kubernetes client @ 06/05/24 14:12:19.171
  Jun  5 14:12:19.171: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename services @ 06/05/24 14:12:19.171
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:12:19.181
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:12:19.183
  STEP: creating service in namespace services-8274 @ 06/05/24 14:12:19.184
  STEP: creating service affinity-clusterip in namespace services-8274 @ 06/05/24 14:12:19.184
  STEP: creating replication controller affinity-clusterip in namespace services-8274 @ 06/05/24 14:12:19.192
  I0605 14:12:19.198410      22 runners.go:197] Created replication controller with name: affinity-clusterip, namespace: services-8274, replica count: 3
  I0605 14:12:22.249425      22 runners.go:197] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jun  5 14:12:22.257: INFO: Creating new exec pod
  Jun  5 14:12:25.273: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=services-8274 exec execpod-affinitytnrf6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  Jun  5 14:12:25.379: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip 80\nConnection to affinity-clusterip 80 port [tcp/http] succeeded!\n"
  Jun  5 14:12:25.379: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun  5 14:12:25.379: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=services-8274 exec execpod-affinitytnrf6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.104.91.189 80'
  Jun  5 14:12:25.474: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.104.91.189 80\nConnection to 10.104.91.189 80 port [tcp/http] succeeded!\n"
  Jun  5 14:12:25.474: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Jun  5 14:12:25.474: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=services-8274 exec execpod-affinitytnrf6 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.104.91.189:80/ ; done'
  Jun  5 14:12:25.628: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.104.91.189:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.104.91.189:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.104.91.189:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.104.91.189:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.104.91.189:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.104.91.189:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.104.91.189:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.104.91.189:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.104.91.189:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.104.91.189:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.104.91.189:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.104.91.189:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.104.91.189:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.104.91.189:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.104.91.189:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.104.91.189:80/\n"
  Jun  5 14:12:25.628: INFO: stdout: "\naffinity-clusterip-wh4mf\naffinity-clusterip-wh4mf\naffinity-clusterip-wh4mf\naffinity-clusterip-wh4mf\naffinity-clusterip-wh4mf\naffinity-clusterip-wh4mf\naffinity-clusterip-wh4mf\naffinity-clusterip-wh4mf\naffinity-clusterip-wh4mf\naffinity-clusterip-wh4mf\naffinity-clusterip-wh4mf\naffinity-clusterip-wh4mf\naffinity-clusterip-wh4mf\naffinity-clusterip-wh4mf\naffinity-clusterip-wh4mf\naffinity-clusterip-wh4mf"
  Jun  5 14:12:25.628: INFO: Received response from host: affinity-clusterip-wh4mf
  Jun  5 14:12:25.628: INFO: Received response from host: affinity-clusterip-wh4mf
  Jun  5 14:12:25.628: INFO: Received response from host: affinity-clusterip-wh4mf
  Jun  5 14:12:25.628: INFO: Received response from host: affinity-clusterip-wh4mf
  Jun  5 14:12:25.628: INFO: Received response from host: affinity-clusterip-wh4mf
  Jun  5 14:12:25.628: INFO: Received response from host: affinity-clusterip-wh4mf
  Jun  5 14:12:25.628: INFO: Received response from host: affinity-clusterip-wh4mf
  Jun  5 14:12:25.628: INFO: Received response from host: affinity-clusterip-wh4mf
  Jun  5 14:12:25.628: INFO: Received response from host: affinity-clusterip-wh4mf
  Jun  5 14:12:25.628: INFO: Received response from host: affinity-clusterip-wh4mf
  Jun  5 14:12:25.628: INFO: Received response from host: affinity-clusterip-wh4mf
  Jun  5 14:12:25.628: INFO: Received response from host: affinity-clusterip-wh4mf
  Jun  5 14:12:25.628: INFO: Received response from host: affinity-clusterip-wh4mf
  Jun  5 14:12:25.628: INFO: Received response from host: affinity-clusterip-wh4mf
  Jun  5 14:12:25.628: INFO: Received response from host: affinity-clusterip-wh4mf
  Jun  5 14:12:25.628: INFO: Received response from host: affinity-clusterip-wh4mf
  Jun  5 14:12:25.628: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip in namespace services-8274, will wait for the garbage collector to delete the pods @ 06/05/24 14:12:25.638
  Jun  5 14:12:25.697: INFO: Deleting ReplicationController affinity-clusterip took: 5.451264ms
  Jun  5 14:12:25.799: INFO: Terminating ReplicationController affinity-clusterip pods took: 101.180201ms
  Jun  5 14:12:28.515: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8274" for this suite. @ 06/05/24 14:12:28.519
• [9.352 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregator.go:98
  STEP: Creating a kubernetes client @ 06/05/24 14:12:28.523
  Jun  5 14:12:28.524: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename aggregator @ 06/05/24 14:12:28.525
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:12:28.537
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:12:28.54
  Jun  5 14:12:28.543: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Registering the sample API server. @ 06/05/24 14:12:28.544
  Jun  5 14:12:28.660: INFO: Found ClusterRoles; assuming RBAC is enabled.
  Jun  5 14:12:28.672: INFO: new replicaset for deployment "sample-apiserver-deployment" is yet to be created
  Jun  5 14:12:30.711: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 5, 14, 12, 28, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 5, 14, 12, 28, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 5, 14, 12, 28, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 5, 14, 12, 28, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jun  5 14:12:32.716: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 5, 14, 12, 28, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 5, 14, 12, 28, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 5, 14, 12, 28, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 5, 14, 12, 28, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jun  5 14:12:34.715: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 5, 14, 12, 28, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 5, 14, 12, 28, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 5, 14, 12, 28, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 5, 14, 12, 28, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jun  5 14:12:36.714: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 5, 14, 12, 28, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 5, 14, 12, 28, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 5, 14, 12, 28, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 5, 14, 12, 28, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jun  5 14:12:38.716: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 5, 14, 12, 28, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 5, 14, 12, 28, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 5, 14, 12, 28, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 5, 14, 12, 28, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jun  5 14:12:40.717: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 5, 14, 12, 28, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 5, 14, 12, 28, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 5, 14, 12, 28, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 5, 14, 12, 28, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jun  5 14:12:42.715: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 5, 14, 12, 28, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 5, 14, 12, 28, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 5, 14, 12, 28, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 5, 14, 12, 28, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jun  5 14:12:44.715: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 5, 14, 12, 28, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 5, 14, 12, 28, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 5, 14, 12, 28, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 5, 14, 12, 28, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jun  5 14:12:46.715: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 5, 14, 12, 28, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 5, 14, 12, 28, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 5, 14, 12, 28, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 5, 14, 12, 28, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jun  5 14:12:48.715: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 5, 14, 12, 28, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 5, 14, 12, 28, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 5, 14, 12, 28, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 5, 14, 12, 28, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jun  5 14:12:50.715: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 5, 14, 12, 28, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 5, 14, 12, 28, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 5, 14, 12, 28, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 5, 14, 12, 28, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jun  5 14:12:52.715: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 5, 14, 12, 28, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 5, 14, 12, 28, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 5, 14, 12, 28, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 5, 14, 12, 28, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jun  5 14:12:54.716: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 5, 14, 12, 28, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 5, 14, 12, 28, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 5, 14, 12, 28, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 5, 14, 12, 28, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Jun  5 14:12:56.838: INFO: Waited 114.253036ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 06/05/24 14:12:56.877
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 06/05/24 14:12:56.88
  STEP: List APIServices @ 06/05/24 14:12:56.885
  Jun  5 14:12:56.890: INFO: Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 06/05/24 14:12:56.891
  Jun  5 14:12:56.902: INFO: APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 06/05/24 14:12:56.902
  Jun  5 14:12:56.907: INFO: updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2024, time.June, 5, 14, 12, 56, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 06/05/24 14:12:56.907
  Jun  5 14:12:56.910: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2024-06-05 14:12:56 +0000 UTC Passed all checks passed}
  Jun  5 14:12:56.910: INFO: Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Jun  5 14:12:56.910: INFO: Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 06/05/24 14:12:56.91
  Jun  5 14:12:56.917: INFO: Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete flunders resource "dynamic-flunder-131405876" @ 06/05/24 14:12:56.917
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 06/05/24 14:12:56.923
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 06/05/24 14:12:56.928
  STEP: Patch APIService Status @ 06/05/24 14:12:56.929
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 06/05/24 14:12:56.934
  Jun  5 14:12:56.937: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2024-06-05 14:12:56 +0000 UTC Passed all checks passed}
  Jun  5 14:12:56.937: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Jun  5 14:12:56.937: INFO: Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  Jun  5 14:12:56.937: INFO: Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "v1alpha1.wardle.example.com=updated" @ 06/05/24 14:12:56.937
  STEP: Confirm that the generated APIService has been deleted @ 06/05/24 14:12:56.943
  Jun  5 14:12:56.944: INFO: Requesting list of APIServices to confirm quantity
  Jun  5 14:12:56.946: INFO: Found 0 APIService with label "v1alpha1.wardle.example.com=updated"
  Jun  5 14:12:56.946: INFO: APIService v1alpha1.wardle.example.com has been deleted.
  Jun  5 14:12:57.011: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-602" for this suite. @ 06/05/24 14:12:57.013
• [28.493 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:261
  STEP: Creating a kubernetes client @ 06/05/24 14:12:57.017
  Jun  5 14:12:57.017: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename webhook @ 06/05/24 14:12:57.017
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:12:57.025
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:12:57.027
  STEP: Setting up server cert @ 06/05/24 14:12:57.039
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/05/24 14:12:57.136
  STEP: Deploying the webhook pod @ 06/05/24 14:12:57.139
  STEP: Wait for the deployment to be ready @ 06/05/24 14:12:57.146
  Jun  5 14:12:57.148: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 06/05/24 14:12:59.161
  STEP: Verifying the service has paired with the endpoint @ 06/05/24 14:12:59.171
  Jun  5 14:13:00.171: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 06/05/24 14:13:00.176
  STEP: create a pod that should be updated by the webhook @ 06/05/24 14:13:00.194
  Jun  5 14:13:00.240: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6160" for this suite. @ 06/05/24 14:13:00.243
  STEP: Destroying namespace "webhook-markers-9004" for this suite. @ 06/05/24 14:13:00.248
• [3.234 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:263
  STEP: Creating a kubernetes client @ 06/05/24 14:13:00.251
  Jun  5 14:13:00.251: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename downward-api @ 06/05/24 14:13:00.252
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:13:00.262
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:13:00.264
  STEP: Creating a pod to test downward API volume plugin @ 06/05/24 14:13:00.266
  STEP: Saw pod success @ 06/05/24 14:13:04.288
  Jun  5 14:13:04.292: INFO: Trying to get logs from node k8sconformance-m02 pod downwardapi-volume-386b8a6b-5256-4e8d-978b-cd48896d6ef7 container client-container: <nil>
  STEP: delete the pod @ 06/05/24 14:13:04.299
  Jun  5 14:13:04.314: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6664" for this suite. @ 06/05/24 14:13:04.317
• [4.071 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:164
  STEP: Creating a kubernetes client @ 06/05/24 14:13:04.322
  Jun  5 14:13:04.322: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename disruption @ 06/05/24 14:13:04.323
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:13:04.334
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:13:04.336
  STEP: Waiting for the pdb to be processed @ 06/05/24 14:13:04.346
  STEP: Updating PodDisruptionBudget status @ 06/05/24 14:13:06.351
  STEP: Waiting for all pods to be running @ 06/05/24 14:13:06.36
  Jun  5 14:13:06.363: INFO: running pods: 0 < 1
  STEP: locating a running pod @ 06/05/24 14:13:08.367
  STEP: Waiting for the pdb to be processed @ 06/05/24 14:13:08.378
  STEP: Patching PodDisruptionBudget status @ 06/05/24 14:13:08.385
  STEP: Waiting for the pdb to be processed @ 06/05/24 14:13:08.393
  Jun  5 14:13:08.396: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-5945" for this suite. @ 06/05/24 14:13:08.4
• [4.083 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1084
  STEP: Creating a kubernetes client @ 06/05/24 14:13:08.407
  Jun  5 14:13:08.407: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename kubectl @ 06/05/24 14:13:08.409
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:13:08.42
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:13:08.423
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 06/05/24 14:13:08.426
  Jun  5 14:13:08.426: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=kubectl-661 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  Jun  5 14:13:08.470: INFO: stderr: ""
  Jun  5 14:13:08.470: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 06/05/24 14:13:08.47
  Jun  5 14:13:08.470: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=kubectl-661 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.36.1-1"}]}} --dry-run=server'
  Jun  5 14:13:08.523: INFO: stderr: ""
  Jun  5 14:13:08.523: INFO: stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 06/05/24 14:13:08.523
  Jun  5 14:13:08.524: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=kubectl-661 delete pods e2e-test-httpd-pod'
  Jun  5 14:13:10.044: INFO: stderr: ""
  Jun  5 14:13:10.044: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Jun  5 14:13:10.044: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-661" for this suite. @ 06/05/24 14:13:10.048
• [1.646 seconds]
------------------------------
S
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1493
  STEP: Creating a kubernetes client @ 06/05/24 14:13:10.053
  Jun  5 14:13:10.053: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename services @ 06/05/24 14:13:10.055
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:13:10.066
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:13:10.069
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-4589 @ 06/05/24 14:13:10.072
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 06/05/24 14:13:10.081
  STEP: creating service externalsvc in namespace services-4589 @ 06/05/24 14:13:10.081
  STEP: creating replication controller externalsvc in namespace services-4589 @ 06/05/24 14:13:10.092
  I0605 14:13:10.097990      22 runners.go:197] Created replication controller with name: externalsvc, namespace: services-4589, replica count: 2
  I0605 14:13:13.148568      22 runners.go:197] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the ClusterIP service to type=ExternalName @ 06/05/24 14:13:13.151
  Jun  5 14:13:13.160: INFO: Creating new exec pod
  Jun  5 14:13:15.169: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=services-4589 exec execpod4p7ql -- /bin/sh -x -c nslookup clusterip-service.services-4589.svc.cluster.local'
  Jun  5 14:13:15.294: INFO: stderr: "+ nslookup clusterip-service.services-4589.svc.cluster.local\n"
  Jun  5 14:13:15.294: INFO: stdout: "Server:\t\t10.96.0.10\nAddress:\t10.96.0.10#53\n\nclusterip-service.services-4589.svc.cluster.local\tcanonical name = externalsvc.services-4589.svc.cluster.local.\nName:\texternalsvc.services-4589.svc.cluster.local\nAddress: 10.104.161.18\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-4589, will wait for the garbage collector to delete the pods @ 06/05/24 14:13:15.294
  Jun  5 14:13:15.355: INFO: Deleting ReplicationController externalsvc took: 6.847511ms
  Jun  5 14:13:15.455: INFO: Terminating ReplicationController externalsvc pods took: 100.840309ms
  Jun  5 14:13:18.174: INFO: Cleaning up the ClusterIP to ExternalName test service
  Jun  5 14:13:18.183: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4589" for this suite. @ 06/05/24 14:13:18.187
• [8.139 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 06/05/24 14:13:18.193
  Jun  5 14:13:18.193: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename subpath @ 06/05/24 14:13:18.193
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:13:18.203
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:13:18.207
  STEP: Setting up data @ 06/05/24 14:13:18.21
  STEP: Creating pod pod-subpath-test-configmap-ffnq @ 06/05/24 14:13:18.217
  STEP: Creating a pod to test atomic-volume-subpath @ 06/05/24 14:13:18.217
  STEP: Saw pod success @ 06/05/24 14:13:42.299
  Jun  5 14:13:42.302: INFO: Trying to get logs from node k8sconformance-m02 pod pod-subpath-test-configmap-ffnq container test-container-subpath-configmap-ffnq: <nil>
  STEP: delete the pod @ 06/05/24 14:13:42.31
  STEP: Deleting pod pod-subpath-test-configmap-ffnq @ 06/05/24 14:13:42.326
  Jun  5 14:13:42.326: INFO: Deleting pod "pod-subpath-test-configmap-ffnq" in namespace "subpath-6487"
  Jun  5 14:13:42.328: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-6487" for this suite. @ 06/05/24 14:13:42.331
• [24.143 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:180
  STEP: Creating a kubernetes client @ 06/05/24 14:13:42.337
  Jun  5 14:13:42.337: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename emptydir @ 06/05/24 14:13:42.338
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:13:42.35
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:13:42.353
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 06/05/24 14:13:42.356
  STEP: Saw pod success @ 06/05/24 14:13:46.38
  Jun  5 14:13:46.383: INFO: Trying to get logs from node k8sconformance-m02 pod pod-a21bdecf-9938-4a73-b3ca-c69b50b3a0e5 container test-container: <nil>
  STEP: delete the pod @ 06/05/24 14:13:46.39
  Jun  5 14:13:46.406: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7347" for this suite. @ 06/05/24 14:13:46.409
• [4.077 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:301
  STEP: Creating a kubernetes client @ 06/05/24 14:13:46.414
  Jun  5 14:13:46.414: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename webhook @ 06/05/24 14:13:46.415
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:13:46.428
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:13:46.43
  STEP: Setting up server cert @ 06/05/24 14:13:46.446
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/05/24 14:13:46.629
  STEP: Deploying the webhook pod @ 06/05/24 14:13:46.633
  STEP: Wait for the deployment to be ready @ 06/05/24 14:13:46.64
  Jun  5 14:13:46.643: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 06/05/24 14:13:48.654
  STEP: Verifying the service has paired with the endpoint @ 06/05/24 14:13:48.665
  Jun  5 14:13:49.666: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 06/05/24 14:13:49.674
  STEP: Creating a custom resource definition that should be denied by the webhook @ 06/05/24 14:13:49.691
  Jun  5 14:13:49.691: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  Jun  5 14:13:49.728: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5401" for this suite. @ 06/05/24 14:13:49.731
  STEP: Destroying namespace "webhook-markers-7071" for this suite. @ 06/05/24 14:13:49.734
• [3.324 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 06/05/24 14:13:49.739
  Jun  5 14:13:49.739: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename secrets @ 06/05/24 14:13:49.739
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:13:49.75
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:13:49.752
  STEP: Creating secret with name secret-test-d0823657-2999-4ce6-bf84-edb3088262ea @ 06/05/24 14:13:49.754
  STEP: Creating a pod to test consume secrets @ 06/05/24 14:13:49.757
  STEP: Saw pod success @ 06/05/24 14:13:51.769
  Jun  5 14:13:51.770: INFO: Trying to get logs from node k8sconformance-m02 pod pod-secrets-647c6e13-f131-470c-b953-3dffabb8dd87 container secret-volume-test: <nil>
  STEP: delete the pod @ 06/05/24 14:13:51.774
  Jun  5 14:13:51.788: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2572" for this suite. @ 06/05/24 14:13:51.791
• [2.057 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:177
  STEP: Creating a kubernetes client @ 06/05/24 14:13:51.796
  Jun  5 14:13:51.796: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename crd-webhook @ 06/05/24 14:13:51.797
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:13:51.807
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:13:51.811
  STEP: Setting up server cert @ 06/05/24 14:13:51.813
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 06/05/24 14:13:52.109
  STEP: Deploying the custom resource conversion webhook pod @ 06/05/24 14:13:52.112
  STEP: Wait for the deployment to be ready @ 06/05/24 14:13:52.118
  Jun  5 14:13:52.122: INFO: deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 06/05/24 14:13:54.134
  STEP: Verifying the service has paired with the endpoint @ 06/05/24 14:13:54.147
  Jun  5 14:13:55.147: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  Jun  5 14:13:55.155: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Creating a v1 custom resource @ 06/05/24 14:13:57.722
  STEP: Create a v2 custom resource @ 06/05/24 14:13:57.737
  STEP: List CRs in v1 @ 06/05/24 14:13:57.775
  STEP: List CRs in v2 @ 06/05/24 14:13:57.779
  Jun  5 14:13:58.325: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-7718" for this suite. @ 06/05/24 14:13:58.328
• [6.539 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:793
  STEP: Creating a kubernetes client @ 06/05/24 14:13:58.336
  Jun  5 14:13:58.336: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename statefulset @ 06/05/24 14:13:58.337
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:13:58.346
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:13:58.349
  STEP: Creating service test in namespace statefulset-4383 @ 06/05/24 14:13:58.351
  STEP: Looking for a node to schedule stateful set and pod @ 06/05/24 14:13:58.355
  STEP: Creating pod with conflicting port in namespace statefulset-4383 @ 06/05/24 14:13:58.357
  STEP: Waiting until pod test-pod will start running in namespace statefulset-4383 @ 06/05/24 14:13:58.362
  STEP: Creating statefulset with conflicting port in namespace statefulset-4383 @ 06/05/24 14:14:00.373
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-4383 @ 06/05/24 14:14:00.38
  Jun  5 14:14:00.399: INFO: Observed stateful pod in namespace: statefulset-4383, name: ss-0, uid: 75e7d2d6-3d01-4590-aa38-b0ee65265983, status phase: Pending. Waiting for statefulset controller to delete.
  Jun  5 14:14:00.411: INFO: Observed stateful pod in namespace: statefulset-4383, name: ss-0, uid: 75e7d2d6-3d01-4590-aa38-b0ee65265983, status phase: Failed. Waiting for statefulset controller to delete.
  Jun  5 14:14:00.418: INFO: Observed stateful pod in namespace: statefulset-4383, name: ss-0, uid: 75e7d2d6-3d01-4590-aa38-b0ee65265983, status phase: Failed. Waiting for statefulset controller to delete.
  Jun  5 14:14:00.421: INFO: Observed delete event for stateful pod ss-0 in namespace statefulset-4383
  STEP: Removing pod with conflicting port in namespace statefulset-4383 @ 06/05/24 14:14:00.421
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-4383 and will be in running state @ 06/05/24 14:14:00.431
  Jun  5 14:14:02.446: INFO: Deleting all statefulset in ns statefulset-4383
  Jun  5 14:14:02.449: INFO: Scaling statefulset ss to 0
  Jun  5 14:14:12.466: INFO: Waiting for statefulset status.replicas updated to 0
  Jun  5 14:14:12.469: INFO: Deleting statefulset ss
  Jun  5 14:14:12.479: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-4383" for this suite. @ 06/05/24 14:14:12.483
• [14.152 seconds]
------------------------------
SS
------------------------------
[sig-network] Service endpoints latency should not be very high [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 06/05/24 14:14:12.488
  Jun  5 14:14:12.488: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename svc-latency @ 06/05/24 14:14:12.489
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:14:12.502
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:14:12.505
  Jun  5 14:14:12.507: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: creating replication controller svc-latency-rc in namespace svc-latency-4058 @ 06/05/24 14:14:12.508
  I0605 14:14:12.513922      22 runners.go:197] Created replication controller with name: svc-latency-rc, namespace: svc-latency-4058, replica count: 1
  I0605 14:14:13.565599      22 runners.go:197] svc-latency-rc Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0605 14:14:14.566239      22 runners.go:197] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Jun  5 14:14:14.683: INFO: Created: latency-svc-mk6qt
  Jun  5 14:14:14.689: INFO: Got endpoints: latency-svc-mk6qt [21.991074ms]
  Jun  5 14:14:14.702: INFO: Created: latency-svc-9bpx6
  Jun  5 14:14:14.706: INFO: Got endpoints: latency-svc-9bpx6 [17.062766ms]
  Jun  5 14:14:14.709: INFO: Created: latency-svc-n5k6s
  Jun  5 14:14:14.712: INFO: Got endpoints: latency-svc-n5k6s [22.445603ms]
  Jun  5 14:14:14.717: INFO: Created: latency-svc-kmqbv
  Jun  5 14:14:14.724: INFO: Got endpoints: latency-svc-kmqbv [35.176975ms]
  Jun  5 14:14:14.727: INFO: Created: latency-svc-p9ggc
  Jun  5 14:14:14.734: INFO: Got endpoints: latency-svc-p9ggc [45.029662ms]
  Jun  5 14:14:14.736: INFO: Created: latency-svc-8sphb
  Jun  5 14:14:14.744: INFO: Got endpoints: latency-svc-8sphb [54.206293ms]
  Jun  5 14:14:14.747: INFO: Created: latency-svc-hdfk9
  Jun  5 14:14:14.754: INFO: Got endpoints: latency-svc-hdfk9 [64.258402ms]
  Jun  5 14:14:14.758: INFO: Created: latency-svc-4sjdl
  Jun  5 14:14:14.765: INFO: Got endpoints: latency-svc-4sjdl [75.788037ms]
  Jun  5 14:14:14.768: INFO: Created: latency-svc-s76lr
  Jun  5 14:14:14.777: INFO: Got endpoints: latency-svc-s76lr [87.566853ms]
  Jun  5 14:14:14.781: INFO: Created: latency-svc-jbs8w
  Jun  5 14:14:14.788: INFO: Got endpoints: latency-svc-jbs8w [98.452442ms]
  Jun  5 14:14:14.791: INFO: Created: latency-svc-8tzxj
  Jun  5 14:14:14.795: INFO: Got endpoints: latency-svc-8tzxj [105.712599ms]
  Jun  5 14:14:14.826: INFO: Created: latency-svc-drkgm
  Jun  5 14:14:14.835: INFO: Got endpoints: latency-svc-drkgm [145.706995ms]
  Jun  5 14:14:14.836: INFO: Created: latency-svc-m8dzr
  Jun  5 14:14:14.847: INFO: Got endpoints: latency-svc-m8dzr [157.360173ms]
  Jun  5 14:14:14.851: INFO: Created: latency-svc-hwlhx
  Jun  5 14:14:14.860: INFO: Got endpoints: latency-svc-hwlhx [170.54259ms]
  Jun  5 14:14:14.863: INFO: Created: latency-svc-wb9n5
  Jun  5 14:14:14.871: INFO: Got endpoints: latency-svc-wb9n5 [182.06012ms]
  Jun  5 14:14:14.874: INFO: Created: latency-svc-78mch
  Jun  5 14:14:14.884: INFO: Got endpoints: latency-svc-78mch [194.5856ms]
  Jun  5 14:14:14.888: INFO: Created: latency-svc-7m8gn
  Jun  5 14:14:14.896: INFO: Got endpoints: latency-svc-7m8gn [189.826959ms]
  Jun  5 14:14:14.897: INFO: Created: latency-svc-tmq56
  Jun  5 14:14:14.904: INFO: Got endpoints: latency-svc-tmq56 [192.290176ms]
  Jun  5 14:14:14.908: INFO: Created: latency-svc-4lrnw
  Jun  5 14:14:14.912: INFO: Got endpoints: latency-svc-4lrnw [187.922429ms]
  Jun  5 14:14:14.915: INFO: Created: latency-svc-c7s66
  Jun  5 14:14:14.946: INFO: Got endpoints: latency-svc-c7s66 [211.614675ms]
  Jun  5 14:14:14.949: INFO: Created: latency-svc-cxrbl
  Jun  5 14:14:14.959: INFO: Got endpoints: latency-svc-cxrbl [215.266258ms]
  Jun  5 14:14:14.961: INFO: Created: latency-svc-t672n
  Jun  5 14:14:14.966: INFO: Got endpoints: latency-svc-t672n [211.663626ms]
  Jun  5 14:14:14.972: INFO: Created: latency-svc-kb25v
  Jun  5 14:14:14.976: INFO: Got endpoints: latency-svc-kb25v [210.714411ms]
  Jun  5 14:14:14.985: INFO: Created: latency-svc-p2xdj
  Jun  5 14:14:14.993: INFO: Got endpoints: latency-svc-p2xdj [215.688845ms]
  Jun  5 14:14:14.996: INFO: Created: latency-svc-cwtng
  Jun  5 14:14:14.999: INFO: Got endpoints: latency-svc-cwtng [210.29789ms]
  Jun  5 14:14:15.008: INFO: Created: latency-svc-27p4j
  Jun  5 14:14:15.013: INFO: Got endpoints: latency-svc-27p4j [218.323261ms]
  Jun  5 14:14:15.016: INFO: Created: latency-svc-q9vlw
  Jun  5 14:14:15.018: INFO: Got endpoints: latency-svc-q9vlw [182.788827ms]
  Jun  5 14:14:15.025: INFO: Created: latency-svc-s8cjw
  Jun  5 14:14:15.035: INFO: Got endpoints: latency-svc-s8cjw [188.323196ms]
  Jun  5 14:14:15.043: INFO: Created: latency-svc-64pqm
  Jun  5 14:14:15.076: INFO: Got endpoints: latency-svc-64pqm [215.950886ms]
  Jun  5 14:14:15.079: INFO: Created: latency-svc-ljt74
  Jun  5 14:14:15.082: INFO: Got endpoints: latency-svc-ljt74 [211.113215ms]
  Jun  5 14:14:15.090: INFO: Created: latency-svc-95fb7
  Jun  5 14:14:15.095: INFO: Got endpoints: latency-svc-95fb7 [210.599148ms]
  Jun  5 14:14:15.098: INFO: Created: latency-svc-b7d4j
  Jun  5 14:14:15.106: INFO: Got endpoints: latency-svc-b7d4j [209.642573ms]
  Jun  5 14:14:15.109: INFO: Created: latency-svc-r8pr9
  Jun  5 14:14:15.118: INFO: Got endpoints: latency-svc-r8pr9 [214.201455ms]
  Jun  5 14:14:15.122: INFO: Created: latency-svc-vcmt2
  Jun  5 14:14:15.131: INFO: Got endpoints: latency-svc-vcmt2 [219.114692ms]
  Jun  5 14:14:15.134: INFO: Created: latency-svc-69htj
  Jun  5 14:14:15.138: INFO: Got endpoints: latency-svc-69htj [191.667024ms]
  Jun  5 14:14:15.145: INFO: Created: latency-svc-kpszz
  Jun  5 14:14:15.155: INFO: Got endpoints: latency-svc-kpszz [195.535269ms]
  Jun  5 14:14:15.157: INFO: Created: latency-svc-nlrsq
  Jun  5 14:14:15.167: INFO: Got endpoints: latency-svc-nlrsq [201.208761ms]
  Jun  5 14:14:15.171: INFO: Created: latency-svc-9rrl2
  Jun  5 14:14:15.210: INFO: Got endpoints: latency-svc-9rrl2 [233.743801ms]
  Jun  5 14:14:15.213: INFO: Created: latency-svc-tr4sh
  Jun  5 14:14:15.219: INFO: Got endpoints: latency-svc-tr4sh [225.65247ms]
  Jun  5 14:14:15.226: INFO: Created: latency-svc-zzv6s
  Jun  5 14:14:15.235: INFO: Got endpoints: latency-svc-zzv6s [236.879428ms]
  Jun  5 14:14:15.240: INFO: Created: latency-svc-hlcgj
  Jun  5 14:14:15.244: INFO: Got endpoints: latency-svc-hlcgj [230.238588ms]
  Jun  5 14:14:15.251: INFO: Created: latency-svc-75lmp
  Jun  5 14:14:15.261: INFO: Created: latency-svc-7s4bk
  Jun  5 14:14:15.273: INFO: Created: latency-svc-kvhgw
  Jun  5 14:14:15.284: INFO: Created: latency-svc-55t6x
  Jun  5 14:14:15.289: INFO: Got endpoints: latency-svc-75lmp [270.819957ms]
  Jun  5 14:14:15.295: INFO: Created: latency-svc-wxk5v
  Jun  5 14:14:15.306: INFO: Created: latency-svc-nsvsz
  Jun  5 14:14:15.342: INFO: Got endpoints: latency-svc-7s4bk [306.038048ms]
  Jun  5 14:14:15.345: INFO: Created: latency-svc-rfjhs
  Jun  5 14:14:15.357: INFO: Created: latency-svc-9nl8r
  Jun  5 14:14:15.382: INFO: Created: latency-svc-nr5hq
  Jun  5 14:14:15.397: INFO: Got endpoints: latency-svc-kvhgw [320.884806ms]
  Jun  5 14:14:15.403: INFO: Created: latency-svc-lf9g4
  Jun  5 14:14:15.408: INFO: Created: latency-svc-jhjtx
  Jun  5 14:14:15.415: INFO: Created: latency-svc-kgpzt
  Jun  5 14:14:15.422: INFO: Created: latency-svc-ns264
  Jun  5 14:14:15.430: INFO: Created: latency-svc-tgr9p
  Jun  5 14:14:15.438: INFO: Got endpoints: latency-svc-55t6x [356.001227ms]
  Jun  5 14:14:15.439: INFO: Created: latency-svc-c5j2n
  Jun  5 14:14:15.473: INFO: Created: latency-svc-ksgkq
  Jun  5 14:14:15.482: INFO: Created: latency-svc-8fv92
  Jun  5 14:14:15.490: INFO: Got endpoints: latency-svc-wxk5v [395.27581ms]
  Jun  5 14:14:15.493: INFO: Created: latency-svc-swxhc
  Jun  5 14:14:15.504: INFO: Created: latency-svc-mbtls
  Jun  5 14:14:15.514: INFO: Created: latency-svc-p6ptv
  Jun  5 14:14:15.540: INFO: Got endpoints: latency-svc-nsvsz [433.68758ms]
  Jun  5 14:14:15.556: INFO: Created: latency-svc-t5tl8
  Jun  5 14:14:15.595: INFO: Got endpoints: latency-svc-rfjhs [476.165548ms]
  Jun  5 14:14:15.612: INFO: Created: latency-svc-xf4fb
  Jun  5 14:14:15.638: INFO: Got endpoints: latency-svc-9nl8r [507.005193ms]
  Jun  5 14:14:15.655: INFO: Created: latency-svc-vhmvc
  Jun  5 14:14:15.689: INFO: Got endpoints: latency-svc-nr5hq [551.23109ms]
  Jun  5 14:14:15.711: INFO: Created: latency-svc-cz4sg
  Jun  5 14:14:15.737: INFO: Got endpoints: latency-svc-lf9g4 [582.55719ms]
  Jun  5 14:14:15.749: INFO: Created: latency-svc-xbg8r
  Jun  5 14:14:15.789: INFO: Got endpoints: latency-svc-jhjtx [622.483378ms]
  Jun  5 14:14:15.805: INFO: Created: latency-svc-wjsh5
  Jun  5 14:14:15.840: INFO: Got endpoints: latency-svc-kgpzt [629.767831ms]
  Jun  5 14:14:15.852: INFO: Created: latency-svc-9g9bb
  Jun  5 14:14:15.891: INFO: Got endpoints: latency-svc-ns264 [672.196676ms]
  Jun  5 14:14:15.904: INFO: Created: latency-svc-s6wcd
  Jun  5 14:14:15.939: INFO: Got endpoints: latency-svc-tgr9p [703.846865ms]
  Jun  5 14:14:15.952: INFO: Created: latency-svc-crqft
  Jun  5 14:14:15.991: INFO: Got endpoints: latency-svc-c5j2n [747.12063ms]
  Jun  5 14:14:16.006: INFO: Created: latency-svc-t7tsj
  Jun  5 14:14:16.040: INFO: Got endpoints: latency-svc-ksgkq [751.13492ms]
  Jun  5 14:14:16.054: INFO: Created: latency-svc-65d2q
  Jun  5 14:14:16.092: INFO: Got endpoints: latency-svc-8fv92 [750.585921ms]
  Jun  5 14:14:16.110: INFO: Created: latency-svc-jmmqj
  Jun  5 14:14:16.140: INFO: Got endpoints: latency-svc-swxhc [742.606574ms]
  Jun  5 14:14:16.163: INFO: Created: latency-svc-c6n46
  Jun  5 14:14:16.190: INFO: Got endpoints: latency-svc-mbtls [751.979496ms]
  Jun  5 14:14:16.205: INFO: Created: latency-svc-6xzh5
  Jun  5 14:14:16.245: INFO: Got endpoints: latency-svc-p6ptv [753.970178ms]
  Jun  5 14:14:16.262: INFO: Created: latency-svc-kvwcx
  Jun  5 14:14:16.293: INFO: Got endpoints: latency-svc-t5tl8 [753.084814ms]
  Jun  5 14:14:16.307: INFO: Created: latency-svc-7nl2x
  Jun  5 14:14:16.341: INFO: Got endpoints: latency-svc-xf4fb [745.999ms]
  Jun  5 14:14:16.354: INFO: Created: latency-svc-mprpd
  Jun  5 14:14:16.390: INFO: Got endpoints: latency-svc-vhmvc [751.145374ms]
  Jun  5 14:14:16.404: INFO: Created: latency-svc-p4vbq
  Jun  5 14:14:16.440: INFO: Got endpoints: latency-svc-cz4sg [751.22138ms]
  Jun  5 14:14:16.454: INFO: Created: latency-svc-svlc9
  Jun  5 14:14:16.491: INFO: Got endpoints: latency-svc-xbg8r [753.638208ms]
  Jun  5 14:14:16.506: INFO: Created: latency-svc-phcpz
  Jun  5 14:14:16.540: INFO: Got endpoints: latency-svc-wjsh5 [750.134325ms]
  Jun  5 14:14:16.553: INFO: Created: latency-svc-m9l8t
  Jun  5 14:14:16.590: INFO: Got endpoints: latency-svc-9g9bb [750.510474ms]
  Jun  5 14:14:16.603: INFO: Created: latency-svc-djsw8
  Jun  5 14:14:16.641: INFO: Got endpoints: latency-svc-s6wcd [749.186632ms]
  Jun  5 14:14:16.654: INFO: Created: latency-svc-fnwf9
  Jun  5 14:14:16.689: INFO: Got endpoints: latency-svc-crqft [749.568817ms]
  Jun  5 14:14:16.705: INFO: Created: latency-svc-dbmcf
  Jun  5 14:14:16.738: INFO: Got endpoints: latency-svc-t7tsj [747.326604ms]
  Jun  5 14:14:16.751: INFO: Created: latency-svc-tj8pb
  Jun  5 14:14:16.795: INFO: Got endpoints: latency-svc-65d2q [755.017445ms]
  Jun  5 14:14:16.810: INFO: Created: latency-svc-wrh9w
  Jun  5 14:14:16.840: INFO: Got endpoints: latency-svc-jmmqj [747.757171ms]
  Jun  5 14:14:16.852: INFO: Created: latency-svc-6dgdn
  Jun  5 14:14:16.891: INFO: Got endpoints: latency-svc-c6n46 [751.114713ms]
  Jun  5 14:14:16.909: INFO: Created: latency-svc-fvsmg
  Jun  5 14:14:16.941: INFO: Got endpoints: latency-svc-6xzh5 [751.060239ms]
  Jun  5 14:14:16.953: INFO: Created: latency-svc-8rn5t
  Jun  5 14:14:16.990: INFO: Got endpoints: latency-svc-kvwcx [745.497192ms]
  Jun  5 14:14:17.007: INFO: Created: latency-svc-psmzq
  Jun  5 14:14:17.042: INFO: Got endpoints: latency-svc-7nl2x [749.309632ms]
  Jun  5 14:14:17.056: INFO: Created: latency-svc-jl4ss
  Jun  5 14:14:17.091: INFO: Got endpoints: latency-svc-mprpd [749.672344ms]
  Jun  5 14:14:17.102: INFO: Created: latency-svc-dctwz
  Jun  5 14:14:17.140: INFO: Got endpoints: latency-svc-p4vbq [749.980197ms]
  Jun  5 14:14:17.154: INFO: Created: latency-svc-mlhm9
  Jun  5 14:14:17.190: INFO: Got endpoints: latency-svc-svlc9 [749.821929ms]
  Jun  5 14:14:17.202: INFO: Created: latency-svc-h8j6b
  Jun  5 14:14:17.240: INFO: Got endpoints: latency-svc-phcpz [748.500386ms]
  Jun  5 14:14:17.257: INFO: Created: latency-svc-g5ms6
  Jun  5 14:14:17.289: INFO: Got endpoints: latency-svc-m9l8t [749.488656ms]
  Jun  5 14:14:17.304: INFO: Created: latency-svc-zx489
  Jun  5 14:14:17.341: INFO: Got endpoints: latency-svc-djsw8 [750.325946ms]
  Jun  5 14:14:17.353: INFO: Created: latency-svc-cmw5z
  Jun  5 14:14:17.391: INFO: Got endpoints: latency-svc-fnwf9 [750.732998ms]
  Jun  5 14:14:17.404: INFO: Created: latency-svc-s2jx4
  Jun  5 14:14:17.440: INFO: Got endpoints: latency-svc-dbmcf [750.834289ms]
  Jun  5 14:14:17.454: INFO: Created: latency-svc-pvfdr
  Jun  5 14:14:17.488: INFO: Got endpoints: latency-svc-tj8pb [750.010941ms]
  Jun  5 14:14:17.502: INFO: Created: latency-svc-spgt9
  Jun  5 14:14:17.538: INFO: Got endpoints: latency-svc-wrh9w [742.607692ms]
  Jun  5 14:14:17.551: INFO: Created: latency-svc-dzkpl
  Jun  5 14:14:17.588: INFO: Got endpoints: latency-svc-6dgdn [747.814529ms]
  Jun  5 14:14:17.601: INFO: Created: latency-svc-dm7bq
  Jun  5 14:14:17.639: INFO: Got endpoints: latency-svc-fvsmg [747.898517ms]
  Jun  5 14:14:17.671: INFO: Created: latency-svc-6tfkm
  Jun  5 14:14:17.687: INFO: Got endpoints: latency-svc-8rn5t [745.346537ms]
  Jun  5 14:14:17.697: INFO: Created: latency-svc-znjzm
  Jun  5 14:14:17.742: INFO: Got endpoints: latency-svc-psmzq [751.79835ms]
  Jun  5 14:14:17.754: INFO: Created: latency-svc-rhr9s
  Jun  5 14:14:17.789: INFO: Got endpoints: latency-svc-jl4ss [747.001447ms]
  Jun  5 14:14:17.801: INFO: Created: latency-svc-m4tpd
  Jun  5 14:14:17.839: INFO: Got endpoints: latency-svc-dctwz [748.768188ms]
  Jun  5 14:14:17.857: INFO: Created: latency-svc-bnl8l
  Jun  5 14:14:17.888: INFO: Got endpoints: latency-svc-mlhm9 [748.656105ms]
  Jun  5 14:14:17.901: INFO: Created: latency-svc-779hz
  Jun  5 14:14:17.940: INFO: Got endpoints: latency-svc-h8j6b [749.970778ms]
  Jun  5 14:14:17.956: INFO: Created: latency-svc-zfqz6
  Jun  5 14:14:17.991: INFO: Got endpoints: latency-svc-g5ms6 [751.660593ms]
  Jun  5 14:14:18.005: INFO: Created: latency-svc-gqb9k
  Jun  5 14:14:18.040: INFO: Got endpoints: latency-svc-zx489 [751.093219ms]
  Jun  5 14:14:18.052: INFO: Created: latency-svc-nq966
  Jun  5 14:14:18.090: INFO: Got endpoints: latency-svc-cmw5z [749.672146ms]
  Jun  5 14:14:18.102: INFO: Created: latency-svc-s8vhd
  Jun  5 14:14:18.140: INFO: Got endpoints: latency-svc-s2jx4 [748.247927ms]
  Jun  5 14:14:18.152: INFO: Created: latency-svc-j2pgb
  Jun  5 14:14:18.192: INFO: Got endpoints: latency-svc-pvfdr [751.616356ms]
  Jun  5 14:14:18.204: INFO: Created: latency-svc-j8gvh
  Jun  5 14:14:18.241: INFO: Got endpoints: latency-svc-spgt9 [752.899705ms]
  Jun  5 14:14:18.253: INFO: Created: latency-svc-7vxcf
  Jun  5 14:14:18.340: INFO: Got endpoints: latency-svc-dzkpl [801.48329ms]
  Jun  5 14:14:18.353: INFO: Created: latency-svc-xtm5m
  Jun  5 14:14:18.389: INFO: Got endpoints: latency-svc-dm7bq [801.484804ms]
  Jun  5 14:14:18.403: INFO: Created: latency-svc-8wv5j
  Jun  5 14:14:18.441: INFO: Got endpoints: latency-svc-6tfkm [802.152895ms]
  Jun  5 14:14:18.453: INFO: Created: latency-svc-cfqbk
  Jun  5 14:14:18.492: INFO: Got endpoints: latency-svc-znjzm [805.128898ms]
  Jun  5 14:14:18.505: INFO: Created: latency-svc-9q6xz
  Jun  5 14:14:18.540: INFO: Got endpoints: latency-svc-rhr9s [797.696075ms]
  Jun  5 14:14:18.554: INFO: Created: latency-svc-rp64t
  Jun  5 14:14:18.589: INFO: Got endpoints: latency-svc-m4tpd [799.546995ms]
  Jun  5 14:14:18.603: INFO: Created: latency-svc-lsmzr
  Jun  5 14:14:18.642: INFO: Got endpoints: latency-svc-bnl8l [802.278912ms]
  Jun  5 14:14:18.655: INFO: Created: latency-svc-6bw5c
  Jun  5 14:14:18.689: INFO: Got endpoints: latency-svc-779hz [800.076993ms]
  Jun  5 14:14:18.700: INFO: Created: latency-svc-fhz6d
  Jun  5 14:14:18.741: INFO: Got endpoints: latency-svc-zfqz6 [800.58506ms]
  Jun  5 14:14:18.753: INFO: Created: latency-svc-4lfdj
  Jun  5 14:14:18.791: INFO: Got endpoints: latency-svc-gqb9k [799.974887ms]
  Jun  5 14:14:18.805: INFO: Created: latency-svc-flq8t
  Jun  5 14:14:18.840: INFO: Got endpoints: latency-svc-nq966 [799.594435ms]
  Jun  5 14:14:18.853: INFO: Created: latency-svc-7kzpl
  Jun  5 14:14:18.890: INFO: Got endpoints: latency-svc-s8vhd [799.387068ms]
  Jun  5 14:14:18.906: INFO: Created: latency-svc-v24qx
  Jun  5 14:14:18.940: INFO: Got endpoints: latency-svc-j2pgb [799.915761ms]
  Jun  5 14:14:18.952: INFO: Created: latency-svc-5dcns
  Jun  5 14:14:18.991: INFO: Got endpoints: latency-svc-j8gvh [799.003567ms]
  Jun  5 14:14:19.005: INFO: Created: latency-svc-4dq42
  Jun  5 14:14:19.043: INFO: Got endpoints: latency-svc-7vxcf [801.498115ms]
  Jun  5 14:14:19.055: INFO: Created: latency-svc-45l9r
  Jun  5 14:14:19.089: INFO: Got endpoints: latency-svc-xtm5m [748.870642ms]
  Jun  5 14:14:19.096: INFO: Created: latency-svc-n66mt
  Jun  5 14:14:19.140: INFO: Got endpoints: latency-svc-8wv5j [750.689541ms]
  Jun  5 14:14:19.154: INFO: Created: latency-svc-rzcn7
  Jun  5 14:14:19.191: INFO: Got endpoints: latency-svc-cfqbk [749.489143ms]
  Jun  5 14:14:19.203: INFO: Created: latency-svc-kc7xs
  Jun  5 14:14:19.238: INFO: Got endpoints: latency-svc-9q6xz [746.396433ms]
  Jun  5 14:14:19.251: INFO: Created: latency-svc-slv7c
  Jun  5 14:14:19.289: INFO: Got endpoints: latency-svc-rp64t [749.167229ms]
  Jun  5 14:14:19.301: INFO: Created: latency-svc-77cpk
  Jun  5 14:14:19.340: INFO: Got endpoints: latency-svc-lsmzr [750.679357ms]
  Jun  5 14:14:19.354: INFO: Created: latency-svc-fwrx5
  Jun  5 14:14:19.390: INFO: Got endpoints: latency-svc-6bw5c [748.39459ms]
  Jun  5 14:14:19.402: INFO: Created: latency-svc-mcpx4
  Jun  5 14:14:19.440: INFO: Got endpoints: latency-svc-fhz6d [751.465959ms]
  Jun  5 14:14:19.453: INFO: Created: latency-svc-n8554
  Jun  5 14:14:19.490: INFO: Got endpoints: latency-svc-4lfdj [749.117542ms]
  Jun  5 14:14:19.502: INFO: Created: latency-svc-hvtqw
  Jun  5 14:14:19.539: INFO: Got endpoints: latency-svc-flq8t [747.347666ms]
  Jun  5 14:14:19.550: INFO: Created: latency-svc-2dsgz
  Jun  5 14:14:19.589: INFO: Got endpoints: latency-svc-7kzpl [748.633555ms]
  Jun  5 14:14:19.600: INFO: Created: latency-svc-b4wjj
  Jun  5 14:14:19.641: INFO: Got endpoints: latency-svc-v24qx [751.562812ms]
  Jun  5 14:14:19.655: INFO: Created: latency-svc-8ksxn
  Jun  5 14:14:19.687: INFO: Got endpoints: latency-svc-5dcns [747.732791ms]
  Jun  5 14:14:19.698: INFO: Created: latency-svc-p5hb2
  Jun  5 14:14:19.738: INFO: Got endpoints: latency-svc-4dq42 [747.149609ms]
  Jun  5 14:14:19.750: INFO: Created: latency-svc-69szx
  Jun  5 14:14:19.791: INFO: Got endpoints: latency-svc-45l9r [748.219229ms]
  Jun  5 14:14:19.805: INFO: Created: latency-svc-sdw62
  Jun  5 14:14:19.846: INFO: Got endpoints: latency-svc-n66mt [757.184479ms]
  Jun  5 14:14:19.860: INFO: Created: latency-svc-49l4z
  Jun  5 14:14:19.890: INFO: Got endpoints: latency-svc-rzcn7 [749.610885ms]
  Jun  5 14:14:19.902: INFO: Created: latency-svc-df4vt
  Jun  5 14:14:19.938: INFO: Got endpoints: latency-svc-kc7xs [746.951811ms]
  Jun  5 14:14:19.954: INFO: Created: latency-svc-bcdc5
  Jun  5 14:14:19.991: INFO: Got endpoints: latency-svc-slv7c [752.470262ms]
  Jun  5 14:14:20.003: INFO: Created: latency-svc-t9g55
  Jun  5 14:14:20.040: INFO: Got endpoints: latency-svc-77cpk [750.698044ms]
  Jun  5 14:14:20.054: INFO: Created: latency-svc-mjd9t
  Jun  5 14:14:20.089: INFO: Got endpoints: latency-svc-fwrx5 [748.803293ms]
  Jun  5 14:14:20.099: INFO: Created: latency-svc-z89r4
  Jun  5 14:14:20.140: INFO: Got endpoints: latency-svc-mcpx4 [749.293637ms]
  Jun  5 14:14:20.150: INFO: Created: latency-svc-7xkbd
  Jun  5 14:14:20.190: INFO: Got endpoints: latency-svc-n8554 [750.250284ms]
  Jun  5 14:14:20.203: INFO: Created: latency-svc-tkhfd
  Jun  5 14:14:20.240: INFO: Got endpoints: latency-svc-hvtqw [750.576313ms]
  Jun  5 14:14:20.252: INFO: Created: latency-svc-7twgd
  Jun  5 14:14:20.290: INFO: Got endpoints: latency-svc-2dsgz [751.466495ms]
  Jun  5 14:14:20.303: INFO: Created: latency-svc-q2tr5
  Jun  5 14:14:20.338: INFO: Got endpoints: latency-svc-b4wjj [749.307463ms]
  Jun  5 14:14:20.363: INFO: Created: latency-svc-cfh82
  Jun  5 14:14:20.386: INFO: Got endpoints: latency-svc-8ksxn [744.102684ms]
  Jun  5 14:14:20.393: INFO: Created: latency-svc-hdj6m
  Jun  5 14:14:20.440: INFO: Got endpoints: latency-svc-p5hb2 [752.309818ms]
  Jun  5 14:14:20.453: INFO: Created: latency-svc-vqmgr
  Jun  5 14:14:20.491: INFO: Got endpoints: latency-svc-69szx [752.894056ms]
  Jun  5 14:14:20.504: INFO: Created: latency-svc-ttqwh
  Jun  5 14:14:20.538: INFO: Got endpoints: latency-svc-sdw62 [746.728648ms]
  Jun  5 14:14:20.550: INFO: Created: latency-svc-gk72z
  Jun  5 14:14:20.589: INFO: Got endpoints: latency-svc-49l4z [742.73082ms]
  Jun  5 14:14:20.602: INFO: Created: latency-svc-5prv5
  Jun  5 14:14:20.641: INFO: Got endpoints: latency-svc-df4vt [751.483636ms]
  Jun  5 14:14:20.652: INFO: Created: latency-svc-g7fr4
  Jun  5 14:14:20.690: INFO: Got endpoints: latency-svc-bcdc5 [751.706169ms]
  Jun  5 14:14:20.701: INFO: Created: latency-svc-l26sg
  Jun  5 14:14:20.738: INFO: Got endpoints: latency-svc-t9g55 [746.586103ms]
  Jun  5 14:14:20.745: INFO: Created: latency-svc-fgm2r
  Jun  5 14:14:20.795: INFO: Got endpoints: latency-svc-mjd9t [754.653166ms]
  Jun  5 14:14:20.807: INFO: Created: latency-svc-8tgnm
  Jun  5 14:14:20.840: INFO: Got endpoints: latency-svc-z89r4 [751.646287ms]
  Jun  5 14:14:20.852: INFO: Created: latency-svc-x4cwn
  Jun  5 14:14:20.891: INFO: Got endpoints: latency-svc-7xkbd [751.170657ms]
  Jun  5 14:14:20.908: INFO: Created: latency-svc-khcbd
  Jun  5 14:14:20.939: INFO: Got endpoints: latency-svc-tkhfd [748.62459ms]
  Jun  5 14:14:20.952: INFO: Created: latency-svc-snd82
  Jun  5 14:14:20.990: INFO: Got endpoints: latency-svc-7twgd [749.69209ms]
  Jun  5 14:14:21.006: INFO: Created: latency-svc-hdhvf
  Jun  5 14:14:21.042: INFO: Got endpoints: latency-svc-q2tr5 [751.085935ms]
  Jun  5 14:14:21.056: INFO: Created: latency-svc-ltz7z
  Jun  5 14:14:21.088: INFO: Got endpoints: latency-svc-cfh82 [750.364806ms]
  Jun  5 14:14:21.097: INFO: Created: latency-svc-srm8h
  Jun  5 14:14:21.140: INFO: Got endpoints: latency-svc-hdj6m [754.025793ms]
  Jun  5 14:14:21.153: INFO: Created: latency-svc-j7trn
  Jun  5 14:14:21.190: INFO: Got endpoints: latency-svc-vqmgr [750.192524ms]
  Jun  5 14:14:21.202: INFO: Created: latency-svc-dzqjl
  Jun  5 14:14:21.241: INFO: Got endpoints: latency-svc-ttqwh [749.899246ms]
  Jun  5 14:14:21.255: INFO: Created: latency-svc-lrddn
  Jun  5 14:14:21.291: INFO: Got endpoints: latency-svc-gk72z [752.600644ms]
  Jun  5 14:14:21.303: INFO: Created: latency-svc-q69mg
  Jun  5 14:14:21.340: INFO: Got endpoints: latency-svc-5prv5 [750.992954ms]
  Jun  5 14:14:21.351: INFO: Created: latency-svc-d49dk
  Jun  5 14:14:21.390: INFO: Got endpoints: latency-svc-g7fr4 [748.447327ms]
  Jun  5 14:14:21.404: INFO: Created: latency-svc-r2z4h
  Jun  5 14:14:21.440: INFO: Got endpoints: latency-svc-l26sg [750.281949ms]
  Jun  5 14:14:21.452: INFO: Created: latency-svc-5r2r6
  Jun  5 14:14:21.490: INFO: Got endpoints: latency-svc-fgm2r [752.193931ms]
  Jun  5 14:14:21.502: INFO: Created: latency-svc-b59zm
  Jun  5 14:14:21.539: INFO: Got endpoints: latency-svc-8tgnm [744.751562ms]
  Jun  5 14:14:21.552: INFO: Created: latency-svc-tswl6
  Jun  5 14:14:21.589: INFO: Got endpoints: latency-svc-x4cwn [748.865828ms]
  Jun  5 14:14:21.600: INFO: Created: latency-svc-qwvjg
  Jun  5 14:14:21.639: INFO: Got endpoints: latency-svc-khcbd [748.263161ms]
  Jun  5 14:14:21.651: INFO: Created: latency-svc-zcfxn
  Jun  5 14:14:21.689: INFO: Got endpoints: latency-svc-snd82 [750.113791ms]
  Jun  5 14:14:21.702: INFO: Created: latency-svc-dw7sj
  Jun  5 14:14:21.738: INFO: Got endpoints: latency-svc-hdhvf [747.871384ms]
  Jun  5 14:14:21.750: INFO: Created: latency-svc-ts8wv
  Jun  5 14:14:21.790: INFO: Got endpoints: latency-svc-ltz7z [748.402948ms]
  Jun  5 14:14:21.802: INFO: Created: latency-svc-d52qs
  Jun  5 14:14:21.842: INFO: Got endpoints: latency-svc-srm8h [753.16543ms]
  Jun  5 14:14:21.852: INFO: Created: latency-svc-w4lfk
  Jun  5 14:14:21.890: INFO: Got endpoints: latency-svc-j7trn [750.021097ms]
  Jun  5 14:14:21.902: INFO: Created: latency-svc-6ldqh
  Jun  5 14:14:21.940: INFO: Got endpoints: latency-svc-dzqjl [750.106635ms]
  Jun  5 14:14:21.956: INFO: Created: latency-svc-4cnnv
  Jun  5 14:14:21.990: INFO: Got endpoints: latency-svc-lrddn [749.590356ms]
  Jun  5 14:14:22.003: INFO: Created: latency-svc-nl8xv
  Jun  5 14:14:22.040: INFO: Got endpoints: latency-svc-q69mg [749.531823ms]
  Jun  5 14:14:22.055: INFO: Created: latency-svc-kq8n8
  Jun  5 14:14:22.089: INFO: Got endpoints: latency-svc-d49dk [748.975764ms]
  Jun  5 14:14:22.104: INFO: Created: latency-svc-dlpbp
  Jun  5 14:14:22.139: INFO: Got endpoints: latency-svc-r2z4h [749.573023ms]
  Jun  5 14:14:22.157: INFO: Created: latency-svc-8ql5k
  Jun  5 14:14:22.192: INFO: Got endpoints: latency-svc-5r2r6 [752.053167ms]
  Jun  5 14:14:22.206: INFO: Created: latency-svc-nfzkj
  Jun  5 14:14:22.239: INFO: Got endpoints: latency-svc-b59zm [749.361924ms]
  Jun  5 14:14:22.252: INFO: Created: latency-svc-rz8pg
  Jun  5 14:14:22.290: INFO: Got endpoints: latency-svc-tswl6 [750.082352ms]
  Jun  5 14:14:22.305: INFO: Created: latency-svc-f8z9d
  Jun  5 14:14:22.340: INFO: Got endpoints: latency-svc-qwvjg [750.890944ms]
  Jun  5 14:14:22.352: INFO: Created: latency-svc-nfg9w
  Jun  5 14:14:22.392: INFO: Got endpoints: latency-svc-zcfxn [753.001745ms]
  Jun  5 14:14:22.405: INFO: Created: latency-svc-8lfs6
  Jun  5 14:14:22.441: INFO: Got endpoints: latency-svc-dw7sj [751.196901ms]
  Jun  5 14:14:22.453: INFO: Created: latency-svc-v2rd6
  Jun  5 14:14:22.491: INFO: Got endpoints: latency-svc-ts8wv [752.994222ms]
  Jun  5 14:14:22.504: INFO: Created: latency-svc-zgvl2
  Jun  5 14:14:22.539: INFO: Got endpoints: latency-svc-d52qs [748.490056ms]
  Jun  5 14:14:22.552: INFO: Created: latency-svc-zpph2
  Jun  5 14:14:22.591: INFO: Got endpoints: latency-svc-w4lfk [749.00552ms]
  Jun  5 14:14:22.640: INFO: Got endpoints: latency-svc-6ldqh [750.26529ms]
  Jun  5 14:14:22.688: INFO: Got endpoints: latency-svc-4cnnv [747.540017ms]
  Jun  5 14:14:22.737: INFO: Got endpoints: latency-svc-nl8xv [746.088357ms]
  Jun  5 14:14:22.790: INFO: Got endpoints: latency-svc-kq8n8 [749.928996ms]
  Jun  5 14:14:22.842: INFO: Got endpoints: latency-svc-dlpbp [753.37161ms]
  Jun  5 14:14:22.890: INFO: Got endpoints: latency-svc-8ql5k [750.457032ms]
  Jun  5 14:14:22.941: INFO: Got endpoints: latency-svc-nfzkj [748.58462ms]
  Jun  5 14:14:22.991: INFO: Got endpoints: latency-svc-rz8pg [751.585237ms]
  Jun  5 14:14:23.042: INFO: Got endpoints: latency-svc-f8z9d [752.399745ms]
  Jun  5 14:14:23.087: INFO: Got endpoints: latency-svc-nfg9w [747.150443ms]
  Jun  5 14:14:23.140: INFO: Got endpoints: latency-svc-8lfs6 [747.919118ms]
  Jun  5 14:14:23.189: INFO: Got endpoints: latency-svc-v2rd6 [748.614818ms]
  Jun  5 14:14:23.240: INFO: Got endpoints: latency-svc-zgvl2 [748.937327ms]
  Jun  5 14:14:23.288: INFO: Got endpoints: latency-svc-zpph2 [749.772057ms]
  Jun  5 14:14:23.289: INFO: Latencies: [17.062766ms 22.445603ms 35.176975ms 45.029662ms 54.206293ms 64.258402ms 75.788037ms 87.566853ms 98.452442ms 105.712599ms 145.706995ms 157.360173ms 170.54259ms 182.06012ms 182.788827ms 187.922429ms 188.323196ms 189.826959ms 191.667024ms 192.290176ms 194.5856ms 195.535269ms 201.208761ms 209.642573ms 210.29789ms 210.599148ms 210.714411ms 211.113215ms 211.614675ms 211.663626ms 214.201455ms 215.266258ms 215.688845ms 215.950886ms 218.323261ms 219.114692ms 225.65247ms 230.238588ms 233.743801ms 236.879428ms 270.819957ms 306.038048ms 320.884806ms 356.001227ms 395.27581ms 433.68758ms 476.165548ms 507.005193ms 551.23109ms 582.55719ms 622.483378ms 629.767831ms 672.196676ms 703.846865ms 742.606574ms 742.607692ms 742.73082ms 744.102684ms 744.751562ms 745.346537ms 745.497192ms 745.999ms 746.088357ms 746.396433ms 746.586103ms 746.728648ms 746.951811ms 747.001447ms 747.12063ms 747.149609ms 747.150443ms 747.326604ms 747.347666ms 747.540017ms 747.732791ms 747.757171ms 747.814529ms 747.871384ms 747.898517ms 747.919118ms 748.219229ms 748.247927ms 748.263161ms 748.39459ms 748.402948ms 748.447327ms 748.490056ms 748.500386ms 748.58462ms 748.614818ms 748.62459ms 748.633555ms 748.656105ms 748.768188ms 748.803293ms 748.865828ms 748.870642ms 748.937327ms 748.975764ms 749.00552ms 749.117542ms 749.167229ms 749.186632ms 749.293637ms 749.307463ms 749.309632ms 749.361924ms 749.488656ms 749.489143ms 749.531823ms 749.568817ms 749.573023ms 749.590356ms 749.610885ms 749.672146ms 749.672344ms 749.69209ms 749.772057ms 749.821929ms 749.899246ms 749.928996ms 749.970778ms 749.980197ms 750.010941ms 750.021097ms 750.082352ms 750.106635ms 750.113791ms 750.134325ms 750.192524ms 750.250284ms 750.26529ms 750.281949ms 750.325946ms 750.364806ms 750.457032ms 750.510474ms 750.576313ms 750.585921ms 750.679357ms 750.689541ms 750.698044ms 750.732998ms 750.834289ms 750.890944ms 750.992954ms 751.060239ms 751.085935ms 751.093219ms 751.114713ms 751.13492ms 751.145374ms 751.170657ms 751.196901ms 751.22138ms 751.465959ms 751.466495ms 751.483636ms 751.562812ms 751.585237ms 751.616356ms 751.646287ms 751.660593ms 751.706169ms 751.79835ms 751.979496ms 752.053167ms 752.193931ms 752.309818ms 752.399745ms 752.470262ms 752.600644ms 752.894056ms 752.899705ms 752.994222ms 753.001745ms 753.084814ms 753.16543ms 753.37161ms 753.638208ms 753.970178ms 754.025793ms 754.653166ms 755.017445ms 757.184479ms 797.696075ms 799.003567ms 799.387068ms 799.546995ms 799.594435ms 799.915761ms 799.974887ms 800.076993ms 800.58506ms 801.48329ms 801.484804ms 801.498115ms 802.152895ms 802.278912ms 805.128898ms]
  Jun  5 14:14:23.289: INFO: 50 %ile: 749.117542ms
  Jun  5 14:14:23.289: INFO: 90 %ile: 753.970178ms
  Jun  5 14:14:23.289: INFO: 99 %ile: 802.278912ms
  Jun  5 14:14:23.289: INFO: Total sample count: 200
  Jun  5 14:14:23.289: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-4058" for this suite. @ 06/05/24 14:14:23.293
• [10.812 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3129
  STEP: Creating a kubernetes client @ 06/05/24 14:14:23.301
  Jun  5 14:14:23.301: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename services @ 06/05/24 14:14:23.303
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:14:23.313
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:14:23.316
  STEP: fetching services @ 06/05/24 14:14:23.319
  Jun  5 14:14:23.325: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9444" for this suite. @ 06/05/24 14:14:23.328
• [0.031 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/logs.go:114
  STEP: Creating a kubernetes client @ 06/05/24 14:14:23.333
  Jun  5 14:14:23.333: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename kubectl-logs @ 06/05/24 14:14:23.334
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:14:23.341
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:14:23.343
  STEP: creating an pod @ 06/05/24 14:14:23.345
  Jun  5 14:14:23.345: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=kubectl-logs-9543 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.47 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  Jun  5 14:14:23.388: INFO: stderr: ""
  Jun  5 14:14:23.388: INFO: stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 06/05/24 14:14:23.388
  Jun  5 14:14:23.388: INFO: Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  Jun  5 14:14:25.392: INFO: Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 06/05/24 14:14:25.392
  Jun  5 14:14:25.392: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=kubectl-logs-9543 logs logs-generator logs-generator'
  Jun  5 14:14:25.429: INFO: stderr: ""
  Jun  5 14:14:25.429: INFO: stdout: "I0605 14:14:23.991357       1 logs_generator.go:76] 0 PUT /api/v1/namespaces/ns/pods/6sd 346\nI0605 14:14:24.191989       1 logs_generator.go:76] 1 POST /api/v1/namespaces/ns/pods/42r 267\nI0605 14:14:24.391618       1 logs_generator.go:76] 2 POST /api/v1/namespaces/ns/pods/xxjv 415\nI0605 14:14:24.591874       1 logs_generator.go:76] 3 GET /api/v1/namespaces/kube-system/pods/nhr 223\nI0605 14:14:24.792314       1 logs_generator.go:76] 4 GET /api/v1/namespaces/default/pods/b9j 349\nI0605 14:14:24.991562       1 logs_generator.go:76] 5 GET /api/v1/namespaces/ns/pods/k4z5 415\nI0605 14:14:25.192114       1 logs_generator.go:76] 6 POST /api/v1/namespaces/default/pods/4lz 241\nI0605 14:14:25.391491       1 logs_generator.go:76] 7 POST /api/v1/namespaces/kube-system/pods/lzk 553\n"
  STEP: limiting log lines @ 06/05/24 14:14:25.429
  Jun  5 14:14:25.429: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=kubectl-logs-9543 logs logs-generator logs-generator --tail=1'
  Jun  5 14:14:25.468: INFO: stderr: ""
  Jun  5 14:14:25.468: INFO: stdout: "I0605 14:14:25.391491       1 logs_generator.go:76] 7 POST /api/v1/namespaces/kube-system/pods/lzk 553\n"
  Jun  5 14:14:25.468: INFO: got output "I0605 14:14:25.391491       1 logs_generator.go:76] 7 POST /api/v1/namespaces/kube-system/pods/lzk 553\n"
  STEP: limiting log bytes @ 06/05/24 14:14:25.468
  Jun  5 14:14:25.468: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=kubectl-logs-9543 logs logs-generator logs-generator --limit-bytes=1'
  Jun  5 14:14:25.506: INFO: stderr: ""
  Jun  5 14:14:25.506: INFO: stdout: "I"
  Jun  5 14:14:25.506: INFO: got output "I"
  STEP: exposing timestamps @ 06/05/24 14:14:25.506
  Jun  5 14:14:25.506: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=kubectl-logs-9543 logs logs-generator logs-generator --tail=1 --timestamps'
  Jun  5 14:14:25.544: INFO: stderr: ""
  Jun  5 14:14:25.544: INFO: stdout: "2024-06-05T14:14:25.391590126Z I0605 14:14:25.391491       1 logs_generator.go:76] 7 POST /api/v1/namespaces/kube-system/pods/lzk 553\n"
  Jun  5 14:14:25.544: INFO: got output "2024-06-05T14:14:25.391590126Z I0605 14:14:25.391491       1 logs_generator.go:76] 7 POST /api/v1/namespaces/kube-system/pods/lzk 553\n"
  STEP: restricting to a time range @ 06/05/24 14:14:25.544
  Jun  5 14:14:28.044: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=kubectl-logs-9543 logs logs-generator logs-generator --since=1s'
  Jun  5 14:14:28.089: INFO: stderr: ""
  Jun  5 14:14:28.089: INFO: stdout: "I0605 14:14:27.192040       1 logs_generator.go:76] 16 PUT /api/v1/namespaces/ns/pods/hkmj 257\nI0605 14:14:27.391535       1 logs_generator.go:76] 17 PUT /api/v1/namespaces/ns/pods/jwh 305\nI0605 14:14:27.591981       1 logs_generator.go:76] 18 PUT /api/v1/namespaces/default/pods/tkm 232\nI0605 14:14:27.792494       1 logs_generator.go:76] 19 PUT /api/v1/namespaces/default/pods/lgtn 529\nI0605 14:14:27.992011       1 logs_generator.go:76] 20 GET /api/v1/namespaces/kube-system/pods/kmh 555\n"
  Jun  5 14:14:28.089: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=kubectl-logs-9543 logs logs-generator logs-generator --since=24h'
  Jun  5 14:14:28.129: INFO: stderr: ""
  Jun  5 14:14:28.129: INFO: stdout: "I0605 14:14:23.991357       1 logs_generator.go:76] 0 PUT /api/v1/namespaces/ns/pods/6sd 346\nI0605 14:14:24.191989       1 logs_generator.go:76] 1 POST /api/v1/namespaces/ns/pods/42r 267\nI0605 14:14:24.391618       1 logs_generator.go:76] 2 POST /api/v1/namespaces/ns/pods/xxjv 415\nI0605 14:14:24.591874       1 logs_generator.go:76] 3 GET /api/v1/namespaces/kube-system/pods/nhr 223\nI0605 14:14:24.792314       1 logs_generator.go:76] 4 GET /api/v1/namespaces/default/pods/b9j 349\nI0605 14:14:24.991562       1 logs_generator.go:76] 5 GET /api/v1/namespaces/ns/pods/k4z5 415\nI0605 14:14:25.192114       1 logs_generator.go:76] 6 POST /api/v1/namespaces/default/pods/4lz 241\nI0605 14:14:25.391491       1 logs_generator.go:76] 7 POST /api/v1/namespaces/kube-system/pods/lzk 553\nI0605 14:14:25.592022       1 logs_generator.go:76] 8 GET /api/v1/namespaces/kube-system/pods/7tgt 379\nI0605 14:14:25.792525       1 logs_generator.go:76] 9 GET /api/v1/namespaces/ns/pods/zjzn 329\nI0605 14:14:25.992003       1 logs_generator.go:76] 10 PUT /api/v1/namespaces/kube-system/pods/xsm6 305\nI0605 14:14:26.191569       1 logs_generator.go:76] 11 GET /api/v1/namespaces/default/pods/wq9 355\nI0605 14:14:26.392158       1 logs_generator.go:76] 12 POST /api/v1/namespaces/ns/pods/4hk 336\nI0605 14:14:26.591671       1 logs_generator.go:76] 13 POST /api/v1/namespaces/ns/pods/cc6 402\nI0605 14:14:26.792088       1 logs_generator.go:76] 14 GET /api/v1/namespaces/kube-system/pods/q82 418\nI0605 14:14:26.991499       1 logs_generator.go:76] 15 PUT /api/v1/namespaces/ns/pods/lrbf 433\nI0605 14:14:27.192040       1 logs_generator.go:76] 16 PUT /api/v1/namespaces/ns/pods/hkmj 257\nI0605 14:14:27.391535       1 logs_generator.go:76] 17 PUT /api/v1/namespaces/ns/pods/jwh 305\nI0605 14:14:27.591981       1 logs_generator.go:76] 18 PUT /api/v1/namespaces/default/pods/tkm 232\nI0605 14:14:27.792494       1 logs_generator.go:76] 19 PUT /api/v1/namespaces/default/pods/lgtn 529\nI0605 14:14:27.992011       1 logs_generator.go:76] 20 GET /api/v1/namespaces/kube-system/pods/kmh 555\n"
  Jun  5 14:14:28.129: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=kubectl-logs-9543 delete pod logs-generator'
  Jun  5 14:14:29.079: INFO: stderr: ""
  Jun  5 14:14:29.079: INFO: stdout: "pod \"logs-generator\" deleted\n"
  Jun  5 14:14:29.079: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-9543" for this suite. @ 06/05/24 14:14:29.083
• [5.757 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 06/05/24 14:14:29.092
  Jun  5 14:14:29.092: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename hostport @ 06/05/24 14:14:29.093
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:14:29.1
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:14:29.102
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 06/05/24 14:14:29.105
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 192.168.67.2 on the node which pod1 resides and expect scheduled @ 06/05/24 14:14:31.118
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 192.168.67.2 but use UDP protocol on the node which pod2 resides @ 06/05/24 14:14:35.135
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 06/05/24 14:14:39.171
  Jun  5 14:14:39.171: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 192.168.67.2 http://127.0.0.1:54323/hostname] Namespace:hostport-9951 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun  5 14:14:39.171: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  Jun  5 14:14:39.172: INFO: ExecWithOptions: Clientset creation
  Jun  5 14:14:39.172: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/hostport-9951/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+192.168.67.2+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 192.168.67.2, port: 54323 @ 06/05/24 14:14:39.244
  Jun  5 14:14:39.244: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://192.168.67.2:54323/hostname] Namespace:hostport-9951 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun  5 14:14:39.244: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  Jun  5 14:14:39.244: INFO: ExecWithOptions: Clientset creation
  Jun  5 14:14:39.244: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/hostport-9951/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F192.168.67.2%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 192.168.67.2, port: 54323 UDP @ 06/05/24 14:14:39.308
  Jun  5 14:14:39.308: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 192.168.67.2 54323] Namespace:hostport-9951 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun  5 14:14:39.308: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  Jun  5 14:14:39.308: INFO: ExecWithOptions: Clientset creation
  Jun  5 14:14:39.308: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/hostport-9951/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+192.168.67.2+54323&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  Jun  5 14:14:44.381: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-9951" for this suite. @ 06/05/24 14:14:44.385
• [15.300 seconds]
------------------------------
S
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:90
  STEP: Creating a kubernetes client @ 06/05/24 14:14:44.392
  Jun  5 14:14:44.392: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename emptydir @ 06/05/24 14:14:44.393
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:14:44.405
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:14:44.408
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 06/05/24 14:14:44.411
  STEP: Saw pod success @ 06/05/24 14:14:46.424
  Jun  5 14:14:46.427: INFO: Trying to get logs from node k8sconformance-m02 pod pod-5203de04-28f5-443b-aa7b-2074fb98b4a3 container test-container: <nil>
  STEP: delete the pod @ 06/05/24 14:14:46.434
  Jun  5 14:14:46.447: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1941" for this suite. @ 06/05/24 14:14:46.45
• [2.063 seconds]
------------------------------
SSS
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:113
  STEP: Creating a kubernetes client @ 06/05/24 14:14:46.455
  Jun  5 14:14:46.455: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename replication-controller @ 06/05/24 14:14:46.456
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:14:46.47
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:14:46.473
  STEP: creating a ReplicationController @ 06/05/24 14:14:46.481
  STEP: waiting for RC to be added @ 06/05/24 14:14:46.485
  STEP: waiting for available Replicas @ 06/05/24 14:14:46.485
  STEP: patching ReplicationController @ 06/05/24 14:14:47.24
  STEP: waiting for RC to be modified @ 06/05/24 14:14:47.264
  STEP: patching ReplicationController status @ 06/05/24 14:14:47.264
  STEP: waiting for RC to be modified @ 06/05/24 14:14:47.274
  STEP: waiting for available Replicas @ 06/05/24 14:14:47.274
  STEP: fetching ReplicationController status @ 06/05/24 14:14:47.278
  STEP: patching ReplicationController scale @ 06/05/24 14:14:47.28
  STEP: waiting for RC to be modified @ 06/05/24 14:14:47.285
  STEP: waiting for ReplicationController's scale to be the max amount @ 06/05/24 14:14:47.285
  STEP: fetching ReplicationController; ensuring that it's patched @ 06/05/24 14:14:48.953
  STEP: updating ReplicationController status @ 06/05/24 14:14:48.955
  STEP: waiting for RC to be modified @ 06/05/24 14:14:48.961
  STEP: listing all ReplicationControllers @ 06/05/24 14:14:48.962
  STEP: checking that ReplicationController has expected values @ 06/05/24 14:14:48.964
  STEP: deleting ReplicationControllers by collection @ 06/05/24 14:14:48.964
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 06/05/24 14:14:48.97
  Jun  5 14:14:49.015: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0605 14:14:49.016033      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-3378" for this suite. @ 06/05/24 14:14:49.018
• [2.568 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 06/05/24 14:14:49.023
  Jun  5 14:14:49.023: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename pods @ 06/05/24 14:14:49.024
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:14:49.034
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:14:49.037
  STEP: creating the pod @ 06/05/24 14:14:49.04
  STEP: submitting the pod to kubernetes @ 06/05/24 14:14:49.04
  E0605 14:14:50.016787      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:14:51.017112      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 06/05/24 14:14:51.058
  STEP: updating the pod @ 06/05/24 14:14:51.06
  Jun  5 14:14:51.569: INFO: Successfully updated pod "pod-update-0a72fba5-9825-477e-8036-9aede2740f0f"
  STEP: verifying the updated pod is in kubernetes @ 06/05/24 14:14:51.571
  Jun  5 14:14:51.573: INFO: Pod update OK
  Jun  5 14:14:51.573: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7369" for this suite. @ 06/05/24 14:14:51.574
• [2.556 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 06/05/24 14:14:51.579
  Jun  5 14:14:51.579: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename secrets @ 06/05/24 14:14:51.58
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:14:51.586
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:14:51.588
  STEP: Creating secret with name secret-test-b2732ec9-aabc-44cc-8efc-de8f2219d13c @ 06/05/24 14:14:51.599
  STEP: Creating a pod to test consume secrets @ 06/05/24 14:14:51.602
  E0605 14:14:52.018061      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:14:53.018862      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/05/24 14:14:53.613
  Jun  5 14:14:53.617: INFO: Trying to get logs from node k8sconformance-m02 pod pod-secrets-5ed923a0-afee-4b7e-8cd1-6741a23c3f3d container secret-volume-test: <nil>
  STEP: delete the pod @ 06/05/24 14:14:53.625
  Jun  5 14:14:53.639: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-48" for this suite. @ 06/05/24 14:14:53.642
  STEP: Destroying namespace "secret-namespace-2450" for this suite. @ 06/05/24 14:14:53.646
• [2.072 seconds]
------------------------------
SSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:335
  STEP: Creating a kubernetes client @ 06/05/24 14:14:53.652
  Jun  5 14:14:53.652: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename sched-pred @ 06/05/24 14:14:53.653
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:14:53.665
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:14:53.668
  Jun  5 14:14:53.671: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Jun  5 14:14:53.676: INFO: Waiting for terminating namespaces to be deleted...
  Jun  5 14:14:53.678: INFO: 
  Logging pods the apiserver thinks is on node k8sconformance before test
  Jun  5 14:14:53.681: INFO: coredns-76f75df574-xgft9 from kube-system started at 2024-06-05 12:48:31 +0000 UTC (1 container statuses recorded)
  Jun  5 14:14:53.681: INFO: 	Container coredns ready: true, restart count 1
  Jun  5 14:14:53.681: INFO: etcd-k8sconformance from kube-system started at 2024-06-05 12:48:19 +0000 UTC (1 container statuses recorded)
  Jun  5 14:14:53.681: INFO: 	Container etcd ready: true, restart count 0
  Jun  5 14:14:53.681: INFO: kindnet-rzd2z from kube-system started at 2024-06-05 12:48:30 +0000 UTC (1 container statuses recorded)
  Jun  5 14:14:53.681: INFO: 	Container kindnet-cni ready: true, restart count 0
  Jun  5 14:14:53.681: INFO: kube-apiserver-k8sconformance from kube-system started at 2024-06-05 12:48:19 +0000 UTC (1 container statuses recorded)
  Jun  5 14:14:53.681: INFO: 	Container kube-apiserver ready: true, restart count 0
  Jun  5 14:14:53.681: INFO: kube-controller-manager-k8sconformance from kube-system started at 2024-06-05 12:48:19 +0000 UTC (1 container statuses recorded)
  Jun  5 14:14:53.681: INFO: 	Container kube-controller-manager ready: true, restart count 0
  Jun  5 14:14:53.681: INFO: kube-proxy-gpz28 from kube-system started at 2024-06-05 12:48:30 +0000 UTC (1 container statuses recorded)
  Jun  5 14:14:53.681: INFO: 	Container kube-proxy ready: true, restart count 0
  Jun  5 14:14:53.681: INFO: kube-scheduler-k8sconformance from kube-system started at 2024-06-05 12:48:19 +0000 UTC (1 container statuses recorded)
  Jun  5 14:14:53.681: INFO: 	Container kube-scheduler ready: true, restart count 0
  Jun  5 14:14:53.681: INFO: storage-provisioner from kube-system started at 2024-06-05 12:48:32 +0000 UTC (1 container statuses recorded)
  Jun  5 14:14:53.681: INFO: 	Container storage-provisioner ready: true, restart count 1
  Jun  5 14:14:53.681: INFO: rc-test-p78rk from replication-controller-3378 started at 2024-06-05 14:14:47 +0000 UTC (1 container statuses recorded)
  Jun  5 14:14:53.681: INFO: 	Container rc-test ready: true, restart count 0
  Jun  5 14:14:53.681: INFO: sonobuoy-systemd-logs-daemon-set-8cb29c0a4b934094-xqm4q from sonobuoy started at 2024-06-05 12:50:55 +0000 UTC (2 container statuses recorded)
  Jun  5 14:14:53.681: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun  5 14:14:53.681: INFO: 	Container systemd-logs ready: true, restart count 0
  Jun  5 14:14:53.681: INFO: 
  Logging pods the apiserver thinks is on node k8sconformance-m02 before test
  Jun  5 14:14:53.684: INFO: kindnet-ln8np from kube-system started at 2024-06-05 13:17:41 +0000 UTC (1 container statuses recorded)
  Jun  5 14:14:53.684: INFO: 	Container kindnet-cni ready: true, restart count 0
  Jun  5 14:14:53.684: INFO: kube-proxy-5kd5n from kube-system started at 2024-06-05 12:48:59 +0000 UTC (1 container statuses recorded)
  Jun  5 14:14:53.684: INFO: 	Container kube-proxy ready: true, restart count 0
  Jun  5 14:14:53.684: INFO: pod-update-0a72fba5-9825-477e-8036-9aede2740f0f from pods-7369 started at 2024-06-05 14:14:49 +0000 UTC (1 container statuses recorded)
  Jun  5 14:14:53.684: INFO: 	Container pause ready: true, restart count 0
  Jun  5 14:14:53.684: INFO: rc-test-2gm5f from replication-controller-3378 started at 2024-06-05 14:14:46 +0000 UTC (1 container statuses recorded)
  Jun  5 14:14:53.684: INFO: 	Container rc-test ready: true, restart count 0
  Jun  5 14:14:53.684: INFO: sonobuoy from sonobuoy started at 2024-06-05 12:50:51 +0000 UTC (1 container statuses recorded)
  Jun  5 14:14:53.684: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Jun  5 14:14:53.684: INFO: sonobuoy-e2e-job-faabc61b98714bf2 from sonobuoy started at 2024-06-05 12:50:55 +0000 UTC (2 container statuses recorded)
  Jun  5 14:14:53.684: INFO: 	Container e2e ready: true, restart count 0
  Jun  5 14:14:53.684: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun  5 14:14:53.684: INFO: sonobuoy-systemd-logs-daemon-set-8cb29c0a4b934094-jbbcp from sonobuoy started at 2024-06-05 12:50:55 +0000 UTC (2 container statuses recorded)
  Jun  5 14:14:53.684: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun  5 14:14:53.684: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: verifying the node has the label node k8sconformance @ 06/05/24 14:14:53.696
  STEP: verifying the node has the label node k8sconformance-m02 @ 06/05/24 14:14:53.705
  Jun  5 14:14:53.716: INFO: Pod coredns-76f75df574-xgft9 requesting resource cpu=100m on Node k8sconformance
  Jun  5 14:14:53.716: INFO: Pod etcd-k8sconformance requesting resource cpu=100m on Node k8sconformance
  Jun  5 14:14:53.716: INFO: Pod kindnet-ln8np requesting resource cpu=100m on Node k8sconformance-m02
  Jun  5 14:14:53.716: INFO: Pod kindnet-rzd2z requesting resource cpu=100m on Node k8sconformance
  Jun  5 14:14:53.716: INFO: Pod kube-apiserver-k8sconformance requesting resource cpu=250m on Node k8sconformance
  Jun  5 14:14:53.716: INFO: Pod kube-controller-manager-k8sconformance requesting resource cpu=200m on Node k8sconformance
  Jun  5 14:14:53.716: INFO: Pod kube-proxy-5kd5n requesting resource cpu=0m on Node k8sconformance-m02
  Jun  5 14:14:53.716: INFO: Pod kube-proxy-gpz28 requesting resource cpu=0m on Node k8sconformance
  Jun  5 14:14:53.716: INFO: Pod kube-scheduler-k8sconformance requesting resource cpu=100m on Node k8sconformance
  Jun  5 14:14:53.716: INFO: Pod storage-provisioner requesting resource cpu=0m on Node k8sconformance
  Jun  5 14:14:53.716: INFO: Pod pod-update-0a72fba5-9825-477e-8036-9aede2740f0f requesting resource cpu=0m on Node k8sconformance-m02
  Jun  5 14:14:53.716: INFO: Pod rc-test-2gm5f requesting resource cpu=0m on Node k8sconformance-m02
  Jun  5 14:14:53.716: INFO: Pod rc-test-p78rk requesting resource cpu=0m on Node k8sconformance
  Jun  5 14:14:53.716: INFO: Pod sonobuoy requesting resource cpu=0m on Node k8sconformance-m02
  Jun  5 14:14:53.716: INFO: Pod sonobuoy-e2e-job-faabc61b98714bf2 requesting resource cpu=0m on Node k8sconformance-m02
  Jun  5 14:14:53.716: INFO: Pod sonobuoy-systemd-logs-daemon-set-8cb29c0a4b934094-jbbcp requesting resource cpu=0m on Node k8sconformance-m02
  Jun  5 14:14:53.716: INFO: Pod sonobuoy-systemd-logs-daemon-set-8cb29c0a4b934094-xqm4q requesting resource cpu=0m on Node k8sconformance
  STEP: Starting Pods to consume most of the cluster CPU. @ 06/05/24 14:14:53.716
  Jun  5 14:14:53.716: INFO: Creating a pod which consumes cpu=8330m on Node k8sconformance-m02
  Jun  5 14:14:53.726: INFO: Creating a pod which consumes cpu=7805m on Node k8sconformance
  E0605 14:14:54.019798      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:14:55.020613      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating another pod that requires unavailable amount of CPU. @ 06/05/24 14:14:55.75
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-77ab62fb-2ea2-404a-9fcc-9226bb925c45.17d621464e65bb2c], Reason = [Scheduled], Message = [Successfully assigned sched-pred-1682/filler-pod-77ab62fb-2ea2-404a-9fcc-9226bb925c45 to k8sconformance-m02] @ 06/05/24 14:14:55.753
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-77ab62fb-2ea2-404a-9fcc-9226bb925c45.17d621466d3324e2], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 06/05/24 14:14:55.753
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-77ab62fb-2ea2-404a-9fcc-9226bb925c45.17d621466f669c48], Reason = [Created], Message = [Created container filler-pod-77ab62fb-2ea2-404a-9fcc-9226bb925c45] @ 06/05/24 14:14:55.753
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-77ab62fb-2ea2-404a-9fcc-9226bb925c45.17d62146733d027f], Reason = [Started], Message = [Started container filler-pod-77ab62fb-2ea2-404a-9fcc-9226bb925c45] @ 06/05/24 14:14:55.753
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-eb231e23-7bb9-4b72-9895-04516ab93652.17d621464ef1ea1c], Reason = [Scheduled], Message = [Successfully assigned sched-pred-1682/filler-pod-eb231e23-7bb9-4b72-9895-04516ab93652 to k8sconformance] @ 06/05/24 14:14:55.753
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-eb231e23-7bb9-4b72-9895-04516ab93652.17d621466cc23747], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 06/05/24 14:14:55.753
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-eb231e23-7bb9-4b72-9895-04516ab93652.17d621466ee6c115], Reason = [Created], Message = [Created container filler-pod-eb231e23-7bb9-4b72-9895-04516ab93652] @ 06/05/24 14:14:55.753
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-eb231e23-7bb9-4b72-9895-04516ab93652.17d621467375a5ae], Reason = [Started], Message = [Started container filler-pod-eb231e23-7bb9-4b72-9895-04516ab93652] @ 06/05/24 14:14:55.753
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.17d62146c743d016], Reason = [FailedScheduling], Message = [0/2 nodes are available: 2 Insufficient cpu. preemption: 0/2 nodes are available: 2 No preemption victims found for incoming pod.] @ 06/05/24 14:14:55.767
  E0605 14:14:56.020842      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: removing the label node off the node k8sconformance @ 06/05/24 14:14:56.765
  STEP: verifying the node doesn't have the label node @ 06/05/24 14:14:56.774
  STEP: removing the label node off the node k8sconformance-m02 @ 06/05/24 14:14:56.777
  STEP: verifying the node doesn't have the label node @ 06/05/24 14:14:56.789
  Jun  5 14:14:56.793: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-1682" for this suite. @ 06/05/24 14:14:56.798
• [3.155 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:86
  STEP: Creating a kubernetes client @ 06/05/24 14:14:56.807
  Jun  5 14:14:56.807: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename projected @ 06/05/24 14:14:56.808
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:14:56.824
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:14:56.827
  STEP: Creating a pod to test downward API volume plugin @ 06/05/24 14:14:56.829
  E0605 14:14:57.021797      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:14:58.022871      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:14:59.023524      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:15:00.024061      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/05/24 14:15:00.849
  Jun  5 14:15:00.852: INFO: Trying to get logs from node k8sconformance pod downwardapi-volume-6185982c-3bb8-4622-bbad-87dd6915f1cc container client-container: <nil>
  STEP: delete the pod @ 06/05/24 14:15:00.869
  Jun  5 14:15:00.879: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9759" for this suite. @ 06/05/24 14:15:00.882
• [4.080 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:67
  STEP: Creating a kubernetes client @ 06/05/24 14:15:00.887
  Jun  5 14:15:00.887: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename emptydir-wrapper @ 06/05/24 14:15:00.888
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:15:00.898
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:15:00.9
  E0605 14:15:01.024195      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:15:02.024672      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Cleaning up the secret @ 06/05/24 14:15:02.93
  STEP: Cleaning up the configmap @ 06/05/24 14:15:02.937
  STEP: Cleaning up the pod @ 06/05/24 14:15:02.942
  Jun  5 14:15:02.954: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-4947" for this suite. @ 06/05/24 14:15:02.958
• [2.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:221
  STEP: Creating a kubernetes client @ 06/05/24 14:15:02.966
  Jun  5 14:15:02.966: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename webhook @ 06/05/24 14:15:02.967
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:15:02.979
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:15:02.981
  STEP: Setting up server cert @ 06/05/24 14:15:02.996
  E0605 14:15:03.025358      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/05/24 14:15:03.087
  STEP: Deploying the webhook pod @ 06/05/24 14:15:03.093
  STEP: Wait for the deployment to be ready @ 06/05/24 14:15:03.1
  Jun  5 14:15:03.106: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0605 14:15:04.025650      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:15:05.025826      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:15:05.116: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 5, 14, 15, 3, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 5, 14, 15, 3, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 5, 14, 15, 3, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 5, 14, 15, 3, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7c55c7d74c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0605 14:15:06.026603      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:15:07.027636      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 06/05/24 14:15:07.12
  STEP: Verifying the service has paired with the endpoint @ 06/05/24 14:15:07.132
  E0605 14:15:08.027685      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:15:08.133: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Jun  5 14:15:08.140: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 06/05/24 14:15:08.651
  STEP: Creating a custom resource that should be denied by the webhook @ 06/05/24 14:15:08.671
  E0605 14:15:09.028751      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:15:10.029733      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 06/05/24 14:15:10.7
  STEP: Updating the custom resource with disallowed data should be denied @ 06/05/24 14:15:10.707
  STEP: Deleting the custom resource should be denied @ 06/05/24 14:15:10.714
  STEP: Remove the offending key and value from the custom resource data @ 06/05/24 14:15:10.719
  STEP: Deleting the updated custom resource should be successful @ 06/05/24 14:15:10.726
  E0605 14:15:11.030069      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:15:11.273: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9532" for this suite. @ 06/05/24 14:15:11.275
  STEP: Destroying namespace "webhook-markers-1979" for this suite. @ 06/05/24 14:15:11.279
• [8.317 seconds]
------------------------------
SS
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:96
  STEP: Creating a kubernetes client @ 06/05/24 14:15:11.283
  Jun  5 14:15:11.283: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename secrets @ 06/05/24 14:15:11.284
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:15:11.291
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:15:11.293
  STEP: creating secret secrets-2886/secret-test-a4cf0f57-b5cb-4890-8816-a0ade85a802b @ 06/05/24 14:15:11.294
  STEP: Creating a pod to test consume secrets @ 06/05/24 14:15:11.298
  E0605 14:15:12.030786      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:15:13.031908      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:15:14.032111      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:15:15.032643      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/05/24 14:15:15.315
  Jun  5 14:15:15.319: INFO: Trying to get logs from node k8sconformance-m02 pod pod-configmaps-0c46d626-f137-4f7b-8349-e21bd6b5c78d container env-test: <nil>
  STEP: delete the pod @ 06/05/24 14:15:15.328
  Jun  5 14:15:15.344: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2886" for this suite. @ 06/05/24 14:15:15.347
• [4.070 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:324
  STEP: Creating a kubernetes client @ 06/05/24 14:15:15.354
  Jun  5 14:15:15.354: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename cronjob @ 06/05/24 14:15:15.355
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:15:15.366
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:15:15.369
  STEP: Creating a cronjob @ 06/05/24 14:15:15.372
  STEP: creating @ 06/05/24 14:15:15.372
  STEP: getting @ 06/05/24 14:15:15.378
  STEP: listing @ 06/05/24 14:15:15.38
  STEP: watching @ 06/05/24 14:15:15.383
  Jun  5 14:15:15.383: INFO: starting watch
  STEP: cluster-wide listing @ 06/05/24 14:15:15.384
  STEP: cluster-wide watching @ 06/05/24 14:15:15.386
  Jun  5 14:15:15.386: INFO: starting watch
  STEP: patching @ 06/05/24 14:15:15.387
  STEP: updating @ 06/05/24 14:15:15.392
  Jun  5 14:15:15.401: INFO: waiting for watch events with expected annotations
  Jun  5 14:15:15.401: INFO: saw patched and updated annotations
  STEP: patching /status @ 06/05/24 14:15:15.401
  STEP: updating /status @ 06/05/24 14:15:15.41
  STEP: get /status @ 06/05/24 14:15:15.415
  STEP: deleting @ 06/05/24 14:15:15.417
  STEP: deleting a collection @ 06/05/24 14:15:15.429
  Jun  5 14:15:15.436: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-7521" for this suite. @ 06/05/24 14:15:15.439
• [0.094 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:57
  STEP: Creating a kubernetes client @ 06/05/24 14:15:15.448
  Jun  5 14:15:15.448: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename runtimeclass @ 06/05/24 14:15:15.45
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:15:15.46
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:15:15.462
  Jun  5 14:15:15.470: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-5710" for this suite. @ 06/05/24 14:15:15.472
• [0.029 seconds]
------------------------------
SSS
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:810
  STEP: Creating a kubernetes client @ 06/05/24 14:15:15.477
  Jun  5 14:15:15.477: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename svcaccounts @ 06/05/24 14:15:15.478
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:15:15.487
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:15:15.489
  STEP: Creating ServiceAccount "e2e-sa-sfqkq"  @ 06/05/24 14:15:15.49
  Jun  5 14:15:15.494: INFO: AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-sfqkq"  @ 06/05/24 14:15:15.494
  Jun  5 14:15:15.498: INFO: AutomountServiceAccountToken: true
  Jun  5 14:15:15.498: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-5253" for this suite. @ 06/05/24 14:15:15.5
• [0.025 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:234
  STEP: Creating a kubernetes client @ 06/05/24 14:15:15.503
  Jun  5 14:15:15.503: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename resourcequota @ 06/05/24 14:15:15.503
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:15:15.51
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:15:15.511
  STEP: Counting existing ResourceQuota @ 06/05/24 14:15:15.513
  E0605 14:15:16.032873      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:15:17.033914      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:15:18.034979      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:15:19.035512      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:15:20.035819      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 06/05/24 14:15:20.515
  STEP: Ensuring resource quota status is calculated @ 06/05/24 14:15:20.519
  E0605 14:15:21.035971      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:15:22.036704      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Pod that fits quota @ 06/05/24 14:15:22.524
  STEP: Ensuring ResourceQuota status captures the pod usage @ 06/05/24 14:15:22.541
  E0605 14:15:23.036773      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:15:24.037474      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 06/05/24 14:15:24.547
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 06/05/24 14:15:24.551
  STEP: Ensuring a pod cannot update its resource requirements @ 06/05/24 14:15:24.554
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 06/05/24 14:15:24.558
  E0605 14:15:25.037690      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:15:26.038912      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 06/05/24 14:15:26.564
  STEP: Ensuring resource quota status released the pod usage @ 06/05/24 14:15:26.577
  E0605 14:15:27.039591      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:15:28.039852      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:15:28.584: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8345" for this suite. @ 06/05/24 14:15:28.588
• [13.089 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:539
  STEP: Creating a kubernetes client @ 06/05/24 14:15:28.593
  Jun  5 14:15:28.593: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename gc @ 06/05/24 14:15:28.594
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:15:28.606
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:15:28.609
  STEP: create the deployment @ 06/05/24 14:15:28.611
  W0605 14:15:28.616703      22 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 06/05/24 14:15:28.616
  E0605 14:15:29.040678      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the deployment @ 06/05/24 14:15:29.121
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 06/05/24 14:15:29.127
  STEP: Gathering metrics @ 06/05/24 14:15:29.646
  Jun  5 14:15:29.717: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Jun  5 14:15:29.717: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-2515" for this suite. @ 06/05/24 14:15:29.719
• [1.130 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:244
  STEP: Creating a kubernetes client @ 06/05/24 14:15:29.723
  Jun  5 14:15:29.723: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename dns @ 06/05/24 14:15:29.723
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:15:29.73
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:15:29.731
  STEP: Creating a test headless service @ 06/05/24 14:15:29.733
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-8842.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-2.dns-test-service-2.dns-8842.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/wheezy_hosts@dns-querier-2;sleep 1; done
   @ 06/05/24 14:15:29.735
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-8842.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-8842.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 06/05/24 14:15:29.735
  STEP: creating a pod to probe DNS @ 06/05/24 14:15:29.735
  STEP: submitting the pod to kubernetes @ 06/05/24 14:15:29.735
  E0605 14:15:30.041808      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:15:31.042197      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 06/05/24 14:15:31.749
  STEP: looking for the results for each expected name from probers @ 06/05/24 14:15:31.752
  Jun  5 14:15:31.764: INFO: DNS probes using dns-8842/dns-test-231e4c33-d8d5-4073-90bb-9e136caeef64 succeeded

  STEP: deleting the pod @ 06/05/24 14:15:31.764
  STEP: deleting the test headless service @ 06/05/24 14:15:31.777
  Jun  5 14:15:31.786: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-8842" for this suite. @ 06/05/24 14:15:31.79
• [2.073 seconds]
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:172
  STEP: Creating a kubernetes client @ 06/05/24 14:15:31.796
  Jun  5 14:15:31.796: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename discovery @ 06/05/24 14:15:31.797
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:15:31.805
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:15:31.808
  STEP: Setting up server cert @ 06/05/24 14:15:31.81
  STEP: Requesting APIResourceList from "/api/v1" @ 06/05/24 14:15:31.884
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 06/05/24 14:15:31.885
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 06/05/24 14:15:31.886
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 06/05/24 14:15:31.886
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 06/05/24 14:15:31.887
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 06/05/24 14:15:31.887
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 06/05/24 14:15:31.888
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 06/05/24 14:15:31.889
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 06/05/24 14:15:31.889
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 06/05/24 14:15:31.889
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 06/05/24 14:15:31.89
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 06/05/24 14:15:31.89
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 06/05/24 14:15:31.891
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 06/05/24 14:15:31.891
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 06/05/24 14:15:31.892
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 06/05/24 14:15:31.892
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 06/05/24 14:15:31.893
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 06/05/24 14:15:31.893
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 06/05/24 14:15:31.893
  Jun  5 14:15:31.894: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-1994" for this suite. @ 06/05/24 14:15:31.895
• [0.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:108
  STEP: Creating a kubernetes client @ 06/05/24 14:15:31.9
  Jun  5 14:15:31.900: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename pod-network-test @ 06/05/24 14:15:31.9
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:15:31.906
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:15:31.907
  STEP: Performing setup for networking test in namespace pod-network-test-6149 @ 06/05/24 14:15:31.909
  STEP: creating a selector @ 06/05/24 14:15:31.909
  STEP: Creating the service pods in kubernetes @ 06/05/24 14:15:31.909
  Jun  5 14:15:31.909: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0605 14:15:32.042578      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:15:33.043076      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:15:34.043789      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:15:35.044670      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:15:36.045577      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:15:37.045825      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:15:38.046229      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:15:39.046926      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:15:40.047794      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:15:41.048785      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:15:42.049606      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:15:43.050847      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 06/05/24 14:15:43.96
  E0605 14:15:44.051504      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:15:45.052576      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:15:45.989: INFO: Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  Jun  5 14:15:45.989: INFO: Going to poll 10.244.0.181 on port 8083 at least 0 times, with a maximum of 34 tries before failing
  Jun  5 14:15:45.991: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.244.0.181:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-6149 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun  5 14:15:45.991: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  Jun  5 14:15:45.992: INFO: ExecWithOptions: Clientset creation
  Jun  5 14:15:45.992: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-6149/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.244.0.181%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E0605 14:15:46.052795      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:15:46.060: INFO: Found all 1 expected endpoints: [netserver-0]
  Jun  5 14:15:46.060: INFO: Going to poll 10.244.1.223 on port 8083 at least 0 times, with a maximum of 34 tries before failing
  Jun  5 14:15:46.062: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.244.1.223:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-6149 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Jun  5 14:15:46.062: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  Jun  5 14:15:46.063: INFO: ExecWithOptions: Clientset creation
  Jun  5 14:15:46.063: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-6149/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.244.1.223%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Jun  5 14:15:46.119: INFO: Found all 1 expected endpoints: [netserver-1]
  Jun  5 14:15:46.120: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-6149" for this suite. @ 06/05/24 14:15:46.122
• [14.228 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 06/05/24 14:15:46.129
  Jun  5 14:15:46.129: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename projected @ 06/05/24 14:15:46.129
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:15:46.14
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:15:46.143
  STEP: Creating configMap with name configmap-projected-all-test-volume-4c1eea7a-8e61-4758-9a15-e2a8dc552459 @ 06/05/24 14:15:46.145
  STEP: Creating secret with name secret-projected-all-test-volume-cc75f1c3-29ec-49db-976f-c92e8b21b8b0 @ 06/05/24 14:15:46.149
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 06/05/24 14:15:46.152
  E0605 14:15:47.053414      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:15:48.053772      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:15:49.053888      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:15:50.054152      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/05/24 14:15:50.176
  Jun  5 14:15:50.179: INFO: Trying to get logs from node k8sconformance-m02 pod projected-volume-efe12fc5-ae6e-4a86-a6d2-146686855b16 container projected-all-volume-test: <nil>
  STEP: delete the pod @ 06/05/24 14:15:50.189
  Jun  5 14:15:50.205: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9354" for this suite. @ 06/05/24 14:15:50.209
• [4.085 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:228
  STEP: Creating a kubernetes client @ 06/05/24 14:15:50.214
  Jun  5 14:15:50.214: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename var-expansion @ 06/05/24 14:15:50.215
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:15:50.227
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:15:50.23
  STEP: creating the pod with failed condition @ 06/05/24 14:15:50.232
  E0605 14:15:51.054735      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:15:52.055496      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:15:53.055666      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:15:54.056394      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:15:55.057340      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:15:56.057693      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:15:57.058194      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:15:58.058799      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:15:59.059002      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:16:00.059114      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:16:01.059600      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:16:02.060390      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:16:03.061515      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:16:04.062857      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:16:05.063993      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:16:06.064672      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:16:07.064979      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:16:08.065425      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:16:09.065793      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:16:10.065704      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:16:11.066100      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:16:12.066559      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:16:13.067256      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:16:14.067838      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:16:15.068833      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:16:16.069852      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:16:17.070838      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:16:18.071765      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:16:19.072876      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:16:20.073172      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:16:21.073762      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:16:22.074814      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:16:23.075693      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:16:24.075758      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:16:25.076245      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:16:26.076677      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:16:27.077492      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:16:28.077754      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:16:29.077913      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:16:30.078570      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:16:31.078856      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:16:32.079686      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:16:33.079813      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:16:34.080223      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:16:35.080702      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:16:36.081353      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:16:37.081546      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:16:38.082183      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:16:39.082254      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:16:40.082807      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:16:41.083559      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:16:42.084626      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:16:43.084908      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:16:44.085423      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:16:45.085956      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:16:46.086722      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:16:47.087021      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:16:48.087679      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:16:49.087844      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:16:50.088842      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:16:51.089898      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:16:52.090243      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:16:53.090507      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:16:54.091011      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:16:55.091744      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:16:56.092510      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:16:57.092964      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:16:58.093715      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:16:59.094858      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:17:00.095744      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:17:01.095817      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:17:02.096651      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:17:03.096798      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:17:04.096796      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:17:05.097844      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:17:06.098917      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:17:07.099752      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:17:08.100335      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:17:09.100981      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:17:10.101229      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:17:11.101762      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:17:12.102817      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:17:13.103681      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:17:14.103949      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:17:15.104519      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:17:16.105675      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:17:17.105754      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:17:18.106397      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:17:19.106850      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:17:20.107584      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:17:21.108218      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:17:22.108846      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:17:23.108904      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:17:24.109635      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:17:25.109907      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:17:26.110948      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:17:27.111051      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:17:28.111391      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:17:29.112152      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:17:30.112720      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:17:31.113878      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:17:32.114454      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:17:33.115614      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:17:34.115609      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:17:35.115998      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:17:36.116567      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:17:37.117424      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:17:38.117808      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:17:39.118339      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:17:40.118918      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:17:41.120004      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:17:42.120538      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:17:43.120986      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:17:44.121565      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:17:45.121918      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:17:46.122526      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:17:47.122683      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:17:48.123702      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:17:49.124315      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:17:50.125138      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: updating the pod @ 06/05/24 14:17:50.239
  Jun  5 14:17:50.755: INFO: Successfully updated pod "var-expansion-bb1c1a36-dd23-45f6-aa97-c16d87fc5fe6"
  STEP: waiting for pod running @ 06/05/24 14:17:50.755
  E0605 14:17:51.125614      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:17:52.126255      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 06/05/24 14:17:52.764
  Jun  5 14:17:52.764: INFO: Deleting pod "var-expansion-bb1c1a36-dd23-45f6-aa97-c16d87fc5fe6" in namespace "var-expansion-5309"
  Jun  5 14:17:52.773: INFO: Wait up to 5m0s for pod "var-expansion-bb1c1a36-dd23-45f6-aa97-c16d87fc5fe6" to be fully deleted
  E0605 14:17:53.126922      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:17:54.127478      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:17:55.128200      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:17:56.128794      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:17:57.129676      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:17:58.130546      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:17:59.131225      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:18:00.131681      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:18:01.131876      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:18:02.132791      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:18:03.132887      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:18:04.133296      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:18:05.133916      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:18:06.134523      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:18:07.135562      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:18:08.136128      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:18:09.137320      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:18:10.137842      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:18:11.138974      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:18:12.139266      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:18:13.139813      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:18:14.140350      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:18:15.140874      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:18:16.141295      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:18:17.141772      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:18:18.141867      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:18:19.142852      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:18:20.143525      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:18:21.144155      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:18:22.144514      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:18:23.145124      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:18:24.146055      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:18:24.869: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-5309" for this suite. @ 06/05/24 14:18:24.873
• [154.665 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:209
  STEP: Creating a kubernetes client @ 06/05/24 14:18:24.879
  Jun  5 14:18:24.879: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename downward-api @ 06/05/24 14:18:24.88
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:18:24.892
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:18:24.895
  STEP: Creating a pod to test downward API volume plugin @ 06/05/24 14:18:24.898
  E0605 14:18:25.146427      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:18:26.146972      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/05/24 14:18:26.917
  Jun  5 14:18:26.919: INFO: Trying to get logs from node k8sconformance-m02 pod downwardapi-volume-0bcc52ac-0f6b-47dd-826d-47a36420f9dc container client-container: <nil>
  STEP: delete the pod @ 06/05/24 14:18:26.938
  Jun  5 14:18:26.952: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2804" for this suite. @ 06/05/24 14:18:26.955
• [2.080 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:489
  STEP: Creating a kubernetes client @ 06/05/24 14:18:26.959
  Jun  5 14:18:26.959: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename deployment @ 06/05/24 14:18:26.96
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:18:26.969
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:18:26.972
  STEP: creating a Deployment @ 06/05/24 14:18:26.978
  Jun  5 14:18:26.978: INFO: Creating simple deployment test-deployment-mlm85
  Jun  5 14:18:26.989: INFO: deployment "test-deployment-mlm85" doesn't have the required revision set
  E0605 14:18:27.147146      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:18:28.147660      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Getting /status @ 06/05/24 14:18:29.001
  Jun  5 14:18:29.004: INFO: Deployment test-deployment-mlm85 has Conditions: [{Available True 2024-06-05 14:18:28 +0000 UTC 2024-06-05 14:18:28 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2024-06-05 14:18:28 +0000 UTC 2024-06-05 14:18:26 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-mlm85-5d576bd769" has successfully progressed.}]
  STEP: updating Deployment Status @ 06/05/24 14:18:29.004
  Jun  5 14:18:29.013: INFO: updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.June, 5, 14, 18, 28, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 5, 14, 18, 28, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 5, 14, 18, 28, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 5, 14, 18, 26, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-mlm85-5d576bd769\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 06/05/24 14:18:29.013
  Jun  5 14:18:29.015: INFO: Observed &Deployment event: ADDED
  Jun  5 14:18:29.015: INFO: Observed Deployment test-deployment-mlm85 in namespace deployment-5882 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-06-05 14:18:26 +0000 UTC 2024-06-05 14:18:26 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-mlm85-5d576bd769"}
  Jun  5 14:18:29.016: INFO: Observed &Deployment event: MODIFIED
  Jun  5 14:18:29.016: INFO: Observed Deployment test-deployment-mlm85 in namespace deployment-5882 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-06-05 14:18:26 +0000 UTC 2024-06-05 14:18:26 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-mlm85-5d576bd769"}
  Jun  5 14:18:29.016: INFO: Observed Deployment test-deployment-mlm85 in namespace deployment-5882 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-06-05 14:18:26 +0000 UTC 2024-06-05 14:18:26 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Jun  5 14:18:29.016: INFO: Observed &Deployment event: MODIFIED
  Jun  5 14:18:29.016: INFO: Observed Deployment test-deployment-mlm85 in namespace deployment-5882 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-06-05 14:18:26 +0000 UTC 2024-06-05 14:18:26 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Jun  5 14:18:29.016: INFO: Observed Deployment test-deployment-mlm85 in namespace deployment-5882 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-06-05 14:18:27 +0000 UTC 2024-06-05 14:18:26 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-mlm85-5d576bd769" is progressing.}
  Jun  5 14:18:29.016: INFO: Observed &Deployment event: MODIFIED
  Jun  5 14:18:29.016: INFO: Observed Deployment test-deployment-mlm85 in namespace deployment-5882 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-06-05 14:18:28 +0000 UTC 2024-06-05 14:18:28 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Jun  5 14:18:29.016: INFO: Observed Deployment test-deployment-mlm85 in namespace deployment-5882 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-06-05 14:18:28 +0000 UTC 2024-06-05 14:18:26 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-mlm85-5d576bd769" has successfully progressed.}
  Jun  5 14:18:29.016: INFO: Observed &Deployment event: MODIFIED
  Jun  5 14:18:29.016: INFO: Observed Deployment test-deployment-mlm85 in namespace deployment-5882 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-06-05 14:18:28 +0000 UTC 2024-06-05 14:18:28 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Jun  5 14:18:29.016: INFO: Observed Deployment test-deployment-mlm85 in namespace deployment-5882 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-06-05 14:18:28 +0000 UTC 2024-06-05 14:18:26 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-mlm85-5d576bd769" has successfully progressed.}
  Jun  5 14:18:29.016: INFO: Found Deployment test-deployment-mlm85 in namespace deployment-5882 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Jun  5 14:18:29.016: INFO: Deployment test-deployment-mlm85 has an updated status
  STEP: patching the Statefulset Status @ 06/05/24 14:18:29.016
  Jun  5 14:18:29.016: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Jun  5 14:18:29.024: INFO: Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 06/05/24 14:18:29.024
  Jun  5 14:18:29.026: INFO: Observed &Deployment event: ADDED
  Jun  5 14:18:29.026: INFO: Observed deployment test-deployment-mlm85 in namespace deployment-5882 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-06-05 14:18:26 +0000 UTC 2024-06-05 14:18:26 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-mlm85-5d576bd769"}
  Jun  5 14:18:29.026: INFO: Observed &Deployment event: MODIFIED
  Jun  5 14:18:29.026: INFO: Observed deployment test-deployment-mlm85 in namespace deployment-5882 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-06-05 14:18:26 +0000 UTC 2024-06-05 14:18:26 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-mlm85-5d576bd769"}
  Jun  5 14:18:29.026: INFO: Observed deployment test-deployment-mlm85 in namespace deployment-5882 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-06-05 14:18:26 +0000 UTC 2024-06-05 14:18:26 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Jun  5 14:18:29.026: INFO: Observed &Deployment event: MODIFIED
  Jun  5 14:18:29.026: INFO: Observed deployment test-deployment-mlm85 in namespace deployment-5882 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-06-05 14:18:26 +0000 UTC 2024-06-05 14:18:26 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Jun  5 14:18:29.026: INFO: Observed deployment test-deployment-mlm85 in namespace deployment-5882 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-06-05 14:18:27 +0000 UTC 2024-06-05 14:18:26 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-mlm85-5d576bd769" is progressing.}
  Jun  5 14:18:29.026: INFO: Observed &Deployment event: MODIFIED
  Jun  5 14:18:29.026: INFO: Observed deployment test-deployment-mlm85 in namespace deployment-5882 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-06-05 14:18:28 +0000 UTC 2024-06-05 14:18:28 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Jun  5 14:18:29.027: INFO: Observed deployment test-deployment-mlm85 in namespace deployment-5882 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-06-05 14:18:28 +0000 UTC 2024-06-05 14:18:26 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-mlm85-5d576bd769" has successfully progressed.}
  Jun  5 14:18:29.027: INFO: Observed &Deployment event: MODIFIED
  Jun  5 14:18:29.027: INFO: Observed deployment test-deployment-mlm85 in namespace deployment-5882 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-06-05 14:18:28 +0000 UTC 2024-06-05 14:18:28 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Jun  5 14:18:29.027: INFO: Observed deployment test-deployment-mlm85 in namespace deployment-5882 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-06-05 14:18:28 +0000 UTC 2024-06-05 14:18:26 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-mlm85-5d576bd769" has successfully progressed.}
  Jun  5 14:18:29.027: INFO: Observed deployment test-deployment-mlm85 in namespace deployment-5882 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Jun  5 14:18:29.027: INFO: Observed &Deployment event: MODIFIED
  Jun  5 14:18:29.027: INFO: Found deployment test-deployment-mlm85 in namespace deployment-5882 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  Jun  5 14:18:29.027: INFO: Deployment test-deployment-mlm85 has a patched status
  Jun  5 14:18:29.031: INFO: Deployment "test-deployment-mlm85":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-mlm85",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5882",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a4ab63d0-a5a6-4c3f-b80a-0d864a217f1a",
      ResourceVersion: (string) (len=5) "27401",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853193906,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193906,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193909,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193909,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=373) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 50 72 6f  |:{\"type\":\"Pro|
              000000a0  67 72 65 73 73 69 6e 67  5c 22 7d 22 3a 7b 22 2e  |gressing\"}":{".|
              000000b0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000000c0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000000d0  66 3a 6c 61 73 74 55 70  64 61 74 65 54 69 6d 65  |f:lastUpdateTime|
              000000e0  22 3a 7b 7d 2c 22 66 3a  6d 65 73 73 61 67 65 22  |":{},"f:message"|
              000000f0  3a 7b 7d 2c 22 66 3a 72  65 61 73 6f 6e 22 3a 7b  |:{},"f:reason":{|
              00000100  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              00000110  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              00000120  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000130  69 6f 6e 22 3a 7b 7d 2c  22 66 3a 72 65 61 64 79  |ion":{},"f:ready|
              00000140  52 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |Replicas":{},"f:|
              00000150  72 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |replicas":{},"f:|
              00000160  75 70 64 61 74 65 64 52  65 70 6c 69 63 61 73 22  |updatedReplicas"|
              00000170  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=3) "e2e": (string) (len=7) "testing"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193909,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193909,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "FoundNewReplicaSet",
          Message: (string) (len=56) "Found new replica set \"test-deployment-mlm85-5d576bd769\""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Jun  5 14:18:29.035: INFO: New ReplicaSet "test-deployment-mlm85-5d576bd769" of Deployment "test-deployment-mlm85":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-mlm85-5d576bd769",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5882",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1b04da4b-417a-4e29-9697-6b7493f31165",
      ResourceVersion: (string) (len=5) "27396",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853193906,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-mlm85",
          UID: (types.UID) (len=36) "a4ab63d0-a5a6-4c3f-b80a-0d864a217f1a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193906,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 61 34 61  |k:{\"uid\":\"a4a|
              00000120  62 36 33 64 30 2d 61 35  61 36 2d 34 63 33 66 2d  |b63d0-a5a6-4c3f-|
              00000130  62 38 30 61 2d 30 64 38  36 34 61 32 31 37 66 31  |b80a-0d864a217f1|
              00000140  61 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |a\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193908,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769",
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jun  5 14:18:29.038: INFO: Pod "test-deployment-mlm85-5d576bd769-j6ph6" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=38) "test-deployment-mlm85-5d576bd769-j6ph6",
      GenerateName: (string) (len=33) "test-deployment-mlm85-5d576bd769-",
      Namespace: (string) (len=15) "deployment-5882",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "410bd946-e072-48da-9ace-7f061be9762b",
      ResourceVersion: (string) (len=5) "27395",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853193906,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=32) "test-deployment-mlm85-5d576bd769",
          UID: (types.UID) (len=36) "1b04da4b-417a-4e29-9697-6b7493f31165",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193906,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 31 62 30 34 64 61 34  62 2d 34 31 37 61 2d 34  |"1b04da4b-417a-4|
              000000a0  65 32 39 2d 39 36 39 37  2d 36 62 37 34 39 33 66  |e29-9697-6b7493f|
              000000b0  33 31 31 36 35 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |31165\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193908,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 32  32 38 5c 22 7d 22 3a 7b  |.244.1.228\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-n5tsm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-n5tsm",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "k8sconformance-m02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193908,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193907,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193908,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193908,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193907,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.67.3",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.67.3"
        }
      },
      PodIP: (string) (len=12) "10.244.1.228",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.1.228"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853193907,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63853193907,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=127) "docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=73) "docker://ab1316da940d072449023cd2726c83c225e30e9323e1e7555f2fc8401340c83e",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun  5 14:18:29.040: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-5882" for this suite. @ 06/05/24 14:18:29.043
• [2.088 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:146
  STEP: Creating a kubernetes client @ 06/05/24 14:18:29.047
  Jun  5 14:18:29.047: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename custom-resource-definition @ 06/05/24 14:18:29.049
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:18:29.058
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:18:29.061
  Jun  5 14:18:29.064: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  E0605 14:18:29.148391      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:18:29.606: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-515" for this suite. @ 06/05/24 14:18:29.612
• [0.570 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:403
  STEP: Creating a kubernetes client @ 06/05/24 14:18:29.618
  Jun  5 14:18:29.618: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename webhook @ 06/05/24 14:18:29.619
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:18:29.634
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:18:29.637
  STEP: Setting up server cert @ 06/05/24 14:18:29.656
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/05/24 14:18:29.807
  STEP: Deploying the webhook pod @ 06/05/24 14:18:29.811
  STEP: Wait for the deployment to be ready @ 06/05/24 14:18:29.816
  Jun  5 14:18:29.820: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0605 14:18:30.148853      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:18:31.149301      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 06/05/24 14:18:31.832
  STEP: Verifying the service has paired with the endpoint @ 06/05/24 14:18:31.842
  E0605 14:18:32.150224      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:18:32.843: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 06/05/24 14:18:32.852
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 06/05/24 14:18:32.87
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 06/05/24 14:18:32.876
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 06/05/24 14:18:32.885
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 06/05/24 14:18:32.893
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 06/05/24 14:18:32.9
  Jun  5 14:18:32.932: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2250" for this suite. @ 06/05/24 14:18:32.935
  STEP: Destroying namespace "webhook-markers-3440" for this suite. @ 06/05/24 14:18:32.94
• [3.326 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:695
  STEP: Creating a kubernetes client @ 06/05/24 14:18:32.944
  Jun  5 14:18:32.944: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename resourcequota @ 06/05/24 14:18:32.945
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:18:32.951
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:18:32.952
  STEP: Creating a ResourceQuota with terminating scope @ 06/05/24 14:18:32.953
  STEP: Ensuring ResourceQuota status is calculated @ 06/05/24 14:18:32.956
  E0605 14:18:33.150584      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:18:34.150878      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not terminating scope @ 06/05/24 14:18:34.961
  STEP: Ensuring ResourceQuota status is calculated @ 06/05/24 14:18:34.966
  E0605 14:18:35.152019      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:18:36.153080      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a long running pod @ 06/05/24 14:18:36.973
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 06/05/24 14:18:36.986
  E0605 14:18:37.153152      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:18:38.153790      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 06/05/24 14:18:38.991
  E0605 14:18:39.154519      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:18:40.154823      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 06/05/24 14:18:40.997
  STEP: Ensuring resource quota status released the pod usage @ 06/05/24 14:18:41.011
  E0605 14:18:41.155120      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:18:42.155489      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a terminating pod @ 06/05/24 14:18:43.017
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 06/05/24 14:18:43.029
  E0605 14:18:43.156031      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:18:44.156744      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 06/05/24 14:18:45.034
  E0605 14:18:45.156999      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:18:46.157688      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 06/05/24 14:18:47.04
  STEP: Ensuring resource quota status released the pod usage @ 06/05/24 14:18:47.05
  E0605 14:18:47.158692      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:18:48.159408      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:18:49.056: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4001" for this suite. @ 06/05/24 14:18:49.059
• [16.122 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 06/05/24 14:18:49.067
  Jun  5 14:18:49.067: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename deployment @ 06/05/24 14:18:49.069
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:18:49.08
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:18:49.082
  Jun  5 14:18:49.085: INFO: Creating simple deployment test-new-deployment
  Jun  5 14:18:49.095: INFO: deployment "test-new-deployment" doesn't have the required revision set
  E0605 14:18:49.160710      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:18:50.161133      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: getting scale subresource @ 06/05/24 14:18:51.107
  STEP: updating a scale subresource @ 06/05/24 14:18:51.109
  STEP: verifying the deployment Spec.Replicas was modified @ 06/05/24 14:18:51.116
  STEP: Patch a scale subresource @ 06/05/24 14:18:51.119
  Jun  5 14:18:51.131: INFO: Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9673",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7d944b11-18f9-4bd4-8694-4a604f4d50be",
      ResourceVersion: (string) (len=5) "27587",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853193929,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193929,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193929,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193929,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193929,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193929,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193929,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-557759b7c7\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Jun  5 14:18:51.137: INFO: New ReplicaSet "test-new-deployment-557759b7c7" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-557759b7c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9673",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5f446720-6783-4fee-b47c-afea30f4f91e",
      ResourceVersion: (string) (len=5) "27592",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853193929,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "7d944b11-18f9-4bd4-8694-4a604f4d50be",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193931,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 37 64 39 34 34 62  31 31 2d 31 38 66 39 2d  |\"7d944b11-18f9-|
              00000120  34 62 64 34 2d 38 36 39  34 2d 34 61 36 30 34 66  |4bd4-8694-4a604f|
              00000130  34 64 35 30 62 65 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |4d50be\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193931,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Jun  5 14:18:51.145: INFO: Pod "test-new-deployment-557759b7c7-6nptf" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-557759b7c7-6nptf",
      GenerateName: (string) (len=31) "test-new-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-9673",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e34506ab-ec2c-43bc-b336-4214cc83e27c",
      ResourceVersion: (string) (len=5) "27581",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853193929,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-557759b7c7",
          UID: (types.UID) (len=36) "5f446720-6783-4fee-b47c-afea30f4f91e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193929,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 66  34 34 36 37 32 30 2d 36  |d\":\"5f446720-6|
              00000090  37 38 33 2d 34 66 65 65  2d 62 34 37 63 2d 61 66  |783-4fee-b47c-af|
              000000a0  65 61 33 30 66 34 66 39  31 65 5c 22 7d 22 3a 7b  |ea30f4f91e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193929,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 32  33 30 5c 22 7d 22 3a 7b  |.244.1.230\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-r6rgs",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-r6rgs",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "k8sconformance-m02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193929,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193929,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193929,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193929,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193929,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "192.168.67.3",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "192.168.67.3"
        }
      },
      PodIP: (string) (len=12) "10.244.1.230",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.1.230"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853193929,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63853193929,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=127) "docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=73) "docker://9a5a28d24a6778cae216c1f187e976c6d4cc3be6db6c0c9e1e5c9e9ed5e2d821",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun  5 14:18:51.148: INFO: Pod "test-new-deployment-557759b7c7-sxfxv" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-557759b7c7-sxfxv",
      GenerateName: (string) (len=31) "test-new-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-9673",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b35e428b-b281-467a-938d-7b09b18980c3",
      ResourceVersion: (string) (len=5) "27591",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63853193931,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-557759b7c7",
          UID: (types.UID) (len=36) "5f446720-6783-4fee-b47c-afea30f4f91e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193931,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 66  34 34 36 37 32 30 2d 36  |d\":\"5f446720-6|
              00000090  37 38 33 2d 34 66 65 65  2d 62 34 37 63 2d 61 66  |783-4fee-b47c-af|
              000000a0  65 61 33 30 66 34 66 39  31 65 5c 22 7d 22 3a 7b  |ea30f4f91e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vmj58",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vmj58",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "k8sconformance",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63853193931,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Jun  5 14:18:51.150: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-9673" for this suite. @ 06/05/24 14:18:51.154
• [2.091 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:380
  STEP: Creating a kubernetes client @ 06/05/24 14:18:51.158
  Jun  5 14:18:51.158: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename gc @ 06/05/24 14:18:51.158
  E0605 14:18:51.162057      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:18:51.165
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:18:51.167
  STEP: create the rc @ 06/05/24 14:18:51.169
  W0605 14:18:51.173206      22 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E0605 14:18:52.162605      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:18:53.163599      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:18:54.164638      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:18:55.165651      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:18:56.166619      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:18:57.167708      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc @ 06/05/24 14:18:57.179
  STEP: wait for the rc to be deleted @ 06/05/24 14:18:57.188
  E0605 14:18:58.168035      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:18:59.168915      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:19:00.169927      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:19:01.170203      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:19:02.171302      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 06/05/24 14:19:02.194
  E0605 14:19:03.171604      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:19:04.172770      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:19:05.173741      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:19:06.174874      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:19:07.175851      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:19:08.176126      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:19:09.176493      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:19:10.177110      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:19:11.177733      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:19:12.177624      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:19:13.177792      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:19:14.178360      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:19:15.178843      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:19:16.179136      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:19:17.179374      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:19:18.179700      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:19:19.179790      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:19:20.180598      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:19:21.180609      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:19:22.181109      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:19:23.181885      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:19:24.182810      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:19:25.183359      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:19:26.183915      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:19:27.184032      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:19:28.184815      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:19:29.184826      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:19:30.185366      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:19:31.185911      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:19:32.186872      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 06/05/24 14:19:32.211
  Jun  5 14:19:32.301: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Jun  5 14:19:32.301: INFO: Deleting pod "simpletest.rc-26w7k" in namespace "gc-1893"
  Jun  5 14:19:32.307: INFO: Deleting pod "simpletest.rc-2d8zd" in namespace "gc-1893"
  Jun  5 14:19:32.315: INFO: Deleting pod "simpletest.rc-2snj4" in namespace "gc-1893"
  Jun  5 14:19:32.328: INFO: Deleting pod "simpletest.rc-4fkmr" in namespace "gc-1893"
  Jun  5 14:19:32.339: INFO: Deleting pod "simpletest.rc-4h6jm" in namespace "gc-1893"
  Jun  5 14:19:32.352: INFO: Deleting pod "simpletest.rc-4mqrk" in namespace "gc-1893"
  Jun  5 14:19:32.366: INFO: Deleting pod "simpletest.rc-4qtms" in namespace "gc-1893"
  Jun  5 14:19:32.379: INFO: Deleting pod "simpletest.rc-4sk6t" in namespace "gc-1893"
  Jun  5 14:19:32.387: INFO: Deleting pod "simpletest.rc-56jdt" in namespace "gc-1893"
  Jun  5 14:19:32.398: INFO: Deleting pod "simpletest.rc-5cbgw" in namespace "gc-1893"
  Jun  5 14:19:32.406: INFO: Deleting pod "simpletest.rc-5gq6m" in namespace "gc-1893"
  Jun  5 14:19:32.417: INFO: Deleting pod "simpletest.rc-5nm6d" in namespace "gc-1893"
  Jun  5 14:19:32.430: INFO: Deleting pod "simpletest.rc-5ntzx" in namespace "gc-1893"
  Jun  5 14:19:32.439: INFO: Deleting pod "simpletest.rc-5s66n" in namespace "gc-1893"
  Jun  5 14:19:32.450: INFO: Deleting pod "simpletest.rc-62kf6" in namespace "gc-1893"
  Jun  5 14:19:32.468: INFO: Deleting pod "simpletest.rc-648p9" in namespace "gc-1893"
  Jun  5 14:19:32.478: INFO: Deleting pod "simpletest.rc-65wlr" in namespace "gc-1893"
  Jun  5 14:19:32.493: INFO: Deleting pod "simpletest.rc-66444" in namespace "gc-1893"
  Jun  5 14:19:32.505: INFO: Deleting pod "simpletest.rc-6kkgr" in namespace "gc-1893"
  Jun  5 14:19:32.518: INFO: Deleting pod "simpletest.rc-74s22" in namespace "gc-1893"
  Jun  5 14:19:32.534: INFO: Deleting pod "simpletest.rc-7kzdl" in namespace "gc-1893"
  Jun  5 14:19:32.547: INFO: Deleting pod "simpletest.rc-7zbnn" in namespace "gc-1893"
  Jun  5 14:19:32.564: INFO: Deleting pod "simpletest.rc-8f26g" in namespace "gc-1893"
  Jun  5 14:19:32.579: INFO: Deleting pod "simpletest.rc-8gfm7" in namespace "gc-1893"
  Jun  5 14:19:32.592: INFO: Deleting pod "simpletest.rc-8hnwl" in namespace "gc-1893"
  Jun  5 14:19:32.607: INFO: Deleting pod "simpletest.rc-8hzcq" in namespace "gc-1893"
  Jun  5 14:19:32.639: INFO: Deleting pod "simpletest.rc-8jbwz" in namespace "gc-1893"
  Jun  5 14:19:32.669: INFO: Deleting pod "simpletest.rc-8pn2t" in namespace "gc-1893"
  Jun  5 14:19:32.687: INFO: Deleting pod "simpletest.rc-8qfrg" in namespace "gc-1893"
  Jun  5 14:19:32.704: INFO: Deleting pod "simpletest.rc-8vsvr" in namespace "gc-1893"
  Jun  5 14:19:32.721: INFO: Deleting pod "simpletest.rc-94w4q" in namespace "gc-1893"
  Jun  5 14:19:32.733: INFO: Deleting pod "simpletest.rc-9bsf9" in namespace "gc-1893"
  Jun  5 14:19:32.748: INFO: Deleting pod "simpletest.rc-9tcpb" in namespace "gc-1893"
  Jun  5 14:19:32.758: INFO: Deleting pod "simpletest.rc-c58ws" in namespace "gc-1893"
  Jun  5 14:19:32.770: INFO: Deleting pod "simpletest.rc-c99ch" in namespace "gc-1893"
  Jun  5 14:19:32.794: INFO: Deleting pod "simpletest.rc-cf9g8" in namespace "gc-1893"
  Jun  5 14:19:32.809: INFO: Deleting pod "simpletest.rc-cgqvh" in namespace "gc-1893"
  Jun  5 14:19:32.826: INFO: Deleting pod "simpletest.rc-czf5z" in namespace "gc-1893"
  Jun  5 14:19:32.838: INFO: Deleting pod "simpletest.rc-dbqjv" in namespace "gc-1893"
  Jun  5 14:19:32.858: INFO: Deleting pod "simpletest.rc-ddcd4" in namespace "gc-1893"
  Jun  5 14:19:32.876: INFO: Deleting pod "simpletest.rc-dgjdc" in namespace "gc-1893"
  Jun  5 14:19:32.892: INFO: Deleting pod "simpletest.rc-dhwmf" in namespace "gc-1893"
  Jun  5 14:19:32.904: INFO: Deleting pod "simpletest.rc-dsp62" in namespace "gc-1893"
  Jun  5 14:19:32.918: INFO: Deleting pod "simpletest.rc-dvvts" in namespace "gc-1893"
  Jun  5 14:19:32.939: INFO: Deleting pod "simpletest.rc-fgcwd" in namespace "gc-1893"
  Jun  5 14:19:32.961: INFO: Deleting pod "simpletest.rc-fkxv2" in namespace "gc-1893"
  Jun  5 14:19:32.975: INFO: Deleting pod "simpletest.rc-flvs7" in namespace "gc-1893"
  Jun  5 14:19:32.996: INFO: Deleting pod "simpletest.rc-fmfq9" in namespace "gc-1893"
  Jun  5 14:19:33.024: INFO: Deleting pod "simpletest.rc-g8p4x" in namespace "gc-1893"
  Jun  5 14:19:33.044: INFO: Deleting pod "simpletest.rc-hb6bb" in namespace "gc-1893"
  Jun  5 14:19:33.062: INFO: Deleting pod "simpletest.rc-hfv4q" in namespace "gc-1893"
  Jun  5 14:19:33.078: INFO: Deleting pod "simpletest.rc-hk6bf" in namespace "gc-1893"
  Jun  5 14:19:33.094: INFO: Deleting pod "simpletest.rc-j28bw" in namespace "gc-1893"
  Jun  5 14:19:33.106: INFO: Deleting pod "simpletest.rc-j8mwt" in namespace "gc-1893"
  Jun  5 14:19:33.124: INFO: Deleting pod "simpletest.rc-jccqb" in namespace "gc-1893"
  Jun  5 14:19:33.145: INFO: Deleting pod "simpletest.rc-jk2dr" in namespace "gc-1893"
  Jun  5 14:19:33.158: INFO: Deleting pod "simpletest.rc-jkf9w" in namespace "gc-1893"
  Jun  5 14:19:33.175: INFO: Deleting pod "simpletest.rc-jwnqm" in namespace "gc-1893"
  E0605 14:19:33.187333      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:19:33.193: INFO: Deleting pod "simpletest.rc-k8759" in namespace "gc-1893"
  Jun  5 14:19:33.211: INFO: Deleting pod "simpletest.rc-kg9kh" in namespace "gc-1893"
  Jun  5 14:19:33.224: INFO: Deleting pod "simpletest.rc-l2477" in namespace "gc-1893"
  Jun  5 14:19:33.245: INFO: Deleting pod "simpletest.rc-m46hn" in namespace "gc-1893"
  Jun  5 14:19:33.260: INFO: Deleting pod "simpletest.rc-mhd8l" in namespace "gc-1893"
  Jun  5 14:19:33.274: INFO: Deleting pod "simpletest.rc-mwhbk" in namespace "gc-1893"
  Jun  5 14:19:33.298: INFO: Deleting pod "simpletest.rc-ndpjs" in namespace "gc-1893"
  Jun  5 14:19:33.309: INFO: Deleting pod "simpletest.rc-njp7p" in namespace "gc-1893"
  Jun  5 14:19:33.336: INFO: Deleting pod "simpletest.rc-nkqjh" in namespace "gc-1893"
  Jun  5 14:19:33.356: INFO: Deleting pod "simpletest.rc-nkv2p" in namespace "gc-1893"
  Jun  5 14:19:33.376: INFO: Deleting pod "simpletest.rc-ntm9t" in namespace "gc-1893"
  Jun  5 14:19:33.394: INFO: Deleting pod "simpletest.rc-p4m64" in namespace "gc-1893"
  Jun  5 14:19:33.417: INFO: Deleting pod "simpletest.rc-p54zr" in namespace "gc-1893"
  Jun  5 14:19:33.459: INFO: Deleting pod "simpletest.rc-pbfh6" in namespace "gc-1893"
  Jun  5 14:19:33.512: INFO: Deleting pod "simpletest.rc-phz5h" in namespace "gc-1893"
  Jun  5 14:19:33.561: INFO: Deleting pod "simpletest.rc-qhn4h" in namespace "gc-1893"
  Jun  5 14:19:33.610: INFO: Deleting pod "simpletest.rc-qldv4" in namespace "gc-1893"
  Jun  5 14:19:33.654: INFO: Deleting pod "simpletest.rc-r6kdj" in namespace "gc-1893"
  Jun  5 14:19:33.703: INFO: Deleting pod "simpletest.rc-rhn8c" in namespace "gc-1893"
  Jun  5 14:19:33.755: INFO: Deleting pod "simpletest.rc-rwvhd" in namespace "gc-1893"
  Jun  5 14:19:33.804: INFO: Deleting pod "simpletest.rc-s9zd4" in namespace "gc-1893"
  Jun  5 14:19:33.852: INFO: Deleting pod "simpletest.rc-spgp5" in namespace "gc-1893"
  Jun  5 14:19:33.907: INFO: Deleting pod "simpletest.rc-t44bb" in namespace "gc-1893"
  Jun  5 14:19:33.955: INFO: Deleting pod "simpletest.rc-t47dh" in namespace "gc-1893"
  Jun  5 14:19:34.003: INFO: Deleting pod "simpletest.rc-t6pxk" in namespace "gc-1893"
  Jun  5 14:19:34.058: INFO: Deleting pod "simpletest.rc-tlmj9" in namespace "gc-1893"
  Jun  5 14:19:34.107: INFO: Deleting pod "simpletest.rc-tn82b" in namespace "gc-1893"
  Jun  5 14:19:34.159: INFO: Deleting pod "simpletest.rc-trv4f" in namespace "gc-1893"
  E0605 14:19:34.187962      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:19:34.202: INFO: Deleting pod "simpletest.rc-vl8g5" in namespace "gc-1893"
  Jun  5 14:19:34.255: INFO: Deleting pod "simpletest.rc-vltnn" in namespace "gc-1893"
  Jun  5 14:19:34.302: INFO: Deleting pod "simpletest.rc-x54j2" in namespace "gc-1893"
  Jun  5 14:19:34.356: INFO: Deleting pod "simpletest.rc-xptnn" in namespace "gc-1893"
  Jun  5 14:19:34.406: INFO: Deleting pod "simpletest.rc-xx9tm" in namespace "gc-1893"
  Jun  5 14:19:34.458: INFO: Deleting pod "simpletest.rc-z25j6" in namespace "gc-1893"
  Jun  5 14:19:34.505: INFO: Deleting pod "simpletest.rc-z4dtl" in namespace "gc-1893"
  Jun  5 14:19:34.556: INFO: Deleting pod "simpletest.rc-z6pdv" in namespace "gc-1893"
  Jun  5 14:19:34.607: INFO: Deleting pod "simpletest.rc-zg95s" in namespace "gc-1893"
  Jun  5 14:19:34.656: INFO: Deleting pod "simpletest.rc-zjq2b" in namespace "gc-1893"
  Jun  5 14:19:34.711: INFO: Deleting pod "simpletest.rc-zrg9s" in namespace "gc-1893"
  Jun  5 14:19:34.756: INFO: Deleting pod "simpletest.rc-zrktd" in namespace "gc-1893"
  Jun  5 14:19:34.805: INFO: Deleting pod "simpletest.rc-zsc78" in namespace "gc-1893"
  Jun  5 14:19:34.855: INFO: Deleting pod "simpletest.rc-zvkdw" in namespace "gc-1893"
  Jun  5 14:19:34.905: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-1893" for this suite. @ 06/05/24 14:19:34.948
• [43.841 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:474
  STEP: Creating a kubernetes client @ 06/05/24 14:19:34.999
  Jun  5 14:19:34.999: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename field-validation @ 06/05/24 14:19:35
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:19:35.011
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:19:35.013
  Jun  5 14:19:35.015: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  E0605 14:19:35.188947      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:19:36.189986      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:19:37.190353      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  W0605 14:19:37.560143      22 warnings.go:70] unknown field "alpha"
  W0605 14:19:37.560182      22 warnings.go:70] unknown field "beta"
  W0605 14:19:37.560192      22 warnings.go:70] unknown field "delta"
  W0605 14:19:37.560200      22 warnings.go:70] unknown field "epsilon"
  W0605 14:19:37.560209      22 warnings.go:70] unknown field "gamma"
  Jun  5 14:19:38.096: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-9622" for this suite. @ 06/05/24 14:19:38.099
• [3.105 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:125
  STEP: Creating a kubernetes client @ 06/05/24 14:19:38.105
  Jun  5 14:19:38.105: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename sysctl @ 06/05/24 14:19:38.106
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:19:38.119
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:19:38.122
  STEP: Creating a pod with one valid and two invalid sysctls @ 06/05/24 14:19:38.125
  Jun  5 14:19:38.129: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-6419" for this suite. @ 06/05/24 14:19:38.131
• [0.031 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Servers with support for API chunking should support continue listing from the last key if the original version has been compacted away, though the list is inconsistent [Slow] [Conformance] [sig-api-machinery, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:144
  STEP: Creating a kubernetes client @ 06/05/24 14:19:38.136
  Jun  5 14:19:38.136: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename chunking @ 06/05/24 14:19:38.137
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:19:38.147
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:19:38.15
  STEP: creating a large number of resources @ 06/05/24 14:19:38.152
  E0605 14:19:38.190684      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:19:39.191022      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:19:40.192030      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:19:41.192231      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:19:42.193082      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:19:43.193959      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:19:44.194812      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:19:45.194957      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:19:46.195356      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:19:47.196241      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:19:48.196632      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:19:49.197499      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:19:50.198253      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:19:51.199100      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:19:52.199672      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:19:53.200363      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:19:54.200821      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:19:55.201542      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the first page @ 06/05/24 14:19:55.846
  Jun  5 14:19:55.894: INFO: Retrieved 40/40 results with rv 29924 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk5MjQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page until the token expires @ 06/05/24 14:19:55.894
  E0605 14:19:56.202101      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:19:57.202297      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:19:58.202564      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:19:59.202880      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:20:00.203932      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:20:01.204824      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:20:02.205674      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:20:03.206422      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:20:04.206991      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:20:05.207889      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:20:06.208167      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:20:07.208791      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:20:08.209876      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:20:09.210983      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:20:10.211591      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:20:11.212147      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:20:12.212755      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:20:13.213748      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:20:14.213850      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:20:15.214898      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:20:15.902: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk5MjQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0605 14:20:16.215903      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:20:17.216983      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:20:18.218009      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:20:19.219091      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:20:20.219898      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:20:21.220526      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:20:22.221103      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:20:23.221602      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:20:24.221932      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:20:25.222986      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:20:26.223413      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:20:27.223667      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:20:28.224059      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:20:29.224876      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:20:30.225332      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:20:31.225887      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:20:32.226676      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:20:33.226914      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:20:34.227483      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:20:35.227992      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:20:35.901: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk5MjQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0605 14:20:36.228219      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:20:37.229028      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:20:38.229978      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:20:39.230504      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:20:40.230975      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:20:41.231823      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:20:42.232748      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:20:43.233853      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:20:44.234835      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:20:45.234913      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:20:46.235354      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:20:47.236271      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:20:48.236964      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:20:49.237117      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:20:50.237800      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:20:51.238855      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:20:52.239690      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:20:53.240117      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:20:54.240807      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:20:55.241245      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:20:55.902: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk5MjQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0605 14:20:56.241289      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:20:57.241527      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:20:58.242224      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:20:59.242750      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:21:00.242990      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:21:01.243364      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:21:02.244046      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:21:03.244367      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:21:04.244934      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:21:05.245485      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:21:06.245921      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:21:07.246688      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:21:08.247794      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:21:09.248328      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:21:10.248714      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:21:11.249276      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:21:12.249971      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:21:13.250587      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:21:14.251103      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:21:15.251786      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:21:15.902: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk5MjQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0605 14:21:16.252748      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:21:17.253840      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:21:18.254337      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:21:19.254781      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:21:20.255834      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:21:21.256472      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:21:22.257414      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:21:23.257904      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:21:24.258417      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:21:25.258794      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:21:26.258964      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:21:27.259271      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:21:28.259711      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:21:29.260868      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:21:30.260968      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:21:31.261385      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:21:32.261800      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:21:33.261954      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:21:34.262494      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:21:35.262663      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:21:35.902: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk5MjQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0605 14:21:36.262826      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:21:37.263534      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:21:38.263727      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:21:39.263879      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:21:40.264278      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:21:41.265557      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:21:42.265683      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:21:43.265784      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:21:44.265993      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:21:45.266370      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:21:46.266955      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:21:47.267468      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:21:48.268315      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:21:49.269414      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:21:50.269779      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:21:51.270204      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:21:52.270527      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:21:53.270965      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:21:54.271530      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:21:55.271838      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:21:55.902: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk5MjQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0605 14:21:56.272361      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:21:57.272898      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:21:58.273532      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:21:59.273819      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:22:00.274871      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:22:01.275404      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:22:02.275803      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:22:03.276327      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:22:04.276770      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:22:05.277276      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:22:06.277975      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:22:07.278294      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:22:08.278973      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:22:09.279922      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:22:10.280413      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:22:11.280738      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:22:12.281099      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:22:13.281616      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:22:14.281858      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:22:15.282829      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:22:15.903: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk5MjQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0605 14:22:16.283845      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:22:17.284335      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:22:18.285011      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:22:19.285666      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:22:20.286186      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:22:21.287195      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:22:22.287626      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:22:23.288207      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:22:24.288924      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:22:25.289259      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:22:26.289551      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:22:27.289924      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:22:28.290504      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:22:29.291026      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:22:30.291623      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:22:31.291778      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:22:32.292853      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:22:33.293486      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:22:34.294040      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:22:35.294722      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:22:35.902: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk5MjQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0605 14:22:36.295822      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:22:37.296349      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:22:38.296642      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:22:39.296766      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:22:40.297760      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:22:41.298403      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:22:42.298804      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:22:43.299221      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:22:44.299748      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:22:45.300139      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:22:46.301265      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:22:47.302318      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:22:48.303563      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:22:49.304338      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:22:50.305322      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:22:51.305908      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:22:52.307071      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:22:53.307230      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:22:54.307823      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:22:55.308309      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:22:55.903: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk5MjQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0605 14:22:56.308686      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:22:57.309647      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:22:58.310765      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:22:59.311919      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:23:00.312538      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:23:01.312687      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:23:02.313830      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:23:03.314417      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:23:04.314928      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:23:05.315304      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:23:06.315834      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:23:07.316811      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:23:08.316856      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:23:09.318101      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:23:10.318654      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:23:11.318714      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:23:12.319780      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:23:13.320366      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:23:14.320933      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:23:15.321401      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:23:15.901: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk5MjQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0605 14:23:16.321648      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:23:17.322344      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:23:18.323169      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:23:19.323726      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:23:20.323918      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:23:21.324421      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:23:22.324880      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:23:23.325849      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:23:24.326389      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:23:25.326891      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:23:26.327273      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:23:27.327346      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:23:28.327636      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:23:29.327735      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:23:30.327853      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:23:31.328880      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:23:32.329541      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:23:33.329974      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:23:34.330328      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:23:35.330723      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:23:35.903: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk5MjQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0605 14:23:36.330981      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:23:37.331170      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:23:38.331757      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:23:39.331797      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:23:40.332258      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:23:41.332677      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:23:42.333325      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:23:43.334136      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:23:44.334673      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:23:45.335234      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:23:46.335707      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:23:47.335758      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:23:48.336241      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:23:49.336818      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:23:50.337913      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:23:51.338818      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:23:52.339379      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:23:53.339933      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:23:54.340370      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:23:55.341304      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:23:55.902: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk5MjQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0605 14:23:56.342161      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:23:57.342282      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:23:58.342593      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:23:59.343026      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:24:00.343796      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:24:01.344912      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:24:02.345675      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:24:03.345975      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:24:04.346101      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:24:05.346547      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:24:06.347121      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:24:07.347686      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:24:08.348226      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:24:09.348961      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:24:10.349304      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:24:11.349817      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:24:12.350010      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:24:13.350338      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:24:14.350871      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:24:15.351054      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:24:15.902: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk5MjQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0605 14:24:16.352002      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:24:17.352348      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:24:18.352839      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:24:19.353733      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:24:20.354308      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:24:21.355031      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:24:22.356167      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:24:23.356313      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:24:24.356800      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:24:25.356771      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:24:26.357720      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:24:27.357819      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:24:28.358563      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:24:29.358723      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:24:30.359138      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:24:31.359230      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:24:32.360199      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:24:33.360783      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:24:34.361237      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:24:35.361839      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:24:35.901: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk5MjQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0605 14:24:36.362927      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:24:37.363541      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:24:38.364244      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:24:39.364794      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:24:40.365946      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:24:41.366800      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:24:42.367031      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:24:43.367616      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:24:44.368252      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:24:45.368675      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:24:46.369055      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:24:47.369810      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:24:48.371250      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:24:49.371874      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:24:50.371883      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:24:51.372827      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:24:52.373966      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:24:53.374149      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:24:54.374862      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:24:55.375929      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:24:55.902: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk5MjQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0605 14:24:56.376648      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:24:57.376784      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:24:58.377378      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:24:59.377901      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:25:00.378410      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:25:01.378840      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:25:02.379715      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:25:03.379824      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:25:04.380800      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:25:05.381858      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:25:06.382723      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:25:07.383483      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:25:08.383939      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:25:09.384561      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:25:10.385154      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:25:11.385770      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:25:12.386790      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:25:13.387858      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:25:14.389078      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:25:15.389760      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:25:15.903: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk5MjQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0605 14:25:16.390852      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:25:17.391902      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:25:18.392899      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:25:19.393321      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:25:20.393758      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:25:21.394750      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:25:22.395891      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:25:23.396357      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:25:24.396726      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:25:25.397880      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:25:26.398204      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:25:27.398793      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:25:28.399854      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:25:29.400066      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:25:30.400682      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:25:31.401099      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:25:32.401740      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:25:33.402341      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:25:34.402966      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:25:35.403848      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:25:35.902: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk5MjQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0605 14:25:36.404670      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:25:37.404711      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:25:38.405071      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:25:39.405977      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:25:40.406803      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:25:41.407154      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:25:42.407766      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:25:43.408268      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:25:44.408744      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:25:45.409700      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:25:46.410656      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:25:47.410826      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:25:48.411424      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:25:49.411706      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:25:50.412263      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:25:51.412854      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:25:52.413990      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:25:53.414819      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:25:54.415806      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:25:55.416300      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:25:55.901: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk5MjQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0605 14:25:56.416665      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:25:57.417765      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:25:58.418304      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:25:59.418882      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:26:00.419347      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:26:01.419840      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:26:02.420792      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:26:03.421195      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:26:04.422295      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:26:05.422800      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:26:06.422894      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:26:07.423841      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:26:08.423851      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:26:09.424223      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:26:10.424918      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:26:11.425187      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:26:12.425778      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:26:13.425851      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:26:14.426254      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:26:15.427203      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:26:15.903: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk5MjQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0605 14:26:16.427922      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:26:17.428054      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:26:18.428543      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:26:19.429128      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:26:20.429324      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:26:21.429788      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:26:22.430810      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:26:23.430964      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:26:24.431568      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:26:25.431955      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:26:26.433069      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:26:27.433775      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:26:28.434307      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:26:29.434733      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:26:30.434799      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:26:31.435269      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:26:32.435930      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:26:33.436849      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:26:34.437103      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:26:35.438000      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:26:35.903: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk5MjQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0605 14:26:36.438843      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:26:37.438824      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:26:38.439289      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:26:39.439868      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:26:40.440330      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:26:41.440499      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:26:42.441334      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:26:43.441747      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:26:44.442282      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:26:45.442810      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:26:46.443060      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:26:47.443582      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:26:48.444567      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:26:49.445286      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:26:50.445981      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:26:51.446539      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:26:52.446604      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:26:53.447065      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:26:54.447617      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:26:55.447766      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:26:55.901: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk5MjQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0605 14:26:56.448557      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:26:57.449239      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:26:58.449758      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:26:59.450148      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:27:00.450701      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:27:01.451248      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:27:02.451924      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:27:03.452265      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:27:04.452847      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:27:05.453966      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:27:06.454705      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:27:07.455518      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:27:08.455865      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:27:09.456166      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:27:10.456740      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:27:11.457819      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:27:12.458710      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:27:13.458985      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:27:14.459583      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:27:15.459982      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:27:15.901: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk5MjQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0605 14:27:16.460482      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:27:17.461094      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:27:18.461449      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:27:19.461812      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:27:20.462865      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:27:21.463032      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:27:22.463758      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:27:23.464033      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:27:24.464241      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:27:25.464512      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:27:26.465098      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:27:27.465718      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:27:28.465815      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:27:29.466009      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:27:30.467035      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:27:31.467162      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:27:32.467799      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:27:33.468680      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:27:34.469015      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:27:35.469591      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:27:35.902: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk5MjQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0605 14:27:36.469710      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:27:37.470884      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:27:38.471821      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:27:39.472150      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:27:40.472720      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:27:41.473801      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:27:42.474855      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:27:43.475691      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:27:44.476106      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:27:45.476735      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:27:46.477740      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:27:47.478713      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:27:48.479320      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:27:49.479902      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:27:50.480776      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:27:51.481337      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:27:52.481693      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:27:53.482130      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:27:54.482924      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:27:55.483903      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:27:55.902: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mjk5MjQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0605 14:27:56.484649      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:27:57.484582      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:27:58.484773      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:27:59.485156      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:28:00.485907      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:28:01.486048      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:28:02.486771      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:28:03.487186      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:28:04.487829      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:28:05.488309      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:28:06.489204      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:28:07.489601      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:28:08.489871      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:28:09.490136      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:28:10.490196      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:28:11.490644      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:28:12.491384      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:28:13.491809      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:28:14.491976      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:28:15.492790      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:28:15.901: INFO: got error The provided continue parameter is too old to display a consistent list result. You can start a new list without the continue parameter, or use the continue token in this response to retrieve the remainder of the results. Continuing with the provided token results in an inconsistent list - objects that were created, modified, or deleted between the time the first chunk was returned and now may show up in the list.
  Jun  5 14:28:15.901: INFO: Retrieved inconsistent continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6LTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page again with the token received with the error message @ 06/05/24 14:28:15.901
  STEP: retrieving all remaining pages @ 06/05/24 14:28:15.906
  Jun  5 14:28:15.909: INFO: Retrieved 40/40 results with rv 30373 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzAzNzMsInN0YXJ0IjoidGVtcGxhdGUtMDExOVx1MDAwMCJ9
  Jun  5 14:28:15.913: INFO: Retrieved 40/40 results with rv 30373 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzAzNzMsInN0YXJ0IjoidGVtcGxhdGUtMDE1OVx1MDAwMCJ9
  Jun  5 14:28:15.915: INFO: Retrieved 40/40 results with rv 30373 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzAzNzMsInN0YXJ0IjoidGVtcGxhdGUtMDE5OVx1MDAwMCJ9
  Jun  5 14:28:15.919: INFO: Retrieved 40/40 results with rv 30373 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzAzNzMsInN0YXJ0IjoidGVtcGxhdGUtMDIzOVx1MDAwMCJ9
  Jun  5 14:28:15.922: INFO: Retrieved 40/40 results with rv 30373 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzAzNzMsInN0YXJ0IjoidGVtcGxhdGUtMDI3OVx1MDAwMCJ9
  Jun  5 14:28:15.925: INFO: Retrieved 40/40 results with rv 30373 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzAzNzMsInN0YXJ0IjoidGVtcGxhdGUtMDMxOVx1MDAwMCJ9
  Jun  5 14:28:15.927: INFO: Retrieved 40/40 results with rv 30373 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MzAzNzMsInN0YXJ0IjoidGVtcGxhdGUtMDM1OVx1MDAwMCJ9
  Jun  5 14:28:15.931: INFO: Retrieved 40/40 results with rv 30373 and continue 
  Jun  5 14:28:15.931: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-7096" for this suite. @ 06/05/24 14:28:15.933
• [517.802 seconds]
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:158
  STEP: Creating a kubernetes client @ 06/05/24 14:28:15.938
  Jun  5 14:28:15.938: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename runtimeclass @ 06/05/24 14:28:15.939
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:28:15.958
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:28:15.959
  STEP: Deleting RuntimeClass runtimeclass-8896-delete-me @ 06/05/24 14:28:15.964
  STEP: Waiting for the RuntimeClass to disappear @ 06/05/24 14:28:15.967
  Jun  5 14:28:15.971: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-8896" for this suite. @ 06/05/24 14:28:15.972
• [0.037 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:125
  STEP: Creating a kubernetes client @ 06/05/24 14:28:15.975
  Jun  5 14:28:15.975: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename configmap @ 06/05/24 14:28:15.975
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:28:15.982
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:28:15.984
  STEP: Creating configMap with name configmap-test-upd-78707555-dc31-410a-9390-e52bb7034d82 @ 06/05/24 14:28:15.987
  STEP: Creating the pod @ 06/05/24 14:28:15.989
  E0605 14:28:16.492861      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:28:17.493848      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating configmap configmap-test-upd-78707555-dc31-410a-9390-e52bb7034d82 @ 06/05/24 14:28:18.027
  STEP: waiting to observe update in volume @ 06/05/24 14:28:18.033
  E0605 14:28:18.494626      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:28:19.495330      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:28:20.495542      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:28:21.495724      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:28:22.496702      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:28:23.497321      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:28:24.498080      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:28:25.499091      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:28:26.499689      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:28:27.499815      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:28:28.500275      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:28:29.500820      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:28:30.501568      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:28:31.502042      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:28:32.502418      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:28:33.502963      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:28:34.503776      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:28:35.504813      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:28:36.505029      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:28:37.505868      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:28:38.506631      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:28:39.506874      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:28:40.506846      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:28:41.507941      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:28:42.508350      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:28:43.508612      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:28:44.509562      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:28:45.509949      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:28:46.509997      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:28:47.510478      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:28:48.511823      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:28:49.511784      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:28:50.512335      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:28:51.512937      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:28:52.513670      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:28:53.514271      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:28:54.515004      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:28:55.515943      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:28:56.516736      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:28:57.517711      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:28:58.518965      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:28:59.519713      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:29:00.519738      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:29:01.520222      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:29:02.520680      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:29:03.521165      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:29:04.521264      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:29:05.521867      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:29:06.522178      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:29:07.522849      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:29:08.523109      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:29:09.523725      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:29:10.523848      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:29:11.524307      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:29:12.525114      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:29:13.525909      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:29:14.527166      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:29:15.527564      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:29:16.528057      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:29:17.528829      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:29:18.529625      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:29:19.530342      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:29:20.531059      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:29:21.531769      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:29:22.531884      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:29:23.532556      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:29:24.533078      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:29:25.533692      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:29:26.534115      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:29:27.535119      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:29:28.535152      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:29:29.535742      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:29:30.536462      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:29:31.536717      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:29:32.536763      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:29:33.537335      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:29:34.538120      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:29:35.538551      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:29:36.539122      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:29:37.539882      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:29:38.540749      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:29:39.541393      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:29:40.542276      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:29:40.549: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4462" for this suite. @ 06/05/24 14:29:40.552
• [84.583 seconds]
------------------------------
S
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:169
  STEP: Creating a kubernetes client @ 06/05/24 14:29:40.558
  Jun  5 14:29:40.558: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 06/05/24 14:29:40.559
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:29:40.571
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:29:40.574
  STEP: create the container to handle the HTTPGet hook request. @ 06/05/24 14:29:40.579
  E0605 14:29:41.542672      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:29:42.543683      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 06/05/24 14:29:42.598
  E0605 14:29:43.544074      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:29:44.544659      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 06/05/24 14:29:44.617
  STEP: delete the pod with lifecycle hook @ 06/05/24 14:29:44.633
  E0605 14:29:45.545491      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:29:46.546235      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:29:47.546991      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:29:48.547495      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:29:48.655: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-1735" for this suite. @ 06/05/24 14:29:48.659
• [8.109 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:236
  STEP: Creating a kubernetes client @ 06/05/24 14:29:48.667
  Jun  5 14:29:48.667: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename crd-publish-openapi @ 06/05/24 14:29:48.668
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:29:48.682
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:29:48.684
  Jun  5 14:29:48.686: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  E0605 14:29:49.547664      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 06/05/24 14:29:49.821
  Jun  5 14:29:49.822: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=crd-publish-openapi-5448 --namespace=crd-publish-openapi-5448 create -f -'
  E0605 14:29:50.549032      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:29:51.549687      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:29:51.891: INFO: stderr: ""
  Jun  5 14:29:51.891: INFO: stdout: "e2e-test-crd-publish-openapi-9526-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  Jun  5 14:29:51.891: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=crd-publish-openapi-5448 --namespace=crd-publish-openapi-5448 delete e2e-test-crd-publish-openapi-9526-crds test-cr'
  Jun  5 14:29:51.935: INFO: stderr: ""
  Jun  5 14:29:51.935: INFO: stdout: "e2e-test-crd-publish-openapi-9526-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  Jun  5 14:29:51.935: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=crd-publish-openapi-5448 --namespace=crd-publish-openapi-5448 apply -f -'
  Jun  5 14:29:51.984: INFO: stderr: ""
  Jun  5 14:29:51.984: INFO: stdout: "e2e-test-crd-publish-openapi-9526-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  Jun  5 14:29:51.984: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=crd-publish-openapi-5448 --namespace=crd-publish-openapi-5448 delete e2e-test-crd-publish-openapi-9526-crds test-cr'
  Jun  5 14:29:52.024: INFO: stderr: ""
  Jun  5 14:29:52.025: INFO: stdout: "e2e-test-crd-publish-openapi-9526-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 06/05/24 14:29:52.025
  Jun  5 14:29:52.025: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=crd-publish-openapi-5448 explain e2e-test-crd-publish-openapi-9526-crds'
  Jun  5 14:29:52.066: INFO: stderr: ""
  Jun  5 14:29:52.066: INFO: stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-9526-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E0605 14:29:52.549567      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:29:53.202: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5448" for this suite. @ 06/05/24 14:29:53.21
• [4.547 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:130
  STEP: Creating a kubernetes client @ 06/05/24 14:29:53.215
  Jun  5 14:29:53.215: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename sched-preemption @ 06/05/24 14:29:53.215
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:29:53.225
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:29:53.227
  Jun  5 14:29:53.241: INFO: Waiting up to 1m0s for all nodes to be ready
  E0605 14:29:53.550791      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:29:54.551876      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:29:55.552936      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:29:56.553805      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:29:57.554934      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:29:58.554907      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:29:59.555758      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:30:00.556334      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:30:01.556744      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:30:02.557410      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:30:03.557402      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:30:04.558023      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:30:05.558746      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:30:06.559215      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:30:07.560319      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:30:08.560902      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:30:09.561892      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:30:10.562134      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:30:11.563011      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:30:12.563848      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:30:13.564471      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:30:14.564865      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:30:15.565665      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:30:16.566626      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:30:17.567646      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:30:18.568246      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:30:19.569199      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:30:20.570061      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:30:21.570708      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:30:22.570868      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:30:23.571105      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:30:24.571472      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:30:25.572302      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:30:26.573613      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:30:27.573887      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:30:28.573896      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:30:29.574658      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:30:30.575417      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:30:31.576011      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:30:32.576492      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:30:33.577251      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:30:34.577667      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:30:35.578181      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:30:36.579234      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:30:37.579313      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:30:38.580035      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:30:39.580821      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:30:40.581564      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:30:41.581848      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:30:42.582854      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:30:43.583598      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:30:44.584221      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:30:45.584708      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:30:46.585684      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:30:47.586647      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:30:48.586717      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:30:49.587766      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:30:50.588363      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:30:51.588892      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:30:52.589776      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:30:53.248: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 06/05/24 14:30:53.251
  Jun  5 14:30:53.266: INFO: Created pod: pod0-0-sched-preemption-low-priority
  Jun  5 14:30:53.273: INFO: Created pod: pod0-1-sched-preemption-medium-priority
  Jun  5 14:30:53.289: INFO: Created pod: pod1-0-sched-preemption-medium-priority
  Jun  5 14:30:53.297: INFO: Created pod: pod1-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 06/05/24 14:30:53.297
  E0605 14:30:53.590737      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:30:54.591109      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 06/05/24 14:30:55.316
  E0605 14:30:55.591883      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:30:56.592250      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:30:57.593345      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:30:58.593587      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:30:59.389: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-4344" for this suite. @ 06/05/24 14:30:59.392
• [66.183 seconds]
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:330
  STEP: Creating a kubernetes client @ 06/05/24 14:30:59.398
  Jun  5 14:30:59.398: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename resourcequota @ 06/05/24 14:30:59.4
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:30:59.41
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:30:59.413
  E0605 14:30:59.594633      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:31:00.594636      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:31:01.595054      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:31:02.595150      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:31:03.596155      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:31:04.596589      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:31:05.597605      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:31:06.597686      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:31:07.597865      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:31:08.598084      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:31:09.599108      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:31:10.600265      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:31:11.600901      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:31:12.600944      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:31:13.601121      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:31:14.602018      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:31:15.602161      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 06/05/24 14:31:16.422
  E0605 14:31:16.602831      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:31:17.603995      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:31:18.604961      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:31:19.605608      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:31:20.606741      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 06/05/24 14:31:21.428
  STEP: Ensuring resource quota status is calculated @ 06/05/24 14:31:21.435
  E0605 14:31:21.607796      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:31:22.607993      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ConfigMap @ 06/05/24 14:31:23.441
  STEP: Ensuring resource quota status captures configMap creation @ 06/05/24 14:31:23.456
  E0605 14:31:23.608807      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:31:24.609263      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a ConfigMap @ 06/05/24 14:31:25.462
  STEP: Ensuring resource quota status released usage @ 06/05/24 14:31:25.467
  E0605 14:31:25.609605      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:31:26.610366      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:31:27.473: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3523" for this suite. @ 06/05/24 14:31:27.477
• [28.084 seconds]
------------------------------
SSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:812
  STEP: Creating a kubernetes client @ 06/05/24 14:31:27.483
  Jun  5 14:31:27.483: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename sched-preemption @ 06/05/24 14:31:27.484
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:31:27.502
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:31:27.506
  Jun  5 14:31:27.520: INFO: Waiting up to 1m0s for all nodes to be ready
  E0605 14:31:27.611073      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:31:28.611964      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:31:29.612469      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:31:30.612807      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:31:31.613415      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:31:32.613599      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:31:33.614856      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:31:34.615192      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:31:35.616345      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:31:36.617281      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:31:37.617914      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:31:38.618822      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:31:39.619797      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:31:40.620841      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:31:41.621507      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:31:42.621789      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:31:43.621958      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:31:44.622229      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:31:45.623141      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:31:46.623318      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:31:47.623535      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:31:48.624165      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:31:49.624832      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:31:50.624976      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:31:51.625003      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:31:52.625722      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:31:53.626381      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:31:54.627055      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:31:55.628039      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:31:56.628983      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:31:57.629204      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:31:58.629948      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:31:59.630783      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:32:00.631005      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:32:01.632028      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:32:02.632287      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:32:03.632774      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:32:04.633691      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:32:05.634398      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:32:06.634964      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:32:07.635548      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:32:08.635712      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:32:09.636075      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:32:10.636820      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:32:11.637280      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:32:12.637707      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:32:13.638103      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:32:14.638523      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:32:15.639560      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:32:16.640412      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:32:17.641170      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:32:18.641335      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:32:19.641893      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:32:20.642977      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:32:21.643783      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:32:22.644745      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:32:23.645892      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:32:24.646352      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:32:25.647362      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:32:26.647779      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:32:27.527: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 06/05/24 14:32:27.53
  Jun  5 14:32:27.530: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename sched-preemption-path @ 06/05/24 14:32:27.531
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:32:27.546
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:32:27.549
  Jun  5 14:32:27.566: INFO: PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  Jun  5 14:32:27.568: INFO: PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  Jun  5 14:32:27.614: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-6967" for this suite. @ 06/05/24 14:32:27.617
  Jun  5 14:32:27.620: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-6189" for this suite. @ 06/05/24 14:32:27.623
• [60.144 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:106
  STEP: Creating a kubernetes client @ 06/05/24 14:32:27.628
  Jun  5 14:32:27.628: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename runtimeclass @ 06/05/24 14:32:27.628
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:32:27.64
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:32:27.643
  E0605 14:32:27.647707      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:32:28.648080      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:32:29.648982      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:32:29.672: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-564" for this suite. @ 06/05/24 14:32:29.676
• [2.053 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:442
  STEP: Creating a kubernetes client @ 06/05/24 14:32:29.682
  Jun  5 14:32:29.682: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename crd-publish-openapi @ 06/05/24 14:32:29.682
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:32:29.695
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:32:29.698
  STEP: set up a multi version CRD @ 06/05/24 14:32:29.7
  Jun  5 14:32:29.701: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  E0605 14:32:30.649895      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:32:31.651061      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: mark a version not serverd @ 06/05/24 14:32:32.642
  E0605 14:32:32.651730      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check the unserved version gets removed @ 06/05/24 14:32:32.653
  STEP: check the other version is not changed @ 06/05/24 14:32:33.277
  E0605 14:32:33.651968      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:32:34.653138      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:32:35.640: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6943" for this suite. @ 06/05/24 14:32:35.647
• [5.969 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Lease lease API should be available [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lease.go:73
  STEP: Creating a kubernetes client @ 06/05/24 14:32:35.651
  Jun  5 14:32:35.651: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename lease-test @ 06/05/24 14:32:35.652
  E0605 14:32:35.653637      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:32:35.661
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:32:35.663
  Jun  5 14:32:35.696: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-2685" for this suite. @ 06/05/24 14:32:35.699
• [0.053 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:69
  STEP: Creating a kubernetes client @ 06/05/24 14:32:35.704
  Jun  5 14:32:35.704: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename endpointslice @ 06/05/24 14:32:35.705
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:32:35.714
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:32:35.716
  Jun  5 14:32:35.724: INFO: Endpoints addresses: [192.168.67.2] , ports: [8443]
  Jun  5 14:32:35.724: INFO: EndpointSlices addresses: [192.168.67.2] , ports: [8443]
  Jun  5 14:32:35.724: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-3145" for this suite. @ 06/05/24 14:32:35.726
• [0.027 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 06/05/24 14:32:35.731
  Jun  5 14:32:35.731: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename init-container @ 06/05/24 14:32:35.732
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:32:35.741
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:32:35.744
  STEP: creating the pod @ 06/05/24 14:32:35.747
  Jun  5 14:32:35.747: INFO: PodSpec: initContainers in spec.initContainers
  E0605 14:32:36.654865      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:32:37.655744      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:32:38.655950      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:32:39.656862      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:32:40.018: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-8733" for this suite. @ 06/05/24 14:32:40.022
• [4.295 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:132
  STEP: Creating a kubernetes client @ 06/05/24 14:32:40.027
  Jun  5 14:32:40.027: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename projected @ 06/05/24 14:32:40.028
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:32:40.039
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:32:40.042
  STEP: Creating the pod @ 06/05/24 14:32:40.044
  E0605 14:32:40.657738      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:32:41.658163      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:32:42.592: INFO: Successfully updated pod "labelsupdate296372d9-9f93-4e6b-890c-27a06d41a9f1"
  E0605 14:32:42.658585      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:32:43.658981      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:32:44.659102      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:32:45.659631      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:32:46.621: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4705" for this suite. @ 06/05/24 14:32:46.624
• [6.605 seconds]
------------------------------
SS
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:742
  STEP: Creating a kubernetes client @ 06/05/24 14:32:46.632
  Jun  5 14:32:46.632: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename svcaccounts @ 06/05/24 14:32:46.633
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:32:46.643
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:32:46.646
  Jun  5 14:32:46.650: INFO: Got root ca configmap in namespace "svcaccounts-6192"
  Jun  5 14:32:46.654: INFO: Deleted root ca configmap in namespace "svcaccounts-6192"
  E0605 14:32:46.660523      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting for a new root ca configmap created @ 06/05/24 14:32:47.154
  Jun  5 14:32:47.159: INFO: Recreated root ca configmap in namespace "svcaccounts-6192"
  Jun  5 14:32:47.165: INFO: Updated root ca configmap in namespace "svcaccounts-6192"
  E0605 14:32:47.661759      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting for the root ca configmap reconciled @ 06/05/24 14:32:47.666
  Jun  5 14:32:47.671: INFO: Reconciled root ca configmap in namespace "svcaccounts-6192"
  Jun  5 14:32:47.671: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-6192" for this suite. @ 06/05/24 14:32:47.674
• [1.048 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1632
  STEP: Creating a kubernetes client @ 06/05/24 14:32:47.68
  Jun  5 14:32:47.680: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename kubectl @ 06/05/24 14:32:47.682
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:32:47.691
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:32:47.694
  STEP: creating the pod @ 06/05/24 14:32:47.697
  Jun  5 14:32:47.697: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=kubectl-2592 create -f -'
  Jun  5 14:32:47.773: INFO: stderr: ""
  Jun  5 14:32:47.773: INFO: stdout: "pod/pause created\n"
  E0605 14:32:48.662095      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:32:49.662336      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 06/05/24 14:32:49.782
  Jun  5 14:32:49.782: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=kubectl-2592 label pods pause testing-label=testing-label-value'
  Jun  5 14:32:49.838: INFO: stderr: ""
  Jun  5 14:32:49.838: INFO: stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 06/05/24 14:32:49.838
  Jun  5 14:32:49.838: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=kubectl-2592 get pod pause -L testing-label'
  Jun  5 14:32:49.877: INFO: stderr: ""
  Jun  5 14:32:49.877: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 06/05/24 14:32:49.877
  Jun  5 14:32:49.877: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=kubectl-2592 label pods pause testing-label-'
  Jun  5 14:32:49.917: INFO: stderr: ""
  Jun  5 14:32:49.917: INFO: stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 06/05/24 14:32:49.917
  Jun  5 14:32:49.917: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=kubectl-2592 get pod pause -L testing-label'
  Jun  5 14:32:49.955: INFO: stderr: ""
  Jun  5 14:32:49.955: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    \n"
  STEP: using delete to clean up resources @ 06/05/24 14:32:49.955
  Jun  5 14:32:49.955: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=kubectl-2592 delete --grace-period=0 --force -f -'
  Jun  5 14:32:49.996: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Jun  5 14:32:49.996: INFO: stdout: "pod \"pause\" force deleted\n"
  Jun  5 14:32:49.996: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=kubectl-2592 get rc,svc -l name=pause --no-headers'
  Jun  5 14:32:50.034: INFO: stderr: "No resources found in kubectl-2592 namespace.\n"
  Jun  5 14:32:50.034: INFO: stdout: ""
  Jun  5 14:32:50.034: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=kubectl-2592 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Jun  5 14:32:50.069: INFO: stderr: ""
  Jun  5 14:32:50.069: INFO: stdout: ""
  Jun  5 14:32:50.069: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2592" for this suite. @ 06/05/24 14:32:50.071
• [2.393 seconds]
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:75
  STEP: Creating a kubernetes client @ 06/05/24 14:32:50.074
  Jun  5 14:32:50.074: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename configmap @ 06/05/24 14:32:50.074
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:32:50.081
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:32:50.082
  STEP: Creating configMap with name configmap-test-volume-34a0958c-c984-4b18-af06-f254ebfb89a3 @ 06/05/24 14:32:50.083
  STEP: Creating a pod to test consume configMaps @ 06/05/24 14:32:50.085
  E0605 14:32:50.662732      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:32:51.663732      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:32:52.664795      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:32:53.665292      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/05/24 14:32:54.099
  Jun  5 14:32:54.101: INFO: Trying to get logs from node k8sconformance-m02 pod pod-configmaps-33523127-df38-40b0-8a0b-cbef9f8ca3ff container agnhost-container: <nil>
  STEP: delete the pod @ 06/05/24 14:32:54.109
  Jun  5 14:32:54.124: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5887" for this suite. @ 06/05/24 14:32:54.127
• [4.058 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:350
  STEP: Creating a kubernetes client @ 06/05/24 14:32:54.132
  Jun  5 14:32:54.132: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename field-validation @ 06/05/24 14:32:54.133
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:32:54.143
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:32:54.146
  Jun  5 14:32:54.148: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  W0605 14:32:54.150073      22 field_validation.go:423] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc0039b4950 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  E0605 14:32:54.665840      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:32:55.666870      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:32:56.667048      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  W0605 14:32:56.701224      22 warnings.go:70] unknown field "alpha"
  W0605 14:32:56.701262      22 warnings.go:70] unknown field "beta"
  W0605 14:32:56.701273      22 warnings.go:70] unknown field "delta"
  W0605 14:32:56.701282      22 warnings.go:70] unknown field "epsilon"
  W0605 14:32:56.701290      22 warnings.go:70] unknown field "gamma"
  Jun  5 14:32:57.237: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-2381" for this suite. @ 06/05/24 14:32:57.24
• [3.112 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 06/05/24 14:32:57.245
  Jun  5 14:32:57.245: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename init-container @ 06/05/24 14:32:57.246
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:32:57.254
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:32:57.257
  STEP: creating the pod @ 06/05/24 14:32:57.261
  Jun  5 14:32:57.261: INFO: PodSpec: initContainers in spec.initContainers
  E0605 14:32:57.667706      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:32:58.668239      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:32:59.668892      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:33:00.201: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-6328" for this suite. @ 06/05/24 14:33:00.206
• [2.966 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should patch a secret [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:155
  STEP: Creating a kubernetes client @ 06/05/24 14:33:00.211
  Jun  5 14:33:00.211: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename secrets @ 06/05/24 14:33:00.213
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:33:00.223
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:33:00.225
  STEP: creating a secret @ 06/05/24 14:33:00.227
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 06/05/24 14:33:00.231
  STEP: patching the secret @ 06/05/24 14:33:00.234
  STEP: deleting the secret using a LabelSelector @ 06/05/24 14:33:00.242
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 06/05/24 14:33:00.246
  Jun  5 14:33:00.248: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2318" for this suite. @ 06/05/24 14:33:00.249
• [0.051 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:208
  STEP: Creating a kubernetes client @ 06/05/24 14:33:00.263
  Jun  5 14:33:00.263: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename endpointslice @ 06/05/24 14:33:00.264
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:33:00.278
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:33:00.28
  E0605 14:33:00.669705      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:33:01.670864      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:33:02.671315      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:33:03.672031      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:33:04.672624      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: referencing a single matching pod @ 06/05/24 14:33:05.326
  E0605 14:33:05.673141      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:33:06.673889      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:33:07.674928      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:33:08.675790      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:33:09.676227      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: referencing matching pods with named port @ 06/05/24 14:33:10.335
  E0605 14:33:10.676275      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:33:11.676732      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:33:12.677263      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:33:13.677803      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:33:14.678163      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 06/05/24 14:33:15.341
  E0605 14:33:15.678490      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:33:16.679557      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:33:17.679698      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:33:18.679821      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:33:19.680184      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: recreating EndpointSlices after they've been deleted @ 06/05/24 14:33:20.35
  Jun  5 14:33:20.366: INFO: EndpointSlice for Service endpointslice-9619/example-named-port not found
  E0605 14:33:20.680770      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:33:21.681687      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:33:22.682059      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:33:23.682720      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:33:24.683687      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:33:25.684505      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:33:26.685052      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:33:27.685679      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:33:28.685738      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:33:29.686950      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:33:30.373: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-9619" for this suite. @ 06/05/24 14:33:30.377
• [30.119 seconds]
------------------------------
SS
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:214
  STEP: Creating a kubernetes client @ 06/05/24 14:33:30.382
  Jun  5 14:33:30.382: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename container-probe @ 06/05/24 14:33:30.383
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:33:30.395
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:33:30.398
  STEP: Creating pod test-webserver-17d531af-5bd7-4f91-b139-89f7a2d1d214 in namespace container-probe-5758 @ 06/05/24 14:33:30.401
  E0605 14:33:30.687825      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:33:31.688953      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 06/05/24 14:33:32.421
  Jun  5 14:33:32.424: INFO: Initial restart count of pod test-webserver-17d531af-5bd7-4f91-b139-89f7a2d1d214 is 0
  Jun  5 14:33:32.427: INFO: Get pod test-webserver-17d531af-5bd7-4f91-b139-89f7a2d1d214 in namespace container-probe-5758
  E0605 14:33:32.689378      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:33:33.689742      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:33:34.432: INFO: Get pod test-webserver-17d531af-5bd7-4f91-b139-89f7a2d1d214 in namespace container-probe-5758
  E0605 14:33:34.690740      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:33:35.691611      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:33:36.438: INFO: Get pod test-webserver-17d531af-5bd7-4f91-b139-89f7a2d1d214 in namespace container-probe-5758
  E0605 14:33:36.692887      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:33:37.693811      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:33:38.444: INFO: Get pod test-webserver-17d531af-5bd7-4f91-b139-89f7a2d1d214 in namespace container-probe-5758
  E0605 14:33:38.694500      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:33:39.694664      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:33:40.450: INFO: Get pod test-webserver-17d531af-5bd7-4f91-b139-89f7a2d1d214 in namespace container-probe-5758
  E0605 14:33:40.695064      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:33:41.696063      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:33:42.456: INFO: Get pod test-webserver-17d531af-5bd7-4f91-b139-89f7a2d1d214 in namespace container-probe-5758
  E0605 14:33:42.696678      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:33:43.696806      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:33:44.461: INFO: Get pod test-webserver-17d531af-5bd7-4f91-b139-89f7a2d1d214 in namespace container-probe-5758
  E0605 14:33:44.697350      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:33:45.697858      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:33:46.465: INFO: Get pod test-webserver-17d531af-5bd7-4f91-b139-89f7a2d1d214 in namespace container-probe-5758
  E0605 14:33:46.698179      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:33:47.698929      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:33:48.469: INFO: Get pod test-webserver-17d531af-5bd7-4f91-b139-89f7a2d1d214 in namespace container-probe-5758
  E0605 14:33:48.699876      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:33:49.700807      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:33:50.474: INFO: Get pod test-webserver-17d531af-5bd7-4f91-b139-89f7a2d1d214 in namespace container-probe-5758
  E0605 14:33:50.701163      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:33:51.702024      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:33:52.480: INFO: Get pod test-webserver-17d531af-5bd7-4f91-b139-89f7a2d1d214 in namespace container-probe-5758
  E0605 14:33:52.702685      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:33:53.702892      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:33:54.486: INFO: Get pod test-webserver-17d531af-5bd7-4f91-b139-89f7a2d1d214 in namespace container-probe-5758
  E0605 14:33:54.703644      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:33:55.704086      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:33:56.492: INFO: Get pod test-webserver-17d531af-5bd7-4f91-b139-89f7a2d1d214 in namespace container-probe-5758
  E0605 14:33:56.704774      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:33:57.705015      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:33:58.497: INFO: Get pod test-webserver-17d531af-5bd7-4f91-b139-89f7a2d1d214 in namespace container-probe-5758
  E0605 14:33:58.705856      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:33:59.707083      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:34:00.503: INFO: Get pod test-webserver-17d531af-5bd7-4f91-b139-89f7a2d1d214 in namespace container-probe-5758
  E0605 14:34:00.707185      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:34:01.707790      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:34:02.510: INFO: Get pod test-webserver-17d531af-5bd7-4f91-b139-89f7a2d1d214 in namespace container-probe-5758
  E0605 14:34:02.708617      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:34:03.709899      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:34:04.516: INFO: Get pod test-webserver-17d531af-5bd7-4f91-b139-89f7a2d1d214 in namespace container-probe-5758
  E0605 14:34:04.710843      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:34:05.711199      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:34:06.522: INFO: Get pod test-webserver-17d531af-5bd7-4f91-b139-89f7a2d1d214 in namespace container-probe-5758
  E0605 14:34:06.711991      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:34:07.712421      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:34:08.528: INFO: Get pod test-webserver-17d531af-5bd7-4f91-b139-89f7a2d1d214 in namespace container-probe-5758
  E0605 14:34:08.712805      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:34:09.713728      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:34:10.535: INFO: Get pod test-webserver-17d531af-5bd7-4f91-b139-89f7a2d1d214 in namespace container-probe-5758
  E0605 14:34:10.714293      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:34:11.714897      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:34:12.541: INFO: Get pod test-webserver-17d531af-5bd7-4f91-b139-89f7a2d1d214 in namespace container-probe-5758
  E0605 14:34:12.715778      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:34:13.716357      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:34:14.549: INFO: Get pod test-webserver-17d531af-5bd7-4f91-b139-89f7a2d1d214 in namespace container-probe-5758
  E0605 14:34:14.716428      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:34:15.716939      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:34:16.554: INFO: Get pod test-webserver-17d531af-5bd7-4f91-b139-89f7a2d1d214 in namespace container-probe-5758
  E0605 14:34:16.717622      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:34:17.718059      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:34:18.560: INFO: Get pod test-webserver-17d531af-5bd7-4f91-b139-89f7a2d1d214 in namespace container-probe-5758
  E0605 14:34:18.718868      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:34:19.719364      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:34:20.567: INFO: Get pod test-webserver-17d531af-5bd7-4f91-b139-89f7a2d1d214 in namespace container-probe-5758
  E0605 14:34:20.720236      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:34:21.721174      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:34:22.573: INFO: Get pod test-webserver-17d531af-5bd7-4f91-b139-89f7a2d1d214 in namespace container-probe-5758
  E0605 14:34:22.722140      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:34:23.723011      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:34:24.579: INFO: Get pod test-webserver-17d531af-5bd7-4f91-b139-89f7a2d1d214 in namespace container-probe-5758
  E0605 14:34:24.723279      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:34:25.723951      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:34:26.586: INFO: Get pod test-webserver-17d531af-5bd7-4f91-b139-89f7a2d1d214 in namespace container-probe-5758
  E0605 14:34:26.724646      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:34:27.725200      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:34:28.592: INFO: Get pod test-webserver-17d531af-5bd7-4f91-b139-89f7a2d1d214 in namespace container-probe-5758
  E0605 14:34:28.725743      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:34:29.725687      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:34:30.600: INFO: Get pod test-webserver-17d531af-5bd7-4f91-b139-89f7a2d1d214 in namespace container-probe-5758
  E0605 14:34:30.726257      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:34:31.727274      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:34:32.605: INFO: Get pod test-webserver-17d531af-5bd7-4f91-b139-89f7a2d1d214 in namespace container-probe-5758
  E0605 14:34:32.727628      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:34:33.727934      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:34:34.612: INFO: Get pod test-webserver-17d531af-5bd7-4f91-b139-89f7a2d1d214 in namespace container-probe-5758
  E0605 14:34:34.728698      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:34:35.729219      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:34:36.616: INFO: Get pod test-webserver-17d531af-5bd7-4f91-b139-89f7a2d1d214 in namespace container-probe-5758
  E0605 14:34:36.730194      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:34:37.730802      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:34:38.620: INFO: Get pod test-webserver-17d531af-5bd7-4f91-b139-89f7a2d1d214 in namespace container-probe-5758
  E0605 14:34:38.731048      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:34:39.731750      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:34:40.627: INFO: Get pod test-webserver-17d531af-5bd7-4f91-b139-89f7a2d1d214 in namespace container-probe-5758
  E0605 14:34:40.732360      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:34:41.733110      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:34:42.632: INFO: Get pod test-webserver-17d531af-5bd7-4f91-b139-89f7a2d1d214 in namespace container-probe-5758
  E0605 14:34:42.734135      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:34:43.734802      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:34:44.637: INFO: Get pod test-webserver-17d531af-5bd7-4f91-b139-89f7a2d1d214 in namespace container-probe-5758
  E0605 14:34:44.735916      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:34:45.736425      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:34:46.642: INFO: Get pod test-webserver-17d531af-5bd7-4f91-b139-89f7a2d1d214 in namespace container-probe-5758
  E0605 14:34:46.737610      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:34:47.737921      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:34:48.647: INFO: Get pod test-webserver-17d531af-5bd7-4f91-b139-89f7a2d1d214 in namespace container-probe-5758
  E0605 14:34:48.738801      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:34:49.739220      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:34:50.654: INFO: Get pod test-webserver-17d531af-5bd7-4f91-b139-89f7a2d1d214 in namespace container-probe-5758
  E0605 14:34:50.740010      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:34:51.740020      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:34:52.661: INFO: Get pod test-webserver-17d531af-5bd7-4f91-b139-89f7a2d1d214 in namespace container-probe-5758
  E0605 14:34:52.740679      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:34:53.740850      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:34:54.666: INFO: Get pod test-webserver-17d531af-5bd7-4f91-b139-89f7a2d1d214 in namespace container-probe-5758
  E0605 14:34:54.740998      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:34:55.741500      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:34:56.672: INFO: Get pod test-webserver-17d531af-5bd7-4f91-b139-89f7a2d1d214 in namespace container-probe-5758
  E0605 14:34:56.742492      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:34:57.742705      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:34:58.680: INFO: Get pod test-webserver-17d531af-5bd7-4f91-b139-89f7a2d1d214 in namespace container-probe-5758
  E0605 14:34:58.743452      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:34:59.743871      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:35:00.686: INFO: Get pod test-webserver-17d531af-5bd7-4f91-b139-89f7a2d1d214 in namespace container-probe-5758
  E0605 14:35:00.743806      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:35:01.743960      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:35:02.691: INFO: Get pod test-webserver-17d531af-5bd7-4f91-b139-89f7a2d1d214 in namespace container-probe-5758
  E0605 14:35:02.744896      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:35:03.745849      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:35:04.693: INFO: Get pod test-webserver-17d531af-5bd7-4f91-b139-89f7a2d1d214 in namespace container-probe-5758
  E0605 14:35:04.746689      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:35:05.746628      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:35:06.695: INFO: Get pod test-webserver-17d531af-5bd7-4f91-b139-89f7a2d1d214 in namespace container-probe-5758
  E0605 14:35:06.746778      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:35:07.747702      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:35:08.698: INFO: Get pod test-webserver-17d531af-5bd7-4f91-b139-89f7a2d1d214 in namespace container-probe-5758
  E0605 14:35:08.748486      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:35:09.748788      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:35:10.704: INFO: Get pod test-webserver-17d531af-5bd7-4f91-b139-89f7a2d1d214 in namespace container-probe-5758
  E0605 14:35:10.749533      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:35:11.750352      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:35:12.707: INFO: Get pod test-webserver-17d531af-5bd7-4f91-b139-89f7a2d1d214 in namespace container-probe-5758
  E0605 14:35:12.751038      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:35:13.751508      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:35:14.711: INFO: Get pod test-webserver-17d531af-5bd7-4f91-b139-89f7a2d1d214 in namespace container-probe-5758
  E0605 14:35:14.751820      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:35:15.752308      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:35:16.716: INFO: Get pod test-webserver-17d531af-5bd7-4f91-b139-89f7a2d1d214 in namespace container-probe-5758
  E0605 14:35:16.752489      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:35:17.752843      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:35:18.721: INFO: Get pod test-webserver-17d531af-5bd7-4f91-b139-89f7a2d1d214 in namespace container-probe-5758
  E0605 14:35:18.753818      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:35:19.754758      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:35:20.728: INFO: Get pod test-webserver-17d531af-5bd7-4f91-b139-89f7a2d1d214 in namespace container-probe-5758
  E0605 14:35:20.755176      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:35:21.755960      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:35:22.734: INFO: Get pod test-webserver-17d531af-5bd7-4f91-b139-89f7a2d1d214 in namespace container-probe-5758
  E0605 14:35:22.757065      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:35:23.757665      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:35:24.741: INFO: Get pod test-webserver-17d531af-5bd7-4f91-b139-89f7a2d1d214 in namespace container-probe-5758
  E0605 14:35:24.758861      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:35:25.759692      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:35:26.747: INFO: Get pod test-webserver-17d531af-5bd7-4f91-b139-89f7a2d1d214 in namespace container-probe-5758
  E0605 14:35:26.760654      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:35:27.760706      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:35:28.752: INFO: Get pod test-webserver-17d531af-5bd7-4f91-b139-89f7a2d1d214 in namespace container-probe-5758
  E0605 14:35:28.761484      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:35:29.761854      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:35:30.758: INFO: Get pod test-webserver-17d531af-5bd7-4f91-b139-89f7a2d1d214 in namespace container-probe-5758
  E0605 14:35:30.762676      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:35:31.763538      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:35:32.763671      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:35:32.763: INFO: Get pod test-webserver-17d531af-5bd7-4f91-b139-89f7a2d1d214 in namespace container-probe-5758
  E0605 14:35:33.764456      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:35:34.764733      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:35:34.768: INFO: Get pod test-webserver-17d531af-5bd7-4f91-b139-89f7a2d1d214 in namespace container-probe-5758
  E0605 14:35:35.765486      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:35:36.766534      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:35:36.773: INFO: Get pod test-webserver-17d531af-5bd7-4f91-b139-89f7a2d1d214 in namespace container-probe-5758
  E0605 14:35:37.766764      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:35:38.767251      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:35:38.779: INFO: Get pod test-webserver-17d531af-5bd7-4f91-b139-89f7a2d1d214 in namespace container-probe-5758
  E0605 14:35:39.767809      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:35:40.768235      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:35:40.787: INFO: Get pod test-webserver-17d531af-5bd7-4f91-b139-89f7a2d1d214 in namespace container-probe-5758
  E0605 14:35:41.769233      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:35:42.769776      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:35:42.792: INFO: Get pod test-webserver-17d531af-5bd7-4f91-b139-89f7a2d1d214 in namespace container-probe-5758
  E0605 14:35:43.770115      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:35:44.770674      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:35:44.798: INFO: Get pod test-webserver-17d531af-5bd7-4f91-b139-89f7a2d1d214 in namespace container-probe-5758
  E0605 14:35:45.771623      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:35:46.772836      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:35:46.803: INFO: Get pod test-webserver-17d531af-5bd7-4f91-b139-89f7a2d1d214 in namespace container-probe-5758
  E0605 14:35:47.773458      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:35:48.773742      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:35:48.809: INFO: Get pod test-webserver-17d531af-5bd7-4f91-b139-89f7a2d1d214 in namespace container-probe-5758
  E0605 14:35:49.774872      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:35:50.775340      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:35:50.815: INFO: Get pod test-webserver-17d531af-5bd7-4f91-b139-89f7a2d1d214 in namespace container-probe-5758
  E0605 14:35:51.775915      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:35:52.776859      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:35:52.821: INFO: Get pod test-webserver-17d531af-5bd7-4f91-b139-89f7a2d1d214 in namespace container-probe-5758
  E0605 14:35:53.777557      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:35:54.777936      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:35:54.827: INFO: Get pod test-webserver-17d531af-5bd7-4f91-b139-89f7a2d1d214 in namespace container-probe-5758
  E0605 14:35:55.778831      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:35:56.779592      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:35:56.833: INFO: Get pod test-webserver-17d531af-5bd7-4f91-b139-89f7a2d1d214 in namespace container-probe-5758
  E0605 14:35:57.779859      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:35:58.780549      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:35:58.839: INFO: Get pod test-webserver-17d531af-5bd7-4f91-b139-89f7a2d1d214 in namespace container-probe-5758
  E0605 14:35:59.780623      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:36:00.780724      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:36:00.846: INFO: Get pod test-webserver-17d531af-5bd7-4f91-b139-89f7a2d1d214 in namespace container-probe-5758
  E0605 14:36:01.781151      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:36:02.781667      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:36:02.852: INFO: Get pod test-webserver-17d531af-5bd7-4f91-b139-89f7a2d1d214 in namespace container-probe-5758
  E0605 14:36:03.781757      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:36:04.782641      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:36:04.858: INFO: Get pod test-webserver-17d531af-5bd7-4f91-b139-89f7a2d1d214 in namespace container-probe-5758
  E0605 14:36:05.783776      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:36:06.784940      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:36:06.864: INFO: Get pod test-webserver-17d531af-5bd7-4f91-b139-89f7a2d1d214 in namespace container-probe-5758
  E0605 14:36:07.785868      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:36:08.786030      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:36:08.871: INFO: Get pod test-webserver-17d531af-5bd7-4f91-b139-89f7a2d1d214 in namespace container-probe-5758
  E0605 14:36:09.786765      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:36:10.787372      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:36:10.878: INFO: Get pod test-webserver-17d531af-5bd7-4f91-b139-89f7a2d1d214 in namespace container-probe-5758
  E0605 14:36:11.788234      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:36:12.788797      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:36:12.884: INFO: Get pod test-webserver-17d531af-5bd7-4f91-b139-89f7a2d1d214 in namespace container-probe-5758
  E0605 14:36:13.788884      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:36:14.789834      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:36:14.890: INFO: Get pod test-webserver-17d531af-5bd7-4f91-b139-89f7a2d1d214 in namespace container-probe-5758
  E0605 14:36:15.790726      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:36:16.791927      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:36:16.896: INFO: Get pod test-webserver-17d531af-5bd7-4f91-b139-89f7a2d1d214 in namespace container-probe-5758
  E0605 14:36:17.792825      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:36:18.793391      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:36:18.904: INFO: Get pod test-webserver-17d531af-5bd7-4f91-b139-89f7a2d1d214 in namespace container-probe-5758
  E0605 14:36:19.794007      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:36:20.794606      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:36:20.910: INFO: Get pod test-webserver-17d531af-5bd7-4f91-b139-89f7a2d1d214 in namespace container-probe-5758
  E0605 14:36:21.795239      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:36:22.795655      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:36:22.916: INFO: Get pod test-webserver-17d531af-5bd7-4f91-b139-89f7a2d1d214 in namespace container-probe-5758
  E0605 14:36:23.796349      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:36:24.796466      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:36:24.921: INFO: Get pod test-webserver-17d531af-5bd7-4f91-b139-89f7a2d1d214 in namespace container-probe-5758
  E0605 14:36:25.796641      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:36:26.797938      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:36:26.928: INFO: Get pod test-webserver-17d531af-5bd7-4f91-b139-89f7a2d1d214 in namespace container-probe-5758
  E0605 14:36:27.798168      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:36:28.798755      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:36:28.935: INFO: Get pod test-webserver-17d531af-5bd7-4f91-b139-89f7a2d1d214 in namespace container-probe-5758
  E0605 14:36:29.799301      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:36:30.799968      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:36:30.940: INFO: Get pod test-webserver-17d531af-5bd7-4f91-b139-89f7a2d1d214 in namespace container-probe-5758
  E0605 14:36:31.800105      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:36:32.800763      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:36:32.944: INFO: Get pod test-webserver-17d531af-5bd7-4f91-b139-89f7a2d1d214 in namespace container-probe-5758
  E0605 14:36:33.800888      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:36:34.801139      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:36:34.947: INFO: Get pod test-webserver-17d531af-5bd7-4f91-b139-89f7a2d1d214 in namespace container-probe-5758
  E0605 14:36:35.802113      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:36:36.802947      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:36:36.952: INFO: Get pod test-webserver-17d531af-5bd7-4f91-b139-89f7a2d1d214 in namespace container-probe-5758
  E0605 14:36:37.803876      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:36:38.804839      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:36:38.957: INFO: Get pod test-webserver-17d531af-5bd7-4f91-b139-89f7a2d1d214 in namespace container-probe-5758
  E0605 14:36:39.805890      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:36:40.806528      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:36:40.963: INFO: Get pod test-webserver-17d531af-5bd7-4f91-b139-89f7a2d1d214 in namespace container-probe-5758
  E0605 14:36:41.807059      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:36:42.807813      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:36:42.969: INFO: Get pod test-webserver-17d531af-5bd7-4f91-b139-89f7a2d1d214 in namespace container-probe-5758
  E0605 14:36:43.808585      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:36:44.808966      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:36:44.975: INFO: Get pod test-webserver-17d531af-5bd7-4f91-b139-89f7a2d1d214 in namespace container-probe-5758
  E0605 14:36:45.809194      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:36:46.810169      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:36:46.980: INFO: Get pod test-webserver-17d531af-5bd7-4f91-b139-89f7a2d1d214 in namespace container-probe-5758
  E0605 14:36:47.810543      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:36:48.811149      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:36:48.987: INFO: Get pod test-webserver-17d531af-5bd7-4f91-b139-89f7a2d1d214 in namespace container-probe-5758
  E0605 14:36:49.812040      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:36:50.812613      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:36:50.994: INFO: Get pod test-webserver-17d531af-5bd7-4f91-b139-89f7a2d1d214 in namespace container-probe-5758
  E0605 14:36:51.813345      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:36:52.813797      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:36:53.000: INFO: Get pod test-webserver-17d531af-5bd7-4f91-b139-89f7a2d1d214 in namespace container-probe-5758
  E0605 14:36:53.813891      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:36:54.814051      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:36:55.005: INFO: Get pod test-webserver-17d531af-5bd7-4f91-b139-89f7a2d1d214 in namespace container-probe-5758
  E0605 14:36:55.814748      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:36:56.815855      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:36:57.011: INFO: Get pod test-webserver-17d531af-5bd7-4f91-b139-89f7a2d1d214 in namespace container-probe-5758
  E0605 14:36:57.816968      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:36:58.817230      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:36:59.016: INFO: Get pod test-webserver-17d531af-5bd7-4f91-b139-89f7a2d1d214 in namespace container-probe-5758
  E0605 14:36:59.817735      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:37:00.818836      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:37:01.021: INFO: Get pod test-webserver-17d531af-5bd7-4f91-b139-89f7a2d1d214 in namespace container-probe-5758
  E0605 14:37:01.819040      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:37:02.819614      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:37:03.026: INFO: Get pod test-webserver-17d531af-5bd7-4f91-b139-89f7a2d1d214 in namespace container-probe-5758
  E0605 14:37:03.819744      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:37:04.820173      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:37:05.032: INFO: Get pod test-webserver-17d531af-5bd7-4f91-b139-89f7a2d1d214 in namespace container-probe-5758
  E0605 14:37:05.821292      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:37:06.821961      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:37:07.038: INFO: Get pod test-webserver-17d531af-5bd7-4f91-b139-89f7a2d1d214 in namespace container-probe-5758
  E0605 14:37:07.822987      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:37:08.823546      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:37:09.044: INFO: Get pod test-webserver-17d531af-5bd7-4f91-b139-89f7a2d1d214 in namespace container-probe-5758
  E0605 14:37:09.824483      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:37:10.824827      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:37:11.051: INFO: Get pod test-webserver-17d531af-5bd7-4f91-b139-89f7a2d1d214 in namespace container-probe-5758
  E0605 14:37:11.825808      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:37:12.826965      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:37:13.057: INFO: Get pod test-webserver-17d531af-5bd7-4f91-b139-89f7a2d1d214 in namespace container-probe-5758
  E0605 14:37:13.827269      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:37:14.827782      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:37:15.062: INFO: Get pod test-webserver-17d531af-5bd7-4f91-b139-89f7a2d1d214 in namespace container-probe-5758
  E0605 14:37:15.828180      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:37:16.828475      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:37:17.068: INFO: Get pod test-webserver-17d531af-5bd7-4f91-b139-89f7a2d1d214 in namespace container-probe-5758
  E0605 14:37:17.828818      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:37:18.829375      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:37:19.074: INFO: Get pod test-webserver-17d531af-5bd7-4f91-b139-89f7a2d1d214 in namespace container-probe-5758
  E0605 14:37:19.830196      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:37:20.830358      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:37:21.080: INFO: Get pod test-webserver-17d531af-5bd7-4f91-b139-89f7a2d1d214 in namespace container-probe-5758
  E0605 14:37:21.830722      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:37:22.830939      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:37:23.086: INFO: Get pod test-webserver-17d531af-5bd7-4f91-b139-89f7a2d1d214 in namespace container-probe-5758
  E0605 14:37:23.831659      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:37:24.832233      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:37:25.092: INFO: Get pod test-webserver-17d531af-5bd7-4f91-b139-89f7a2d1d214 in namespace container-probe-5758
  E0605 14:37:25.833082      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:37:26.834094      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:37:27.097: INFO: Get pod test-webserver-17d531af-5bd7-4f91-b139-89f7a2d1d214 in namespace container-probe-5758
  E0605 14:37:27.834898      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:37:28.835851      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:37:29.102: INFO: Get pod test-webserver-17d531af-5bd7-4f91-b139-89f7a2d1d214 in namespace container-probe-5758
  E0605 14:37:29.836094      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:37:30.837073      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:37:31.110: INFO: Get pod test-webserver-17d531af-5bd7-4f91-b139-89f7a2d1d214 in namespace container-probe-5758
  E0605 14:37:31.837164      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:37:32.837660      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 06/05/24 14:37:33.11
  Jun  5 14:37:33.122: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-5758" for this suite. @ 06/05/24 14:37:33.127
• [242.751 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 06/05/24 14:37:33.143
  Jun  5 14:37:33.143: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename cronjob @ 06/05/24 14:37:33.144
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:37:33.153
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:37:33.156
  STEP: Creating a suspended cronjob @ 06/05/24 14:37:33.157
  STEP: Ensuring no jobs are scheduled @ 06/05/24 14:37:33.161
  E0605 14:37:33.837750      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:37:34.838192      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:37:35.839010      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:37:36.840001      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:37:37.840737      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:37:38.841965      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:37:39.842406      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:37:40.843144      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:37:41.843897      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:37:42.844375      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:37:43.845000      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:37:44.845369      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:37:45.845865      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:37:46.846870      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:37:47.847805      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:37:48.848364      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:37:49.848936      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:37:50.849782      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:37:51.849886      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:37:52.851051      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:37:53.851392      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:37:54.851835      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:37:55.852703      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:37:56.853082      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:37:57.853582      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:37:58.853796      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:37:59.853955      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:38:00.855012      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:38:01.855841      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:38:02.856230      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:38:03.856844      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:38:04.857460      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:38:05.857737      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:38:06.858844      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:38:07.858882      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:38:08.859482      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:38:09.859879      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:38:10.860519      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:38:11.861233      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:38:12.861784      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:38:13.862247      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:38:14.862717      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:38:15.863718      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:38:16.864333      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:38:17.864771      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:38:18.865367      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:38:19.866148      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:38:20.866751      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:38:21.866986      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:38:22.867179      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:38:23.867777      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:38:24.868232      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:38:25.869297      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:38:26.870338      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:38:27.870802      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:38:28.871414      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:38:29.871579      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:38:30.872832      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:38:31.873466      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:38:32.873816      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:38:33.874957      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:38:34.875400      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:38:35.875876      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:38:36.876697      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:38:37.876792      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:38:38.876751      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:38:39.877964      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:38:40.878197      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:38:41.879301      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:38:42.879911      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:38:43.880773      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:38:44.880879      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:38:45.881955      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:38:46.883009      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:38:47.883137      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:38:48.883846      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:38:49.884814      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:38:50.885279      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:38:51.885406      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:38:52.885994      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:38:53.886986      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:38:54.888020      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:38:55.888937      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:38:56.890020      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:38:57.891005      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:38:58.892182      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:38:59.892869      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:39:00.893511      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:39:01.894046      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:39:02.895196      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:39:03.895640      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:39:04.895818      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:39:05.896224      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:39:06.896319      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:39:07.896759      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:39:08.897343      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:39:09.897821      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:39:10.898533      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:39:11.899352      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:39:12.899996      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:39:13.900784      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:39:14.901704      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:39:15.902893      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:39:16.903865      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:39:17.904920      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:39:18.905576      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:39:19.905979      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:39:20.906680      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:39:21.907287      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:39:22.907762      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:39:23.907973      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:39:24.908886      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:39:25.909403      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:39:26.910063      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:39:27.910316      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:39:28.910880      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:39:29.910931      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:39:30.911513      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:39:31.912593      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:39:32.912819      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:39:33.913787      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:39:34.914902      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:39:35.915001      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:39:36.915783      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:39:37.915828      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:39:38.916929      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:39:39.917313      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:39:40.917339      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:39:41.918210      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:39:42.918410      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:39:43.919105      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:39:44.919612      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:39:45.919883      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:39:46.920905      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:39:47.921825      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:39:48.922096      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:39:49.922397      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:39:50.922828      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:39:51.923340      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:39:52.923748      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:39:53.924791      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:39:54.925893      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:39:55.926834      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:39:56.927605      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:39:57.927680      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:39:58.928119      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:39:59.928948      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:40:00.929772      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:40:01.930192      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:40:02.930844      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:40:03.931813      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:40:04.932047      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:40:05.933034      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:40:06.933078      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:40:07.933881      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:40:08.934972      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:40:09.935817      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:40:10.936485      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:40:11.936753      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:40:12.936768      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:40:13.937767      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:40:14.938973      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:40:15.940009      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:40:16.940837      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:40:17.941026      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:40:18.941908      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:40:19.942814      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:40:20.943778      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:40:21.944338      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:40:22.944614      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:40:23.945668      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:40:24.946700      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:40:25.947752      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:40:26.948204      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:40:27.948747      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:40:28.949247      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:40:29.949736      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:40:30.950779      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:40:31.951197      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:40:32.952156      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:40:33.952810      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:40:34.953805      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:40:35.954076      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:40:36.955130      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:40:37.955708      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:40:38.955771      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:40:39.956686      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:40:40.957075      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:40:41.958046      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:40:42.958607      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:40:43.958859      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:40:44.959271      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:40:45.959849      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:40:46.960953      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:40:47.961250      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:40:48.962325      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:40:49.962770      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:40:50.963221      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:40:51.963913      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:40:52.964601      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:40:53.964700      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:40:54.965139      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:40:55.965878      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:40:56.966013      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:40:57.966141      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:40:58.966316      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:40:59.967330      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:41:00.967826      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:41:01.968610      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:41:02.969138      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:41:03.969561      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:41:04.969882      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:41:05.970867      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:41:06.971075      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:41:07.971829      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:41:08.972409      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:41:09.973358      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:41:10.973849      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:41:11.973907      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:41:12.974010      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:41:13.974794      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:41:14.974962      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:41:15.975857      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:41:16.976064      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:41:17.976975      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:41:18.977589      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:41:19.977964      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:41:20.978402      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:41:21.979276      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:41:22.979807      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:41:23.980914      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:41:24.981267      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:41:25.981643      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:41:26.982395      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:41:27.982856      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:41:28.983874      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:41:29.984379      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:41:30.985550      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:41:31.985993      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:41:32.986530      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:41:33.986770      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:41:34.986860      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:41:35.987913      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:41:36.988965      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:41:37.990097      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:41:38.990606      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:41:39.991016      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:41:40.991349      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:41:41.991987      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:41:42.992394      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:41:43.992773      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:41:44.993091      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:41:45.993475      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:41:46.994499      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:41:47.995341      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:41:48.995783      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:41:49.996643      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:41:50.996811      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:41:51.997181      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:41:52.997477      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:41:53.998046      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:41:54.998471      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:41:55.999317      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:41:57.000383      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:41:58.000928      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:41:59.001911      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:42:00.002516      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:42:01.003061      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:42:02.003584      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:42:03.003828      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:42:04.004352      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:42:05.004741      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:42:06.005749      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:42:07.006715      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:42:08.007219      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:42:09.007709      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:42:10.008288      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:42:11.008772      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:42:12.009188      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:42:13.009706      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:42:14.010536      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:42:15.011054      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:42:16.011743      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:42:17.012192      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:42:18.012858      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:42:19.013364      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:42:20.013663      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:42:21.013803      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:42:22.014576      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:42:23.015164      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:42:24.015416      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:42:25.015852      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:42:26.016654      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:42:27.017367      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:42:28.017834      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:42:29.018525      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:42:30.018755      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:42:31.019299      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:42:32.020285      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:42:33.021585      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring no job exists by listing jobs explicitly @ 06/05/24 14:42:33.168
  STEP: Removing cronjob @ 06/05/24 14:42:33.17
  Jun  5 14:42:33.176: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-7244" for this suite. @ 06/05/24 14:42:33.18
• [300.041 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:141
  STEP: Creating a kubernetes client @ 06/05/24 14:42:33.185
  Jun  5 14:42:33.185: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename disruption @ 06/05/24 14:42:33.186
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:42:33.198
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:42:33.201
  STEP: Waiting for the pdb to be processed @ 06/05/24 14:42:33.207
  E0605 14:42:34.022722      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:42:35.023215      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for all pods to be running @ 06/05/24 14:42:35.234
  Jun  5 14:42:35.239: INFO: running pods: 0 < 3
  E0605 14:42:36.023980      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0605 14:42:37.025188      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:42:37.243: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-366" for this suite. @ 06/05/24 14:42:37.246
• [4.068 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1399
  STEP: Creating a kubernetes client @ 06/05/24 14:42:37.253
  Jun  5 14:42:37.253: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename kubectl @ 06/05/24 14:42:37.254
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:42:37.264
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:42:37.267
  Jun  5 14:42:37.269: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=kubectl-5592 create -f -'
  Jun  5 14:42:37.338: INFO: stderr: ""
  Jun  5 14:42:37.338: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  Jun  5 14:42:37.338: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=kubectl-5592 create -f -'
  Jun  5 14:42:37.428: INFO: stderr: ""
  Jun  5 14:42:37.428: INFO: stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 06/05/24 14:42:37.428
  E0605 14:42:38.025278      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:42:38.433: INFO: Selector matched 1 pods for map[app:agnhost]
  Jun  5 14:42:38.433: INFO: Found 0 / 1
  E0605 14:42:39.025303      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:42:39.434: INFO: Selector matched 1 pods for map[app:agnhost]
  Jun  5 14:42:39.434: INFO: Found 1 / 1
  Jun  5 14:42:39.434: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  Jun  5 14:42:39.438: INFO: Selector matched 1 pods for map[app:agnhost]
  Jun  5 14:42:39.438: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Jun  5 14:42:39.438: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=kubectl-5592 describe pod agnhost-primary-bx6x9'
  Jun  5 14:42:39.484: INFO: stderr: ""
  Jun  5 14:42:39.484: INFO: stdout: "Name:             agnhost-primary-bx6x9\nNamespace:        kubectl-5592\nPriority:         0\nService Account:  default\nNode:             k8sconformance-m02/192.168.67.3\nStart Time:       Wed, 05 Jun 2024 14:42:37 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      <none>\nStatus:           Running\nIP:               10.244.1.45\nIPs:\n  IP:           10.244.1.45\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   docker://53e11906179e826bf8ef4470a049ac21d9193b40b343ed89a0ad77bef591bda9\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.47\n    Image ID:       docker-pullable://registry.k8s.io/e2e-test-images/agnhost@sha256:cc249acbd34692826b2b335335615e060fdb3c0bca4954507aa3a1d1194de253\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Wed, 05 Jun 2024 14:42:37 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-ksw8l (ro)\nConditions:\n  Type                        Status\n  PodReadyToStartContainers   True \n  Initialized                 True \n  Ready                       True \n  ContainersReady             True \n  PodScheduled                True \nVolumes:\n  kube-api-access-ksw8l:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  2s    default-scheduler  Successfully assigned kubectl-5592/agnhost-primary-bx6x9 to k8sconformance-m02\n  Normal  Pulled     2s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.47\" already present on machine\n  Normal  Created    2s    kubelet            Created container agnhost-primary\n  Normal  Started    2s    kubelet            Started container agnhost-primary\n"
  Jun  5 14:42:39.484: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=kubectl-5592 describe rc agnhost-primary'
  Jun  5 14:42:39.524: INFO: stderr: ""
  Jun  5 14:42:39.524: INFO: stdout: "Name:         agnhost-primary\nNamespace:    kubectl-5592\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:        registry.k8s.io/e2e-test-images/agnhost:2.47\n    Port:         6379/TCP\n    Host Port:    0/TCP\n    Environment:  <none>\n    Mounts:       <none>\n  Volumes:        <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  2s    replication-controller  Created pod: agnhost-primary-bx6x9\n"
  Jun  5 14:42:39.524: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=kubectl-5592 describe service agnhost-primary'
  Jun  5 14:42:39.565: INFO: stderr: ""
  Jun  5 14:42:39.565: INFO: stdout: "Name:              agnhost-primary\nNamespace:         kubectl-5592\nLabels:            app=agnhost\n                   role=primary\nAnnotations:       <none>\nSelector:          app=agnhost,role=primary\nType:              ClusterIP\nIP Family Policy:  SingleStack\nIP Families:       IPv4\nIP:                10.111.245.17\nIPs:               10.111.245.17\nPort:              <unset>  6379/TCP\nTargetPort:        agnhost-server/TCP\nEndpoints:         10.244.1.45:6379\nSession Affinity:  None\nEvents:            <none>\n"
  Jun  5 14:42:39.566: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=kubectl-5592 describe node k8sconformance'
  Jun  5 14:42:39.612: INFO: stderr: ""
  Jun  5 14:42:39.612: INFO: stdout: "Name:               k8sconformance\nRoles:              control-plane\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=k8sconformance\n                    kubernetes.io/os=linux\n                    minikube.k8s.io/commit=6c565e5fb1172f55b1feb7aa788b9c41741c39b4\n                    minikube.k8s.io/name=k8sconformance\n                    minikube.k8s.io/primary=true\n                    minikube.k8s.io/updated_at=2024_06_05T08_48_19_0700\n                    minikube.k8s.io/version=v1.33.1\n                    node-role.kubernetes.io/control-plane=\n                    node.kubernetes.io/exclude-from-external-load-balancers=\nAnnotations:        kubeadm.alpha.kubernetes.io/cri-socket: unix:///var/run/cri-dockerd.sock\n                    node.alpha.kubernetes.io/ttl: 0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Wed, 05 Jun 2024 12:48:15 +0000\nTaints:             <none>\nUnschedulable:      false\nLease:\n  HolderIdentity:  k8sconformance\n  AcquireTime:     <unset>\n  RenewTime:       Wed, 05 Jun 2024 14:42:33 +0000\nConditions:\n  Type             Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----             ------  -----------------                 ------------------                ------                       -------\n  MemoryPressure   False   Wed, 05 Jun 2024 14:39:38 +0000   Wed, 05 Jun 2024 12:48:15 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure     False   Wed, 05 Jun 2024 14:39:38 +0000   Wed, 05 Jun 2024 12:48:15 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure      False   Wed, 05 Jun 2024 14:39:38 +0000   Wed, 05 Jun 2024 12:48:15 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready            True    Wed, 05 Jun 2024 14:39:38 +0000   Wed, 05 Jun 2024 12:48:15 +0000   KubeletReady                 kubelet is posting ready status\nAddresses:\n  InternalIP:  192.168.67.2\n  Hostname:    k8sconformance\nCapacity:\n  cpu:                12\n  ephemeral-storage:  954434220Ki\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             32480668Ki\n  pods:               110\nAllocatable:\n  cpu:                12\n  ephemeral-storage:  954434220Ki\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             32480668Ki\n  pods:               110\nSystem Info:\n  Machine ID:                 cf5142e6d59847bd852bd373e4204350\n  System UUID:                31a675df-1470-415f-9204-e04ce34b1c17\n  Boot ID:                    411be6db-f090-405f-88f7-3050b81767c7\n  Kernel Version:             6.8.0-35-generic\n  OS Image:                   Ubuntu 22.04.4 LTS\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  docker://26.1.3\n  Kubelet Version:            v1.29.5\n  Kube-Proxy Version:         v1.29.5\nPodCIDR:                      10.244.0.0/24\nPodCIDRs:                     10.244.0.0/24\nNon-terminated Pods:          (9 in total)\n  Namespace                   Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                       ------------  ----------  ---------------  -------------  ---\n  kube-system                 coredns-76f75df574-xgft9                                   100m (0%)     0 (0%)      70Mi (0%)        170Mi (0%)     114m\n  kube-system                 etcd-k8sconformance                                        100m (0%)     0 (0%)      100Mi (0%)       0 (0%)         114m\n  kube-system                 kindnet-rzd2z                                              100m (0%)     100m (0%)   50Mi (0%)        50Mi (0%)      114m\n  kube-system                 kube-apiserver-k8sconformance                              250m (2%)     0 (0%)      0 (0%)           0 (0%)         114m\n  kube-system                 kube-controller-manager-k8sconformance                     200m (1%)     0 (0%)      0 (0%)           0 (0%)         114m\n  kube-system                 kube-proxy-gpz28                                           0 (0%)        0 (0%)      0 (0%)           0 (0%)         114m\n  kube-system                 kube-scheduler-k8sconformance                              100m (0%)     0 (0%)      0 (0%)           0 (0%)         114m\n  kube-system                 storage-provisioner                                        0 (0%)        0 (0%)      0 (0%)           0 (0%)         114m\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-8cb29c0a4b934094-xqm4q    0 (0%)        0 (0%)      0 (0%)           0 (0%)         111m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource           Requests    Limits\n  --------           --------    ------\n  cpu                850m (7%)   100m (0%)\n  memory             220Mi (0%)  220Mi (0%)\n  ephemeral-storage  0 (0%)      0 (0%)\n  hugepages-1Gi      0 (0%)      0 (0%)\n  hugepages-2Mi      0 (0%)      0 (0%)\nEvents:              <none>\n"
  Jun  5 14:42:39.612: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-503840208 --namespace=kubectl-5592 describe namespace kubectl-5592'
  Jun  5 14:42:39.656: INFO: stderr: ""
  Jun  5 14:42:39.656: INFO: stdout: "Name:         kubectl-5592\nLabels:       e2e-framework=kubectl\n              e2e-run=77813851-ef8b-4400-b533-03e779053b73\n              kubernetes.io/metadata.name=kubectl-5592\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  Jun  5 14:42:39.656: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5592" for this suite. @ 06/05/24 14:42:39.657
• [2.410 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:447
  STEP: Creating a kubernetes client @ 06/05/24 14:42:39.663
  Jun  5 14:42:39.663: INFO: >>> kubeConfig: /tmp/kubeconfig-503840208
  STEP: Building a namespace api object, basename sched-pred @ 06/05/24 14:42:39.664
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/05/24 14:42:39.671
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/05/24 14:42:39.673
  Jun  5 14:42:39.674: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Jun  5 14:42:39.678: INFO: Waiting for terminating namespaces to be deleted...
  Jun  5 14:42:39.679: INFO: 
  Logging pods the apiserver thinks is on node k8sconformance before test
  Jun  5 14:42:39.682: INFO: coredns-76f75df574-xgft9 from kube-system started at 2024-06-05 12:48:31 +0000 UTC (1 container statuses recorded)
  Jun  5 14:42:39.682: INFO: 	Container coredns ready: true, restart count 1
  Jun  5 14:42:39.682: INFO: etcd-k8sconformance from kube-system started at 2024-06-05 12:48:19 +0000 UTC (1 container statuses recorded)
  Jun  5 14:42:39.682: INFO: 	Container etcd ready: true, restart count 0
  Jun  5 14:42:39.682: INFO: kindnet-rzd2z from kube-system started at 2024-06-05 12:48:30 +0000 UTC (1 container statuses recorded)
  Jun  5 14:42:39.682: INFO: 	Container kindnet-cni ready: true, restart count 0
  Jun  5 14:42:39.682: INFO: kube-apiserver-k8sconformance from kube-system started at 2024-06-05 12:48:19 +0000 UTC (1 container statuses recorded)
  Jun  5 14:42:39.682: INFO: 	Container kube-apiserver ready: true, restart count 0
  Jun  5 14:42:39.682: INFO: kube-controller-manager-k8sconformance from kube-system started at 2024-06-05 12:48:19 +0000 UTC (1 container statuses recorded)
  Jun  5 14:42:39.682: INFO: 	Container kube-controller-manager ready: true, restart count 0
  Jun  5 14:42:39.682: INFO: kube-proxy-gpz28 from kube-system started at 2024-06-05 12:48:30 +0000 UTC (1 container statuses recorded)
  Jun  5 14:42:39.682: INFO: 	Container kube-proxy ready: true, restart count 0
  Jun  5 14:42:39.682: INFO: kube-scheduler-k8sconformance from kube-system started at 2024-06-05 12:48:19 +0000 UTC (1 container statuses recorded)
  Jun  5 14:42:39.682: INFO: 	Container kube-scheduler ready: true, restart count 0
  Jun  5 14:42:39.682: INFO: storage-provisioner from kube-system started at 2024-06-05 12:48:32 +0000 UTC (1 container statuses recorded)
  Jun  5 14:42:39.682: INFO: 	Container storage-provisioner ready: true, restart count 1
  Jun  5 14:42:39.682: INFO: sonobuoy-systemd-logs-daemon-set-8cb29c0a4b934094-xqm4q from sonobuoy started at 2024-06-05 12:50:55 +0000 UTC (2 container statuses recorded)
  Jun  5 14:42:39.682: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun  5 14:42:39.682: INFO: 	Container systemd-logs ready: true, restart count 0
  Jun  5 14:42:39.682: INFO: 
  Logging pods the apiserver thinks is on node k8sconformance-m02 before test
  Jun  5 14:42:39.685: INFO: pod-0 from disruption-366 started at 2024-06-05 14:42:35 +0000 UTC (1 container statuses recorded)
  Jun  5 14:42:39.685: INFO: 	Container donothing ready: true, restart count 0
  Jun  5 14:42:39.685: INFO: pod-1 from disruption-366 started at 2024-06-05 14:42:35 +0000 UTC (1 container statuses recorded)
  Jun  5 14:42:39.685: INFO: 	Container donothing ready: true, restart count 0
  Jun  5 14:42:39.685: INFO: pod-2 from disruption-366 started at 2024-06-05 14:42:35 +0000 UTC (1 container statuses recorded)
  Jun  5 14:42:39.685: INFO: 	Container donothing ready: true, restart count 0
  Jun  5 14:42:39.685: INFO: kindnet-ln8np from kube-system started at 2024-06-05 13:17:41 +0000 UTC (1 container statuses recorded)
  Jun  5 14:42:39.685: INFO: 	Container kindnet-cni ready: true, restart count 0
  Jun  5 14:42:39.685: INFO: kube-proxy-5kd5n from kube-system started at 2024-06-05 12:48:59 +0000 UTC (1 container statuses recorded)
  Jun  5 14:42:39.685: INFO: 	Container kube-proxy ready: true, restart count 0
  Jun  5 14:42:39.685: INFO: agnhost-primary-bx6x9 from kubectl-5592 started at 2024-06-05 14:42:37 +0000 UTC (1 container statuses recorded)
  Jun  5 14:42:39.685: INFO: 	Container agnhost-primary ready: true, restart count 0
  Jun  5 14:42:39.685: INFO: sonobuoy from sonobuoy started at 2024-06-05 12:50:51 +0000 UTC (1 container statuses recorded)
  Jun  5 14:42:39.685: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Jun  5 14:42:39.685: INFO: sonobuoy-e2e-job-faabc61b98714bf2 from sonobuoy started at 2024-06-05 12:50:55 +0000 UTC (2 container statuses recorded)
  Jun  5 14:42:39.685: INFO: 	Container e2e ready: true, restart count 0
  Jun  5 14:42:39.685: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun  5 14:42:39.685: INFO: sonobuoy-systemd-logs-daemon-set-8cb29c0a4b934094-jbbcp from sonobuoy started at 2024-06-05 12:50:55 +0000 UTC (2 container statuses recorded)
  Jun  5 14:42:39.685: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Jun  5 14:42:39.685: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 06/05/24 14:42:39.685
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.17d622ca31781651], Reason = [FailedScheduling], Message = [0/2 nodes are available: 2 node(s) didn't match Pod's node affinity/selector. preemption: 0/2 nodes are available: 2 Preemption is not helpful for scheduling.] @ 06/05/24 14:42:39.701
  E0605 14:42:40.025661      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  Jun  5 14:42:40.702: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-9890" for this suite. @ 06/05/24 14:42:40.706
• [1.049 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[SynchronizedAfterSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:88
  Jun  5 14:42:40.714: INFO: Running AfterSuite actions on node 1
  Jun  5 14:42:40.714: INFO: Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
k8s.io/kubernetes/test/e2e/e2e_test.go:161
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
k8s.io/kubernetes/test/e2e/framework/test_context.go:621
[ReportAfterSuite] PASSED [0.029 seconds]
------------------------------

Ran 388 of 7408 Specs in 6663.908 seconds
SUCCESS! -- 388 Passed | 0 Failed | 0 Pending | 7020 Skipped
PASS

Ginkgo ran 1 suite in 1h51m4.401368092s
Test Suite Passed
