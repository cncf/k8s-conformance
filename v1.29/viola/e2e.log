  I0913 12:12:22.271980      23 e2e.go:117] Starting e2e run "66130911-57fd-4a55-8165-526358ee3177" on Ginkgo node 1
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1726229541 - will randomize all specs

Will run 388 of 7408 specs
------------------------------
[ReportBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e_test.go:157
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:77
  Sep 13 12:12:22.455: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  Sep 13 12:12:22.456: INFO: Waiting up to 30m0s for all (but 0) nodes to be schedulable
  Sep 13 12:12:22.496: INFO: Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  Sep 13 12:12:22.504: INFO: 5 / 5 pods ready in namespace 'kube-system' in daemonset 'cilium' (0 seconds elapsed)
  Sep 13 12:12:22.504: INFO: 5 / 5 pods ready in namespace 'kube-system' in daemonset 'kube-proxy' (0 seconds elapsed)
  Sep 13 12:12:22.504: INFO: e2e test version: v1.29.7
  Sep 13 12:12:22.505: INFO: kube-apiserver version: v1.29.7
  Sep 13 12:12:22.505: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  Sep 13 12:12:22.509: INFO: Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [0.054 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] IngressClass API should support creating IngressClass API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingressclass.go:268
  STEP: Creating a kubernetes client @ 09/13/24 12:12:22.658
  Sep 13 12:12:22.658: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename ingressclass @ 09/13/24 12:12:22.659
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:12:22.681
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:12:22.684
  STEP: getting /apis @ 09/13/24 12:12:22.725
  STEP: getting /apis/networking.k8s.io @ 09/13/24 12:12:22.731
  STEP: getting /apis/networking.k8s.iov1 @ 09/13/24 12:12:22.733
  STEP: creating @ 09/13/24 12:12:22.734
  STEP: getting @ 09/13/24 12:12:22.752
  STEP: listing @ 09/13/24 12:12:22.754
  STEP: watching @ 09/13/24 12:12:22.756
  Sep 13 12:12:22.756: INFO: starting watch
  STEP: patching @ 09/13/24 12:12:22.757
  STEP: updating @ 09/13/24 12:12:22.765
  Sep 13 12:12:22.770: INFO: waiting for watch events with expected annotations
  Sep 13 12:12:22.770: INFO: saw patched and updated annotations
  STEP: deleting @ 09/13/24 12:12:22.77
  STEP: deleting a collection @ 09/13/24 12:12:22.779
  Sep 13 12:12:22.790: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-1521" for this suite. @ 09/13/24 12:12:22.794
• [0.144 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:106
  STEP: Creating a kubernetes client @ 09/13/24 12:12:22.803
  Sep 13 12:12:22.803: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename runtimeclass @ 09/13/24 12:12:22.803
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:12:22.819
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:12:22.821
  Sep 13 12:12:24.850: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-4539" for this suite. @ 09/13/24 12:12:24.855
• [2.056 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:144
  STEP: Creating a kubernetes client @ 09/13/24 12:12:24.86
  Sep 13 12:12:24.860: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename replicaset @ 09/13/24 12:12:24.861
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:12:24.875
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:12:24.877
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 09/13/24 12:12:24.879
  Sep 13 12:12:24.893: INFO: Pod name sample-pod: Found 0 pods out of 1
  Sep 13 12:12:29.896: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/13/24 12:12:29.896
  STEP: getting scale subresource @ 09/13/24 12:12:29.896
  STEP: updating a scale subresource @ 09/13/24 12:12:29.897
  STEP: verifying the replicaset Spec.Replicas was modified @ 09/13/24 12:12:29.904
  STEP: Patch a scale subresource @ 09/13/24 12:12:29.906
  Sep 13 12:12:29.927: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-7883" for this suite. @ 09/13/24 12:12:29.931
• [5.088 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:76
  STEP: Creating a kubernetes client @ 09/13/24 12:12:29.948
  Sep 13 12:12:29.948: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename var-expansion @ 09/13/24 12:12:29.949
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:12:29.969
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:12:29.971
  STEP: Creating a pod to test substitution in container's command @ 09/13/24 12:12:29.974
  STEP: Saw pod success @ 09/13/24 12:12:33.992
  Sep 13 12:12:33.994: INFO: Trying to get logs from node cncf-3 pod var-expansion-154560c5-203f-48ac-a5db-e1746fb3d505 container dapi-container: <nil>
  STEP: delete the pod @ 09/13/24 12:12:34.006
  Sep 13 12:12:34.024: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-7423" for this suite. @ 09/13/24 12:12:34.03
• [4.105 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 09/13/24 12:12:34.054
  Sep 13 12:12:34.054: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename watch @ 09/13/24 12:12:34.055
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:12:34.079
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:12:34.082
  STEP: creating a watch on configmaps @ 09/13/24 12:12:34.085
  STEP: creating a new configmap @ 09/13/24 12:12:34.086
  STEP: modifying the configmap once @ 09/13/24 12:12:34.09
  STEP: closing the watch once it receives two notifications @ 09/13/24 12:12:34.098
  Sep 13 12:12:34.098: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-1857  91532f3d-1536-475e-a166-804872b883cf 697836 0 2024-09-13 12:12:34 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-09-13 12:12:34 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep 13 12:12:34.098: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-1857  91532f3d-1536-475e-a166-804872b883cf 697837 0 2024-09-13 12:12:34 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-09-13 12:12:34 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 09/13/24 12:12:34.098
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 09/13/24 12:12:34.108
  STEP: deleting the configmap @ 09/13/24 12:12:34.109
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 09/13/24 12:12:34.114
  Sep 13 12:12:34.114: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-1857  91532f3d-1536-475e-a166-804872b883cf 697838 0 2024-09-13 12:12:34 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-09-13 12:12:34 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep 13 12:12:34.114: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-1857  91532f3d-1536-475e-a166-804872b883cf 697839 0 2024-09-13 12:12:34 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-09-13 12:12:34 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep 13 12:12:34.115: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-1857" for this suite. @ 09/13/24 12:12:34.118
• [0.077 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 09/13/24 12:12:34.131
  Sep 13 12:12:34.131: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename deployment @ 09/13/24 12:12:34.132
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:12:34.145
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:12:34.146
  Sep 13 12:12:34.161: INFO: Creating deployment "test-recreate-deployment"
  Sep 13 12:12:34.165: INFO: Waiting deployment "test-recreate-deployment" to be updated to revision 1
  Sep 13 12:12:34.168: INFO: new replicaset for deployment "test-recreate-deployment" is yet to be created
  Sep 13 12:12:36.175: INFO: Waiting deployment "test-recreate-deployment" to complete
  Sep 13 12:12:36.177: INFO: Triggering a new rollout for deployment "test-recreate-deployment"
  Sep 13 12:12:36.185: INFO: Updating deployment test-recreate-deployment
  Sep 13 12:12:36.185: INFO: Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  Sep 13 12:12:36.337: INFO: Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-809",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8d307f15-511f-4efc-b829-159e4a429d74",
      ResourceVersion: (string) (len=6) "697911",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861826354,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861826356,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861826356,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861826356,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861826356,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861826356,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861826354,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=63) "ReplicaSet \"test-recreate-deployment-76fb77d45\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Sep 13 12:12:36.342: INFO: New ReplicaSet "test-recreate-deployment-76fb77d45" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-76fb77d45",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-809",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "525f0944-cda8-46ff-a79b-0f085882f490",
      ResourceVersion: (string) (len=6) "697909",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861826356,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "8d307f15-511f-4efc-b829-159e4a429d74",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861826356,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 38 64 33 30 37 66  31 35 2d 35 31 31 66 2d  |\"8d307f15-511f-|
              00000120  34 65 66 63 2d 62 38 32  39 2d 31 35 39 65 34 61  |4efc-b829-159e4a|
              00000130  34 32 39 64 37 34 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |429d74\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861826356,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Sep 13 12:12:36.342: INFO: All old ReplicaSets of Deployment "test-recreate-deployment":
  Sep 13 12:12:36.342: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-5cf87b5b86",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-809",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a9bf0ad8-25b2-49d7-8236-7072fe28d7e4",
      ResourceVersion: (string) (len=6) "697900",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861826354,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5cf87b5b86"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "8d307f15-511f-4efc-b829-159e4a429d74",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861826356,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 38 64 33 30 37 66  31 35 2d 35 31 31 66 2d  |\"8d307f15-511f-|
              00000120  34 65 66 63 2d 62 38 32  39 2d 31 35 39 65 34 61  |4efc-b829-159e4a|
              00000130  34 32 39 64 37 34 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |429d74\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861826356,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5cf87b5b86"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5cf87b5b86"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Sep 13 12:12:36.345: INFO: Pod "test-recreate-deployment-76fb77d45-7cr4b" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-recreate-deployment-76fb77d45-7cr4b",
      GenerateName: (string) (len=35) "test-recreate-deployment-76fb77d45-",
      Namespace: (string) (len=14) "deployment-809",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e7b8fb42-d22a-4790-b385-b96b4d6ae5a5",
      ResourceVersion: (string) (len=6) "697912",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861826356,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-recreate-deployment-76fb77d45",
          UID: (types.UID) (len=36) "525f0944-cda8-46ff-a79b-0f085882f490",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861826356,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 32  35 66 30 39 34 34 2d 63  |d\":\"525f0944-c|
              00000090  64 61 38 2d 34 36 66 66  2d 61 37 39 62 2d 30 66  |da8-46ff-a79b-0f|
              000000a0  30 38 35 38 38 32 66 34  39 30 5c 22 7d 22 3a 7b  |085882f490\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861826356,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-tz2wz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-tz2wz",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "cncf-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861826356,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861826356,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861826356,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861826356,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861826356,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.10.50.243",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.10.50.243"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861826356,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 13 12:12:36.349: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-809" for this suite. @ 09/13/24 12:12:36.353
• [2.228 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should support continue listing from the last key if the original version has been compacted away, though the list is inconsistent [Slow] [Conformance] [sig-api-machinery, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:144
  STEP: Creating a kubernetes client @ 09/13/24 12:12:36.36
  Sep 13 12:12:36.360: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename chunking @ 09/13/24 12:12:36.36
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:12:36.388
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:12:36.391
  STEP: creating a large number of resources @ 09/13/24 12:12:36.393
  STEP: retrieving the first page @ 09/13/24 12:12:54.068
  Sep 13 12:12:54.116: INFO: Retrieved 40/40 results with rv 698430 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Njk4NDMwLCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ
  STEP: retrieving the second page until the token expires @ 09/13/24 12:12:54.116
  Sep 13 12:13:14.123: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Njk4NDMwLCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  Sep 13 12:13:34.121: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Njk4NDMwLCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  Sep 13 12:13:54.120: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Njk4NDMwLCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  Sep 13 12:14:14.122: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Njk4NDMwLCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  Sep 13 12:14:34.122: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Njk4NDMwLCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  Sep 13 12:14:54.121: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Njk4NDMwLCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  Sep 13 12:15:14.122: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Njk4NDMwLCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  Sep 13 12:15:34.136: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Njk4NDMwLCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  Sep 13 12:15:54.122: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Njk4NDMwLCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  Sep 13 12:16:14.122: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Njk4NDMwLCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  Sep 13 12:16:34.344: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Njk4NDMwLCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  Sep 13 12:16:54.123: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Njk4NDMwLCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  Sep 13 12:17:14.122: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Njk4NDMwLCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  Sep 13 12:17:34.124: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Njk4NDMwLCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  Sep 13 12:17:54.121: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Njk4NDMwLCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  Sep 13 12:18:14.127: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Njk4NDMwLCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  Sep 13 12:18:34.122: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Njk4NDMwLCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  Sep 13 12:18:54.122: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Njk4NDMwLCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  Sep 13 12:19:14.123: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Njk4NDMwLCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  Sep 13 12:19:34.124: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Njk4NDMwLCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  Sep 13 12:19:54.122: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Njk4NDMwLCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  Sep 13 12:20:14.122: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Njk4NDMwLCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  Sep 13 12:20:34.121: INFO: Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Njk4NDMwLCJzdGFydCI6InRlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  Sep 13 12:20:54.120: INFO: got error The provided continue parameter is too old to display a consistent list result. You can start a new list without the continue parameter, or use the continue token in this response to retrieve the remainder of the results. Continuing with the provided token results in an inconsistent list - objects that were created, modified, or deleted between the time the first chunk was returned and now may show up in the list.
  Sep 13 12:20:54.120: INFO: Retrieved inconsistent continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6LTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page again with the token received with the error message @ 09/13/24 12:20:54.12
  STEP: retrieving all remaining pages @ 09/13/24 12:20:54.124
  Sep 13 12:20:54.127: INFO: Retrieved 40/40 results with rv 700645 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzAwNjQ1LCJzdGFydCI6InRlbXBsYXRlLTAxMTlcdTAwMDAifQ
  Sep 13 12:20:54.130: INFO: Retrieved 40/40 results with rv 700645 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzAwNjQ1LCJzdGFydCI6InRlbXBsYXRlLTAxNTlcdTAwMDAifQ
  Sep 13 12:20:54.133: INFO: Retrieved 40/40 results with rv 700645 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzAwNjQ1LCJzdGFydCI6InRlbXBsYXRlLTAxOTlcdTAwMDAifQ
  Sep 13 12:20:54.136: INFO: Retrieved 40/40 results with rv 700645 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzAwNjQ1LCJzdGFydCI6InRlbXBsYXRlLTAyMzlcdTAwMDAifQ
  Sep 13 12:20:54.139: INFO: Retrieved 40/40 results with rv 700645 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzAwNjQ1LCJzdGFydCI6InRlbXBsYXRlLTAyNzlcdTAwMDAifQ
  Sep 13 12:20:54.142: INFO: Retrieved 40/40 results with rv 700645 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzAwNjQ1LCJzdGFydCI6InRlbXBsYXRlLTAzMTlcdTAwMDAifQ
  Sep 13 12:20:54.146: INFO: Retrieved 40/40 results with rv 700645 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzAwNjQ1LCJzdGFydCI6InRlbXBsYXRlLTAzNTlcdTAwMDAifQ
  Sep 13 12:20:54.149: INFO: Retrieved 40/40 results with rv 700645 and continue 
  Sep 13 12:20:54.149: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-4359" for this suite. @ 09/13/24 12:20:54.153
• [497.801 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:41
  STEP: Creating a kubernetes client @ 09/13/24 12:20:54.162
  Sep 13 12:20:54.162: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename containers @ 09/13/24 12:20:54.164
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:20:54.205
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:20:54.208
  Sep 13 12:20:56.233: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-6972" for this suite. @ 09/13/24 12:20:56.237
• [2.084 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:70
  STEP: Creating a kubernetes client @ 09/13/24 12:20:56.247
  Sep 13 12:20:56.247: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename projected @ 09/13/24 12:20:56.247
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:20:56.272
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:20:56.274
  STEP: Creating a pod to test downward API volume plugin @ 09/13/24 12:20:56.284
  STEP: Saw pod success @ 09/13/24 12:21:00.304
  Sep 13 12:21:00.308: INFO: Trying to get logs from node cncf-4 pod downwardapi-volume-b48c59f4-1707-42bc-bfb9-905f63c8016e container client-container: <nil>
  STEP: delete the pod @ 09/13/24 12:21:00.314
  Sep 13 12:21:00.336: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1510" for this suite. @ 09/13/24 12:21:00.349
• [4.113 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 09/13/24 12:21:00.361
  Sep 13 12:21:00.361: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename daemonsets @ 09/13/24 12:21:00.363
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:21:00.376
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:21:00.379
  STEP: Creating a simple DaemonSet "daemon-set" @ 09/13/24 12:21:00.416
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/13/24 12:21:00.428
  Sep 13 12:21:00.434: INFO: DaemonSet pods can't tolerate node cncf-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep 13 12:21:00.437: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 13 12:21:00.437: INFO: Node cncf-2 is running 0 daemon pod, expected 1
  Sep 13 12:21:01.437: INFO: DaemonSet pods can't tolerate node cncf-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep 13 12:21:01.440: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Sep 13 12:21:01.440: INFO: Node cncf-2 is running 0 daemon pod, expected 1
  Sep 13 12:21:02.433: INFO: DaemonSet pods can't tolerate node cncf-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep 13 12:21:02.436: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 4
  Sep 13 12:21:02.436: INFO: Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 09/13/24 12:21:02.438
  Sep 13 12:21:02.457: INFO: DaemonSet pods can't tolerate node cncf-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep 13 12:21:02.464: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Sep 13 12:21:02.464: INFO: Node cncf-2 is running 0 daemon pod, expected 1
  Sep 13 12:21:03.457: INFO: DaemonSet pods can't tolerate node cncf-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep 13 12:21:03.463: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Sep 13 12:21:03.463: INFO: Node cncf-2 is running 0 daemon pod, expected 1
  Sep 13 12:21:04.458: INFO: DaemonSet pods can't tolerate node cncf-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep 13 12:21:04.467: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 4
  Sep 13 12:21:04.467: INFO: Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 09/13/24 12:21:04.468
  STEP: Deleting DaemonSet "daemon-set" @ 09/13/24 12:21:04.473
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-4751, will wait for the garbage collector to delete the pods @ 09/13/24 12:21:04.473
  Sep 13 12:21:04.555: INFO: Deleting DaemonSet.extensions daemon-set took: 28.296144ms
  Sep 13 12:21:04.855: INFO: Terminating DaemonSet.extensions daemon-set pods took: 300.27289ms
  Sep 13 12:21:07.459: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 13 12:21:07.459: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Sep 13 12:21:07.464: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"701271"},"items":null}

  Sep 13 12:21:07.466: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"701271"},"items":null}

  Sep 13 12:21:07.478: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-4751" for this suite. @ 09/13/24 12:21:07.482
• [7.137 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:286
  STEP: Creating a kubernetes client @ 09/13/24 12:21:07.501
  Sep 13 12:21:07.501: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename proxy @ 09/13/24 12:21:07.503
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:21:07.535
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:21:07.538
  Sep 13 12:21:07.540: INFO: Creating pod...
  Sep 13 12:21:09.554: INFO: Creating service...
  Sep 13 12:21:09.563: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-1087/pods/agnhost/proxy/some/path/with/DELETE
  Sep 13 12:21:09.568: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Sep 13 12:21:09.568: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-1087/pods/agnhost/proxy/some/path/with/GET
  Sep 13 12:21:09.574: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  Sep 13 12:21:09.574: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-1087/pods/agnhost/proxy/some/path/with/HEAD
  Sep 13 12:21:09.579: INFO: http.Client request:HEAD | StatusCode:200
  Sep 13 12:21:09.579: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-1087/pods/agnhost/proxy/some/path/with/OPTIONS
  Sep 13 12:21:09.589: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Sep 13 12:21:09.589: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-1087/pods/agnhost/proxy/some/path/with/PATCH
  Sep 13 12:21:09.591: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Sep 13 12:21:09.592: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-1087/pods/agnhost/proxy/some/path/with/POST
  Sep 13 12:21:09.595: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Sep 13 12:21:09.596: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-1087/pods/agnhost/proxy/some/path/with/PUT
  Sep 13 12:21:09.598: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Sep 13 12:21:09.599: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-1087/services/test-service/proxy/some/path/with/DELETE
  Sep 13 12:21:09.602: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Sep 13 12:21:09.602: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-1087/services/test-service/proxy/some/path/with/GET
  Sep 13 12:21:09.605: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  Sep 13 12:21:09.605: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-1087/services/test-service/proxy/some/path/with/HEAD
  Sep 13 12:21:09.610: INFO: http.Client request:HEAD | StatusCode:200
  Sep 13 12:21:09.610: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-1087/services/test-service/proxy/some/path/with/OPTIONS
  Sep 13 12:21:09.614: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Sep 13 12:21:09.615: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-1087/services/test-service/proxy/some/path/with/PATCH
  Sep 13 12:21:09.619: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Sep 13 12:21:09.619: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-1087/services/test-service/proxy/some/path/with/POST
  Sep 13 12:21:09.623: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Sep 13 12:21:09.623: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-1087/services/test-service/proxy/some/path/with/PUT
  Sep 13 12:21:09.627: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Sep 13 12:21:09.628: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-1087" for this suite. @ 09/13/24 12:21:09.632
• [2.138 seconds]
------------------------------
SS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:812
  STEP: Creating a kubernetes client @ 09/13/24 12:21:09.64
  Sep 13 12:21:09.640: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename sched-preemption @ 09/13/24 12:21:09.642
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:21:09.658
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:21:09.661
  Sep 13 12:21:09.680: INFO: Waiting up to 1m0s for all nodes to be ready
  Sep 13 12:22:09.685: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 09/13/24 12:22:09.688
  Sep 13 12:22:09.688: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename sched-preemption-path @ 09/13/24 12:22:09.69
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:22:09.707
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:22:09.71
  Sep 13 12:22:09.730: INFO: PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  Sep 13 12:22:09.736: INFO: PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  Sep 13 12:22:09.816: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-4697" for this suite. @ 09/13/24 12:22:09.82
  Sep 13 12:22:09.825: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-3792" for this suite. @ 09/13/24 12:22:09.828
• [60.194 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 09/13/24 12:22:09.834
  Sep 13 12:22:09.834: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename deployment @ 09/13/24 12:22:09.835
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:22:09.864
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:22:09.867
  Sep 13 12:22:09.869: INFO: Creating replica set "test-rolling-update-controller" (going to be adopted)
  Sep 13 12:22:09.876: INFO: Pod name sample-pod: Found 0 pods out of 1
  Sep 13 12:22:14.880: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/13/24 12:22:14.881
  Sep 13 12:22:14.881: INFO: Creating deployment "test-rolling-update-deployment"
  Sep 13 12:22:14.894: INFO: Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  Sep 13 12:22:14.899: INFO: new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  Sep 13 12:22:16.906: INFO: Ensuring status for deployment "test-rolling-update-deployment" is the expected
  Sep 13 12:22:16.907: INFO: Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  Sep 13 12:22:16.913: INFO: Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9433",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ac28103a-f9a8-4de9-8b20-7dbb146074db",
      ResourceVersion: (string) (len=6) "701813",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861826934,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861826934,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861826936,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861826934,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861826934,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861826936,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861826934,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=83) "ReplicaSet \"test-rolling-update-deployment-7ddb77f68b\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Sep 13 12:22:16.917: INFO: New ReplicaSet "test-rolling-update-deployment-7ddb77f68b" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rolling-update-deployment-7ddb77f68b",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9433",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d371b12b-38cb-4cba-ae2e-2bffee1e089c",
      ResourceVersion: (string) (len=6) "701802",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861826934,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7ddb77f68b"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "ac28103a-f9a8-4de9-8b20-7dbb146074db",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861826934,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 61 63 32 38 31 30  33 61 2d 66 39 61 38 2d  |\"ac28103a-f9a8-|
              00000120  34 64 65 39 2d 38 62 32  30 2d 37 64 62 62 31 34  |4de9-8b20-7dbb14|
              00000130  36 30 37 34 64 62 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |6074db\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861826936,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "7ddb77f68b"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "7ddb77f68b",
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Sep 13 12:22:16.918: INFO: All old ReplicaSets of Deployment "test-rolling-update-deployment":
  Sep 13 12:22:16.919: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9433",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5f78993d-4ac7-40fb-947a-1e52999c77e0",
      ResourceVersion: (string) (len=6) "701812",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861826929,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "ac28103a-f9a8-4de9-8b20-7dbb146074db",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861826929,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861826936,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 61 63 32 38 31 30 33  |"uid\":\"ac28103|
              000000b0  61 2d 66 39 61 38 2d 34  64 65 39 2d 38 62 32 30  |a-f9a8-4de9-8b20|
              000000c0  2d 37 64 62 62 31 34 36  30 37 34 64 62 5c 22 7d  |-7dbb146074db\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861826936,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Sep 13 12:22:16.923: INFO: Pod "test-rolling-update-deployment-7ddb77f68b-cf9p4" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=47) "test-rolling-update-deployment-7ddb77f68b-cf9p4",
      GenerateName: (string) (len=42) "test-rolling-update-deployment-7ddb77f68b-",
      Namespace: (string) (len=15) "deployment-9433",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0d2a6c82-b963-41d0-87c1-1d56e9dedaac",
      ResourceVersion: (string) (len=6) "701801",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861826934,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7ddb77f68b"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=41) "test-rolling-update-deployment-7ddb77f68b",
          UID: (types.UID) (len=36) "d371b12b-38cb-4cba-ae2e-2bffee1e089c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861826934,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 33  37 31 62 31 32 62 2d 33  |d\":\"d371b12b-3|
              00000090  38 63 62 2d 34 63 62 61  2d 61 65 32 65 2d 32 62  |8cb-4cba-ae2e-2b|
              000000a0  66 66 65 65 31 65 30 38  39 63 5c 22 7d 22 3a 7b  |ffee1e089c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861826936,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 30 2e 31 2e 31 31 36  5c 22 7d 22 3a 7b 22 2e  |.0.1.116\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zk2tp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zk2tp",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "cncf-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861826936,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861826934,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861826936,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861826936,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861826934,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.10.50.243",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.10.50.243"
        }
      },
      PodIP: (string) (len=10) "10.0.1.116",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.0.1.116"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861826934,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63861826935,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:cc249acbd34692826b2b335335615e060fdb3c0bca4954507aa3a1d1194de253",
          ContainerID: (string) (len=77) "containerd://64442eae9d923b7cb328bed4bcd18ceac15184c865693c8c3fb6c30c2693b0d2",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 13 12:22:16.924: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-9433" for this suite. @ 09/13/24 12:22:16.928
• [7.103 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Pods should patch a pod status [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:1084
  STEP: Creating a kubernetes client @ 09/13/24 12:22:16.937
  Sep 13 12:22:16.937: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename pods @ 09/13/24 12:22:16.937
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:22:16.949
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:22:16.951
  STEP: Create a pod @ 09/13/24 12:22:16.955
  STEP: patching /status @ 09/13/24 12:22:18.97
  Sep 13 12:22:18.979: INFO: Status Message: "Patched by e2e test" and Reason: "E2E"
  Sep 13 12:22:18.979: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9123" for this suite. @ 09/13/24 12:22:18.983
• [2.060 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:274
  STEP: Creating a kubernetes client @ 09/13/24 12:22:18.997
  Sep 13 12:22:18.997: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename namespaces @ 09/13/24 12:22:18.999
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:22:19.025
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:22:19.027
  STEP: creating a Namespace @ 09/13/24 12:22:19.03
  STEP: patching the Namespace @ 09/13/24 12:22:19.042
  STEP: get the Namespace and ensuring it has the label @ 09/13/24 12:22:19.054
  Sep 13 12:22:19.056: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-4333" for this suite. @ 09/13/24 12:22:19.06
  STEP: Destroying namespace "nspatchtest-69709089-a63f-477b-9694-c1faadbdeae1-61" for this suite. @ 09/13/24 12:22:19.072
• [0.083 seconds]
------------------------------
S
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:125
  STEP: Creating a kubernetes client @ 09/13/24 12:22:19.082
  Sep 13 12:22:19.082: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename configmap @ 09/13/24 12:22:19.084
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:22:19.108
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:22:19.111
  STEP: Creating configMap with name configmap-test-upd-66707347-fb43-4958-b1fb-9bf1fe174381 @ 09/13/24 12:22:19.117
  STEP: Creating the pod @ 09/13/24 12:22:19.124
  STEP: Updating configmap configmap-test-upd-66707347-fb43-4958-b1fb-9bf1fe174381 @ 09/13/24 12:22:21.166
  STEP: waiting to observe update in volume @ 09/13/24 12:22:21.171
  Sep 13 12:23:43.457: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4775" for this suite. @ 09/13/24 12:23:43.462
• [84.386 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance] [sig-storage, Serial, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:188
  STEP: Creating a kubernetes client @ 09/13/24 12:23:43.468
  Sep 13 12:23:43.468: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename emptydir-wrapper @ 09/13/24 12:23:43.47
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:23:43.48
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:23:43.482
  STEP: Creating 50 configmaps @ 09/13/24 12:23:43.485
  STEP: Creating RC which spawns configmap-volume pods @ 09/13/24 12:23:43.733
  Sep 13 12:23:43.824: INFO: Pod name wrapped-volume-race-d06247d4-e41c-4e03-8501-a33af7693fc7: Found 3 pods out of 5
  Sep 13 12:23:48.832: INFO: Pod name wrapped-volume-race-d06247d4-e41c-4e03-8501-a33af7693fc7: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 09/13/24 12:23:48.832
  STEP: Creating RC which spawns configmap-volume pods @ 09/13/24 12:23:48.848
  Sep 13 12:23:48.870: INFO: Pod name wrapped-volume-race-778260a9-0bce-4265-953e-17f3fbdaf524: Found 0 pods out of 5
  Sep 13 12:23:53.877: INFO: Pod name wrapped-volume-race-778260a9-0bce-4265-953e-17f3fbdaf524: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 09/13/24 12:23:53.877
  STEP: Creating RC which spawns configmap-volume pods @ 09/13/24 12:23:53.892
  Sep 13 12:23:53.912: INFO: Pod name wrapped-volume-race-09efe6d4-3c11-4e50-983e-f87fd2c4fc76: Found 0 pods out of 5
  Sep 13 12:23:58.922: INFO: Pod name wrapped-volume-race-09efe6d4-3c11-4e50-983e-f87fd2c4fc76: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 09/13/24 12:23:58.923
  STEP: deleting ReplicationController wrapped-volume-race-09efe6d4-3c11-4e50-983e-f87fd2c4fc76 in namespace emptydir-wrapper-264, will wait for the garbage collector to delete the pods @ 09/13/24 12:23:58.936
  Sep 13 12:23:58.996: INFO: Deleting ReplicationController wrapped-volume-race-09efe6d4-3c11-4e50-983e-f87fd2c4fc76 took: 7.149973ms
  Sep 13 12:23:59.097: INFO: Terminating ReplicationController wrapped-volume-race-09efe6d4-3c11-4e50-983e-f87fd2c4fc76 pods took: 101.142685ms
  STEP: deleting ReplicationController wrapped-volume-race-778260a9-0bce-4265-953e-17f3fbdaf524 in namespace emptydir-wrapper-264, will wait for the garbage collector to delete the pods @ 09/13/24 12:24:00.399
  Sep 13 12:24:00.461: INFO: Deleting ReplicationController wrapped-volume-race-778260a9-0bce-4265-953e-17f3fbdaf524 took: 8.130213ms
  Sep 13 12:24:00.561: INFO: Terminating ReplicationController wrapped-volume-race-778260a9-0bce-4265-953e-17f3fbdaf524 pods took: 100.404153ms
  STEP: deleting ReplicationController wrapped-volume-race-d06247d4-e41c-4e03-8501-a33af7693fc7 in namespace emptydir-wrapper-264, will wait for the garbage collector to delete the pods @ 09/13/24 12:24:02.363
  Sep 13 12:24:02.428: INFO: Deleting ReplicationController wrapped-volume-race-d06247d4-e41c-4e03-8501-a33af7693fc7 took: 11.186146ms
  Sep 13 12:24:02.529: INFO: Terminating ReplicationController wrapped-volume-race-d06247d4-e41c-4e03-8501-a33af7693fc7 pods took: 101.003428ms
  STEP: Cleaning up the configMaps @ 09/13/24 12:24:04.331
  Sep 13 12:24:04.652: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-264" for this suite. @ 09/13/24 12:24:04.657
• [21.203 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:87
  STEP: Creating a kubernetes client @ 09/13/24 12:24:04.672
  Sep 13 12:24:04.673: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename disruption @ 09/13/24 12:24:04.673
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:24:04.778
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:24:04.781
  STEP: Creating a kubernetes client @ 09/13/24 12:24:04.784
  Sep 13 12:24:04.784: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename disruption-2 @ 09/13/24 12:24:04.785
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:24:04.814
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:24:04.817
  STEP: Waiting for the pdb to be processed @ 09/13/24 12:24:04.858
  STEP: Waiting for the pdb to be processed @ 09/13/24 12:24:06.869
  STEP: Waiting for the pdb to be processed @ 09/13/24 12:24:08.88
  STEP: listing a collection of PDBs across all namespaces @ 09/13/24 12:24:10.885
  STEP: listing a collection of PDBs in namespace disruption-5758 @ 09/13/24 12:24:10.887
  STEP: deleting a collection of PDBs @ 09/13/24 12:24:10.889
  STEP: Waiting for the PDB collection to be deleted @ 09/13/24 12:24:10.906
  Sep 13 12:24:10.908: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-5515" for this suite. @ 09/13/24 12:24:10.912
  Sep 13 12:24:10.916: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-5758" for this suite. @ 09/13/24 12:24:10.919
• [6.252 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:107
  STEP: Creating a kubernetes client @ 09/13/24 12:24:10.925
  Sep 13 12:24:10.925: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename container-probe @ 09/13/24 12:24:10.926
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:24:10.958
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:24:10.961
  Sep 13 12:25:10.974: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-7080" for this suite. @ 09/13/24 12:25:10.978
• [60.059 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2214
  STEP: Creating a kubernetes client @ 09/13/24 12:25:10.987
  Sep 13 12:25:10.988: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename services @ 09/13/24 12:25:10.989
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:25:11.002
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:25:11.006
  STEP: creating service in namespace services-5315 @ 09/13/24 12:25:11.01
  STEP: creating service affinity-nodeport in namespace services-5315 @ 09/13/24 12:25:11.01
  STEP: creating replication controller affinity-nodeport in namespace services-5315 @ 09/13/24 12:25:11.029
  I0913 12:25:11.038699      23 runners.go:197] Created replication controller with name: affinity-nodeport, namespace: services-5315, replica count: 3
  I0913 12:25:14.089737      23 runners.go:197] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Sep 13 12:25:14.102: INFO: Creating new exec pod
  Sep 13 12:25:17.122: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=services-5315 exec execpod-affinity9q5dx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  Sep 13 12:25:17.248: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport 80\nConnection to affinity-nodeport 80 port [tcp/http] succeeded!\n"
  Sep 13 12:25:17.248: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep 13 12:25:17.248: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=services-5315 exec execpod-affinity9q5dx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.15.183 80'
  Sep 13 12:25:17.351: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.15.183 80\nConnection to 10.233.15.183 80 port [tcp/http] succeeded!\n"
  Sep 13 12:25:17.351: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep 13 12:25:17.351: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=services-5315 exec execpod-affinity9q5dx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.10.50.243 31290'
  Sep 13 12:25:17.467: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.10.50.243 31290\nConnection to 172.10.50.243 31290 port [tcp/*] succeeded!\n"
  Sep 13 12:25:17.467: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep 13 12:25:17.467: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=services-5315 exec execpod-affinity9q5dx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.10.50.34 31290'
  Sep 13 12:25:17.572: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.10.50.34 31290\nConnection to 172.10.50.34 31290 port [tcp/*] succeeded!\n"
  Sep 13 12:25:17.572: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep 13 12:25:17.572: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=services-5315 exec execpod-affinity9q5dx -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.10.50.163:31290/ ; done'
  Sep 13 12:25:17.759: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.50.163:31290/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.50.163:31290/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.50.163:31290/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.50.163:31290/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.50.163:31290/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.50.163:31290/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.50.163:31290/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.50.163:31290/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.50.163:31290/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.50.163:31290/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.50.163:31290/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.50.163:31290/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.50.163:31290/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.50.163:31290/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.50.163:31290/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.50.163:31290/\n"
  Sep 13 12:25:17.759: INFO: stdout: "\naffinity-nodeport-fks2f\naffinity-nodeport-fks2f\naffinity-nodeport-fks2f\naffinity-nodeport-fks2f\naffinity-nodeport-fks2f\naffinity-nodeport-fks2f\naffinity-nodeport-fks2f\naffinity-nodeport-fks2f\naffinity-nodeport-fks2f\naffinity-nodeport-fks2f\naffinity-nodeport-fks2f\naffinity-nodeport-fks2f\naffinity-nodeport-fks2f\naffinity-nodeport-fks2f\naffinity-nodeport-fks2f\naffinity-nodeport-fks2f"
  Sep 13 12:25:17.759: INFO: Received response from host: affinity-nodeport-fks2f
  Sep 13 12:25:17.759: INFO: Received response from host: affinity-nodeport-fks2f
  Sep 13 12:25:17.759: INFO: Received response from host: affinity-nodeport-fks2f
  Sep 13 12:25:17.759: INFO: Received response from host: affinity-nodeport-fks2f
  Sep 13 12:25:17.759: INFO: Received response from host: affinity-nodeport-fks2f
  Sep 13 12:25:17.759: INFO: Received response from host: affinity-nodeport-fks2f
  Sep 13 12:25:17.759: INFO: Received response from host: affinity-nodeport-fks2f
  Sep 13 12:25:17.759: INFO: Received response from host: affinity-nodeport-fks2f
  Sep 13 12:25:17.759: INFO: Received response from host: affinity-nodeport-fks2f
  Sep 13 12:25:17.759: INFO: Received response from host: affinity-nodeport-fks2f
  Sep 13 12:25:17.759: INFO: Received response from host: affinity-nodeport-fks2f
  Sep 13 12:25:17.759: INFO: Received response from host: affinity-nodeport-fks2f
  Sep 13 12:25:17.759: INFO: Received response from host: affinity-nodeport-fks2f
  Sep 13 12:25:17.759: INFO: Received response from host: affinity-nodeport-fks2f
  Sep 13 12:25:17.759: INFO: Received response from host: affinity-nodeport-fks2f
  Sep 13 12:25:17.759: INFO: Received response from host: affinity-nodeport-fks2f
  Sep 13 12:25:17.760: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport in namespace services-5315, will wait for the garbage collector to delete the pods @ 09/13/24 12:25:17.796
  Sep 13 12:25:17.878: INFO: Deleting ReplicationController affinity-nodeport took: 7.38924ms
  Sep 13 12:25:17.978: INFO: Terminating ReplicationController affinity-nodeport pods took: 100.163243ms
  Sep 13 12:25:21.117: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5315" for this suite. @ 09/13/24 12:25:21.122
• [10.147 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:344
  STEP: Creating a kubernetes client @ 09/13/24 12:25:21.137
  Sep 13 12:25:21.137: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename kubectl @ 09/13/24 12:25:21.138
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:25:21.165
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:25:21.167
  STEP: creating a replication controller @ 09/13/24 12:25:21.17
  Sep 13 12:25:21.170: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=kubectl-3080 create -f -'
  Sep 13 12:25:21.321: INFO: stderr: ""
  Sep 13 12:25:21.321: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 09/13/24 12:25:21.321
  Sep 13 12:25:21.321: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=kubectl-3080 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Sep 13 12:25:21.388: INFO: stderr: ""
  Sep 13 12:25:21.388: INFO: stdout: "update-demo-nautilus-5ct48 update-demo-nautilus-q4744 "
  Sep 13 12:25:21.388: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=kubectl-3080 get pods update-demo-nautilus-5ct48 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Sep 13 12:25:21.440: INFO: stderr: ""
  Sep 13 12:25:21.440: INFO: stdout: ""
  Sep 13 12:25:21.440: INFO: update-demo-nautilus-5ct48 is created but not running
  Sep 13 12:25:26.443: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=kubectl-3080 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Sep 13 12:25:26.508: INFO: stderr: ""
  Sep 13 12:25:26.508: INFO: stdout: "update-demo-nautilus-5ct48 update-demo-nautilus-q4744 "
  Sep 13 12:25:26.508: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=kubectl-3080 get pods update-demo-nautilus-5ct48 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Sep 13 12:25:26.574: INFO: stderr: ""
  Sep 13 12:25:26.574: INFO: stdout: "true"
  Sep 13 12:25:26.574: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=kubectl-3080 get pods update-demo-nautilus-5ct48 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Sep 13 12:25:26.636: INFO: stderr: ""
  Sep 13 12:25:26.636: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Sep 13 12:25:26.636: INFO: validating pod update-demo-nautilus-5ct48
  Sep 13 12:25:26.641: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Sep 13 12:25:26.641: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Sep 13 12:25:26.641: INFO: update-demo-nautilus-5ct48 is verified up and running
  Sep 13 12:25:26.641: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=kubectl-3080 get pods update-demo-nautilus-q4744 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Sep 13 12:25:26.705: INFO: stderr: ""
  Sep 13 12:25:26.705: INFO: stdout: "true"
  Sep 13 12:25:26.705: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=kubectl-3080 get pods update-demo-nautilus-q4744 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Sep 13 12:25:26.769: INFO: stderr: ""
  Sep 13 12:25:26.769: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Sep 13 12:25:26.769: INFO: validating pod update-demo-nautilus-q4744
  Sep 13 12:25:26.773: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Sep 13 12:25:26.773: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Sep 13 12:25:26.773: INFO: update-demo-nautilus-q4744 is verified up and running
  STEP: using delete to clean up resources @ 09/13/24 12:25:26.773
  Sep 13 12:25:26.773: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=kubectl-3080 delete --grace-period=0 --force -f -'
  Sep 13 12:25:26.844: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Sep 13 12:25:26.844: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  Sep 13 12:25:26.844: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=kubectl-3080 get rc,svc -l name=update-demo --no-headers'
  Sep 13 12:25:26.924: INFO: stderr: "No resources found in kubectl-3080 namespace.\n"
  Sep 13 12:25:26.924: INFO: stdout: ""
  Sep 13 12:25:26.924: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=kubectl-3080 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Sep 13 12:25:26.994: INFO: stderr: ""
  Sep 13 12:25:26.994: INFO: stdout: ""
  Sep 13 12:25:26.994: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3080" for this suite. @ 09/13/24 12:25:26.998
• [5.869 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 09/13/24 12:25:27.006
  Sep 13 12:25:27.007: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename deployment @ 09/13/24 12:25:27.007
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:25:27.035
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:25:27.038
  Sep 13 12:25:27.073: INFO: Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/13/24 12:25:27.074
  Sep 13 12:25:29.082: INFO: Waiting for pods owned by replica set "test-rollover-controller" to become ready
  Sep 13 12:25:31.086: INFO: Creating deployment "test-rollover-deployment"
  Sep 13 12:25:31.095: INFO: Make sure deployment "test-rollover-deployment" performs scaling operations
  Sep 13 12:25:33.100: INFO: Check revision of new replica set for deployment "test-rollover-deployment"
  Sep 13 12:25:33.105: INFO: Ensure that both replica sets have 1 created replica
  Sep 13 12:25:33.109: INFO: Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  Sep 13 12:25:33.119: INFO: Updating deployment test-rollover-deployment
  Sep 13 12:25:33.119: INFO: Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  Sep 13 12:25:35.350: INFO: Wait for revision update of deployment "test-rollover-deployment" to 2
  Sep 13 12:25:35.355: INFO: Make sure deployment "test-rollover-deployment" is complete
  Sep 13 12:25:35.361: INFO: all replica sets need to contain the pod-template-hash label
  Sep 13 12:25:35.361: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.September, 13, 12, 25, 31, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 13, 12, 25, 31, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 13, 12, 25, 34, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 13, 12, 25, 31, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Sep 13 12:25:37.369: INFO: all replica sets need to contain the pod-template-hash label
  Sep 13 12:25:37.369: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.September, 13, 12, 25, 31, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 13, 12, 25, 31, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 13, 12, 25, 34, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 13, 12, 25, 31, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Sep 13 12:25:39.369: INFO: all replica sets need to contain the pod-template-hash label
  Sep 13 12:25:39.369: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.September, 13, 12, 25, 31, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 13, 12, 25, 31, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 13, 12, 25, 34, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 13, 12, 25, 31, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Sep 13 12:25:41.369: INFO: all replica sets need to contain the pod-template-hash label
  Sep 13 12:25:41.369: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.September, 13, 12, 25, 31, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 13, 12, 25, 31, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 13, 12, 25, 34, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 13, 12, 25, 31, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Sep 13 12:25:43.368: INFO: all replica sets need to contain the pod-template-hash label
  Sep 13 12:25:43.368: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.September, 13, 12, 25, 31, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 13, 12, 25, 31, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 13, 12, 25, 34, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 13, 12, 25, 31, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Sep 13 12:25:45.367: INFO: 
  Sep 13 12:25:45.367: INFO: Ensure that both old replica sets have no replicas
  Sep 13 12:25:45.373: INFO: Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2172",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5c6cea2c-4c57-4a91-aff8-68c26157485b",
      ResourceVersion: (string) (len=6) "703651",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861827131,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861827133,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861827145,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861827131,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861827131,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861827145,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861827131,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-68774655d5\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Sep 13 12:25:45.376: INFO: New ReplicaSet "test-rollover-deployment-68774655d5" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-68774655d5",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2172",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5c61cb56-c8bc-4886-a9ba-f119e2df0794",
      ResourceVersion: (string) (len=6) "703640",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861827133,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "68774655d5"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "5c6cea2c-4c57-4a91-aff8-68c26157485b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861827133,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 35 63 36 63 65 61  32 63 2d 34 63 35 37 2d  |\"5c6cea2c-4c57-|
              00000120  34 61 39 31 2d 61 66 66  38 2d 36 38 63 32 36 31  |4a91-aff8-68c261|
              00000130  35 37 34 38 35 62 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |57485b\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861827145,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "68774655d5"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "68774655d5"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Sep 13 12:25:45.377: INFO: All old ReplicaSets of Deployment "test-rollover-deployment":
  Sep 13 12:25:45.377: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2172",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "83c5484f-a944-4307-afb6-95357a9b0a2d",
      ResourceVersion: (string) (len=6) "703649",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861827127,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "5c6cea2c-4c57-4a91-aff8-68c26157485b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861827127,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861827145,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  35 63 36 63 65 61 32 63  2d 34 63 35 37 2d 34 61  |5c6cea2c-4c57-4a|
              000000c0  39 31 2d 61 66 66 38 2d  36 38 63 32 36 31 35 37  |91-aff8-68c26157|
              000000d0  34 38 35 62 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |485b\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861827145,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Sep 13 12:25:45.378: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-664fc6c874",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2172",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "82b7cb2e-c5d2-4721-b108-8226393f343d",
      ResourceVersion: (string) (len=6) "703574",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861827131,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "5c6cea2c-4c57-4a91-aff8-68c26157485b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861827133,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 35 63 36 63 65 61  32 63 2d 34 63 35 37 2d  |\"5c6cea2c-4c57-|
              00000120  34 61 39 31 2d 61 66 66  38 2d 36 38 63 32 36 31  |4a91-aff8-68c261|
              00000130  35 37 34 38 35 62 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |57485b\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861827133,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Sep 13 12:25:45.381: INFO: Pod "test-rollover-deployment-68774655d5-54vp7" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-68774655d5-54vp7",
      GenerateName: (string) (len=36) "test-rollover-deployment-68774655d5-",
      Namespace: (string) (len=15) "deployment-2172",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f643d968-674d-4cc2-a4ab-8d19f32f5c79",
      ResourceVersion: (string) (len=6) "703595",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861827133,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "68774655d5"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-68774655d5",
          UID: (types.UID) (len=36) "5c61cb56-c8bc-4886-a9ba-f119e2df0794",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861827133,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 63  36 31 63 62 35 36 2d 63  |d\":\"5c61cb56-c|
              00000090  38 62 63 2d 34 38 38 36  2d 61 39 62 61 2d 66 31  |8bc-4886-a9ba-f1|
              000000a0  31 39 65 32 64 66 30 37  39 34 5c 22 7d 22 3a 7b  |19e2df0794\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861827134,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 30 2e 31 2e 31 37 36  5c 22 7d 22 3a 7b 22 2e  |.0.1.176\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lrf8q",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lrf8q",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "cncf-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861827134,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861827133,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861827134,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861827134,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861827133,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.10.50.243",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.10.50.243"
        }
      },
      PodIP: (string) (len=10) "10.0.1.176",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.0.1.176"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861827133,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63861827134,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:cc249acbd34692826b2b335335615e060fdb3c0bca4954507aa3a1d1194de253",
          ContainerID: (string) (len=77) "containerd://1d00eb7470d4c7fb298038b45f506b507d2e1411b1e01a61e7615295cbc75e2a",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 13 12:25:45.383: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-2172" for this suite. @ 09/13/24 12:25:45.388
• [18.391 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:110
  STEP: Creating a kubernetes client @ 09/13/24 12:25:45.398
  Sep 13 12:25:45.398: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename emptydir @ 09/13/24 12:25:45.399
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:25:45.414
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:25:45.417
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 09/13/24 12:25:45.425
  STEP: Saw pod success @ 09/13/24 12:25:49.442
  Sep 13 12:25:49.445: INFO: Trying to get logs from node cncf-4 pod pod-f68af3a7-05b6-42f9-ab5e-827d76d5f826 container test-container: <nil>
  STEP: delete the pod @ 09/13/24 12:25:49.449
  Sep 13 12:25:49.479: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2420" for this suite. @ 09/13/24 12:25:49.483
• [4.090 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:141
  STEP: Creating a kubernetes client @ 09/13/24 12:25:49.488
  Sep 13 12:25:49.488: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename secrets @ 09/13/24 12:25:49.49
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:25:49.509
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:25:49.512
  STEP: Creating projection with secret that has name secret-emptykey-test-23579bdc-1732-483e-b14c-7ec559db5263 @ 09/13/24 12:25:49.514
  Sep 13 12:25:49.516: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-86" for this suite. @ 09/13/24 12:25:49.528
• [0.058 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:209
  STEP: Creating a kubernetes client @ 09/13/24 12:25:49.547
  Sep 13 12:25:49.547: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename projected @ 09/13/24 12:25:49.548
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:25:49.567
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:25:49.569
  STEP: Creating a pod to test downward API volume plugin @ 09/13/24 12:25:49.58
  STEP: Saw pod success @ 09/13/24 12:25:53.599
  Sep 13 12:25:53.601: INFO: Trying to get logs from node cncf-4 pod downwardapi-volume-2537cd1a-30cd-4764-958c-f2b6b1e559df container client-container: <nil>
  STEP: delete the pod @ 09/13/24 12:25:53.605
  Sep 13 12:25:53.621: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6678" for this suite. @ 09/13/24 12:25:53.625
• [4.087 seconds]
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:237
  STEP: Creating a kubernetes client @ 09/13/24 12:25:53.634
  Sep 13 12:25:53.634: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename downward-api @ 09/13/24 12:25:53.635
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:25:53.647
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:25:53.649
  STEP: Creating a pod to test downward API volume plugin @ 09/13/24 12:25:53.661
  STEP: Saw pod success @ 09/13/24 12:25:57.689
  Sep 13 12:25:57.691: INFO: Trying to get logs from node cncf-4 pod downwardapi-volume-a1db4a9d-e7b1-4b70-a291-16c3c7c81df9 container client-container: <nil>
  STEP: delete the pod @ 09/13/24 12:25:57.697
  Sep 13 12:25:57.729: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2990" for this suite. @ 09/13/24 12:25:57.733
• [4.105 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:135
  STEP: Creating a kubernetes client @ 09/13/24 12:25:57.74
  Sep 13 12:25:57.740: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename security-context @ 09/13/24 12:25:57.741
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:25:57.763
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:25:57.766
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 09/13/24 12:25:57.768
  STEP: Saw pod success @ 09/13/24 12:26:01.806
  Sep 13 12:26:01.808: INFO: Trying to get logs from node cncf-4 pod security-context-279a9f79-b1e7-4563-bffd-6ebbf2b79de5 container test-container: <nil>
  STEP: delete the pod @ 09/13/24 12:26:01.813
  Sep 13 12:26:01.834: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-2876" for this suite. @ 09/13/24 12:26:01.837
• [4.103 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:163
  STEP: Creating a kubernetes client @ 09/13/24 12:26:01.843
  Sep 13 12:26:01.843: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename resourcequota @ 09/13/24 12:26:01.844
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:26:01.889
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:26:01.892
  STEP: Discovering how many secrets are in namespace by default @ 09/13/24 12:26:01.894
  STEP: Counting existing ResourceQuota @ 09/13/24 12:26:06.898
  STEP: Creating a ResourceQuota @ 09/13/24 12:26:11.901
  STEP: Ensuring resource quota status is calculated @ 09/13/24 12:26:11.906
  STEP: Creating a Secret @ 09/13/24 12:26:13.91
  STEP: Ensuring resource quota status captures secret creation @ 09/13/24 12:26:13.932
  STEP: Deleting a secret @ 09/13/24 12:26:15.936
  STEP: Ensuring resource quota status released usage @ 09/13/24 12:26:15.942
  Sep 13 12:26:17.948: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3924" for this suite. @ 09/13/24 12:26:17.953
• [16.116 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] CSIStorageCapacity should support CSIStorageCapacities API operations [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csistoragecapacity.go:50
  STEP: Creating a kubernetes client @ 09/13/24 12:26:17.959
  Sep 13 12:26:17.959: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename csistoragecapacity @ 09/13/24 12:26:17.961
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:26:17.983
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:26:17.986
  STEP: getting /apis @ 09/13/24 12:26:17.989
  STEP: getting /apis/storage.k8s.io @ 09/13/24 12:26:17.995
  STEP: getting /apis/storage.k8s.io/v1 @ 09/13/24 12:26:17.995
  STEP: creating @ 09/13/24 12:26:17.996
  STEP: watching @ 09/13/24 12:26:18.008
  Sep 13 12:26:18.008: INFO: starting watch
  STEP: getting @ 09/13/24 12:26:18.037
  STEP: listing in namespace @ 09/13/24 12:26:18.039
  STEP: listing across namespaces @ 09/13/24 12:26:18.041
  STEP: patching @ 09/13/24 12:26:18.044
  STEP: updating @ 09/13/24 12:26:18.049
  Sep 13 12:26:18.060: INFO: waiting for watch events with expected annotations in namespace
  Sep 13 12:26:18.061: INFO: waiting for watch events with expected annotations across namespace
  STEP: deleting @ 09/13/24 12:26:18.061
  STEP: deleting a collection @ 09/13/24 12:26:18.071
  Sep 13 12:26:18.082: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-4702" for this suite. @ 09/13/24 12:26:18.086
• [0.134 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:550
  STEP: Creating a kubernetes client @ 09/13/24 12:26:18.094
  Sep 13 12:26:18.094: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename container-probe @ 09/13/24 12:26:18.095
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:26:18.114
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:26:18.117
  STEP: Creating pod test-grpc-b72f7944-ad54-420b-90e4-c3923c77838c in namespace container-probe-9935 @ 09/13/24 12:26:18.119
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/13/24 12:26:20.136
  Sep 13 12:26:20.139: INFO: Initial restart count of pod test-grpc-b72f7944-ad54-420b-90e4-c3923c77838c is 0
  Sep 13 12:26:20.141: INFO: Get pod test-grpc-b72f7944-ad54-420b-90e4-c3923c77838c in namespace container-probe-9935
  Sep 13 12:26:22.145: INFO: Get pod test-grpc-b72f7944-ad54-420b-90e4-c3923c77838c in namespace container-probe-9935
  Sep 13 12:26:24.150: INFO: Get pod test-grpc-b72f7944-ad54-420b-90e4-c3923c77838c in namespace container-probe-9935
  Sep 13 12:26:26.154: INFO: Get pod test-grpc-b72f7944-ad54-420b-90e4-c3923c77838c in namespace container-probe-9935
  Sep 13 12:26:28.159: INFO: Get pod test-grpc-b72f7944-ad54-420b-90e4-c3923c77838c in namespace container-probe-9935
  Sep 13 12:26:30.164: INFO: Get pod test-grpc-b72f7944-ad54-420b-90e4-c3923c77838c in namespace container-probe-9935
  Sep 13 12:26:32.169: INFO: Get pod test-grpc-b72f7944-ad54-420b-90e4-c3923c77838c in namespace container-probe-9935
  Sep 13 12:26:34.409: INFO: Get pod test-grpc-b72f7944-ad54-420b-90e4-c3923c77838c in namespace container-probe-9935
  Sep 13 12:26:36.414: INFO: Get pod test-grpc-b72f7944-ad54-420b-90e4-c3923c77838c in namespace container-probe-9935
  Sep 13 12:26:38.418: INFO: Get pod test-grpc-b72f7944-ad54-420b-90e4-c3923c77838c in namespace container-probe-9935
  Sep 13 12:26:40.423: INFO: Get pod test-grpc-b72f7944-ad54-420b-90e4-c3923c77838c in namespace container-probe-9935
  Sep 13 12:26:42.427: INFO: Get pod test-grpc-b72f7944-ad54-420b-90e4-c3923c77838c in namespace container-probe-9935
  Sep 13 12:26:44.432: INFO: Get pod test-grpc-b72f7944-ad54-420b-90e4-c3923c77838c in namespace container-probe-9935
  Sep 13 12:26:46.437: INFO: Get pod test-grpc-b72f7944-ad54-420b-90e4-c3923c77838c in namespace container-probe-9935
  Sep 13 12:26:48.441: INFO: Get pod test-grpc-b72f7944-ad54-420b-90e4-c3923c77838c in namespace container-probe-9935
  Sep 13 12:26:50.446: INFO: Get pod test-grpc-b72f7944-ad54-420b-90e4-c3923c77838c in namespace container-probe-9935
  Sep 13 12:26:52.450: INFO: Get pod test-grpc-b72f7944-ad54-420b-90e4-c3923c77838c in namespace container-probe-9935
  Sep 13 12:26:54.454: INFO: Get pod test-grpc-b72f7944-ad54-420b-90e4-c3923c77838c in namespace container-probe-9935
  Sep 13 12:26:56.457: INFO: Get pod test-grpc-b72f7944-ad54-420b-90e4-c3923c77838c in namespace container-probe-9935
  Sep 13 12:26:58.462: INFO: Get pod test-grpc-b72f7944-ad54-420b-90e4-c3923c77838c in namespace container-probe-9935
  Sep 13 12:27:00.467: INFO: Get pod test-grpc-b72f7944-ad54-420b-90e4-c3923c77838c in namespace container-probe-9935
  Sep 13 12:27:02.471: INFO: Get pod test-grpc-b72f7944-ad54-420b-90e4-c3923c77838c in namespace container-probe-9935
  Sep 13 12:27:04.475: INFO: Get pod test-grpc-b72f7944-ad54-420b-90e4-c3923c77838c in namespace container-probe-9935
  Sep 13 12:27:06.479: INFO: Get pod test-grpc-b72f7944-ad54-420b-90e4-c3923c77838c in namespace container-probe-9935
  Sep 13 12:27:08.483: INFO: Get pod test-grpc-b72f7944-ad54-420b-90e4-c3923c77838c in namespace container-probe-9935
  Sep 13 12:27:10.488: INFO: Get pod test-grpc-b72f7944-ad54-420b-90e4-c3923c77838c in namespace container-probe-9935
  Sep 13 12:27:12.492: INFO: Get pod test-grpc-b72f7944-ad54-420b-90e4-c3923c77838c in namespace container-probe-9935
  Sep 13 12:27:14.497: INFO: Get pod test-grpc-b72f7944-ad54-420b-90e4-c3923c77838c in namespace container-probe-9935
  Sep 13 12:27:16.507: INFO: Get pod test-grpc-b72f7944-ad54-420b-90e4-c3923c77838c in namespace container-probe-9935
  Sep 13 12:27:18.511: INFO: Get pod test-grpc-b72f7944-ad54-420b-90e4-c3923c77838c in namespace container-probe-9935
  Sep 13 12:27:20.515: INFO: Get pod test-grpc-b72f7944-ad54-420b-90e4-c3923c77838c in namespace container-probe-9935
  Sep 13 12:27:22.519: INFO: Get pod test-grpc-b72f7944-ad54-420b-90e4-c3923c77838c in namespace container-probe-9935
  Sep 13 12:27:24.526: INFO: Get pod test-grpc-b72f7944-ad54-420b-90e4-c3923c77838c in namespace container-probe-9935
  Sep 13 12:27:24.526: INFO: Restart count of pod container-probe-9935/test-grpc-b72f7944-ad54-420b-90e4-c3923c77838c is now 1 (1m4.38676972s elapsed)
  STEP: deleting the pod @ 09/13/24 12:27:24.526
  Sep 13 12:27:24.545: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-9935" for this suite. @ 09/13/24 12:27:24.552
• [66.470 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 09/13/24 12:27:24.566
  Sep 13 12:27:24.566: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename pods @ 09/13/24 12:27:24.567
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:27:24.585
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:27:24.587
  STEP: Saw pod success @ 09/13/24 12:27:30.66
  Sep 13 12:27:30.663: INFO: Trying to get logs from node cncf-4 pod client-envvars-3c70aabb-599a-4025-9d12-f508fc5e2096 container env3cont: <nil>
  STEP: delete the pod @ 09/13/24 12:27:30.672
  Sep 13 12:27:30.690: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6883" for this suite. @ 09/13/24 12:27:30.694
• [6.137 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:397
  STEP: Creating a kubernetes client @ 09/13/24 12:27:30.704
  Sep 13 12:27:30.704: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename resourcequota @ 09/13/24 12:27:30.705
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:27:30.732
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:27:30.735
  STEP: Counting existing ResourceQuota @ 09/13/24 12:27:30.737
  STEP: Creating a ResourceQuota @ 09/13/24 12:27:35.743
  STEP: Ensuring resource quota status is calculated @ 09/13/24 12:27:35.75
  STEP: Creating a ReplicationController @ 09/13/24 12:27:37.753
  STEP: Ensuring resource quota status captures replication controller creation @ 09/13/24 12:27:37.77
  STEP: Deleting a ReplicationController @ 09/13/24 12:27:39.774
  STEP: Ensuring resource quota status released usage @ 09/13/24 12:27:39.778
  Sep 13 12:27:41.782: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2496" for this suite. @ 09/13/24 12:27:41.787
• [11.094 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:836
  STEP: Creating a kubernetes client @ 09/13/24 12:27:41.799
  Sep 13 12:27:41.799: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename daemonsets @ 09/13/24 12:27:41.801
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:27:41.828
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:27:41.83
  STEP: Creating simple DaemonSet "daemon-set" @ 09/13/24 12:27:41.857
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/13/24 12:27:41.865
  Sep 13 12:27:41.879: INFO: DaemonSet pods can't tolerate node cncf-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep 13 12:27:41.884: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 13 12:27:41.884: INFO: Node cncf-2 is running 0 daemon pod, expected 1
  Sep 13 12:27:42.871: INFO: DaemonSet pods can't tolerate node cncf-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep 13 12:27:42.874: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Sep 13 12:27:42.875: INFO: Node cncf-2 is running 0 daemon pod, expected 1
  Sep 13 12:27:43.871: INFO: DaemonSet pods can't tolerate node cncf-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep 13 12:27:43.874: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 4
  Sep 13 12:27:43.874: INFO: Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
  STEP: listing all DaemonSets @ 09/13/24 12:27:43.876
  STEP: DeleteCollection of the DaemonSets @ 09/13/24 12:27:43.879
  STEP: Verify that ReplicaSets have been deleted @ 09/13/24 12:27:43.888
  Sep 13 12:27:43.897: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"704511"},"items":null}

  Sep 13 12:27:43.914: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"704515"},"items":[{"metadata":{"name":"daemon-set-7q9lg","generateName":"daemon-set-","namespace":"daemonsets-4417","uid":"076d03c3-6024-4c4b-bac4-8e1424025d31","resourceVersion":"704513","creationTimestamp":"2024-09-13T12:27:41Z","deletionTimestamp":"2024-09-13T12:28:13Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"91dbe105-0a0a-4acc-8964-22d12f961998","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-09-13T12:27:41Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"91dbe105-0a0a-4acc-8964-22d12f961998\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-09-13T12:27:42Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.0.0.25\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-n2b94","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-n2b94","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"cncf-5","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["cncf-5"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-09-13T12:27:42Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-09-13T12:27:41Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-09-13T12:27:42Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-09-13T12:27:42Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-09-13T12:27:41Z"}],"hostIP":"172.10.50.77","hostIPs":[{"ip":"172.10.50.77"}],"podIP":"10.0.0.25","podIPs":[{"ip":"10.0.0.25"}],"startTime":"2024-09-13T12:27:41Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-09-13T12:27:42Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://e250988b149bea18169e4373a814d2bfcc2ec19efe1fe8c70c22c2d98c845be1","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-9vxgh","generateName":"daemon-set-","namespace":"daemonsets-4417","uid":"95f32a01-3c57-4458-b4e9-3e2e3f1289af","resourceVersion":"704515","creationTimestamp":"2024-09-13T12:27:41Z","deletionTimestamp":"2024-09-13T12:28:13Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"91dbe105-0a0a-4acc-8964-22d12f961998","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-09-13T12:27:41Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"91dbe105-0a0a-4acc-8964-22d12f961998\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-09-13T12:27:42Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.0.4.82\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-c8f9b","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-c8f9b","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"cncf-2","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["cncf-2"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-09-13T12:27:42Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-09-13T12:27:41Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-09-13T12:27:42Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-09-13T12:27:42Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-09-13T12:27:41Z"}],"hostIP":"172.10.50.163","hostIPs":[{"ip":"172.10.50.163"}],"podIP":"10.0.4.82","podIPs":[{"ip":"10.0.4.82"}],"startTime":"2024-09-13T12:27:41Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-09-13T12:27:42Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://9488da3d87019444d2a85f7e6cb12d62c91076b57c55d2d24102348acd469f9f","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-jvgkg","generateName":"daemon-set-","namespace":"daemonsets-4417","uid":"7bceeb01-3e77-41ef-a539-e2f9ea311fc6","resourceVersion":"704514","creationTimestamp":"2024-09-13T12:27:41Z","deletionTimestamp":"2024-09-13T12:28:13Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"91dbe105-0a0a-4acc-8964-22d12f961998","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-09-13T12:27:41Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"91dbe105-0a0a-4acc-8964-22d12f961998\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-09-13T12:27:43Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.0.1.191\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-csp87","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-csp87","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"cncf-3","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["cncf-3"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-09-13T12:27:43Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-09-13T12:27:41Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-09-13T12:27:43Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-09-13T12:27:43Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-09-13T12:27:41Z"}],"hostIP":"172.10.50.243","hostIPs":[{"ip":"172.10.50.243"}],"podIP":"10.0.1.191","podIPs":[{"ip":"10.0.1.191"}],"startTime":"2024-09-13T12:27:41Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-09-13T12:27:42Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://06f9b2074a6f5a53269640bcfe5f58dfa2d0ab607139e2e7eaab0a6a0ebf9130","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-s76j9","generateName":"daemon-set-","namespace":"daemonsets-4417","uid":"42973132-4068-4d44-9e34-4e4e8b0129cb","resourceVersion":"704512","creationTimestamp":"2024-09-13T12:27:41Z","deletionTimestamp":"2024-09-13T12:28:13Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"91dbe105-0a0a-4acc-8964-22d12f961998","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-09-13T12:27:41Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"91dbe105-0a0a-4acc-8964-22d12f961998\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-09-13T12:27:43Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.0.3.216\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-267xb","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-267xb","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"cncf-4","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["cncf-4"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-09-13T12:27:43Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-09-13T12:27:41Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-09-13T12:27:43Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-09-13T12:27:43Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-09-13T12:27:41Z"}],"hostIP":"172.10.50.34","hostIPs":[{"ip":"172.10.50.34"}],"podIP":"10.0.3.216","podIPs":[{"ip":"10.0.3.216"}],"startTime":"2024-09-13T12:27:41Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-09-13T12:27:42Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://a7bde6e9ec4ee0be8e9ebef1e59541ecc3d51d126b664fcf485e72f0a0dfd5c8","started":true}],"qosClass":"BestEffort"}}]}

  Sep 13 12:27:43.947: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-4417" for this suite. @ 09/13/24 12:27:43.951
• [2.158 seconds]
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:269
  STEP: Creating a kubernetes client @ 09/13/24 12:27:43.959
  Sep 13 12:27:43.960: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename downward-api @ 09/13/24 12:27:43.961
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:27:43.981
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:27:43.983
  STEP: Creating a pod to test downward api env vars @ 09/13/24 12:27:43.986
  STEP: Saw pod success @ 09/13/24 12:27:48.007
  Sep 13 12:27:48.009: INFO: Trying to get logs from node cncf-4 pod downward-api-7c1422d0-eb02-43d2-aac2-994f42c711dd container dapi-container: <nil>
  STEP: delete the pod @ 09/13/24 12:27:48.014
  Sep 13 12:27:48.032: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2817" for this suite. @ 09/13/24 12:27:48.037
• [4.085 seconds]
------------------------------
SSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:224
  STEP: Creating a kubernetes client @ 09/13/24 12:27:48.044
  Sep 13 12:27:48.044: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename sched-preemption @ 09/13/24 12:27:48.045
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:27:48.068
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:27:48.07
  Sep 13 12:27:48.086: INFO: Waiting up to 1m0s for all nodes to be ready
  Sep 13 12:28:48.091: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 09/13/24 12:28:48.093
  Sep 13 12:28:48.123: INFO: Created pod: pod0-0-sched-preemption-low-priority
  Sep 13 12:28:48.143: INFO: Created pod: pod0-1-sched-preemption-medium-priority
  Sep 13 12:28:48.174: INFO: Created pod: pod1-0-sched-preemption-medium-priority
  Sep 13 12:28:48.186: INFO: Created pod: pod1-1-sched-preemption-medium-priority
  Sep 13 12:28:48.222: INFO: Created pod: pod2-0-sched-preemption-medium-priority
  Sep 13 12:28:48.251: INFO: Created pod: pod2-1-sched-preemption-medium-priority
  Sep 13 12:28:48.291: INFO: Created pod: pod3-0-sched-preemption-medium-priority
  Sep 13 12:28:48.308: INFO: Created pod: pod3-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 09/13/24 12:28:48.308
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 09/13/24 12:28:50.342
  Sep 13 12:28:54.463: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-785" for this suite. @ 09/13/24 12:28:54.467
• [66.431 seconds]
------------------------------
SSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 09/13/24 12:28:54.476
  Sep 13 12:28:54.476: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 09/13/24 12:28:54.477
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:28:54.511
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:28:54.514
  STEP: creating a target pod @ 09/13/24 12:28:54.528
  STEP: adding an ephemeral container @ 09/13/24 12:28:56.555
  STEP: checking pod container endpoints @ 09/13/24 12:28:58.573
  Sep 13 12:28:58.573: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-2604 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 13 12:28:58.573: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  Sep 13 12:28:58.574: INFO: ExecWithOptions: Clientset creation
  Sep 13 12:28:58.575: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/ephemeral-containers-test-2604/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  Sep 13 12:28:58.615: INFO: Exec stderr: ""
  Sep 13 12:28:58.628: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-2604" for this suite. @ 09/13/24 12:28:58.632
• [4.160 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:160
  STEP: Creating a kubernetes client @ 09/13/24 12:28:58.637
  Sep 13 12:28:58.637: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename emptydir @ 09/13/24 12:28:58.638
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:28:58.647
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:28:58.65
  STEP: Creating a pod to test emptydir volume type on node default medium @ 09/13/24 12:28:58.656
  STEP: Saw pod success @ 09/13/24 12:29:02.681
  Sep 13 12:29:02.684: INFO: Trying to get logs from node cncf-4 pod pod-e6c2b4d2-a459-4cda-aa79-93dbdd55c6c3 container test-container: <nil>
  STEP: delete the pod @ 09/13/24 12:29:02.688
  Sep 13 12:29:02.704: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4062" for this suite. @ 09/13/24 12:29:02.708
• [4.077 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:263
  STEP: Creating a kubernetes client @ 09/13/24 12:29:02.715
  Sep 13 12:29:02.715: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename projected @ 09/13/24 12:29:02.715
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:29:02.726
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:29:02.729
  STEP: Creating a pod to test downward API volume plugin @ 09/13/24 12:29:02.731
  STEP: Saw pod success @ 09/13/24 12:29:06.751
  Sep 13 12:29:06.753: INFO: Trying to get logs from node cncf-3 pod downwardapi-volume-bcc0aded-8247-4e60-a886-9e41c6a6776f container client-container: <nil>
  STEP: delete the pod @ 09/13/24 12:29:06.765
  Sep 13 12:29:06.778: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7710" for this suite. @ 09/13/24 12:29:06.782
• [4.083 seconds]
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:95
  STEP: Creating a kubernetes client @ 09/13/24 12:29:06.798
  Sep 13 12:29:06.798: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename var-expansion @ 09/13/24 12:29:06.799
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:29:06.809
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:29:06.811
  STEP: Creating a pod to test substitution in container's args @ 09/13/24 12:29:06.815
  STEP: Saw pod success @ 09/13/24 12:29:08.827
  Sep 13 12:29:08.829: INFO: Trying to get logs from node cncf-3 pod var-expansion-7bf47eec-d46d-4860-8629-10071b80ec74 container dapi-container: <nil>
  STEP: delete the pod @ 09/13/24 12:29:08.834
  Sep 13 12:29:08.860: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-6588" for this suite. @ 09/13/24 12:29:08.863
• [2.073 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:100
  STEP: Creating a kubernetes client @ 09/13/24 12:29:08.872
  Sep 13 12:29:08.872: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename emptydir @ 09/13/24 12:29:08.872
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:29:08.888
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:29:08.891
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 09/13/24 12:29:08.893
  STEP: Saw pod success @ 09/13/24 12:29:12.91
  Sep 13 12:29:12.912: INFO: Trying to get logs from node cncf-3 pod pod-41e389b4-69ae-4852-b1e4-6baace3f4b9a container test-container: <nil>
  STEP: delete the pod @ 09/13/24 12:29:12.917
  Sep 13 12:29:12.937: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6307" for this suite. @ 09/13/24 12:29:12.941
• [4.086 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:150
  STEP: Creating a kubernetes client @ 09/13/24 12:29:12.958
  Sep 13 12:29:12.958: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename emptydir @ 09/13/24 12:29:12.959
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:29:12.969
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:29:12.972
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 09/13/24 12:29:12.976
  STEP: Saw pod success @ 09/13/24 12:29:16.993
  Sep 13 12:29:16.996: INFO: Trying to get logs from node cncf-3 pod pod-610991f1-d979-415f-b717-a680fb712e55 container test-container: <nil>
  STEP: delete the pod @ 09/13/24 12:29:17
  Sep 13 12:29:17.024: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3917" for this suite. @ 09/13/24 12:29:17.027
• [4.074 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3129
  STEP: Creating a kubernetes client @ 09/13/24 12:29:17.034
  Sep 13 12:29:17.034: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename services @ 09/13/24 12:29:17.035
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:29:17.058
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:29:17.061
  STEP: fetching services @ 09/13/24 12:29:17.063
  Sep 13 12:29:17.067: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2908" for this suite. @ 09/13/24 12:29:17.07
• [0.042 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:59
  STEP: Creating a kubernetes client @ 09/13/24 12:29:17.077
  Sep 13 12:29:17.077: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/13/24 12:29:17.078
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:29:17.095
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:29:17.097
  Sep 13 12:29:17.101: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  Sep 13 12:29:18.128: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-3558" for this suite. @ 09/13/24 12:29:18.133
• [1.065 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:46
  STEP: Creating a kubernetes client @ 09/13/24 12:29:18.143
  Sep 13 12:29:18.143: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename configmap @ 09/13/24 12:29:18.145
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:29:18.161
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:29:18.164
  STEP: Creating configMap configmap-7764/configmap-test-0ff1d595-9004-426e-86ea-e396f373b868 @ 09/13/24 12:29:18.167
  STEP: Creating a pod to test consume configMaps @ 09/13/24 12:29:18.173
  STEP: Saw pod success @ 09/13/24 12:29:22.189
  Sep 13 12:29:22.191: INFO: Trying to get logs from node cncf-4 pod pod-configmaps-04a96c73-46d3-4a30-9194-80e7a76990a7 container env-test: <nil>
  STEP: delete the pod @ 09/13/24 12:29:22.195
  Sep 13 12:29:22.210: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7764" for this suite. @ 09/13/24 12:29:22.213
• [4.080 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1455
  STEP: Creating a kubernetes client @ 09/13/24 12:29:22.224
  Sep 13 12:29:22.224: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename services @ 09/13/24 12:29:22.225
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:29:22.246
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:29:22.249
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-8936 @ 09/13/24 12:29:22.251
  STEP: changing the ExternalName service to type=NodePort @ 09/13/24 12:29:22.259
  STEP: creating replication controller externalname-service in namespace services-8936 @ 09/13/24 12:29:22.282
  I0913 12:29:22.293646      23 runners.go:197] Created replication controller with name: externalname-service, namespace: services-8936, replica count: 2
  I0913 12:29:25.345571      23 runners.go:197] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Sep 13 12:29:25.345: INFO: Creating new exec pod
  Sep 13 12:29:28.375: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=services-8936 exec execpod94chh -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Sep 13 12:29:28.481: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Sep 13 12:29:28.481: INFO: stdout: "externalname-service-2qlt5"
  Sep 13 12:29:28.481: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=services-8936 exec execpod94chh -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.30.101 80'
  Sep 13 12:29:28.579: INFO: stderr: "+ nc -v -t -w 2 10.233.30.101 80\n+ echo hostName\nConnection to 10.233.30.101 80 port [tcp/http] succeeded!\n"
  Sep 13 12:29:28.579: INFO: stdout: "externalname-service-b22qp"
  Sep 13 12:29:28.579: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=services-8936 exec execpod94chh -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.10.50.77 31604'
  Sep 13 12:29:28.680: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.10.50.77 31604\nConnection to 172.10.50.77 31604 port [tcp/*] succeeded!\n"
  Sep 13 12:29:28.680: INFO: stdout: "externalname-service-2qlt5"
  Sep 13 12:29:28.680: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=services-8936 exec execpod94chh -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.10.50.163 31604'
  Sep 13 12:29:28.787: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.10.50.163 31604\nConnection to 172.10.50.163 31604 port [tcp/*] succeeded!\n"
  Sep 13 12:29:28.787: INFO: stdout: ""
  Sep 13 12:29:29.680: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=services-8936 exec execpod94chh -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.10.50.163 31604'
  Sep 13 12:29:29.789: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.10.50.163 31604\nConnection to 172.10.50.163 31604 port [tcp/*] succeeded!\n"
  Sep 13 12:29:29.789: INFO: stdout: "externalname-service-b22qp"
  Sep 13 12:29:29.789: INFO: Cleaning up the ExternalName to NodePort test service
  Sep 13 12:29:29.810: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8936" for this suite. @ 09/13/24 12:29:29.818
• [7.606 seconds]
------------------------------
SSS
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet_etc_hosts.go:64
  STEP: Creating a kubernetes client @ 09/13/24 12:29:29.831
  Sep 13 12:29:29.831: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 09/13/24 12:29:29.832
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:29:29.85
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:29:29.852
  STEP: Setting up the test @ 09/13/24 12:29:29.912
  STEP: Creating hostNetwork=false pod @ 09/13/24 12:29:29.912
  STEP: Creating hostNetwork=true pod @ 09/13/24 12:29:31.932
  STEP: Running the test @ 09/13/24 12:29:33.946
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 09/13/24 12:29:33.946
  Sep 13 12:29:33.946: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-5392 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 13 12:29:33.946: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  Sep 13 12:29:33.947: INFO: ExecWithOptions: Clientset creation
  Sep 13 12:29:33.947: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5392/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Sep 13 12:29:33.989: INFO: Exec stderr: ""
  Sep 13 12:29:33.989: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-5392 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 13 12:29:33.989: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  Sep 13 12:29:33.990: INFO: ExecWithOptions: Clientset creation
  Sep 13 12:29:33.990: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5392/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Sep 13 12:29:34.029: INFO: Exec stderr: ""
  Sep 13 12:29:34.029: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-5392 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 13 12:29:34.029: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  Sep 13 12:29:34.030: INFO: ExecWithOptions: Clientset creation
  Sep 13 12:29:34.030: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5392/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Sep 13 12:29:34.072: INFO: Exec stderr: ""
  Sep 13 12:29:34.072: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-5392 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 13 12:29:34.072: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  Sep 13 12:29:34.074: INFO: ExecWithOptions: Clientset creation
  Sep 13 12:29:34.074: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5392/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Sep 13 12:29:34.113: INFO: Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 09/13/24 12:29:34.113
  Sep 13 12:29:34.113: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-5392 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 13 12:29:34.113: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  Sep 13 12:29:34.113: INFO: ExecWithOptions: Clientset creation
  Sep 13 12:29:34.113: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5392/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  Sep 13 12:29:34.155: INFO: Exec stderr: ""
  Sep 13 12:29:34.155: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-5392 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 13 12:29:34.155: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  Sep 13 12:29:34.156: INFO: ExecWithOptions: Clientset creation
  Sep 13 12:29:34.156: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5392/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  Sep 13 12:29:34.193: INFO: Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 09/13/24 12:29:34.193
  Sep 13 12:29:34.193: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-5392 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 13 12:29:34.193: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  Sep 13 12:29:34.193: INFO: ExecWithOptions: Clientset creation
  Sep 13 12:29:34.193: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5392/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Sep 13 12:29:34.232: INFO: Exec stderr: ""
  Sep 13 12:29:34.232: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-5392 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 13 12:29:34.232: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  Sep 13 12:29:34.232: INFO: ExecWithOptions: Clientset creation
  Sep 13 12:29:34.232: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5392/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Sep 13 12:29:34.269: INFO: Exec stderr: ""
  Sep 13 12:29:34.269: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-5392 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 13 12:29:34.269: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  Sep 13 12:29:34.270: INFO: ExecWithOptions: Clientset creation
  Sep 13 12:29:34.270: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5392/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Sep 13 12:29:34.329: INFO: Exec stderr: ""
  Sep 13 12:29:34.329: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-5392 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 13 12:29:34.329: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  Sep 13 12:29:34.330: INFO: ExecWithOptions: Clientset creation
  Sep 13 12:29:34.330: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5392/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Sep 13 12:29:34.574: INFO: Exec stderr: ""
  Sep 13 12:29:34.574: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-5392" for this suite. @ 09/13/24 12:29:34.579
• [4.754 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:100
  STEP: Creating a kubernetes client @ 09/13/24 12:29:34.585
  Sep 13 12:29:34.585: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename configmap @ 09/13/24 12:29:34.586
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:29:34.601
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:29:34.604
  STEP: Creating configMap with name configmap-test-volume-map-f3312b71-cd29-4883-ae87-e1b54a4bd425 @ 09/13/24 12:29:34.608
  STEP: Creating a pod to test consume configMaps @ 09/13/24 12:29:34.616
  STEP: Saw pod success @ 09/13/24 12:29:38.634
  Sep 13 12:29:38.635: INFO: Trying to get logs from node cncf-4 pod pod-configmaps-b6ec493d-2a92-47be-8bff-38cc5fb997aa container agnhost-container: <nil>
  STEP: delete the pod @ 09/13/24 12:29:38.64
  Sep 13 12:29:38.658: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9360" for this suite. @ 09/13/24 12:29:38.664
• [4.093 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:289
  STEP: Creating a kubernetes client @ 09/13/24 12:29:38.679
  Sep 13 12:29:38.679: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename field-validation @ 09/13/24 12:29:38.681
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:29:38.707
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:29:38.71
  Sep 13 12:29:38.712: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  Sep 13 12:29:41.825: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-6672" for this suite. @ 09/13/24 12:29:41.828
• [3.155 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:391
  STEP: Creating a kubernetes client @ 09/13/24 12:29:41.834
  Sep 13 12:29:41.834: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/13/24 12:29:41.835
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:29:41.854
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:29:41.858
  STEP: set up a multi version CRD @ 09/13/24 12:29:41.861
  Sep 13 12:29:41.861: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: rename a version @ 09/13/24 12:29:46.025
  STEP: check the new version name is served @ 09/13/24 12:29:46.054
  STEP: check the old version name is removed @ 09/13/24 12:29:47.232
  STEP: check the other version is not changed @ 09/13/24 12:29:48.039
  Sep 13 12:29:51.424: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-1607" for this suite. @ 09/13/24 12:29:51.432
• [9.603 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:90
  STEP: Creating a kubernetes client @ 09/13/24 12:29:51.437
  Sep 13 12:29:51.437: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename projected @ 09/13/24 12:29:51.438
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:29:51.458
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:29:51.461
  STEP: Creating configMap with name projected-configmap-test-volume-map-f565e733-e6ad-40fe-b96a-799511f79f8b @ 09/13/24 12:29:51.463
  STEP: Creating a pod to test consume configMaps @ 09/13/24 12:29:51.472
  STEP: Saw pod success @ 09/13/24 12:29:55.493
  Sep 13 12:29:55.496: INFO: Trying to get logs from node cncf-4 pod pod-projected-configmaps-ffa8f799-1545-4985-ad6c-854cd7ad6775 container agnhost-container: <nil>
  STEP: delete the pod @ 09/13/24 12:29:55.5
  Sep 13 12:29:55.518: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9718" for this suite. @ 09/13/24 12:29:55.522
• [4.095 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:846
  STEP: Creating a kubernetes client @ 09/13/24 12:29:55.534
  Sep 13 12:29:55.534: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename pods @ 09/13/24 12:29:55.535
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:29:55.557
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:29:55.56
  STEP: Create set of pods @ 09/13/24 12:29:55.563
  Sep 13 12:29:55.579: INFO: created test-pod-1
  Sep 13 12:29:55.587: INFO: created test-pod-2
  Sep 13 12:29:55.598: INFO: created test-pod-3
  STEP: waiting for all 3 pods to be running @ 09/13/24 12:29:55.598
  STEP: waiting for all pods to be deleted @ 09/13/24 12:29:57.673
  Sep 13 12:29:57.676: INFO: Pod quantity 3 is different from expected quantity 0
  Sep 13 12:29:58.677: INFO: Pod quantity 3 is different from expected quantity 0
  Sep 13 12:29:59.676: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9542" for this suite. @ 09/13/24 12:29:59.68
• [4.152 seconds]
------------------------------
S
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:86
  STEP: Creating a kubernetes client @ 09/13/24 12:29:59.685
  Sep 13 12:29:59.685: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename replication-controller @ 09/13/24 12:29:59.686
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:29:59.704
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:29:59.706
  Sep 13 12:29:59.709: INFO: Creating quota "condition-test" that allows only two pods to run in the current namespace
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 09/13/24 12:30:00.72
  STEP: Checking rc "condition-test" has the desired failure condition set @ 09/13/24 12:30:00.743
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 09/13/24 12:30:01.756
  Sep 13 12:30:01.765: INFO: Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 09/13/24 12:30:01.765
  Sep 13 12:30:02.772: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-5551" for this suite. @ 09/13/24 12:30:02.776
• [3.100 seconds]
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:161
  STEP: Creating a kubernetes client @ 09/13/24 12:30:02.785
  Sep 13 12:30:02.785: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename cronjob @ 09/13/24 12:30:02.785
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:30:02.809
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:30:02.811
  STEP: Creating a ReplaceConcurrent cronjob @ 09/13/24 12:30:02.813
  STEP: Ensuring a job is scheduled @ 09/13/24 12:30:02.821
  STEP: Ensuring exactly one is scheduled @ 09/13/24 12:31:00.827
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 09/13/24 12:31:00.829
  STEP: Ensuring the job is replaced with a new one @ 09/13/24 12:31:00.83
  STEP: Removing cronjob @ 09/13/24 12:32:00.845
  Sep 13 12:32:00.850: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-9430" for this suite. @ 09/13/24 12:32:00.853
• [118.076 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/controller_revision.go:126
  STEP: Creating a kubernetes client @ 09/13/24 12:32:00.861
  Sep 13 12:32:00.862: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename controllerrevisions @ 09/13/24 12:32:00.863
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:32:00.896
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:32:00.898
  STEP: Creating DaemonSet "e2e-m8sjr-daemon-set" @ 09/13/24 12:32:00.916
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/13/24 12:32:00.92
  Sep 13 12:32:00.923: INFO: DaemonSet pods can't tolerate node cncf-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep 13 12:32:00.924: INFO: Number of nodes with available pods controlled by daemonset e2e-m8sjr-daemon-set: 0
  Sep 13 12:32:00.924: INFO: Node cncf-2 is running 0 daemon pod, expected 1
  Sep 13 12:32:01.936: INFO: DaemonSet pods can't tolerate node cncf-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep 13 12:32:02.004: INFO: Number of nodes with available pods controlled by daemonset e2e-m8sjr-daemon-set: 1
  Sep 13 12:32:02.004: INFO: Node cncf-3 is running 0 daemon pod, expected 1
  Sep 13 12:32:02.927: INFO: DaemonSet pods can't tolerate node cncf-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep 13 12:32:02.930: INFO: Number of nodes with available pods controlled by daemonset e2e-m8sjr-daemon-set: 4
  Sep 13 12:32:02.931: INFO: Number of running nodes: 4, number of available pods: 4 in daemonset e2e-m8sjr-daemon-set
  STEP: Confirm DaemonSet "e2e-m8sjr-daemon-set" successfully created with "daemonset-name=e2e-m8sjr-daemon-set" label @ 09/13/24 12:32:02.934
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-m8sjr-daemon-set" @ 09/13/24 12:32:02.938
  Sep 13 12:32:02.941: INFO: Located ControllerRevision: "e2e-m8sjr-daemon-set-fdc7b585"
  STEP: Patching ControllerRevision "e2e-m8sjr-daemon-set-fdc7b585" @ 09/13/24 12:32:02.943
  Sep 13 12:32:02.972: INFO: e2e-m8sjr-daemon-set-fdc7b585 has been patched
  STEP: Create a new ControllerRevision @ 09/13/24 12:32:02.972
  Sep 13 12:32:02.978: INFO: Created ControllerRevision: e2e-m8sjr-daemon-set-86546777fc
  STEP: Confirm that there are two ControllerRevisions @ 09/13/24 12:32:02.978
  Sep 13 12:32:02.978: INFO: Requesting list of ControllerRevisions to confirm quantity
  Sep 13 12:32:02.981: INFO: Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-m8sjr-daemon-set-fdc7b585" @ 09/13/24 12:32:02.981
  STEP: Confirm that there is only one ControllerRevision @ 09/13/24 12:32:02.987
  Sep 13 12:32:02.987: INFO: Requesting list of ControllerRevisions to confirm quantity
  Sep 13 12:32:02.990: INFO: Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-m8sjr-daemon-set-86546777fc" @ 09/13/24 12:32:02.992
  Sep 13 12:32:03.008: INFO: e2e-m8sjr-daemon-set-86546777fc has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 09/13/24 12:32:03.008
  W0913 12:32:03.014475      23 warnings.go:70] unknown field "updateStrategy"
  STEP: Confirm that there are two ControllerRevisions @ 09/13/24 12:32:03.014
  Sep 13 12:32:03.015: INFO: Requesting list of ControllerRevisions to confirm quantity
  Sep 13 12:32:04.015: INFO: Requesting list of ControllerRevisions to confirm quantity
  Sep 13 12:32:04.019: INFO: Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-m8sjr-daemon-set-86546777fc=updated" @ 09/13/24 12:32:04.019
  STEP: Confirm that there is only one ControllerRevision @ 09/13/24 12:32:04.025
  Sep 13 12:32:04.025: INFO: Requesting list of ControllerRevisions to confirm quantity
  Sep 13 12:32:04.027: INFO: Found 1 ControllerRevisions
  Sep 13 12:32:04.029: INFO: ControllerRevision "e2e-m8sjr-daemon-set-68d7d7fbbd" has revision 3
  STEP: Deleting DaemonSet "e2e-m8sjr-daemon-set" @ 09/13/24 12:32:04.032
  STEP: deleting DaemonSet.extensions e2e-m8sjr-daemon-set in namespace controllerrevisions-697, will wait for the garbage collector to delete the pods @ 09/13/24 12:32:04.032
  Sep 13 12:32:04.102: INFO: Deleting DaemonSet.extensions e2e-m8sjr-daemon-set took: 5.298636ms
  Sep 13 12:32:04.203: INFO: Terminating DaemonSet.extensions e2e-m8sjr-daemon-set pods took: 100.714471ms
  Sep 13 12:32:06.407: INFO: Number of nodes with available pods controlled by daemonset e2e-m8sjr-daemon-set: 0
  Sep 13 12:32:06.407: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset e2e-m8sjr-daemon-set
  Sep 13 12:32:06.409: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"706938"},"items":null}

  Sep 13 12:32:06.411: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"706938"},"items":null}

  Sep 13 12:32:06.421: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-697" for this suite. @ 09/13/24 12:32:06.424
• [5.577 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:155
  STEP: Creating a kubernetes client @ 09/13/24 12:32:06.439
  Sep 13 12:32:06.439: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename var-expansion @ 09/13/24 12:32:06.44
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:32:06.466
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:32:06.468
  Sep 13 12:32:08.489: INFO: Deleting pod "var-expansion-bbb309d3-99f6-4f4d-9712-30d348d017e2" in namespace "var-expansion-9843"
  Sep 13 12:32:08.496: INFO: Wait up to 5m0s for pod "var-expansion-bbb309d3-99f6-4f4d-9712-30d348d017e2" to be fully deleted
  Sep 13 12:32:10.502: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-9843" for this suite. @ 09/13/24 12:32:10.505
• [4.079 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] Services should serve a basic endpoint from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:785
  STEP: Creating a kubernetes client @ 09/13/24 12:32:10.518
  Sep 13 12:32:10.518: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename services @ 09/13/24 12:32:10.519
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:32:10.538
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:32:10.541
  STEP: creating service endpoint-test2 in namespace services-3323 @ 09/13/24 12:32:10.544
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-3323 to expose endpoints map[] @ 09/13/24 12:32:10.559
  Sep 13 12:32:10.576: INFO: successfully validated that service endpoint-test2 in namespace services-3323 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-3323 @ 09/13/24 12:32:10.577
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-3323 to expose endpoints map[pod1:[80]] @ 09/13/24 12:32:12.593
  Sep 13 12:32:12.599: INFO: successfully validated that service endpoint-test2 in namespace services-3323 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 09/13/24 12:32:12.599
  Sep 13 12:32:12.599: INFO: Creating new exec pod
  Sep 13 12:32:15.614: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=services-3323 exec execpod5rt2j -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Sep 13 12:32:15.716: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Sep 13 12:32:15.716: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep 13 12:32:15.717: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=services-3323 exec execpod5rt2j -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.5.233 80'
  Sep 13 12:32:15.823: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.5.233 80\nConnection to 10.233.5.233 80 port [tcp/http] succeeded!\n"
  Sep 13 12:32:15.823: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-3323 @ 09/13/24 12:32:15.823
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-3323 to expose endpoints map[pod1:[80] pod2:[80]] @ 09/13/24 12:32:17.848
  Sep 13 12:32:17.856: INFO: successfully validated that service endpoint-test2 in namespace services-3323 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 09/13/24 12:32:17.856
  Sep 13 12:32:18.857: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=services-3323 exec execpod5rt2j -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Sep 13 12:32:18.964: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Sep 13 12:32:18.964: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep 13 12:32:18.964: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=services-3323 exec execpod5rt2j -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.5.233 80'
  Sep 13 12:32:19.062: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.5.233 80\nConnection to 10.233.5.233 80 port [tcp/http] succeeded!\n"
  Sep 13 12:32:19.062: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-3323 @ 09/13/24 12:32:19.062
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-3323 to expose endpoints map[pod2:[80]] @ 09/13/24 12:32:19.096
  Sep 13 12:32:20.118: INFO: successfully validated that service endpoint-test2 in namespace services-3323 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 09/13/24 12:32:20.118
  Sep 13 12:32:21.119: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=services-3323 exec execpod5rt2j -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Sep 13 12:32:21.213: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Sep 13 12:32:21.213: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep 13 12:32:21.213: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=services-3323 exec execpod5rt2j -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.5.233 80'
  Sep 13 12:32:21.317: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.5.233 80\nConnection to 10.233.5.233 80 port [tcp/http] succeeded!\n"
  Sep 13 12:32:21.317: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-3323 @ 09/13/24 12:32:21.317
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-3323 to expose endpoints map[] @ 09/13/24 12:32:21.345
  Sep 13 12:32:21.356: INFO: successfully validated that service endpoint-test2 in namespace services-3323 exposes endpoints map[]
  Sep 13 12:32:21.381: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3323" for this suite. @ 09/13/24 12:32:21.39
• [10.882 seconds]
------------------------------
SS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 09/13/24 12:32:21.4
  Sep 13 12:32:21.400: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename subpath @ 09/13/24 12:32:21.401
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:32:21.435
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:32:21.438
  STEP: Setting up data @ 09/13/24 12:32:21.441
  STEP: Creating pod pod-subpath-test-projected-sqk4 @ 09/13/24 12:32:21.462
  STEP: Creating a pod to test atomic-volume-subpath @ 09/13/24 12:32:21.462
  STEP: Saw pod success @ 09/13/24 12:32:45.533
  Sep 13 12:32:45.536: INFO: Trying to get logs from node cncf-3 pod pod-subpath-test-projected-sqk4 container test-container-subpath-projected-sqk4: <nil>
  STEP: delete the pod @ 09/13/24 12:32:45.546
  STEP: Deleting pod pod-subpath-test-projected-sqk4 @ 09/13/24 12:32:45.565
  Sep 13 12:32:45.565: INFO: Deleting pod "pod-subpath-test-projected-sqk4" in namespace "subpath-4660"
  Sep 13 12:32:45.567: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-4660" for this suite. @ 09/13/24 12:32:45.571
• [24.179 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:98
  STEP: Creating a kubernetes client @ 09/13/24 12:32:45.579
  Sep 13 12:32:45.580: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 09/13/24 12:32:45.58
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:32:45.592
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:32:45.596
  STEP: creating a target pod @ 09/13/24 12:32:45.6
  STEP: adding an ephemeral container @ 09/13/24 12:32:47.627
  STEP: checking pod container endpoints @ 09/13/24 12:32:49.667
  Sep 13 12:32:49.667: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-7078 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 13 12:32:49.667: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  Sep 13 12:32:49.668: INFO: ExecWithOptions: Clientset creation
  Sep 13 12:32:49.668: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/ephemeral-containers-test-7078/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  Sep 13 12:32:49.723: INFO: Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 09/13/24 12:32:49.729
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 09/13/24 12:32:49.731
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 09/13/24 12:32:49.741
  Sep 13 12:32:49.744: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-7078" for this suite. @ 09/13/24 12:32:49.748
• [4.196 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:236
  STEP: Creating a kubernetes client @ 09/13/24 12:32:49.777
  Sep 13 12:32:49.777: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/13/24 12:32:49.779
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:32:49.8
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:32:49.802
  Sep 13 12:32:49.806: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 09/13/24 12:32:51.6
  Sep 13 12:32:51.600: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=crd-publish-openapi-5845 --namespace=crd-publish-openapi-5845 create -f -'
  Sep 13 12:32:51.716: INFO: stderr: ""
  Sep 13 12:32:51.716: INFO: stdout: "e2e-test-crd-publish-openapi-8218-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  Sep 13 12:32:51.716: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=crd-publish-openapi-5845 --namespace=crd-publish-openapi-5845 delete e2e-test-crd-publish-openapi-8218-crds test-cr'
  Sep 13 12:32:51.791: INFO: stderr: ""
  Sep 13 12:32:51.791: INFO: stdout: "e2e-test-crd-publish-openapi-8218-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  Sep 13 12:32:51.791: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=crd-publish-openapi-5845 --namespace=crd-publish-openapi-5845 apply -f -'
  Sep 13 12:32:51.895: INFO: stderr: ""
  Sep 13 12:32:51.895: INFO: stdout: "e2e-test-crd-publish-openapi-8218-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  Sep 13 12:32:51.895: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=crd-publish-openapi-5845 --namespace=crd-publish-openapi-5845 delete e2e-test-crd-publish-openapi-8218-crds test-cr'
  Sep 13 12:32:51.959: INFO: stderr: ""
  Sep 13 12:32:51.959: INFO: stdout: "e2e-test-crd-publish-openapi-8218-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 09/13/24 12:32:51.959
  Sep 13 12:32:51.959: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=crd-publish-openapi-5845 explain e2e-test-crd-publish-openapi-8218-crds'
  Sep 13 12:32:52.014: INFO: stderr: ""
  Sep 13 12:32:52.014: INFO: stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-8218-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  Sep 13 12:32:53.776: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5845" for this suite. @ 09/13/24 12:32:53.784
• [4.013 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:112
  STEP: Creating a kubernetes client @ 09/13/24 12:32:53.79
  Sep 13 12:32:53.790: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename replicaset @ 09/13/24 12:32:53.791
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:32:53.817
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:32:53.82
  Sep 13 12:32:53.822: INFO: Creating ReplicaSet my-hostname-basic-a40af22e-a8c0-41da-bfba-f38a90c9bb7f
  Sep 13 12:32:53.834: INFO: Pod name my-hostname-basic-a40af22e-a8c0-41da-bfba-f38a90c9bb7f: Found 0 pods out of 1
  Sep 13 12:32:58.838: INFO: Pod name my-hostname-basic-a40af22e-a8c0-41da-bfba-f38a90c9bb7f: Found 1 pods out of 1
  Sep 13 12:32:58.838: INFO: Ensuring a pod for ReplicaSet "my-hostname-basic-a40af22e-a8c0-41da-bfba-f38a90c9bb7f" is running
  Sep 13 12:32:58.841: INFO: Pod "my-hostname-basic-a40af22e-a8c0-41da-bfba-f38a90c9bb7f-mzzqd" is running (conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-09-13 12:32:55 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-09-13 12:32:53 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-09-13 12:32:55 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-09-13 12:32:55 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-09-13 12:32:53 +0000 UTC Reason: Message:}])
  Sep 13 12:32:58.841: INFO: Trying to dial the pod
  STEP: trying to dial each unique pod @ 09/13/24 12:32:58.841
  Sep 13 12:32:58.849: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-5689" for this suite. @ 09/13/24 12:32:58.854
• [5.086 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:168
  STEP: Creating a kubernetes client @ 09/13/24 12:32:58.881
  Sep 13 12:32:58.881: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename downward-api @ 09/13/24 12:32:58.883
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:32:58.927
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:32:58.93
  STEP: Creating a pod to test downward api env vars @ 09/13/24 12:32:58.932
  STEP: Saw pod success @ 09/13/24 12:33:02.956
  Sep 13 12:33:02.959: INFO: Trying to get logs from node cncf-3 pod downward-api-0cdd4b2d-6dd8-4fd7-b4cb-ed14e9cd0d96 container dapi-container: <nil>
  STEP: delete the pod @ 09/13/24 12:33:02.963
  Sep 13 12:33:02.993: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5403" for this suite. @ 09/13/24 12:33:02.996
• [4.127 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:530
  STEP: Creating a kubernetes client @ 09/13/24 12:33:03.009
  Sep 13 12:33:03.009: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename security-context-test @ 09/13/24 12:33:03.011
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:33:03.035
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:33:03.037
  Sep 13 12:33:07.067: INFO: Got logs for pod "busybox-privileged-false-dcb70a63-e38a-4bcf-8fb4-4b5c88857408": "ip: RTNETLINK answers: Operation not permitted\n"
  Sep 13 12:33:07.067: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-400" for this suite. @ 09/13/24 12:33:07.07
• [4.095 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:622
  STEP: Creating a kubernetes client @ 09/13/24 12:33:07.107
  Sep 13 12:33:07.107: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename field-validation @ 09/13/24 12:33:07.108
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:33:07.159
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:33:07.161
  Sep 13 12:33:07.199: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  W0913 12:33:09.756102      23 warnings.go:70] unknown field "alpha"
  W0913 12:33:09.756130      23 warnings.go:70] unknown field "beta"
  W0913 12:33:09.756134      23 warnings.go:70] unknown field "delta"
  W0913 12:33:09.756137      23 warnings.go:70] unknown field "epsilon"
  W0913 12:33:09.756140      23 warnings.go:70] unknown field "gamma"
  Sep 13 12:33:10.291: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-8598" for this suite. @ 09/13/24 12:33:10.296
• [3.195 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:146
  STEP: Creating a kubernetes client @ 09/13/24 12:33:10.302
  Sep 13 12:33:10.302: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/13/24 12:33:10.303
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:33:10.335
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:33:10.339
  Sep 13 12:33:10.342: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  Sep 13 12:33:10.888: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-5210" for this suite. @ 09/13/24 12:33:10.892
• [0.602 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:80
  STEP: Creating a kubernetes client @ 09/13/24 12:33:10.904
  Sep 13 12:33:10.904: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename svcaccounts @ 09/13/24 12:33:10.906
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:33:10.925
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:33:10.928
  STEP: reading a file in the container @ 09/13/24 12:33:12.947
  Sep 13 12:33:12.947: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-9820 pod-service-account-dabe2209-751b-4d00-93d6-7ea45f91da20 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 09/13/24 12:33:13.053
  Sep 13 12:33:13.053: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-9820 pod-service-account-dabe2209-751b-4d00-93d6-7ea45f91da20 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  STEP: reading a file in the container @ 09/13/24 12:33:13.16
  Sep 13 12:33:13.160: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-9820 pod-service-account-dabe2209-751b-4d00-93d6-7ea45f91da20 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  Sep 13 12:33:13.268: INFO: Got root ca configmap in namespace "svcaccounts-9820"
  Sep 13 12:33:13.270: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-9820" for this suite. @ 09/13/24 12:33:13.273
• [2.377 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:611
  STEP: Creating a kubernetes client @ 09/13/24 12:33:13.281
  Sep 13 12:33:13.281: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename security-context-test @ 09/13/24 12:33:13.282
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:33:13.292
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:33:13.294
  Sep 13 12:33:19.323: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-2757" for this suite. @ 09/13/24 12:33:19.327
• [6.053 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:784
  STEP: Creating a kubernetes client @ 09/13/24 12:33:19.335
  Sep 13 12:33:19.335: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename job @ 09/13/24 12:33:19.335
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:33:19.353
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:33:19.356
  STEP: Creating a job @ 09/13/24 12:33:19.359
  STEP: Ensure pods equal to parallelism count is attached to the job @ 09/13/24 12:33:19.365
  STEP: patching /status @ 09/13/24 12:33:21.37
  STEP: updating /status @ 09/13/24 12:33:21.385
  STEP: get /status @ 09/13/24 12:33:21.391
  Sep 13 12:33:21.393: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-3655" for this suite. @ 09/13/24 12:33:21.397
• [2.069 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:147
  STEP: Creating a kubernetes client @ 09/13/24 12:33:21.404
  Sep 13 12:33:21.404: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename kubelet-test @ 09/13/24 12:33:21.405
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:33:21.426
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:33:21.428
  STEP: Waiting for pod completion @ 09/13/24 12:33:21.442
  Sep 13 12:33:25.457: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-315" for this suite. @ 09/13/24 12:33:25.46
• [4.063 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:177
  STEP: Creating a kubernetes client @ 09/13/24 12:33:25.467
  Sep 13 12:33:25.468: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename crd-webhook @ 09/13/24 12:33:25.469
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:33:25.485
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:33:25.488
  STEP: Setting up server cert @ 09/13/24 12:33:25.49
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 09/13/24 12:33:25.959
  STEP: Deploying the custom resource conversion webhook pod @ 09/13/24 12:33:25.97
  STEP: Wait for the deployment to be ready @ 09/13/24 12:33:25.989
  Sep 13 12:33:26.002: INFO: deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/13/24 12:33:28.01
  STEP: Verifying the service has paired with the endpoint @ 09/13/24 12:33:28.025
  Sep 13 12:33:29.025: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  Sep 13 12:33:29.031: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Creating a v1 custom resource @ 09/13/24 12:33:31.594
  STEP: Create a v2 custom resource @ 09/13/24 12:33:31.609
  STEP: List CRs in v1 @ 09/13/24 12:33:31.642
  STEP: List CRs in v2 @ 09/13/24 12:33:31.646
  Sep 13 12:33:32.213: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-7720" for this suite. @ 09/13/24 12:33:32.216
• [6.759 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:123
  STEP: Creating a kubernetes client @ 09/13/24 12:33:32.226
  Sep 13 12:33:32.227: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename podtemplate @ 09/13/24 12:33:32.227
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:33:32.238
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:33:32.241
  STEP: Create set of pod templates @ 09/13/24 12:33:32.243
  Sep 13 12:33:32.248: INFO: created test-podtemplate-1
  Sep 13 12:33:32.257: INFO: created test-podtemplate-2
  Sep 13 12:33:32.263: INFO: created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 09/13/24 12:33:32.263
  STEP: delete collection of pod templates @ 09/13/24 12:33:32.265
  Sep 13 12:33:32.265: INFO: requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 09/13/24 12:33:32.276
  Sep 13 12:33:32.276: INFO: requesting list of pod templates to confirm quantity
  Sep 13 12:33:32.279: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-5636" for this suite. @ 09/13/24 12:33:32.283
• [0.063 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:209
  STEP: Creating a kubernetes client @ 09/13/24 12:33:32.29
  Sep 13 12:33:32.290: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename downward-api @ 09/13/24 12:33:32.292
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:33:32.305
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:33:32.308
  STEP: Creating a pod to test downward API volume plugin @ 09/13/24 12:33:32.316
  STEP: Saw pod success @ 09/13/24 12:33:36.353
  Sep 13 12:33:36.356: INFO: Trying to get logs from node cncf-3 pod downwardapi-volume-5a70e9c2-a4e5-4d75-895b-e27009d1abaf container client-container: <nil>
  STEP: delete the pod @ 09/13/24 12:33:36.36
  Sep 13 12:33:36.376: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6654" for this suite. @ 09/13/24 12:33:36.379
• [4.097 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 09/13/24 12:33:36.387
  Sep 13 12:33:36.387: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename events @ 09/13/24 12:33:36.388
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:33:36.403
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:33:36.405
  STEP: creating a test event @ 09/13/24 12:33:36.407
  STEP: listing events in all namespaces @ 09/13/24 12:33:36.411
  STEP: listing events in test namespace @ 09/13/24 12:33:36.417
  STEP: listing events with field selection filtering on source @ 09/13/24 12:33:36.418
  STEP: listing events with field selection filtering on reportingController @ 09/13/24 12:33:36.426
  STEP: getting the test event @ 09/13/24 12:33:36.428
  STEP: patching the test event @ 09/13/24 12:33:36.429
  STEP: getting the test event @ 09/13/24 12:33:36.434
  STEP: updating the test event @ 09/13/24 12:33:36.436
  STEP: getting the test event @ 09/13/24 12:33:36.44
  STEP: deleting the test event @ 09/13/24 12:33:36.442
  STEP: listing events in all namespaces @ 09/13/24 12:33:36.448
  STEP: listing events in test namespace @ 09/13/24 12:33:36.453
  Sep 13 12:33:36.455: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-9921" for this suite. @ 09/13/24 12:33:36.457
• [0.081 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 09/13/24 12:33:36.47
  Sep 13 12:33:36.470: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename pods @ 09/13/24 12:33:36.471
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:33:36.484
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:33:36.487
  STEP: creating the pod @ 09/13/24 12:33:36.49
  STEP: submitting the pod to kubernetes @ 09/13/24 12:33:36.49
  STEP: verifying the pod is in kubernetes @ 09/13/24 12:33:38.505
  STEP: updating the pod @ 09/13/24 12:33:38.507
  Sep 13 12:33:39.022: INFO: Successfully updated pod "pod-update-b2657907-d7c1-4783-a198-cc5a43897764"
  STEP: verifying the updated pod is in kubernetes @ 09/13/24 12:33:39.026
  Sep 13 12:33:39.031: INFO: Pod update OK
  Sep 13 12:33:39.032: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6318" for this suite. @ 09/13/24 12:33:39.039
• [2.575 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 09/13/24 12:33:39.045
  Sep 13 12:33:39.045: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename tables @ 09/13/24 12:33:39.046
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:33:39.066
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:33:39.068
  Sep 13 12:33:39.073: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-8490" for this suite. @ 09/13/24 12:33:39.076
• [0.036 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:357
  STEP: Creating a kubernetes client @ 09/13/24 12:33:39.084
  Sep 13 12:33:39.085: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/13/24 12:33:39.086
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:33:39.104
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:33:39.106
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 09/13/24 12:33:39.109
  Sep 13 12:33:39.109: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  Sep 13 12:33:40.798: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  Sep 13 12:33:47.430: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8668" for this suite. @ 09/13/24 12:33:47.437
• [8.359 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support PriorityLevelConfiguration API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:514
  STEP: Creating a kubernetes client @ 09/13/24 12:33:47.443
  Sep 13 12:33:47.444: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename apf @ 09/13/24 12:33:47.445
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:33:47.46
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:33:47.462
  STEP: getting /apis @ 09/13/24 12:33:47.464
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 09/13/24 12:33:47.467
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 09/13/24 12:33:47.468
  STEP: creating @ 09/13/24 12:33:47.469
  STEP: getting @ 09/13/24 12:33:47.519
  STEP: listing @ 09/13/24 12:33:47.521
  STEP: watching @ 09/13/24 12:33:47.523
  Sep 13 12:33:47.523: INFO: starting watch
  STEP: patching @ 09/13/24 12:33:47.525
  STEP: updating @ 09/13/24 12:33:47.531
  Sep 13 12:33:47.545: INFO: waiting for watch events with expected annotations
  STEP: getting /status @ 09/13/24 12:33:47.545
  STEP: patching /status @ 09/13/24 12:33:47.547
  STEP: updating /status @ 09/13/24 12:33:47.558
  STEP: deleting @ 09/13/24 12:33:47.563
  STEP: deleting a collection @ 09/13/24 12:33:47.572
  Sep 13 12:33:47.585: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-6954" for this suite. @ 09/13/24 12:33:47.588
• [0.154 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:330
  STEP: Creating a kubernetes client @ 09/13/24 12:33:47.598
  Sep 13 12:33:47.598: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename resourcequota @ 09/13/24 12:33:47.6
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:33:47.618
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:33:47.62
  STEP: Counting existing ResourceQuota @ 09/13/24 12:34:04.626
  STEP: Creating a ResourceQuota @ 09/13/24 12:34:09.629
  STEP: Ensuring resource quota status is calculated @ 09/13/24 12:34:09.646
  STEP: Creating a ConfigMap @ 09/13/24 12:34:11.651
  STEP: Ensuring resource quota status captures configMap creation @ 09/13/24 12:34:11.667
  STEP: Deleting a ConfigMap @ 09/13/24 12:34:13.671
  STEP: Ensuring resource quota status released usage @ 09/13/24 12:34:13.68
  Sep 13 12:34:15.684: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1301" for this suite. @ 09/13/24 12:34:15.688
• [28.099 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:142
  STEP: Creating a kubernetes client @ 09/13/24 12:34:15.697
  Sep 13 12:34:15.697: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename crd-webhook @ 09/13/24 12:34:15.699
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:34:15.723
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:34:15.726
  STEP: Setting up server cert @ 09/13/24 12:34:15.728
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 09/13/24 12:34:15.955
  STEP: Deploying the custom resource conversion webhook pod @ 09/13/24 12:34:15.965
  STEP: Wait for the deployment to be ready @ 09/13/24 12:34:15.982
  Sep 13 12:34:15.997: INFO: deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/13/24 12:34:18.005
  STEP: Verifying the service has paired with the endpoint @ 09/13/24 12:34:18.019
  Sep 13 12:34:19.019: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  Sep 13 12:34:19.025: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Creating a v1 custom resource @ 09/13/24 12:34:21.593
  STEP: v2 custom resource should be converted @ 09/13/24 12:34:21.598
  Sep 13 12:34:22.159: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-8701" for this suite. @ 09/13/24 12:34:22.162
• [6.472 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:335
  STEP: Creating a kubernetes client @ 09/13/24 12:34:22.17
  Sep 13 12:34:22.171: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename sched-pred @ 09/13/24 12:34:22.176
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:34:22.194
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:34:22.196
  Sep 13 12:34:22.198: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Sep 13 12:34:22.210: INFO: Waiting for terminating namespaces to be deleted...
  Sep 13 12:34:22.212: INFO: 
  Logging pods the apiserver thinks is on node cncf-2 before test
  Sep 13 12:34:22.231: INFO: keycloak-76cc8f6cb7-cj7kf from auth started at 2024-09-13 09:57:40 +0000 UTC (1 container statuses recorded)
  Sep 13 12:34:22.231: INFO: 	Container keycloak ready: true, restart count 0
  Sep 13 12:34:22.231: INFO: mariadb-keycloak-5b96c4c67d-txbrd from auth started at 2024-09-13 09:57:40 +0000 UTC (1 container statuses recorded)
  Sep 13 12:34:22.231: INFO: 	Container mariadb-keycloak ready: true, restart count 0
  Sep 13 12:34:22.231: INFO: oauth2-redis-admin-0 from auth started at 2024-09-13 09:31:35 +0000 UTC (1 container statuses recorded)
  Sep 13 12:34:22.231: INFO: 	Container redis ready: true, restart count 0
  Sep 13 12:34:22.231: INFO: cloud-service-api-75445b94f9-sjmqd from cmp started at 2024-09-13 09:59:40 +0000 UTC (2 container statuses recorded)
  Sep 13 12:34:22.231: INFO: 	Container cloud-service-api ready: true, restart count 0
  Sep 13 12:34:22.231: INFO: 	Container istio-proxy ready: true, restart count 0
  Sep 13 12:34:22.231: INFO: cloud-service-collector-6bd966f4d6-tqsdq from cmp started at 2024-09-13 09:59:40 +0000 UTC (2 container statuses recorded)
  Sep 13 12:34:22.231: INFO: 	Container cloud-service-collector ready: true, restart count 0
  Sep 13 12:34:22.231: INFO: 	Container istio-proxy ready: true, restart count 0
  Sep 13 12:34:22.231: INFO: maestro-auth-gateway-admin-7b4b969475-75b5g from cmp started at 2024-09-13 09:59:40 +0000 UTC (2 container statuses recorded)
  Sep 13 12:34:22.231: INFO: 	Container istio-proxy ready: true, restart count 0
  Sep 13 12:34:22.231: INFO: 	Container maestro-auth-gateway ready: true, restart count 0
  Sep 13 12:34:22.231: INFO: maestro-common-api-admin-b46b8f8b8-df9xr from cmp started at 2024-09-13 09:58:52 +0000 UTC (2 container statuses recorded)
  Sep 13 12:34:22.231: INFO: 	Container istio-proxy ready: true, restart count 0
  Sep 13 12:34:22.231: INFO: 	Container maestro-common-api ready: true, restart count 0
  Sep 13 12:34:22.231: INFO: maestro-host-app-admin-7d644fbb7b-pdwbt from cmp started at 2024-09-13 09:59:04 +0000 UTC (2 container statuses recorded)
  Sep 13 12:34:22.231: INFO: 	Container istio-proxy ready: true, restart count 0
  Sep 13 12:34:22.231: INFO: 	Container maestro-host-app ready: true, restart count 0
  Sep 13 12:34:22.231: INFO: maestro-remote-app-admin-6f86d5cb87-n7x59 from cmp started at 2024-09-13 10:02:45 +0000 UTC (2 container statuses recorded)
  Sep 13 12:34:22.231: INFO: 	Container istio-proxy ready: true, restart count 0
  Sep 13 12:34:22.231: INFO: 	Container maestro-remote-app ready: true, restart count 0
  Sep 13 12:34:22.231: INFO: mariadb-maxscale-745d5dfb5f-9m26l from dataplatform started at 2024-09-13 09:57:40 +0000 UTC (1 container statuses recorded)
  Sep 13 12:34:22.231: INFO: 	Container maxscale ready: true, restart count 0
  Sep 13 12:34:22.231: INFO: vault-1 from dataplatform started at 2024-09-13 09:31:36 +0000 UTC (1 container statuses recorded)
  Sep 13 12:34:22.231: INFO: 	Container vault ready: true, restart count 0
  Sep 13 12:34:22.231: INFO: ingress-nginx-controller-66f986c956-fkb8s from ingress-nginx started at 2024-09-13 09:57:41 +0000 UTC (1 container statuses recorded)
  Sep 13 12:34:22.231: INFO: 	Container controller ready: true, restart count 0
  Sep 13 12:34:22.231: INFO: istio-gateway-5f7f7c65d8-m5wpn from istio-system started at 2024-09-13 10:03:27 +0000 UTC (1 container statuses recorded)
  Sep 13 12:34:22.231: INFO: 	Container istio-proxy ready: true, restart count 0
  Sep 13 12:34:22.231: INFO: istiod-f77745497-cqmfd from istio-system started at 2024-09-13 09:57:41 +0000 UTC (1 container statuses recorded)
  Sep 13 12:34:22.231: INFO: 	Container discovery ready: true, restart count 0
  Sep 13 12:34:22.231: INFO: cilium-jzdbd from kube-system started at 2024-09-13 09:30:51 +0000 UTC (1 container statuses recorded)
  Sep 13 12:34:22.231: INFO: 	Container cilium-agent ready: true, restart count 0
  Sep 13 12:34:22.231: INFO: kube-proxy-c6wbb from kube-system started at 2024-09-13 07:33:07 +0000 UTC (1 container statuses recorded)
  Sep 13 12:34:22.231: INFO: 	Container kube-proxy ready: true, restart count 1
  Sep 13 12:34:22.231: INFO: nginx-proxy-cncf-2 from kube-system started at 2024-09-13 09:30:34 +0000 UTC (1 container statuses recorded)
  Sep 13 12:34:22.231: INFO: 	Container nginx-proxy ready: true, restart count 2
  Sep 13 12:34:22.231: INFO: csi-cephfsplugin-k4vk8 from rook-ceph started at 2024-09-12 04:28:27 +0000 UTC (3 container statuses recorded)
  Sep 13 12:34:22.231: INFO: 	Container csi-cephfsplugin ready: true, restart count 2
  Sep 13 12:34:22.231: INFO: 	Container driver-registrar ready: true, restart count 2
  Sep 13 12:34:22.231: INFO: 	Container log-collector ready: true, restart count 1
  Sep 13 12:34:22.231: INFO: csi-cephfsplugin-provisioner-69554c6fcb-p7sjj from rook-ceph started at 2024-09-13 09:57:40 +0000 UTC (6 container statuses recorded)
  Sep 13 12:34:22.231: INFO: 	Container csi-attacher ready: true, restart count 0
  Sep 13 12:34:22.231: INFO: 	Container csi-cephfsplugin ready: true, restart count 0
  Sep 13 12:34:22.231: INFO: 	Container csi-provisioner ready: true, restart count 0
  Sep 13 12:34:22.231: INFO: 	Container csi-resizer ready: true, restart count 0
  Sep 13 12:34:22.231: INFO: 	Container csi-snapshotter ready: true, restart count 0
  Sep 13 12:34:22.231: INFO: 	Container log-collector ready: true, restart count 0
  Sep 13 12:34:22.231: INFO: csi-rbdplugin-provisioner-78947cbcdb-sdpts from rook-ceph started at 2024-09-13 09:57:42 +0000 UTC (6 container statuses recorded)
  Sep 13 12:34:22.231: INFO: 	Container csi-attacher ready: true, restart count 0
  Sep 13 12:34:22.231: INFO: 	Container csi-provisioner ready: true, restart count 0
  Sep 13 12:34:22.231: INFO: 	Container csi-rbdplugin ready: true, restart count 0
  Sep 13 12:34:22.231: INFO: 	Container csi-resizer ready: true, restart count 0
  Sep 13 12:34:22.231: INFO: 	Container csi-snapshotter ready: true, restart count 0
  Sep 13 12:34:22.231: INFO: 	Container log-collector ready: true, restart count 0
  Sep 13 12:34:22.231: INFO: csi-rbdplugin-tjtg5 from rook-ceph started at 2024-09-12 04:28:26 +0000 UTC (3 container statuses recorded)
  Sep 13 12:34:22.231: INFO: 	Container csi-rbdplugin ready: true, restart count 2
  Sep 13 12:34:22.231: INFO: 	Container driver-registrar ready: true, restart count 2
  Sep 13 12:34:22.232: INFO: 	Container log-collector ready: true, restart count 1
  Sep 13 12:34:22.232: INFO: rook-ceph-crashcollector-cncf-2-66bdbb4dc-k99dz from rook-ceph started at 2024-09-13 10:34:53 +0000 UTC (1 container statuses recorded)
  Sep 13 12:34:22.232: INFO: 	Container ceph-crash ready: true, restart count 0
  Sep 13 12:34:22.232: INFO: rook-ceph-exporter-cncf-2-69c7b74bf6-rddt9 from rook-ceph started at 2024-09-13 10:34:56 +0000 UTC (1 container statuses recorded)
  Sep 13 12:34:22.232: INFO: 	Container ceph-exporter ready: true, restart count 0
  Sep 13 12:34:22.232: INFO: rook-ceph-mds-myfs-a-77ccbf966b-dv275 from rook-ceph started at 2024-09-13 09:52:44 +0000 UTC (2 container statuses recorded)
  Sep 13 12:34:22.232: INFO: 	Container log-collector ready: true, restart count 0
  Sep 13 12:34:22.232: INFO: 	Container mds ready: true, restart count 11
  Sep 13 12:34:22.232: INFO: rook-ceph-mgr-a-85d9858989-j5hfp from rook-ceph started at 2024-09-13 09:52:44 +0000 UTC (3 container statuses recorded)
  Sep 13 12:34:22.232: INFO: 	Container log-collector ready: true, restart count 0
  Sep 13 12:34:22.232: INFO: 	Container mgr ready: true, restart count 15
  Sep 13 12:34:22.232: INFO: 	Container watch-active ready: true, restart count 0
  Sep 13 12:34:22.232: INFO: rook-ceph-mon-a-586dfd7d45-8dpxm from rook-ceph started at 2024-09-13 09:31:03 +0000 UTC (2 container statuses recorded)
  Sep 13 12:34:22.232: INFO: 	Container log-collector ready: true, restart count 0
  Sep 13 12:34:22.232: INFO: 	Container mon ready: true, restart count 0
  Sep 13 12:34:22.232: INFO: rook-ceph-operator-5f86b7cfd4-dqxdc from rook-ceph started at 2024-09-13 10:34:50 +0000 UTC (1 container statuses recorded)
  Sep 13 12:34:22.232: INFO: 	Container rook-ceph-operator ready: true, restart count 0
  Sep 13 12:34:22.232: INFO: rook-ceph-osd-2-7c6b7cbf57-9p8bq from rook-ceph started at 2024-09-13 09:43:44 +0000 UTC (2 container statuses recorded)
  Sep 13 12:34:22.232: INFO: 	Container log-collector ready: true, restart count 0
  Sep 13 12:34:22.232: INFO: 	Container osd ready: true, restart count 0
  Sep 13 12:34:22.232: INFO: rook-ceph-osd-prepare-cncf-2-2cltm from rook-ceph started at 2024-09-13 10:35:23 +0000 UTC (1 container statuses recorded)
  Sep 13 12:34:22.232: INFO: 	Container provision ready: false, restart count 0
  Sep 13 12:34:22.232: INFO: sonobuoy-systemd-logs-daemon-set-1cc6cc51fb6b46e1-kpx2t from sonobuoy started at 2024-09-13 12:12:20 +0000 UTC (2 container statuses recorded)
  Sep 13 12:34:22.232: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep 13 12:34:22.232: INFO: 	Container systemd-logs ready: true, restart count 0
  Sep 13 12:34:22.232: INFO: trombone-remote-app-6497cdc6ff-f2gsz from trombone started at 2024-09-13 10:06:40 +0000 UTC (2 container statuses recorded)
  Sep 13 12:34:22.232: INFO: 	Container istio-proxy ready: true, restart count 0
  Sep 13 12:34:22.232: INFO: 	Container trombone-remote-app ready: true, restart count 0
  Sep 13 12:34:22.232: INFO: viola-api-admin-d66495c9c-tcsh6 from viola started at 2024-09-13 10:06:35 +0000 UTC (2 container statuses recorded)
  Sep 13 12:34:22.232: INFO: 	Container istio-proxy ready: true, restart count 0
  Sep 13 12:34:22.232: INFO: 	Container viola-api ready: true, restart count 0
  Sep 13 12:34:22.232: INFO: viola-remote-app-7d5b58b94c-dlvn4 from viola started at 2024-09-13 10:06:40 +0000 UTC (2 container statuses recorded)
  Sep 13 12:34:22.232: INFO: 	Container istio-proxy ready: true, restart count 0
  Sep 13 12:34:22.232: INFO: 	Container viola-remote-app ready: true, restart count 0
  Sep 13 12:34:22.232: INFO: 
  Logging pods the apiserver thinks is on node cncf-3 before test
  Sep 13 12:34:22.249: INFO: oauth2-redis-admin-3 from auth started at 2024-09-13 10:39:23 +0000 UTC (1 container statuses recorded)
  Sep 13 12:34:22.249: INFO: 	Container redis ready: true, restart count 0
  Sep 13 12:34:22.249: INFO: oauth2-redis-admin-5 from auth started at 2024-09-13 10:39:33 +0000 UTC (1 container statuses recorded)
  Sep 13 12:34:22.249: INFO: 	Container redis ready: true, restart count 0
  Sep 13 12:34:22.249: INFO: my-cluster-kafka-2 from dataplatform started at 2024-09-13 10:39:07 +0000 UTC (1 container statuses recorded)
  Sep 13 12:34:22.249: INFO: 	Container kafka ready: true, restart count 2
  Sep 13 12:34:22.249: INFO: my-cluster-zookeeper-1 from dataplatform started at 2024-09-13 10:39:07 +0000 UTC (1 container statuses recorded)
  Sep 13 12:34:22.249: INFO: 	Container zookeeper ready: true, restart count 0
  Sep 13 12:34:22.249: INFO: redis-0 from dataplatform started at 2024-09-13 10:36:50 +0000 UTC (1 container statuses recorded)
  Sep 13 12:34:22.249: INFO: 	Container redis ready: true, restart count 0
  Sep 13 12:34:22.249: INFO: vault-2 from dataplatform started at 2024-09-13 10:36:26 +0000 UTC (1 container statuses recorded)
  Sep 13 12:34:22.249: INFO: 	Container vault ready: true, restart count 0
  Sep 13 12:34:22.249: INFO: vault-unsealer-28770510-pp7hl from dataplatform started at 2024-09-13 12:30:00 +0000 UTC (1 container statuses recorded)
  Sep 13 12:34:22.249: INFO: 	Container unsealer ready: false, restart count 0
  Sep 13 12:34:22.249: INFO: cilium-gpk6m from kube-system started at 2024-09-13 10:34:22 +0000 UTC (1 container statuses recorded)
  Sep 13 12:34:22.249: INFO: 	Container cilium-agent ready: true, restart count 0
  Sep 13 12:34:22.249: INFO: cilium-operator-5d64788c99-v6sqx from kube-system started at 2024-09-13 10:34:22 +0000 UTC (1 container statuses recorded)
  Sep 13 12:34:22.249: INFO: 	Container cilium-operator ready: true, restart count 0
  Sep 13 12:34:22.249: INFO: kube-proxy-4wnlq from kube-system started at 2024-09-13 07:33:22 +0000 UTC (1 container statuses recorded)
  Sep 13 12:34:22.249: INFO: 	Container kube-proxy ready: true, restart count 1
  Sep 13 12:34:22.250: INFO: nginx-proxy-cncf-3 from kube-system started at 2024-09-13 10:34:20 +0000 UTC (1 container statuses recorded)
  Sep 13 12:34:22.250: INFO: 	Container nginx-proxy ready: true, restart count 3
  Sep 13 12:34:22.250: INFO: csi-cephfsplugin-n284w from rook-ceph started at 2024-09-12 15:12:42 +0000 UTC (3 container statuses recorded)
  Sep 13 12:34:22.250: INFO: 	Container csi-cephfsplugin ready: true, restart count 1
  Sep 13 12:34:22.250: INFO: 	Container driver-registrar ready: true, restart count 1
  Sep 13 12:34:22.250: INFO: 	Container log-collector ready: true, restart count 1
  Sep 13 12:34:22.250: INFO: csi-rbdplugin-dc7ng from rook-ceph started at 2024-09-12 15:12:38 +0000 UTC (3 container statuses recorded)
  Sep 13 12:34:22.250: INFO: 	Container csi-rbdplugin ready: true, restart count 1
  Sep 13 12:34:22.250: INFO: 	Container driver-registrar ready: true, restart count 1
  Sep 13 12:34:22.250: INFO: 	Container log-collector ready: true, restart count 1
  Sep 13 12:34:22.250: INFO: rook-ceph-crashcollector-cncf-3-65c69f6bdd-7q78k from rook-ceph started at 2024-09-13 10:34:52 +0000 UTC (1 container statuses recorded)
  Sep 13 12:34:22.250: INFO: 	Container ceph-crash ready: true, restart count 0
  Sep 13 12:34:22.250: INFO: rook-ceph-exporter-cncf-3-6cd4c7b6f5-qscfr from rook-ceph started at 2024-09-13 10:34:52 +0000 UTC (1 container statuses recorded)
  Sep 13 12:34:22.250: INFO: 	Container ceph-exporter ready: true, restart count 0
  Sep 13 12:34:22.250: INFO: rook-ceph-mds-myfs-b-6f56dc888d-44n6b from rook-ceph started at 2024-09-13 10:34:55 +0000 UTC (2 container statuses recorded)
  Sep 13 12:34:22.250: INFO: 	Container log-collector ready: true, restart count 0
  Sep 13 12:34:22.250: INFO: 	Container mds ready: true, restart count 1
  Sep 13 12:34:22.250: INFO: rook-ceph-mgr-b-57755d7888-zxn4r from rook-ceph started at 2024-09-13 10:34:55 +0000 UTC (3 container statuses recorded)
  Sep 13 12:34:22.250: INFO: 	Container log-collector ready: true, restart count 0
  Sep 13 12:34:22.250: INFO: 	Container mgr ready: true, restart count 0
  Sep 13 12:34:22.250: INFO: 	Container watch-active ready: true, restart count 0
  Sep 13 12:34:22.250: INFO: rook-ceph-mon-d-78554cdc5c-tzvkc from rook-ceph started at 2024-09-13 10:34:52 +0000 UTC (2 container statuses recorded)
  Sep 13 12:34:22.250: INFO: 	Container log-collector ready: true, restart count 0
  Sep 13 12:34:22.250: INFO: 	Container mon ready: true, restart count 0
  Sep 13 12:34:22.250: INFO: rook-ceph-osd-1-697c857c8f-qh46w from rook-ceph started at 2024-09-13 10:34:52 +0000 UTC (2 container statuses recorded)
  Sep 13 12:34:22.250: INFO: 	Container log-collector ready: true, restart count 0
  Sep 13 12:34:22.250: INFO: 	Container osd ready: true, restart count 0
  Sep 13 12:34:22.250: INFO: rook-ceph-osd-prepare-cncf-3-28ttx from rook-ceph started at 2024-09-13 10:35:26 +0000 UTC (1 container statuses recorded)
  Sep 13 12:34:22.250: INFO: 	Container provision ready: false, restart count 0
  Sep 13 12:34:22.250: INFO: rook-ceph-tools-7b67b65bd-6vqtt from rook-ceph started at 2024-09-13 10:34:55 +0000 UTC (1 container statuses recorded)
  Sep 13 12:34:22.250: INFO: 	Container rook-ceph-tools ready: true, restart count 0
  Sep 13 12:34:22.250: INFO: sonobuoy-systemd-logs-daemon-set-1cc6cc51fb6b46e1-p7scg from sonobuoy started at 2024-09-13 12:12:20 +0000 UTC (2 container statuses recorded)
  Sep 13 12:34:22.250: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep 13 12:34:22.250: INFO: 	Container systemd-logs ready: true, restart count 0
  Sep 13 12:34:22.250: INFO: 
  Logging pods the apiserver thinks is on node cncf-4 before test
  Sep 13 12:34:22.268: INFO: oauth2-proxy-admin-74cd8b4747-zb4v9 from auth started at 2024-09-13 12:30:02 +0000 UTC (1 container statuses recorded)
  Sep 13 12:34:22.268: INFO: 	Container oauth2-proxy-admin ready: true, restart count 0
  Sep 13 12:34:22.268: INFO: oauth2-redis-admin-2 from auth started at 2024-09-13 10:39:13 +0000 UTC (1 container statuses recorded)
  Sep 13 12:34:22.268: INFO: 	Container redis ready: true, restart count 0
  Sep 13 12:34:22.268: INFO: oauth2-redis-admin-4 from auth started at 2024-09-13 10:39:28 +0000 UTC (1 container statuses recorded)
  Sep 13 12:34:22.268: INFO: 	Container redis ready: true, restart count 0
  Sep 13 12:34:22.268: INFO: redis-cluster-maintenance-cronjob-28770510-4jhj8 from auth started at 2024-09-13 12:30:00 +0000 UTC (1 container statuses recorded)
  Sep 13 12:34:22.268: INFO: 	Container redis-cluster-check ready: false, restart count 0
  Sep 13 12:34:22.268: INFO: maestro-event-pusher-754554d8bc-rnszn from cmp started at 2024-09-13 10:41:42 +0000 UTC (2 container statuses recorded)
  Sep 13 12:34:22.268: INFO: 	Container istio-proxy ready: true, restart count 0
  Sep 13 12:34:22.268: INFO: 	Container maestro-event-pusher ready: true, restart count 0
  Sep 13 12:34:22.268: INFO: mariadb-backup-cronjob-28770510-jr569 from dataplatform started at 2024-09-13 12:30:00 +0000 UTC (1 container statuses recorded)
  Sep 13 12:34:22.268: INFO: 	Container mariadb-backup-cronjob ready: false, restart count 0
  Sep 13 12:34:22.268: INFO: mariadb-sts-1 from dataplatform started at 2024-09-13 10:39:14 +0000 UTC (1 container statuses recorded)
  Sep 13 12:34:22.268: INFO: 	Container mariadb ready: true, restart count 0
  Sep 13 12:34:22.268: INFO: my-cluster-entity-operator-764cdd6bfb-w8n8x from dataplatform started at 2024-09-13 10:41:42 +0000 UTC (3 container statuses recorded)
  Sep 13 12:34:22.268: INFO: 	Container tls-sidecar ready: true, restart count 0
  Sep 13 12:34:22.268: INFO: 	Container topic-operator ready: true, restart count 0
  Sep 13 12:34:22.268: INFO: 	Container user-operator ready: true, restart count 0
  Sep 13 12:34:22.268: INFO: my-cluster-kafka-0 from dataplatform started at 2024-09-13 10:39:07 +0000 UTC (1 container statuses recorded)
  Sep 13 12:34:22.268: INFO: 	Container kafka ready: true, restart count 2
  Sep 13 12:34:22.268: INFO: my-cluster-zookeeper-0 from dataplatform started at 2024-09-13 10:39:07 +0000 UTC (1 container statuses recorded)
  Sep 13 12:34:22.268: INFO: 	Container zookeeper ready: true, restart count 0
  Sep 13 12:34:22.268: INFO: vault-backup-cronjob-28770510-tzft4 from dataplatform started at 2024-09-13 12:30:00 +0000 UTC (1 container statuses recorded)
  Sep 13 12:34:22.268: INFO: 	Container clean-backup ready: false, restart count 0
  Sep 13 12:34:22.268: INFO: cilium-fj5rn from kube-system started at 2024-09-13 08:50:53 +0000 UTC (1 container statuses recorded)
  Sep 13 12:34:22.268: INFO: 	Container cilium-agent ready: true, restart count 1
  Sep 13 12:34:22.268: INFO: kube-proxy-2zm9n from kube-system started at 2024-09-13 07:33:08 +0000 UTC (1 container statuses recorded)
  Sep 13 12:34:22.268: INFO: 	Container kube-proxy ready: true, restart count 1
  Sep 13 12:34:22.268: INFO: nginx-proxy-cncf-4 from kube-system started at 2024-09-13 10:36:48 +0000 UTC (1 container statuses recorded)
  Sep 13 12:34:22.268: INFO: 	Container nginx-proxy ready: true, restart count 2
  Sep 13 12:34:22.268: INFO: csi-cephfsplugin-mj44d from rook-ceph started at 2024-09-12 04:28:27 +0000 UTC (3 container statuses recorded)
  Sep 13 12:34:22.268: INFO: 	Container csi-cephfsplugin ready: true, restart count 1
  Sep 13 12:34:22.268: INFO: 	Container driver-registrar ready: true, restart count 1
  Sep 13 12:34:22.268: INFO: 	Container log-collector ready: true, restart count 1
  Sep 13 12:34:22.268: INFO: csi-rbdplugin-jr8hc from rook-ceph started at 2024-09-12 04:28:26 +0000 UTC (3 container statuses recorded)
  Sep 13 12:34:22.268: INFO: 	Container csi-rbdplugin ready: true, restart count 1
  Sep 13 12:34:22.268: INFO: 	Container driver-registrar ready: true, restart count 1
  Sep 13 12:34:22.268: INFO: 	Container log-collector ready: true, restart count 1
  Sep 13 12:34:22.268: INFO: rook-ceph-crashcollector-cncf-4-7965585cf9-cs6jz from rook-ceph started at 2024-09-13 10:37:04 +0000 UTC (1 container statuses recorded)
  Sep 13 12:34:22.268: INFO: 	Container ceph-crash ready: true, restart count 0
  Sep 13 12:34:22.268: INFO: rook-ceph-exporter-cncf-4-7b7c7f4496-fn8xx from rook-ceph started at 2024-09-13 10:37:04 +0000 UTC (1 container statuses recorded)
  Sep 13 12:34:22.268: INFO: 	Container ceph-exporter ready: true, restart count 0
  Sep 13 12:34:22.268: INFO: rook-ceph-osd-3-54cb9dd4d7-gzszb from rook-ceph started at 2024-09-13 10:37:04 +0000 UTC (2 container statuses recorded)
  Sep 13 12:34:22.268: INFO: 	Container log-collector ready: true, restart count 0
  Sep 13 12:34:22.268: INFO: 	Container osd ready: true, restart count 0
  Sep 13 12:34:22.268: INFO: sonobuoy from sonobuoy started at 2024-09-13 12:12:19 +0000 UTC (1 container statuses recorded)
  Sep 13 12:34:22.268: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Sep 13 12:34:22.268: INFO: sonobuoy-e2e-job-781d9a3c1a264d66 from sonobuoy started at 2024-09-13 12:12:20 +0000 UTC (2 container statuses recorded)
  Sep 13 12:34:22.268: INFO: 	Container e2e ready: true, restart count 0
  Sep 13 12:34:22.268: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep 13 12:34:22.268: INFO: sonobuoy-systemd-logs-daemon-set-1cc6cc51fb6b46e1-pt4k7 from sonobuoy started at 2024-09-13 12:12:20 +0000 UTC (2 container statuses recorded)
  Sep 13 12:34:22.268: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep 13 12:34:22.268: INFO: 	Container systemd-logs ready: true, restart count 0
  Sep 13 12:34:22.268: INFO: trombone-pipeline-api-admin-6457988cdb-kgvph from trombone started at 2024-09-13 10:38:32 +0000 UTC (2 container statuses recorded)
  Sep 13 12:34:22.268: INFO: 	Container istio-proxy ready: true, restart count 0
  Sep 13 12:34:22.268: INFO: 	Container trombone-pipeline-api ready: true, restart count 4
  Sep 13 12:34:22.268: INFO: 
  Logging pods the apiserver thinks is on node cncf-5 before test
  Sep 13 12:34:22.287: INFO: keycloak-76cc8f6cb7-x6gfj from auth started at 2024-09-12 08:04:31 +0000 UTC (1 container statuses recorded)
  Sep 13 12:34:22.288: INFO: 	Container keycloak ready: true, restart count 1
  Sep 13 12:34:22.288: INFO: oauth2-proxy-admin-74cd8b4747-qsw64 from auth started at 2024-09-13 12:30:04 +0000 UTC (1 container statuses recorded)
  Sep 13 12:34:22.288: INFO: 	Container oauth2-proxy-admin ready: true, restart count 0
  Sep 13 12:34:22.288: INFO: oauth2-redis-admin-1 from auth started at 2024-09-13 08:22:43 +0000 UTC (1 container statuses recorded)
  Sep 13 12:34:22.288: INFO: 	Container redis ready: true, restart count 0
  Sep 13 12:34:22.288: INFO: maestro-iam-adapter-api-84d7945fdd-vt9vl from cmp started at 2024-09-13 05:36:03 +0000 UTC (2 container statuses recorded)
  Sep 13 12:34:22.289: INFO: 	Container istio-proxy ready: true, restart count 1
  Sep 13 12:34:22.289: INFO: 	Container maestro-iam-adapter-api ready: true, restart count 1
  Sep 13 12:34:22.289: INFO: notification-adapter-api-67cb5bfffc-72vhz from cmp started at 2024-09-13 05:36:03 +0000 UTC (2 container statuses recorded)
  Sep 13 12:34:22.289: INFO: 	Container istio-proxy ready: true, restart count 1
  Sep 13 12:34:22.290: INFO: 	Container noti-api ready: true, restart count 1
  Sep 13 12:34:22.290: INFO: mariadb-maxscale-745d5dfb5f-cdhhn from dataplatform started at 2024-09-12 08:30:28 +0000 UTC (1 container statuses recorded)
  Sep 13 12:34:22.290: INFO: 	Container maxscale ready: true, restart count 1
  Sep 13 12:34:22.290: INFO: mariadb-sts-0 from dataplatform started at 2024-09-12 07:06:14 +0000 UTC (1 container statuses recorded)
  Sep 13 12:34:22.291: INFO: 	Container mariadb ready: true, restart count 1
  Sep 13 12:34:22.291: INFO: my-cluster-kafka-1 from dataplatform started at 2024-09-12 07:07:17 +0000 UTC (1 container statuses recorded)
  Sep 13 12:34:22.291: INFO: 	Container kafka ready: true, restart count 2
  Sep 13 12:34:22.291: INFO: my-cluster-zookeeper-2 from dataplatform started at 2024-09-12 07:06:30 +0000 UTC (1 container statuses recorded)
  Sep 13 12:34:22.292: INFO: 	Container zookeeper ready: true, restart count 1
  Sep 13 12:34:22.292: INFO: strimzi-cluster-operator-7fbfc5c86f-94ths from dataplatform started at 2024-09-13 08:34:15 +0000 UTC (1 container statuses recorded)
  Sep 13 12:34:22.293: INFO: 	Container strimzi-cluster-operator ready: true, restart count 1
  Sep 13 12:34:22.293: INFO: vault-0 from dataplatform started at 2024-09-12 07:06:14 +0000 UTC (1 container statuses recorded)
  Sep 13 12:34:22.294: INFO: 	Container vault ready: true, restart count 1
  Sep 13 12:34:22.294: INFO: ingress-nginx-admission-create-pqp74 from ingress-nginx started at 2024-09-12 03:44:55 +0000 UTC (1 container statuses recorded)
  Sep 13 12:34:22.294: INFO: 	Container create ready: false, restart count 0
  Sep 13 12:34:22.294: INFO: cilium-2dbxd from kube-system started at 2024-09-13 08:50:53 +0000 UTC (1 container statuses recorded)
  Sep 13 12:34:22.294: INFO: 	Container cilium-agent ready: true, restart count 1
  Sep 13 12:34:22.295: INFO: coredns-69db55dd76-vzt9s from kube-system started at 2024-09-13 08:22:23 +0000 UTC (1 container statuses recorded)
  Sep 13 12:34:22.295: INFO: 	Container coredns ready: true, restart count 1
  Sep 13 12:34:22.295: INFO: kube-proxy-l5kxx from kube-system started at 2024-09-13 08:27:26 +0000 UTC (1 container statuses recorded)
  Sep 13 12:34:22.295: INFO: 	Container kube-proxy ready: true, restart count 1
  Sep 13 12:34:22.295: INFO: nginx-proxy-cncf-5 from kube-system started at 2024-09-13 10:38:05 +0000 UTC (1 container statuses recorded)
  Sep 13 12:34:22.296: INFO: 	Container nginx-proxy ready: true, restart count 2
  Sep 13 12:34:22.296: INFO: csi-cephfsplugin-m68bj from rook-ceph started at 2024-09-12 04:28:27 +0000 UTC (3 container statuses recorded)
  Sep 13 12:34:22.297: INFO: 	Container csi-cephfsplugin ready: true, restart count 1
  Sep 13 12:34:22.297: INFO: 	Container driver-registrar ready: true, restart count 1
  Sep 13 12:34:22.297: INFO: 	Container log-collector ready: true, restart count 1
  Sep 13 12:34:22.297: INFO: csi-cephfsplugin-provisioner-69554c6fcb-jtmn4 from rook-ceph started at 2024-09-12 04:28:27 +0000 UTC (6 container statuses recorded)
  Sep 13 12:34:22.297: INFO: 	Container csi-attacher ready: true, restart count 2
  Sep 13 12:34:22.297: INFO: 	Container csi-cephfsplugin ready: true, restart count 1
  Sep 13 12:34:22.298: INFO: 	Container csi-provisioner ready: true, restart count 2
  Sep 13 12:34:22.298: INFO: 	Container csi-resizer ready: true, restart count 1
  Sep 13 12:34:22.298: INFO: 	Container csi-snapshotter ready: true, restart count 1
  Sep 13 12:34:22.298: INFO: 	Container log-collector ready: true, restart count 1
  Sep 13 12:34:22.298: INFO: csi-rbdplugin-cjlrl from rook-ceph started at 2024-09-12 04:28:26 +0000 UTC (3 container statuses recorded)
  Sep 13 12:34:22.298: INFO: 	Container csi-rbdplugin ready: true, restart count 1
  Sep 13 12:34:22.298: INFO: 	Container driver-registrar ready: true, restart count 1
  Sep 13 12:34:22.298: INFO: 	Container log-collector ready: true, restart count 1
  Sep 13 12:34:22.298: INFO: csi-rbdplugin-provisioner-78947cbcdb-zjs8f from rook-ceph started at 2024-09-12 08:30:28 +0000 UTC (6 container statuses recorded)
  Sep 13 12:34:22.298: INFO: 	Container csi-attacher ready: true, restart count 5
  Sep 13 12:34:22.299: INFO: 	Container csi-provisioner ready: true, restart count 2
  Sep 13 12:34:22.299: INFO: 	Container csi-rbdplugin ready: true, restart count 1
  Sep 13 12:34:22.299: INFO: 	Container csi-resizer ready: true, restart count 1
  Sep 13 12:34:22.299: INFO: 	Container csi-snapshotter ready: true, restart count 4
  Sep 13 12:34:22.299: INFO: 	Container log-collector ready: true, restart count 1
  Sep 13 12:34:22.299: INFO: rook-ceph-crashcollector-cncf-5-8f85f95b8-qtqwc from rook-ceph started at 2024-09-13 10:38:56 +0000 UTC (1 container statuses recorded)
  Sep 13 12:34:22.299: INFO: 	Container ceph-crash ready: true, restart count 0
  Sep 13 12:34:22.299: INFO: rook-ceph-exporter-cncf-5-7678cb8495-mgpgl from rook-ceph started at 2024-09-13 10:38:56 +0000 UTC (1 container statuses recorded)
  Sep 13 12:34:22.299: INFO: 	Container ceph-exporter ready: true, restart count 0
  Sep 13 12:34:22.299: INFO: rook-ceph-mon-b-56676fdd5-5hdhl from rook-ceph started at 2024-09-13 10:38:56 +0000 UTC (2 container statuses recorded)
  Sep 13 12:34:22.299: INFO: 	Container log-collector ready: true, restart count 0
  Sep 13 12:34:22.299: INFO: 	Container mon ready: true, restart count 0
  Sep 13 12:34:22.299: INFO: rook-ceph-osd-0-7574f4df4-bncm9 from rook-ceph started at 2024-09-13 10:38:56 +0000 UTC (2 container statuses recorded)
  Sep 13 12:34:22.299: INFO: 	Container log-collector ready: true, restart count 0
  Sep 13 12:34:22.299: INFO: 	Container osd ready: true, restart count 0
  Sep 13 12:34:22.299: INFO: rook-ceph-osd-prepare-cncf-5-f2kll from rook-ceph started at 2024-09-12 17:18:35 +0000 UTC (1 container statuses recorded)
  Sep 13 12:34:22.300: INFO: 	Container provision ready: false, restart count 0
  Sep 13 12:34:22.300: INFO: sonobuoy-systemd-logs-daemon-set-1cc6cc51fb6b46e1-27xgb from sonobuoy started at 2024-09-13 12:12:20 +0000 UTC (2 container statuses recorded)
  Sep 13 12:34:22.300: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep 13 12:34:22.300: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: verifying the node has the label node cncf-2 @ 09/13/24 12:34:22.36
  STEP: verifying the node has the label node cncf-3 @ 09/13/24 12:34:22.379
  STEP: verifying the node has the label node cncf-4 @ 09/13/24 12:34:22.396
  STEP: verifying the node has the label node cncf-5 @ 09/13/24 12:34:22.421
  Sep 13 12:34:22.452: INFO: Pod keycloak-76cc8f6cb7-cj7kf requesting resource cpu=0m on Node cncf-2
  Sep 13 12:34:22.452: INFO: Pod keycloak-76cc8f6cb7-x6gfj requesting resource cpu=0m on Node cncf-5
  Sep 13 12:34:22.452: INFO: Pod mariadb-keycloak-5b96c4c67d-txbrd requesting resource cpu=0m on Node cncf-2
  Sep 13 12:34:22.452: INFO: Pod oauth2-proxy-admin-74cd8b4747-qsw64 requesting resource cpu=0m on Node cncf-5
  Sep 13 12:34:22.452: INFO: Pod oauth2-proxy-admin-74cd8b4747-zb4v9 requesting resource cpu=0m on Node cncf-4
  Sep 13 12:34:22.452: INFO: Pod oauth2-redis-admin-0 requesting resource cpu=0m on Node cncf-2
  Sep 13 12:34:22.452: INFO: Pod oauth2-redis-admin-1 requesting resource cpu=0m on Node cncf-5
  Sep 13 12:34:22.452: INFO: Pod oauth2-redis-admin-2 requesting resource cpu=0m on Node cncf-4
  Sep 13 12:34:22.452: INFO: Pod oauth2-redis-admin-3 requesting resource cpu=0m on Node cncf-3
  Sep 13 12:34:22.452: INFO: Pod oauth2-redis-admin-4 requesting resource cpu=0m on Node cncf-4
  Sep 13 12:34:22.452: INFO: Pod oauth2-redis-admin-5 requesting resource cpu=0m on Node cncf-3
  Sep 13 12:34:22.452: INFO: Pod cloud-service-api-75445b94f9-sjmqd requesting resource cpu=100m on Node cncf-2
  Sep 13 12:34:22.452: INFO: Pod cloud-service-collector-6bd966f4d6-tqsdq requesting resource cpu=100m on Node cncf-2
  Sep 13 12:34:22.452: INFO: Pod maestro-auth-gateway-admin-7b4b969475-75b5g requesting resource cpu=100m on Node cncf-2
  Sep 13 12:34:22.452: INFO: Pod maestro-common-api-admin-b46b8f8b8-df9xr requesting resource cpu=100m on Node cncf-2
  Sep 13 12:34:22.452: INFO: Pod maestro-event-pusher-754554d8bc-rnszn requesting resource cpu=100m on Node cncf-4
  Sep 13 12:34:22.452: INFO: Pod maestro-host-app-admin-7d644fbb7b-pdwbt requesting resource cpu=100m on Node cncf-2
  Sep 13 12:34:22.452: INFO: Pod maestro-iam-adapter-api-84d7945fdd-vt9vl requesting resource cpu=100m on Node cncf-5
  Sep 13 12:34:22.452: INFO: Pod maestro-remote-app-admin-6f86d5cb87-n7x59 requesting resource cpu=100m on Node cncf-2
  Sep 13 12:34:22.452: INFO: Pod notification-adapter-api-67cb5bfffc-72vhz requesting resource cpu=100m on Node cncf-5
  Sep 13 12:34:22.452: INFO: Pod mariadb-maxscale-745d5dfb5f-9m26l requesting resource cpu=0m on Node cncf-2
  Sep 13 12:34:22.452: INFO: Pod mariadb-maxscale-745d5dfb5f-cdhhn requesting resource cpu=0m on Node cncf-5
  Sep 13 12:34:22.452: INFO: Pod mariadb-sts-0 requesting resource cpu=0m on Node cncf-5
  Sep 13 12:34:22.452: INFO: Pod mariadb-sts-1 requesting resource cpu=0m on Node cncf-4
  Sep 13 12:34:22.452: INFO: Pod my-cluster-entity-operator-764cdd6bfb-w8n8x requesting resource cpu=0m on Node cncf-4
  Sep 13 12:34:22.452: INFO: Pod my-cluster-kafka-0 requesting resource cpu=0m on Node cncf-4
  Sep 13 12:34:22.452: INFO: Pod my-cluster-kafka-1 requesting resource cpu=0m on Node cncf-5
  Sep 13 12:34:22.452: INFO: Pod my-cluster-kafka-2 requesting resource cpu=0m on Node cncf-3
  Sep 13 12:34:22.452: INFO: Pod my-cluster-zookeeper-0 requesting resource cpu=0m on Node cncf-4
  Sep 13 12:34:22.452: INFO: Pod my-cluster-zookeeper-1 requesting resource cpu=0m on Node cncf-3
  Sep 13 12:34:22.452: INFO: Pod my-cluster-zookeeper-2 requesting resource cpu=0m on Node cncf-5
  Sep 13 12:34:22.452: INFO: Pod redis-0 requesting resource cpu=0m on Node cncf-3
  Sep 13 12:34:22.452: INFO: Pod strimzi-cluster-operator-7fbfc5c86f-94ths requesting resource cpu=200m on Node cncf-5
  Sep 13 12:34:22.452: INFO: Pod vault-0 requesting resource cpu=0m on Node cncf-5
  Sep 13 12:34:22.452: INFO: Pod vault-1 requesting resource cpu=0m on Node cncf-2
  Sep 13 12:34:22.452: INFO: Pod vault-2 requesting resource cpu=0m on Node cncf-3
  Sep 13 12:34:22.452: INFO: Pod ingress-nginx-controller-66f986c956-fkb8s requesting resource cpu=100m on Node cncf-2
  Sep 13 12:34:22.452: INFO: Pod istio-gateway-5f7f7c65d8-m5wpn requesting resource cpu=100m on Node cncf-2
  Sep 13 12:34:22.452: INFO: Pod istiod-f77745497-cqmfd requesting resource cpu=500m on Node cncf-2
  Sep 13 12:34:22.452: INFO: Pod cilium-2dbxd requesting resource cpu=0m on Node cncf-5
  Sep 13 12:34:22.452: INFO: Pod cilium-fj5rn requesting resource cpu=0m on Node cncf-4
  Sep 13 12:34:22.452: INFO: Pod cilium-gpk6m requesting resource cpu=0m on Node cncf-3
  Sep 13 12:34:22.452: INFO: Pod cilium-jzdbd requesting resource cpu=0m on Node cncf-2
  Sep 13 12:34:22.452: INFO: Pod cilium-operator-5d64788c99-v6sqx requesting resource cpu=0m on Node cncf-3
  Sep 13 12:34:22.452: INFO: Pod coredns-69db55dd76-vzt9s requesting resource cpu=100m on Node cncf-5
  Sep 13 12:34:22.452: INFO: Pod kube-proxy-2zm9n requesting resource cpu=0m on Node cncf-4
  Sep 13 12:34:22.452: INFO: Pod kube-proxy-4wnlq requesting resource cpu=0m on Node cncf-3
  Sep 13 12:34:22.452: INFO: Pod kube-proxy-c6wbb requesting resource cpu=0m on Node cncf-2
  Sep 13 12:34:22.452: INFO: Pod kube-proxy-l5kxx requesting resource cpu=0m on Node cncf-5
  Sep 13 12:34:22.452: INFO: Pod nginx-proxy-cncf-2 requesting resource cpu=25m on Node cncf-2
  Sep 13 12:34:22.452: INFO: Pod nginx-proxy-cncf-3 requesting resource cpu=25m on Node cncf-3
  Sep 13 12:34:22.452: INFO: Pod nginx-proxy-cncf-4 requesting resource cpu=25m on Node cncf-4
  Sep 13 12:34:22.452: INFO: Pod nginx-proxy-cncf-5 requesting resource cpu=25m on Node cncf-5
  Sep 13 12:34:22.452: INFO: Pod csi-cephfsplugin-k4vk8 requesting resource cpu=0m on Node cncf-2
  Sep 13 12:34:22.452: INFO: Pod csi-cephfsplugin-m68bj requesting resource cpu=0m on Node cncf-5
  Sep 13 12:34:22.452: INFO: Pod csi-cephfsplugin-mj44d requesting resource cpu=0m on Node cncf-4
  Sep 13 12:34:22.452: INFO: Pod csi-cephfsplugin-n284w requesting resource cpu=0m on Node cncf-3
  Sep 13 12:34:22.452: INFO: Pod csi-cephfsplugin-provisioner-69554c6fcb-jtmn4 requesting resource cpu=0m on Node cncf-5
  Sep 13 12:34:22.452: INFO: Pod csi-cephfsplugin-provisioner-69554c6fcb-p7sjj requesting resource cpu=0m on Node cncf-2
  Sep 13 12:34:22.452: INFO: Pod csi-rbdplugin-cjlrl requesting resource cpu=0m on Node cncf-5
  Sep 13 12:34:22.452: INFO: Pod csi-rbdplugin-dc7ng requesting resource cpu=0m on Node cncf-3
  Sep 13 12:34:22.452: INFO: Pod csi-rbdplugin-jr8hc requesting resource cpu=0m on Node cncf-4
  Sep 13 12:34:22.452: INFO: Pod csi-rbdplugin-provisioner-78947cbcdb-sdpts requesting resource cpu=0m on Node cncf-2
  Sep 13 12:34:22.452: INFO: Pod csi-rbdplugin-provisioner-78947cbcdb-zjs8f requesting resource cpu=0m on Node cncf-5
  Sep 13 12:34:22.452: INFO: Pod csi-rbdplugin-tjtg5 requesting resource cpu=0m on Node cncf-2
  Sep 13 12:34:22.452: INFO: Pod rook-ceph-crashcollector-cncf-2-66bdbb4dc-k99dz requesting resource cpu=0m on Node cncf-2
  Sep 13 12:34:22.452: INFO: Pod rook-ceph-crashcollector-cncf-3-65c69f6bdd-7q78k requesting resource cpu=0m on Node cncf-3
  Sep 13 12:34:22.452: INFO: Pod rook-ceph-crashcollector-cncf-4-7965585cf9-cs6jz requesting resource cpu=0m on Node cncf-4
  Sep 13 12:34:22.452: INFO: Pod rook-ceph-crashcollector-cncf-5-8f85f95b8-qtqwc requesting resource cpu=0m on Node cncf-5
  Sep 13 12:34:22.452: INFO: Pod rook-ceph-exporter-cncf-2-69c7b74bf6-rddt9 requesting resource cpu=0m on Node cncf-2
  Sep 13 12:34:22.452: INFO: Pod rook-ceph-exporter-cncf-3-6cd4c7b6f5-qscfr requesting resource cpu=0m on Node cncf-3
  Sep 13 12:34:22.452: INFO: Pod rook-ceph-exporter-cncf-4-7b7c7f4496-fn8xx requesting resource cpu=0m on Node cncf-4
  Sep 13 12:34:22.452: INFO: Pod rook-ceph-exporter-cncf-5-7678cb8495-mgpgl requesting resource cpu=0m on Node cncf-5
  Sep 13 12:34:22.453: INFO: Pod rook-ceph-mds-myfs-a-77ccbf966b-dv275 requesting resource cpu=0m on Node cncf-2
  Sep 13 12:34:22.453: INFO: Pod rook-ceph-mds-myfs-b-6f56dc888d-44n6b requesting resource cpu=0m on Node cncf-3
  Sep 13 12:34:22.453: INFO: Pod rook-ceph-mgr-a-85d9858989-j5hfp requesting resource cpu=0m on Node cncf-2
  Sep 13 12:34:22.453: INFO: Pod rook-ceph-mgr-b-57755d7888-zxn4r requesting resource cpu=0m on Node cncf-3
  Sep 13 12:34:22.453: INFO: Pod rook-ceph-mon-a-586dfd7d45-8dpxm requesting resource cpu=0m on Node cncf-2
  Sep 13 12:34:22.453: INFO: Pod rook-ceph-mon-b-56676fdd5-5hdhl requesting resource cpu=0m on Node cncf-5
  Sep 13 12:34:22.453: INFO: Pod rook-ceph-mon-d-78554cdc5c-tzvkc requesting resource cpu=0m on Node cncf-3
  Sep 13 12:34:22.453: INFO: Pod rook-ceph-operator-5f86b7cfd4-dqxdc requesting resource cpu=0m on Node cncf-2
  Sep 13 12:34:22.453: INFO: Pod rook-ceph-osd-0-7574f4df4-bncm9 requesting resource cpu=0m on Node cncf-5
  Sep 13 12:34:22.453: INFO: Pod rook-ceph-osd-1-697c857c8f-qh46w requesting resource cpu=0m on Node cncf-3
  Sep 13 12:34:22.453: INFO: Pod rook-ceph-osd-2-7c6b7cbf57-9p8bq requesting resource cpu=0m on Node cncf-2
  Sep 13 12:34:22.453: INFO: Pod rook-ceph-osd-3-54cb9dd4d7-gzszb requesting resource cpu=0m on Node cncf-4
  Sep 13 12:34:22.453: INFO: Pod rook-ceph-tools-7b67b65bd-6vqtt requesting resource cpu=0m on Node cncf-3
  Sep 13 12:34:22.453: INFO: Pod sonobuoy requesting resource cpu=0m on Node cncf-4
  Sep 13 12:34:22.453: INFO: Pod sonobuoy-e2e-job-781d9a3c1a264d66 requesting resource cpu=0m on Node cncf-4
  Sep 13 12:34:22.453: INFO: Pod sonobuoy-systemd-logs-daemon-set-1cc6cc51fb6b46e1-27xgb requesting resource cpu=0m on Node cncf-5
  Sep 13 12:34:22.453: INFO: Pod sonobuoy-systemd-logs-daemon-set-1cc6cc51fb6b46e1-kpx2t requesting resource cpu=0m on Node cncf-2
  Sep 13 12:34:22.453: INFO: Pod sonobuoy-systemd-logs-daemon-set-1cc6cc51fb6b46e1-p7scg requesting resource cpu=0m on Node cncf-3
  Sep 13 12:34:22.453: INFO: Pod sonobuoy-systemd-logs-daemon-set-1cc6cc51fb6b46e1-pt4k7 requesting resource cpu=0m on Node cncf-4
  Sep 13 12:34:22.453: INFO: Pod trombone-pipeline-api-admin-6457988cdb-kgvph requesting resource cpu=100m on Node cncf-4
  Sep 13 12:34:22.453: INFO: Pod trombone-remote-app-6497cdc6ff-f2gsz requesting resource cpu=100m on Node cncf-2
  Sep 13 12:34:22.453: INFO: Pod viola-api-admin-d66495c9c-tcsh6 requesting resource cpu=100m on Node cncf-2
  Sep 13 12:34:22.453: INFO: Pod viola-remote-app-7d5b58b94c-dlvn4 requesting resource cpu=100m on Node cncf-2
  STEP: Starting Pods to consume most of the cluster CPU. @ 09/13/24 12:34:22.453
  Sep 13 12:34:22.453: INFO: Creating a pod which consumes cpu=2432m on Node cncf-5
  Sep 13 12:34:22.466: INFO: Creating a pod which consumes cpu=1662m on Node cncf-2
  Sep 13 12:34:22.471: INFO: Creating a pod which consumes cpu=2782m on Node cncf-3
  Sep 13 12:34:22.482: INFO: Creating a pod which consumes cpu=2642m on Node cncf-4
  STEP: Creating another pod that requires unavailable amount of CPU. @ 09/13/24 12:34:24.513
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-5adb347d-d2c1-4427-84b4-9a81f2de2873.17f4cdd2cedb05ad], Reason = [Scheduled], Message = [Successfully assigned sched-pred-6903/filler-pod-5adb347d-d2c1-4427-84b4-9a81f2de2873 to cncf-3] @ 09/13/24 12:34:24.516
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-5adb347d-d2c1-4427-84b4-9a81f2de2873.17f4cdd2f832e44c], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 09/13/24 12:34:24.516
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-5adb347d-d2c1-4427-84b4-9a81f2de2873.17f4cdd2fb33a87a], Reason = [Created], Message = [Created container filler-pod-5adb347d-d2c1-4427-84b4-9a81f2de2873] @ 09/13/24 12:34:24.516
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-5adb347d-d2c1-4427-84b4-9a81f2de2873.17f4cdd300d1da7f], Reason = [Started], Message = [Started container filler-pod-5adb347d-d2c1-4427-84b4-9a81f2de2873] @ 09/13/24 12:34:24.516
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-753946b3-6bee-4e4d-af86-be34aaa13621.17f4cdd2ce4907a4], Reason = [Scheduled], Message = [Successfully assigned sched-pred-6903/filler-pod-753946b3-6bee-4e4d-af86-be34aaa13621 to cncf-5] @ 09/13/24 12:34:24.516
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-753946b3-6bee-4e4d-af86-be34aaa13621.17f4cdd2f6b55662], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 09/13/24 12:34:24.516
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-753946b3-6bee-4e4d-af86-be34aaa13621.17f4cdd2f98c2b0e], Reason = [Created], Message = [Created container filler-pod-753946b3-6bee-4e4d-af86-be34aaa13621] @ 09/13/24 12:34:24.516
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-753946b3-6bee-4e4d-af86-be34aaa13621.17f4cdd2fd3c37b8], Reason = [Started], Message = [Started container filler-pod-753946b3-6bee-4e4d-af86-be34aaa13621] @ 09/13/24 12:34:24.516
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-95ace488-5007-4fa8-adc4-d1167457c04a.17f4cdd2ce9306da], Reason = [Scheduled], Message = [Successfully assigned sched-pred-6903/filler-pod-95ace488-5007-4fa8-adc4-d1167457c04a to cncf-2] @ 09/13/24 12:34:24.516
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-95ace488-5007-4fa8-adc4-d1167457c04a.17f4cdd2f4f8c338], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 09/13/24 12:34:24.516
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-95ace488-5007-4fa8-adc4-d1167457c04a.17f4cdd2f82e71a6], Reason = [Created], Message = [Created container filler-pod-95ace488-5007-4fa8-adc4-d1167457c04a] @ 09/13/24 12:34:24.517
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-95ace488-5007-4fa8-adc4-d1167457c04a.17f4cdd2fc553ad1], Reason = [Started], Message = [Started container filler-pod-95ace488-5007-4fa8-adc4-d1167457c04a] @ 09/13/24 12:34:24.517
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-e0a7b2aa-eaa6-4e0f-8579-98f623e23610.17f4cdd2cfec0254], Reason = [Scheduled], Message = [Successfully assigned sched-pred-6903/filler-pod-e0a7b2aa-eaa6-4e0f-8579-98f623e23610 to cncf-4] @ 09/13/24 12:34:24.517
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-e0a7b2aa-eaa6-4e0f-8579-98f623e23610.17f4cdd2f5ea63d9], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 09/13/24 12:34:24.517
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-e0a7b2aa-eaa6-4e0f-8579-98f623e23610.17f4cdd2f8e6d790], Reason = [Created], Message = [Created container filler-pod-e0a7b2aa-eaa6-4e0f-8579-98f623e23610] @ 09/13/24 12:34:24.517
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-e0a7b2aa-eaa6-4e0f-8579-98f623e23610.17f4cdd2fd2598b9], Reason = [Started], Message = [Started container filler-pod-e0a7b2aa-eaa6-4e0f-8579-98f623e23610] @ 09/13/24 12:34:24.517
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.17f4cdd348375cb9], Reason = [FailedScheduling], Message = [0/5 nodes are available: 1 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 4 Insufficient cpu. preemption: 0/5 nodes are available: 1 Preemption is not helpful for scheduling, 4 No preemption victims found for incoming pod.] @ 09/13/24 12:34:24.536
  STEP: removing the label node off the node cncf-2 @ 09/13/24 12:34:25.527
  STEP: verifying the node doesn't have the label node @ 09/13/24 12:34:25.542
  STEP: removing the label node off the node cncf-3 @ 09/13/24 12:34:25.545
  STEP: verifying the node doesn't have the label node @ 09/13/24 12:34:25.563
  STEP: removing the label node off the node cncf-4 @ 09/13/24 12:34:25.566
  STEP: verifying the node doesn't have the label node @ 09/13/24 12:34:25.583
  STEP: removing the label node off the node cncf-5 @ 09/13/24 12:34:25.586
  STEP: verifying the node doesn't have the label node @ 09/13/24 12:34:25.6
  Sep 13 12:34:25.603: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-6903" for this suite. @ 09/13/24 12:34:25.606
• [3.446 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:189
  STEP: Creating a kubernetes client @ 09/13/24 12:34:25.617
  Sep 13 12:34:25.617: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename var-expansion @ 09/13/24 12:34:25.619
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:34:25.632
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:34:25.634
  Sep 13 12:34:29.672: INFO: Deleting pod "var-expansion-a4ccaf70-3c30-4812-8cab-e76703710a27" in namespace "var-expansion-3475"
  Sep 13 12:34:29.688: INFO: Wait up to 5m0s for pod "var-expansion-a4ccaf70-3c30-4812-8cab-e76703710a27" to be fully deleted
  Sep 13 12:34:31.694: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-3475" for this suite. @ 09/13/24 12:34:31.699
• [6.088 seconds]
------------------------------
SS
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:166
  STEP: Creating a kubernetes client @ 09/13/24 12:34:31.706
  Sep 13 12:34:31.706: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename replicaset @ 09/13/24 12:34:31.708
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:34:31.734
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:34:31.738
  STEP: Create a ReplicaSet @ 09/13/24 12:34:31.742
  STEP: Verify that the required pods have come up @ 09/13/24 12:34:31.748
  Sep 13 12:34:31.750: INFO: Pod name sample-pod: Found 0 pods out of 3
  Sep 13 12:34:36.754: INFO: Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 09/13/24 12:34:36.754
  Sep 13 12:34:36.756: INFO: Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 09/13/24 12:34:36.756
  STEP: DeleteCollection of the ReplicaSets @ 09/13/24 12:34:36.765
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 09/13/24 12:34:36.774
  Sep 13 12:34:36.783: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-2687" for this suite. @ 09/13/24 12:34:36.788
• [5.102 seconds]
------------------------------
SSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:52
  STEP: Creating a kubernetes client @ 09/13/24 12:34:36.808
  Sep 13 12:34:36.808: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename container-runtime @ 09/13/24 12:34:36.809
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:34:36.834
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:34:36.839
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 09/13/24 12:34:36.85
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 09/13/24 12:34:54.931
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 09/13/24 12:34:54.933
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 09/13/24 12:34:54.936
  STEP: Container 'terminate-cmd-rpa': should be possible to delete @ 09/13/24 12:34:54.936
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 09/13/24 12:34:54.994
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 09/13/24 12:34:57.004
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 09/13/24 12:34:59.017
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 09/13/24 12:34:59.022
  STEP: Container 'terminate-cmd-rpof': should be possible to delete @ 09/13/24 12:34:59.022
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 09/13/24 12:34:59.04
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 09/13/24 12:35:00.046
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 09/13/24 12:35:02.057
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 09/13/24 12:35:02.061
  STEP: Container 'terminate-cmd-rpn': should be possible to delete @ 09/13/24 12:35:02.061
  Sep 13 12:35:02.091: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-223" for this suite. @ 09/13/24 12:35:02.095
• [25.302 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:751
  STEP: Creating a kubernetes client @ 09/13/24 12:35:02.11
  Sep 13 12:35:02.110: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename statefulset @ 09/13/24 12:35:02.112
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:35:02.143
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:35:02.146
  STEP: Creating service test in namespace statefulset-5182 @ 09/13/24 12:35:02.149
  STEP: Creating stateful set ss in namespace statefulset-5182 @ 09/13/24 12:35:02.157
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-5182 @ 09/13/24 12:35:02.172
  Sep 13 12:35:02.174: INFO: Found 0 stateful pods, waiting for 1
  Sep 13 12:35:12.175: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 09/13/24 12:35:12.175
  Sep 13 12:35:12.178: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=statefulset-5182 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Sep 13 12:35:12.306: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Sep 13 12:35:12.306: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Sep 13 12:35:12.306: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Sep 13 12:35:12.310: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  Sep 13 12:35:22.310: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Sep 13 12:35:22.310: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Sep 13 12:35:22.323: INFO: POD   NODE    PHASE    GRACE  CONDITIONS
  Sep 13 12:35:22.323: INFO: ss-0  cncf-3  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-09-13 12:35:03 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-09-13 12:35:02 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-09-13 12:35:12 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-09-13 12:35:12 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-09-13 12:35:02 +0000 UTC  }]
  Sep 13 12:35:22.323: INFO: 
  Sep 13 12:35:22.323: INFO: StatefulSet ss has not reached scale 3, at 1
  Sep 13 12:35:23.328: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.996755963s
  Sep 13 12:35:24.333: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.992455807s
  Sep 13 12:35:25.349: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.987632109s
  Sep 13 12:35:26.353: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.97100456s
  Sep 13 12:35:27.364: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.966365587s
  Sep 13 12:35:28.368: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.956745257s
  Sep 13 12:35:29.372: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.952519432s
  Sep 13 12:35:30.376: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.94768372s
  Sep 13 12:35:31.379: INFO: Verifying statefulset ss doesn't scale past 3 for another 944.628394ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-5182 @ 09/13/24 12:35:32.38
  Sep 13 12:35:32.383: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=statefulset-5182 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Sep 13 12:35:32.483: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Sep 13 12:35:32.483: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Sep 13 12:35:32.483: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Sep 13 12:35:32.483: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=statefulset-5182 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Sep 13 12:35:32.582: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  Sep 13 12:35:32.583: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Sep 13 12:35:32.583: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Sep 13 12:35:32.583: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=statefulset-5182 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Sep 13 12:35:32.753: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  Sep 13 12:35:32.753: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Sep 13 12:35:32.753: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Sep 13 12:35:32.756: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Sep 13 12:35:32.756: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  Sep 13 12:35:32.756: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 09/13/24 12:35:32.756
  Sep 13 12:35:32.758: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=statefulset-5182 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Sep 13 12:35:32.871: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Sep 13 12:35:32.871: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Sep 13 12:35:32.871: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Sep 13 12:35:32.871: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=statefulset-5182 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Sep 13 12:35:32.988: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Sep 13 12:35:32.988: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Sep 13 12:35:32.988: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Sep 13 12:35:32.988: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=statefulset-5182 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Sep 13 12:35:33.098: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Sep 13 12:35:33.098: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Sep 13 12:35:33.098: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Sep 13 12:35:33.098: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Sep 13 12:35:33.101: INFO: Waiting for statefulset status.readyReplicas to become 0, currently 3
  Sep 13 12:35:43.104: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Sep 13 12:35:43.104: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  Sep 13 12:35:43.104: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  Sep 13 12:35:43.113: INFO: POD   NODE    PHASE    GRACE  CONDITIONS
  Sep 13 12:35:43.113: INFO: ss-0  cncf-3  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-09-13 12:35:03 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-09-13 12:35:02 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-09-13 12:35:33 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-09-13 12:35:33 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-09-13 12:35:02 +0000 UTC  }]
  Sep 13 12:35:43.113: INFO: ss-1  cncf-4  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-09-13 12:35:24 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-09-13 12:35:22 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-09-13 12:35:33 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-09-13 12:35:33 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-09-13 12:35:22 +0000 UTC  }]
  Sep 13 12:35:43.113: INFO: ss-2  cncf-2  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-09-13 12:35:23 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-09-13 12:35:22 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-09-13 12:35:33 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-09-13 12:35:33 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-09-13 12:35:22 +0000 UTC  }]
  Sep 13 12:35:43.113: INFO: 
  Sep 13 12:35:43.113: INFO: StatefulSet ss has not reached scale 0, at 3
  Sep 13 12:35:44.120: INFO: POD   NODE    PHASE      GRACE  CONDITIONS
  Sep 13 12:35:44.120: INFO: ss-0  cncf-3  Succeeded  0s     [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-09-13 12:35:43 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-09-13 12:35:02 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-09-13 12:35:33 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-09-13 12:35:33 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-09-13 12:35:02 +0000 UTC  }]
  Sep 13 12:35:44.120: INFO: 
  Sep 13 12:35:44.120: INFO: StatefulSet ss has not reached scale 0, at 1
  Sep 13 12:35:45.124: INFO: Verifying statefulset ss doesn't scale past 0 for another 7.990584286s
  Sep 13 12:35:46.128: INFO: Verifying statefulset ss doesn't scale past 0 for another 6.986370002s
  Sep 13 12:35:47.131: INFO: Verifying statefulset ss doesn't scale past 0 for another 5.982974706s
  Sep 13 12:35:48.134: INFO: Verifying statefulset ss doesn't scale past 0 for another 4.979243091s
  Sep 13 12:35:49.138: INFO: Verifying statefulset ss doesn't scale past 0 for another 3.976821117s
  Sep 13 12:35:50.141: INFO: Verifying statefulset ss doesn't scale past 0 for another 2.973300727s
  Sep 13 12:35:51.145: INFO: Verifying statefulset ss doesn't scale past 0 for another 1.969586405s
  Sep 13 12:35:52.149: INFO: Verifying statefulset ss doesn't scale past 0 for another 964.895411ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-5182 @ 09/13/24 12:35:53.149
  Sep 13 12:35:53.152: INFO: Scaling statefulset ss to 0
  Sep 13 12:35:53.156: INFO: Waiting for statefulset status.replicas updated to 0
  Sep 13 12:35:53.158: INFO: Deleting all statefulset in ns statefulset-5182
  Sep 13 12:35:53.160: INFO: Scaling statefulset ss to 0
  Sep 13 12:35:53.163: INFO: Waiting for statefulset status.replicas updated to 0
  Sep 13 12:35:53.165: INFO: Deleting statefulset ss
  Sep 13 12:35:53.176: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-5182" for this suite. @ 09/13/24 12:35:53.183
• [51.078 seconds]
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:191
  STEP: Creating a kubernetes client @ 09/13/24 12:35:53.189
  Sep 13 12:35:53.189: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename dns @ 09/13/24 12:35:53.19
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:35:53.216
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:35:53.218
  STEP: Creating a test headless service @ 09/13/24 12:35:53.221
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-1289 A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-1289;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-1289 A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-1289;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-1289.svc A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-1289.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-1289.svc A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-1289.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-1289.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-1289.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-1289.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-1289.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-1289.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-1289.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-1289.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-1289.svc;check="$$(dig +notcp +noall +answer +search 100.18.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.18.100_udp@PTR;check="$$(dig +tcp +noall +answer +search 100.18.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.18.100_tcp@PTR;sleep 1; done
   @ 09/13/24 12:35:53.254
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-1289 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-1289;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-1289 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-1289;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-1289.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-1289.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-1289.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-1289.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-1289.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-1289.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-1289.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-1289.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-1289.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-1289.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-1289.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-1289.svc;check="$$(dig +notcp +noall +answer +search 100.18.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.18.100_udp@PTR;check="$$(dig +tcp +noall +answer +search 100.18.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.18.100_tcp@PTR;sleep 1; done
   @ 09/13/24 12:35:53.254
  STEP: creating a pod to probe DNS @ 09/13/24 12:35:53.254
  STEP: submitting the pod to kubernetes @ 09/13/24 12:35:53.254
  STEP: retrieving the pod @ 09/13/24 12:35:55.28
  STEP: looking for the results for each expected name from probers @ 09/13/24 12:35:55.284
  Sep 13 12:35:55.287: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-1289/dns-test-69f293ad-0560-41fc-81ed-439d8fcb3df4: the server could not find the requested resource (get pods dns-test-69f293ad-0560-41fc-81ed-439d8fcb3df4)
  Sep 13 12:35:55.290: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-1289/dns-test-69f293ad-0560-41fc-81ed-439d8fcb3df4: the server could not find the requested resource (get pods dns-test-69f293ad-0560-41fc-81ed-439d8fcb3df4)
  Sep 13 12:35:55.292: INFO: Unable to read wheezy_udp@dns-test-service.dns-1289 from pod dns-1289/dns-test-69f293ad-0560-41fc-81ed-439d8fcb3df4: the server could not find the requested resource (get pods dns-test-69f293ad-0560-41fc-81ed-439d8fcb3df4)
  Sep 13 12:35:55.294: INFO: Unable to read wheezy_tcp@dns-test-service.dns-1289 from pod dns-1289/dns-test-69f293ad-0560-41fc-81ed-439d8fcb3df4: the server could not find the requested resource (get pods dns-test-69f293ad-0560-41fc-81ed-439d8fcb3df4)
  Sep 13 12:35:55.296: INFO: Unable to read wheezy_udp@dns-test-service.dns-1289.svc from pod dns-1289/dns-test-69f293ad-0560-41fc-81ed-439d8fcb3df4: the server could not find the requested resource (get pods dns-test-69f293ad-0560-41fc-81ed-439d8fcb3df4)
  Sep 13 12:35:55.298: INFO: Unable to read wheezy_tcp@dns-test-service.dns-1289.svc from pod dns-1289/dns-test-69f293ad-0560-41fc-81ed-439d8fcb3df4: the server could not find the requested resource (get pods dns-test-69f293ad-0560-41fc-81ed-439d8fcb3df4)
  Sep 13 12:35:55.301: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-1289.svc from pod dns-1289/dns-test-69f293ad-0560-41fc-81ed-439d8fcb3df4: the server could not find the requested resource (get pods dns-test-69f293ad-0560-41fc-81ed-439d8fcb3df4)
  Sep 13 12:35:55.304: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-1289.svc from pod dns-1289/dns-test-69f293ad-0560-41fc-81ed-439d8fcb3df4: the server could not find the requested resource (get pods dns-test-69f293ad-0560-41fc-81ed-439d8fcb3df4)
  Sep 13 12:35:55.314: INFO: Unable to read jessie_udp@dns-test-service from pod dns-1289/dns-test-69f293ad-0560-41fc-81ed-439d8fcb3df4: the server could not find the requested resource (get pods dns-test-69f293ad-0560-41fc-81ed-439d8fcb3df4)
  Sep 13 12:35:55.316: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-1289/dns-test-69f293ad-0560-41fc-81ed-439d8fcb3df4: the server could not find the requested resource (get pods dns-test-69f293ad-0560-41fc-81ed-439d8fcb3df4)
  Sep 13 12:35:55.318: INFO: Unable to read jessie_udp@dns-test-service.dns-1289 from pod dns-1289/dns-test-69f293ad-0560-41fc-81ed-439d8fcb3df4: the server could not find the requested resource (get pods dns-test-69f293ad-0560-41fc-81ed-439d8fcb3df4)
  Sep 13 12:35:55.320: INFO: Unable to read jessie_tcp@dns-test-service.dns-1289 from pod dns-1289/dns-test-69f293ad-0560-41fc-81ed-439d8fcb3df4: the server could not find the requested resource (get pods dns-test-69f293ad-0560-41fc-81ed-439d8fcb3df4)
  Sep 13 12:35:55.323: INFO: Unable to read jessie_udp@dns-test-service.dns-1289.svc from pod dns-1289/dns-test-69f293ad-0560-41fc-81ed-439d8fcb3df4: the server could not find the requested resource (get pods dns-test-69f293ad-0560-41fc-81ed-439d8fcb3df4)
  Sep 13 12:35:55.325: INFO: Unable to read jessie_tcp@dns-test-service.dns-1289.svc from pod dns-1289/dns-test-69f293ad-0560-41fc-81ed-439d8fcb3df4: the server could not find the requested resource (get pods dns-test-69f293ad-0560-41fc-81ed-439d8fcb3df4)
  Sep 13 12:35:55.327: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-1289.svc from pod dns-1289/dns-test-69f293ad-0560-41fc-81ed-439d8fcb3df4: the server could not find the requested resource (get pods dns-test-69f293ad-0560-41fc-81ed-439d8fcb3df4)
  Sep 13 12:35:55.330: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-1289.svc from pod dns-1289/dns-test-69f293ad-0560-41fc-81ed-439d8fcb3df4: the server could not find the requested resource (get pods dns-test-69f293ad-0560-41fc-81ed-439d8fcb3df4)
  Sep 13 12:35:55.339: INFO: Lookups using dns-1289/dns-test-69f293ad-0560-41fc-81ed-439d8fcb3df4 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-1289 wheezy_tcp@dns-test-service.dns-1289 wheezy_udp@dns-test-service.dns-1289.svc wheezy_tcp@dns-test-service.dns-1289.svc wheezy_udp@_http._tcp.dns-test-service.dns-1289.svc wheezy_tcp@_http._tcp.dns-test-service.dns-1289.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-1289 jessie_tcp@dns-test-service.dns-1289 jessie_udp@dns-test-service.dns-1289.svc jessie_tcp@dns-test-service.dns-1289.svc jessie_udp@_http._tcp.dns-test-service.dns-1289.svc jessie_tcp@_http._tcp.dns-test-service.dns-1289.svc]

  Sep 13 12:35:55.350: INFO: Pod client logs for webserver: 
  Sep 13 12:35:55.354: INFO: Pod client logs for querier: 
  Sep 13 12:35:55.357: INFO: Pod client logs for jessie-querier: 
  Sep 13 12:36:00.356: INFO: DNS probes using dns-1289/dns-test-69f293ad-0560-41fc-81ed-439d8fcb3df4 succeeded

  STEP: deleting the pod @ 09/13/24 12:36:00.357
  STEP: deleting the test service @ 09/13/24 12:36:00.372
  STEP: deleting the test headless service @ 09/13/24 12:36:00.41
  Sep 13 12:36:00.427: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-1289" for this suite. @ 09/13/24 12:36:00.432
• [7.259 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 09/13/24 12:36:00.45
  Sep 13 12:36:00.450: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename daemonsets @ 09/13/24 12:36:00.451
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:36:00.467
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:36:00.477
  Sep 13 12:36:00.502: INFO: Create a RollingUpdate DaemonSet
  Sep 13 12:36:00.507: INFO: Check that daemon pods launch on every node of the cluster
  Sep 13 12:36:00.510: INFO: DaemonSet pods can't tolerate node cncf-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep 13 12:36:00.516: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 13 12:36:00.516: INFO: Node cncf-2 is running 0 daemon pod, expected 1
  Sep 13 12:36:01.513: INFO: DaemonSet pods can't tolerate node cncf-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep 13 12:36:01.515: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 13 12:36:01.515: INFO: Node cncf-2 is running 0 daemon pod, expected 1
  Sep 13 12:36:02.514: INFO: DaemonSet pods can't tolerate node cncf-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep 13 12:36:02.517: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 4
  Sep 13 12:36:02.517: INFO: Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
  Sep 13 12:36:02.517: INFO: Update the DaemonSet to trigger a rollout
  Sep 13 12:36:02.588: INFO: Updating DaemonSet daemon-set
  Sep 13 12:36:03.604: INFO: Roll back the DaemonSet before rollout is complete
  Sep 13 12:36:03.611: INFO: Updating DaemonSet daemon-set
  Sep 13 12:36:03.611: INFO: Make sure DaemonSet rollback is complete
  Sep 13 12:36:03.614: INFO: Wrong image for pod: daemon-set-9lhf7. Expected: registry.k8s.io/e2e-test-images/httpd:2.4.38-4, got: foo:non-existent.
  Sep 13 12:36:03.614: INFO: Pod daemon-set-9lhf7 is not available
  Sep 13 12:36:03.622: INFO: DaemonSet pods can't tolerate node cncf-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep 13 12:36:04.620: INFO: DaemonSet pods can't tolerate node cncf-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep 13 12:36:05.620: INFO: DaemonSet pods can't tolerate node cncf-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep 13 12:36:06.618: INFO: DaemonSet pods can't tolerate node cncf-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep 13 12:36:07.616: INFO: Pod daemon-set-xn7bc is not available
  Sep 13 12:36:07.620: INFO: DaemonSet pods can't tolerate node cncf-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Deleting DaemonSet "daemon-set" @ 09/13/24 12:36:07.625
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-6299, will wait for the garbage collector to delete the pods @ 09/13/24 12:36:07.625
  Sep 13 12:36:07.684: INFO: Deleting DaemonSet.extensions daemon-set took: 6.499725ms
  Sep 13 12:36:07.785: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.560704ms
  Sep 13 12:36:08.988: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 13 12:36:08.988: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Sep 13 12:36:08.991: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"709514"},"items":null}

  Sep 13 12:36:08.992: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"709514"},"items":null}

  Sep 13 12:36:09.003: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-6299" for this suite. @ 09/13/24 12:36:09.007
• [8.561 seconds]
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:177
  STEP: Creating a kubernetes client @ 09/13/24 12:36:09.012
  Sep 13 12:36:09.012: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename podtemplate @ 09/13/24 12:36:09.013
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:36:09.027
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:36:09.03
  STEP: Create a pod template @ 09/13/24 12:36:09.033
  STEP: Replace a pod template @ 09/13/24 12:36:09.038
  Sep 13 12:36:09.048: INFO: Found updated podtemplate annotation: "true"

  Sep 13 12:36:09.048: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-2687" for this suite. @ 09/13/24 12:36:09.055
• [0.049 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:172
  STEP: Creating a kubernetes client @ 09/13/24 12:36:09.061
  Sep 13 12:36:09.061: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename discovery @ 09/13/24 12:36:09.062
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:36:09.07
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:36:09.073
  STEP: Setting up server cert @ 09/13/24 12:36:09.079
  STEP: Requesting APIResourceList from "/api/v1" @ 09/13/24 12:36:09.429
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 09/13/24 12:36:09.431
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 09/13/24 12:36:09.433
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 09/13/24 12:36:09.434
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 09/13/24 12:36:09.435
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 09/13/24 12:36:09.436
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 09/13/24 12:36:09.438
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 09/13/24 12:36:09.439
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 09/13/24 12:36:09.44
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 09/13/24 12:36:09.441
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 09/13/24 12:36:09.442
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 09/13/24 12:36:09.443
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 09/13/24 12:36:09.444
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 09/13/24 12:36:09.445
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 09/13/24 12:36:09.446
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 09/13/24 12:36:09.447
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 09/13/24 12:36:09.448
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 09/13/24 12:36:09.449
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 09/13/24 12:36:09.45
  Sep 13 12:36:09.451: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-1982" for this suite. @ 09/13/24 12:36:09.455
• [0.405 seconds]
------------------------------
SSS
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:90
  STEP: Creating a kubernetes client @ 09/13/24 12:36:09.466
  Sep 13 12:36:09.466: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename emptydir @ 09/13/24 12:36:09.467
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:36:09.487
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:36:09.49
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 09/13/24 12:36:09.493
  STEP: Saw pod success @ 09/13/24 12:36:13.512
  Sep 13 12:36:13.516: INFO: Trying to get logs from node cncf-3 pod pod-6511ed31-af82-49b3-8695-bfa69fc56170 container test-container: <nil>
  STEP: delete the pod @ 09/13/24 12:36:13.521
  Sep 13 12:36:13.540: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9369" for this suite. @ 09/13/24 12:36:13.544
• [4.084 seconds]
------------------------------
SS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 09/13/24 12:36:13.55
  Sep 13 12:36:13.550: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename deployment @ 09/13/24 12:36:13.553
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:36:13.57
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:36:13.573
  Sep 13 12:36:13.575: INFO: Creating simple deployment test-new-deployment
  Sep 13 12:36:13.587: INFO: new replicaset for deployment "test-new-deployment" is yet to be created
  STEP: getting scale subresource @ 09/13/24 12:36:15.596
  STEP: updating a scale subresource @ 09/13/24 12:36:15.598
  STEP: verifying the deployment Spec.Replicas was modified @ 09/13/24 12:36:15.603
  STEP: Patch a scale subresource @ 09/13/24 12:36:15.606
  Sep 13 12:36:15.631: INFO: Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8179",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4f98e0b4-0ad7-4040-a701-12984b238f9f",
      ResourceVersion: (string) (len=6) "709658",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861827773,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861827773,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861827775,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861827775,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861827775,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861827775,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861827773,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-557759b7c7\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Sep 13 12:36:15.657: INFO: New ReplicaSet "test-new-deployment-557759b7c7" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-557759b7c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8179",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "85124d24-2f7c-4e74-9cc4-cd89f29c49e8",
      ResourceVersion: (string) (len=6) "709667",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861827773,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "4",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "5",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "4f98e0b4-0ad7-4040-a701-12984b238f9f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861827775,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 34 66 39 38 65 30  62 34 2d 30 61 64 37 2d  |\"4f98e0b4-0ad7-|
              00000120  34 30 34 30 2d 61 37 30  31 2d 31 32 39 38 34 62  |4040-a701-12984b|
              00000130  32 33 38 66 39 66 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |238f9f\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861827775,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(4),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Sep 13 12:36:15.670: INFO: Pod "test-new-deployment-557759b7c7-72hhf" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-557759b7c7-72hhf",
      GenerateName: (string) (len=31) "test-new-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-8179",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "573a7604-319e-47ff-bdbf-b459f690b1df",
      ResourceVersion: (string) (len=6) "709666",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861827775,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-557759b7c7",
          UID: (types.UID) (len=36) "85124d24-2f7c-4e74-9cc4-cd89f29c49e8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861827775,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 35  31 32 34 64 32 34 2d 32  |d\":\"85124d24-2|
              00000090  66 37 63 2d 34 65 37 34  2d 39 63 63 34 2d 63 64  |f7c-4e74-9cc4-cd|
              000000a0  38 39 66 32 39 63 34 39  65 38 5c 22 7d 22 3a 7b  |89f29c49e8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861827775,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qcfzf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qcfzf",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "cncf-4",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861827775,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861827775,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861827775,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861827775,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861827775,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.10.50.34",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.10.50.34"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861827775,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 13 12:36:15.686: INFO: Pod "test-new-deployment-557759b7c7-9lnx7" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-557759b7c7-9lnx7",
      GenerateName: (string) (len=31) "test-new-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-8179",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a267d82d-e6fe-4031-8ac3-a2dc547a8c52",
      ResourceVersion: (string) (len=6) "709649",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861827773,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-557759b7c7",
          UID: (types.UID) (len=36) "85124d24-2f7c-4e74-9cc4-cd89f29c49e8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861827773,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 35  31 32 34 64 32 34 2d 32  |d\":\"85124d24-2|
              00000090  66 37 63 2d 34 65 37 34  2d 39 63 63 34 2d 63 64  |f7c-4e74-9cc4-cd|
              000000a0  38 39 66 32 39 63 34 39  65 38 5c 22 7d 22 3a 7b  |89f29c49e8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861827775,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 30 2e 31 2e 31 35 34  5c 22 7d 22 3a 7b 22 2e  |.0.1.154\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8ftls",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8ftls",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "cncf-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861827775,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861827773,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861827775,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861827775,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861827773,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.10.50.243",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.10.50.243"
        }
      },
      PodIP: (string) (len=10) "10.0.1.154",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.0.1.154"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861827773,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63861827774,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://654e0445846a92ee1808b08bc3ca8d0a8e554a1815118aaf0286bc3da1abf763",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 13 12:36:15.691: INFO: Pod "test-new-deployment-557759b7c7-q2nmb" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-557759b7c7-q2nmb",
      GenerateName: (string) (len=31) "test-new-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-8179",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e02116d2-17e3-4a5f-994a-0e92a2bcc6dc",
      ResourceVersion: (string) (len=6) "709673",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861827775,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-557759b7c7",
          UID: (types.UID) (len=36) "85124d24-2f7c-4e74-9cc4-cd89f29c49e8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861827775,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 35  31 32 34 64 32 34 2d 32  |d\":\"85124d24-2|
              00000090  66 37 63 2d 34 65 37 34  2d 39 63 63 34 2d 63 64  |f7c-4e74-9cc4-cd|
              000000a0  38 39 66 32 39 63 34 39  65 38 5c 22 7d 22 3a 7b  |89f29c49e8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-r99g2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-r99g2",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "cncf-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861827775,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 13 12:36:15.692: INFO: Pod "test-new-deployment-557759b7c7-xbmml" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-557759b7c7-xbmml",
      GenerateName: (string) (len=31) "test-new-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-8179",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4fce05fe-dbad-4b01-a17d-093b54b6a8aa",
      ResourceVersion: (string) (len=6) "709671",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861827775,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-557759b7c7",
          UID: (types.UID) (len=36) "85124d24-2f7c-4e74-9cc4-cd89f29c49e8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861827775,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 35  31 32 34 64 32 34 2d 32  |d\":\"85124d24-2|
              00000090  66 37 63 2d 34 65 37 34  2d 39 63 63 34 2d 63 64  |f7c-4e74-9cc4-cd|
              000000a0  38 39 66 32 39 63 34 39  65 38 5c 22 7d 22 3a 7b  |89f29c49e8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6v846",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6v846",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 13 12:36:15.693: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-8179" for this suite. @ 09/13/24 12:36:15.702
• [2.160 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:55
  STEP: Creating a kubernetes client @ 09/13/24 12:36:15.71
  Sep 13 12:36:15.710: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename projected @ 09/13/24 12:36:15.711
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:36:15.724
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:36:15.726
  STEP: Creating a pod to test downward API volume plugin @ 09/13/24 12:36:15.728
  STEP: Saw pod success @ 09/13/24 12:36:19.747
  Sep 13 12:36:19.749: INFO: Trying to get logs from node cncf-3 pod downwardapi-volume-e935bd00-9d39-4021-a621-07b05032db68 container client-container: <nil>
  STEP: delete the pod @ 09/13/24 12:36:19.753
  Sep 13 12:36:19.766: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9572" for this suite. @ 09/13/24 12:36:19.769
• [4.064 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:263
  STEP: Creating a kubernetes client @ 09/13/24 12:36:19.775
  Sep 13 12:36:19.775: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename downward-api @ 09/13/24 12:36:19.78
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:36:19.789
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:36:19.792
  STEP: Creating a pod to test downward API volume plugin @ 09/13/24 12:36:19.795
  STEP: Saw pod success @ 09/13/24 12:36:23.817
  Sep 13 12:36:23.820: INFO: Trying to get logs from node cncf-3 pod downwardapi-volume-e4c142a3-657e-4826-b029-4664ff2bdaf9 container client-container: <nil>
  STEP: delete the pod @ 09/13/24 12:36:23.824
  Sep 13 12:36:23.845: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4540" for this suite. @ 09/13/24 12:36:23.849
• [4.079 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1053
  STEP: Creating a kubernetes client @ 09/13/24 12:36:23.855
  Sep 13 12:36:23.855: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename kubectl @ 09/13/24 12:36:23.856
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:36:23.871
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:36:23.873
  STEP: create deployment with httpd image @ 09/13/24 12:36:23.884
  Sep 13 12:36:23.884: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=kubectl-9109 create -f -'
  Sep 13 12:36:23.970: INFO: stderr: ""
  Sep 13 12:36:23.970: INFO: stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 09/13/24 12:36:23.97
  Sep 13 12:36:23.970: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=kubectl-9109 diff -f -'
  Sep 13 12:36:24.092: INFO: rc: 1
  Sep 13 12:36:24.092: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=kubectl-9109 delete -f -'
  Sep 13 12:36:24.154: INFO: stderr: ""
  Sep 13 12:36:24.154: INFO: stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  Sep 13 12:36:24.154: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9109" for this suite. @ 09/13/24 12:36:24.158
• [0.310 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:47
  STEP: Creating a kubernetes client @ 09/13/24 12:36:24.167
  Sep 13 12:36:24.167: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename secrets @ 09/13/24 12:36:24.168
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:36:24.192
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:36:24.195
  STEP: Creating secret with name secret-test-119fcbf6-c388-4e5e-8637-f211875291f6 @ 09/13/24 12:36:24.197
  STEP: Creating a pod to test consume secrets @ 09/13/24 12:36:24.206
  STEP: Saw pod success @ 09/13/24 12:36:28.227
  Sep 13 12:36:28.229: INFO: Trying to get logs from node cncf-4 pod pod-secrets-9842ca07-01d7-4652-9f72-dd650ea96fb2 container secret-env-test: <nil>
  STEP: delete the pod @ 09/13/24 12:36:28.233
  Sep 13 12:36:28.248: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1707" for this suite. @ 09/13/24 12:36:28.251
• [4.089 seconds]
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:139
  STEP: Creating a kubernetes client @ 09/13/24 12:36:28.257
  Sep 13 12:36:28.257: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename configmap @ 09/13/24 12:36:28.258
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:36:28.283
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:36:28.285
  STEP: Creating configMap that has name configmap-test-emptyKey-7874200b-c663-4fff-8a0f-9bf175670e8f @ 09/13/24 12:36:28.287
  Sep 13 12:36:28.288: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9487" for this suite. @ 09/13/24 12:36:28.292
• [0.040 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:290
  STEP: Creating a kubernetes client @ 09/13/24 12:36:28.297
  Sep 13 12:36:28.297: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename taint-single-pod @ 09/13/24 12:36:28.298
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:36:28.308
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:36:28.311
  Sep 13 12:36:28.317: INFO: Waiting up to 1m0s for all nodes to be ready
  Sep 13 12:37:28.317: INFO: Waiting for terminating namespaces to be deleted...
  Sep 13 12:37:28.320: INFO: Starting informer...
  STEP: Starting pod... @ 09/13/24 12:37:28.32
  Sep 13 12:37:28.538: INFO: Pod is running on cncf-3. Tainting Node
  STEP: Trying to apply a taint on the Node @ 09/13/24 12:37:28.538
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 09/13/24 12:37:28.56
  STEP: Waiting short time to make sure Pod is queued for deletion @ 09/13/24 12:37:28.565
  Sep 13 12:37:28.565: INFO: Pod wasn't evicted. Proceeding
  Sep 13 12:37:28.566: INFO: Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 09/13/24 12:37:28.591
  STEP: Waiting some time to make sure that toleration time passed. @ 09/13/24 12:37:28.614
  Sep 13 12:38:43.614: INFO: Pod wasn't evicted. Test successful
  Sep 13 12:38:43.616: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-8579" for this suite. @ 09/13/24 12:38:43.623
• [135.332 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should patch a secret [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:155
  STEP: Creating a kubernetes client @ 09/13/24 12:38:43.633
  Sep 13 12:38:43.633: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename secrets @ 09/13/24 12:38:43.634
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:38:43.647
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:38:43.649
  STEP: creating a secret @ 09/13/24 12:38:43.653
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 09/13/24 12:38:43.657
  STEP: patching the secret @ 09/13/24 12:38:43.665
  STEP: deleting the secret using a LabelSelector @ 09/13/24 12:38:43.675
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 09/13/24 12:38:43.68
  Sep 13 12:38:43.688: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1733" for this suite. @ 09/13/24 12:38:43.701
• [0.085 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 09/13/24 12:38:43.719
  Sep 13 12:38:43.719: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename secrets @ 09/13/24 12:38:43.72
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:38:43.733
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:38:43.736
  STEP: Creating secret with name s-test-opt-del-4f667f4d-2324-4ea9-89f7-7186fb6a4ecc @ 09/13/24 12:38:43.741
  STEP: Creating secret with name s-test-opt-upd-273290ff-d678-4f15-af5d-d99d0fcad1c8 @ 09/13/24 12:38:43.749
  STEP: Creating the pod @ 09/13/24 12:38:43.753
  STEP: Deleting secret s-test-opt-del-4f667f4d-2324-4ea9-89f7-7186fb6a4ecc @ 09/13/24 12:38:45.787
  STEP: Updating secret s-test-opt-upd-273290ff-d678-4f15-af5d-d99d0fcad1c8 @ 09/13/24 12:38:45.797
  STEP: Creating secret with name s-test-opt-create-fc1a2cad-cdd2-4595-a525-ed42ebc71870 @ 09/13/24 12:38:45.802
  STEP: waiting to observe update in volume @ 09/13/24 12:38:45.806
  Sep 13 12:39:58.098: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7909" for this suite. @ 09/13/24 12:39:58.102
• [74.392 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:177
  STEP: Creating a kubernetes client @ 09/13/24 12:39:58.112
  Sep 13 12:39:58.112: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename replicaset @ 09/13/24 12:39:58.114
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:39:58.146
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:39:58.149
  STEP: Create a Replicaset @ 09/13/24 12:39:58.16
  STEP: Verify that the required pods have come up. @ 09/13/24 12:39:58.182
  Sep 13 12:39:58.185: INFO: Pod name sample-pod: Found 0 pods out of 1
  Sep 13 12:40:03.188: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/13/24 12:40:03.188
  STEP: Getting /status @ 09/13/24 12:40:03.189
  Sep 13 12:40:03.191: INFO: Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 09/13/24 12:40:03.191
  Sep 13 12:40:03.202: INFO: updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 09/13/24 12:40:03.202
  Sep 13 12:40:03.206: INFO: Observed &ReplicaSet event: ADDED
  Sep 13 12:40:03.206: INFO: Observed &ReplicaSet event: MODIFIED
  Sep 13 12:40:03.206: INFO: Observed &ReplicaSet event: MODIFIED
  Sep 13 12:40:03.206: INFO: Observed &ReplicaSet event: MODIFIED
  Sep 13 12:40:03.206: INFO: Found replicaset test-rs in namespace replicaset-639 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Sep 13 12:40:03.206: INFO: Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 09/13/24 12:40:03.206
  Sep 13 12:40:03.206: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Sep 13 12:40:03.213: INFO: Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 09/13/24 12:40:03.213
  Sep 13 12:40:03.215: INFO: Observed &ReplicaSet event: ADDED
  Sep 13 12:40:03.216: INFO: Observed &ReplicaSet event: MODIFIED
  Sep 13 12:40:03.216: INFO: Observed &ReplicaSet event: MODIFIED
  Sep 13 12:40:03.217: INFO: Observed &ReplicaSet event: MODIFIED
  Sep 13 12:40:03.218: INFO: Observed replicaset test-rs in namespace replicaset-639 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Sep 13 12:40:03.218: INFO: Observed &ReplicaSet event: MODIFIED
  Sep 13 12:40:03.219: INFO: Found replicaset test-rs in namespace replicaset-639 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  Sep 13 12:40:03.219: INFO: Replicaset test-rs has a patched status
  Sep 13 12:40:03.220: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-639" for this suite. @ 09/13/24 12:40:03.224
• [5.122 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 09/13/24 12:40:03.233
  Sep 13 12:40:03.234: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename daemonsets @ 09/13/24 12:40:03.235
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:40:03.252
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:40:03.254
  STEP: Creating simple DaemonSet "daemon-set" @ 09/13/24 12:40:03.279
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/13/24 12:40:03.287
  Sep 13 12:40:03.290: INFO: DaemonSet pods can't tolerate node cncf-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep 13 12:40:03.291: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 13 12:40:03.291: INFO: Node cncf-2 is running 0 daemon pod, expected 1
  Sep 13 12:40:04.295: INFO: DaemonSet pods can't tolerate node cncf-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep 13 12:40:04.298: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Sep 13 12:40:04.298: INFO: Node cncf-2 is running 0 daemon pod, expected 1
  Sep 13 12:40:05.295: INFO: DaemonSet pods can't tolerate node cncf-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep 13 12:40:05.298: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 4
  Sep 13 12:40:05.298: INFO: Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 09/13/24 12:40:05.301
  Sep 13 12:40:05.322: INFO: DaemonSet pods can't tolerate node cncf-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep 13 12:40:05.325: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Sep 13 12:40:05.325: INFO: Node cncf-5 is running 0 daemon pod, expected 1
  Sep 13 12:40:06.321: INFO: DaemonSet pods can't tolerate node cncf-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep 13 12:40:06.324: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Sep 13 12:40:06.324: INFO: Node cncf-5 is running 0 daemon pod, expected 1
  Sep 13 12:40:07.318: INFO: DaemonSet pods can't tolerate node cncf-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep 13 12:40:07.321: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Sep 13 12:40:07.321: INFO: Node cncf-5 is running 0 daemon pod, expected 1
  Sep 13 12:40:08.323: INFO: DaemonSet pods can't tolerate node cncf-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep 13 12:40:08.327: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 4
  Sep 13 12:40:08.328: INFO: Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 09/13/24 12:40:08.33
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-6061, will wait for the garbage collector to delete the pods @ 09/13/24 12:40:08.331
  Sep 13 12:40:08.389: INFO: Deleting DaemonSet.extensions daemon-set took: 5.424704ms
  Sep 13 12:40:08.490: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.453451ms
  Sep 13 12:40:10.493: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 13 12:40:10.493: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Sep 13 12:40:10.495: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"712143"},"items":null}

  Sep 13 12:40:10.497: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"712143"},"items":null}

  Sep 13 12:40:10.507: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-6061" for this suite. @ 09/13/24 12:40:10.51
• [7.281 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:210
  STEP: Creating a kubernetes client @ 09/13/24 12:40:10.515
  Sep 13 12:40:10.515: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename webhook @ 09/13/24 12:40:10.517
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:40:10.546
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:40:10.549
  STEP: Setting up server cert @ 09/13/24 12:40:10.571
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/13/24 12:40:10.85
  STEP: Deploying the webhook pod @ 09/13/24 12:40:10.857
  STEP: Wait for the deployment to be ready @ 09/13/24 12:40:10.875
  Sep 13 12:40:10.881: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/13/24 12:40:12.89
  STEP: Verifying the service has paired with the endpoint @ 09/13/24 12:40:12.905
  Sep 13 12:40:13.905: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 09/13/24 12:40:13.92
  STEP: create a pod @ 09/13/24 12:40:13.938
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 09/13/24 12:40:15.952
  Sep 13 12:40:15.952: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=webhook-5119 attach --namespace=webhook-5119 to-be-attached-pod -i -c=container1'
  Sep 13 12:40:16.033: INFO: rc: 1
  Sep 13 12:40:16.081: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5119" for this suite. @ 09/13/24 12:40:16.091
  STEP: Destroying namespace "webhook-markers-1102" for this suite. @ 09/13/24 12:40:16.097
• [5.590 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should delete a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:627
  STEP: Creating a kubernetes client @ 09/13/24 12:40:16.106
  Sep 13 12:40:16.106: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename job @ 09/13/24 12:40:16.107
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:40:16.157
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:40:16.161
  STEP: Creating a job @ 09/13/24 12:40:16.166
  STEP: Ensuring active pods == parallelism @ 09/13/24 12:40:16.205
  STEP: delete a job @ 09/13/24 12:40:18.21
  STEP: deleting Job.batch foo in namespace job-8180, will wait for the garbage collector to delete the pods @ 09/13/24 12:40:18.21
  Sep 13 12:40:18.270: INFO: Deleting Job.batch foo took: 5.869084ms
  Sep 13 12:40:18.370: INFO: Terminating Job.batch foo pods took: 100.160601ms
  STEP: Ensuring job was deleted @ 09/13/24 12:40:19.271
  Sep 13 12:40:19.273: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-8180" for this suite. @ 09/13/24 12:40:19.278
• [3.178 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:234
  STEP: Creating a kubernetes client @ 09/13/24 12:40:19.284
  Sep 13 12:40:19.284: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename resourcequota @ 09/13/24 12:40:19.285
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:40:19.298
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:40:19.3
  STEP: Counting existing ResourceQuota @ 09/13/24 12:40:19.302
  STEP: Creating a ResourceQuota @ 09/13/24 12:40:24.306
  STEP: Ensuring resource quota status is calculated @ 09/13/24 12:40:24.315
  STEP: Creating a Pod that fits quota @ 09/13/24 12:40:26.318
  STEP: Ensuring ResourceQuota status captures the pod usage @ 09/13/24 12:40:26.333
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 09/13/24 12:40:28.337
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 09/13/24 12:40:28.339
  STEP: Ensuring a pod cannot update its resource requirements @ 09/13/24 12:40:28.342
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 09/13/24 12:40:28.349
  STEP: Deleting the pod @ 09/13/24 12:40:30.354
  STEP: Ensuring resource quota status released the pod usage @ 09/13/24 12:40:30.365
  Sep 13 12:40:32.370: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7502" for this suite. @ 09/13/24 12:40:32.374
• [13.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:164
  STEP: Creating a kubernetes client @ 09/13/24 12:40:32.386
  Sep 13 12:40:32.387: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename disruption @ 09/13/24 12:40:32.388
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:40:32.408
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:40:32.411
  STEP: Waiting for the pdb to be processed @ 09/13/24 12:40:32.42
  STEP: Updating PodDisruptionBudget status @ 09/13/24 12:40:34.648
  STEP: Waiting for all pods to be running @ 09/13/24 12:40:34.655
  Sep 13 12:40:34.657: INFO: running pods: 0 < 1
  STEP: locating a running pod @ 09/13/24 12:40:36.661
  STEP: Waiting for the pdb to be processed @ 09/13/24 12:40:36.672
  STEP: Patching PodDisruptionBudget status @ 09/13/24 12:40:36.68
  STEP: Waiting for the pdb to be processed @ 09/13/24 12:40:36.692
  Sep 13 12:40:36.695: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-6055" for this suite. @ 09/13/24 12:40:36.7
• [4.318 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1764
  STEP: Creating a kubernetes client @ 09/13/24 12:40:36.705
  Sep 13 12:40:36.705: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename kubectl @ 09/13/24 12:40:36.706
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:40:36.719
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:40:36.722
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 09/13/24 12:40:36.726
  Sep 13 12:40:36.727: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=kubectl-9780 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  Sep 13 12:40:36.808: INFO: stderr: ""
  Sep 13 12:40:36.808: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 09/13/24 12:40:36.808
  Sep 13 12:40:36.816: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=kubectl-9780 delete pods e2e-test-httpd-pod'
  Sep 13 12:40:38.301: INFO: stderr: ""
  Sep 13 12:40:38.301: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Sep 13 12:40:38.302: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9780" for this suite. @ 09/13/24 12:40:38.306
• [1.609 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:89
  STEP: Creating a kubernetes client @ 09/13/24 12:40:38.315
  Sep 13 12:40:38.315: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename containers @ 09/13/24 12:40:38.316
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:40:38.328
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:40:38.33
  STEP: Creating a pod to test override all @ 09/13/24 12:40:38.334
  STEP: Saw pod success @ 09/13/24 12:40:42.357
  Sep 13 12:40:42.359: INFO: Trying to get logs from node cncf-3 pod client-containers-fb134dd1-8b7b-43b8-8d29-8c1502abc327 container agnhost-container: <nil>
  STEP: delete the pod @ 09/13/24 12:40:42.365
  Sep 13 12:40:42.378: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-9747" for this suite. @ 09/13/24 12:40:42.383
• [4.073 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregator.go:98
  STEP: Creating a kubernetes client @ 09/13/24 12:40:42.389
  Sep 13 12:40:42.389: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename aggregator @ 09/13/24 12:40:42.391
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:40:42.406
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:40:42.409
  Sep 13 12:40:42.411: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Registering the sample API server. @ 09/13/24 12:40:42.412
  Sep 13 12:40:42.834: INFO: Found ClusterRoles; assuming RBAC is enabled.
  Sep 13 12:40:42.866: INFO: new replicaset for deployment "sample-apiserver-deployment" is yet to be created
  Sep 13 12:40:44.909: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.September, 13, 12, 40, 42, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 13, 12, 40, 42, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 13, 12, 40, 42, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 13, 12, 40, 42, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Sep 13 12:40:46.917: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.September, 13, 12, 40, 42, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 13, 12, 40, 42, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 13, 12, 40, 42, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 13, 12, 40, 42, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Sep 13 12:40:48.915: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.September, 13, 12, 40, 42, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 13, 12, 40, 42, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 13, 12, 40, 42, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 13, 12, 40, 42, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Sep 13 12:40:50.915: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.September, 13, 12, 40, 42, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 13, 12, 40, 42, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 13, 12, 40, 42, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 13, 12, 40, 42, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Sep 13 12:40:52.914: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.September, 13, 12, 40, 42, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 13, 12, 40, 42, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 13, 12, 40, 42, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 13, 12, 40, 42, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Sep 13 12:40:54.914: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.September, 13, 12, 40, 42, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 13, 12, 40, 42, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 13, 12, 40, 42, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 13, 12, 40, 42, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Sep 13 12:40:56.913: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.September, 13, 12, 40, 42, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 13, 12, 40, 42, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 13, 12, 40, 42, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 13, 12, 40, 42, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Sep 13 12:40:58.914: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.September, 13, 12, 40, 42, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 13, 12, 40, 42, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 13, 12, 40, 42, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 13, 12, 40, 42, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Sep 13 12:41:00.914: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.September, 13, 12, 40, 42, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 13, 12, 40, 42, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 13, 12, 40, 42, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 13, 12, 40, 42, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Sep 13 12:41:02.913: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.September, 13, 12, 40, 42, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 13, 12, 40, 42, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 13, 12, 40, 42, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 13, 12, 40, 42, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Sep 13 12:41:05.029: INFO: Waited 111.197164ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 09/13/24 12:41:05.084
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 09/13/24 12:41:05.09
  STEP: List APIServices @ 09/13/24 12:41:05.099
  Sep 13 12:41:05.104: INFO: Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 09/13/24 12:41:05.104
  Sep 13 12:41:05.114: INFO: APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 09/13/24 12:41:05.115
  Sep 13 12:41:05.128: INFO: updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2024, time.September, 13, 12, 41, 4, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 09/13/24 12:41:05.128
  Sep 13 12:41:05.130: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2024-09-13 12:41:04 +0000 UTC Passed all checks passed}
  Sep 13 12:41:05.130: INFO: Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Sep 13 12:41:05.130: INFO: Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 09/13/24 12:41:05.13
  Sep 13 12:41:05.142: INFO: Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete flunders resource "dynamic-flunder-18992885" @ 09/13/24 12:41:05.143
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 09/13/24 12:41:05.154
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 09/13/24 12:41:05.163
  STEP: Patch APIService Status @ 09/13/24 12:41:05.166
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 09/13/24 12:41:05.18
  Sep 13 12:41:05.182: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2024-09-13 12:41:04 +0000 UTC Passed all checks passed}
  Sep 13 12:41:05.182: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Sep 13 12:41:05.182: INFO: Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  Sep 13 12:41:05.182: INFO: Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "v1alpha1.wardle.example.com=updated" @ 09/13/24 12:41:05.182
  STEP: Confirm that the generated APIService has been deleted @ 09/13/24 12:41:05.198
  Sep 13 12:41:05.198: INFO: Requesting list of APIServices to confirm quantity
  Sep 13 12:41:05.202: INFO: Found 0 APIService with label "v1alpha1.wardle.example.com=updated"
  Sep 13 12:41:05.202: INFO: APIService v1alpha1.wardle.example.com has been deleted.
  Sep 13 12:41:05.296: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-6881" for this suite. @ 09/13/24 12:41:05.305
• [22.928 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:117
  STEP: Creating a kubernetes client @ 09/13/24 12:41:05.335
  Sep 13 12:41:05.335: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename dns @ 09/13/24 12:41:05.337
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:41:05.348
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:41:05.351
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-387.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-1.dns-test-service.dns-387.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/wheezy_hosts@dns-querier-1;sleep 1; done
   @ 09/13/24 12:41:05.366
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-387.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-387.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 09/13/24 12:41:05.366
  STEP: creating a pod to probe /etc/hosts @ 09/13/24 12:41:05.366
  STEP: submitting the pod to kubernetes @ 09/13/24 12:41:05.366
  STEP: retrieving the pod @ 09/13/24 12:41:07.387
  STEP: looking for the results for each expected name from probers @ 09/13/24 12:41:07.399
  Sep 13 12:41:07.411: INFO: DNS probes using dns-387/dns-test-bc0e1e67-9a29-4907-878d-6c5e0710fbf1 succeeded

  STEP: deleting the pod @ 09/13/24 12:41:07.411
  Sep 13 12:41:07.431: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-387" for this suite. @ 09/13/24 12:41:07.436
• [2.113 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:108
  STEP: Creating a kubernetes client @ 09/13/24 12:41:07.448
  Sep 13 12:41:07.448: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename disruption @ 09/13/24 12:41:07.45
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:41:07.461
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:41:07.464
  STEP: creating the pdb @ 09/13/24 12:41:07.473
  STEP: Waiting for the pdb to be processed @ 09/13/24 12:41:07.479
  STEP: updating the pdb @ 09/13/24 12:41:09.482
  STEP: Waiting for the pdb to be processed @ 09/13/24 12:41:09.491
  STEP: patching the pdb @ 09/13/24 12:41:09.505
  STEP: Waiting for the pdb to be processed @ 09/13/24 12:41:09.513
  STEP: Waiting for the pdb to be deleted @ 09/13/24 12:41:09.527
  Sep 13 12:41:09.529: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-5870" for this suite. @ 09/13/24 12:41:09.533
• [2.089 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:170
  STEP: Creating a kubernetes client @ 09/13/24 12:41:09.538
  Sep 13 12:41:09.538: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename security-context @ 09/13/24 12:41:09.54
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:41:09.549
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:41:09.551
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 09/13/24 12:41:09.562
  STEP: Saw pod success @ 09/13/24 12:41:13.585
  Sep 13 12:41:13.588: INFO: Trying to get logs from node cncf-3 pod security-context-b7ef259a-0a8e-473e-9b21-f818338484a1 container test-container: <nil>
  STEP: delete the pod @ 09/13/24 12:41:13.595
  Sep 13 12:41:13.615: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-7793" for this suite. @ 09/13/24 12:41:13.619
• [4.085 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should provide secure master service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:775
  STEP: Creating a kubernetes client @ 09/13/24 12:41:13.625
  Sep 13 12:41:13.625: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename services @ 09/13/24 12:41:13.626
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:41:13.636
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:41:13.638
  Sep 13 12:41:13.644: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9589" for this suite. @ 09/13/24 12:41:13.647
• [0.030 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingress.go:558
  STEP: Creating a kubernetes client @ 09/13/24 12:41:13.656
  Sep 13 12:41:13.657: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename ingress @ 09/13/24 12:41:13.658
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:41:13.684
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:41:13.686
  STEP: getting /apis @ 09/13/24 12:41:13.69
  STEP: getting /apis/networking.k8s.io @ 09/13/24 12:41:13.694
  STEP: getting /apis/networking.k8s.iov1 @ 09/13/24 12:41:13.695
  STEP: creating @ 09/13/24 12:41:13.696
  STEP: getting @ 09/13/24 12:41:13.708
  STEP: listing @ 09/13/24 12:41:13.71
  STEP: watching @ 09/13/24 12:41:13.712
  Sep 13 12:41:13.712: INFO: starting watch
  STEP: cluster-wide listing @ 09/13/24 12:41:13.713
  STEP: cluster-wide watching @ 09/13/24 12:41:13.714
  Sep 13 12:41:13.714: INFO: starting watch
  STEP: patching @ 09/13/24 12:41:13.716
  STEP: updating @ 09/13/24 12:41:13.72
  Sep 13 12:41:13.730: INFO: waiting for watch events with expected annotations
  Sep 13 12:41:13.730: INFO: saw patched and updated annotations
  STEP: patching /status @ 09/13/24 12:41:13.73
  STEP: updating /status @ 09/13/24 12:41:13.736
  STEP: get /status @ 09/13/24 12:41:13.742
  STEP: deleting @ 09/13/24 12:41:13.744
  STEP: deleting a collection @ 09/13/24 12:41:13.752
  Sep 13 12:41:13.769: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-2672" for this suite. @ 09/13/24 12:41:13.78
• [0.134 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 09/13/24 12:41:13.794
  Sep 13 12:41:13.794: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename watch @ 09/13/24 12:41:13.795
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:41:13.813
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:41:13.816
  STEP: creating a watch on configmaps with label A @ 09/13/24 12:41:13.818
  STEP: creating a watch on configmaps with label B @ 09/13/24 12:41:13.819
  STEP: creating a watch on configmaps with label A or B @ 09/13/24 12:41:13.821
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 09/13/24 12:41:13.822
  Sep 13 12:41:13.826: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-4177  62e0ade2-200e-4d35-a1d9-08c5e4566e22 712914 0 2024-09-13 12:41:13 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-09-13 12:41:13 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep 13 12:41:13.826: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-4177  62e0ade2-200e-4d35-a1d9-08c5e4566e22 712914 0 2024-09-13 12:41:13 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-09-13 12:41:13 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 09/13/24 12:41:13.827
  Sep 13 12:41:13.841: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-4177  62e0ade2-200e-4d35-a1d9-08c5e4566e22 712915 0 2024-09-13 12:41:13 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-09-13 12:41:13 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep 13 12:41:13.841: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-4177  62e0ade2-200e-4d35-a1d9-08c5e4566e22 712915 0 2024-09-13 12:41:13 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-09-13 12:41:13 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 09/13/24 12:41:13.841
  Sep 13 12:41:13.848: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-4177  62e0ade2-200e-4d35-a1d9-08c5e4566e22 712916 0 2024-09-13 12:41:13 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-09-13 12:41:13 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep 13 12:41:13.849: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-4177  62e0ade2-200e-4d35-a1d9-08c5e4566e22 712916 0 2024-09-13 12:41:13 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-09-13 12:41:13 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 09/13/24 12:41:13.849
  Sep 13 12:41:13.853: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-4177  62e0ade2-200e-4d35-a1d9-08c5e4566e22 712917 0 2024-09-13 12:41:13 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-09-13 12:41:13 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep 13 12:41:13.853: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-4177  62e0ade2-200e-4d35-a1d9-08c5e4566e22 712917 0 2024-09-13 12:41:13 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-09-13 12:41:13 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 09/13/24 12:41:13.853
  Sep 13 12:41:13.857: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-4177  e16a776f-3cb7-4dfb-bae4-f2985aae0b7f 712918 0 2024-09-13 12:41:13 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-09-13 12:41:13 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep 13 12:41:13.857: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-4177  e16a776f-3cb7-4dfb-bae4-f2985aae0b7f 712918 0 2024-09-13 12:41:13 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-09-13 12:41:13 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 09/13/24 12:41:23.858
  Sep 13 12:41:23.871: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-4177  e16a776f-3cb7-4dfb-bae4-f2985aae0b7f 712984 0 2024-09-13 12:41:13 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-09-13 12:41:13 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep 13 12:41:23.871: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-4177  e16a776f-3cb7-4dfb-bae4-f2985aae0b7f 712984 0 2024-09-13 12:41:13 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-09-13 12:41:13 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep 13 12:41:33.873: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-4177" for this suite. @ 09/13/24 12:41:33.879
• [20.102 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:539
  STEP: Creating a kubernetes client @ 09/13/24 12:41:33.896
  Sep 13 12:41:33.896: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename gc @ 09/13/24 12:41:33.898
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:41:33.959
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:41:33.962
  STEP: create the deployment @ 09/13/24 12:41:33.989
  W0913 12:41:34.005354      23 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 09/13/24 12:41:34.005
  STEP: delete the deployment @ 09/13/24 12:41:34.269
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 09/13/24 12:41:34.344
  STEP: Gathering metrics @ 09/13/24 12:41:34.926
  Sep 13 12:41:35.065: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Sep 13 12:41:35.065: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-3675" for this suite. @ 09/13/24 12:41:35.072
• [1.205 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 09/13/24 12:41:35.102
  Sep 13 12:41:35.102: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename deployment @ 09/13/24 12:41:35.103
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:41:35.172
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:41:35.174
  Sep 13 12:41:35.259: INFO: Pod name cleanup-pod: Found 0 pods out of 1
  Sep 13 12:41:40.262: INFO: Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/13/24 12:41:40.262
  Sep 13 12:41:40.262: INFO: Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 09/13/24 12:41:40.282
  Sep 13 12:41:40.302: INFO: Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7586",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "505061bf-9c8f-459f-8e10-6ad3d7b9a1ed",
      ResourceVersion: (string) (len=6) "713122",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861828100,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861828100,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 0,
      Replicas: (int32) 0,
      UpdatedReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) <nil>,
      CollisionCount: (*int32)(<nil>)
    }
  }


  Sep 13 12:41:40.315: INFO: New ReplicaSet "test-cleanup-deployment-7bc75bbdf6" of Deployment "test-cleanup-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-cleanup-deployment-7bc75bbdf6",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7586",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9a75aa21-5fa1-4cd8-8277-8230da6a4cf0",
      ResourceVersion: (string) (len=6) "713124",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861828100,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7bc75bbdf6"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "505061bf-9c8f-459f-8e10-6ad3d7b9a1ed",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861828100,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 35 30 35 30 36 31  62 66 2d 39 63 38 66 2d  |\"505061bf-9c8f-|
              00000120  34 35 39 66 2d 38 65 31  30 2d 36 61 64 33 64 37  |459f-8e10-6ad3d7|
              00000130  62 39 61 31 65 64 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |b9a1ed\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "7bc75bbdf6"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "7bc75bbdf6"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 0,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Sep 13 12:41:40.331: INFO: All old ReplicaSets of Deployment "test-cleanup-deployment":
  Sep 13 12:41:40.331: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7586",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8f694414-2b30-44c5-bfa4-633b638aa1c0",
      ResourceVersion: (string) (len=6) "713123",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861828095,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "pod": (string) (len=5) "httpd",
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "505061bf-9c8f-459f-8e10-6ad3d7b9a1ed",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861828095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=483) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000050  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000060  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000070  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000080  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000090  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              000000a0  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000b0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000c0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000d0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000f0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000100  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000110  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000120  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000130  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000140  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000160  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000170  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000180  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000190  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000001a0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001b0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001c0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001d0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001e0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861828096,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861828100,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=103) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000020  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              00000030  22 75 69 64 5c 22 3a 5c  22 35 30 35 30 36 31 62  |"uid\":\"505061b|
              00000040  66 2d 39 63 38 66 2d 34  35 39 66 2d 38 65 31 30  |f-9c8f-459f-8e10|
              00000050  2d 36 61 64 33 64 37 62  39 61 31 65 64 5c 22 7d  |-6ad3d7b9a1ed\"}|
              00000060  22 3a 7b 7d 7d 7d 7d                              |":{}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Sep 13 12:41:40.359: INFO: Pod "test-cleanup-controller-n6jb8" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=29) "test-cleanup-controller-n6jb8",
      GenerateName: (string) (len=24) "test-cleanup-controller-",
      Namespace: (string) (len=15) "deployment-7586",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "43893f40-128e-49b5-bb28-7a4cd2edacec",
      ResourceVersion: (string) (len=6) "713089",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861828095,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=23) "test-cleanup-controller",
          UID: (types.UID) (len=36) "8f694414-2b30-44c5-bfa4-633b638aa1c0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861828095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=500) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 2c 22 66  |},"f:pod":{}},"f|
              00000050  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000060  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000070  75 69 64 5c 22 3a 5c 22  38 66 36 39 34 34 31 34  |uid\":\"8f694414|
              00000080  2d 32 62 33 30 2d 34 34  63 35 2d 62 66 61 34 2d  |-2b30-44c5-bfa4-|
              00000090  36 33 33 62 36 33 38 61  61 31 63 30 5c 22 7d 22  |633b638aa1c0\"}"|
              000000a0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000b0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000c0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              000000d0  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              000000e0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              000000f0  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000100  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000110  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000120  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000130  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000140  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000150  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000160  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              00000170  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              00000180  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              00000190  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001a0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001b0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001c0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              000001d0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              000001e0  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              000001f0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861828096,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=658) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 30 2e 31 2e 37 31 5c  22 7d 22 3a 7b 22 2e 22  |.0.1.71\"}":{"."|
              00000270  3a 7b 7d 2c 22 66 3a 69  70 22 3a 7b 7d 7d 7d 2c  |:{},"f:ip":{}}},|
              00000280  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              00000290  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-cqqs9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-cqqs9",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)(<nil>),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "cncf-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861828096,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861828095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861828096,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861828096,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861828095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.10.50.243",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.10.50.243"
        }
      },
      PodIP: (string) (len=9) "10.0.1.71",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=9) "10.0.1.71"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861828095,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63861828096,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://5c63b6429258bb96e854f7ec81dde7b702238970501fda9699a38d3961315e4b",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 13 12:41:40.362: INFO: Pod "test-cleanup-deployment-7bc75bbdf6-c89j8" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-cleanup-deployment-7bc75bbdf6-c89j8",
      GenerateName: (string) (len=35) "test-cleanup-deployment-7bc75bbdf6-",
      Namespace: (string) (len=15) "deployment-7586",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "12d55bba-50ab-4f4a-8515-7006c3da846b",
      ResourceVersion: (string) (len=6) "713129",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861828100,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7bc75bbdf6"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-cleanup-deployment-7bc75bbdf6",
          UID: (types.UID) (len=36) "9a75aa21-5fa1-4cd8-8277-8230da6a4cf0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861828100,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 61  37 35 61 61 32 31 2d 35  |d\":\"9a75aa21-5|
              00000090  66 61 31 2d 34 63 64 38  2d 38 32 37 37 2d 38 32  |fa1-4cd8-8277-82|
              000000a0  33 30 64 61 36 61 34 63  66 30 5c 22 7d 22 3a 7b  |30da6a4cf0\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-865gc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-865gc",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "cncf-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861828100,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 13 12:41:40.363: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-7586" for this suite. @ 09/13/24 12:41:40.377
• [5.287 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:69
  STEP: Creating a kubernetes client @ 09/13/24 12:41:40.389
  Sep 13 12:41:40.389: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/13/24 12:41:40.391
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:41:40.421
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:41:40.423
  Sep 13 12:41:40.426: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 09/13/24 12:41:42.155
  Sep 13 12:41:42.155: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=crd-publish-openapi-8880 --namespace=crd-publish-openapi-8880 create -f -'
  Sep 13 12:41:42.276: INFO: stderr: ""
  Sep 13 12:41:42.276: INFO: stdout: "e2e-test-crd-publish-openapi-6388-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  Sep 13 12:41:42.276: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=crd-publish-openapi-8880 --namespace=crd-publish-openapi-8880 delete e2e-test-crd-publish-openapi-6388-crds test-foo'
  Sep 13 12:41:42.366: INFO: stderr: ""
  Sep 13 12:41:42.366: INFO: stdout: "e2e-test-crd-publish-openapi-6388-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  Sep 13 12:41:42.366: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=crd-publish-openapi-8880 --namespace=crd-publish-openapi-8880 apply -f -'
  Sep 13 12:41:42.432: INFO: stderr: ""
  Sep 13 12:41:42.432: INFO: stdout: "e2e-test-crd-publish-openapi-6388-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  Sep 13 12:41:42.432: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=crd-publish-openapi-8880 --namespace=crd-publish-openapi-8880 delete e2e-test-crd-publish-openapi-6388-crds test-foo'
  Sep 13 12:41:42.504: INFO: stderr: ""
  Sep 13 12:41:42.504: INFO: stdout: "e2e-test-crd-publish-openapi-6388-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 09/13/24 12:41:42.504
  Sep 13 12:41:42.505: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=crd-publish-openapi-8880 --namespace=crd-publish-openapi-8880 create -f -'
  Sep 13 12:41:42.572: INFO: rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 09/13/24 12:41:42.572
  Sep 13 12:41:42.572: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=crd-publish-openapi-8880 --namespace=crd-publish-openapi-8880 create -f -'
  Sep 13 12:41:42.641: INFO: rc: 1
  Sep 13 12:41:42.641: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=crd-publish-openapi-8880 --namespace=crd-publish-openapi-8880 apply -f -'
  Sep 13 12:41:42.701: INFO: rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 09/13/24 12:41:42.701
  Sep 13 12:41:42.701: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=crd-publish-openapi-8880 --namespace=crd-publish-openapi-8880 create -f -'
  Sep 13 12:41:42.771: INFO: rc: 1
  Sep 13 12:41:42.771: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=crd-publish-openapi-8880 --namespace=crd-publish-openapi-8880 apply -f -'
  Sep 13 12:41:42.842: INFO: rc: 1
  STEP: kubectl explain works to explain CR properties @ 09/13/24 12:41:42.842
  Sep 13 12:41:42.843: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=crd-publish-openapi-8880 explain e2e-test-crd-publish-openapi-6388-crds'
  Sep 13 12:41:42.898: INFO: stderr: ""
  Sep 13 12:41:42.898: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-6388-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 09/13/24 12:41:42.898
  Sep 13 12:41:42.899: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=crd-publish-openapi-8880 explain e2e-test-crd-publish-openapi-6388-crds.metadata'
  Sep 13 12:41:42.963: INFO: stderr: ""
  Sep 13 12:41:42.963: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-6388-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  Sep 13 12:41:42.963: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=crd-publish-openapi-8880 explain e2e-test-crd-publish-openapi-6388-crds.spec'
  Sep 13 12:41:43.035: INFO: stderr: ""
  Sep 13 12:41:43.035: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-6388-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  Sep 13 12:41:43.035: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=crd-publish-openapi-8880 explain e2e-test-crd-publish-openapi-6388-crds.spec.bars'
  Sep 13 12:41:43.090: INFO: stderr: ""
  Sep 13 12:41:43.090: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-6388-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 09/13/24 12:41:43.091
  Sep 13 12:41:43.091: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=crd-publish-openapi-8880 explain e2e-test-crd-publish-openapi-6388-crds.spec.bars2'
  Sep 13 12:41:43.155: INFO: rc: 1
  Sep 13 12:41:44.869: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8880" for this suite. @ 09/13/24 12:41:44.877
• [4.494 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:176
  STEP: Creating a kubernetes client @ 09/13/24 12:41:44.884
  Sep 13 12:41:44.884: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename configmap @ 09/13/24 12:41:44.886
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:41:44.918
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:41:44.923
  STEP: Creating configMap with name configmap-test-upd-46f33c84-27ae-4de0-9608-f50ea222a44f @ 09/13/24 12:41:44.929
  STEP: Creating the pod @ 09/13/24 12:41:44.936
  STEP: Waiting for pod with text data @ 09/13/24 12:41:46.949
  STEP: Waiting for pod with binary data @ 09/13/24 12:41:46.954
  Sep 13 12:41:46.958: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4040" for this suite. @ 09/13/24 12:41:46.962
• [2.085 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:48
  STEP: Creating a kubernetes client @ 09/13/24 12:41:46.97
  Sep 13 12:41:46.970: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename projected @ 09/13/24 12:41:46.971
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:41:46.989
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:41:46.992
  STEP: Creating configMap with name projected-configmap-test-volume-765fdff9-575e-4242-860f-a4fd3f33dba8 @ 09/13/24 12:41:46.996
  STEP: Creating a pod to test consume configMaps @ 09/13/24 12:41:47.003
  STEP: Saw pod success @ 09/13/24 12:41:51.02
  Sep 13 12:41:51.022: INFO: Trying to get logs from node cncf-3 pod pod-projected-configmaps-d525e557-d7ab-43f7-883b-0d8f35a4a083 container agnhost-container: <nil>
  STEP: delete the pod @ 09/13/24 12:41:51.027
  Sep 13 12:41:51.064: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6788" for this suite. @ 09/13/24 12:41:51.068
• [4.106 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:489
  STEP: Creating a kubernetes client @ 09/13/24 12:41:51.076
  Sep 13 12:41:51.076: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename deployment @ 09/13/24 12:41:51.077
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:41:51.101
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:41:51.103
  STEP: creating a Deployment @ 09/13/24 12:41:51.118
  Sep 13 12:41:51.118: INFO: Creating simple deployment test-deployment-br66g
  Sep 13 12:41:51.134: INFO: deployment "test-deployment-br66g" doesn't have the required revision set
  STEP: Getting /status @ 09/13/24 12:41:53.144
  Sep 13 12:41:53.146: INFO: Deployment test-deployment-br66g has Conditions: [{Available True 2024-09-13 12:41:52 +0000 UTC 2024-09-13 12:41:52 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2024-09-13 12:41:52 +0000 UTC 2024-09-13 12:41:51 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-br66g-5d576bd769" has successfully progressed.}]
  STEP: updating Deployment Status @ 09/13/24 12:41:53.146
  Sep 13 12:41:53.165: INFO: updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.September, 13, 12, 41, 52, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 13, 12, 41, 52, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 13, 12, 41, 52, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 13, 12, 41, 51, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-br66g-5d576bd769\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 09/13/24 12:41:53.165
  Sep 13 12:41:53.167: INFO: Observed &Deployment event: ADDED
  Sep 13 12:41:53.167: INFO: Observed Deployment test-deployment-br66g in namespace deployment-283 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-09-13 12:41:51 +0000 UTC 2024-09-13 12:41:51 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-br66g-5d576bd769"}
  Sep 13 12:41:53.168: INFO: Observed &Deployment event: MODIFIED
  Sep 13 12:41:53.171: INFO: Observed Deployment test-deployment-br66g in namespace deployment-283 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-09-13 12:41:51 +0000 UTC 2024-09-13 12:41:51 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-br66g-5d576bd769"}
  Sep 13 12:41:53.171: INFO: Observed Deployment test-deployment-br66g in namespace deployment-283 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-09-13 12:41:51 +0000 UTC 2024-09-13 12:41:51 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Sep 13 12:41:53.172: INFO: Observed &Deployment event: MODIFIED
  Sep 13 12:41:53.172: INFO: Observed Deployment test-deployment-br66g in namespace deployment-283 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-09-13 12:41:51 +0000 UTC 2024-09-13 12:41:51 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Sep 13 12:41:53.172: INFO: Observed Deployment test-deployment-br66g in namespace deployment-283 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-09-13 12:41:51 +0000 UTC 2024-09-13 12:41:51 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-br66g-5d576bd769" is progressing.}
  Sep 13 12:41:53.172: INFO: Observed &Deployment event: MODIFIED
  Sep 13 12:41:53.172: INFO: Observed Deployment test-deployment-br66g in namespace deployment-283 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-09-13 12:41:52 +0000 UTC 2024-09-13 12:41:52 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Sep 13 12:41:53.172: INFO: Observed Deployment test-deployment-br66g in namespace deployment-283 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-09-13 12:41:52 +0000 UTC 2024-09-13 12:41:51 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-br66g-5d576bd769" has successfully progressed.}
  Sep 13 12:41:53.173: INFO: Observed &Deployment event: MODIFIED
  Sep 13 12:41:53.173: INFO: Observed Deployment test-deployment-br66g in namespace deployment-283 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-09-13 12:41:52 +0000 UTC 2024-09-13 12:41:52 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Sep 13 12:41:53.173: INFO: Observed Deployment test-deployment-br66g in namespace deployment-283 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-09-13 12:41:52 +0000 UTC 2024-09-13 12:41:51 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-br66g-5d576bd769" has successfully progressed.}
  Sep 13 12:41:53.173: INFO: Found Deployment test-deployment-br66g in namespace deployment-283 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Sep 13 12:41:53.173: INFO: Deployment test-deployment-br66g has an updated status
  STEP: patching the Statefulset Status @ 09/13/24 12:41:53.173
  Sep 13 12:41:53.173: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Sep 13 12:41:53.181: INFO: Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 09/13/24 12:41:53.181
  Sep 13 12:41:53.184: INFO: Observed &Deployment event: ADDED
  Sep 13 12:41:53.185: INFO: Observed deployment test-deployment-br66g in namespace deployment-283 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-09-13 12:41:51 +0000 UTC 2024-09-13 12:41:51 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-br66g-5d576bd769"}
  Sep 13 12:41:53.185: INFO: Observed &Deployment event: MODIFIED
  Sep 13 12:41:53.185: INFO: Observed deployment test-deployment-br66g in namespace deployment-283 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-09-13 12:41:51 +0000 UTC 2024-09-13 12:41:51 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-br66g-5d576bd769"}
  Sep 13 12:41:53.185: INFO: Observed deployment test-deployment-br66g in namespace deployment-283 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-09-13 12:41:51 +0000 UTC 2024-09-13 12:41:51 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Sep 13 12:41:53.185: INFO: Observed &Deployment event: MODIFIED
  Sep 13 12:41:53.185: INFO: Observed deployment test-deployment-br66g in namespace deployment-283 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-09-13 12:41:51 +0000 UTC 2024-09-13 12:41:51 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Sep 13 12:41:53.185: INFO: Observed deployment test-deployment-br66g in namespace deployment-283 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-09-13 12:41:51 +0000 UTC 2024-09-13 12:41:51 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-br66g-5d576bd769" is progressing.}
  Sep 13 12:41:53.186: INFO: Observed &Deployment event: MODIFIED
  Sep 13 12:41:53.186: INFO: Observed deployment test-deployment-br66g in namespace deployment-283 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-09-13 12:41:52 +0000 UTC 2024-09-13 12:41:52 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Sep 13 12:41:53.186: INFO: Observed deployment test-deployment-br66g in namespace deployment-283 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-09-13 12:41:52 +0000 UTC 2024-09-13 12:41:51 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-br66g-5d576bd769" has successfully progressed.}
  Sep 13 12:41:53.186: INFO: Observed &Deployment event: MODIFIED
  Sep 13 12:41:53.187: INFO: Observed deployment test-deployment-br66g in namespace deployment-283 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-09-13 12:41:52 +0000 UTC 2024-09-13 12:41:52 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Sep 13 12:41:53.187: INFO: Observed deployment test-deployment-br66g in namespace deployment-283 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-09-13 12:41:52 +0000 UTC 2024-09-13 12:41:51 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-br66g-5d576bd769" has successfully progressed.}
  Sep 13 12:41:53.187: INFO: Observed deployment test-deployment-br66g in namespace deployment-283 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Sep 13 12:41:53.187: INFO: Observed &Deployment event: MODIFIED
  Sep 13 12:41:53.188: INFO: Found deployment test-deployment-br66g in namespace deployment-283 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  Sep 13 12:41:53.188: INFO: Deployment test-deployment-br66g has a patched status
  Sep 13 12:41:53.195: INFO: Deployment "test-deployment-br66g":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-br66g",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-283",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6b234e76-8f16-4f00-b52d-34e8c81fda24",
      ResourceVersion: (string) (len=6) "713325",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861828111,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861828111,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861828113,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861828113,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=373) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 50 72 6f  |:{\"type\":\"Pro|
              000000a0  67 72 65 73 73 69 6e 67  5c 22 7d 22 3a 7b 22 2e  |gressing\"}":{".|
              000000b0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000000c0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000000d0  66 3a 6c 61 73 74 55 70  64 61 74 65 54 69 6d 65  |f:lastUpdateTime|
              000000e0  22 3a 7b 7d 2c 22 66 3a  6d 65 73 73 61 67 65 22  |":{},"f:message"|
              000000f0  3a 7b 7d 2c 22 66 3a 72  65 61 73 6f 6e 22 3a 7b  |:{},"f:reason":{|
              00000100  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              00000110  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              00000120  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000130  69 6f 6e 22 3a 7b 7d 2c  22 66 3a 72 65 61 64 79  |ion":{},"f:ready|
              00000140  52 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |Replicas":{},"f:|
              00000150  72 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |replicas":{},"f:|
              00000160  75 70 64 61 74 65 64 52  65 70 6c 69 63 61 73 22  |updatedReplicas"|
              00000170  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861828113,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861828113,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "FoundNewReplicaSet",
          Message: (string) (len=56) "Found new replica set \"test-deployment-br66g-5d576bd769\""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Sep 13 12:41:53.212: INFO: New ReplicaSet "test-deployment-br66g-5d576bd769" of Deployment "test-deployment-br66g":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-br66g-5d576bd769",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-283",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6eb3269e-98a0-4a9a-8922-da8bf89d566a",
      ResourceVersion: (string) (len=6) "713320",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861828111,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-br66g",
          UID: (types.UID) (len=36) "6b234e76-8f16-4f00-b52d-34e8c81fda24",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861828111,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 36 62 32  |k:{\"uid\":\"6b2|
              00000120  33 34 65 37 36 2d 38 66  31 36 2d 34 66 30 30 2d  |34e76-8f16-4f00-|
              00000130  62 35 32 64 2d 33 34 65  38 63 38 31 66 64 61 32  |b52d-34e8c81fda2|
              00000140  34 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |4\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861828112,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769",
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769",
            (string) (len=3) "e2e": (string) (len=7) "testing"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Sep 13 12:41:53.215: INFO: Pod "test-deployment-br66g-5d576bd769-zl5zm" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=38) "test-deployment-br66g-5d576bd769-zl5zm",
      GenerateName: (string) (len=33) "test-deployment-br66g-5d576bd769-",
      Namespace: (string) (len=14) "deployment-283",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "87eaeb97-e84b-459a-aa3f-ef4033df0649",
      ResourceVersion: (string) (len=6) "713319",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861828111,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=32) "test-deployment-br66g-5d576bd769",
          UID: (types.UID) (len=36) "6eb3269e-98a0-4a9a-8922-da8bf89d566a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861828111,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 36 65 62 33 32 36 39  65 2d 39 38 61 30 2d 34  |"6eb3269e-98a0-4|
              000000a0  61 39 61 2d 38 39 32 32  2d 64 61 38 62 66 38 39  |a9a-8922-da8bf89|
              000000b0  64 35 36 36 61 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |d566a\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861828112,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 30 2e 31 2e 31 31 38  5c 22 7d 22 3a 7b 22 2e  |.0.1.118\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9vttq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9vttq",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "cncf-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861828112,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861828111,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861828112,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861828112,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861828111,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.10.50.243",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.10.50.243"
        }
      },
      PodIP: (string) (len=10) "10.0.1.118",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.0.1.118"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861828111,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63861828112,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://7f9e8770e06d94f08e76a914222e171275eebe509b375eb82cab3daa03d1063c",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 13 12:41:53.216: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-283" for this suite. @ 09/13/24 12:41:53.219
• [2.151 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:380
  STEP: Creating a kubernetes client @ 09/13/24 12:41:53.227
  Sep 13 12:41:53.227: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename gc @ 09/13/24 12:41:53.228
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:41:53.24
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:41:53.241
  STEP: create the rc @ 09/13/24 12:41:53.255
  W0913 12:41:53.266070      23 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 09/13/24 12:41:59.277
  STEP: wait for the rc to be deleted @ 09/13/24 12:41:59.285
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 09/13/24 12:42:04.29
  STEP: Gathering metrics @ 09/13/24 12:42:34.3
  Sep 13 12:42:34.370: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Sep 13 12:42:34.370: INFO: Deleting pod "simpletest.rc-24skt" in namespace "gc-2258"
  Sep 13 12:42:34.387: INFO: Deleting pod "simpletest.rc-2cr5b" in namespace "gc-2258"
  Sep 13 12:42:34.404: INFO: Deleting pod "simpletest.rc-49fz5" in namespace "gc-2258"
  Sep 13 12:42:34.417: INFO: Deleting pod "simpletest.rc-4gdln" in namespace "gc-2258"
  Sep 13 12:42:34.437: INFO: Deleting pod "simpletest.rc-4j5qn" in namespace "gc-2258"
  Sep 13 12:42:34.467: INFO: Deleting pod "simpletest.rc-4l4zh" in namespace "gc-2258"
  Sep 13 12:42:34.485: INFO: Deleting pod "simpletest.rc-4qgzs" in namespace "gc-2258"
  Sep 13 12:42:34.513: INFO: Deleting pod "simpletest.rc-52f6w" in namespace "gc-2258"
  Sep 13 12:42:34.535: INFO: Deleting pod "simpletest.rc-555nw" in namespace "gc-2258"
  Sep 13 12:42:34.784: INFO: Deleting pod "simpletest.rc-557qg" in namespace "gc-2258"
  Sep 13 12:42:34.795: INFO: Deleting pod "simpletest.rc-5dhc7" in namespace "gc-2258"
  Sep 13 12:42:34.811: INFO: Deleting pod "simpletest.rc-6hvpp" in namespace "gc-2258"
  Sep 13 12:42:34.827: INFO: Deleting pod "simpletest.rc-6m24k" in namespace "gc-2258"
  Sep 13 12:42:34.845: INFO: Deleting pod "simpletest.rc-6w5pz" in namespace "gc-2258"
  Sep 13 12:42:34.863: INFO: Deleting pod "simpletest.rc-7gxj8" in namespace "gc-2258"
  Sep 13 12:42:34.891: INFO: Deleting pod "simpletest.rc-7sztd" in namespace "gc-2258"
  Sep 13 12:42:34.910: INFO: Deleting pod "simpletest.rc-7x4qm" in namespace "gc-2258"
  Sep 13 12:42:34.926: INFO: Deleting pod "simpletest.rc-7z6nv" in namespace "gc-2258"
  Sep 13 12:42:34.944: INFO: Deleting pod "simpletest.rc-84p6p" in namespace "gc-2258"
  Sep 13 12:42:34.956: INFO: Deleting pod "simpletest.rc-8mvw9" in namespace "gc-2258"
  Sep 13 12:42:34.976: INFO: Deleting pod "simpletest.rc-8r2bn" in namespace "gc-2258"
  Sep 13 12:42:35.012: INFO: Deleting pod "simpletest.rc-97gnn" in namespace "gc-2258"
  Sep 13 12:42:35.022: INFO: Deleting pod "simpletest.rc-9pw7m" in namespace "gc-2258"
  Sep 13 12:42:35.053: INFO: Deleting pod "simpletest.rc-9t4sf" in namespace "gc-2258"
  Sep 13 12:42:35.067: INFO: Deleting pod "simpletest.rc-b2z7f" in namespace "gc-2258"
  Sep 13 12:42:35.102: INFO: Deleting pod "simpletest.rc-b5q2t" in namespace "gc-2258"
  Sep 13 12:42:35.116: INFO: Deleting pod "simpletest.rc-b5wlt" in namespace "gc-2258"
  Sep 13 12:42:35.138: INFO: Deleting pod "simpletest.rc-bbcjm" in namespace "gc-2258"
  Sep 13 12:42:35.164: INFO: Deleting pod "simpletest.rc-bh5jw" in namespace "gc-2258"
  Sep 13 12:42:35.184: INFO: Deleting pod "simpletest.rc-bkxkb" in namespace "gc-2258"
  Sep 13 12:42:35.212: INFO: Deleting pod "simpletest.rc-bvspf" in namespace "gc-2258"
  Sep 13 12:42:35.240: INFO: Deleting pod "simpletest.rc-cd85z" in namespace "gc-2258"
  Sep 13 12:42:35.258: INFO: Deleting pod "simpletest.rc-cm25g" in namespace "gc-2258"
  Sep 13 12:42:35.276: INFO: Deleting pod "simpletest.rc-cnmcv" in namespace "gc-2258"
  Sep 13 12:42:35.303: INFO: Deleting pod "simpletest.rc-drklf" in namespace "gc-2258"
  Sep 13 12:42:35.336: INFO: Deleting pod "simpletest.rc-dsm4h" in namespace "gc-2258"
  Sep 13 12:42:35.352: INFO: Deleting pod "simpletest.rc-dsxkq" in namespace "gc-2258"
  Sep 13 12:42:35.378: INFO: Deleting pod "simpletest.rc-dwx9k" in namespace "gc-2258"
  Sep 13 12:42:35.400: INFO: Deleting pod "simpletest.rc-f92vp" in namespace "gc-2258"
  Sep 13 12:42:35.417: INFO: Deleting pod "simpletest.rc-fc2p8" in namespace "gc-2258"
  Sep 13 12:42:35.450: INFO: Deleting pod "simpletest.rc-fxphs" in namespace "gc-2258"
  Sep 13 12:42:35.476: INFO: Deleting pod "simpletest.rc-g2mfh" in namespace "gc-2258"
  Sep 13 12:42:35.496: INFO: Deleting pod "simpletest.rc-g2zb2" in namespace "gc-2258"
  Sep 13 12:42:35.508: INFO: Deleting pod "simpletest.rc-g572f" in namespace "gc-2258"
  Sep 13 12:42:35.523: INFO: Deleting pod "simpletest.rc-gkxwz" in namespace "gc-2258"
  Sep 13 12:42:35.541: INFO: Deleting pod "simpletest.rc-gp2xl" in namespace "gc-2258"
  Sep 13 12:42:35.569: INFO: Deleting pod "simpletest.rc-gsghc" in namespace "gc-2258"
  Sep 13 12:42:35.608: INFO: Deleting pod "simpletest.rc-hcx7g" in namespace "gc-2258"
  Sep 13 12:42:35.628: INFO: Deleting pod "simpletest.rc-hgd78" in namespace "gc-2258"
  Sep 13 12:42:35.653: INFO: Deleting pod "simpletest.rc-hjk4w" in namespace "gc-2258"
  Sep 13 12:42:35.684: INFO: Deleting pod "simpletest.rc-hlm9v" in namespace "gc-2258"
  Sep 13 12:42:35.711: INFO: Deleting pod "simpletest.rc-hmrzq" in namespace "gc-2258"
  Sep 13 12:42:35.740: INFO: Deleting pod "simpletest.rc-j4kq4" in namespace "gc-2258"
  Sep 13 12:42:35.764: INFO: Deleting pod "simpletest.rc-j6gvc" in namespace "gc-2258"
  Sep 13 12:42:35.795: INFO: Deleting pod "simpletest.rc-jcjj5" in namespace "gc-2258"
  Sep 13 12:42:35.817: INFO: Deleting pod "simpletest.rc-jckkw" in namespace "gc-2258"
  Sep 13 12:42:35.835: INFO: Deleting pod "simpletest.rc-jd9kj" in namespace "gc-2258"
  Sep 13 12:42:35.851: INFO: Deleting pod "simpletest.rc-jgsxr" in namespace "gc-2258"
  Sep 13 12:42:35.866: INFO: Deleting pod "simpletest.rc-k2zgv" in namespace "gc-2258"
  Sep 13 12:42:35.884: INFO: Deleting pod "simpletest.rc-k9rq4" in namespace "gc-2258"
  Sep 13 12:42:35.918: INFO: Deleting pod "simpletest.rc-kz5s7" in namespace "gc-2258"
  Sep 13 12:42:35.932: INFO: Deleting pod "simpletest.rc-l9mk5" in namespace "gc-2258"
  Sep 13 12:42:35.950: INFO: Deleting pod "simpletest.rc-lpj6l" in namespace "gc-2258"
  Sep 13 12:42:35.977: INFO: Deleting pod "simpletest.rc-lrr7m" in namespace "gc-2258"
  Sep 13 12:42:35.999: INFO: Deleting pod "simpletest.rc-ls8dd" in namespace "gc-2258"
  Sep 13 12:42:36.019: INFO: Deleting pod "simpletest.rc-ltkx9" in namespace "gc-2258"
  Sep 13 12:42:36.037: INFO: Deleting pod "simpletest.rc-ltzz8" in namespace "gc-2258"
  Sep 13 12:42:36.052: INFO: Deleting pod "simpletest.rc-mgp88" in namespace "gc-2258"
  Sep 13 12:42:36.073: INFO: Deleting pod "simpletest.rc-mhdwf" in namespace "gc-2258"
  Sep 13 12:42:36.092: INFO: Deleting pod "simpletest.rc-mhpxc" in namespace "gc-2258"
  Sep 13 12:42:36.111: INFO: Deleting pod "simpletest.rc-mpcrr" in namespace "gc-2258"
  Sep 13 12:42:36.139: INFO: Deleting pod "simpletest.rc-n4qw5" in namespace "gc-2258"
  Sep 13 12:42:36.163: INFO: Deleting pod "simpletest.rc-nm55b" in namespace "gc-2258"
  Sep 13 12:42:36.180: INFO: Deleting pod "simpletest.rc-ph7nj" in namespace "gc-2258"
  Sep 13 12:42:36.199: INFO: Deleting pod "simpletest.rc-pwqhs" in namespace "gc-2258"
  Sep 13 12:42:36.221: INFO: Deleting pod "simpletest.rc-qchfl" in namespace "gc-2258"
  Sep 13 12:42:36.269: INFO: Deleting pod "simpletest.rc-qqshr" in namespace "gc-2258"
  Sep 13 12:42:36.296: INFO: Deleting pod "simpletest.rc-qrffx" in namespace "gc-2258"
  Sep 13 12:42:36.328: INFO: Deleting pod "simpletest.rc-qwhbr" in namespace "gc-2258"
  Sep 13 12:42:36.356: INFO: Deleting pod "simpletest.rc-r6fc4" in namespace "gc-2258"
  Sep 13 12:42:36.378: INFO: Deleting pod "simpletest.rc-r788k" in namespace "gc-2258"
  Sep 13 12:42:36.403: INFO: Deleting pod "simpletest.rc-r8f8d" in namespace "gc-2258"
  Sep 13 12:42:36.417: INFO: Deleting pod "simpletest.rc-rn8zt" in namespace "gc-2258"
  Sep 13 12:42:36.451: INFO: Deleting pod "simpletest.rc-svd4g" in namespace "gc-2258"
  Sep 13 12:42:36.488: INFO: Deleting pod "simpletest.rc-tgr4p" in namespace "gc-2258"
  Sep 13 12:42:36.503: INFO: Deleting pod "simpletest.rc-tqt29" in namespace "gc-2258"
  Sep 13 12:42:36.531: INFO: Deleting pod "simpletest.rc-vj67h" in namespace "gc-2258"
  Sep 13 12:42:36.565: INFO: Deleting pod "simpletest.rc-vqgdf" in namespace "gc-2258"
  Sep 13 12:42:36.598: INFO: Deleting pod "simpletest.rc-w6z8d" in namespace "gc-2258"
  Sep 13 12:42:36.614: INFO: Deleting pod "simpletest.rc-w7ctl" in namespace "gc-2258"
  Sep 13 12:42:36.641: INFO: Deleting pod "simpletest.rc-w7gts" in namespace "gc-2258"
  Sep 13 12:42:36.665: INFO: Deleting pod "simpletest.rc-w8nds" in namespace "gc-2258"
  Sep 13 12:42:36.697: INFO: Deleting pod "simpletest.rc-wjspn" in namespace "gc-2258"
  Sep 13 12:42:36.726: INFO: Deleting pod "simpletest.rc-wk9w9" in namespace "gc-2258"
  Sep 13 12:42:36.750: INFO: Deleting pod "simpletest.rc-wmwjj" in namespace "gc-2258"
  Sep 13 12:42:36.772: INFO: Deleting pod "simpletest.rc-xmqlz" in namespace "gc-2258"
  Sep 13 12:42:36.810: INFO: Deleting pod "simpletest.rc-xnf8f" in namespace "gc-2258"
  Sep 13 12:42:36.867: INFO: Deleting pod "simpletest.rc-xxh45" in namespace "gc-2258"
  Sep 13 12:42:36.914: INFO: Deleting pod "simpletest.rc-zvpxf" in namespace "gc-2258"
  Sep 13 12:42:36.984: INFO: Deleting pod "simpletest.rc-zzgcd" in namespace "gc-2258"
  Sep 13 12:42:37.021: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-2258" for this suite. @ 09/13/24 12:42:37.048
• [43.873 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:646
  STEP: Creating a kubernetes client @ 09/13/24 12:42:37.1
  Sep 13 12:42:37.100: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename webhook @ 09/13/24 12:42:37.101
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:42:37.12
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:42:37.123
  STEP: Setting up server cert @ 09/13/24 12:42:37.159
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/13/24 12:42:37.505
  STEP: Deploying the webhook pod @ 09/13/24 12:42:37.512
  STEP: Wait for the deployment to be ready @ 09/13/24 12:42:37.531
  Sep 13 12:42:37.535: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 09/13/24 12:42:39.543
  STEP: Verifying the service has paired with the endpoint @ 09/13/24 12:42:39.555
  Sep 13 12:42:40.556: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 09/13/24 12:42:40.648
  STEP: Creating a configMap that should be mutated @ 09/13/24 12:42:40.659
  STEP: Deleting the collection of validation webhooks @ 09/13/24 12:42:40.683
  STEP: Creating a configMap that should not be mutated @ 09/13/24 12:42:40.726
  Sep 13 12:42:40.781: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-89" for this suite. @ 09/13/24 12:42:40.786
  STEP: Destroying namespace "webhook-markers-7438" for this suite. @ 09/13/24 12:42:40.796
• [3.703 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 09/13/24 12:42:40.805
  Sep 13 12:42:40.805: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename init-container @ 09/13/24 12:42:40.807
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:42:40.824
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:42:40.827
  STEP: creating the pod @ 09/13/24 12:42:40.829
  Sep 13 12:42:40.829: INFO: PodSpec: initContainers in spec.initContainers
  Sep 13 12:42:45.160: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-9992" for this suite. @ 09/13/24 12:42:45.164
• [4.369 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:70
  STEP: Creating a kubernetes client @ 09/13/24 12:42:45.174
  Sep 13 12:42:45.174: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename replication-controller @ 09/13/24 12:42:45.175
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:42:45.19
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:42:45.193
  STEP: Creating replication controller my-hostname-basic-b4c2baea-1169-4255-845b-d0ef52dab809 @ 09/13/24 12:42:45.195
  Sep 13 12:42:45.208: INFO: Pod name my-hostname-basic-b4c2baea-1169-4255-845b-d0ef52dab809: Found 0 pods out of 1
  Sep 13 12:42:50.212: INFO: Pod name my-hostname-basic-b4c2baea-1169-4255-845b-d0ef52dab809: Found 1 pods out of 1
  Sep 13 12:42:50.212: INFO: Ensuring all pods for ReplicationController "my-hostname-basic-b4c2baea-1169-4255-845b-d0ef52dab809" are running
  Sep 13 12:42:50.215: INFO: Pod "my-hostname-basic-b4c2baea-1169-4255-845b-d0ef52dab809-l7s87" is running and ready(conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-09-13 12:42:46 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-09-13 12:42:45 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-09-13 12:42:46 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-09-13 12:42:46 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-09-13 12:42:45 +0000 UTC Reason: Message:}])
  Sep 13 12:42:50.215: INFO: Trying to dial the pod
  STEP: trying to dial each unique pod @ 09/13/24 12:42:50.215
  Sep 13 12:42:50.227: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-8836" for this suite. @ 09/13/24 12:42:50.234
• [5.066 seconds]
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:130
  STEP: Creating a kubernetes client @ 09/13/24 12:42:50.239
  Sep 13 12:42:50.239: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename sched-preemption @ 09/13/24 12:42:50.24
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:42:50.25
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:42:50.253
  Sep 13 12:42:50.270: INFO: Waiting up to 1m0s for all nodes to be ready
  Sep 13 12:43:50.276: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 09/13/24 12:43:50.278
  Sep 13 12:43:50.293: INFO: Created pod: pod0-0-sched-preemption-low-priority
  Sep 13 12:43:50.311: INFO: Created pod: pod0-1-sched-preemption-medium-priority
  Sep 13 12:43:50.338: INFO: Created pod: pod1-0-sched-preemption-medium-priority
  Sep 13 12:43:50.355: INFO: Created pod: pod1-1-sched-preemption-medium-priority
  Sep 13 12:43:50.384: INFO: Created pod: pod2-0-sched-preemption-medium-priority
  Sep 13 12:43:50.406: INFO: Created pod: pod2-1-sched-preemption-medium-priority
  Sep 13 12:43:50.432: INFO: Created pod: pod3-0-sched-preemption-medium-priority
  Sep 13 12:43:50.443: INFO: Created pod: pod3-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 09/13/24 12:43:50.443
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 09/13/24 12:43:52.477
  Sep 13 12:43:56.615: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-9989" for this suite. @ 09/13/24 12:43:56.619
• [66.385 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:470
  STEP: Creating a kubernetes client @ 09/13/24 12:43:56.626
  Sep 13 12:43:56.626: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename sched-pred @ 09/13/24 12:43:56.626
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:43:56.654
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:43:56.657
  Sep 13 12:43:56.659: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Sep 13 12:43:56.666: INFO: Waiting for terminating namespaces to be deleted...
  Sep 13 12:43:56.668: INFO: 
  Logging pods the apiserver thinks is on node cncf-2 before test
  Sep 13 12:43:56.688: INFO: keycloak-76cc8f6cb7-cj7kf from auth started at 2024-09-13 09:57:40 +0000 UTC (1 container statuses recorded)
  Sep 13 12:43:56.688: INFO: 	Container keycloak ready: true, restart count 0
  Sep 13 12:43:56.688: INFO: mariadb-keycloak-5b96c4c67d-txbrd from auth started at 2024-09-13 09:57:40 +0000 UTC (1 container statuses recorded)
  Sep 13 12:43:56.688: INFO: 	Container mariadb-keycloak ready: true, restart count 0
  Sep 13 12:43:56.688: INFO: oauth2-redis-admin-0 from auth started at 2024-09-13 09:31:35 +0000 UTC (1 container statuses recorded)
  Sep 13 12:43:56.688: INFO: 	Container redis ready: true, restart count 0
  Sep 13 12:43:56.688: INFO: cloud-service-api-75445b94f9-sjmqd from cmp started at 2024-09-13 09:59:40 +0000 UTC (2 container statuses recorded)
  Sep 13 12:43:56.688: INFO: 	Container cloud-service-api ready: true, restart count 0
  Sep 13 12:43:56.688: INFO: 	Container istio-proxy ready: true, restart count 0
  Sep 13 12:43:56.688: INFO: cloud-service-collector-6bd966f4d6-tqsdq from cmp started at 2024-09-13 09:59:40 +0000 UTC (2 container statuses recorded)
  Sep 13 12:43:56.688: INFO: 	Container cloud-service-collector ready: true, restart count 0
  Sep 13 12:43:56.688: INFO: 	Container istio-proxy ready: true, restart count 0
  Sep 13 12:43:56.688: INFO: maestro-auth-gateway-admin-7b4b969475-75b5g from cmp started at 2024-09-13 09:59:40 +0000 UTC (2 container statuses recorded)
  Sep 13 12:43:56.688: INFO: 	Container istio-proxy ready: true, restart count 0
  Sep 13 12:43:56.688: INFO: 	Container maestro-auth-gateway ready: true, restart count 0
  Sep 13 12:43:56.688: INFO: maestro-common-api-admin-b46b8f8b8-df9xr from cmp started at 2024-09-13 09:58:52 +0000 UTC (2 container statuses recorded)
  Sep 13 12:43:56.688: INFO: 	Container istio-proxy ready: true, restart count 0
  Sep 13 12:43:56.688: INFO: 	Container maestro-common-api ready: true, restart count 0
  Sep 13 12:43:56.688: INFO: maestro-host-app-admin-7d644fbb7b-pdwbt from cmp started at 2024-09-13 09:59:04 +0000 UTC (2 container statuses recorded)
  Sep 13 12:43:56.688: INFO: 	Container istio-proxy ready: true, restart count 0
  Sep 13 12:43:56.688: INFO: 	Container maestro-host-app ready: true, restart count 0
  Sep 13 12:43:56.688: INFO: maestro-remote-app-admin-6f86d5cb87-n7x59 from cmp started at 2024-09-13 10:02:45 +0000 UTC (2 container statuses recorded)
  Sep 13 12:43:56.688: INFO: 	Container istio-proxy ready: true, restart count 0
  Sep 13 12:43:56.688: INFO: 	Container maestro-remote-app ready: true, restart count 0
  Sep 13 12:43:56.688: INFO: mariadb-maxscale-745d5dfb5f-9m26l from dataplatform started at 2024-09-13 09:57:40 +0000 UTC (1 container statuses recorded)
  Sep 13 12:43:56.688: INFO: 	Container maxscale ready: true, restart count 0
  Sep 13 12:43:56.688: INFO: vault-1 from dataplatform started at 2024-09-13 09:31:36 +0000 UTC (1 container statuses recorded)
  Sep 13 12:43:56.688: INFO: 	Container vault ready: true, restart count 0
  Sep 13 12:43:56.688: INFO: ingress-nginx-controller-66f986c956-fkb8s from ingress-nginx started at 2024-09-13 09:57:41 +0000 UTC (1 container statuses recorded)
  Sep 13 12:43:56.688: INFO: 	Container controller ready: true, restart count 0
  Sep 13 12:43:56.688: INFO: istio-gateway-5f7f7c65d8-m5wpn from istio-system started at 2024-09-13 10:03:27 +0000 UTC (1 container statuses recorded)
  Sep 13 12:43:56.688: INFO: 	Container istio-proxy ready: true, restart count 0
  Sep 13 12:43:56.688: INFO: istiod-f77745497-cqmfd from istio-system started at 2024-09-13 09:57:41 +0000 UTC (1 container statuses recorded)
  Sep 13 12:43:56.688: INFO: 	Container discovery ready: true, restart count 0
  Sep 13 12:43:56.688: INFO: cilium-jzdbd from kube-system started at 2024-09-13 09:30:51 +0000 UTC (1 container statuses recorded)
  Sep 13 12:43:56.688: INFO: 	Container cilium-agent ready: true, restart count 0
  Sep 13 12:43:56.688: INFO: kube-proxy-c6wbb from kube-system started at 2024-09-13 07:33:07 +0000 UTC (1 container statuses recorded)
  Sep 13 12:43:56.688: INFO: 	Container kube-proxy ready: true, restart count 1
  Sep 13 12:43:56.688: INFO: nginx-proxy-cncf-2 from kube-system started at 2024-09-13 09:30:34 +0000 UTC (1 container statuses recorded)
  Sep 13 12:43:56.688: INFO: 	Container nginx-proxy ready: true, restart count 2
  Sep 13 12:43:56.688: INFO: csi-cephfsplugin-k4vk8 from rook-ceph started at 2024-09-12 04:28:27 +0000 UTC (3 container statuses recorded)
  Sep 13 12:43:56.688: INFO: 	Container csi-cephfsplugin ready: true, restart count 2
  Sep 13 12:43:56.688: INFO: 	Container driver-registrar ready: true, restart count 2
  Sep 13 12:43:56.688: INFO: 	Container log-collector ready: true, restart count 1
  Sep 13 12:43:56.688: INFO: csi-cephfsplugin-provisioner-69554c6fcb-p7sjj from rook-ceph started at 2024-09-13 09:57:40 +0000 UTC (6 container statuses recorded)
  Sep 13 12:43:56.688: INFO: 	Container csi-attacher ready: true, restart count 0
  Sep 13 12:43:56.688: INFO: 	Container csi-cephfsplugin ready: true, restart count 0
  Sep 13 12:43:56.688: INFO: 	Container csi-provisioner ready: true, restart count 0
  Sep 13 12:43:56.688: INFO: 	Container csi-resizer ready: true, restart count 0
  Sep 13 12:43:56.688: INFO: 	Container csi-snapshotter ready: true, restart count 0
  Sep 13 12:43:56.688: INFO: 	Container log-collector ready: true, restart count 0
  Sep 13 12:43:56.688: INFO: csi-rbdplugin-provisioner-78947cbcdb-sdpts from rook-ceph started at 2024-09-13 09:57:42 +0000 UTC (6 container statuses recorded)
  Sep 13 12:43:56.688: INFO: 	Container csi-attacher ready: true, restart count 0
  Sep 13 12:43:56.688: INFO: 	Container csi-provisioner ready: true, restart count 0
  Sep 13 12:43:56.688: INFO: 	Container csi-rbdplugin ready: true, restart count 0
  Sep 13 12:43:56.688: INFO: 	Container csi-resizer ready: true, restart count 0
  Sep 13 12:43:56.688: INFO: 	Container csi-snapshotter ready: true, restart count 0
  Sep 13 12:43:56.688: INFO: 	Container log-collector ready: true, restart count 0
  Sep 13 12:43:56.688: INFO: csi-rbdplugin-tjtg5 from rook-ceph started at 2024-09-12 04:28:26 +0000 UTC (3 container statuses recorded)
  Sep 13 12:43:56.689: INFO: 	Container csi-rbdplugin ready: true, restart count 2
  Sep 13 12:43:56.689: INFO: 	Container driver-registrar ready: true, restart count 2
  Sep 13 12:43:56.689: INFO: 	Container log-collector ready: true, restart count 1
  Sep 13 12:43:56.689: INFO: rook-ceph-crashcollector-cncf-2-66bdbb4dc-k99dz from rook-ceph started at 2024-09-13 10:34:53 +0000 UTC (1 container statuses recorded)
  Sep 13 12:43:56.689: INFO: 	Container ceph-crash ready: true, restart count 0
  Sep 13 12:43:56.689: INFO: rook-ceph-exporter-cncf-2-69c7b74bf6-rddt9 from rook-ceph started at 2024-09-13 10:34:56 +0000 UTC (1 container statuses recorded)
  Sep 13 12:43:56.689: INFO: 	Container ceph-exporter ready: true, restart count 0
  Sep 13 12:43:56.689: INFO: rook-ceph-mds-myfs-a-77ccbf966b-dv275 from rook-ceph started at 2024-09-13 09:52:44 +0000 UTC (2 container statuses recorded)
  Sep 13 12:43:56.689: INFO: 	Container log-collector ready: true, restart count 0
  Sep 13 12:43:56.689: INFO: 	Container mds ready: true, restart count 11
  Sep 13 12:43:56.689: INFO: rook-ceph-mgr-a-85d9858989-j5hfp from rook-ceph started at 2024-09-13 09:52:44 +0000 UTC (3 container statuses recorded)
  Sep 13 12:43:56.689: INFO: 	Container log-collector ready: true, restart count 0
  Sep 13 12:43:56.689: INFO: 	Container mgr ready: true, restart count 15
  Sep 13 12:43:56.689: INFO: 	Container watch-active ready: true, restart count 0
  Sep 13 12:43:56.689: INFO: rook-ceph-mon-a-586dfd7d45-8dpxm from rook-ceph started at 2024-09-13 09:31:03 +0000 UTC (2 container statuses recorded)
  Sep 13 12:43:56.689: INFO: 	Container log-collector ready: true, restart count 0
  Sep 13 12:43:56.689: INFO: 	Container mon ready: true, restart count 0
  Sep 13 12:43:56.689: INFO: rook-ceph-operator-5f86b7cfd4-dqxdc from rook-ceph started at 2024-09-13 10:34:50 +0000 UTC (1 container statuses recorded)
  Sep 13 12:43:56.689: INFO: 	Container rook-ceph-operator ready: true, restart count 0
  Sep 13 12:43:56.689: INFO: rook-ceph-osd-2-7c6b7cbf57-9p8bq from rook-ceph started at 2024-09-13 09:43:44 +0000 UTC (2 container statuses recorded)
  Sep 13 12:43:56.689: INFO: 	Container log-collector ready: true, restart count 0
  Sep 13 12:43:56.689: INFO: 	Container osd ready: true, restart count 0
  Sep 13 12:43:56.689: INFO: rook-ceph-osd-prepare-cncf-2-2cltm from rook-ceph started at 2024-09-13 10:35:23 +0000 UTC (1 container statuses recorded)
  Sep 13 12:43:56.689: INFO: 	Container provision ready: false, restart count 0
  Sep 13 12:43:56.689: INFO: pod0-1-sched-preemption-medium-priority from sched-preemption-9989 started at 2024-09-13 12:43:50 +0000 UTC (1 container statuses recorded)
  Sep 13 12:43:56.689: INFO: 	Container pod0-1-sched-preemption-medium-priority ready: true, restart count 0
  Sep 13 12:43:56.689: INFO: preemptor-pod from sched-preemption-9989 started at 2024-09-13 12:43:54 +0000 UTC (1 container statuses recorded)
  Sep 13 12:43:56.689: INFO: 	Container preemptor-pod ready: true, restart count 0
  Sep 13 12:43:56.689: INFO: sonobuoy-systemd-logs-daemon-set-1cc6cc51fb6b46e1-kpx2t from sonobuoy started at 2024-09-13 12:12:20 +0000 UTC (2 container statuses recorded)
  Sep 13 12:43:56.689: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep 13 12:43:56.689: INFO: 	Container systemd-logs ready: true, restart count 0
  Sep 13 12:43:56.689: INFO: trombone-remote-app-6497cdc6ff-f2gsz from trombone started at 2024-09-13 10:06:40 +0000 UTC (2 container statuses recorded)
  Sep 13 12:43:56.689: INFO: 	Container istio-proxy ready: true, restart count 0
  Sep 13 12:43:56.689: INFO: 	Container trombone-remote-app ready: true, restart count 0
  Sep 13 12:43:56.689: INFO: viola-api-admin-d66495c9c-tcsh6 from viola started at 2024-09-13 10:06:35 +0000 UTC (2 container statuses recorded)
  Sep 13 12:43:56.689: INFO: 	Container istio-proxy ready: true, restart count 0
  Sep 13 12:43:56.689: INFO: 	Container viola-api ready: true, restart count 0
  Sep 13 12:43:56.689: INFO: viola-remote-app-7d5b58b94c-dlvn4 from viola started at 2024-09-13 10:06:40 +0000 UTC (2 container statuses recorded)
  Sep 13 12:43:56.689: INFO: 	Container istio-proxy ready: true, restart count 0
  Sep 13 12:43:56.689: INFO: 	Container viola-remote-app ready: true, restart count 0
  Sep 13 12:43:56.689: INFO: 
  Logging pods the apiserver thinks is on node cncf-3 before test
  Sep 13 12:43:56.704: INFO: oauth2-redis-admin-3 from auth started at 2024-09-13 12:37:34 +0000 UTC (1 container statuses recorded)
  Sep 13 12:43:56.704: INFO: 	Container redis ready: true, restart count 0
  Sep 13 12:43:56.704: INFO: oauth2-redis-admin-5 from auth started at 2024-09-13 12:37:40 +0000 UTC (1 container statuses recorded)
  Sep 13 12:43:56.704: INFO: 	Container redis ready: true, restart count 0
  Sep 13 12:43:56.704: INFO: mariadb-backup-cronjob-28770520-5dltn from dataplatform started at 2024-09-13 12:40:00 +0000 UTC (1 container statuses recorded)
  Sep 13 12:43:56.704: INFO: 	Container mariadb-backup-cronjob ready: false, restart count 0
  Sep 13 12:43:56.704: INFO: my-cluster-kafka-2 from dataplatform started at 2024-09-13 12:38:11 +0000 UTC (1 container statuses recorded)
  Sep 13 12:43:56.704: INFO: 	Container kafka ready: true, restart count 0
  Sep 13 12:43:56.704: INFO: my-cluster-zookeeper-1 from dataplatform started at 2024-09-13 12:38:02 +0000 UTC (1 container statuses recorded)
  Sep 13 12:43:56.704: INFO: 	Container zookeeper ready: true, restart count 0
  Sep 13 12:43:56.704: INFO: redis-0 from dataplatform started at 2024-09-13 12:37:30 +0000 UTC (1 container statuses recorded)
  Sep 13 12:43:56.704: INFO: 	Container redis ready: true, restart count 0
  Sep 13 12:43:56.704: INFO: vault-2 from dataplatform started at 2024-09-13 12:37:35 +0000 UTC (1 container statuses recorded)
  Sep 13 12:43:56.704: INFO: 	Container vault ready: true, restart count 0
  Sep 13 12:43:56.704: INFO: vault-backup-cronjob-28770520-dq9tx from dataplatform started at 2024-09-13 12:40:00 +0000 UTC (1 container statuses recorded)
  Sep 13 12:43:56.704: INFO: 	Container clean-backup ready: false, restart count 0
  Sep 13 12:43:56.704: INFO: vault-unsealer-28770520-fz7kz from dataplatform started at 2024-09-13 12:40:00 +0000 UTC (1 container statuses recorded)
  Sep 13 12:43:56.704: INFO: 	Container unsealer ready: false, restart count 0
  Sep 13 12:43:56.704: INFO: cilium-gpk6m from kube-system started at 2024-09-13 10:34:22 +0000 UTC (1 container statuses recorded)
  Sep 13 12:43:56.704: INFO: 	Container cilium-agent ready: true, restart count 0
  Sep 13 12:43:56.704: INFO: cilium-operator-5d64788c99-v6sqx from kube-system started at 2024-09-13 10:34:22 +0000 UTC (1 container statuses recorded)
  Sep 13 12:43:56.704: INFO: 	Container cilium-operator ready: true, restart count 0
  Sep 13 12:43:56.704: INFO: kube-proxy-4wnlq from kube-system started at 2024-09-13 07:33:22 +0000 UTC (1 container statuses recorded)
  Sep 13 12:43:56.705: INFO: 	Container kube-proxy ready: true, restart count 1
  Sep 13 12:43:56.705: INFO: nginx-proxy-cncf-3 from kube-system started at 2024-09-13 10:34:20 +0000 UTC (1 container statuses recorded)
  Sep 13 12:43:56.705: INFO: 	Container nginx-proxy ready: true, restart count 3
  Sep 13 12:43:56.705: INFO: csi-cephfsplugin-xflnd from rook-ceph started at 2024-09-13 12:37:58 +0000 UTC (3 container statuses recorded)
  Sep 13 12:43:56.705: INFO: 	Container csi-cephfsplugin ready: true, restart count 0
  Sep 13 12:43:56.705: INFO: 	Container driver-registrar ready: true, restart count 0
  Sep 13 12:43:56.705: INFO: 	Container log-collector ready: true, restart count 0
  Sep 13 12:43:56.705: INFO: csi-rbdplugin-d8ds7 from rook-ceph started at 2024-09-13 12:37:29 +0000 UTC (3 container statuses recorded)
  Sep 13 12:43:56.705: INFO: 	Container csi-rbdplugin ready: true, restart count 0
  Sep 13 12:43:56.705: INFO: 	Container driver-registrar ready: true, restart count 0
  Sep 13 12:43:56.705: INFO: 	Container log-collector ready: true, restart count 0
  Sep 13 12:43:56.705: INFO: rook-ceph-crashcollector-cncf-3-c8d5f5b74-cd2s2 from rook-ceph started at 2024-09-13 12:37:35 +0000 UTC (1 container statuses recorded)
  Sep 13 12:43:56.705: INFO: 	Container ceph-crash ready: true, restart count 0
  Sep 13 12:43:56.705: INFO: rook-ceph-exporter-cncf-3-5848c97b8f-6c9s8 from rook-ceph started at 2024-09-13 12:37:38 +0000 UTC (1 container statuses recorded)
  Sep 13 12:43:56.705: INFO: 	Container ceph-exporter ready: true, restart count 0
  Sep 13 12:43:56.705: INFO: rook-ceph-mon-d-78554cdc5c-ld84x from rook-ceph started at 2024-09-13 12:37:29 +0000 UTC (2 container statuses recorded)
  Sep 13 12:43:56.705: INFO: 	Container log-collector ready: true, restart count 0
  Sep 13 12:43:56.705: INFO: 	Container mon ready: true, restart count 0
  Sep 13 12:43:56.705: INFO: rook-ceph-osd-1-697c857c8f-x4nn9 from rook-ceph started at 2024-09-13 12:37:29 +0000 UTC (2 container statuses recorded)
  Sep 13 12:43:56.705: INFO: 	Container log-collector ready: true, restart count 0
  Sep 13 12:43:56.705: INFO: 	Container osd ready: true, restart count 0
  Sep 13 12:43:56.705: INFO: rook-ceph-tools-7b67b65bd-dtvfv from rook-ceph started at 2024-09-13 12:37:29 +0000 UTC (1 container statuses recorded)
  Sep 13 12:43:56.705: INFO: 	Container rook-ceph-tools ready: true, restart count 0
  Sep 13 12:43:56.705: INFO: pod1-0-sched-preemption-medium-priority from sched-preemption-9989 started at 2024-09-13 12:43:50 +0000 UTC (1 container statuses recorded)
  Sep 13 12:43:56.705: INFO: 	Container pod1-0-sched-preemption-medium-priority ready: true, restart count 0
  Sep 13 12:43:56.705: INFO: pod1-1-sched-preemption-medium-priority from sched-preemption-9989 started at 2024-09-13 12:43:50 +0000 UTC (1 container statuses recorded)
  Sep 13 12:43:56.705: INFO: 	Container pod1-1-sched-preemption-medium-priority ready: true, restart count 0
  Sep 13 12:43:56.705: INFO: sonobuoy-systemd-logs-daemon-set-1cc6cc51fb6b46e1-p7scg from sonobuoy started at 2024-09-13 12:12:20 +0000 UTC (2 container statuses recorded)
  Sep 13 12:43:56.705: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep 13 12:43:56.705: INFO: 	Container systemd-logs ready: true, restart count 0
  Sep 13 12:43:56.705: INFO: 
  Logging pods the apiserver thinks is on node cncf-4 before test
  Sep 13 12:43:56.723: INFO: oauth2-proxy-admin-74cd8b4747-zb4v9 from auth started at 2024-09-13 12:30:02 +0000 UTC (1 container statuses recorded)
  Sep 13 12:43:56.723: INFO: 	Container oauth2-proxy-admin ready: true, restart count 0
  Sep 13 12:43:56.723: INFO: oauth2-redis-admin-2 from auth started at 2024-09-13 10:39:13 +0000 UTC (1 container statuses recorded)
  Sep 13 12:43:56.723: INFO: 	Container redis ready: true, restart count 0
  Sep 13 12:43:56.723: INFO: oauth2-redis-admin-4 from auth started at 2024-09-13 10:39:28 +0000 UTC (1 container statuses recorded)
  Sep 13 12:43:56.723: INFO: 	Container redis ready: true, restart count 0
  Sep 13 12:43:56.723: INFO: redis-cluster-maintenance-cronjob-28770510-4jhj8 from auth started at 2024-09-13 12:30:00 +0000 UTC (1 container statuses recorded)
  Sep 13 12:43:56.723: INFO: 	Container redis-cluster-check ready: false, restart count 0
  Sep 13 12:43:56.723: INFO: maestro-event-pusher-754554d8bc-rnszn from cmp started at 2024-09-13 10:41:42 +0000 UTC (2 container statuses recorded)
  Sep 13 12:43:56.723: INFO: 	Container istio-proxy ready: true, restart count 0
  Sep 13 12:43:56.723: INFO: 	Container maestro-event-pusher ready: true, restart count 0
  Sep 13 12:43:56.723: INFO: mariadb-sts-1 from dataplatform started at 2024-09-13 10:39:14 +0000 UTC (1 container statuses recorded)
  Sep 13 12:43:56.724: INFO: 	Container mariadb ready: true, restart count 0
  Sep 13 12:43:56.724: INFO: my-cluster-entity-operator-764cdd6bfb-w8n8x from dataplatform started at 2024-09-13 10:41:42 +0000 UTC (3 container statuses recorded)
  Sep 13 12:43:56.724: INFO: 	Container tls-sidecar ready: true, restart count 0
  Sep 13 12:43:56.724: INFO: 	Container topic-operator ready: true, restart count 0
  Sep 13 12:43:56.724: INFO: 	Container user-operator ready: true, restart count 0
  Sep 13 12:43:56.724: INFO: my-cluster-kafka-0 from dataplatform started at 2024-09-13 10:39:07 +0000 UTC (1 container statuses recorded)
  Sep 13 12:43:56.724: INFO: 	Container kafka ready: true, restart count 2
  Sep 13 12:43:56.724: INFO: my-cluster-zookeeper-0 from dataplatform started at 2024-09-13 10:39:07 +0000 UTC (1 container statuses recorded)
  Sep 13 12:43:56.724: INFO: 	Container zookeeper ready: true, restart count 0
  Sep 13 12:43:56.724: INFO: cilium-fj5rn from kube-system started at 2024-09-13 08:50:53 +0000 UTC (1 container statuses recorded)
  Sep 13 12:43:56.724: INFO: 	Container cilium-agent ready: true, restart count 1
  Sep 13 12:43:56.724: INFO: kube-proxy-2zm9n from kube-system started at 2024-09-13 07:33:08 +0000 UTC (1 container statuses recorded)
  Sep 13 12:43:56.724: INFO: 	Container kube-proxy ready: true, restart count 1
  Sep 13 12:43:56.724: INFO: nginx-proxy-cncf-4 from kube-system started at 2024-09-13 10:36:48 +0000 UTC (1 container statuses recorded)
  Sep 13 12:43:56.724: INFO: 	Container nginx-proxy ready: true, restart count 2
  Sep 13 12:43:56.724: INFO: csi-cephfsplugin-mj44d from rook-ceph started at 2024-09-12 04:28:27 +0000 UTC (3 container statuses recorded)
  Sep 13 12:43:56.724: INFO: 	Container csi-cephfsplugin ready: true, restart count 1
  Sep 13 12:43:56.724: INFO: 	Container driver-registrar ready: true, restart count 1
  Sep 13 12:43:56.724: INFO: 	Container log-collector ready: true, restart count 1
  Sep 13 12:43:56.724: INFO: csi-rbdplugin-jr8hc from rook-ceph started at 2024-09-12 04:28:26 +0000 UTC (3 container statuses recorded)
  Sep 13 12:43:56.724: INFO: 	Container csi-rbdplugin ready: true, restart count 1
  Sep 13 12:43:56.724: INFO: 	Container driver-registrar ready: true, restart count 1
  Sep 13 12:43:56.724: INFO: 	Container log-collector ready: true, restart count 1
  Sep 13 12:43:56.724: INFO: rook-ceph-crashcollector-cncf-4-55d6f448b9-hn6gj from rook-ceph started at 2024-09-13 12:37:29 +0000 UTC (1 container statuses recorded)
  Sep 13 12:43:56.724: INFO: 	Container ceph-crash ready: true, restart count 0
  Sep 13 12:43:56.724: INFO: rook-ceph-exporter-cncf-4-69df574c74-vqlfp from rook-ceph started at 2024-09-13 12:37:32 +0000 UTC (1 container statuses recorded)
  Sep 13 12:43:56.724: INFO: 	Container ceph-exporter ready: true, restart count 0
  Sep 13 12:43:56.724: INFO: rook-ceph-mds-myfs-b-6f56dc888d-l9vjb from rook-ceph started at 2024-09-13 12:37:29 +0000 UTC (2 container statuses recorded)
  Sep 13 12:43:56.724: INFO: 	Container log-collector ready: true, restart count 0
  Sep 13 12:43:56.724: INFO: 	Container mds ready: true, restart count 0
  Sep 13 12:43:56.724: INFO: rook-ceph-mgr-b-57755d7888-bnmpq from rook-ceph started at 2024-09-13 12:37:29 +0000 UTC (3 container statuses recorded)
  Sep 13 12:43:56.724: INFO: 	Container log-collector ready: true, restart count 0
  Sep 13 12:43:56.724: INFO: 	Container mgr ready: true, restart count 0
  Sep 13 12:43:56.724: INFO: 	Container watch-active ready: true, restart count 0
  Sep 13 12:43:56.724: INFO: rook-ceph-osd-3-54cb9dd4d7-gzszb from rook-ceph started at 2024-09-13 10:37:04 +0000 UTC (2 container statuses recorded)
  Sep 13 12:43:56.724: INFO: 	Container log-collector ready: true, restart count 0
  Sep 13 12:43:56.724: INFO: 	Container osd ready: true, restart count 0
  Sep 13 12:43:56.724: INFO: pod2-0-sched-preemption-medium-priority from sched-preemption-9989 started at 2024-09-13 12:43:50 +0000 UTC (1 container statuses recorded)
  Sep 13 12:43:56.724: INFO: 	Container pod2-0-sched-preemption-medium-priority ready: true, restart count 0
  Sep 13 12:43:56.724: INFO: pod2-1-sched-preemption-medium-priority from sched-preemption-9989 started at 2024-09-13 12:43:50 +0000 UTC (1 container statuses recorded)
  Sep 13 12:43:56.724: INFO: 	Container pod2-1-sched-preemption-medium-priority ready: true, restart count 0
  Sep 13 12:43:56.724: INFO: sonobuoy from sonobuoy started at 2024-09-13 12:12:19 +0000 UTC (1 container statuses recorded)
  Sep 13 12:43:56.724: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Sep 13 12:43:56.724: INFO: sonobuoy-e2e-job-781d9a3c1a264d66 from sonobuoy started at 2024-09-13 12:12:20 +0000 UTC (2 container statuses recorded)
  Sep 13 12:43:56.724: INFO: 	Container e2e ready: true, restart count 0
  Sep 13 12:43:56.724: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep 13 12:43:56.724: INFO: sonobuoy-systemd-logs-daemon-set-1cc6cc51fb6b46e1-pt4k7 from sonobuoy started at 2024-09-13 12:12:20 +0000 UTC (2 container statuses recorded)
  Sep 13 12:43:56.724: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep 13 12:43:56.724: INFO: 	Container systemd-logs ready: true, restart count 0
  Sep 13 12:43:56.724: INFO: trombone-pipeline-api-admin-6457988cdb-kgvph from trombone started at 2024-09-13 10:38:32 +0000 UTC (2 container statuses recorded)
  Sep 13 12:43:56.724: INFO: 	Container istio-proxy ready: true, restart count 0
  Sep 13 12:43:56.724: INFO: 	Container trombone-pipeline-api ready: true, restart count 4
  Sep 13 12:43:56.724: INFO: 
  Logging pods the apiserver thinks is on node cncf-5 before test
  Sep 13 12:43:56.742: INFO: keycloak-76cc8f6cb7-x6gfj from auth started at 2024-09-12 08:04:31 +0000 UTC (1 container statuses recorded)
  Sep 13 12:43:56.742: INFO: 	Container keycloak ready: true, restart count 1
  Sep 13 12:43:56.742: INFO: oauth2-proxy-admin-74cd8b4747-qsw64 from auth started at 2024-09-13 12:30:04 +0000 UTC (1 container statuses recorded)
  Sep 13 12:43:56.742: INFO: 	Container oauth2-proxy-admin ready: true, restart count 0
  Sep 13 12:43:56.742: INFO: oauth2-redis-admin-1 from auth started at 2024-09-13 08:22:43 +0000 UTC (1 container statuses recorded)
  Sep 13 12:43:56.742: INFO: 	Container redis ready: true, restart count 0
  Sep 13 12:43:56.742: INFO: maestro-iam-adapter-api-84d7945fdd-vt9vl from cmp started at 2024-09-13 05:36:03 +0000 UTC (2 container statuses recorded)
  Sep 13 12:43:56.742: INFO: 	Container istio-proxy ready: true, restart count 1
  Sep 13 12:43:56.742: INFO: 	Container maestro-iam-adapter-api ready: true, restart count 1
  Sep 13 12:43:56.742: INFO: notification-adapter-api-67cb5bfffc-72vhz from cmp started at 2024-09-13 05:36:03 +0000 UTC (2 container statuses recorded)
  Sep 13 12:43:56.742: INFO: 	Container istio-proxy ready: true, restart count 1
  Sep 13 12:43:56.742: INFO: 	Container noti-api ready: true, restart count 1
  Sep 13 12:43:56.742: INFO: mariadb-maxscale-745d5dfb5f-cdhhn from dataplatform started at 2024-09-12 08:30:28 +0000 UTC (1 container statuses recorded)
  Sep 13 12:43:56.742: INFO: 	Container maxscale ready: true, restart count 1
  Sep 13 12:43:56.742: INFO: mariadb-sts-0 from dataplatform started at 2024-09-12 07:06:14 +0000 UTC (1 container statuses recorded)
  Sep 13 12:43:56.742: INFO: 	Container mariadb ready: true, restart count 1
  Sep 13 12:43:56.742: INFO: my-cluster-kafka-1 from dataplatform started at 2024-09-12 07:07:17 +0000 UTC (1 container statuses recorded)
  Sep 13 12:43:56.742: INFO: 	Container kafka ready: true, restart count 2
  Sep 13 12:43:56.742: INFO: my-cluster-zookeeper-2 from dataplatform started at 2024-09-12 07:06:30 +0000 UTC (1 container statuses recorded)
  Sep 13 12:43:56.742: INFO: 	Container zookeeper ready: true, restart count 1
  Sep 13 12:43:56.742: INFO: strimzi-cluster-operator-7fbfc5c86f-94ths from dataplatform started at 2024-09-13 08:34:15 +0000 UTC (1 container statuses recorded)
  Sep 13 12:43:56.742: INFO: 	Container strimzi-cluster-operator ready: true, restart count 1
  Sep 13 12:43:56.742: INFO: vault-0 from dataplatform started at 2024-09-12 07:06:14 +0000 UTC (1 container statuses recorded)
  Sep 13 12:43:56.742: INFO: 	Container vault ready: true, restart count 1
  Sep 13 12:43:56.742: INFO: ingress-nginx-admission-create-pqp74 from ingress-nginx started at 2024-09-12 03:44:55 +0000 UTC (1 container statuses recorded)
  Sep 13 12:43:56.742: INFO: 	Container create ready: false, restart count 0
  Sep 13 12:43:56.742: INFO: cilium-2dbxd from kube-system started at 2024-09-13 08:50:53 +0000 UTC (1 container statuses recorded)
  Sep 13 12:43:56.742: INFO: 	Container cilium-agent ready: true, restart count 1
  Sep 13 12:43:56.742: INFO: coredns-69db55dd76-vzt9s from kube-system started at 2024-09-13 08:22:23 +0000 UTC (1 container statuses recorded)
  Sep 13 12:43:56.742: INFO: 	Container coredns ready: true, restart count 1
  Sep 13 12:43:56.742: INFO: kube-proxy-l5kxx from kube-system started at 2024-09-13 08:27:26 +0000 UTC (1 container statuses recorded)
  Sep 13 12:43:56.742: INFO: 	Container kube-proxy ready: true, restart count 1
  Sep 13 12:43:56.742: INFO: nginx-proxy-cncf-5 from kube-system started at 2024-09-13 10:38:05 +0000 UTC (1 container statuses recorded)
  Sep 13 12:43:56.742: INFO: 	Container nginx-proxy ready: true, restart count 2
  Sep 13 12:43:56.742: INFO: csi-cephfsplugin-m68bj from rook-ceph started at 2024-09-12 04:28:27 +0000 UTC (3 container statuses recorded)
  Sep 13 12:43:56.742: INFO: 	Container csi-cephfsplugin ready: true, restart count 1
  Sep 13 12:43:56.742: INFO: 	Container driver-registrar ready: true, restart count 1
  Sep 13 12:43:56.742: INFO: 	Container log-collector ready: true, restart count 1
  Sep 13 12:43:56.742: INFO: csi-cephfsplugin-provisioner-69554c6fcb-jtmn4 from rook-ceph started at 2024-09-12 04:28:27 +0000 UTC (6 container statuses recorded)
  Sep 13 12:43:56.742: INFO: 	Container csi-attacher ready: true, restart count 2
  Sep 13 12:43:56.742: INFO: 	Container csi-cephfsplugin ready: true, restart count 1
  Sep 13 12:43:56.742: INFO: 	Container csi-provisioner ready: true, restart count 2
  Sep 13 12:43:56.742: INFO: 	Container csi-resizer ready: true, restart count 1
  Sep 13 12:43:56.742: INFO: 	Container csi-snapshotter ready: true, restart count 1
  Sep 13 12:43:56.742: INFO: 	Container log-collector ready: true, restart count 1
  Sep 13 12:43:56.742: INFO: csi-rbdplugin-cjlrl from rook-ceph started at 2024-09-12 04:28:26 +0000 UTC (3 container statuses recorded)
  Sep 13 12:43:56.742: INFO: 	Container csi-rbdplugin ready: true, restart count 1
  Sep 13 12:43:56.742: INFO: 	Container driver-registrar ready: true, restart count 1
  Sep 13 12:43:56.742: INFO: 	Container log-collector ready: true, restart count 1
  Sep 13 12:43:56.742: INFO: csi-rbdplugin-provisioner-78947cbcdb-zjs8f from rook-ceph started at 2024-09-12 08:30:28 +0000 UTC (6 container statuses recorded)
  Sep 13 12:43:56.742: INFO: 	Container csi-attacher ready: true, restart count 5
  Sep 13 12:43:56.742: INFO: 	Container csi-provisioner ready: true, restart count 2
  Sep 13 12:43:56.742: INFO: 	Container csi-rbdplugin ready: true, restart count 1
  Sep 13 12:43:56.742: INFO: 	Container csi-resizer ready: true, restart count 1
  Sep 13 12:43:56.742: INFO: 	Container csi-snapshotter ready: true, restart count 4
  Sep 13 12:43:56.742: INFO: 	Container log-collector ready: true, restart count 1
  Sep 13 12:43:56.742: INFO: rook-ceph-crashcollector-cncf-5-8f85f95b8-qtqwc from rook-ceph started at 2024-09-13 10:38:56 +0000 UTC (1 container statuses recorded)
  Sep 13 12:43:56.742: INFO: 	Container ceph-crash ready: true, restart count 0
  Sep 13 12:43:56.742: INFO: rook-ceph-exporter-cncf-5-7678cb8495-mgpgl from rook-ceph started at 2024-09-13 10:38:56 +0000 UTC (1 container statuses recorded)
  Sep 13 12:43:56.742: INFO: 	Container ceph-exporter ready: true, restart count 0
  Sep 13 12:43:56.742: INFO: rook-ceph-mon-b-56676fdd5-5hdhl from rook-ceph started at 2024-09-13 10:38:56 +0000 UTC (2 container statuses recorded)
  Sep 13 12:43:56.742: INFO: 	Container log-collector ready: true, restart count 0
  Sep 13 12:43:56.742: INFO: 	Container mon ready: true, restart count 0
  Sep 13 12:43:56.742: INFO: rook-ceph-osd-0-7574f4df4-bncm9 from rook-ceph started at 2024-09-13 10:38:56 +0000 UTC (2 container statuses recorded)
  Sep 13 12:43:56.742: INFO: 	Container log-collector ready: true, restart count 0
  Sep 13 12:43:56.742: INFO: 	Container osd ready: true, restart count 0
  Sep 13 12:43:56.742: INFO: rook-ceph-osd-prepare-cncf-5-f2kll from rook-ceph started at 2024-09-12 17:18:35 +0000 UTC (1 container statuses recorded)
  Sep 13 12:43:56.742: INFO: 	Container provision ready: false, restart count 0
  Sep 13 12:43:56.742: INFO: pod3-0-sched-preemption-medium-priority from sched-preemption-9989 started at 2024-09-13 12:43:50 +0000 UTC (1 container statuses recorded)
  Sep 13 12:43:56.742: INFO: 	Container pod3-0-sched-preemption-medium-priority ready: true, restart count 0
  Sep 13 12:43:56.742: INFO: pod3-1-sched-preemption-medium-priority from sched-preemption-9989 started at 2024-09-13 12:43:50 +0000 UTC (1 container statuses recorded)
  Sep 13 12:43:56.742: INFO: 	Container pod3-1-sched-preemption-medium-priority ready: true, restart count 0
  Sep 13 12:43:56.743: INFO: sonobuoy-systemd-logs-daemon-set-1cc6cc51fb6b46e1-27xgb from sonobuoy started at 2024-09-13 12:12:20 +0000 UTC (2 container statuses recorded)
  Sep 13 12:43:56.743: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep 13 12:43:56.743: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 09/13/24 12:43:56.743
  STEP: Explicitly delete pod here to free the resource it takes. @ 09/13/24 12:43:58.761
  STEP: Trying to apply a random label on the found node. @ 09/13/24 12:43:58.778
  STEP: verifying the node has the label kubernetes.io/e2e-a0c86afc-5e30-4e43-a3af-cbf7f23f67de 42 @ 09/13/24 12:43:58.793
  STEP: Trying to relaunch the pod, now with labels. @ 09/13/24 12:43:58.795
  STEP: removing the label kubernetes.io/e2e-a0c86afc-5e30-4e43-a3af-cbf7f23f67de off the node cncf-3 @ 09/13/24 12:44:00.817
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-a0c86afc-5e30-4e43-a3af-cbf7f23f67de @ 09/13/24 12:44:00.843
  Sep 13 12:44:00.845: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-1066" for this suite. @ 09/13/24 12:44:00.848
• [4.236 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:380
  STEP: Creating a kubernetes client @ 09/13/24 12:44:00.862
  Sep 13 12:44:00.862: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename proxy @ 09/13/24 12:44:00.863
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:44:00.879
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:44:00.881
  Sep 13 12:44:00.889: INFO: Creating pod...
  Sep 13 12:44:02.909: INFO: Creating service...
  Sep 13 12:44:02.926: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-771/pods/agnhost/proxy?method=DELETE
  Sep 13 12:44:02.931: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Sep 13 12:44:02.931: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-771/pods/agnhost/proxy?method=OPTIONS
  Sep 13 12:44:02.940: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Sep 13 12:44:02.940: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-771/pods/agnhost/proxy?method=PATCH
  Sep 13 12:44:02.943: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Sep 13 12:44:02.943: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-771/pods/agnhost/proxy?method=POST
  Sep 13 12:44:02.945: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Sep 13 12:44:02.945: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-771/pods/agnhost/proxy?method=PUT
  Sep 13 12:44:02.947: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Sep 13 12:44:02.947: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-771/services/e2e-proxy-test-service/proxy?method=DELETE
  Sep 13 12:44:02.951: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Sep 13 12:44:02.951: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-771/services/e2e-proxy-test-service/proxy?method=OPTIONS
  Sep 13 12:44:02.954: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Sep 13 12:44:02.954: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-771/services/e2e-proxy-test-service/proxy?method=PATCH
  Sep 13 12:44:02.957: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Sep 13 12:44:02.957: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-771/services/e2e-proxy-test-service/proxy?method=POST
  Sep 13 12:44:02.959: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Sep 13 12:44:02.959: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-771/services/e2e-proxy-test-service/proxy?method=PUT
  Sep 13 12:44:02.964: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Sep 13 12:44:02.965: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-771/pods/agnhost/proxy?method=GET
  Sep 13 12:44:02.966: INFO: http.Client request:GET StatusCode:301
  Sep 13 12:44:02.966: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-771/services/e2e-proxy-test-service/proxy?method=GET
  Sep 13 12:44:02.969: INFO: http.Client request:GET StatusCode:301
  Sep 13 12:44:02.969: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-771/pods/agnhost/proxy?method=HEAD
  Sep 13 12:44:02.970: INFO: http.Client request:HEAD StatusCode:301
  Sep 13 12:44:02.970: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-771/services/e2e-proxy-test-service/proxy?method=HEAD
  Sep 13 12:44:02.972: INFO: http.Client request:HEAD StatusCode:301
  Sep 13 12:44:02.972: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-771" for this suite. @ 09/13/24 12:44:02.984
• [2.133 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:57
  STEP: Creating a kubernetes client @ 09/13/24 12:44:02.997
  Sep 13 12:44:02.997: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename runtimeclass @ 09/13/24 12:44:02.999
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:44:03.026
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:44:03.031
  Sep 13 12:44:03.050: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-4463" for this suite. @ 09/13/24 12:44:03.073
• [0.090 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 09/13/24 12:44:03.089
  Sep 13 12:44:03.089: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename csiinlinevolumes @ 09/13/24 12:44:03.09
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:44:03.124
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:44:03.125
  STEP: creating @ 09/13/24 12:44:03.13
  STEP: getting @ 09/13/24 12:44:03.156
  STEP: listing in namespace @ 09/13/24 12:44:03.173
  STEP: patching @ 09/13/24 12:44:03.176
  STEP: deleting @ 09/13/24 12:44:03.199
  Sep 13 12:44:03.212: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-728" for this suite. @ 09/13/24 12:44:03.217
• [0.132 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3154
  STEP: Creating a kubernetes client @ 09/13/24 12:44:03.221
  Sep 13 12:44:03.221: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename services @ 09/13/24 12:44:03.222
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:44:03.233
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:44:03.236
  STEP: creating an Endpoint @ 09/13/24 12:44:03.25
  STEP: waiting for available Endpoint @ 09/13/24 12:44:03.254
  STEP: listing all Endpoints @ 09/13/24 12:44:03.255
  STEP: updating the Endpoint @ 09/13/24 12:44:03.259
  STEP: fetching the Endpoint @ 09/13/24 12:44:03.265
  STEP: patching the Endpoint @ 09/13/24 12:44:03.267
  STEP: fetching the Endpoint @ 09/13/24 12:44:03.281
  STEP: deleting the Endpoint by Collection @ 09/13/24 12:44:03.283
  STEP: waiting for Endpoint deletion @ 09/13/24 12:44:03.287
  STEP: fetching the Endpoint @ 09/13/24 12:44:03.289
  Sep 13 12:44:03.290: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7874" for this suite. @ 09/13/24 12:44:03.297
• [0.092 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:400
  STEP: Creating a kubernetes client @ 09/13/24 12:44:03.314
  Sep 13 12:44:03.314: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename namespaces @ 09/13/24 12:44:03.316
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:44:03.332
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:44:03.336
  STEP: Creating namespace "e2e-ns-bfxqp" @ 09/13/24 12:44:03.339
  Sep 13 12:44:03.355: INFO: Namespace "e2e-ns-bfxqp-2319" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-bfxqp-2319" @ 09/13/24 12:44:03.355
  Sep 13 12:44:03.375: INFO: Namespace "e2e-ns-bfxqp-2319" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-bfxqp-2319" @ 09/13/24 12:44:03.375
  Sep 13 12:44:03.382: INFO: Namespace "e2e-ns-bfxqp-2319" has []v1.FinalizerName{"kubernetes"}
  Sep 13 12:44:03.382: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-4460" for this suite. @ 09/13/24 12:44:03.386
  STEP: Destroying namespace "e2e-ns-bfxqp-2319" for this suite. @ 09/13/24 12:44:03.394
• [0.085 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:130
  STEP: Creating a kubernetes client @ 09/13/24 12:44:03.4
  Sep 13 12:44:03.400: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename emptydir @ 09/13/24 12:44:03.401
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:44:03.418
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:44:03.421
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 09/13/24 12:44:03.424
  STEP: Saw pod success @ 09/13/24 12:44:07.449
  Sep 13 12:44:07.452: INFO: Trying to get logs from node cncf-3 pod pod-c7d27659-b3e0-4186-8b41-a59f4d16afa4 container test-container: <nil>
  STEP: delete the pod @ 09/13/24 12:44:07.463
  Sep 13 12:44:07.481: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1955" for this suite. @ 09/13/24 12:44:07.486
• [4.091 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:349
  STEP: Creating a kubernetes client @ 09/13/24 12:44:07.493
  Sep 13 12:44:07.493: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename disruption @ 09/13/24 12:44:07.495
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:44:07.518
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:44:07.521
  STEP: Creating a pdb that targets all three pods in a test replica set @ 09/13/24 12:44:07.525
  STEP: Waiting for the pdb to be processed @ 09/13/24 12:44:07.539
  STEP: First trying to evict a pod which shouldn't be evictable @ 09/13/24 12:44:09.547
  STEP: Waiting for all pods to be running @ 09/13/24 12:44:09.547
  Sep 13 12:44:09.549: INFO: pods: 0 < 3
  Sep 13 12:44:11.552: INFO: running pods: 2 < 3
  STEP: locating a running pod @ 09/13/24 12:44:13.55
  STEP: Updating the pdb to allow a pod to be evicted @ 09/13/24 12:44:13.556
  STEP: Waiting for the pdb to be processed @ 09/13/24 12:44:13.581
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 09/13/24 12:44:13.622
  STEP: Waiting for all pods to be running @ 09/13/24 12:44:13.622
  STEP: Waiting for the pdb to observed all healthy pods @ 09/13/24 12:44:13.626
  STEP: Patching the pdb to disallow a pod to be evicted @ 09/13/24 12:44:13.67
  STEP: Waiting for the pdb to be processed @ 09/13/24 12:44:13.757
  STEP: Waiting for all pods to be running @ 09/13/24 12:44:15.76
  STEP: locating a running pod @ 09/13/24 12:44:15.764
  STEP: Deleting the pdb to allow a pod to be evicted @ 09/13/24 12:44:15.77
  STEP: Waiting for the pdb to be deleted @ 09/13/24 12:44:15.779
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 09/13/24 12:44:15.781
  STEP: Waiting for all pods to be running @ 09/13/24 12:44:15.781
  Sep 13 12:44:15.798: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2592" for this suite. @ 09/13/24 12:44:15.802
• [8.330 seconds]
------------------------------
S
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:71
  STEP: Creating a kubernetes client @ 09/13/24 12:44:15.823
  Sep 13 12:44:15.824: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename container-probe @ 09/13/24 12:44:15.825
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:44:15.849
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:44:15.852
  Sep 13 12:44:37.943: INFO: Container started at 2024-09-13 12:44:16 +0000 UTC, pod became ready at 2024-09-13 12:44:36 +0000 UTC
  Sep 13 12:44:37.943: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-8954" for this suite. @ 09/13/24 12:44:37.947
• [22.131 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1084
  STEP: Creating a kubernetes client @ 09/13/24 12:44:37.956
  Sep 13 12:44:37.956: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename kubectl @ 09/13/24 12:44:37.957
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:44:37.975
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:44:37.978
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 09/13/24 12:44:37.98
  Sep 13 12:44:37.980: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=kubectl-9676 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  Sep 13 12:44:38.056: INFO: stderr: ""
  Sep 13 12:44:38.057: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 09/13/24 12:44:38.057
  Sep 13 12:44:38.057: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=kubectl-9676 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.36.1-1"}]}} --dry-run=server'
  Sep 13 12:44:38.112: INFO: stderr: ""
  Sep 13 12:44:38.112: INFO: stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 09/13/24 12:44:38.112
  Sep 13 12:44:38.114: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=kubectl-9676 delete pods e2e-test-httpd-pod'
  Sep 13 12:44:39.410: INFO: stderr: ""
  Sep 13 12:44:39.410: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Sep 13 12:44:39.410: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9676" for this suite. @ 09/13/24 12:44:39.413
• [1.468 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 09/13/24 12:44:39.424
  Sep 13 12:44:39.424: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename crd-watch @ 09/13/24 12:44:39.425
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:44:39.437
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:44:39.44
  Sep 13 12:44:39.451: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Creating first CR  @ 09/13/24 12:44:42.014
  Sep 13 12:44:42.022: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-09-13T12:44:42Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-09-13T12:44:42Z]] name:name1 resourceVersion:716794 uid:9851003e-5b60-46f7-8ac3-bb4e4bf03d93] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Creating second CR @ 09/13/24 12:44:52.023
  Sep 13 12:44:52.032: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-09-13T12:44:52Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-09-13T12:44:52Z]] name:name2 resourceVersion:716865 uid:30b21f24-89f7-43a0-99a8-0d0e9320aa45] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying first CR @ 09/13/24 12:45:02.033
  Sep 13 12:45:02.039: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-09-13T12:44:42Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-09-13T12:45:02Z]] name:name1 resourceVersion:716937 uid:9851003e-5b60-46f7-8ac3-bb4e4bf03d93] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying second CR @ 09/13/24 12:45:12.039
  Sep 13 12:45:12.047: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-09-13T12:44:52Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-09-13T12:45:12Z]] name:name2 resourceVersion:717054 uid:30b21f24-89f7-43a0-99a8-0d0e9320aa45] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting first CR @ 09/13/24 12:45:22.047
  Sep 13 12:45:22.056: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-09-13T12:44:42Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-09-13T12:45:02Z]] name:name1 resourceVersion:717101 uid:9851003e-5b60-46f7-8ac3-bb4e4bf03d93] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting second CR @ 09/13/24 12:45:32.056
  Sep 13 12:45:32.063: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-09-13T12:44:52Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-09-13T12:45:12Z]] name:name2 resourceVersion:717141 uid:30b21f24-89f7-43a0-99a8-0d0e9320aa45] num:map[num1:9223372036854775807 num2:1000000]]}
  Sep 13 12:45:42.579: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-8851" for this suite. @ 09/13/24 12:45:42.585
• [63.175 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:85
  STEP: Creating a kubernetes client @ 09/13/24 12:45:42.599
  Sep 13 12:45:42.599: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename pod-network-test @ 09/13/24 12:45:42.601
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:45:42.611
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:45:42.614
  STEP: Performing setup for networking test in namespace pod-network-test-4998 @ 09/13/24 12:45:42.617
  STEP: creating a selector @ 09/13/24 12:45:42.617
  STEP: Creating the service pods in kubernetes @ 09/13/24 12:45:42.617
  Sep 13 12:45:42.617: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 09/13/24 12:46:04.724
  Sep 13 12:46:06.746: INFO: Setting MaxTries for pod polling to 46 for networking test based on endpoint count 4
  Sep 13 12:46:06.746: INFO: Breadth first check of 10.0.4.177 on host 172.10.50.163...
  Sep 13 12:46:06.748: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.0.1.5:9080/dial?request=hostname&protocol=http&host=10.0.4.177&port=8083&tries=1'] Namespace:pod-network-test-4998 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 13 12:46:06.748: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  Sep 13 12:46:06.748: INFO: ExecWithOptions: Clientset creation
  Sep 13 12:46:06.749: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-4998/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.0.1.5%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.0.4.177%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Sep 13 12:46:06.793: INFO: Waiting for responses: map[]
  Sep 13 12:46:06.793: INFO: reached 10.0.4.177 after 0/1 tries
  Sep 13 12:46:06.793: INFO: Breadth first check of 10.0.1.115 on host 172.10.50.243...
  Sep 13 12:46:06.797: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.0.1.5:9080/dial?request=hostname&protocol=http&host=10.0.1.115&port=8083&tries=1'] Namespace:pod-network-test-4998 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 13 12:46:06.797: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  Sep 13 12:46:06.798: INFO: ExecWithOptions: Clientset creation
  Sep 13 12:46:06.798: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-4998/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.0.1.5%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.0.1.115%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Sep 13 12:46:06.842: INFO: Waiting for responses: map[]
  Sep 13 12:46:06.842: INFO: reached 10.0.1.115 after 0/1 tries
  Sep 13 12:46:06.842: INFO: Breadth first check of 10.0.3.246 on host 172.10.50.34...
  Sep 13 12:46:06.845: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.0.1.5:9080/dial?request=hostname&protocol=http&host=10.0.3.246&port=8083&tries=1'] Namespace:pod-network-test-4998 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 13 12:46:06.845: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  Sep 13 12:46:06.848: INFO: ExecWithOptions: Clientset creation
  Sep 13 12:46:06.848: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-4998/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.0.1.5%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.0.3.246%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Sep 13 12:46:06.889: INFO: Waiting for responses: map[]
  Sep 13 12:46:06.889: INFO: reached 10.0.3.246 after 0/1 tries
  Sep 13 12:46:06.889: INFO: Breadth first check of 10.0.0.19 on host 172.10.50.77...
  Sep 13 12:46:06.892: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.0.1.5:9080/dial?request=hostname&protocol=http&host=10.0.0.19&port=8083&tries=1'] Namespace:pod-network-test-4998 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 13 12:46:06.892: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  Sep 13 12:46:06.892: INFO: ExecWithOptions: Clientset creation
  Sep 13 12:46:06.892: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-4998/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.0.1.5%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.0.0.19%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Sep 13 12:46:06.934: INFO: Waiting for responses: map[]
  Sep 13 12:46:06.934: INFO: reached 10.0.0.19 after 0/1 tries
  Sep 13 12:46:06.934: INFO: Going to retry 0 out of 4 pods....
  Sep 13 12:46:06.935: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-4998" for this suite. @ 09/13/24 12:46:06.939
• [24.344 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:376
  STEP: Creating a kubernetes client @ 09/13/24 12:46:06.944
  Sep 13 12:46:06.944: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename projected @ 09/13/24 12:46:06.945
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:46:06.954
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:46:06.956
  STEP: Creating configMap with name projected-configmap-test-volume-6a581dc0-a65e-4465-b55e-612dd5a8644b @ 09/13/24 12:46:06.961
  STEP: Creating a pod to test consume configMaps @ 09/13/24 12:46:06.965
  STEP: Saw pod success @ 09/13/24 12:46:10.986
  Sep 13 12:46:10.988: INFO: Trying to get logs from node cncf-3 pod pod-projected-configmaps-e389b063-6bf2-41ca-948f-98a4d236dc09 container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 09/13/24 12:46:10.996
  Sep 13 12:46:11.015: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7100" for this suite. @ 09/13/24 12:46:11.018
• [4.079 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1538
  STEP: Creating a kubernetes client @ 09/13/24 12:46:11.024
  Sep 13 12:46:11.024: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename kubectl @ 09/13/24 12:46:11.026
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:46:11.036
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:46:11.039
  STEP: creating Agnhost RC @ 09/13/24 12:46:11.043
  Sep 13 12:46:11.043: INFO: namespace kubectl-8881
  Sep 13 12:46:11.043: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=kubectl-8881 create -f -'
  Sep 13 12:46:11.159: INFO: stderr: ""
  Sep 13 12:46:11.159: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 09/13/24 12:46:11.159
  Sep 13 12:46:12.165: INFO: Selector matched 1 pods for map[app:agnhost]
  Sep 13 12:46:12.165: INFO: Found 0 / 1
  Sep 13 12:46:13.165: INFO: Selector matched 1 pods for map[app:agnhost]
  Sep 13 12:46:13.165: INFO: Found 1 / 1
  Sep 13 12:46:13.165: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  Sep 13 12:46:13.167: INFO: Selector matched 1 pods for map[app:agnhost]
  Sep 13 12:46:13.167: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Sep 13 12:46:13.167: INFO: wait on agnhost-primary startup in kubectl-8881 
  Sep 13 12:46:13.167: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=kubectl-8881 logs agnhost-primary-blzwv agnhost-primary'
  Sep 13 12:46:13.237: INFO: stderr: ""
  Sep 13 12:46:13.237: INFO: stdout: "Paused\n"
  STEP: exposing RC @ 09/13/24 12:46:13.237
  Sep 13 12:46:13.237: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=kubectl-8881 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  Sep 13 12:46:13.323: INFO: stderr: ""
  Sep 13 12:46:13.323: INFO: stdout: "service/rm2 exposed\n"
  Sep 13 12:46:13.337: INFO: Service rm2 in namespace kubectl-8881 found.
  STEP: exposing service @ 09/13/24 12:46:15.342
  Sep 13 12:46:15.343: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=kubectl-8881 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  Sep 13 12:46:15.416: INFO: stderr: ""
  Sep 13 12:46:15.416: INFO: stdout: "service/rm3 exposed\n"
  Sep 13 12:46:15.419: INFO: Service rm3 in namespace kubectl-8881 found.
  Sep 13 12:46:17.424: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8881" for this suite. @ 09/13/24 12:46:17.428
• [6.408 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 09/13/24 12:46:17.432
  Sep 13 12:46:17.432: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename cronjob @ 09/13/24 12:46:17.433
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:46:17.451
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:46:17.454
  STEP: Creating a cronjob @ 09/13/24 12:46:17.457
  STEP: Ensuring more than one job is running at a time @ 09/13/24 12:46:17.469
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 09/13/24 12:48:01.473
  STEP: Removing cronjob @ 09/13/24 12:48:01.476
  Sep 13 12:48:01.481: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-3422" for this suite. @ 09/13/24 12:48:01.484
• [104.060 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:356
  STEP: Creating a kubernetes client @ 09/13/24 12:48:01.495
  Sep 13 12:48:01.495: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename endpointslice @ 09/13/24 12:48:01.496
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:48:01.527
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:48:01.531
  STEP: getting /apis @ 09/13/24 12:48:01.533
  STEP: getting /apis/discovery.k8s.io @ 09/13/24 12:48:01.538
  STEP: getting /apis/discovery.k8s.iov1 @ 09/13/24 12:48:01.54
  STEP: creating @ 09/13/24 12:48:01.541
  STEP: getting @ 09/13/24 12:48:01.594
  STEP: listing @ 09/13/24 12:48:01.597
  STEP: watching @ 09/13/24 12:48:01.599
  Sep 13 12:48:01.599: INFO: starting watch
  STEP: cluster-wide listing @ 09/13/24 12:48:01.6
  STEP: cluster-wide watching @ 09/13/24 12:48:01.603
  Sep 13 12:48:01.603: INFO: starting watch
  STEP: patching @ 09/13/24 12:48:01.604
  STEP: updating @ 09/13/24 12:48:01.61
  Sep 13 12:48:01.618: INFO: waiting for watch events with expected annotations
  Sep 13 12:48:01.618: INFO: saw patched and updated annotations
  STEP: deleting @ 09/13/24 12:48:01.619
  STEP: deleting a collection @ 09/13/24 12:48:01.627
  Sep 13 12:48:01.638: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-946" for this suite. @ 09/13/24 12:48:01.642
• [0.161 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:86
  STEP: Creating a kubernetes client @ 09/13/24 12:48:01.658
  Sep 13 12:48:01.658: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/13/24 12:48:01.659
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:48:01.673
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:48:01.676
  Sep 13 12:48:01.690: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  Sep 13 12:48:08.234: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-4877" for this suite. @ 09/13/24 12:48:08.239
• [6.590 seconds]
------------------------------
SS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1416
  STEP: Creating a kubernetes client @ 09/13/24 12:48:08.248
  Sep 13 12:48:08.249: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename services @ 09/13/24 12:48:08.25
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:48:08.258
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:48:08.26
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-2312 @ 09/13/24 12:48:08.263
  STEP: changing the ExternalName service to type=ClusterIP @ 09/13/24 12:48:08.267
  STEP: creating replication controller externalname-service in namespace services-2312 @ 09/13/24 12:48:08.285
  I0913 12:48:08.293447      23 runners.go:197] Created replication controller with name: externalname-service, namespace: services-2312, replica count: 2
  I0913 12:48:11.344987      23 runners.go:197] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Sep 13 12:48:11.345: INFO: Creating new exec pod
  Sep 13 12:48:14.365: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=services-2312 exec execpodrksn8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Sep 13 12:48:14.487: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Sep 13 12:48:14.487: INFO: stdout: "externalname-service-bzpgm"
  Sep 13 12:48:14.487: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=services-2312 exec execpodrksn8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.40.129 80'
  Sep 13 12:48:14.580: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.40.129 80\nConnection to 10.233.40.129 80 port [tcp/http] succeeded!\n"
  Sep 13 12:48:14.580: INFO: stdout: ""
  Sep 13 12:48:15.488: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=services-2312 exec execpodrksn8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.40.129 80'
  Sep 13 12:48:15.594: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.40.129 80\nConnection to 10.233.40.129 80 port [tcp/http] succeeded!\n"
  Sep 13 12:48:15.594: INFO: stdout: "externalname-service-bzpgm"
  Sep 13 12:48:15.594: INFO: Cleaning up the ExternalName to ClusterIP test service
  Sep 13 12:48:15.608: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2312" for this suite. @ 09/13/24 12:48:15.612
• [7.375 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:322
  STEP: Creating a kubernetes client @ 09/13/24 12:48:15.625
  Sep 13 12:48:15.625: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename gc @ 09/13/24 12:48:15.627
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:48:15.65
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:48:15.653
  STEP: create the rc @ 09/13/24 12:48:15.657
  W0913 12:48:15.664719      23 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 09/13/24 12:48:20.668
  STEP: wait for all pods to be garbage collected @ 09/13/24 12:48:20.673
  STEP: Gathering metrics @ 09/13/24 12:48:25.68
  Sep 13 12:48:25.757: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Sep 13 12:48:25.757: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-2947" for this suite. @ 09/13/24 12:48:25.761
• [10.147 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Services should delete a collection of services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3565
  STEP: Creating a kubernetes client @ 09/13/24 12:48:25.771
  Sep 13 12:48:25.771: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename services @ 09/13/24 12:48:25.772
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:48:25.785
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:48:25.788
  STEP: creating a collection of services @ 09/13/24 12:48:25.79
  Sep 13 12:48:25.790: INFO: Creating e2e-svc-a-jhg9z
  Sep 13 12:48:25.804: INFO: Creating e2e-svc-b-q7zj6
  Sep 13 12:48:25.813: INFO: Creating e2e-svc-c-dv9r7
  STEP: deleting service collection @ 09/13/24 12:48:25.83
  Sep 13 12:48:25.859: INFO: Collection of services has been deleted
  Sep 13 12:48:25.859: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6894" for this suite. @ 09/13/24 12:48:25.863
• [0.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:902
  STEP: Creating a kubernetes client @ 09/13/24 12:48:25.877
  Sep 13 12:48:25.877: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename statefulset @ 09/13/24 12:48:25.879
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:48:25.889
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:48:25.891
  STEP: Creating service test in namespace statefulset-6237 @ 09/13/24 12:48:25.895
  STEP: Creating statefulset ss in namespace statefulset-6237 @ 09/13/24 12:48:25.899
  Sep 13 12:48:25.916: INFO: Found 0 stateful pods, waiting for 1
  Sep 13 12:48:35.918: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 09/13/24 12:48:35.923
  STEP: updating a scale subresource @ 09/13/24 12:48:35.925
  STEP: verifying the statefulset Spec.Replicas was modified @ 09/13/24 12:48:35.935
  STEP: Patch a scale subresource @ 09/13/24 12:48:35.937
  STEP: verifying the statefulset Spec.Replicas was modified @ 09/13/24 12:48:35.951
  Sep 13 12:48:35.954: INFO: Deleting all statefulset in ns statefulset-6237
  Sep 13 12:48:35.958: INFO: Scaling statefulset ss to 0
  Sep 13 12:48:45.972: INFO: Waiting for statefulset status.replicas updated to 0
  Sep 13 12:48:45.976: INFO: Deleting statefulset ss
  Sep 13 12:48:45.992: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6237" for this suite. @ 09/13/24 12:48:45.996
• [20.124 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2236
  STEP: Creating a kubernetes client @ 09/13/24 12:48:46.002
  Sep 13 12:48:46.002: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename services @ 09/13/24 12:48:46.003
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:48:46.02
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:48:46.022
  STEP: creating service in namespace services-1196 @ 09/13/24 12:48:46.025
  STEP: creating service affinity-nodeport-transition in namespace services-1196 @ 09/13/24 12:48:46.025
  STEP: creating replication controller affinity-nodeport-transition in namespace services-1196 @ 09/13/24 12:48:46.041
  I0913 12:48:46.057724      23 runners.go:197] Created replication controller with name: affinity-nodeport-transition, namespace: services-1196, replica count: 3
  I0913 12:48:49.109446      23 runners.go:197] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Sep 13 12:48:49.118: INFO: Creating new exec pod
  Sep 13 12:48:52.143: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=services-1196 exec execpod-affinityrgmb2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  Sep 13 12:48:52.249: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition 80 port [tcp/http] succeeded!\n"
  Sep 13 12:48:52.249: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep 13 12:48:52.249: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=services-1196 exec execpod-affinityrgmb2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.50.142 80'
  Sep 13 12:48:52.370: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.50.142 80\nConnection to 10.233.50.142 80 port [tcp/http] succeeded!\n"
  Sep 13 12:48:52.370: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep 13 12:48:52.370: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=services-1196 exec execpod-affinityrgmb2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.10.50.77 32502'
  Sep 13 12:48:52.463: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.10.50.77 32502\nConnection to 172.10.50.77 32502 port [tcp/*] succeeded!\n"
  Sep 13 12:48:52.463: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep 13 12:48:52.463: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=services-1196 exec execpod-affinityrgmb2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.10.50.34 32502'
  Sep 13 12:48:52.560: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.10.50.34 32502\nConnection to 172.10.50.34 32502 port [tcp/*] succeeded!\n"
  Sep 13 12:48:52.560: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep 13 12:48:52.569: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=services-1196 exec execpod-affinityrgmb2 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.10.50.163:32502/ ; done'
  Sep 13 12:48:52.733: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.50.163:32502/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.50.163:32502/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.50.163:32502/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.50.163:32502/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.50.163:32502/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.50.163:32502/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.50.163:32502/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.50.163:32502/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.50.163:32502/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.50.163:32502/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.50.163:32502/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.50.163:32502/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.50.163:32502/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.50.163:32502/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.50.163:32502/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.50.163:32502/\n"
  Sep 13 12:48:52.733: INFO: stdout: "\naffinity-nodeport-transition-ldx4v\naffinity-nodeport-transition-x7pcm\naffinity-nodeport-transition-mhnrw\naffinity-nodeport-transition-ldx4v\naffinity-nodeport-transition-x7pcm\naffinity-nodeport-transition-mhnrw\naffinity-nodeport-transition-ldx4v\naffinity-nodeport-transition-x7pcm\naffinity-nodeport-transition-mhnrw\naffinity-nodeport-transition-ldx4v\naffinity-nodeport-transition-x7pcm\naffinity-nodeport-transition-mhnrw\naffinity-nodeport-transition-ldx4v\naffinity-nodeport-transition-x7pcm\naffinity-nodeport-transition-mhnrw\naffinity-nodeport-transition-ldx4v"
  Sep 13 12:48:52.733: INFO: Received response from host: affinity-nodeport-transition-ldx4v
  Sep 13 12:48:52.733: INFO: Received response from host: affinity-nodeport-transition-x7pcm
  Sep 13 12:48:52.733: INFO: Received response from host: affinity-nodeport-transition-mhnrw
  Sep 13 12:48:52.733: INFO: Received response from host: affinity-nodeport-transition-ldx4v
  Sep 13 12:48:52.733: INFO: Received response from host: affinity-nodeport-transition-x7pcm
  Sep 13 12:48:52.733: INFO: Received response from host: affinity-nodeport-transition-mhnrw
  Sep 13 12:48:52.733: INFO: Received response from host: affinity-nodeport-transition-ldx4v
  Sep 13 12:48:52.733: INFO: Received response from host: affinity-nodeport-transition-x7pcm
  Sep 13 12:48:52.733: INFO: Received response from host: affinity-nodeport-transition-mhnrw
  Sep 13 12:48:52.733: INFO: Received response from host: affinity-nodeport-transition-ldx4v
  Sep 13 12:48:52.733: INFO: Received response from host: affinity-nodeport-transition-x7pcm
  Sep 13 12:48:52.733: INFO: Received response from host: affinity-nodeport-transition-mhnrw
  Sep 13 12:48:52.733: INFO: Received response from host: affinity-nodeport-transition-ldx4v
  Sep 13 12:48:52.733: INFO: Received response from host: affinity-nodeport-transition-x7pcm
  Sep 13 12:48:52.733: INFO: Received response from host: affinity-nodeport-transition-mhnrw
  Sep 13 12:48:52.733: INFO: Received response from host: affinity-nodeport-transition-ldx4v
  Sep 13 12:48:52.740: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=services-1196 exec execpod-affinityrgmb2 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.10.50.163:32502/ ; done'
  Sep 13 12:48:52.933: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.50.163:32502/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.50.163:32502/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.50.163:32502/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.50.163:32502/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.50.163:32502/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.50.163:32502/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.50.163:32502/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.50.163:32502/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.50.163:32502/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.50.163:32502/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.50.163:32502/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.50.163:32502/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.50.163:32502/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.50.163:32502/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.50.163:32502/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.50.163:32502/\n"
  Sep 13 12:48:52.933: INFO: stdout: "\naffinity-nodeport-transition-x7pcm\naffinity-nodeport-transition-x7pcm\naffinity-nodeport-transition-x7pcm\naffinity-nodeport-transition-x7pcm\naffinity-nodeport-transition-x7pcm\naffinity-nodeport-transition-x7pcm\naffinity-nodeport-transition-x7pcm\naffinity-nodeport-transition-x7pcm\naffinity-nodeport-transition-x7pcm\naffinity-nodeport-transition-x7pcm\naffinity-nodeport-transition-x7pcm\naffinity-nodeport-transition-x7pcm\naffinity-nodeport-transition-x7pcm\naffinity-nodeport-transition-x7pcm\naffinity-nodeport-transition-x7pcm\naffinity-nodeport-transition-x7pcm"
  Sep 13 12:48:52.933: INFO: Received response from host: affinity-nodeport-transition-x7pcm
  Sep 13 12:48:52.933: INFO: Received response from host: affinity-nodeport-transition-x7pcm
  Sep 13 12:48:52.933: INFO: Received response from host: affinity-nodeport-transition-x7pcm
  Sep 13 12:48:52.933: INFO: Received response from host: affinity-nodeport-transition-x7pcm
  Sep 13 12:48:52.933: INFO: Received response from host: affinity-nodeport-transition-x7pcm
  Sep 13 12:48:52.933: INFO: Received response from host: affinity-nodeport-transition-x7pcm
  Sep 13 12:48:52.933: INFO: Received response from host: affinity-nodeport-transition-x7pcm
  Sep 13 12:48:52.933: INFO: Received response from host: affinity-nodeport-transition-x7pcm
  Sep 13 12:48:52.933: INFO: Received response from host: affinity-nodeport-transition-x7pcm
  Sep 13 12:48:52.933: INFO: Received response from host: affinity-nodeport-transition-x7pcm
  Sep 13 12:48:52.933: INFO: Received response from host: affinity-nodeport-transition-x7pcm
  Sep 13 12:48:52.933: INFO: Received response from host: affinity-nodeport-transition-x7pcm
  Sep 13 12:48:52.933: INFO: Received response from host: affinity-nodeport-transition-x7pcm
  Sep 13 12:48:52.933: INFO: Received response from host: affinity-nodeport-transition-x7pcm
  Sep 13 12:48:52.933: INFO: Received response from host: affinity-nodeport-transition-x7pcm
  Sep 13 12:48:52.933: INFO: Received response from host: affinity-nodeport-transition-x7pcm
  Sep 13 12:48:52.934: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-1196, will wait for the garbage collector to delete the pods @ 09/13/24 12:48:52.956
  Sep 13 12:48:53.018: INFO: Deleting ReplicationController affinity-nodeport-transition took: 8.827953ms
  Sep 13 12:48:53.118: INFO: Terminating ReplicationController affinity-nodeport-transition pods took: 100.500584ms
  Sep 13 12:48:56.351: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1196" for this suite. @ 09/13/24 12:48:56.355
• [10.357 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PreStop should call prestop when killing a pod [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 09/13/24 12:48:56.36
  Sep 13 12:48:56.360: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename prestop @ 09/13/24 12:48:56.361
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:48:56.379
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:48:56.381
  STEP: Creating server pod server in namespace prestop-6045 @ 09/13/24 12:48:56.383
  STEP: Waiting for pods to come up. @ 09/13/24 12:48:56.41
  STEP: Creating tester pod tester in namespace prestop-6045 @ 09/13/24 12:48:58.427
  STEP: Deleting pre-stop pod @ 09/13/24 12:49:00.442
  Sep 13 12:49:05.460: INFO: Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  STEP: Deleting the server pod @ 09/13/24 12:49:05.46
  Sep 13 12:49:05.485: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "prestop-6045" for this suite. @ 09/13/24 12:49:05.489
• [9.137 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:270
  STEP: Creating a kubernetes client @ 09/13/24 12:49:05.498
  Sep 13 12:49:05.498: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/13/24 12:49:05.499
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:49:05.525
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:49:05.528
  Sep 13 12:49:05.530: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  Sep 13 12:49:08.617: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-7404" for this suite. @ 09/13/24 12:49:08.621
• [3.129 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:195
  STEP: Creating a kubernetes client @ 09/13/24 12:49:08.629
  Sep 13 12:49:08.629: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename downward-api @ 09/13/24 12:49:08.631
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:49:08.649
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:49:08.652
  STEP: Creating a pod to test downward API volume plugin @ 09/13/24 12:49:08.654
  STEP: Saw pod success @ 09/13/24 12:49:12.678
  Sep 13 12:49:12.680: INFO: Trying to get logs from node cncf-3 pod downwardapi-volume-45a96526-4c8b-49f8-971b-b49fb57d8d5b container client-container: <nil>
  STEP: delete the pod @ 09/13/24 12:49:12.691
  Sep 13 12:49:12.708: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9870" for this suite. @ 09/13/24 12:49:12.712
• [4.108 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:742
  STEP: Creating a kubernetes client @ 09/13/24 12:49:12.739
  Sep 13 12:49:12.739: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename svcaccounts @ 09/13/24 12:49:12.74
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:49:12.754
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:49:12.757
  Sep 13 12:49:12.761: INFO: Got root ca configmap in namespace "svcaccounts-2496"
  Sep 13 12:49:12.766: INFO: Deleted root ca configmap in namespace "svcaccounts-2496"
  STEP: waiting for a new root ca configmap created @ 09/13/24 12:49:13.267
  Sep 13 12:49:13.270: INFO: Recreated root ca configmap in namespace "svcaccounts-2496"
  Sep 13 12:49:13.280: INFO: Updated root ca configmap in namespace "svcaccounts-2496"
  STEP: waiting for the root ca configmap reconciled @ 09/13/24 12:49:13.78
  Sep 13 12:49:13.783: INFO: Reconciled root ca configmap in namespace "svcaccounts-2496"
  Sep 13 12:49:13.783: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-2496" for this suite. @ 09/13/24 12:49:13.786
• [1.059 seconds]
------------------------------
SSS
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:168
  STEP: Creating a kubernetes client @ 09/13/24 12:49:13.799
  Sep 13 12:49:13.799: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename container-probe @ 09/13/24 12:49:13.8
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:49:13.829
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:49:13.832
  STEP: Creating pod liveness-4bf3b4fc-0c07-4f4e-96ef-3eccc650c3dc in namespace container-probe-2064 @ 09/13/24 12:49:13.834
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/13/24 12:49:15.858
  Sep 13 12:49:15.860: INFO: Initial restart count of pod liveness-4bf3b4fc-0c07-4f4e-96ef-3eccc650c3dc is 0
  Sep 13 12:49:15.863: INFO: Get pod liveness-4bf3b4fc-0c07-4f4e-96ef-3eccc650c3dc in namespace container-probe-2064
  Sep 13 12:49:17.868: INFO: Get pod liveness-4bf3b4fc-0c07-4f4e-96ef-3eccc650c3dc in namespace container-probe-2064
  Sep 13 12:49:19.871: INFO: Get pod liveness-4bf3b4fc-0c07-4f4e-96ef-3eccc650c3dc in namespace container-probe-2064
  Sep 13 12:49:21.875: INFO: Get pod liveness-4bf3b4fc-0c07-4f4e-96ef-3eccc650c3dc in namespace container-probe-2064
  Sep 13 12:49:23.879: INFO: Get pod liveness-4bf3b4fc-0c07-4f4e-96ef-3eccc650c3dc in namespace container-probe-2064
  Sep 13 12:49:25.883: INFO: Get pod liveness-4bf3b4fc-0c07-4f4e-96ef-3eccc650c3dc in namespace container-probe-2064
  Sep 13 12:49:27.886: INFO: Get pod liveness-4bf3b4fc-0c07-4f4e-96ef-3eccc650c3dc in namespace container-probe-2064
  Sep 13 12:49:29.890: INFO: Get pod liveness-4bf3b4fc-0c07-4f4e-96ef-3eccc650c3dc in namespace container-probe-2064
  Sep 13 12:49:31.892: INFO: Get pod liveness-4bf3b4fc-0c07-4f4e-96ef-3eccc650c3dc in namespace container-probe-2064
  Sep 13 12:49:33.896: INFO: Get pod liveness-4bf3b4fc-0c07-4f4e-96ef-3eccc650c3dc in namespace container-probe-2064
  Sep 13 12:49:35.903: INFO: Get pod liveness-4bf3b4fc-0c07-4f4e-96ef-3eccc650c3dc in namespace container-probe-2064
  Sep 13 12:49:35.904: INFO: Restart count of pod container-probe-2064/liveness-4bf3b4fc-0c07-4f4e-96ef-3eccc650c3dc is now 1 (20.043443824s elapsed)
  STEP: deleting the pod @ 09/13/24 12:49:35.904
  Sep 13 12:49:35.924: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2064" for this suite. @ 09/13/24 12:49:35.928
• [22.142 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:399
  STEP: Creating a kubernetes client @ 09/13/24 12:49:35.943
  Sep 13 12:49:35.943: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename kubectl @ 09/13/24 12:49:35.945
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:49:35.964
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:49:35.967
  STEP: creating all guestbook components @ 09/13/24 12:49:35.972
  Sep 13 12:49:35.972: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  Sep 13 12:49:35.972: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=kubectl-2061 create -f -'
  Sep 13 12:49:36.085: INFO: stderr: ""
  Sep 13 12:49:36.085: INFO: stdout: "service/agnhost-replica created\n"
  Sep 13 12:49:36.085: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  Sep 13 12:49:36.085: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=kubectl-2061 create -f -'
  Sep 13 12:49:36.202: INFO: stderr: ""
  Sep 13 12:49:36.202: INFO: stdout: "service/agnhost-primary created\n"
  Sep 13 12:49:36.202: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  Sep 13 12:49:36.202: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=kubectl-2061 create -f -'
  Sep 13 12:49:36.367: INFO: stderr: ""
  Sep 13 12:49:36.367: INFO: stdout: "service/frontend created\n"
  Sep 13 12:49:36.368: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.47
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  Sep 13 12:49:36.368: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=kubectl-2061 create -f -'
  Sep 13 12:49:36.468: INFO: stderr: ""
  Sep 13 12:49:36.468: INFO: stdout: "deployment.apps/frontend created\n"
  Sep 13 12:49:36.468: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.47
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  Sep 13 12:49:36.468: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=kubectl-2061 create -f -'
  Sep 13 12:49:36.589: INFO: stderr: ""
  Sep 13 12:49:36.589: INFO: stdout: "deployment.apps/agnhost-primary created\n"
  Sep 13 12:49:36.589: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.47
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  Sep 13 12:49:36.589: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=kubectl-2061 create -f -'
  Sep 13 12:49:36.675: INFO: stderr: ""
  Sep 13 12:49:36.675: INFO: stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 09/13/24 12:49:36.675
  Sep 13 12:49:36.675: INFO: Waiting for all frontend pods to be Running.
  Sep 13 12:49:41.726: INFO: Waiting for frontend to serve content.
  Sep 13 12:49:41.744: INFO: Trying to add a new entry to the guestbook.
  Sep 13 12:49:41.753: INFO: Verifying that added entry can be retrieved.
  STEP: using delete to clean up resources @ 09/13/24 12:49:41.76
  Sep 13 12:49:41.760: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=kubectl-2061 delete --grace-period=0 --force -f -'
  Sep 13 12:49:41.871: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Sep 13 12:49:41.871: INFO: stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 09/13/24 12:49:41.871
  Sep 13 12:49:41.871: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=kubectl-2061 delete --grace-period=0 --force -f -'
  Sep 13 12:49:41.954: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Sep 13 12:49:41.954: INFO: stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 09/13/24 12:49:41.954
  Sep 13 12:49:41.954: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=kubectl-2061 delete --grace-period=0 --force -f -'
  Sep 13 12:49:42.037: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Sep 13 12:49:42.037: INFO: stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 09/13/24 12:49:42.037
  Sep 13 12:49:42.038: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=kubectl-2061 delete --grace-period=0 --force -f -'
  Sep 13 12:49:42.100: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Sep 13 12:49:42.100: INFO: stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 09/13/24 12:49:42.101
  Sep 13 12:49:42.101: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=kubectl-2061 delete --grace-period=0 --force -f -'
  Sep 13 12:49:42.209: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Sep 13 12:49:42.209: INFO: stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 09/13/24 12:49:42.209
  Sep 13 12:49:42.209: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=kubectl-2061 delete --grace-period=0 --force -f -'
  Sep 13 12:49:42.270: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Sep 13 12:49:42.270: INFO: stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  Sep 13 12:49:42.270: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2061" for this suite. @ 09/13/24 12:49:42.277
• [6.339 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:158
  STEP: Creating a kubernetes client @ 09/13/24 12:49:42.282
  Sep 13 12:49:42.282: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename runtimeclass @ 09/13/24 12:49:42.283
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:49:42.307
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:49:42.313
  STEP: Deleting RuntimeClass runtimeclass-132-delete-me @ 09/13/24 12:49:42.32
  STEP: Waiting for the RuntimeClass to disappear @ 09/13/24 12:49:42.345
  Sep 13 12:49:42.352: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-132" for this suite. @ 09/13/24 12:49:42.355
• [0.084 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:86
  STEP: Creating a kubernetes client @ 09/13/24 12:49:42.366
  Sep 13 12:49:42.366: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename downward-api @ 09/13/24 12:49:42.366
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:49:42.387
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:49:42.39
  STEP: Creating a pod to test downward API volume plugin @ 09/13/24 12:49:42.392
  STEP: Saw pod success @ 09/13/24 12:49:46.408
  Sep 13 12:49:46.411: INFO: Trying to get logs from node cncf-3 pod downwardapi-volume-675a1dd1-4819-4837-b052-5ee92286eb02 container client-container: <nil>
  STEP: delete the pod @ 09/13/24 12:49:46.415
  Sep 13 12:49:46.446: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3720" for this suite. @ 09/13/24 12:49:46.449
• [4.096 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:453
  STEP: Creating a kubernetes client @ 09/13/24 12:49:46.462
  Sep 13 12:49:46.462: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename resourcequota @ 09/13/24 12:49:46.463
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:49:46.495
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:49:46.498
  STEP: Counting existing ResourceQuota @ 09/13/24 12:49:46.5
  STEP: Creating a ResourceQuota @ 09/13/24 12:49:51.503
  STEP: Ensuring resource quota status is calculated @ 09/13/24 12:49:51.511
  STEP: Creating a ReplicaSet @ 09/13/24 12:49:53.517
  STEP: Ensuring resource quota status captures replicaset creation @ 09/13/24 12:49:53.534
  STEP: Deleting a ReplicaSet @ 09/13/24 12:49:55.538
  STEP: Ensuring resource quota status released usage @ 09/13/24 12:49:55.544
  Sep 13 12:49:57.548: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2205" for this suite. @ 09/13/24 12:49:57.551
• [11.097 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 09/13/24 12:49:57.561
  Sep 13 12:49:57.561: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename csiinlinevolumes @ 09/13/24 12:49:57.562
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:49:57.58
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:49:57.583
  STEP: Creating two CSIDrivers @ 09/13/24 12:49:57.586
  STEP: Getting "inline-driver-98e9391f-ea53-468c-99cf-fd50b25c30b7" & "inline-driver-a0a27747-3d4d-45af-90a0-da0918b9d0c9" @ 09/13/24 12:49:57.605
  STEP: Patching the CSIDriver "inline-driver-a0a27747-3d4d-45af-90a0-da0918b9d0c9" @ 09/13/24 12:49:57.609
  STEP: Updating the CSIDriver "inline-driver-a0a27747-3d4d-45af-90a0-da0918b9d0c9" @ 09/13/24 12:49:57.613
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-5921" @ 09/13/24 12:49:57.626
  STEP: Deleting CSIDriver "inline-driver-98e9391f-ea53-468c-99cf-fd50b25c30b7" @ 09/13/24 12:49:57.628
  STEP: Confirm deletion of CSIDriver "inline-driver-98e9391f-ea53-468c-99cf-fd50b25c30b7" @ 09/13/24 12:49:57.635
  STEP: Deleting CSIDriver "inline-driver-a0a27747-3d4d-45af-90a0-da0918b9d0c9" via DeleteCollection @ 09/13/24 12:49:57.637
  STEP: Confirm deletion of CSIDriver "inline-driver-a0a27747-3d4d-45af-90a0-da0918b9d0c9" @ 09/13/24 12:49:57.648
  Sep 13 12:49:57.650: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-5921" for this suite. @ 09/13/24 12:49:57.653
• [0.097 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 09/13/24 12:49:57.658
  Sep 13 12:49:57.658: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename projected @ 09/13/24 12:49:57.659
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:49:57.673
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:49:57.675
  STEP: Creating secret with name s-test-opt-del-3416977e-43fd-49ac-9602-41d75cc60fc1 @ 09/13/24 12:49:57.68
  STEP: Creating secret with name s-test-opt-upd-847f5738-984c-4f21-9a9e-9f9b35ef672d @ 09/13/24 12:49:57.686
  STEP: Creating the pod @ 09/13/24 12:49:57.69
  STEP: Deleting secret s-test-opt-del-3416977e-43fd-49ac-9602-41d75cc60fc1 @ 09/13/24 12:49:59.726
  STEP: Updating secret s-test-opt-upd-847f5738-984c-4f21-9a9e-9f9b35ef672d @ 09/13/24 12:49:59.735
  STEP: Creating secret with name s-test-opt-create-ac1def7d-f5eb-49b6-99f9-f2da5cd74446 @ 09/13/24 12:49:59.747
  STEP: waiting to observe update in volume @ 09/13/24 12:49:59.754
  Sep 13 12:50:03.776: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7438" for this suite. @ 09/13/24 12:50:03.78
• [6.127 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:527
  STEP: Creating a kubernetes client @ 09/13/24 12:50:03.786
  Sep 13 12:50:03.786: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename container-probe @ 09/13/24 12:50:03.787
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:50:03.807
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:50:03.81
  STEP: Creating pod test-grpc-42d75e1b-078c-4f4f-bf1f-6b973ac70a3e in namespace container-probe-6838 @ 09/13/24 12:50:03.812
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/13/24 12:50:05.824
  Sep 13 12:50:05.826: INFO: Initial restart count of pod test-grpc-42d75e1b-078c-4f4f-bf1f-6b973ac70a3e is 0
  Sep 13 12:50:05.828: INFO: Get pod test-grpc-42d75e1b-078c-4f4f-bf1f-6b973ac70a3e in namespace container-probe-6838
  Sep 13 12:50:07.832: INFO: Get pod test-grpc-42d75e1b-078c-4f4f-bf1f-6b973ac70a3e in namespace container-probe-6838
  Sep 13 12:50:09.836: INFO: Get pod test-grpc-42d75e1b-078c-4f4f-bf1f-6b973ac70a3e in namespace container-probe-6838
  Sep 13 12:50:11.839: INFO: Get pod test-grpc-42d75e1b-078c-4f4f-bf1f-6b973ac70a3e in namespace container-probe-6838
  Sep 13 12:50:13.845: INFO: Get pod test-grpc-42d75e1b-078c-4f4f-bf1f-6b973ac70a3e in namespace container-probe-6838
  Sep 13 12:50:15.849: INFO: Get pod test-grpc-42d75e1b-078c-4f4f-bf1f-6b973ac70a3e in namespace container-probe-6838
  Sep 13 12:50:17.852: INFO: Get pod test-grpc-42d75e1b-078c-4f4f-bf1f-6b973ac70a3e in namespace container-probe-6838
  Sep 13 12:50:19.855: INFO: Get pod test-grpc-42d75e1b-078c-4f4f-bf1f-6b973ac70a3e in namespace container-probe-6838
  Sep 13 12:50:21.859: INFO: Get pod test-grpc-42d75e1b-078c-4f4f-bf1f-6b973ac70a3e in namespace container-probe-6838
  Sep 13 12:50:23.862: INFO: Get pod test-grpc-42d75e1b-078c-4f4f-bf1f-6b973ac70a3e in namespace container-probe-6838
  Sep 13 12:50:25.865: INFO: Get pod test-grpc-42d75e1b-078c-4f4f-bf1f-6b973ac70a3e in namespace container-probe-6838
  Sep 13 12:50:27.870: INFO: Get pod test-grpc-42d75e1b-078c-4f4f-bf1f-6b973ac70a3e in namespace container-probe-6838
  Sep 13 12:50:29.875: INFO: Get pod test-grpc-42d75e1b-078c-4f4f-bf1f-6b973ac70a3e in namespace container-probe-6838
  Sep 13 12:50:31.880: INFO: Get pod test-grpc-42d75e1b-078c-4f4f-bf1f-6b973ac70a3e in namespace container-probe-6838
  Sep 13 12:50:33.884: INFO: Get pod test-grpc-42d75e1b-078c-4f4f-bf1f-6b973ac70a3e in namespace container-probe-6838
  Sep 13 12:50:35.888: INFO: Get pod test-grpc-42d75e1b-078c-4f4f-bf1f-6b973ac70a3e in namespace container-probe-6838
  Sep 13 12:50:37.891: INFO: Get pod test-grpc-42d75e1b-078c-4f4f-bf1f-6b973ac70a3e in namespace container-probe-6838
  Sep 13 12:50:39.895: INFO: Get pod test-grpc-42d75e1b-078c-4f4f-bf1f-6b973ac70a3e in namespace container-probe-6838
  Sep 13 12:50:41.897: INFO: Get pod test-grpc-42d75e1b-078c-4f4f-bf1f-6b973ac70a3e in namespace container-probe-6838
  Sep 13 12:50:43.902: INFO: Get pod test-grpc-42d75e1b-078c-4f4f-bf1f-6b973ac70a3e in namespace container-probe-6838
  Sep 13 12:50:45.906: INFO: Get pod test-grpc-42d75e1b-078c-4f4f-bf1f-6b973ac70a3e in namespace container-probe-6838
  Sep 13 12:50:47.910: INFO: Get pod test-grpc-42d75e1b-078c-4f4f-bf1f-6b973ac70a3e in namespace container-probe-6838
  Sep 13 12:50:49.914: INFO: Get pod test-grpc-42d75e1b-078c-4f4f-bf1f-6b973ac70a3e in namespace container-probe-6838
  Sep 13 12:50:51.919: INFO: Get pod test-grpc-42d75e1b-078c-4f4f-bf1f-6b973ac70a3e in namespace container-probe-6838
  Sep 13 12:50:53.923: INFO: Get pod test-grpc-42d75e1b-078c-4f4f-bf1f-6b973ac70a3e in namespace container-probe-6838
  Sep 13 12:50:55.928: INFO: Get pod test-grpc-42d75e1b-078c-4f4f-bf1f-6b973ac70a3e in namespace container-probe-6838
  Sep 13 12:50:57.931: INFO: Get pod test-grpc-42d75e1b-078c-4f4f-bf1f-6b973ac70a3e in namespace container-probe-6838
  Sep 13 12:50:59.935: INFO: Get pod test-grpc-42d75e1b-078c-4f4f-bf1f-6b973ac70a3e in namespace container-probe-6838
  Sep 13 12:51:01.938: INFO: Get pod test-grpc-42d75e1b-078c-4f4f-bf1f-6b973ac70a3e in namespace container-probe-6838
  Sep 13 12:51:03.943: INFO: Get pod test-grpc-42d75e1b-078c-4f4f-bf1f-6b973ac70a3e in namespace container-probe-6838
  Sep 13 12:51:05.947: INFO: Get pod test-grpc-42d75e1b-078c-4f4f-bf1f-6b973ac70a3e in namespace container-probe-6838
  Sep 13 12:51:07.952: INFO: Get pod test-grpc-42d75e1b-078c-4f4f-bf1f-6b973ac70a3e in namespace container-probe-6838
  Sep 13 12:51:09.956: INFO: Get pod test-grpc-42d75e1b-078c-4f4f-bf1f-6b973ac70a3e in namespace container-probe-6838
  Sep 13 12:51:11.959: INFO: Get pod test-grpc-42d75e1b-078c-4f4f-bf1f-6b973ac70a3e in namespace container-probe-6838
  Sep 13 12:51:13.964: INFO: Get pod test-grpc-42d75e1b-078c-4f4f-bf1f-6b973ac70a3e in namespace container-probe-6838
  Sep 13 12:51:15.968: INFO: Get pod test-grpc-42d75e1b-078c-4f4f-bf1f-6b973ac70a3e in namespace container-probe-6838
  Sep 13 12:51:17.971: INFO: Get pod test-grpc-42d75e1b-078c-4f4f-bf1f-6b973ac70a3e in namespace container-probe-6838
  Sep 13 12:51:19.977: INFO: Get pod test-grpc-42d75e1b-078c-4f4f-bf1f-6b973ac70a3e in namespace container-probe-6838
  Sep 13 12:51:21.981: INFO: Get pod test-grpc-42d75e1b-078c-4f4f-bf1f-6b973ac70a3e in namespace container-probe-6838
  Sep 13 12:51:23.985: INFO: Get pod test-grpc-42d75e1b-078c-4f4f-bf1f-6b973ac70a3e in namespace container-probe-6838
  Sep 13 12:51:25.989: INFO: Get pod test-grpc-42d75e1b-078c-4f4f-bf1f-6b973ac70a3e in namespace container-probe-6838
  Sep 13 12:51:27.993: INFO: Get pod test-grpc-42d75e1b-078c-4f4f-bf1f-6b973ac70a3e in namespace container-probe-6838
  Sep 13 12:51:29.997: INFO: Get pod test-grpc-42d75e1b-078c-4f4f-bf1f-6b973ac70a3e in namespace container-probe-6838
  Sep 13 12:51:32.001: INFO: Get pod test-grpc-42d75e1b-078c-4f4f-bf1f-6b973ac70a3e in namespace container-probe-6838
  Sep 13 12:51:34.005: INFO: Get pod test-grpc-42d75e1b-078c-4f4f-bf1f-6b973ac70a3e in namespace container-probe-6838
  Sep 13 12:51:36.009: INFO: Get pod test-grpc-42d75e1b-078c-4f4f-bf1f-6b973ac70a3e in namespace container-probe-6838
  Sep 13 12:51:38.013: INFO: Get pod test-grpc-42d75e1b-078c-4f4f-bf1f-6b973ac70a3e in namespace container-probe-6838
  Sep 13 12:51:40.017: INFO: Get pod test-grpc-42d75e1b-078c-4f4f-bf1f-6b973ac70a3e in namespace container-probe-6838
  Sep 13 12:51:42.021: INFO: Get pod test-grpc-42d75e1b-078c-4f4f-bf1f-6b973ac70a3e in namespace container-probe-6838
  Sep 13 12:51:44.026: INFO: Get pod test-grpc-42d75e1b-078c-4f4f-bf1f-6b973ac70a3e in namespace container-probe-6838
  Sep 13 12:51:46.030: INFO: Get pod test-grpc-42d75e1b-078c-4f4f-bf1f-6b973ac70a3e in namespace container-probe-6838
  Sep 13 12:51:48.035: INFO: Get pod test-grpc-42d75e1b-078c-4f4f-bf1f-6b973ac70a3e in namespace container-probe-6838
  Sep 13 12:51:50.040: INFO: Get pod test-grpc-42d75e1b-078c-4f4f-bf1f-6b973ac70a3e in namespace container-probe-6838
  Sep 13 12:51:52.045: INFO: Get pod test-grpc-42d75e1b-078c-4f4f-bf1f-6b973ac70a3e in namespace container-probe-6838
  Sep 13 12:51:54.049: INFO: Get pod test-grpc-42d75e1b-078c-4f4f-bf1f-6b973ac70a3e in namespace container-probe-6838
  Sep 13 12:51:56.053: INFO: Get pod test-grpc-42d75e1b-078c-4f4f-bf1f-6b973ac70a3e in namespace container-probe-6838
  Sep 13 12:51:58.058: INFO: Get pod test-grpc-42d75e1b-078c-4f4f-bf1f-6b973ac70a3e in namespace container-probe-6838
  Sep 13 12:52:00.061: INFO: Get pod test-grpc-42d75e1b-078c-4f4f-bf1f-6b973ac70a3e in namespace container-probe-6838
  Sep 13 12:52:02.066: INFO: Get pod test-grpc-42d75e1b-078c-4f4f-bf1f-6b973ac70a3e in namespace container-probe-6838
  Sep 13 12:52:04.069: INFO: Get pod test-grpc-42d75e1b-078c-4f4f-bf1f-6b973ac70a3e in namespace container-probe-6838
  Sep 13 12:52:06.073: INFO: Get pod test-grpc-42d75e1b-078c-4f4f-bf1f-6b973ac70a3e in namespace container-probe-6838
  Sep 13 12:52:08.077: INFO: Get pod test-grpc-42d75e1b-078c-4f4f-bf1f-6b973ac70a3e in namespace container-probe-6838
  Sep 13 12:52:10.081: INFO: Get pod test-grpc-42d75e1b-078c-4f4f-bf1f-6b973ac70a3e in namespace container-probe-6838
  Sep 13 12:52:12.084: INFO: Get pod test-grpc-42d75e1b-078c-4f4f-bf1f-6b973ac70a3e in namespace container-probe-6838
  Sep 13 12:52:14.088: INFO: Get pod test-grpc-42d75e1b-078c-4f4f-bf1f-6b973ac70a3e in namespace container-probe-6838
  Sep 13 12:52:16.094: INFO: Get pod test-grpc-42d75e1b-078c-4f4f-bf1f-6b973ac70a3e in namespace container-probe-6838
  Sep 13 12:52:18.097: INFO: Get pod test-grpc-42d75e1b-078c-4f4f-bf1f-6b973ac70a3e in namespace container-probe-6838
  Sep 13 12:52:20.103: INFO: Get pod test-grpc-42d75e1b-078c-4f4f-bf1f-6b973ac70a3e in namespace container-probe-6838
  Sep 13 12:52:22.107: INFO: Get pod test-grpc-42d75e1b-078c-4f4f-bf1f-6b973ac70a3e in namespace container-probe-6838
  Sep 13 12:52:24.110: INFO: Get pod test-grpc-42d75e1b-078c-4f4f-bf1f-6b973ac70a3e in namespace container-probe-6838
  Sep 13 12:52:26.113: INFO: Get pod test-grpc-42d75e1b-078c-4f4f-bf1f-6b973ac70a3e in namespace container-probe-6838
  Sep 13 12:52:28.117: INFO: Get pod test-grpc-42d75e1b-078c-4f4f-bf1f-6b973ac70a3e in namespace container-probe-6838
  Sep 13 12:52:30.120: INFO: Get pod test-grpc-42d75e1b-078c-4f4f-bf1f-6b973ac70a3e in namespace container-probe-6838
  Sep 13 12:52:32.123: INFO: Get pod test-grpc-42d75e1b-078c-4f4f-bf1f-6b973ac70a3e in namespace container-probe-6838
  Sep 13 12:52:34.127: INFO: Get pod test-grpc-42d75e1b-078c-4f4f-bf1f-6b973ac70a3e in namespace container-probe-6838
  Sep 13 12:52:36.130: INFO: Get pod test-grpc-42d75e1b-078c-4f4f-bf1f-6b973ac70a3e in namespace container-probe-6838
  Sep 13 12:52:38.133: INFO: Get pod test-grpc-42d75e1b-078c-4f4f-bf1f-6b973ac70a3e in namespace container-probe-6838
  Sep 13 12:52:40.139: INFO: Get pod test-grpc-42d75e1b-078c-4f4f-bf1f-6b973ac70a3e in namespace container-probe-6838
  Sep 13 12:52:42.142: INFO: Get pod test-grpc-42d75e1b-078c-4f4f-bf1f-6b973ac70a3e in namespace container-probe-6838
  Sep 13 12:52:44.147: INFO: Get pod test-grpc-42d75e1b-078c-4f4f-bf1f-6b973ac70a3e in namespace container-probe-6838
  Sep 13 12:52:46.151: INFO: Get pod test-grpc-42d75e1b-078c-4f4f-bf1f-6b973ac70a3e in namespace container-probe-6838
  Sep 13 12:52:48.155: INFO: Get pod test-grpc-42d75e1b-078c-4f4f-bf1f-6b973ac70a3e in namespace container-probe-6838
  Sep 13 12:52:50.169: INFO: Get pod test-grpc-42d75e1b-078c-4f4f-bf1f-6b973ac70a3e in namespace container-probe-6838
  Sep 13 12:52:52.174: INFO: Get pod test-grpc-42d75e1b-078c-4f4f-bf1f-6b973ac70a3e in namespace container-probe-6838
  Sep 13 12:52:54.178: INFO: Get pod test-grpc-42d75e1b-078c-4f4f-bf1f-6b973ac70a3e in namespace container-probe-6838
  Sep 13 12:52:56.183: INFO: Get pod test-grpc-42d75e1b-078c-4f4f-bf1f-6b973ac70a3e in namespace container-probe-6838
  Sep 13 12:52:58.187: INFO: Get pod test-grpc-42d75e1b-078c-4f4f-bf1f-6b973ac70a3e in namespace container-probe-6838
  Sep 13 12:53:00.195: INFO: Get pod test-grpc-42d75e1b-078c-4f4f-bf1f-6b973ac70a3e in namespace container-probe-6838
  Sep 13 12:53:02.200: INFO: Get pod test-grpc-42d75e1b-078c-4f4f-bf1f-6b973ac70a3e in namespace container-probe-6838
  Sep 13 12:53:04.206: INFO: Get pod test-grpc-42d75e1b-078c-4f4f-bf1f-6b973ac70a3e in namespace container-probe-6838
  Sep 13 12:53:06.209: INFO: Get pod test-grpc-42d75e1b-078c-4f4f-bf1f-6b973ac70a3e in namespace container-probe-6838
  Sep 13 12:53:08.212: INFO: Get pod test-grpc-42d75e1b-078c-4f4f-bf1f-6b973ac70a3e in namespace container-probe-6838
  Sep 13 12:53:10.216: INFO: Get pod test-grpc-42d75e1b-078c-4f4f-bf1f-6b973ac70a3e in namespace container-probe-6838
  Sep 13 12:53:12.220: INFO: Get pod test-grpc-42d75e1b-078c-4f4f-bf1f-6b973ac70a3e in namespace container-probe-6838
  Sep 13 12:53:14.224: INFO: Get pod test-grpc-42d75e1b-078c-4f4f-bf1f-6b973ac70a3e in namespace container-probe-6838
  Sep 13 12:53:16.226: INFO: Get pod test-grpc-42d75e1b-078c-4f4f-bf1f-6b973ac70a3e in namespace container-probe-6838
  Sep 13 12:53:18.230: INFO: Get pod test-grpc-42d75e1b-078c-4f4f-bf1f-6b973ac70a3e in namespace container-probe-6838
  Sep 13 12:53:20.235: INFO: Get pod test-grpc-42d75e1b-078c-4f4f-bf1f-6b973ac70a3e in namespace container-probe-6838
  Sep 13 12:53:22.239: INFO: Get pod test-grpc-42d75e1b-078c-4f4f-bf1f-6b973ac70a3e in namespace container-probe-6838
  Sep 13 12:53:24.243: INFO: Get pod test-grpc-42d75e1b-078c-4f4f-bf1f-6b973ac70a3e in namespace container-probe-6838
  Sep 13 12:53:26.251: INFO: Get pod test-grpc-42d75e1b-078c-4f4f-bf1f-6b973ac70a3e in namespace container-probe-6838
  Sep 13 12:53:28.255: INFO: Get pod test-grpc-42d75e1b-078c-4f4f-bf1f-6b973ac70a3e in namespace container-probe-6838
  Sep 13 12:53:30.262: INFO: Get pod test-grpc-42d75e1b-078c-4f4f-bf1f-6b973ac70a3e in namespace container-probe-6838
  Sep 13 12:53:32.266: INFO: Get pod test-grpc-42d75e1b-078c-4f4f-bf1f-6b973ac70a3e in namespace container-probe-6838
  Sep 13 12:53:34.271: INFO: Get pod test-grpc-42d75e1b-078c-4f4f-bf1f-6b973ac70a3e in namespace container-probe-6838
  Sep 13 12:53:36.276: INFO: Get pod test-grpc-42d75e1b-078c-4f4f-bf1f-6b973ac70a3e in namespace container-probe-6838
  Sep 13 12:53:38.279: INFO: Get pod test-grpc-42d75e1b-078c-4f4f-bf1f-6b973ac70a3e in namespace container-probe-6838
  Sep 13 12:53:40.282: INFO: Get pod test-grpc-42d75e1b-078c-4f4f-bf1f-6b973ac70a3e in namespace container-probe-6838
  Sep 13 12:53:42.286: INFO: Get pod test-grpc-42d75e1b-078c-4f4f-bf1f-6b973ac70a3e in namespace container-probe-6838
  Sep 13 12:53:44.290: INFO: Get pod test-grpc-42d75e1b-078c-4f4f-bf1f-6b973ac70a3e in namespace container-probe-6838
  Sep 13 12:53:46.294: INFO: Get pod test-grpc-42d75e1b-078c-4f4f-bf1f-6b973ac70a3e in namespace container-probe-6838
  Sep 13 12:53:48.298: INFO: Get pod test-grpc-42d75e1b-078c-4f4f-bf1f-6b973ac70a3e in namespace container-probe-6838
  Sep 13 12:53:50.302: INFO: Get pod test-grpc-42d75e1b-078c-4f4f-bf1f-6b973ac70a3e in namespace container-probe-6838
  Sep 13 12:53:52.306: INFO: Get pod test-grpc-42d75e1b-078c-4f4f-bf1f-6b973ac70a3e in namespace container-probe-6838
  Sep 13 12:53:54.311: INFO: Get pod test-grpc-42d75e1b-078c-4f4f-bf1f-6b973ac70a3e in namespace container-probe-6838
  Sep 13 12:53:56.316: INFO: Get pod test-grpc-42d75e1b-078c-4f4f-bf1f-6b973ac70a3e in namespace container-probe-6838
  Sep 13 12:53:58.320: INFO: Get pod test-grpc-42d75e1b-078c-4f4f-bf1f-6b973ac70a3e in namespace container-probe-6838
  Sep 13 12:54:00.323: INFO: Get pod test-grpc-42d75e1b-078c-4f4f-bf1f-6b973ac70a3e in namespace container-probe-6838
  Sep 13 12:54:02.327: INFO: Get pod test-grpc-42d75e1b-078c-4f4f-bf1f-6b973ac70a3e in namespace container-probe-6838
  Sep 13 12:54:04.331: INFO: Get pod test-grpc-42d75e1b-078c-4f4f-bf1f-6b973ac70a3e in namespace container-probe-6838
  STEP: deleting the pod @ 09/13/24 12:54:06.332
  Sep 13 12:54:06.352: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-6838" for this suite. @ 09/13/24 12:54:06.358
• [242.585 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 09/13/24 12:54:06.371
  Sep 13 12:54:06.371: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename certificates @ 09/13/24 12:54:06.373
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:54:06.399
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:54:06.402
  STEP: getting /apis @ 09/13/24 12:54:06.846
  STEP: getting /apis/certificates.k8s.io @ 09/13/24 12:54:06.851
  STEP: getting /apis/certificates.k8s.io/v1 @ 09/13/24 12:54:06.852
  STEP: creating @ 09/13/24 12:54:06.853
  STEP: getting @ 09/13/24 12:54:06.881
  STEP: listing @ 09/13/24 12:54:06.884
  STEP: watching @ 09/13/24 12:54:06.888
  Sep 13 12:54:06.888: INFO: starting watch
  STEP: patching @ 09/13/24 12:54:06.889
  STEP: updating @ 09/13/24 12:54:06.897
  Sep 13 12:54:06.907: INFO: waiting for watch events with expected annotations
  Sep 13 12:54:06.907: INFO: saw patched and updated annotations
  STEP: getting /approval @ 09/13/24 12:54:06.907
  STEP: patching /approval @ 09/13/24 12:54:06.909
  STEP: updating /approval @ 09/13/24 12:54:06.915
  STEP: getting /status @ 09/13/24 12:54:06.926
  STEP: patching /status @ 09/13/24 12:54:06.928
  STEP: updating /status @ 09/13/24 12:54:06.941
  STEP: deleting @ 09/13/24 12:54:06.962
  STEP: deleting a collection @ 09/13/24 12:54:06.974
  Sep 13 12:54:06.985: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-9819" for this suite. @ 09/13/24 12:54:06.988
• [0.621 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:250
  STEP: Creating a kubernetes client @ 09/13/24 12:54:06.992
  Sep 13 12:54:06.992: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename webhook @ 09/13/24 12:54:06.993
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:54:07.017
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:54:07.019
  STEP: Setting up server cert @ 09/13/24 12:54:07.049
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/13/24 12:54:07.305
  STEP: Deploying the webhook pod @ 09/13/24 12:54:07.317
  STEP: Wait for the deployment to be ready @ 09/13/24 12:54:07.338
  Sep 13 12:54:07.346: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/13/24 12:54:09.355
  STEP: Verifying the service has paired with the endpoint @ 09/13/24 12:54:09.372
  Sep 13 12:54:10.373: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 09/13/24 12:54:10.378
  STEP: create a configmap that should be updated by the webhook @ 09/13/24 12:54:10.397
  Sep 13 12:54:10.480: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2317" for this suite. @ 09/13/24 12:54:10.484
  STEP: Destroying namespace "webhook-markers-7048" for this suite. @ 09/13/24 12:54:10.494
• [3.514 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:75
  STEP: Creating a kubernetes client @ 09/13/24 12:54:10.508
  Sep 13 12:54:10.508: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename containers @ 09/13/24 12:54:10.509
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:54:10.517
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:54:10.519
  STEP: Creating a pod to test override command @ 09/13/24 12:54:10.522
  STEP: Saw pod success @ 09/13/24 12:54:14.54
  Sep 13 12:54:14.542: INFO: Trying to get logs from node cncf-3 pod client-containers-33709bd2-2b6a-4236-a49f-ddccf4afa5eb container agnhost-container: <nil>
  STEP: delete the pod @ 09/13/24 12:54:14.552
  Sep 13 12:54:14.577: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-1949" for this suite. @ 09/13/24 12:54:14.581
• [4.079 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:195
  STEP: Creating a kubernetes client @ 09/13/24 12:54:14.589
  Sep 13 12:54:14.589: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename container-runtime @ 09/13/24 12:54:14.59
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:54:14.624
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:54:14.626
  STEP: create the container @ 09/13/24 12:54:14.63
  W0913 12:54:14.637524      23 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 09/13/24 12:54:14.637
  STEP: get the container status @ 09/13/24 12:54:17.664
  STEP: the container should be terminated @ 09/13/24 12:54:17.666
  STEP: the termination message should be set @ 09/13/24 12:54:17.666
  Sep 13 12:54:17.666: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 09/13/24 12:54:17.666
  Sep 13 12:54:17.688: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-3745" for this suite. @ 09/13/24 12:54:17.691
• [3.110 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 09/13/24 12:54:17.7
  Sep 13 12:54:17.700: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename projected @ 09/13/24 12:54:17.702
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:54:17.722
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:54:17.724
  STEP: Creating projection with secret that has name projected-secret-test-8763680d-b478-48ea-92b3-368b9b432114 @ 09/13/24 12:54:17.729
  STEP: Creating a pod to test consume secrets @ 09/13/24 12:54:17.736
  STEP: Saw pod success @ 09/13/24 12:54:21.763
  Sep 13 12:54:21.766: INFO: Trying to get logs from node cncf-3 pod pod-projected-secrets-d39b7956-8904-4956-b6bb-3930ae03c8d6 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/13/24 12:54:21.771
  Sep 13 12:54:21.791: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5257" for this suite. @ 09/13/24 12:54:21.796
• [4.101 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 09/13/24 12:54:21.801
  Sep 13 12:54:21.801: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename projected @ 09/13/24 12:54:21.801
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:54:21.819
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:54:21.824
  STEP: Creating projection with secret that has name projected-secret-test-d10ff258-9d4e-493c-b830-8065b512318c @ 09/13/24 12:54:21.827
  STEP: Creating a pod to test consume secrets @ 09/13/24 12:54:21.836
  STEP: Saw pod success @ 09/13/24 12:54:25.865
  Sep 13 12:54:25.868: INFO: Trying to get logs from node cncf-3 pod pod-projected-secrets-424452c7-54f8-438f-995b-65f70b88642e container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/13/24 12:54:25.873
  Sep 13 12:54:25.900: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8698" for this suite. @ 09/13/24 12:54:25.904
• [4.112 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:286
  STEP: Creating a kubernetes client @ 09/13/24 12:54:25.915
  Sep 13 12:54:25.915: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename dns @ 09/13/24 12:54:25.917
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:54:25.929
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:54:25.931
  STEP: Creating a test headless service @ 09/13/24 12:54:25.935
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-5692.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-querier-2.dns-test-service-2.dns-5692.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-5692.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5692.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-5692.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service-2.dns-5692.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-5692.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service-2.dns-5692.svc.cluster.local;sleep 1; done
   @ 09/13/24 12:54:25.949
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-5692.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-5692.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-5692.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-5692.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-5692.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-5692.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-5692.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-5692.svc.cluster.local;sleep 1; done
   @ 09/13/24 12:54:25.949
  STEP: creating a pod to probe DNS @ 09/13/24 12:54:25.949
  STEP: submitting the pod to kubernetes @ 09/13/24 12:54:25.949
  STEP: retrieving the pod @ 09/13/24 12:54:27.971
  STEP: looking for the results for each expected name from probers @ 09/13/24 12:54:27.974
  Sep 13 12:54:27.977: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-5692.svc.cluster.local from pod dns-5692/dns-test-42f768aa-6a5e-4c2c-8501-7e37cd5ebf87: the server could not find the requested resource (get pods dns-test-42f768aa-6a5e-4c2c-8501-7e37cd5ebf87)
  Sep 13 12:54:27.980: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5692.svc.cluster.local from pod dns-5692/dns-test-42f768aa-6a5e-4c2c-8501-7e37cd5ebf87: the server could not find the requested resource (get pods dns-test-42f768aa-6a5e-4c2c-8501-7e37cd5ebf87)
  Sep 13 12:54:27.982: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-5692.svc.cluster.local from pod dns-5692/dns-test-42f768aa-6a5e-4c2c-8501-7e37cd5ebf87: the server could not find the requested resource (get pods dns-test-42f768aa-6a5e-4c2c-8501-7e37cd5ebf87)
  Sep 13 12:54:27.985: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-5692.svc.cluster.local from pod dns-5692/dns-test-42f768aa-6a5e-4c2c-8501-7e37cd5ebf87: the server could not find the requested resource (get pods dns-test-42f768aa-6a5e-4c2c-8501-7e37cd5ebf87)
  Sep 13 12:54:27.987: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-5692.svc.cluster.local from pod dns-5692/dns-test-42f768aa-6a5e-4c2c-8501-7e37cd5ebf87: the server could not find the requested resource (get pods dns-test-42f768aa-6a5e-4c2c-8501-7e37cd5ebf87)
  Sep 13 12:54:27.989: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-5692.svc.cluster.local from pod dns-5692/dns-test-42f768aa-6a5e-4c2c-8501-7e37cd5ebf87: the server could not find the requested resource (get pods dns-test-42f768aa-6a5e-4c2c-8501-7e37cd5ebf87)
  Sep 13 12:54:27.991: INFO: Unable to read jessie_udp@dns-test-service-2.dns-5692.svc.cluster.local from pod dns-5692/dns-test-42f768aa-6a5e-4c2c-8501-7e37cd5ebf87: the server could not find the requested resource (get pods dns-test-42f768aa-6a5e-4c2c-8501-7e37cd5ebf87)
  Sep 13 12:54:27.993: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-5692.svc.cluster.local from pod dns-5692/dns-test-42f768aa-6a5e-4c2c-8501-7e37cd5ebf87: the server could not find the requested resource (get pods dns-test-42f768aa-6a5e-4c2c-8501-7e37cd5ebf87)
  Sep 13 12:54:27.994: INFO: Lookups using dns-5692/dns-test-42f768aa-6a5e-4c2c-8501-7e37cd5ebf87 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-5692.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5692.svc.cluster.local wheezy_udp@dns-test-service-2.dns-5692.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-5692.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-5692.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-5692.svc.cluster.local jessie_udp@dns-test-service-2.dns-5692.svc.cluster.local jessie_tcp@dns-test-service-2.dns-5692.svc.cluster.local]

  Sep 13 12:54:27.998: INFO: Pod client logs for webserver: 
  Sep 13 12:54:28.001: INFO: Pod client logs for querier: 
  Sep 13 12:54:28.006: INFO: Pod client logs for jessie-querier: 
  Sep 13 12:54:32.994: INFO: DNS probes using dns-5692/dns-test-42f768aa-6a5e-4c2c-8501-7e37cd5ebf87 succeeded

  STEP: deleting the pod @ 09/13/24 12:54:32.994
  STEP: deleting the test headless service @ 09/13/24 12:54:33.017
  Sep 13 12:54:33.033: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-5692" for this suite. @ 09/13/24 12:54:33.043
• [7.140 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:155
  STEP: Creating a kubernetes client @ 09/13/24 12:54:33.055
  Sep 13 12:54:33.055: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename replicaset @ 09/13/24 12:54:33.056
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:54:33.08
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:54:33.083
  Sep 13 12:54:33.104: INFO: Pod name sample-pod: Found 0 pods out of 1
  Sep 13 12:54:38.110: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/13/24 12:54:38.11
  STEP: Scaling up "test-rs" replicaset @ 09/13/24 12:54:38.11
  Sep 13 12:54:38.121: INFO: Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 09/13/24 12:54:38.121
  Sep 13 12:54:38.136: INFO: observed ReplicaSet test-rs in namespace replicaset-1177 with ReadyReplicas 1, AvailableReplicas 1
  Sep 13 12:54:38.152: INFO: observed ReplicaSet test-rs in namespace replicaset-1177 with ReadyReplicas 1, AvailableReplicas 1
  Sep 13 12:54:38.186: INFO: observed ReplicaSet test-rs in namespace replicaset-1177 with ReadyReplicas 1, AvailableReplicas 1
  Sep 13 12:54:38.199: INFO: observed ReplicaSet test-rs in namespace replicaset-1177 with ReadyReplicas 1, AvailableReplicas 1
  Sep 13 12:54:38.986: INFO: observed ReplicaSet test-rs in namespace replicaset-1177 with ReadyReplicas 2, AvailableReplicas 2
  Sep 13 12:54:39.431: INFO: observed Replicaset test-rs in namespace replicaset-1177 with ReadyReplicas 3 found true
  Sep 13 12:54:39.431: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-1177" for this suite. @ 09/13/24 12:54:39.435
• [6.388 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:109
  STEP: Creating a kubernetes client @ 09/13/24 12:54:39.444
  Sep 13 12:54:39.444: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename kubelet-test @ 09/13/24 12:54:39.446
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:54:39.461
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:54:39.463
  Sep 13 12:54:43.478: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-987" for this suite. @ 09/13/24 12:54:43.482
• [4.044 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:309
  STEP: Creating a kubernetes client @ 09/13/24 12:54:43.489
  Sep 13 12:54:43.489: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/13/24 12:54:43.49
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:54:43.509
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:54:43.511
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 09/13/24 12:54:43.514
  Sep 13 12:54:43.514: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 09/13/24 12:54:50.118
  Sep 13 12:54:50.118: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  Sep 13 12:54:51.903: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  Sep 13 12:54:58.535: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-178" for this suite. @ 09/13/24 12:54:58.543
• [15.064 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:447
  STEP: Creating a kubernetes client @ 09/13/24 12:54:58.554
  Sep 13 12:54:58.554: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename sched-pred @ 09/13/24 12:54:58.555
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:54:58.567
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:54:58.57
  Sep 13 12:54:58.583: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Sep 13 12:54:58.593: INFO: Waiting for terminating namespaces to be deleted...
  Sep 13 12:54:58.595: INFO: 
  Logging pods the apiserver thinks is on node cncf-2 before test
  Sep 13 12:54:58.616: INFO: keycloak-76cc8f6cb7-cj7kf from auth started at 2024-09-13 09:57:40 +0000 UTC (1 container statuses recorded)
  Sep 13 12:54:58.616: INFO: 	Container keycloak ready: true, restart count 0
  Sep 13 12:54:58.616: INFO: mariadb-keycloak-5b96c4c67d-txbrd from auth started at 2024-09-13 09:57:40 +0000 UTC (1 container statuses recorded)
  Sep 13 12:54:58.616: INFO: 	Container mariadb-keycloak ready: true, restart count 0
  Sep 13 12:54:58.616: INFO: oauth2-proxy-admin-5dcbc956c6-hcwk9 from auth started at 2024-09-13 12:45:03 +0000 UTC (1 container statuses recorded)
  Sep 13 12:54:58.616: INFO: 	Container oauth2-proxy-admin ready: true, restart count 0
  Sep 13 12:54:58.616: INFO: oauth2-redis-admin-0 from auth started at 2024-09-13 09:31:35 +0000 UTC (1 container statuses recorded)
  Sep 13 12:54:58.616: INFO: 	Container redis ready: true, restart count 0
  Sep 13 12:54:58.616: INFO: cloud-service-api-75445b94f9-sjmqd from cmp started at 2024-09-13 09:59:40 +0000 UTC (2 container statuses recorded)
  Sep 13 12:54:58.616: INFO: 	Container cloud-service-api ready: true, restart count 0
  Sep 13 12:54:58.616: INFO: 	Container istio-proxy ready: true, restart count 0
  Sep 13 12:54:58.616: INFO: cloud-service-collector-6bd966f4d6-tqsdq from cmp started at 2024-09-13 09:59:40 +0000 UTC (2 container statuses recorded)
  Sep 13 12:54:58.616: INFO: 	Container cloud-service-collector ready: true, restart count 0
  Sep 13 12:54:58.616: INFO: 	Container istio-proxy ready: true, restart count 0
  Sep 13 12:54:58.616: INFO: maestro-auth-gateway-admin-7b4b969475-75b5g from cmp started at 2024-09-13 09:59:40 +0000 UTC (2 container statuses recorded)
  Sep 13 12:54:58.616: INFO: 	Container istio-proxy ready: true, restart count 0
  Sep 13 12:54:58.616: INFO: 	Container maestro-auth-gateway ready: true, restart count 0
  Sep 13 12:54:58.616: INFO: maestro-common-api-admin-b46b8f8b8-df9xr from cmp started at 2024-09-13 09:58:52 +0000 UTC (2 container statuses recorded)
  Sep 13 12:54:58.616: INFO: 	Container istio-proxy ready: true, restart count 0
  Sep 13 12:54:58.616: INFO: 	Container maestro-common-api ready: true, restart count 0
  Sep 13 12:54:58.616: INFO: maestro-host-app-admin-7d644fbb7b-pdwbt from cmp started at 2024-09-13 09:59:04 +0000 UTC (2 container statuses recorded)
  Sep 13 12:54:58.616: INFO: 	Container istio-proxy ready: true, restart count 0
  Sep 13 12:54:58.616: INFO: 	Container maestro-host-app ready: true, restart count 0
  Sep 13 12:54:58.616: INFO: maestro-remote-app-admin-6f86d5cb87-n7x59 from cmp started at 2024-09-13 10:02:45 +0000 UTC (2 container statuses recorded)
  Sep 13 12:54:58.616: INFO: 	Container istio-proxy ready: true, restart count 0
  Sep 13 12:54:58.616: INFO: 	Container maestro-remote-app ready: true, restart count 0
  Sep 13 12:54:58.616: INFO: mariadb-maxscale-745d5dfb5f-9m26l from dataplatform started at 2024-09-13 09:57:40 +0000 UTC (1 container statuses recorded)
  Sep 13 12:54:58.616: INFO: 	Container maxscale ready: true, restart count 0
  Sep 13 12:54:58.616: INFO: vault-1 from dataplatform started at 2024-09-13 09:31:36 +0000 UTC (1 container statuses recorded)
  Sep 13 12:54:58.616: INFO: 	Container vault ready: true, restart count 0
  Sep 13 12:54:58.616: INFO: ingress-nginx-controller-66f986c956-fkb8s from ingress-nginx started at 2024-09-13 09:57:41 +0000 UTC (1 container statuses recorded)
  Sep 13 12:54:58.616: INFO: 	Container controller ready: true, restart count 0
  Sep 13 12:54:58.616: INFO: istio-gateway-5f7f7c65d8-m5wpn from istio-system started at 2024-09-13 10:03:27 +0000 UTC (1 container statuses recorded)
  Sep 13 12:54:58.616: INFO: 	Container istio-proxy ready: true, restart count 0
  Sep 13 12:54:58.616: INFO: istiod-f77745497-cqmfd from istio-system started at 2024-09-13 09:57:41 +0000 UTC (1 container statuses recorded)
  Sep 13 12:54:58.616: INFO: 	Container discovery ready: true, restart count 0
  Sep 13 12:54:58.616: INFO: cilium-jzdbd from kube-system started at 2024-09-13 09:30:51 +0000 UTC (1 container statuses recorded)
  Sep 13 12:54:58.616: INFO: 	Container cilium-agent ready: true, restart count 0
  Sep 13 12:54:58.616: INFO: kube-proxy-c6wbb from kube-system started at 2024-09-13 07:33:07 +0000 UTC (1 container statuses recorded)
  Sep 13 12:54:58.616: INFO: 	Container kube-proxy ready: true, restart count 1
  Sep 13 12:54:58.616: INFO: nginx-proxy-cncf-2 from kube-system started at 2024-09-13 09:30:34 +0000 UTC (1 container statuses recorded)
  Sep 13 12:54:58.616: INFO: 	Container nginx-proxy ready: true, restart count 2
  Sep 13 12:54:58.616: INFO: csi-cephfsplugin-k4vk8 from rook-ceph started at 2024-09-12 04:28:27 +0000 UTC (3 container statuses recorded)
  Sep 13 12:54:58.616: INFO: 	Container csi-cephfsplugin ready: true, restart count 2
  Sep 13 12:54:58.616: INFO: 	Container driver-registrar ready: true, restart count 2
  Sep 13 12:54:58.616: INFO: 	Container log-collector ready: true, restart count 1
  Sep 13 12:54:58.616: INFO: csi-cephfsplugin-provisioner-69554c6fcb-p7sjj from rook-ceph started at 2024-09-13 09:57:40 +0000 UTC (6 container statuses recorded)
  Sep 13 12:54:58.616: INFO: 	Container csi-attacher ready: true, restart count 0
  Sep 13 12:54:58.616: INFO: 	Container csi-cephfsplugin ready: true, restart count 0
  Sep 13 12:54:58.616: INFO: 	Container csi-provisioner ready: true, restart count 0
  Sep 13 12:54:58.616: INFO: 	Container csi-resizer ready: true, restart count 0
  Sep 13 12:54:58.616: INFO: 	Container csi-snapshotter ready: true, restart count 0
  Sep 13 12:54:58.616: INFO: 	Container log-collector ready: true, restart count 0
  Sep 13 12:54:58.616: INFO: csi-rbdplugin-provisioner-78947cbcdb-sdpts from rook-ceph started at 2024-09-13 09:57:42 +0000 UTC (6 container statuses recorded)
  Sep 13 12:54:58.616: INFO: 	Container csi-attacher ready: true, restart count 0
  Sep 13 12:54:58.616: INFO: 	Container csi-provisioner ready: true, restart count 0
  Sep 13 12:54:58.616: INFO: 	Container csi-rbdplugin ready: true, restart count 0
  Sep 13 12:54:58.616: INFO: 	Container csi-resizer ready: true, restart count 0
  Sep 13 12:54:58.616: INFO: 	Container csi-snapshotter ready: true, restart count 0
  Sep 13 12:54:58.616: INFO: 	Container log-collector ready: true, restart count 0
  Sep 13 12:54:58.616: INFO: csi-rbdplugin-tjtg5 from rook-ceph started at 2024-09-12 04:28:26 +0000 UTC (3 container statuses recorded)
  Sep 13 12:54:58.616: INFO: 	Container csi-rbdplugin ready: true, restart count 2
  Sep 13 12:54:58.616: INFO: 	Container driver-registrar ready: true, restart count 2
  Sep 13 12:54:58.616: INFO: 	Container log-collector ready: true, restart count 1
  Sep 13 12:54:58.616: INFO: rook-ceph-crashcollector-cncf-2-66bdbb4dc-k99dz from rook-ceph started at 2024-09-13 10:34:53 +0000 UTC (1 container statuses recorded)
  Sep 13 12:54:58.616: INFO: 	Container ceph-crash ready: true, restart count 0
  Sep 13 12:54:58.616: INFO: rook-ceph-exporter-cncf-2-69c7b74bf6-rddt9 from rook-ceph started at 2024-09-13 10:34:56 +0000 UTC (1 container statuses recorded)
  Sep 13 12:54:58.616: INFO: 	Container ceph-exporter ready: true, restart count 0
  Sep 13 12:54:58.616: INFO: rook-ceph-mds-myfs-a-77ccbf966b-dv275 from rook-ceph started at 2024-09-13 09:52:44 +0000 UTC (2 container statuses recorded)
  Sep 13 12:54:58.616: INFO: 	Container log-collector ready: true, restart count 0
  Sep 13 12:54:58.616: INFO: 	Container mds ready: true, restart count 11
  Sep 13 12:54:58.616: INFO: rook-ceph-mgr-a-85d9858989-j5hfp from rook-ceph started at 2024-09-13 09:52:44 +0000 UTC (3 container statuses recorded)
  Sep 13 12:54:58.616: INFO: 	Container log-collector ready: true, restart count 0
  Sep 13 12:54:58.616: INFO: 	Container mgr ready: true, restart count 15
  Sep 13 12:54:58.616: INFO: 	Container watch-active ready: true, restart count 0
  Sep 13 12:54:58.616: INFO: rook-ceph-mon-a-586dfd7d45-8dpxm from rook-ceph started at 2024-09-13 09:31:03 +0000 UTC (2 container statuses recorded)
  Sep 13 12:54:58.616: INFO: 	Container log-collector ready: true, restart count 0
  Sep 13 12:54:58.616: INFO: 	Container mon ready: true, restart count 0
  Sep 13 12:54:58.616: INFO: rook-ceph-operator-5f86b7cfd4-dqxdc from rook-ceph started at 2024-09-13 10:34:50 +0000 UTC (1 container statuses recorded)
  Sep 13 12:54:58.616: INFO: 	Container rook-ceph-operator ready: true, restart count 0
  Sep 13 12:54:58.616: INFO: rook-ceph-osd-2-7c6b7cbf57-9p8bq from rook-ceph started at 2024-09-13 09:43:44 +0000 UTC (2 container statuses recorded)
  Sep 13 12:54:58.616: INFO: 	Container log-collector ready: true, restart count 0
  Sep 13 12:54:58.616: INFO: 	Container osd ready: true, restart count 0
  Sep 13 12:54:58.616: INFO: rook-ceph-osd-prepare-cncf-2-2cltm from rook-ceph started at 2024-09-13 10:35:23 +0000 UTC (1 container statuses recorded)
  Sep 13 12:54:58.617: INFO: 	Container provision ready: false, restart count 0
  Sep 13 12:54:58.617: INFO: sonobuoy-systemd-logs-daemon-set-1cc6cc51fb6b46e1-kpx2t from sonobuoy started at 2024-09-13 12:12:20 +0000 UTC (2 container statuses recorded)
  Sep 13 12:54:58.617: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep 13 12:54:58.617: INFO: 	Container systemd-logs ready: true, restart count 0
  Sep 13 12:54:58.617: INFO: trombone-remote-app-6497cdc6ff-f2gsz from trombone started at 2024-09-13 10:06:40 +0000 UTC (2 container statuses recorded)
  Sep 13 12:54:58.617: INFO: 	Container istio-proxy ready: true, restart count 0
  Sep 13 12:54:58.617: INFO: 	Container trombone-remote-app ready: true, restart count 0
  Sep 13 12:54:58.617: INFO: viola-api-admin-d66495c9c-tcsh6 from viola started at 2024-09-13 10:06:35 +0000 UTC (2 container statuses recorded)
  Sep 13 12:54:58.617: INFO: 	Container istio-proxy ready: true, restart count 0
  Sep 13 12:54:58.617: INFO: 	Container viola-api ready: true, restart count 0
  Sep 13 12:54:58.617: INFO: viola-remote-app-7d5b58b94c-dlvn4 from viola started at 2024-09-13 10:06:40 +0000 UTC (2 container statuses recorded)
  Sep 13 12:54:58.617: INFO: 	Container istio-proxy ready: true, restart count 0
  Sep 13 12:54:58.617: INFO: 	Container viola-remote-app ready: true, restart count 0
  Sep 13 12:54:58.617: INFO: 
  Logging pods the apiserver thinks is on node cncf-3 before test
  Sep 13 12:54:58.633: INFO: oauth2-proxy-admin-5dcbc956c6-hc6sr from auth started at 2024-09-13 12:45:01 +0000 UTC (1 container statuses recorded)
  Sep 13 12:54:58.633: INFO: 	Container oauth2-proxy-admin ready: true, restart count 0
  Sep 13 12:54:58.633: INFO: oauth2-redis-admin-3 from auth started at 2024-09-13 12:37:34 +0000 UTC (1 container statuses recorded)
  Sep 13 12:54:58.633: INFO: 	Container redis ready: true, restart count 0
  Sep 13 12:54:58.633: INFO: oauth2-redis-admin-5 from auth started at 2024-09-13 12:37:40 +0000 UTC (1 container statuses recorded)
  Sep 13 12:54:58.633: INFO: 	Container redis ready: true, restart count 0
  Sep 13 12:54:58.633: INFO: redis-cluster-maintenance-cronjob-28770525-d7ctj from auth started at 2024-09-13 12:45:00 +0000 UTC (1 container statuses recorded)
  Sep 13 12:54:58.633: INFO: 	Container redis-cluster-check ready: false, restart count 0
  Sep 13 12:54:58.633: INFO: mariadb-backup-cronjob-28770530-r5q2d from dataplatform started at 2024-09-13 12:50:00 +0000 UTC (1 container statuses recorded)
  Sep 13 12:54:58.633: INFO: 	Container mariadb-backup-cronjob ready: false, restart count 0
  Sep 13 12:54:58.633: INFO: my-cluster-kafka-2 from dataplatform started at 2024-09-13 12:38:11 +0000 UTC (1 container statuses recorded)
  Sep 13 12:54:58.633: INFO: 	Container kafka ready: true, restart count 0
  Sep 13 12:54:58.633: INFO: my-cluster-zookeeper-1 from dataplatform started at 2024-09-13 12:38:02 +0000 UTC (1 container statuses recorded)
  Sep 13 12:54:58.633: INFO: 	Container zookeeper ready: true, restart count 0
  Sep 13 12:54:58.633: INFO: redis-0 from dataplatform started at 2024-09-13 12:37:30 +0000 UTC (1 container statuses recorded)
  Sep 13 12:54:58.633: INFO: 	Container redis ready: true, restart count 0
  Sep 13 12:54:58.633: INFO: vault-2 from dataplatform started at 2024-09-13 12:37:35 +0000 UTC (1 container statuses recorded)
  Sep 13 12:54:58.633: INFO: 	Container vault ready: true, restart count 0
  Sep 13 12:54:58.633: INFO: vault-backup-cronjob-28770530-7s5f8 from dataplatform started at 2024-09-13 12:50:00 +0000 UTC (1 container statuses recorded)
  Sep 13 12:54:58.633: INFO: 	Container clean-backup ready: false, restart count 0
  Sep 13 12:54:58.633: INFO: vault-unsealer-28770530-66drd from dataplatform started at 2024-09-13 12:50:00 +0000 UTC (1 container statuses recorded)
  Sep 13 12:54:58.633: INFO: 	Container unsealer ready: false, restart count 0
  Sep 13 12:54:58.633: INFO: cilium-gpk6m from kube-system started at 2024-09-13 10:34:22 +0000 UTC (1 container statuses recorded)
  Sep 13 12:54:58.633: INFO: 	Container cilium-agent ready: true, restart count 0
  Sep 13 12:54:58.633: INFO: cilium-operator-5d64788c99-v6sqx from kube-system started at 2024-09-13 10:34:22 +0000 UTC (1 container statuses recorded)
  Sep 13 12:54:58.633: INFO: 	Container cilium-operator ready: true, restart count 0
  Sep 13 12:54:58.633: INFO: kube-proxy-4wnlq from kube-system started at 2024-09-13 07:33:22 +0000 UTC (1 container statuses recorded)
  Sep 13 12:54:58.633: INFO: 	Container kube-proxy ready: true, restart count 1
  Sep 13 12:54:58.633: INFO: nginx-proxy-cncf-3 from kube-system started at 2024-09-13 10:34:20 +0000 UTC (1 container statuses recorded)
  Sep 13 12:54:58.633: INFO: 	Container nginx-proxy ready: true, restart count 3
  Sep 13 12:54:58.633: INFO: csi-cephfsplugin-xflnd from rook-ceph started at 2024-09-13 12:37:58 +0000 UTC (3 container statuses recorded)
  Sep 13 12:54:58.633: INFO: 	Container csi-cephfsplugin ready: true, restart count 0
  Sep 13 12:54:58.633: INFO: 	Container driver-registrar ready: true, restart count 0
  Sep 13 12:54:58.633: INFO: 	Container log-collector ready: true, restart count 0
  Sep 13 12:54:58.633: INFO: csi-rbdplugin-d8ds7 from rook-ceph started at 2024-09-13 12:37:29 +0000 UTC (3 container statuses recorded)
  Sep 13 12:54:58.633: INFO: 	Container csi-rbdplugin ready: true, restart count 0
  Sep 13 12:54:58.633: INFO: 	Container driver-registrar ready: true, restart count 0
  Sep 13 12:54:58.633: INFO: 	Container log-collector ready: true, restart count 0
  Sep 13 12:54:58.633: INFO: rook-ceph-crashcollector-cncf-3-c8d5f5b74-cd2s2 from rook-ceph started at 2024-09-13 12:37:35 +0000 UTC (1 container statuses recorded)
  Sep 13 12:54:58.633: INFO: 	Container ceph-crash ready: true, restart count 0
  Sep 13 12:54:58.633: INFO: rook-ceph-exporter-cncf-3-5848c97b8f-6c9s8 from rook-ceph started at 2024-09-13 12:37:38 +0000 UTC (1 container statuses recorded)
  Sep 13 12:54:58.634: INFO: 	Container ceph-exporter ready: true, restart count 0
  Sep 13 12:54:58.634: INFO: rook-ceph-mon-d-78554cdc5c-ld84x from rook-ceph started at 2024-09-13 12:37:29 +0000 UTC (2 container statuses recorded)
  Sep 13 12:54:58.634: INFO: 	Container log-collector ready: true, restart count 0
  Sep 13 12:54:58.634: INFO: 	Container mon ready: true, restart count 0
  Sep 13 12:54:58.634: INFO: rook-ceph-osd-1-697c857c8f-x4nn9 from rook-ceph started at 2024-09-13 12:37:29 +0000 UTC (2 container statuses recorded)
  Sep 13 12:54:58.634: INFO: 	Container log-collector ready: true, restart count 0
  Sep 13 12:54:58.634: INFO: 	Container osd ready: true, restart count 0
  Sep 13 12:54:58.634: INFO: rook-ceph-tools-7b67b65bd-dtvfv from rook-ceph started at 2024-09-13 12:37:29 +0000 UTC (1 container statuses recorded)
  Sep 13 12:54:58.634: INFO: 	Container rook-ceph-tools ready: true, restart count 0
  Sep 13 12:54:58.634: INFO: sonobuoy-systemd-logs-daemon-set-1cc6cc51fb6b46e1-p7scg from sonobuoy started at 2024-09-13 12:12:20 +0000 UTC (2 container statuses recorded)
  Sep 13 12:54:58.634: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep 13 12:54:58.634: INFO: 	Container systemd-logs ready: true, restart count 0
  Sep 13 12:54:58.634: INFO: 
  Logging pods the apiserver thinks is on node cncf-4 before test
  Sep 13 12:54:58.655: INFO: oauth2-redis-admin-2 from auth started at 2024-09-13 10:39:13 +0000 UTC (1 container statuses recorded)
  Sep 13 12:54:58.655: INFO: 	Container redis ready: true, restart count 0
  Sep 13 12:54:58.655: INFO: oauth2-redis-admin-4 from auth started at 2024-09-13 10:39:28 +0000 UTC (1 container statuses recorded)
  Sep 13 12:54:58.655: INFO: 	Container redis ready: true, restart count 0
  Sep 13 12:54:58.655: INFO: maestro-event-pusher-754554d8bc-rnszn from cmp started at 2024-09-13 10:41:42 +0000 UTC (2 container statuses recorded)
  Sep 13 12:54:58.655: INFO: 	Container istio-proxy ready: true, restart count 0
  Sep 13 12:54:58.655: INFO: 	Container maestro-event-pusher ready: true, restart count 0
  Sep 13 12:54:58.655: INFO: mariadb-sts-1 from dataplatform started at 2024-09-13 10:39:14 +0000 UTC (1 container statuses recorded)
  Sep 13 12:54:58.655: INFO: 	Container mariadb ready: true, restart count 0
  Sep 13 12:54:58.655: INFO: my-cluster-entity-operator-764cdd6bfb-w8n8x from dataplatform started at 2024-09-13 10:41:42 +0000 UTC (3 container statuses recorded)
  Sep 13 12:54:58.655: INFO: 	Container tls-sidecar ready: true, restart count 0
  Sep 13 12:54:58.655: INFO: 	Container topic-operator ready: true, restart count 0
  Sep 13 12:54:58.655: INFO: 	Container user-operator ready: true, restart count 0
  Sep 13 12:54:58.655: INFO: my-cluster-kafka-0 from dataplatform started at 2024-09-13 10:39:07 +0000 UTC (1 container statuses recorded)
  Sep 13 12:54:58.655: INFO: 	Container kafka ready: true, restart count 2
  Sep 13 12:54:58.655: INFO: my-cluster-zookeeper-0 from dataplatform started at 2024-09-13 10:39:07 +0000 UTC (1 container statuses recorded)
  Sep 13 12:54:58.655: INFO: 	Container zookeeper ready: true, restart count 0
  Sep 13 12:54:58.655: INFO: cilium-fj5rn from kube-system started at 2024-09-13 08:50:53 +0000 UTC (1 container statuses recorded)
  Sep 13 12:54:58.655: INFO: 	Container cilium-agent ready: true, restart count 1
  Sep 13 12:54:58.655: INFO: kube-proxy-2zm9n from kube-system started at 2024-09-13 07:33:08 +0000 UTC (1 container statuses recorded)
  Sep 13 12:54:58.655: INFO: 	Container kube-proxy ready: true, restart count 1
  Sep 13 12:54:58.655: INFO: nginx-proxy-cncf-4 from kube-system started at 2024-09-13 10:36:48 +0000 UTC (1 container statuses recorded)
  Sep 13 12:54:58.655: INFO: 	Container nginx-proxy ready: true, restart count 2
  Sep 13 12:54:58.655: INFO: csi-cephfsplugin-mj44d from rook-ceph started at 2024-09-12 04:28:27 +0000 UTC (3 container statuses recorded)
  Sep 13 12:54:58.655: INFO: 	Container csi-cephfsplugin ready: true, restart count 1
  Sep 13 12:54:58.655: INFO: 	Container driver-registrar ready: true, restart count 1
  Sep 13 12:54:58.655: INFO: 	Container log-collector ready: true, restart count 1
  Sep 13 12:54:58.655: INFO: csi-rbdplugin-jr8hc from rook-ceph started at 2024-09-12 04:28:26 +0000 UTC (3 container statuses recorded)
  Sep 13 12:54:58.655: INFO: 	Container csi-rbdplugin ready: true, restart count 1
  Sep 13 12:54:58.655: INFO: 	Container driver-registrar ready: true, restart count 1
  Sep 13 12:54:58.655: INFO: 	Container log-collector ready: true, restart count 1
  Sep 13 12:54:58.655: INFO: rook-ceph-crashcollector-cncf-4-55d6f448b9-hn6gj from rook-ceph started at 2024-09-13 12:37:29 +0000 UTC (1 container statuses recorded)
  Sep 13 12:54:58.655: INFO: 	Container ceph-crash ready: true, restart count 0
  Sep 13 12:54:58.655: INFO: rook-ceph-exporter-cncf-4-69df574c74-vqlfp from rook-ceph started at 2024-09-13 12:37:32 +0000 UTC (1 container statuses recorded)
  Sep 13 12:54:58.655: INFO: 	Container ceph-exporter ready: true, restart count 0
  Sep 13 12:54:58.656: INFO: rook-ceph-mds-myfs-b-6f56dc888d-l9vjb from rook-ceph started at 2024-09-13 12:37:29 +0000 UTC (2 container statuses recorded)
  Sep 13 12:54:58.656: INFO: 	Container log-collector ready: true, restart count 0
  Sep 13 12:54:58.656: INFO: 	Container mds ready: true, restart count 0
  Sep 13 12:54:58.656: INFO: rook-ceph-mgr-b-57755d7888-bnmpq from rook-ceph started at 2024-09-13 12:37:29 +0000 UTC (3 container statuses recorded)
  Sep 13 12:54:58.656: INFO: 	Container log-collector ready: true, restart count 0
  Sep 13 12:54:58.656: INFO: 	Container mgr ready: true, restart count 0
  Sep 13 12:54:58.656: INFO: 	Container watch-active ready: true, restart count 0
  Sep 13 12:54:58.656: INFO: rook-ceph-osd-3-54cb9dd4d7-gzszb from rook-ceph started at 2024-09-13 10:37:04 +0000 UTC (2 container statuses recorded)
  Sep 13 12:54:58.656: INFO: 	Container log-collector ready: true, restart count 0
  Sep 13 12:54:58.656: INFO: 	Container osd ready: true, restart count 0
  Sep 13 12:54:58.656: INFO: sonobuoy from sonobuoy started at 2024-09-13 12:12:19 +0000 UTC (1 container statuses recorded)
  Sep 13 12:54:58.656: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Sep 13 12:54:58.656: INFO: sonobuoy-e2e-job-781d9a3c1a264d66 from sonobuoy started at 2024-09-13 12:12:20 +0000 UTC (2 container statuses recorded)
  Sep 13 12:54:58.656: INFO: 	Container e2e ready: true, restart count 0
  Sep 13 12:54:58.656: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep 13 12:54:58.656: INFO: sonobuoy-systemd-logs-daemon-set-1cc6cc51fb6b46e1-pt4k7 from sonobuoy started at 2024-09-13 12:12:20 +0000 UTC (2 container statuses recorded)
  Sep 13 12:54:58.656: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep 13 12:54:58.656: INFO: 	Container systemd-logs ready: true, restart count 0
  Sep 13 12:54:58.656: INFO: trombone-pipeline-api-admin-6457988cdb-kgvph from trombone started at 2024-09-13 10:38:32 +0000 UTC (2 container statuses recorded)
  Sep 13 12:54:58.656: INFO: 	Container istio-proxy ready: true, restart count 0
  Sep 13 12:54:58.656: INFO: 	Container trombone-pipeline-api ready: true, restart count 4
  Sep 13 12:54:58.656: INFO: 
  Logging pods the apiserver thinks is on node cncf-5 before test
  Sep 13 12:54:58.672: INFO: keycloak-76cc8f6cb7-x6gfj from auth started at 2024-09-12 08:04:31 +0000 UTC (1 container statuses recorded)
  Sep 13 12:54:58.672: INFO: 	Container keycloak ready: true, restart count 1
  Sep 13 12:54:58.672: INFO: oauth2-redis-admin-1 from auth started at 2024-09-13 08:22:43 +0000 UTC (1 container statuses recorded)
  Sep 13 12:54:58.673: INFO: 	Container redis ready: true, restart count 0
  Sep 13 12:54:58.673: INFO: maestro-iam-adapter-api-84d7945fdd-vt9vl from cmp started at 2024-09-13 05:36:03 +0000 UTC (2 container statuses recorded)
  Sep 13 12:54:58.673: INFO: 	Container istio-proxy ready: true, restart count 1
  Sep 13 12:54:58.674: INFO: 	Container maestro-iam-adapter-api ready: true, restart count 1
  Sep 13 12:54:58.674: INFO: notification-adapter-api-67cb5bfffc-72vhz from cmp started at 2024-09-13 05:36:03 +0000 UTC (2 container statuses recorded)
  Sep 13 12:54:58.674: INFO: 	Container istio-proxy ready: true, restart count 1
  Sep 13 12:54:58.674: INFO: 	Container noti-api ready: true, restart count 1
  Sep 13 12:54:58.674: INFO: mariadb-maxscale-745d5dfb5f-cdhhn from dataplatform started at 2024-09-12 08:30:28 +0000 UTC (1 container statuses recorded)
  Sep 13 12:54:58.674: INFO: 	Container maxscale ready: true, restart count 1
  Sep 13 12:54:58.674: INFO: mariadb-sts-0 from dataplatform started at 2024-09-12 07:06:14 +0000 UTC (1 container statuses recorded)
  Sep 13 12:54:58.675: INFO: 	Container mariadb ready: true, restart count 1
  Sep 13 12:54:58.675: INFO: my-cluster-kafka-1 from dataplatform started at 2024-09-12 07:07:17 +0000 UTC (1 container statuses recorded)
  Sep 13 12:54:58.675: INFO: 	Container kafka ready: true, restart count 2
  Sep 13 12:54:58.675: INFO: my-cluster-zookeeper-2 from dataplatform started at 2024-09-12 07:06:30 +0000 UTC (1 container statuses recorded)
  Sep 13 12:54:58.675: INFO: 	Container zookeeper ready: true, restart count 1
  Sep 13 12:54:58.676: INFO: strimzi-cluster-operator-7fbfc5c86f-94ths from dataplatform started at 2024-09-13 08:34:15 +0000 UTC (1 container statuses recorded)
  Sep 13 12:54:58.676: INFO: 	Container strimzi-cluster-operator ready: true, restart count 1
  Sep 13 12:54:58.676: INFO: vault-0 from dataplatform started at 2024-09-12 07:06:14 +0000 UTC (1 container statuses recorded)
  Sep 13 12:54:58.676: INFO: 	Container vault ready: true, restart count 1
  Sep 13 12:54:58.677: INFO: ingress-nginx-admission-create-pqp74 from ingress-nginx started at 2024-09-12 03:44:55 +0000 UTC (1 container statuses recorded)
  Sep 13 12:54:58.678: INFO: 	Container create ready: false, restart count 0
  Sep 13 12:54:58.678: INFO: cilium-2dbxd from kube-system started at 2024-09-13 08:50:53 +0000 UTC (1 container statuses recorded)
  Sep 13 12:54:58.678: INFO: 	Container cilium-agent ready: true, restart count 1
  Sep 13 12:54:58.678: INFO: coredns-69db55dd76-vzt9s from kube-system started at 2024-09-13 08:22:23 +0000 UTC (1 container statuses recorded)
  Sep 13 12:54:58.678: INFO: 	Container coredns ready: true, restart count 1
  Sep 13 12:54:58.678: INFO: kube-proxy-l5kxx from kube-system started at 2024-09-13 08:27:26 +0000 UTC (1 container statuses recorded)
  Sep 13 12:54:58.679: INFO: 	Container kube-proxy ready: true, restart count 1
  Sep 13 12:54:58.679: INFO: nginx-proxy-cncf-5 from kube-system started at 2024-09-13 10:38:05 +0000 UTC (1 container statuses recorded)
  Sep 13 12:54:58.679: INFO: 	Container nginx-proxy ready: true, restart count 2
  Sep 13 12:54:58.679: INFO: csi-cephfsplugin-m68bj from rook-ceph started at 2024-09-12 04:28:27 +0000 UTC (3 container statuses recorded)
  Sep 13 12:54:58.680: INFO: 	Container csi-cephfsplugin ready: true, restart count 1
  Sep 13 12:54:58.681: INFO: 	Container driver-registrar ready: true, restart count 1
  Sep 13 12:54:58.681: INFO: 	Container log-collector ready: true, restart count 1
  Sep 13 12:54:58.681: INFO: csi-cephfsplugin-provisioner-69554c6fcb-jtmn4 from rook-ceph started at 2024-09-12 04:28:27 +0000 UTC (6 container statuses recorded)
  Sep 13 12:54:58.682: INFO: 	Container csi-attacher ready: true, restart count 2
  Sep 13 12:54:58.682: INFO: 	Container csi-cephfsplugin ready: true, restart count 1
  Sep 13 12:54:58.682: INFO: 	Container csi-provisioner ready: true, restart count 2
  Sep 13 12:54:58.682: INFO: 	Container csi-resizer ready: true, restart count 1
  Sep 13 12:54:58.683: INFO: 	Container csi-snapshotter ready: true, restart count 1
  Sep 13 12:54:58.683: INFO: 	Container log-collector ready: true, restart count 1
  Sep 13 12:54:58.683: INFO: csi-rbdplugin-cjlrl from rook-ceph started at 2024-09-12 04:28:26 +0000 UTC (3 container statuses recorded)
  Sep 13 12:54:58.683: INFO: 	Container csi-rbdplugin ready: true, restart count 1
  Sep 13 12:54:58.683: INFO: 	Container driver-registrar ready: true, restart count 1
  Sep 13 12:54:58.683: INFO: 	Container log-collector ready: true, restart count 1
  Sep 13 12:54:58.683: INFO: csi-rbdplugin-provisioner-78947cbcdb-zjs8f from rook-ceph started at 2024-09-12 08:30:28 +0000 UTC (6 container statuses recorded)
  Sep 13 12:54:58.683: INFO: 	Container csi-attacher ready: true, restart count 5
  Sep 13 12:54:58.683: INFO: 	Container csi-provisioner ready: true, restart count 2
  Sep 13 12:54:58.684: INFO: 	Container csi-rbdplugin ready: true, restart count 1
  Sep 13 12:54:58.684: INFO: 	Container csi-resizer ready: true, restart count 1
  Sep 13 12:54:58.684: INFO: 	Container csi-snapshotter ready: true, restart count 4
  Sep 13 12:54:58.684: INFO: 	Container log-collector ready: true, restart count 1
  Sep 13 12:54:58.684: INFO: rook-ceph-crashcollector-cncf-5-8f85f95b8-qtqwc from rook-ceph started at 2024-09-13 10:38:56 +0000 UTC (1 container statuses recorded)
  Sep 13 12:54:58.684: INFO: 	Container ceph-crash ready: true, restart count 0
  Sep 13 12:54:58.684: INFO: rook-ceph-exporter-cncf-5-7678cb8495-mgpgl from rook-ceph started at 2024-09-13 10:38:56 +0000 UTC (1 container statuses recorded)
  Sep 13 12:54:58.684: INFO: 	Container ceph-exporter ready: true, restart count 0
  Sep 13 12:54:58.684: INFO: rook-ceph-mon-b-56676fdd5-5hdhl from rook-ceph started at 2024-09-13 10:38:56 +0000 UTC (2 container statuses recorded)
  Sep 13 12:54:58.684: INFO: 	Container log-collector ready: true, restart count 0
  Sep 13 12:54:58.684: INFO: 	Container mon ready: true, restart count 0
  Sep 13 12:54:58.684: INFO: rook-ceph-osd-0-7574f4df4-bncm9 from rook-ceph started at 2024-09-13 10:38:56 +0000 UTC (2 container statuses recorded)
  Sep 13 12:54:58.685: INFO: 	Container log-collector ready: true, restart count 0
  Sep 13 12:54:58.685: INFO: 	Container osd ready: true, restart count 0
  Sep 13 12:54:58.685: INFO: rook-ceph-osd-prepare-cncf-5-f2kll from rook-ceph started at 2024-09-12 17:18:35 +0000 UTC (1 container statuses recorded)
  Sep 13 12:54:58.685: INFO: 	Container provision ready: false, restart count 0
  Sep 13 12:54:58.685: INFO: sonobuoy-systemd-logs-daemon-set-1cc6cc51fb6b46e1-27xgb from sonobuoy started at 2024-09-13 12:12:20 +0000 UTC (2 container statuses recorded)
  Sep 13 12:54:58.685: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep 13 12:54:58.685: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 09/13/24 12:54:58.685
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.17f4cef2a43b9859], Reason = [FailedScheduling], Message = [0/5 nodes are available: 1 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 4 node(s) didn't match Pod's node affinity/selector. preemption: 0/5 nodes are available: 5 Preemption is not helpful for scheduling.] @ 09/13/24 12:54:58.736
  Sep 13 12:54:59.727: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-4479" for this suite. @ 09/13/24 12:54:59.73
• [1.186 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 09/13/24 12:54:59.74
  Sep 13 12:54:59.740: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename secrets @ 09/13/24 12:54:59.741
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:54:59.752
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:54:59.755
  STEP: Creating secret with name secret-test-8670364d-65da-4b1a-9162-473e61593090 @ 09/13/24 12:54:59.759
  STEP: Creating a pod to test consume secrets @ 09/13/24 12:54:59.767
  STEP: Saw pod success @ 09/13/24 12:55:03.791
  Sep 13 12:55:03.793: INFO: Trying to get logs from node cncf-3 pod pod-secrets-6c6edfad-90d2-4243-8bf3-668e58da65f4 container secret-volume-test: <nil>
  STEP: delete the pod @ 09/13/24 12:55:03.806
  Sep 13 12:55:03.835: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3740" for this suite. @ 09/13/24 12:55:03.839
• [4.112 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:163
  STEP: Creating a kubernetes client @ 09/13/24 12:55:03.852
  Sep 13 12:55:03.852: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename svcaccounts @ 09/13/24 12:55:03.853
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:55:03.871
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:55:03.874
  Sep 13 12:55:03.895: INFO: created pod pod-service-account-defaultsa
  Sep 13 12:55:03.896: INFO: pod pod-service-account-defaultsa service account token volume mount: true
  Sep 13 12:55:03.904: INFO: created pod pod-service-account-mountsa
  Sep 13 12:55:03.904: INFO: pod pod-service-account-mountsa service account token volume mount: true
  Sep 13 12:55:03.920: INFO: created pod pod-service-account-nomountsa
  Sep 13 12:55:03.920: INFO: pod pod-service-account-nomountsa service account token volume mount: false
  Sep 13 12:55:03.926: INFO: created pod pod-service-account-defaultsa-mountspec
  Sep 13 12:55:03.926: INFO: pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  Sep 13 12:55:03.941: INFO: created pod pod-service-account-mountsa-mountspec
  Sep 13 12:55:03.941: INFO: pod pod-service-account-mountsa-mountspec service account token volume mount: true
  Sep 13 12:55:03.960: INFO: created pod pod-service-account-nomountsa-mountspec
  Sep 13 12:55:03.961: INFO: pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  Sep 13 12:55:03.969: INFO: created pod pod-service-account-defaultsa-nomountspec
  Sep 13 12:55:03.969: INFO: pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  Sep 13 12:55:03.985: INFO: created pod pod-service-account-mountsa-nomountspec
  Sep 13 12:55:03.985: INFO: pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  Sep 13 12:55:03.996: INFO: created pod pod-service-account-nomountsa-nomountspec
  Sep 13 12:55:03.996: INFO: pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  Sep 13 12:55:03.996: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-9488" for this suite. @ 09/13/24 12:55:04.014
• [0.172 seconds]
------------------------------
SSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1399
  STEP: Creating a kubernetes client @ 09/13/24 12:55:04.025
  Sep 13 12:55:04.025: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename kubectl @ 09/13/24 12:55:04.026
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:55:04.043
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:55:04.046
  Sep 13 12:55:04.049: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=kubectl-5199 create -f -'
  Sep 13 12:55:04.174: INFO: stderr: ""
  Sep 13 12:55:04.174: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  Sep 13 12:55:04.174: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=kubectl-5199 create -f -'
  Sep 13 12:55:04.306: INFO: stderr: ""
  Sep 13 12:55:04.306: INFO: stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 09/13/24 12:55:04.306
  Sep 13 12:55:05.309: INFO: Selector matched 1 pods for map[app:agnhost]
  Sep 13 12:55:05.309: INFO: Found 1 / 1
  Sep 13 12:55:05.309: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  Sep 13 12:55:05.311: INFO: Selector matched 1 pods for map[app:agnhost]
  Sep 13 12:55:05.311: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Sep 13 12:55:05.311: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=kubectl-5199 describe pod agnhost-primary-sd598'
  Sep 13 12:55:05.381: INFO: stderr: ""
  Sep 13 12:55:05.381: INFO: stdout: "Name:             agnhost-primary-sd598\nNamespace:        kubectl-5199\nPriority:         0\nService Account:  default\nNode:             cncf-4/172.10.50.34\nStart Time:       Fri, 13 Sep 2024 12:55:04 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      <none>\nStatus:           Running\nIP:               10.0.3.122\nIPs:\n  IP:           10.0.3.122\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://5f675c61a72eecd4e3da3b592a519e856d770672f0bdceb08309e49b8b2ef7a3\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.47\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:cc249acbd34692826b2b335335615e060fdb3c0bca4954507aa3a1d1194de253\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Fri, 13 Sep 2024 12:55:04 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-b8qwr (ro)\nConditions:\n  Type                        Status\n  PodReadyToStartContainers   True \n  Initialized                 True \n  Ready                       True \n  ContainersReady             True \n  PodScheduled                True \nVolumes:\n  kube-api-access-b8qwr:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  1s    default-scheduler  Successfully assigned kubectl-5199/agnhost-primary-sd598 to cncf-4\n  Normal  Pulled     1s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.47\" already present on machine\n  Normal  Created    1s    kubelet            Created container agnhost-primary\n  Normal  Started    1s    kubelet            Started container agnhost-primary\n"
  Sep 13 12:55:05.381: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=kubectl-5199 describe rc agnhost-primary'
  Sep 13 12:55:05.464: INFO: stderr: ""
  Sep 13 12:55:05.464: INFO: stdout: "Name:         agnhost-primary\nNamespace:    kubectl-5199\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:        registry.k8s.io/e2e-test-images/agnhost:2.47\n    Port:         6379/TCP\n    Host Port:    0/TCP\n    Environment:  <none>\n    Mounts:       <none>\n  Volumes:        <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  1s    replication-controller  Created pod: agnhost-primary-sd598\n"
  Sep 13 12:55:05.464: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=kubectl-5199 describe service agnhost-primary'
  Sep 13 12:55:05.532: INFO: stderr: ""
  Sep 13 12:55:05.532: INFO: stdout: "Name:              agnhost-primary\nNamespace:         kubectl-5199\nLabels:            app=agnhost\n                   role=primary\nAnnotations:       <none>\nSelector:          app=agnhost,role=primary\nType:              ClusterIP\nIP Family Policy:  SingleStack\nIP Families:       IPv4\nIP:                10.233.13.132\nIPs:               10.233.13.132\nPort:              <unset>  6379/TCP\nTargetPort:        agnhost-server/TCP\nEndpoints:         10.0.3.122:6379\nSession Affinity:  None\nEvents:            <none>\n"
  Sep 13 12:55:05.536: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=kubectl-5199 describe node cncf-1'
  Sep 13 12:55:05.643: INFO: stderr: ""
  Sep 13 12:55:05.643: INFO: stdout: "Name:               cncf-1\nRoles:              control-plane\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=cncf-1\n                    kubernetes.io/os=linux\n                    node-role.kubernetes.io/control-plane=\n                    node.kubernetes.io/exclude-from-external-load-balancers=\nAnnotations:        kubeadm.alpha.kubernetes.io/cri-socket: unix:///var/run/containerd/containerd.sock\n                    node.alpha.kubernetes.io/ttl: 0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Thu, 12 Sep 2024 03:20:56 +0000\nTaints:             node-role.kubernetes.io/control-plane:NoSchedule\nUnschedulable:      false\nLease:\n  HolderIdentity:  cncf-1\n  AcquireTime:     <unset>\n  RenewTime:       Fri, 13 Sep 2024 12:54:57 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Thu, 12 Sep 2024 03:22:22 +0000   Thu, 12 Sep 2024 03:22:22 +0000   CiliumIsUp                   Cilium is running on this node\n  MemoryPressure       False   Fri, 13 Sep 2024 12:55:00 +0000   Thu, 12 Sep 2024 03:20:55 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Fri, 13 Sep 2024 12:55:00 +0000   Thu, 12 Sep 2024 03:20:55 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Fri, 13 Sep 2024 12:55:00 +0000   Thu, 12 Sep 2024 03:20:55 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Fri, 13 Sep 2024 12:55:00 +0000   Fri, 13 Sep 2024 08:52:30 +0000   KubeletReady                 kubelet is posting ready status. AppArmor enabled\nAddresses:\n  InternalIP:  172.10.50.96\n  Hostname:    cncf-1\nCapacity:\n  cpu:                4\n  ephemeral-storage:  50620216Ki\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             8127012Ki\n  pods:               110\nAllocatable:\n  cpu:                4\n  ephemeral-storage:  46651590989\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             8024612Ki\n  pods:               110\nSystem Info:\n  Machine ID:                 adaf86b16e4c468c912a00c01fb3c91e\n  System UUID:                adaf86b1-6e4c-468c-912a-00c01fb3c91e\n  Boot ID:                    6a93de30-48a3-4fb2-9d4e-f4c1698c4ffe\n  Kernel Version:             5.15.0-92-generic\n  OS Image:                   Ubuntu 22.04.3 LTS\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  containerd://1.7.20\n  Kubelet Version:            v1.29.7\n  Kube-Proxy Version:         v1.29.7\nPodCIDR:                      10.233.64.0/24\nPodCIDRs:                     10.233.64.0/24\nNon-terminated Pods:          (9 in total)\n  Namespace                   Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                       ------------  ----------  ---------------  -------------  ---\n  kube-system                 cilium-hsc7g                                               100m (2%)     0 (0%)      10Mi (0%)        0 (0%)         4h4m\n  kube-system                 cilium-operator-5d64788c99-7wjbg                           0 (0%)        0 (0%)      0 (0%)           0 (0%)         4h4m\n  kube-system                 coredns-69db55dd76-9wmdh                                   100m (2%)     0 (0%)      70Mi (0%)        300Mi (3%)     4h32m\n  kube-system                 dns-autoscaler-6f4b597d8c-jq8vg                            20m (0%)      0 (0%)      10Mi (0%)        0 (0%)         4h20m\n  kube-system                 kube-apiserver-cncf-1                                      250m (6%)     0 (0%)      0 (0%)           0 (0%)         33h\n  kube-system                 kube-controller-manager-cncf-1                             200m (5%)     0 (0%)      0 (0%)           0 (0%)         4h28m\n  kube-system                 kube-proxy-x4pcs                                           0 (0%)        0 (0%)      0 (0%)           0 (0%)         4h27m\n  kube-system                 kube-scheduler-cncf-1                                      100m (2%)     0 (0%)      0 (0%)           0 (0%)         4h28m\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-1cc6cc51fb6b46e1-82fhx    0 (0%)        0 (0%)      0 (0%)           0 (0%)         42m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource           Requests    Limits\n  --------           --------    ------\n  cpu                770m (19%)  0 (0%)\n  memory             90Mi (1%)   300Mi (3%)\n  ephemeral-storage  0 (0%)      0 (0%)\n  hugepages-1Gi      0 (0%)      0 (0%)\n  hugepages-2Mi      0 (0%)      0 (0%)\nEvents:              <none>\n"
  Sep 13 12:55:05.644: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=kubectl-5199 describe namespace kubectl-5199'
  Sep 13 12:55:05.702: INFO: stderr: ""
  Sep 13 12:55:05.702: INFO: stdout: "Name:         kubectl-5199\nLabels:       e2e-framework=kubectl\n              e2e-run=66130911-57fd-4a55-8165-526358ee3177\n              kubernetes.io/metadata.name=kubectl-5199\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  Sep 13 12:55:05.702: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5199" for this suite. @ 09/13/24 12:55:05.705
• [1.688 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 09/13/24 12:55:05.713
  Sep 13 12:55:05.713: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename secrets @ 09/13/24 12:55:05.715
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:55:05.734
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:55:05.736
  STEP: Creating secret with name secret-test-ecfe4aa9-418c-407e-9207-77a766aec709 @ 09/13/24 12:55:05.741
  STEP: Creating a pod to test consume secrets @ 09/13/24 12:55:05.747
  STEP: Saw pod success @ 09/13/24 12:55:09.761
  Sep 13 12:55:09.763: INFO: Trying to get logs from node cncf-3 pod pod-secrets-8285fb97-8f46-47bf-ab66-520047e64111 container secret-volume-test: <nil>
  STEP: delete the pod @ 09/13/24 12:55:09.766
  Sep 13 12:55:09.787: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5280" for this suite. @ 09/13/24 12:55:09.79
• [4.090 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:113
  STEP: Creating a kubernetes client @ 09/13/24 12:55:09.804
  Sep 13 12:55:09.804: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename replication-controller @ 09/13/24 12:55:09.805
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:55:09.823
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:55:09.825
  STEP: creating a ReplicationController @ 09/13/24 12:55:09.83
  STEP: waiting for RC to be added @ 09/13/24 12:55:09.84
  STEP: waiting for available Replicas @ 09/13/24 12:55:09.841
  STEP: patching ReplicationController @ 09/13/24 12:55:11.563
  STEP: waiting for RC to be modified @ 09/13/24 12:55:11.569
  STEP: patching ReplicationController status @ 09/13/24 12:55:11.57
  STEP: waiting for RC to be modified @ 09/13/24 12:55:11.581
  STEP: waiting for available Replicas @ 09/13/24 12:55:11.582
  STEP: fetching ReplicationController status @ 09/13/24 12:55:11.587
  STEP: patching ReplicationController scale @ 09/13/24 12:55:11.589
  STEP: waiting for RC to be modified @ 09/13/24 12:55:11.595
  STEP: waiting for ReplicationController's scale to be the max amount @ 09/13/24 12:55:11.595
  STEP: fetching ReplicationController; ensuring that it's patched @ 09/13/24 12:55:13.133
  STEP: updating ReplicationController status @ 09/13/24 12:55:13.136
  STEP: waiting for RC to be modified @ 09/13/24 12:55:13.141
  STEP: listing all ReplicationControllers @ 09/13/24 12:55:13.141
  STEP: checking that ReplicationController has expected values @ 09/13/24 12:55:13.143
  STEP: deleting ReplicationControllers by collection @ 09/13/24 12:55:13.144
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 09/13/24 12:55:13.154
  Sep 13 12:55:13.218: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0913 12:55:13.218366      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-5744" for this suite. @ 09/13/24 12:55:13.221
• [3.422 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 09/13/24 12:55:13.226
  Sep 13 12:55:13.226: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename init-container @ 09/13/24 12:55:13.227
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:55:13.248
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:55:13.251
  STEP: creating the pod @ 09/13/24 12:55:13.256
  Sep 13 12:55:13.257: INFO: PodSpec: initContainers in spec.initContainers
  E0913 12:55:14.218595      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:55:15.219539      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:55:16.220098      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:55:17.220290      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:55:18.220536      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:55:19.221451      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:55:20.222394      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:55:21.223846      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:55:22.224295      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:55:23.224504      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:55:24.224991      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:55:25.225056      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:55:26.225209      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:55:27.226053      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:55:28.226461      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:55:29.226685      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:55:30.227172      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:55:31.227284      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:55:32.228062      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:55:33.229028      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:55:34.229782      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:55:35.229859      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:55:36.230174      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:55:37.230231      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:55:38.230358      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:55:39.230482      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:55:40.231941      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:55:41.232969      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:55:42.233610      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:55:43.234488      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:55:44.234765      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:55:45.235061      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:55:46.235508      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:55:47.235572      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:55:48.235935      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:55:49.236946      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:55:50.237155      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:55:51.237966      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:55:52.238310      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:55:53.238465      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:55:54.238972      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:55:55.239200      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 12:55:55.708: INFO: init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-3f365877-6d29-4524-bfbc-aaa1f9a3daec", GenerateName:"", Namespace:"init-container-2654", SelfLink:"", UID:"f6966fb1-c2d8-4ee8-849d-899ffa2167b7", ResourceVersion:"721966", Generation:0, CreationTimestamp:time.Date(2024, time.September, 13, 12, 55, 13, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"257027123"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 12, 55, 13, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc006d0d218), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 12, 55, 55, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc006d0d248), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-ndx4p", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc00552e760), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-ndx4p", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-ndx4p", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.9", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-ndx4p", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc0054cbd30), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"cncf-3", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc0002656c0), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc0054cbdb0)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc0054cbdd0)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc0054cbdd8), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc0054cbddc), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc006b8d670), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"PodReadyToStartContainers", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.September, 13, 12, 55, 14, 0, time.Local), Reason:"", Message:""}, v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.September, 13, 12, 55, 13, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.September, 13, 12, 55, 13, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.September, 13, 12, 55, 13, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.September, 13, 12, 55, 13, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"172.10.50.243", HostIPs:[]v1.HostIP{v1.HostIP{IP:"172.10.50.243"}}, PodIP:"10.0.1.136", PodIPs:[]v1.PodIP{v1.PodIP{IP:"10.0.1.136"}}, StartTime:time.Date(2024, time.September, 13, 12, 55, 13, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc000265810)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc000265960)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:a9155b13325b2abef48e71de77bb8ac015412a566829f621d06bfae5c699b1b9", ContainerID:"containerd://aabad5e8054da5b0e980d3f9ce68780f1ccada0aecd92f3107fea5a7ed560a7c", Started:(*bool)(0xc0054cbe7a), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc00552e7c0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"", ContainerID:"", Started:(*bool)(0xc0054cbe8f), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc00552e7a0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.9", ImageID:"", ContainerID:"", Started:(*bool)(0xc0054cbe5f), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  Sep 13 12:55:55.709: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-2654" for this suite. @ 09/13/24 12:55:55.714
• [42.494 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:408
  STEP: Creating a kubernetes client @ 09/13/24 12:55:55.72
  Sep 13 12:55:55.720: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename job @ 09/13/24 12:55:55.721
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:55:55.735
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:55:55.738
  STEP: Creating Indexed job @ 09/13/24 12:55:55.749
  STEP: Ensuring job reaches completions @ 09/13/24 12:55:55.756
  E0913 12:55:56.239305      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:55:57.239492      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:55:58.239558      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:55:59.239840      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:56:00.240623      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:56:01.240984      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:56:02.241164      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:56:03.241747      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring pods with index for job exist @ 09/13/24 12:56:03.759
  Sep 13 12:56:03.762: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-8325" for this suite. @ 09/13/24 12:56:03.765
• [8.055 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:194
  STEP: Creating a kubernetes client @ 09/13/24 12:56:03.775
  Sep 13 12:56:03.775: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/13/24 12:56:03.776
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:56:03.79
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:56:03.793
  Sep 13 12:56:03.795: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  E0913 12:56:04.243218      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:56:05.242608      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 09/13/24 12:56:05.522
  Sep 13 12:56:05.522: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=crd-publish-openapi-5015 --namespace=crd-publish-openapi-5015 create -f -'
  Sep 13 12:56:05.631: INFO: stderr: ""
  Sep 13 12:56:05.631: INFO: stdout: "e2e-test-crd-publish-openapi-2579-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  Sep 13 12:56:05.632: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=crd-publish-openapi-5015 --namespace=crd-publish-openapi-5015 delete e2e-test-crd-publish-openapi-2579-crds test-cr'
  Sep 13 12:56:05.700: INFO: stderr: ""
  Sep 13 12:56:05.700: INFO: stdout: "e2e-test-crd-publish-openapi-2579-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  Sep 13 12:56:05.700: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=crd-publish-openapi-5015 --namespace=crd-publish-openapi-5015 apply -f -'
  Sep 13 12:56:05.782: INFO: stderr: ""
  Sep 13 12:56:05.782: INFO: stdout: "e2e-test-crd-publish-openapi-2579-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  Sep 13 12:56:05.782: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=crd-publish-openapi-5015 --namespace=crd-publish-openapi-5015 delete e2e-test-crd-publish-openapi-2579-crds test-cr'
  Sep 13 12:56:05.859: INFO: stderr: ""
  Sep 13 12:56:05.859: INFO: stdout: "e2e-test-crd-publish-openapi-2579-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 09/13/24 12:56:05.859
  Sep 13 12:56:05.859: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=crd-publish-openapi-5015 explain e2e-test-crd-publish-openapi-2579-crds'
  Sep 13 12:56:05.912: INFO: stderr: ""
  Sep 13 12:56:05.912: INFO: stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-2579-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E0913 12:56:06.243003      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:56:07.243462      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 12:56:07.577: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5015" for this suite. @ 09/13/24 12:56:07.585
• [3.819 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:70
  STEP: Creating a kubernetes client @ 09/13/24 12:56:07.594
  Sep 13 12:56:07.594: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename downward-api @ 09/13/24 12:56:07.595
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:56:07.614
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:56:07.617
  STEP: Creating a pod to test downward API volume plugin @ 09/13/24 12:56:07.62
  E0913 12:56:08.244438      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:56:09.244805      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:56:10.245574      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:56:11.246143      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/13/24 12:56:11.641
  Sep 13 12:56:11.643: INFO: Trying to get logs from node cncf-3 pod downwardapi-volume-5190644d-7de2-46ed-8b04-f3aabac70dcc container client-container: <nil>
  STEP: delete the pod @ 09/13/24 12:56:11.648
  Sep 13 12:56:11.672: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5934" for this suite. @ 09/13/24 12:56:11.676
• [4.088 seconds]
------------------------------
SSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:134
  STEP: Creating a kubernetes client @ 09/13/24 12:56:11.682
  Sep 13 12:56:11.682: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename kubelet-test @ 09/13/24 12:56:11.684
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:56:11.694
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:56:11.697
  Sep 13 12:56:11.758: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-1267" for this suite. @ 09/13/24 12:56:11.761
• [0.089 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:120
  STEP: Creating a kubernetes client @ 09/13/24 12:56:11.772
  Sep 13 12:56:11.772: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename emptydir @ 09/13/24 12:56:11.773
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:56:11.798
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:56:11.801
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 09/13/24 12:56:11.804
  E0913 12:56:12.246644      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:56:13.247197      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:56:14.247459      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:56:15.247941      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/13/24 12:56:15.834
  Sep 13 12:56:15.837: INFO: Trying to get logs from node cncf-3 pod pod-c9d424c1-7b8a-4c49-93cd-e51e81dc1cb6 container test-container: <nil>
  STEP: delete the pod @ 09/13/24 12:56:15.842
  Sep 13 12:56:15.866: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-354" for this suite. @ 09/13/24 12:56:15.869
• [4.103 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:808
  STEP: Creating a kubernetes client @ 09/13/24 12:56:15.875
  Sep 13 12:56:15.875: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename resourcequota @ 09/13/24 12:56:15.876
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:56:15.897
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:56:15.9
  STEP: Creating a ResourceQuota with best effort scope @ 09/13/24 12:56:15.903
  STEP: Ensuring ResourceQuota status is calculated @ 09/13/24 12:56:15.907
  E0913 12:56:16.249056      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:56:17.249165      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not best effort scope @ 09/13/24 12:56:17.911
  STEP: Ensuring ResourceQuota status is calculated @ 09/13/24 12:56:17.916
  E0913 12:56:18.249706      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:56:19.249910      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a best-effort pod @ 09/13/24 12:56:19.918
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 09/13/24 12:56:19.935
  E0913 12:56:20.250751      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:56:21.250915      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 09/13/24 12:56:21.939
  E0913 12:56:22.251541      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:56:23.251771      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 09/13/24 12:56:23.943
  STEP: Ensuring resource quota status released the pod usage @ 09/13/24 12:56:23.958
  E0913 12:56:24.252644      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:56:25.253163      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a not best-effort pod @ 09/13/24 12:56:25.961
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 09/13/24 12:56:25.973
  E0913 12:56:26.254207      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:56:27.254410      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 09/13/24 12:56:27.978
  E0913 12:56:28.255121      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:56:29.255113      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 09/13/24 12:56:29.982
  STEP: Ensuring resource quota status released the pod usage @ 09/13/24 12:56:29.999
  E0913 12:56:30.255671      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:56:31.255848      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 12:56:32.003: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5791" for this suite. @ 09/13/24 12:56:32.007
• [16.141 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Environment:NotInUserNS] [Conformance] [sig-node, NodeConformance, Environment:NotInUserNS, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:79
  STEP: Creating a kubernetes client @ 09/13/24 12:56:32.016
  Sep 13 12:56:32.016: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename sysctl @ 09/13/24 12:56:32.017
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:56:32.036
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:56:32.039
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 09/13/24 12:56:32.041
  STEP: Watching for error events or started pod @ 09/13/24 12:56:32.052
  E0913 12:56:32.256653      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:56:33.257017      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for pod completion @ 09/13/24 12:56:34.057
  E0913 12:56:34.258189      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:56:35.258319      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Checking that the pod succeeded @ 09/13/24 12:56:36.065
  STEP: Getting logs from the pod @ 09/13/24 12:56:36.065
  STEP: Checking that the sysctl is actually updated @ 09/13/24 12:56:36.069
  Sep 13 12:56:36.069: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-1807" for this suite. @ 09/13/24 12:56:36.073
• [4.066 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 09/13/24 12:56:36.083
  Sep 13 12:56:36.083: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename secrets @ 09/13/24 12:56:36.084
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:56:36.104
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:56:36.106
  Sep 13 12:56:36.147: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8643" for this suite. @ 09/13/24 12:56:36.15
• [0.073 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:221
  STEP: Creating a kubernetes client @ 09/13/24 12:56:36.156
  Sep 13 12:56:36.156: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename webhook @ 09/13/24 12:56:36.161
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:56:36.185
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:56:36.188
  STEP: Setting up server cert @ 09/13/24 12:56:36.212
  E0913 12:56:36.259271      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/13/24 12:56:36.414
  STEP: Deploying the webhook pod @ 09/13/24 12:56:36.422
  STEP: Wait for the deployment to be ready @ 09/13/24 12:56:36.439
  Sep 13 12:56:36.453: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0913 12:56:37.260038      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:56:38.260393      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/13/24 12:56:38.461
  STEP: Verifying the service has paired with the endpoint @ 09/13/24 12:56:38.476
  E0913 12:56:39.260503      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 12:56:39.476: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Sep 13 12:56:39.482: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 09/13/24 12:56:39.998
  STEP: Creating a custom resource that should be denied by the webhook @ 09/13/24 12:56:40.014
  E0913 12:56:40.260972      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:56:41.261419      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 09/13/24 12:56:42.032
  STEP: Updating the custom resource with disallowed data should be denied @ 09/13/24 12:56:42.039
  STEP: Deleting the custom resource should be denied @ 09/13/24 12:56:42.045
  STEP: Remove the offending key and value from the custom resource data @ 09/13/24 12:56:42.049
  STEP: Deleting the updated custom resource should be successful @ 09/13/24 12:56:42.062
  E0913 12:56:42.262245      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 12:56:42.665: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2619" for this suite. @ 09/13/24 12:56:42.669
  STEP: Destroying namespace "webhook-markers-9448" for this suite. @ 09/13/24 12:56:42.678
• [6.532 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:572
  STEP: Creating a kubernetes client @ 09/13/24 12:56:42.689
  Sep 13 12:56:42.689: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename webhook @ 09/13/24 12:56:42.689
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:56:42.772
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:56:42.774
  STEP: Setting up server cert @ 09/13/24 12:56:42.814
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/13/24 12:56:43.182
  STEP: Deploying the webhook pod @ 09/13/24 12:56:43.187
  STEP: Wait for the deployment to be ready @ 09/13/24 12:56:43.214
  Sep 13 12:56:43.221: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0913 12:56:43.262727      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:56:44.263193      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/13/24 12:56:45.233
  STEP: Verifying the service has paired with the endpoint @ 09/13/24 12:56:45.245
  E0913 12:56:45.263934      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 12:56:46.246: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  E0913 12:56:46.264638      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Listing all of the created validation webhooks @ 09/13/24 12:56:46.429
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/13/24 12:56:46.454
  STEP: Deleting the collection of validation webhooks @ 09/13/24 12:56:46.473
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/13/24 12:56:46.518
  Sep 13 12:56:46.584: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1306" for this suite. @ 09/13/24 12:56:46.596
  STEP: Destroying namespace "webhook-markers-9021" for this suite. @ 09/13/24 12:56:46.607
• [3.923 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 09/13/24 12:56:46.613
  Sep 13 12:56:46.613: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename init-container @ 09/13/24 12:56:46.614
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:56:46.637
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:56:46.639
  STEP: creating the pod @ 09/13/24 12:56:46.641
  Sep 13 12:56:46.642: INFO: PodSpec: initContainers in spec.initContainers
  E0913 12:56:47.264920      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:56:48.265711      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:56:49.266038      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 12:56:49.913: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-7720" for this suite. @ 09/13/24 12:56:49.917
• [3.308 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should support RuntimeClasses API operations [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:191
  STEP: Creating a kubernetes client @ 09/13/24 12:56:49.923
  Sep 13 12:56:49.923: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename runtimeclass @ 09/13/24 12:56:49.924
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:56:49.933
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:56:49.935
  STEP: getting /apis @ 09/13/24 12:56:49.938
  STEP: getting /apis/node.k8s.io @ 09/13/24 12:56:49.943
  STEP: getting /apis/node.k8s.io/v1 @ 09/13/24 12:56:49.944
  STEP: creating @ 09/13/24 12:56:49.945
  STEP: watching @ 09/13/24 12:56:49.964
  Sep 13 12:56:49.964: INFO: starting watch
  STEP: getting @ 09/13/24 12:56:49.974
  STEP: listing @ 09/13/24 12:56:49.976
  STEP: patching @ 09/13/24 12:56:49.978
  STEP: updating @ 09/13/24 12:56:49.983
  Sep 13 12:56:49.988: INFO: waiting for watch events with expected annotations
  STEP: deleting @ 09/13/24 12:56:49.988
  STEP: deleting a collection @ 09/13/24 12:56:49.995
  Sep 13 12:56:50.004: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-8305" for this suite. @ 09/13/24 12:56:50.007
• [0.089 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:237
  STEP: Creating a kubernetes client @ 09/13/24 12:56:50.013
  Sep 13 12:56:50.013: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename projected @ 09/13/24 12:56:50.015
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:56:50.028
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:56:50.031
  STEP: Creating a pod to test downward API volume plugin @ 09/13/24 12:56:50.034
  E0913 12:56:50.266644      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:56:51.266655      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:56:52.267271      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:56:53.267835      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/13/24 12:56:54.049
  Sep 13 12:56:54.051: INFO: Trying to get logs from node cncf-3 pod downwardapi-volume-15512ffa-5b58-447e-b911-f350e32a90d5 container client-container: <nil>
  STEP: delete the pod @ 09/13/24 12:56:54.055
  Sep 13 12:56:54.074: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9741" for this suite. @ 09/13/24 12:56:54.082
• [4.075 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:132
  STEP: Creating a kubernetes client @ 09/13/24 12:56:54.088
  Sep 13 12:56:54.088: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename replicaset @ 09/13/24 12:56:54.089
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:56:54.099
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:56:54.101
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 09/13/24 12:56:54.112
  E0913 12:56:54.268792      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:56:55.269244      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: When a replicaset with a matching selector is created @ 09/13/24 12:56:56.13
  STEP: Then the orphan pod is adopted @ 09/13/24 12:56:56.145
  E0913 12:56:56.269564      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: When the matched label of one of its pods change @ 09/13/24 12:56:57.152
  Sep 13 12:56:57.155: INFO: Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 09/13/24 12:56:57.168
  E0913 12:56:57.270457      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 12:56:58.174: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-3781" for this suite. @ 09/13/24 12:56:58.182
• [4.101 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:329
  STEP: Creating a kubernetes client @ 09/13/24 12:56:58.19
  Sep 13 12:56:58.190: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename dns @ 09/13/24 12:56:58.192
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:56:58.208
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:56:58.21
  STEP: Creating a test externalName service @ 09/13/24 12:56:58.212
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-9332.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-9332.svc.cluster.local; sleep 1; done
   @ 09/13/24 12:56:58.216
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-9332.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-9332.svc.cluster.local; sleep 1; done
   @ 09/13/24 12:56:58.216
  STEP: creating a pod to probe DNS @ 09/13/24 12:56:58.217
  STEP: submitting the pod to kubernetes @ 09/13/24 12:56:58.217
  E0913 12:56:58.271374      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:56:59.272091      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/13/24 12:57:00.237
  STEP: looking for the results for each expected name from probers @ 09/13/24 12:57:00.239
  Sep 13 12:57:00.244: INFO: DNS probes using dns-test-98e37935-69e8-4661-99bf-d9d9ac08d7ce succeeded

  STEP: changing the externalName to bar.example.com @ 09/13/24 12:57:00.244
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-9332.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-9332.svc.cluster.local; sleep 1; done
   @ 09/13/24 12:57:00.267
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-9332.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-9332.svc.cluster.local; sleep 1; done
   @ 09/13/24 12:57:00.267
  STEP: creating a second pod to probe DNS @ 09/13/24 12:57:00.267
  STEP: submitting the pod to kubernetes @ 09/13/24 12:57:00.267
  E0913 12:57:00.272715      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:57:01.273045      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:57:02.273357      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/13/24 12:57:02.293
  STEP: looking for the results for each expected name from probers @ 09/13/24 12:57:02.295
  Sep 13 12:57:02.298: INFO: File wheezy_udp@dns-test-service-3.dns-9332.svc.cluster.local from pod  dns-9332/dns-test-1597c7e5-e714-484b-827d-76ca5b420cc5 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Sep 13 12:57:02.301: INFO: File jessie_udp@dns-test-service-3.dns-9332.svc.cluster.local from pod  dns-9332/dns-test-1597c7e5-e714-484b-827d-76ca5b420cc5 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Sep 13 12:57:02.301: INFO: Lookups using dns-9332/dns-test-1597c7e5-e714-484b-827d-76ca5b420cc5 failed for: [wheezy_udp@dns-test-service-3.dns-9332.svc.cluster.local jessie_udp@dns-test-service-3.dns-9332.svc.cluster.local]

  Sep 13 12:57:02.305: INFO: Pod client logs for webserver: 
  Sep 13 12:57:02.308: INFO: Pod client logs for querier: 
  Sep 13 12:57:02.312: INFO: Pod client logs for jessie-querier: 
  E0913 12:57:03.273520      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:57:04.273920      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:57:05.273772      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:57:06.273928      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:57:07.274673      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 12:57:07.302: INFO: DNS probes using dns-test-1597c7e5-e714-484b-827d-76ca5b420cc5 succeeded

  STEP: changing the service to type=ClusterIP @ 09/13/24 12:57:07.302
  W0913 12:57:07.331911      23 warnings.go:70] spec.externalName is ignored when spec.type is not "ExternalName"
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-9332.svc.cluster.local A > /results/wheezy_udp@dns-test-service-3.dns-9332.svc.cluster.local; sleep 1; done
   @ 09/13/24 12:57:07.332
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-9332.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-9332.svc.cluster.local; sleep 1; done
   @ 09/13/24 12:57:07.332
  STEP: creating a third pod to probe DNS @ 09/13/24 12:57:07.332
  STEP: submitting the pod to kubernetes @ 09/13/24 12:57:07.334
  E0913 12:57:08.274598      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:57:09.275115      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/13/24 12:57:09.353
  STEP: looking for the results for each expected name from probers @ 09/13/24 12:57:09.357
  Sep 13 12:57:09.364: INFO: DNS probes using dns-test-7f15202f-761a-4244-b55b-4d2e9fc34938 succeeded

  STEP: deleting the pod @ 09/13/24 12:57:09.364
  STEP: deleting the pod @ 09/13/24 12:57:09.379
  STEP: deleting the pod @ 09/13/24 12:57:09.395
  STEP: deleting the test externalName service @ 09/13/24 12:57:09.407
  Sep 13 12:57:09.424: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-9332" for this suite. @ 09/13/24 12:57:09.436
• [11.251 seconds]
------------------------------
SSSSS
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:58
  STEP: Creating a kubernetes client @ 09/13/24 12:57:09.442
  Sep 13 12:57:09.442: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename events @ 09/13/24 12:57:09.443
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:57:09.457
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:57:09.459
  STEP: creating a test event @ 09/13/24 12:57:09.463
  STEP: listing all events in all namespaces @ 09/13/24 12:57:09.473
  STEP: patching the test event @ 09/13/24 12:57:09.483
  STEP: fetching the test event @ 09/13/24 12:57:09.49
  STEP: updating the test event @ 09/13/24 12:57:09.497
  STEP: getting the test event @ 09/13/24 12:57:09.511
  STEP: deleting the test event @ 09/13/24 12:57:09.512
  STEP: listing all events in all namespaces @ 09/13/24 12:57:09.528
  Sep 13 12:57:09.538: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-8947" for this suite. @ 09/13/24 12:57:09.541
• [0.105 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:153
  STEP: Creating a kubernetes client @ 09/13/24 12:57:09.554
  Sep 13 12:57:09.554: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/13/24 12:57:09.556
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:57:09.574
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:57:09.576
  Sep 13 12:57:09.578: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  E0913 12:57:10.275596      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 09/13/24 12:57:11.255
  Sep 13 12:57:11.255: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=crd-publish-openapi-7277 --namespace=crd-publish-openapi-7277 create -f -'
  E0913 12:57:11.275676      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 12:57:11.360: INFO: stderr: ""
  Sep 13 12:57:11.360: INFO: stdout: "e2e-test-crd-publish-openapi-5107-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  Sep 13 12:57:11.360: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=crd-publish-openapi-7277 --namespace=crd-publish-openapi-7277 delete e2e-test-crd-publish-openapi-5107-crds test-cr'
  Sep 13 12:57:11.419: INFO: stderr: ""
  Sep 13 12:57:11.419: INFO: stdout: "e2e-test-crd-publish-openapi-5107-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  Sep 13 12:57:11.419: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=crd-publish-openapi-7277 --namespace=crd-publish-openapi-7277 apply -f -'
  Sep 13 12:57:11.485: INFO: stderr: ""
  Sep 13 12:57:11.485: INFO: stdout: "e2e-test-crd-publish-openapi-5107-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  Sep 13 12:57:11.485: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=crd-publish-openapi-7277 --namespace=crd-publish-openapi-7277 delete e2e-test-crd-publish-openapi-5107-crds test-cr'
  Sep 13 12:57:11.545: INFO: stderr: ""
  Sep 13 12:57:11.545: INFO: stdout: "e2e-test-crd-publish-openapi-5107-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 09/13/24 12:57:11.545
  Sep 13 12:57:11.546: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=crd-publish-openapi-7277 explain e2e-test-crd-publish-openapi-5107-crds'
  Sep 13 12:57:11.599: INFO: stderr: ""
  Sep 13 12:57:11.599: INFO: stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-5107-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  E0913 12:57:12.276013      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 12:57:13.230: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-7277" for this suite. @ 09/13/24 12:57:13.237
• [3.692 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/logs.go:114
  STEP: Creating a kubernetes client @ 09/13/24 12:57:13.247
  Sep 13 12:57:13.247: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename kubectl-logs @ 09/13/24 12:57:13.249
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:57:13.271
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:57:13.273
  E0913 12:57:13.276067      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: creating an pod @ 09/13/24 12:57:13.276
  Sep 13 12:57:13.276: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=kubectl-logs-2926 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.47 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  Sep 13 12:57:13.346: INFO: stderr: ""
  Sep 13 12:57:13.346: INFO: stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 09/13/24 12:57:13.346
  Sep 13 12:57:13.346: INFO: Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  E0913 12:57:14.276887      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:57:15.277290      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 12:57:15.360: INFO: Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 09/13/24 12:57:15.36
  Sep 13 12:57:15.360: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=kubectl-logs-2926 logs logs-generator logs-generator'
  Sep 13 12:57:15.430: INFO: stderr: ""
  Sep 13 12:57:15.430: INFO: stdout: "I0913 12:57:14.072161       1 logs_generator.go:76] 0 POST /api/v1/namespaces/ns/pods/4xf 272\nI0913 12:57:14.272370       1 logs_generator.go:76] 1 PUT /api/v1/namespaces/ns/pods/vrx4 318\nI0913 12:57:14.472797       1 logs_generator.go:76] 2 PUT /api/v1/namespaces/ns/pods/fpps 225\nI0913 12:57:14.673190       1 logs_generator.go:76] 3 GET /api/v1/namespaces/default/pods/78h 455\nI0913 12:57:14.872349       1 logs_generator.go:76] 4 POST /api/v1/namespaces/default/pods/2nx 355\nI0913 12:57:15.072703       1 logs_generator.go:76] 5 PUT /api/v1/namespaces/default/pods/grvl 565\nI0913 12:57:15.273058       1 logs_generator.go:76] 6 POST /api/v1/namespaces/default/pods/vxjn 254\n"
  E0913 12:57:16.277844      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:57:17.278228      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 12:57:17.431: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=kubectl-logs-2926 logs logs-generator logs-generator'
  Sep 13 12:57:17.515: INFO: stderr: ""
  Sep 13 12:57:17.515: INFO: stdout: "I0913 12:57:14.072161       1 logs_generator.go:76] 0 POST /api/v1/namespaces/ns/pods/4xf 272\nI0913 12:57:14.272370       1 logs_generator.go:76] 1 PUT /api/v1/namespaces/ns/pods/vrx4 318\nI0913 12:57:14.472797       1 logs_generator.go:76] 2 PUT /api/v1/namespaces/ns/pods/fpps 225\nI0913 12:57:14.673190       1 logs_generator.go:76] 3 GET /api/v1/namespaces/default/pods/78h 455\nI0913 12:57:14.872349       1 logs_generator.go:76] 4 POST /api/v1/namespaces/default/pods/2nx 355\nI0913 12:57:15.072703       1 logs_generator.go:76] 5 PUT /api/v1/namespaces/default/pods/grvl 565\nI0913 12:57:15.273058       1 logs_generator.go:76] 6 POST /api/v1/namespaces/default/pods/vxjn 254\nI0913 12:57:15.472322       1 logs_generator.go:76] 7 POST /api/v1/namespaces/default/pods/q879 309\nI0913 12:57:15.672790       1 logs_generator.go:76] 8 GET /api/v1/namespaces/kube-system/pods/5jl 415\nI0913 12:57:15.872938       1 logs_generator.go:76] 9 POST /api/v1/namespaces/default/pods/w8f 393\nI0913 12:57:16.072219       1 logs_generator.go:76] 10 PUT /api/v1/namespaces/ns/pods/gc8g 246\nI0913 12:57:16.272656       1 logs_generator.go:76] 11 PUT /api/v1/namespaces/default/pods/hqq 295\nI0913 12:57:16.473010       1 logs_generator.go:76] 12 POST /api/v1/namespaces/kube-system/pods/g6f5 245\nI0913 12:57:16.672278       1 logs_generator.go:76] 13 POST /api/v1/namespaces/default/pods/nf94 358\nI0913 12:57:16.872666       1 logs_generator.go:76] 14 POST /api/v1/namespaces/default/pods/48k 414\nI0913 12:57:17.072780       1 logs_generator.go:76] 15 PUT /api/v1/namespaces/default/pods/xl2t 330\nI0913 12:57:17.273124       1 logs_generator.go:76] 16 POST /api/v1/namespaces/default/pods/tx59 536\nI0913 12:57:17.472266       1 logs_generator.go:76] 17 PUT /api/v1/namespaces/kube-system/pods/khsq 409\n"
  STEP: limiting log lines @ 09/13/24 12:57:17.515
  Sep 13 12:57:17.515: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=kubectl-logs-2926 logs logs-generator logs-generator --tail=1'
  Sep 13 12:57:17.582: INFO: stderr: ""
  Sep 13 12:57:17.582: INFO: stdout: "I0913 12:57:17.472266       1 logs_generator.go:76] 17 PUT /api/v1/namespaces/kube-system/pods/khsq 409\n"
  Sep 13 12:57:17.582: INFO: got output "I0913 12:57:17.472266       1 logs_generator.go:76] 17 PUT /api/v1/namespaces/kube-system/pods/khsq 409\n"
  STEP: limiting log bytes @ 09/13/24 12:57:17.582
  Sep 13 12:57:17.582: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=kubectl-logs-2926 logs logs-generator logs-generator --limit-bytes=1'
  Sep 13 12:57:17.640: INFO: stderr: ""
  Sep 13 12:57:17.640: INFO: stdout: "I"
  Sep 13 12:57:17.640: INFO: got output "I"
  STEP: exposing timestamps @ 09/13/24 12:57:17.64
  Sep 13 12:57:17.640: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=kubectl-logs-2926 logs logs-generator logs-generator --tail=1 --timestamps'
  Sep 13 12:57:17.694: INFO: stderr: ""
  Sep 13 12:57:17.694: INFO: stdout: "2024-09-13T21:57:17.672769475+09:00 I0913 12:57:17.672628       1 logs_generator.go:76] 18 PUT /api/v1/namespaces/default/pods/tgpl 206\n"
  Sep 13 12:57:17.694: INFO: got output "2024-09-13T21:57:17.672769475+09:00 I0913 12:57:17.672628       1 logs_generator.go:76] 18 PUT /api/v1/namespaces/default/pods/tgpl 206\n"
  STEP: restricting to a time range @ 09/13/24 12:57:17.694
  E0913 12:57:18.279185      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:57:19.279440      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 12:57:20.194: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=kubectl-logs-2926 logs logs-generator logs-generator --since=1s'
  E0913 12:57:20.280417      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 12:57:20.281: INFO: stderr: ""
  Sep 13 12:57:20.281: INFO: stdout: "I0913 12:57:19.473019       1 logs_generator.go:76] 27 POST /api/v1/namespaces/ns/pods/p28g 354\nI0913 12:57:19.672343       1 logs_generator.go:76] 28 GET /api/v1/namespaces/ns/pods/wf9 261\nI0913 12:57:19.872633       1 logs_generator.go:76] 29 PUT /api/v1/namespaces/ns/pods/7vp 274\nI0913 12:57:20.072973       1 logs_generator.go:76] 30 GET /api/v1/namespaces/ns/pods/9dr 432\nI0913 12:57:20.273252       1 logs_generator.go:76] 31 PUT /api/v1/namespaces/default/pods/lspr 491\n"
  Sep 13 12:57:20.281: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=kubectl-logs-2926 logs logs-generator logs-generator --since=24h'
  Sep 13 12:57:20.337: INFO: stderr: ""
  Sep 13 12:57:20.337: INFO: stdout: "I0913 12:57:14.072161       1 logs_generator.go:76] 0 POST /api/v1/namespaces/ns/pods/4xf 272\nI0913 12:57:14.272370       1 logs_generator.go:76] 1 PUT /api/v1/namespaces/ns/pods/vrx4 318\nI0913 12:57:14.472797       1 logs_generator.go:76] 2 PUT /api/v1/namespaces/ns/pods/fpps 225\nI0913 12:57:14.673190       1 logs_generator.go:76] 3 GET /api/v1/namespaces/default/pods/78h 455\nI0913 12:57:14.872349       1 logs_generator.go:76] 4 POST /api/v1/namespaces/default/pods/2nx 355\nI0913 12:57:15.072703       1 logs_generator.go:76] 5 PUT /api/v1/namespaces/default/pods/grvl 565\nI0913 12:57:15.273058       1 logs_generator.go:76] 6 POST /api/v1/namespaces/default/pods/vxjn 254\nI0913 12:57:15.472322       1 logs_generator.go:76] 7 POST /api/v1/namespaces/default/pods/q879 309\nI0913 12:57:15.672790       1 logs_generator.go:76] 8 GET /api/v1/namespaces/kube-system/pods/5jl 415\nI0913 12:57:15.872938       1 logs_generator.go:76] 9 POST /api/v1/namespaces/default/pods/w8f 393\nI0913 12:57:16.072219       1 logs_generator.go:76] 10 PUT /api/v1/namespaces/ns/pods/gc8g 246\nI0913 12:57:16.272656       1 logs_generator.go:76] 11 PUT /api/v1/namespaces/default/pods/hqq 295\nI0913 12:57:16.473010       1 logs_generator.go:76] 12 POST /api/v1/namespaces/kube-system/pods/g6f5 245\nI0913 12:57:16.672278       1 logs_generator.go:76] 13 POST /api/v1/namespaces/default/pods/nf94 358\nI0913 12:57:16.872666       1 logs_generator.go:76] 14 POST /api/v1/namespaces/default/pods/48k 414\nI0913 12:57:17.072780       1 logs_generator.go:76] 15 PUT /api/v1/namespaces/default/pods/xl2t 330\nI0913 12:57:17.273124       1 logs_generator.go:76] 16 POST /api/v1/namespaces/default/pods/tx59 536\nI0913 12:57:17.472266       1 logs_generator.go:76] 17 PUT /api/v1/namespaces/kube-system/pods/khsq 409\nI0913 12:57:17.672628       1 logs_generator.go:76] 18 PUT /api/v1/namespaces/default/pods/tgpl 206\nI0913 12:57:17.873258       1 logs_generator.go:76] 19 POST /api/v1/namespaces/default/pods/qjt 590\nI0913 12:57:18.072639       1 logs_generator.go:76] 20 GET /api/v1/namespaces/ns/pods/sbj7 260\nI0913 12:57:18.273025       1 logs_generator.go:76] 21 POST /api/v1/namespaces/ns/pods/qxm 200\nI0913 12:57:18.472334       1 logs_generator.go:76] 22 PUT /api/v1/namespaces/ns/pods/dpvh 243\nI0913 12:57:18.672673       1 logs_generator.go:76] 23 POST /api/v1/namespaces/default/pods/4gr2 351\nI0913 12:57:18.872984       1 logs_generator.go:76] 24 GET /api/v1/namespaces/kube-system/pods/rx88 378\nI0913 12:57:19.072301       1 logs_generator.go:76] 25 PUT /api/v1/namespaces/default/pods/65kh 458\nI0913 12:57:19.272655       1 logs_generator.go:76] 26 POST /api/v1/namespaces/kube-system/pods/4kr5 353\nI0913 12:57:19.473019       1 logs_generator.go:76] 27 POST /api/v1/namespaces/ns/pods/p28g 354\nI0913 12:57:19.672343       1 logs_generator.go:76] 28 GET /api/v1/namespaces/ns/pods/wf9 261\nI0913 12:57:19.872633       1 logs_generator.go:76] 29 PUT /api/v1/namespaces/ns/pods/7vp 274\nI0913 12:57:20.072973       1 logs_generator.go:76] 30 GET /api/v1/namespaces/ns/pods/9dr 432\nI0913 12:57:20.273252       1 logs_generator.go:76] 31 PUT /api/v1/namespaces/default/pods/lspr 491\n"
  Sep 13 12:57:20.337: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=kubectl-logs-2926 delete pod logs-generator'
  Sep 13 12:57:21.153: INFO: stderr: ""
  Sep 13 12:57:21.153: INFO: stdout: "pod \"logs-generator\" deleted\n"
  Sep 13 12:57:21.153: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-2926" for this suite. @ 09/13/24 12:57:21.156
• [7.953 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:58
  STEP: Creating a kubernetes client @ 09/13/24 12:57:21.201
  Sep 13 12:57:21.201: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename projected @ 09/13/24 12:57:21.202
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:57:21.228
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:57:21.23
  STEP: Creating configMap with name projected-configmap-test-volume-8090a6f3-2fe1-4714-bd91-d4945f37d8b9 @ 09/13/24 12:57:21.259
  STEP: Creating a pod to test consume configMaps @ 09/13/24 12:57:21.265
  E0913 12:57:21.281236      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:57:22.282397      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:57:23.282932      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:57:24.283198      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:57:25.283416      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/13/24 12:57:25.287
  Sep 13 12:57:25.289: INFO: Trying to get logs from node cncf-3 pod pod-projected-configmaps-17619383-4c1a-4287-a8b5-fd288ca06f57 container agnhost-container: <nil>
  STEP: delete the pod @ 09/13/24 12:57:25.295
  Sep 13 12:57:25.333: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1277" for this suite. @ 09/13/24 12:57:25.337
• [4.141 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:46
  STEP: Creating a kubernetes client @ 09/13/24 12:57:25.342
  Sep 13 12:57:25.342: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename downward-api @ 09/13/24 12:57:25.344
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:57:25.364
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:57:25.366
  STEP: Creating a pod to test downward api env vars @ 09/13/24 12:57:25.369
  E0913 12:57:26.284495      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:57:27.285094      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:57:28.285351      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:57:29.285536      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/13/24 12:57:29.392
  Sep 13 12:57:29.395: INFO: Trying to get logs from node cncf-3 pod downward-api-7c0a0c1c-2d07-4a37-bede-4ac5f55aac4f container dapi-container: <nil>
  STEP: delete the pod @ 09/13/24 12:57:29.401
  Sep 13 12:57:29.421: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6025" for this suite. @ 09/13/24 12:57:29.425
• [4.089 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 09/13/24 12:57:29.433
  Sep 13 12:57:29.433: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename secrets @ 09/13/24 12:57:29.434
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:57:29.458
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:57:29.461
  STEP: Creating secret with name secret-test-f6c05358-31ab-4cfd-b04d-662cbb922505 @ 09/13/24 12:57:29.465
  STEP: Creating a pod to test consume secrets @ 09/13/24 12:57:29.473
  E0913 12:57:30.285530      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:57:31.285655      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:57:32.285983      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:57:33.286440      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/13/24 12:57:33.497
  Sep 13 12:57:33.505: INFO: Trying to get logs from node cncf-3 pod pod-secrets-b7867f21-eb15-4ba9-89ea-960cbcc3e2e0 container secret-volume-test: <nil>
  STEP: delete the pod @ 09/13/24 12:57:33.512
  Sep 13 12:57:33.536: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4211" for this suite. @ 09/13/24 12:57:33.539
• [4.116 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:176
  STEP: Creating a kubernetes client @ 09/13/24 12:57:33.55
  Sep 13 12:57:33.550: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename events @ 09/13/24 12:57:33.552
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:57:33.568
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:57:33.57
  STEP: Create set of events @ 09/13/24 12:57:33.573
  Sep 13 12:57:33.576: INFO: created test-event-1
  Sep 13 12:57:33.580: INFO: created test-event-2
  Sep 13 12:57:33.590: INFO: created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 09/13/24 12:57:33.59
  STEP: delete collection of events @ 09/13/24 12:57:33.592
  Sep 13 12:57:33.592: INFO: requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 09/13/24 12:57:33.61
  Sep 13 12:57:33.610: INFO: requesting list of events to confirm quantity
  Sep 13 12:57:33.613: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-9021" for this suite. @ 09/13/24 12:57:33.617
• [0.081 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:64
  STEP: Creating a kubernetes client @ 09/13/24 12:57:33.633
  Sep 13 12:57:33.633: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename field-validation @ 09/13/24 12:57:33.635
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:57:33.649
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:57:33.652
  STEP: apply creating a deployment @ 09/13/24 12:57:33.654
  Sep 13 12:57:33.661: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-8338" for this suite. @ 09/13/24 12:57:33.664
• [0.036 seconds]
------------------------------
SS
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 09/13/24 12:57:33.669
  Sep 13 12:57:33.669: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename daemonsets @ 09/13/24 12:57:33.67
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:57:33.691
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:57:33.692
  Sep 13 12:57:33.710: INFO: Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/13/24 12:57:33.716
  Sep 13 12:57:33.720: INFO: DaemonSet pods can't tolerate node cncf-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep 13 12:57:33.727: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 13 12:57:33.727: INFO: Node cncf-2 is running 0 daemon pod, expected 1
  E0913 12:57:34.287413      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 12:57:34.721: INFO: DaemonSet pods can't tolerate node cncf-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep 13 12:57:34.723: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 13 12:57:34.723: INFO: Node cncf-2 is running 0 daemon pod, expected 1
  E0913 12:57:35.287973      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 12:57:35.726: INFO: DaemonSet pods can't tolerate node cncf-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep 13 12:57:35.728: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 4
  Sep 13 12:57:35.728: INFO: Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
  STEP: Update daemon pods image. @ 09/13/24 12:57:35.737
  STEP: Check that daemon pods images are updated. @ 09/13/24 12:57:35.751
  Sep 13 12:57:35.756: INFO: Wrong image for pod: daemon-set-2c2gs. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Sep 13 12:57:35.756: INFO: Wrong image for pod: daemon-set-2ssxs. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Sep 13 12:57:35.756: INFO: Wrong image for pod: daemon-set-g94gr. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Sep 13 12:57:35.756: INFO: Wrong image for pod: daemon-set-tg6vh. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Sep 13 12:57:35.765: INFO: DaemonSet pods can't tolerate node cncf-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0913 12:57:36.287969      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 12:57:36.757: INFO: Wrong image for pod: daemon-set-2ssxs. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Sep 13 12:57:36.757: INFO: Pod daemon-set-dm5f5 is not available
  Sep 13 12:57:36.757: INFO: Wrong image for pod: daemon-set-g94gr. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Sep 13 12:57:36.757: INFO: Wrong image for pod: daemon-set-tg6vh. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Sep 13 12:57:36.760: INFO: DaemonSet pods can't tolerate node cncf-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0913 12:57:37.288182      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 12:57:37.756: INFO: Wrong image for pod: daemon-set-2ssxs. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Sep 13 12:57:37.757: INFO: Pod daemon-set-dm5f5 is not available
  Sep 13 12:57:37.757: INFO: Wrong image for pod: daemon-set-g94gr. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Sep 13 12:57:37.757: INFO: Wrong image for pod: daemon-set-tg6vh. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Sep 13 12:57:37.760: INFO: DaemonSet pods can't tolerate node cncf-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0913 12:57:38.289003      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 12:57:38.759: INFO: Pod daemon-set-7njwr is not available
  Sep 13 12:57:38.759: INFO: Wrong image for pod: daemon-set-g94gr. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Sep 13 12:57:38.759: INFO: Wrong image for pod: daemon-set-tg6vh. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Sep 13 12:57:38.765: INFO: DaemonSet pods can't tolerate node cncf-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0913 12:57:39.289120      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 12:57:39.756: INFO: Wrong image for pod: daemon-set-g94gr. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Sep 13 12:57:39.758: INFO: DaemonSet pods can't tolerate node cncf-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0913 12:57:40.289278      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 12:57:40.756: INFO: Pod daemon-set-56vl6 is not available
  Sep 13 12:57:40.756: INFO: Wrong image for pod: daemon-set-g94gr. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Sep 13 12:57:40.760: INFO: DaemonSet pods can't tolerate node cncf-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0913 12:57:41.289542      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 12:57:41.760: INFO: DaemonSet pods can't tolerate node cncf-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E0913 12:57:42.290188      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 12:57:42.757: INFO: Pod daemon-set-vzt8q is not available
  Sep 13 12:57:42.760: INFO: DaemonSet pods can't tolerate node cncf-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Check that daemon pods are still running on every node of the cluster. @ 09/13/24 12:57:42.76
  Sep 13 12:57:42.763: INFO: DaemonSet pods can't tolerate node cncf-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep 13 12:57:42.765: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Sep 13 12:57:42.766: INFO: Node cncf-3 is running 0 daemon pod, expected 1
  E0913 12:57:43.291025      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 12:57:43.766: INFO: DaemonSet pods can't tolerate node cncf-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep 13 12:57:43.768: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 4
  Sep 13 12:57:43.768: INFO: Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 09/13/24 12:57:43.776
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-6845, will wait for the garbage collector to delete the pods @ 09/13/24 12:57:43.776
  Sep 13 12:57:43.845: INFO: Deleting DaemonSet.extensions daemon-set took: 16.601168ms
  Sep 13 12:57:43.946: INFO: Terminating DaemonSet.extensions daemon-set pods took: 101.302887ms
  E0913 12:57:44.291613      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 12:57:45.250: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 13 12:57:45.250: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Sep 13 12:57:45.252: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"723521"},"items":null}

  Sep 13 12:57:45.254: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"723521"},"items":null}

  Sep 13 12:57:45.268: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-6845" for this suite. @ 09/13/24 12:57:45.272
• [11.608 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:108
  STEP: Creating a kubernetes client @ 09/13/24 12:57:45.279
  Sep 13 12:57:45.279: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename pod-network-test @ 09/13/24 12:57:45.28
  E0913 12:57:45.291877      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:57:45.3
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:57:45.303
  STEP: Performing setup for networking test in namespace pod-network-test-2237 @ 09/13/24 12:57:45.305
  STEP: creating a selector @ 09/13/24 12:57:45.305
  STEP: Creating the service pods in kubernetes @ 09/13/24 12:57:45.305
  Sep 13 12:57:45.305: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0913 12:57:46.292075      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:57:47.292349      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:57:48.293020      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:57:49.293952      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:57:50.294420      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:57:51.294578      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:57:52.295297      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:57:53.295757      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:57:54.296443      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:57:55.296937      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:57:56.297467      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:57:57.298447      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:57:58.298770      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:57:59.298902      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:58:00.299786      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:58:01.299869      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:58:02.300992      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:58:03.301241      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:58:04.301326      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:58:05.301632      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:58:06.301653      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:58:07.302685      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 09/13/24 12:58:07.504
  E0913 12:58:08.303242      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:58:09.303584      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 12:58:09.538: INFO: Setting MaxTries for pod polling to 46 for networking test based on endpoint count 4
  Sep 13 12:58:09.538: INFO: Going to poll 10.0.4.96 on port 8083 at least 0 times, with a maximum of 46 tries before failing
  Sep 13 12:58:09.540: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.0.4.96:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-2237 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 13 12:58:09.540: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  Sep 13 12:58:09.541: INFO: ExecWithOptions: Clientset creation
  Sep 13 12:58:09.541: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-2237/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.0.4.96%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Sep 13 12:58:09.582: INFO: Found all 1 expected endpoints: [netserver-0]
  Sep 13 12:58:09.582: INFO: Going to poll 10.0.1.10 on port 8083 at least 0 times, with a maximum of 46 tries before failing
  Sep 13 12:58:09.584: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.0.1.10:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-2237 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 13 12:58:09.585: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  Sep 13 12:58:09.585: INFO: ExecWithOptions: Clientset creation
  Sep 13 12:58:09.585: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-2237/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.0.1.10%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Sep 13 12:58:09.624: INFO: Found all 1 expected endpoints: [netserver-1]
  Sep 13 12:58:09.624: INFO: Going to poll 10.0.3.19 on port 8083 at least 0 times, with a maximum of 46 tries before failing
  Sep 13 12:58:09.627: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.0.3.19:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-2237 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 13 12:58:09.627: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  Sep 13 12:58:09.628: INFO: ExecWithOptions: Clientset creation
  Sep 13 12:58:09.628: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-2237/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.0.3.19%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Sep 13 12:58:09.672: INFO: Found all 1 expected endpoints: [netserver-2]
  Sep 13 12:58:09.672: INFO: Going to poll 10.0.0.58 on port 8083 at least 0 times, with a maximum of 46 tries before failing
  Sep 13 12:58:09.675: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.0.0.58:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-2237 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 13 12:58:09.675: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  Sep 13 12:58:09.677: INFO: ExecWithOptions: Clientset creation
  Sep 13 12:58:09.677: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-2237/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.0.0.58%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Sep 13 12:58:09.712: INFO: Found all 1 expected endpoints: [netserver-3]
  Sep 13 12:58:09.712: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-2237" for this suite. @ 09/13/24 12:58:09.716
• [24.443 seconds]
------------------------------
SS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:321
  STEP: Creating a kubernetes client @ 09/13/24 12:58:09.722
  Sep 13 12:58:09.722: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename statefulset @ 09/13/24 12:58:09.724
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:58:09.749
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:58:09.752
  STEP: Creating service test in namespace statefulset-273 @ 09/13/24 12:58:09.755
  STEP: Creating a new StatefulSet @ 09/13/24 12:58:09.761
  Sep 13 12:58:09.782: INFO: Found 0 stateful pods, waiting for 3
  E0913 12:58:10.304013      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:58:11.304065      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:58:12.304515      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:58:13.304915      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:58:14.305442      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:58:15.305963      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:58:16.306541      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:58:17.306674      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:58:18.306787      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:58:19.307024      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 12:58:19.783: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Sep 13 12:58:19.783: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Sep 13 12:58:19.783: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  Sep 13 12:58:19.789: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=statefulset-273 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Sep 13 12:58:19.891: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Sep 13 12:58:19.891: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Sep 13 12:58:19.891: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E0913 12:58:20.307077      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:58:21.307196      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:58:22.308012      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:58:23.308949      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:58:24.309302      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:58:25.309631      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:58:26.310584      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:58:27.311242      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:58:28.311860      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:58:29.312163      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 09/13/24 12:58:29.898
  Sep 13 12:58:29.967: INFO: Updating stateful set ss2
  STEP: Creating a new revision @ 09/13/24 12:58:29.968
  E0913 12:58:30.313068      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:58:31.313265      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:58:32.313908      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:58:33.314085      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:58:34.314178      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:58:35.314850      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:58:36.315078      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:58:37.315313      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:58:38.315572      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:58:39.315812      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating Pods in reverse ordinal order @ 09/13/24 12:58:39.974
  Sep 13 12:58:39.976: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=statefulset-273 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Sep 13 12:58:40.112: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Sep 13 12:58:40.112: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Sep 13 12:58:40.112: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E0913 12:58:40.316656      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:58:41.316997      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:58:42.321352      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:58:43.321468      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:58:44.321594      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:58:45.321865      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:58:46.322093      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:58:47.322792      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:58:48.322922      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:58:49.323052      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Rolling back to a previous revision @ 09/13/24 12:58:50.122
  Sep 13 12:58:50.122: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=statefulset-273 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Sep 13 12:58:50.255: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Sep 13 12:58:50.255: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Sep 13 12:58:50.255: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E0913 12:58:50.323152      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:58:51.323369      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:58:52.324393      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:58:53.325366      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:58:54.326367      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:58:55.326590      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:58:56.326774      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:58:57.327416      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:58:58.328376      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:58:59.328668      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 12:59:00.281: INFO: Updating stateful set ss2
  E0913 12:59:00.329238      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:59:01.329530      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:59:02.330135      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:59:03.330743      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:59:04.331008      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:59:05.331108      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:59:06.331412      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:59:07.332054      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:59:08.332922      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:59:09.333855      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Rolling back update in reverse ordinal order @ 09/13/24 12:59:10.291
  Sep 13 12:59:10.293: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=statefulset-273 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  E0913 12:59:10.334542      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 12:59:10.401: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Sep 13 12:59:10.401: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Sep 13 12:59:10.401: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Sep 13 12:59:10.430: INFO: Waiting for StatefulSet statefulset-273/ss2 to complete update
  Sep 13 12:59:10.430: INFO: Waiting for Pod statefulset-273/ss2-0 to have revision ss2-7b6c9599d5 update revision ss2-5459d8585b
  Sep 13 12:59:10.430: INFO: Waiting for Pod statefulset-273/ss2-1 to have revision ss2-7b6c9599d5 update revision ss2-5459d8585b
  Sep 13 12:59:10.430: INFO: Waiting for Pod statefulset-273/ss2-2 to have revision ss2-7b6c9599d5 update revision ss2-5459d8585b
  E0913 12:59:11.335319      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:59:12.336166      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:59:13.336935      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:59:14.337185      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:59:15.338022      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:59:16.338382      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:59:17.339393      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:59:18.339613      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:59:19.339863      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:59:20.340071      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 12:59:20.423: INFO: Deleting all statefulset in ns statefulset-273
  Sep 13 12:59:20.425: INFO: Scaling statefulset ss2 to 0
  E0913 12:59:21.340152      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:59:22.341011      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:59:23.341350      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:59:24.341449      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:59:25.341766      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:59:26.342057      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:59:27.342608      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:59:28.342869      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:59:29.343145      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:59:30.343314      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 12:59:30.440: INFO: Waiting for statefulset status.replicas updated to 0
  Sep 13 12:59:30.442: INFO: Deleting statefulset ss2
  Sep 13 12:59:30.454: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-273" for this suite. @ 09/13/24 12:59:30.458
• [80.756 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] Service endpoints latency should not be very high [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 09/13/24 12:59:30.478
  Sep 13 12:59:30.478: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename svc-latency @ 09/13/24 12:59:30.479
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:59:30.501
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:59:30.503
  Sep 13 12:59:30.505: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: creating replication controller svc-latency-rc in namespace svc-latency-6371 @ 09/13/24 12:59:30.506
  I0913 12:59:30.512590      23 runners.go:197] Created replication controller with name: svc-latency-rc, namespace: svc-latency-6371, replica count: 1
  E0913 12:59:31.343555      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0913 12:59:31.563852      23 runners.go:197] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Sep 13 12:59:31.684: INFO: Created: latency-svc-8krrd
  Sep 13 12:59:31.690: INFO: Got endpoints: latency-svc-8krrd [26.074449ms]
  Sep 13 12:59:31.717: INFO: Created: latency-svc-n2g7w
  Sep 13 12:59:31.725: INFO: Got endpoints: latency-svc-n2g7w [34.513598ms]
  Sep 13 12:59:31.726: INFO: Created: latency-svc-zlhvr
  Sep 13 12:59:31.734: INFO: Got endpoints: latency-svc-zlhvr [43.797963ms]
  Sep 13 12:59:31.739: INFO: Created: latency-svc-mkccl
  Sep 13 12:59:31.748: INFO: Got endpoints: latency-svc-mkccl [57.356886ms]
  Sep 13 12:59:31.748: INFO: Created: latency-svc-kq5dm
  Sep 13 12:59:31.751: INFO: Created: latency-svc-47pq5
  Sep 13 12:59:31.759: INFO: Got endpoints: latency-svc-kq5dm [68.81324ms]
  Sep 13 12:59:31.763: INFO: Got endpoints: latency-svc-47pq5 [72.579765ms]
  Sep 13 12:59:31.763: INFO: Created: latency-svc-8lkcc
  Sep 13 12:59:31.773: INFO: Got endpoints: latency-svc-8lkcc [82.909648ms]
  Sep 13 12:59:31.779: INFO: Created: latency-svc-6874x
  Sep 13 12:59:31.788: INFO: Created: latency-svc-s8qcj
  Sep 13 12:59:31.789: INFO: Got endpoints: latency-svc-6874x [98.578952ms]
  Sep 13 12:59:31.795: INFO: Got endpoints: latency-svc-s8qcj [104.576703ms]
  Sep 13 12:59:31.806: INFO: Created: latency-svc-k88mp
  Sep 13 12:59:31.808: INFO: Created: latency-svc-bsprh
  Sep 13 12:59:31.820: INFO: Got endpoints: latency-svc-k88mp [128.964324ms]
  Sep 13 12:59:31.828: INFO: Created: latency-svc-pdmtc
  Sep 13 12:59:31.829: INFO: Got endpoints: latency-svc-bsprh [137.848177ms]
  Sep 13 12:59:31.834: INFO: Created: latency-svc-2rq5j
  Sep 13 12:59:31.836: INFO: Got endpoints: latency-svc-pdmtc [144.828336ms]
  Sep 13 12:59:31.842: INFO: Created: latency-svc-8bgjv
  Sep 13 12:59:31.847: INFO: Got endpoints: latency-svc-2rq5j [156.34079ms]
  Sep 13 12:59:31.851: INFO: Got endpoints: latency-svc-8bgjv [160.411749ms]
  Sep 13 12:59:31.854: INFO: Created: latency-svc-fltj9
  Sep 13 12:59:31.862: INFO: Got endpoints: latency-svc-fltj9 [171.053278ms]
  Sep 13 12:59:31.869: INFO: Created: latency-svc-tx8q8
  Sep 13 12:59:31.890: INFO: Got endpoints: latency-svc-tx8q8 [198.389998ms]
  Sep 13 12:59:31.891: INFO: Created: latency-svc-6f44r
  Sep 13 12:59:31.900: INFO: Got endpoints: latency-svc-6f44r [175.261541ms]
  Sep 13 12:59:31.902: INFO: Created: latency-svc-qgm62
  Sep 13 12:59:31.912: INFO: Got endpoints: latency-svc-qgm62 [177.887579ms]
  Sep 13 12:59:31.915: INFO: Created: latency-svc-4l2jx
  Sep 13 12:59:31.924: INFO: Got endpoints: latency-svc-4l2jx [175.412893ms]
  Sep 13 12:59:31.929: INFO: Created: latency-svc-vlnd5
  Sep 13 12:59:31.933: INFO: Created: latency-svc-r2hf5
  Sep 13 12:59:31.937: INFO: Got endpoints: latency-svc-vlnd5 [178.220751ms]
  Sep 13 12:59:31.942: INFO: Got endpoints: latency-svc-r2hf5 [179.005277ms]
  Sep 13 12:59:31.945: INFO: Created: latency-svc-6q78j
  Sep 13 12:59:31.950: INFO: Got endpoints: latency-svc-6q78j [176.806914ms]
  Sep 13 12:59:31.953: INFO: Created: latency-svc-rb2cr
  Sep 13 12:59:31.963: INFO: Got endpoints: latency-svc-rb2cr [174.145445ms]
  Sep 13 12:59:31.968: INFO: Created: latency-svc-frxkj
  Sep 13 12:59:31.977: INFO: Got endpoints: latency-svc-frxkj [182.192475ms]
  Sep 13 12:59:31.979: INFO: Created: latency-svc-r9bnd
  Sep 13 12:59:31.983: INFO: Got endpoints: latency-svc-r9bnd [162.971979ms]
  Sep 13 12:59:31.990: INFO: Created: latency-svc-n9r6w
  Sep 13 12:59:32.003: INFO: Got endpoints: latency-svc-n9r6w [174.8132ms]
  Sep 13 12:59:32.009: INFO: Created: latency-svc-jnszh
  Sep 13 12:59:32.018: INFO: Got endpoints: latency-svc-jnszh [181.86379ms]
  Sep 13 12:59:32.023: INFO: Created: latency-svc-n9nbw
  Sep 13 12:59:32.034: INFO: Got endpoints: latency-svc-n9nbw [186.453629ms]
  Sep 13 12:59:32.037: INFO: Created: latency-svc-2vnc7
  Sep 13 12:59:32.048: INFO: Got endpoints: latency-svc-2vnc7 [196.622099ms]
  Sep 13 12:59:32.059: INFO: Created: latency-svc-99b5j
  Sep 13 12:59:32.069: INFO: Created: latency-svc-g7l7c
  Sep 13 12:59:32.070: INFO: Got endpoints: latency-svc-99b5j [207.982017ms]
  Sep 13 12:59:32.083: INFO: Created: latency-svc-55tz9
  Sep 13 12:59:32.088: INFO: Got endpoints: latency-svc-g7l7c [198.694546ms]
  Sep 13 12:59:32.091: INFO: Got endpoints: latency-svc-55tz9 [191.508287ms]
  Sep 13 12:59:32.093: INFO: Created: latency-svc-s5s64
  Sep 13 12:59:32.101: INFO: Got endpoints: latency-svc-s5s64 [188.936677ms]
  Sep 13 12:59:32.124: INFO: Created: latency-svc-vf4jk
  Sep 13 12:59:32.124: INFO: Created: latency-svc-8mnlm
  Sep 13 12:59:32.130: INFO: Got endpoints: latency-svc-8mnlm [206.132217ms]
  Sep 13 12:59:32.138: INFO: Got endpoints: latency-svc-vf4jk [199.880389ms]
  Sep 13 12:59:32.142: INFO: Created: latency-svc-9mgfd
  Sep 13 12:59:32.147: INFO: Got endpoints: latency-svc-9mgfd [204.473352ms]
  Sep 13 12:59:32.163: INFO: Created: latency-svc-dt95d
  Sep 13 12:59:32.169: INFO: Created: latency-svc-jlttl
  Sep 13 12:59:32.173: INFO: Got endpoints: latency-svc-dt95d [223.462044ms]
  Sep 13 12:59:32.180: INFO: Got endpoints: latency-svc-jlttl [216.784395ms]
  Sep 13 12:59:32.182: INFO: Created: latency-svc-ttjcw
  Sep 13 12:59:32.189: INFO: Got endpoints: latency-svc-ttjcw [211.734828ms]
  Sep 13 12:59:32.194: INFO: Created: latency-svc-z96s7
  Sep 13 12:59:32.210: INFO: Got endpoints: latency-svc-z96s7 [227.672867ms]
  Sep 13 12:59:32.212: INFO: Created: latency-svc-wdx8x
  Sep 13 12:59:32.227: INFO: Created: latency-svc-tpxdl
  Sep 13 12:59:32.229: INFO: Created: latency-svc-bzkjh
  Sep 13 12:59:32.237: INFO: Created: latency-svc-ls22r
  Sep 13 12:59:32.242: INFO: Got endpoints: latency-svc-wdx8x [238.250715ms]
  Sep 13 12:59:32.244: INFO: Created: latency-svc-8vz9z
  Sep 13 12:59:32.253: INFO: Created: latency-svc-m9qxn
  Sep 13 12:59:32.263: INFO: Created: latency-svc-zwkm2
  Sep 13 12:59:32.272: INFO: Created: latency-svc-f5wbc
  Sep 13 12:59:32.274: INFO: Created: latency-svc-l6xqf
  Sep 13 12:59:32.284: INFO: Created: latency-svc-d942b
  Sep 13 12:59:32.294: INFO: Got endpoints: latency-svc-tpxdl [276.146041ms]
  Sep 13 12:59:32.296: INFO: Created: latency-svc-l2f5m
  Sep 13 12:59:32.306: INFO: Created: latency-svc-cjs78
  Sep 13 12:59:32.315: INFO: Created: latency-svc-2bbmq
  Sep 13 12:59:32.324: INFO: Created: latency-svc-xhfb2
  Sep 13 12:59:32.334: INFO: Created: latency-svc-6cjqc
  Sep 13 12:59:32.340: INFO: Got endpoints: latency-svc-bzkjh [306.280432ms]
  E0913 12:59:32.343903      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 12:59:32.346: INFO: Created: latency-svc-z7cp8
  Sep 13 12:59:32.349: INFO: Created: latency-svc-4gcbb
  Sep 13 12:59:32.358: INFO: Created: latency-svc-cjjdr
  Sep 13 12:59:32.398: INFO: Got endpoints: latency-svc-ls22r [350.396989ms]
  Sep 13 12:59:32.409: INFO: Created: latency-svc-x4rn7
  Sep 13 12:59:32.446: INFO: Got endpoints: latency-svc-8vz9z [375.554517ms]
  Sep 13 12:59:32.460: INFO: Created: latency-svc-9qzpr
  Sep 13 12:59:32.490: INFO: Got endpoints: latency-svc-m9qxn [400.984656ms]
  Sep 13 12:59:32.508: INFO: Created: latency-svc-6j72r
  Sep 13 12:59:32.540: INFO: Got endpoints: latency-svc-zwkm2 [448.4802ms]
  Sep 13 12:59:32.553: INFO: Created: latency-svc-g46xl
  Sep 13 12:59:32.593: INFO: Got endpoints: latency-svc-f5wbc [492.139663ms]
  Sep 13 12:59:32.615: INFO: Created: latency-svc-qvbbq
  Sep 13 12:59:32.638: INFO: Got endpoints: latency-svc-l6xqf [508.371593ms]
  Sep 13 12:59:32.660: INFO: Created: latency-svc-hxfg5
  Sep 13 12:59:32.690: INFO: Got endpoints: latency-svc-d942b [552.098756ms]
  Sep 13 12:59:32.701: INFO: Created: latency-svc-zgk2d
  Sep 13 12:59:32.740: INFO: Got endpoints: latency-svc-l2f5m [592.653797ms]
  Sep 13 12:59:32.752: INFO: Created: latency-svc-jrth5
  Sep 13 12:59:32.799: INFO: Got endpoints: latency-svc-cjs78 [626.046073ms]
  Sep 13 12:59:32.816: INFO: Created: latency-svc-pv74h
  Sep 13 12:59:32.841: INFO: Got endpoints: latency-svc-2bbmq [660.165979ms]
  Sep 13 12:59:32.856: INFO: Created: latency-svc-zrbcv
  Sep 13 12:59:32.890: INFO: Got endpoints: latency-svc-xhfb2 [700.183649ms]
  Sep 13 12:59:32.900: INFO: Created: latency-svc-qk2v2
  Sep 13 12:59:32.946: INFO: Got endpoints: latency-svc-6cjqc [735.297946ms]
  Sep 13 12:59:32.966: INFO: Created: latency-svc-hdlrw
  Sep 13 12:59:32.990: INFO: Got endpoints: latency-svc-z7cp8 [747.762745ms]
  Sep 13 12:59:33.003: INFO: Created: latency-svc-9sl59
  Sep 13 12:59:33.054: INFO: Got endpoints: latency-svc-4gcbb [759.225162ms]
  Sep 13 12:59:33.070: INFO: Created: latency-svc-jdh57
  Sep 13 12:59:33.099: INFO: Got endpoints: latency-svc-cjjdr [758.577945ms]
  Sep 13 12:59:33.110: INFO: Created: latency-svc-mwqhv
  Sep 13 12:59:33.143: INFO: Got endpoints: latency-svc-x4rn7 [744.441231ms]
  Sep 13 12:59:33.166: INFO: Created: latency-svc-qvp7s
  Sep 13 12:59:33.195: INFO: Got endpoints: latency-svc-9qzpr [749.322107ms]
  Sep 13 12:59:33.206: INFO: Created: latency-svc-h5dcx
  Sep 13 12:59:33.242: INFO: Got endpoints: latency-svc-6j72r [752.286106ms]
  Sep 13 12:59:33.257: INFO: Created: latency-svc-p65nj
  Sep 13 12:59:33.291: INFO: Got endpoints: latency-svc-g46xl [751.34305ms]
  Sep 13 12:59:33.304: INFO: Created: latency-svc-l842v
  Sep 13 12:59:33.341: INFO: Got endpoints: latency-svc-qvbbq [747.311122ms]
  E0913 12:59:33.345105      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 12:59:33.354: INFO: Created: latency-svc-hb797
  Sep 13 12:59:33.399: INFO: Got endpoints: latency-svc-hxfg5 [760.607004ms]
  Sep 13 12:59:33.419: INFO: Created: latency-svc-dqfj2
  Sep 13 12:59:33.445: INFO: Got endpoints: latency-svc-zgk2d [754.518312ms]
  Sep 13 12:59:33.474: INFO: Created: latency-svc-sw6tq
  Sep 13 12:59:33.489: INFO: Got endpoints: latency-svc-jrth5 [748.405751ms]
  Sep 13 12:59:33.504: INFO: Created: latency-svc-2qx5l
  Sep 13 12:59:33.542: INFO: Got endpoints: latency-svc-pv74h [742.623567ms]
  Sep 13 12:59:33.564: INFO: Created: latency-svc-h9rww
  Sep 13 12:59:33.589: INFO: Got endpoints: latency-svc-zrbcv [748.041565ms]
  Sep 13 12:59:33.604: INFO: Created: latency-svc-t9zm5
  Sep 13 12:59:33.638: INFO: Got endpoints: latency-svc-qk2v2 [748.122697ms]
  Sep 13 12:59:33.650: INFO: Created: latency-svc-rs9m8
  Sep 13 12:59:33.691: INFO: Got endpoints: latency-svc-hdlrw [744.738026ms]
  Sep 13 12:59:33.706: INFO: Created: latency-svc-xk262
  Sep 13 12:59:33.745: INFO: Got endpoints: latency-svc-9sl59 [755.01257ms]
  Sep 13 12:59:33.752: INFO: Created: latency-svc-nktz6
  Sep 13 12:59:33.793: INFO: Got endpoints: latency-svc-jdh57 [739.765582ms]
  Sep 13 12:59:33.815: INFO: Created: latency-svc-clgzx
  Sep 13 12:59:33.844: INFO: Got endpoints: latency-svc-mwqhv [743.622541ms]
  Sep 13 12:59:33.857: INFO: Created: latency-svc-8pc8w
  Sep 13 12:59:33.890: INFO: Got endpoints: latency-svc-qvp7s [747.010202ms]
  Sep 13 12:59:33.904: INFO: Created: latency-svc-8zr4x
  Sep 13 12:59:33.945: INFO: Got endpoints: latency-svc-h5dcx [749.731143ms]
  Sep 13 12:59:33.957: INFO: Created: latency-svc-dlkqq
  Sep 13 12:59:33.990: INFO: Got endpoints: latency-svc-p65nj [747.615294ms]
  Sep 13 12:59:34.007: INFO: Created: latency-svc-wqhx2
  Sep 13 12:59:34.042: INFO: Got endpoints: latency-svc-l842v [750.451385ms]
  Sep 13 12:59:34.061: INFO: Created: latency-svc-qn4ks
  Sep 13 12:59:34.097: INFO: Got endpoints: latency-svc-hb797 [756.328692ms]
  Sep 13 12:59:34.109: INFO: Created: latency-svc-kzl58
  Sep 13 12:59:34.147: INFO: Got endpoints: latency-svc-dqfj2 [748.047835ms]
  Sep 13 12:59:34.164: INFO: Created: latency-svc-lgxwc
  Sep 13 12:59:34.192: INFO: Got endpoints: latency-svc-sw6tq [746.817616ms]
  Sep 13 12:59:34.203: INFO: Created: latency-svc-dztvh
  Sep 13 12:59:34.244: INFO: Got endpoints: latency-svc-2qx5l [754.131186ms]
  E0913 12:59:34.345421      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 12:59:34.496: INFO: Created: latency-svc-44xrt
  Sep 13 12:59:34.498: INFO: Got endpoints: latency-svc-t9zm5 [908.825988ms]
  Sep 13 12:59:34.498: INFO: Got endpoints: latency-svc-nktz6 [752.615383ms]
  Sep 13 12:59:34.498: INFO: Got endpoints: latency-svc-rs9m8 [860.041424ms]
  Sep 13 12:59:34.498: INFO: Got endpoints: latency-svc-xk262 [806.964341ms]
  Sep 13 12:59:34.498: INFO: Got endpoints: latency-svc-h9rww [956.025829ms]
  Sep 13 12:59:34.513: INFO: Created: latency-svc-tf9rm
  Sep 13 12:59:34.517: INFO: Created: latency-svc-l8vk6
  Sep 13 12:59:34.529: INFO: Created: latency-svc-cr4wp
  Sep 13 12:59:34.537: INFO: Created: latency-svc-gbrxs
  Sep 13 12:59:34.543: INFO: Created: latency-svc-j5v7j
  Sep 13 12:59:34.551: INFO: Got endpoints: latency-svc-clgzx [757.416882ms]
  Sep 13 12:59:34.569: INFO: Created: latency-svc-pmtsb
  Sep 13 12:59:34.597: INFO: Got endpoints: latency-svc-8pc8w [753.473654ms]
  Sep 13 12:59:34.610: INFO: Created: latency-svc-xz6hw
  Sep 13 12:59:34.646: INFO: Got endpoints: latency-svc-8zr4x [755.688909ms]
  Sep 13 12:59:34.667: INFO: Created: latency-svc-mgczx
  Sep 13 12:59:34.693: INFO: Got endpoints: latency-svc-dlkqq [748.000278ms]
  Sep 13 12:59:34.709: INFO: Created: latency-svc-kzh29
  Sep 13 12:59:34.740: INFO: Got endpoints: latency-svc-wqhx2 [749.20308ms]
  Sep 13 12:59:34.757: INFO: Created: latency-svc-z5z8z
  Sep 13 12:59:34.799: INFO: Got endpoints: latency-svc-qn4ks [756.777867ms]
  Sep 13 12:59:34.817: INFO: Created: latency-svc-p9bgm
  Sep 13 12:59:34.844: INFO: Got endpoints: latency-svc-kzl58 [747.115315ms]
  Sep 13 12:59:34.863: INFO: Created: latency-svc-qzxtc
  Sep 13 12:59:34.890: INFO: Got endpoints: latency-svc-lgxwc [742.700454ms]
  Sep 13 12:59:34.906: INFO: Created: latency-svc-d2td5
  Sep 13 12:59:34.942: INFO: Got endpoints: latency-svc-dztvh [750.440655ms]
  Sep 13 12:59:34.953: INFO: Created: latency-svc-77pfr
  Sep 13 12:59:34.993: INFO: Got endpoints: latency-svc-44xrt [749.542955ms]
  Sep 13 12:59:35.012: INFO: Created: latency-svc-nrjsl
  Sep 13 12:59:35.039: INFO: Got endpoints: latency-svc-tf9rm [541.294936ms]
  Sep 13 12:59:35.052: INFO: Created: latency-svc-72kt6
  Sep 13 12:59:35.099: INFO: Got endpoints: latency-svc-l8vk6 [600.869566ms]
  Sep 13 12:59:35.108: INFO: Created: latency-svc-7hc4g
  Sep 13 12:59:35.148: INFO: Got endpoints: latency-svc-cr4wp [649.909187ms]
  Sep 13 12:59:35.160: INFO: Created: latency-svc-gvkt7
  Sep 13 12:59:35.195: INFO: Got endpoints: latency-svc-gbrxs [697.122253ms]
  Sep 13 12:59:35.212: INFO: Created: latency-svc-4szgk
  Sep 13 12:59:35.239: INFO: Got endpoints: latency-svc-j5v7j [740.87249ms]
  Sep 13 12:59:35.251: INFO: Created: latency-svc-fvfmk
  Sep 13 12:59:35.314: INFO: Got endpoints: latency-svc-pmtsb [762.762583ms]
  E0913 12:59:35.346052      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 12:59:35.401: INFO: Got endpoints: latency-svc-xz6hw [803.912042ms]
  Sep 13 12:59:35.410: INFO: Got endpoints: latency-svc-mgczx [763.837102ms]
  Sep 13 12:59:35.446: INFO: Created: latency-svc-ms5h9
  Sep 13 12:59:35.456: INFO: Got endpoints: latency-svc-kzh29 [762.110843ms]
  Sep 13 12:59:35.531: INFO: Got endpoints: latency-svc-z5z8z [791.084499ms]
  Sep 13 12:59:35.534: INFO: Created: latency-svc-qw6h8
  Sep 13 12:59:35.544: INFO: Got endpoints: latency-svc-p9bgm [745.292004ms]
  Sep 13 12:59:35.550: INFO: Created: latency-svc-dpq4n
  Sep 13 12:59:35.558: INFO: Created: latency-svc-zs7nj
  Sep 13 12:59:35.567: INFO: Created: latency-svc-5ssp4
  Sep 13 12:59:35.618: INFO: Got endpoints: latency-svc-qzxtc [773.267729ms]
  Sep 13 12:59:35.620: INFO: Created: latency-svc-vp5zk
  Sep 13 12:59:35.654: INFO: Got endpoints: latency-svc-d2td5 [764.077611ms]
  Sep 13 12:59:35.656: INFO: Created: latency-svc-l9rl2
  Sep 13 12:59:35.668: INFO: Created: latency-svc-jsszv
  Sep 13 12:59:35.691: INFO: Got endpoints: latency-svc-77pfr [748.531385ms]
  Sep 13 12:59:35.718: INFO: Created: latency-svc-zg52d
  Sep 13 12:59:35.749: INFO: Got endpoints: latency-svc-nrjsl [755.682968ms]
  Sep 13 12:59:35.765: INFO: Created: latency-svc-pwbwx
  Sep 13 12:59:35.788: INFO: Got endpoints: latency-svc-72kt6 [748.74502ms]
  Sep 13 12:59:35.805: INFO: Created: latency-svc-cpw75
  Sep 13 12:59:35.858: INFO: Got endpoints: latency-svc-7hc4g [758.972933ms]
  Sep 13 12:59:35.885: INFO: Created: latency-svc-l78s2
  Sep 13 12:59:35.895: INFO: Got endpoints: latency-svc-gvkt7 [746.982144ms]
  Sep 13 12:59:35.914: INFO: Created: latency-svc-rjbk5
  Sep 13 12:59:35.945: INFO: Got endpoints: latency-svc-4szgk [749.946595ms]
  Sep 13 12:59:35.972: INFO: Created: latency-svc-pswgb
  Sep 13 12:59:35.994: INFO: Got endpoints: latency-svc-fvfmk [754.925533ms]
  Sep 13 12:59:36.012: INFO: Created: latency-svc-b4blc
  Sep 13 12:59:36.045: INFO: Got endpoints: latency-svc-ms5h9 [731.596512ms]
  Sep 13 12:59:36.076: INFO: Created: latency-svc-c9hw6
  Sep 13 12:59:36.090: INFO: Got endpoints: latency-svc-qw6h8 [688.956652ms]
  Sep 13 12:59:36.110: INFO: Created: latency-svc-42mpc
  Sep 13 12:59:36.147: INFO: Got endpoints: latency-svc-dpq4n [737.454072ms]
  Sep 13 12:59:36.166: INFO: Created: latency-svc-dn4bj
  Sep 13 12:59:36.246: INFO: Got endpoints: latency-svc-zs7nj [790.473233ms]
  Sep 13 12:59:36.263: INFO: Created: latency-svc-tnlv8
  Sep 13 12:59:36.306: INFO: Got endpoints: latency-svc-5ssp4 [775.163967ms]
  Sep 13 12:59:36.329: INFO: Created: latency-svc-vqrj2
  Sep 13 12:59:36.345: INFO: Got endpoints: latency-svc-vp5zk [800.243361ms]
  E0913 12:59:36.346147      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 12:59:36.354: INFO: Created: latency-svc-vjkxz
  Sep 13 12:59:36.395: INFO: Got endpoints: latency-svc-l9rl2 [777.418341ms]
  Sep 13 12:59:36.416: INFO: Created: latency-svc-s8tdw
  Sep 13 12:59:36.440: INFO: Got endpoints: latency-svc-jsszv [786.236755ms]
  Sep 13 12:59:36.453: INFO: Created: latency-svc-pwt8w
  Sep 13 12:59:36.489: INFO: Got endpoints: latency-svc-zg52d [797.893544ms]
  Sep 13 12:59:36.505: INFO: Created: latency-svc-jgbxx
  Sep 13 12:59:36.542: INFO: Got endpoints: latency-svc-pwbwx [793.018933ms]
  Sep 13 12:59:36.557: INFO: Created: latency-svc-htqtw
  Sep 13 12:59:36.596: INFO: Got endpoints: latency-svc-cpw75 [808.268729ms]
  Sep 13 12:59:36.618: INFO: Created: latency-svc-xnb5s
  Sep 13 12:59:36.648: INFO: Got endpoints: latency-svc-l78s2 [789.991235ms]
  Sep 13 12:59:36.658: INFO: Created: latency-svc-z7b9p
  Sep 13 12:59:36.696: INFO: Got endpoints: latency-svc-rjbk5 [801.084763ms]
  Sep 13 12:59:36.709: INFO: Created: latency-svc-f87jq
  Sep 13 12:59:36.742: INFO: Got endpoints: latency-svc-pswgb [796.282213ms]
  Sep 13 12:59:36.753: INFO: Created: latency-svc-ggb5k
  Sep 13 12:59:36.797: INFO: Got endpoints: latency-svc-b4blc [802.671375ms]
  Sep 13 12:59:36.806: INFO: Created: latency-svc-wg9pf
  Sep 13 12:59:36.850: INFO: Got endpoints: latency-svc-c9hw6 [804.802246ms]
  Sep 13 12:59:36.866: INFO: Created: latency-svc-8qmbw
  Sep 13 12:59:36.890: INFO: Got endpoints: latency-svc-42mpc [799.164154ms]
  Sep 13 12:59:36.907: INFO: Created: latency-svc-tlq4t
  Sep 13 12:59:36.941: INFO: Got endpoints: latency-svc-dn4bj [793.563424ms]
  Sep 13 12:59:36.958: INFO: Created: latency-svc-r9bwq
  Sep 13 12:59:36.991: INFO: Got endpoints: latency-svc-tnlv8 [744.282381ms]
  Sep 13 12:59:37.004: INFO: Created: latency-svc-tpchg
  Sep 13 12:59:37.040: INFO: Got endpoints: latency-svc-vqrj2 [733.664944ms]
  Sep 13 12:59:37.050: INFO: Created: latency-svc-ctbgz
  Sep 13 12:59:37.094: INFO: Got endpoints: latency-svc-vjkxz [749.575121ms]
  Sep 13 12:59:37.108: INFO: Created: latency-svc-r52ks
  Sep 13 12:59:37.140: INFO: Got endpoints: latency-svc-s8tdw [745.100183ms]
  Sep 13 12:59:37.154: INFO: Created: latency-svc-x2m5f
  Sep 13 12:59:37.199: INFO: Got endpoints: latency-svc-pwt8w [758.431058ms]
  Sep 13 12:59:37.212: INFO: Created: latency-svc-gmvng
  Sep 13 12:59:37.251: INFO: Got endpoints: latency-svc-jgbxx [762.102572ms]
  Sep 13 12:59:37.277: INFO: Created: latency-svc-4kqmt
  Sep 13 12:59:37.292: INFO: Got endpoints: latency-svc-htqtw [750.183184ms]
  Sep 13 12:59:37.308: INFO: Created: latency-svc-vg85t
  Sep 13 12:59:37.339: INFO: Got endpoints: latency-svc-xnb5s [742.169106ms]
  E0913 12:59:37.346991      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 12:59:37.353: INFO: Created: latency-svc-wgc9b
  Sep 13 12:59:37.389: INFO: Got endpoints: latency-svc-z7b9p [740.483333ms]
  Sep 13 12:59:37.406: INFO: Created: latency-svc-gg9ds
  Sep 13 12:59:37.448: INFO: Got endpoints: latency-svc-f87jq [751.924662ms]
  Sep 13 12:59:37.457: INFO: Created: latency-svc-x8hz8
  Sep 13 12:59:37.496: INFO: Got endpoints: latency-svc-ggb5k [753.916658ms]
  Sep 13 12:59:37.512: INFO: Created: latency-svc-ts6dn
  Sep 13 12:59:37.539: INFO: Got endpoints: latency-svc-wg9pf [742.410687ms]
  Sep 13 12:59:37.553: INFO: Created: latency-svc-bmnbf
  Sep 13 12:59:37.591: INFO: Got endpoints: latency-svc-8qmbw [740.588257ms]
  Sep 13 12:59:37.609: INFO: Created: latency-svc-l5ckt
  Sep 13 12:59:37.645: INFO: Got endpoints: latency-svc-tlq4t [755.372037ms]
  Sep 13 12:59:37.659: INFO: Created: latency-svc-b569t
  Sep 13 12:59:37.690: INFO: Got endpoints: latency-svc-r9bwq [748.656041ms]
  Sep 13 12:59:37.708: INFO: Created: latency-svc-snchn
  Sep 13 12:59:37.739: INFO: Got endpoints: latency-svc-tpchg [748.516506ms]
  Sep 13 12:59:37.754: INFO: Created: latency-svc-kc5zx
  Sep 13 12:59:37.792: INFO: Got endpoints: latency-svc-ctbgz [751.896147ms]
  Sep 13 12:59:37.804: INFO: Created: latency-svc-qq249
  Sep 13 12:59:37.860: INFO: Got endpoints: latency-svc-r52ks [765.778704ms]
  Sep 13 12:59:37.873: INFO: Created: latency-svc-fvqg4
  Sep 13 12:59:37.891: INFO: Got endpoints: latency-svc-x2m5f [750.512374ms]
  Sep 13 12:59:37.906: INFO: Created: latency-svc-4zt2v
  Sep 13 12:59:37.949: INFO: Got endpoints: latency-svc-gmvng [750.004596ms]
  Sep 13 12:59:37.960: INFO: Created: latency-svc-6nhd4
  Sep 13 12:59:37.995: INFO: Got endpoints: latency-svc-4kqmt [743.530273ms]
  Sep 13 12:59:38.010: INFO: Created: latency-svc-rjcrs
  Sep 13 12:59:38.042: INFO: Got endpoints: latency-svc-vg85t [749.498137ms]
  Sep 13 12:59:38.057: INFO: Created: latency-svc-r5z9w
  Sep 13 12:59:38.091: INFO: Got endpoints: latency-svc-wgc9b [751.771205ms]
  Sep 13 12:59:38.104: INFO: Created: latency-svc-rjmvv
  Sep 13 12:59:38.149: INFO: Got endpoints: latency-svc-gg9ds [759.774661ms]
  Sep 13 12:59:38.163: INFO: Created: latency-svc-bjfbd
  Sep 13 12:59:38.190: INFO: Got endpoints: latency-svc-x8hz8 [741.401936ms]
  Sep 13 12:59:38.202: INFO: Created: latency-svc-bvmnd
  Sep 13 12:59:38.243: INFO: Got endpoints: latency-svc-ts6dn [747.694638ms]
  Sep 13 12:59:38.257: INFO: Created: latency-svc-9bzj9
  Sep 13 12:59:38.293: INFO: Got endpoints: latency-svc-bmnbf [753.453775ms]
  Sep 13 12:59:38.305: INFO: Created: latency-svc-tb4rz
  Sep 13 12:59:38.343: INFO: Got endpoints: latency-svc-l5ckt [751.892779ms]
  E0913 12:59:38.347872      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 12:59:38.362: INFO: Created: latency-svc-q5hz8
  Sep 13 12:59:38.395: INFO: Got endpoints: latency-svc-b569t [749.715848ms]
  Sep 13 12:59:38.405: INFO: Created: latency-svc-g754k
  Sep 13 12:59:38.440: INFO: Got endpoints: latency-svc-snchn [749.934966ms]
  Sep 13 12:59:38.458: INFO: Created: latency-svc-4h8sr
  Sep 13 12:59:38.492: INFO: Got endpoints: latency-svc-kc5zx [753.288831ms]
  Sep 13 12:59:38.510: INFO: Created: latency-svc-8j5fq
  Sep 13 12:59:38.544: INFO: Got endpoints: latency-svc-qq249 [752.315546ms]
  Sep 13 12:59:38.560: INFO: Created: latency-svc-nrlbj
  Sep 13 12:59:38.597: INFO: Got endpoints: latency-svc-fvqg4 [736.874992ms]
  Sep 13 12:59:38.609: INFO: Created: latency-svc-57tt4
  Sep 13 12:59:38.645: INFO: Got endpoints: latency-svc-4zt2v [753.89045ms]
  Sep 13 12:59:38.659: INFO: Created: latency-svc-5m96w
  Sep 13 12:59:38.692: INFO: Got endpoints: latency-svc-6nhd4 [742.473886ms]
  Sep 13 12:59:38.705: INFO: Created: latency-svc-g7n64
  Sep 13 12:59:38.742: INFO: Got endpoints: latency-svc-rjcrs [747.657053ms]
  Sep 13 12:59:38.757: INFO: Created: latency-svc-mxcfq
  Sep 13 12:59:38.794: INFO: Got endpoints: latency-svc-r5z9w [752.239771ms]
  Sep 13 12:59:38.813: INFO: Created: latency-svc-l2gkp
  Sep 13 12:59:38.840: INFO: Got endpoints: latency-svc-rjmvv [748.840123ms]
  Sep 13 12:59:38.862: INFO: Created: latency-svc-tjp5p
  Sep 13 12:59:38.897: INFO: Got endpoints: latency-svc-bjfbd [747.449142ms]
  Sep 13 12:59:38.908: INFO: Created: latency-svc-kp886
  Sep 13 12:59:38.939: INFO: Got endpoints: latency-svc-bvmnd [749.034498ms]
  Sep 13 12:59:38.962: INFO: Created: latency-svc-dmzqm
  Sep 13 12:59:38.992: INFO: Got endpoints: latency-svc-9bzj9 [748.735663ms]
  Sep 13 12:59:39.015: INFO: Created: latency-svc-gttdd
  Sep 13 12:59:39.041: INFO: Got endpoints: latency-svc-tb4rz [748.193438ms]
  Sep 13 12:59:39.054: INFO: Created: latency-svc-8gpmb
  Sep 13 12:59:39.091: INFO: Got endpoints: latency-svc-q5hz8 [747.433176ms]
  Sep 13 12:59:39.103: INFO: Created: latency-svc-zszz4
  Sep 13 12:59:39.142: INFO: Got endpoints: latency-svc-g754k [746.893094ms]
  Sep 13 12:59:39.157: INFO: Created: latency-svc-7zg7b
  Sep 13 12:59:39.192: INFO: Got endpoints: latency-svc-4h8sr [752.098006ms]
  Sep 13 12:59:39.209: INFO: Created: latency-svc-hwfjt
  Sep 13 12:59:39.239: INFO: Got endpoints: latency-svc-8j5fq [746.608605ms]
  Sep 13 12:59:39.250: INFO: Created: latency-svc-fc5lt
  Sep 13 12:59:39.296: INFO: Got endpoints: latency-svc-nrlbj [752.078711ms]
  Sep 13 12:59:39.311: INFO: Created: latency-svc-777fr
  Sep 13 12:59:39.339: INFO: Got endpoints: latency-svc-57tt4 [742.183068ms]
  E0913 12:59:39.348132      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 12:59:39.354: INFO: Created: latency-svc-kfn9x
  Sep 13 12:59:39.389: INFO: Got endpoints: latency-svc-5m96w [744.027515ms]
  Sep 13 12:59:39.404: INFO: Created: latency-svc-48xv6
  Sep 13 12:59:39.448: INFO: Got endpoints: latency-svc-g7n64 [756.794932ms]
  Sep 13 12:59:39.458: INFO: Created: latency-svc-8jjq6
  Sep 13 12:59:39.500: INFO: Got endpoints: latency-svc-mxcfq [757.380897ms]
  Sep 13 12:59:39.513: INFO: Created: latency-svc-mwjf7
  Sep 13 12:59:39.543: INFO: Got endpoints: latency-svc-l2gkp [748.101993ms]
  Sep 13 12:59:39.560: INFO: Created: latency-svc-4xvx7
  Sep 13 12:59:39.596: INFO: Got endpoints: latency-svc-tjp5p [755.752428ms]
  Sep 13 12:59:39.647: INFO: Got endpoints: latency-svc-kp886 [749.861158ms]
  Sep 13 12:59:39.694: INFO: Got endpoints: latency-svc-dmzqm [754.704376ms]
  Sep 13 12:59:39.740: INFO: Got endpoints: latency-svc-gttdd [747.805904ms]
  Sep 13 12:59:39.793: INFO: Got endpoints: latency-svc-8gpmb [751.656513ms]
  Sep 13 12:59:39.852: INFO: Got endpoints: latency-svc-zszz4 [761.638172ms]
  Sep 13 12:59:39.894: INFO: Got endpoints: latency-svc-7zg7b [751.617507ms]
  Sep 13 12:59:39.940: INFO: Got endpoints: latency-svc-hwfjt [747.420622ms]
  Sep 13 12:59:39.990: INFO: Got endpoints: latency-svc-fc5lt [750.316442ms]
  Sep 13 12:59:40.041: INFO: Got endpoints: latency-svc-777fr [744.364408ms]
  Sep 13 12:59:40.099: INFO: Got endpoints: latency-svc-kfn9x [759.22951ms]
  Sep 13 12:59:40.148: INFO: Got endpoints: latency-svc-48xv6 [758.353741ms]
  Sep 13 12:59:40.190: INFO: Got endpoints: latency-svc-8jjq6 [741.461565ms]
  Sep 13 12:59:40.249: INFO: Got endpoints: latency-svc-mwjf7 [749.158889ms]
  Sep 13 12:59:40.293: INFO: Got endpoints: latency-svc-4xvx7 [750.0599ms]
  Sep 13 12:59:40.293: INFO: Latencies: [34.513598ms 43.797963ms 57.356886ms 68.81324ms 72.579765ms 82.909648ms 98.578952ms 104.576703ms 128.964324ms 137.848177ms 144.828336ms 156.34079ms 160.411749ms 162.971979ms 171.053278ms 174.145445ms 174.8132ms 175.261541ms 175.412893ms 176.806914ms 177.887579ms 178.220751ms 179.005277ms 181.86379ms 182.192475ms 186.453629ms 188.936677ms 191.508287ms 196.622099ms 198.389998ms 198.694546ms 199.880389ms 204.473352ms 206.132217ms 207.982017ms 211.734828ms 216.784395ms 223.462044ms 227.672867ms 238.250715ms 276.146041ms 306.280432ms 350.396989ms 375.554517ms 400.984656ms 448.4802ms 492.139663ms 508.371593ms 541.294936ms 552.098756ms 592.653797ms 600.869566ms 626.046073ms 649.909187ms 660.165979ms 688.956652ms 697.122253ms 700.183649ms 731.596512ms 733.664944ms 735.297946ms 736.874992ms 737.454072ms 739.765582ms 740.483333ms 740.588257ms 740.87249ms 741.401936ms 741.461565ms 742.169106ms 742.183068ms 742.410687ms 742.473886ms 742.623567ms 742.700454ms 743.530273ms 743.622541ms 744.027515ms 744.282381ms 744.364408ms 744.441231ms 744.738026ms 745.100183ms 745.292004ms 746.608605ms 746.817616ms 746.893094ms 746.982144ms 747.010202ms 747.115315ms 747.311122ms 747.420622ms 747.433176ms 747.449142ms 747.615294ms 747.657053ms 747.694638ms 747.762745ms 747.805904ms 748.000278ms 748.041565ms 748.047835ms 748.101993ms 748.122697ms 748.193438ms 748.405751ms 748.516506ms 748.531385ms 748.656041ms 748.735663ms 748.74502ms 748.840123ms 749.034498ms 749.158889ms 749.20308ms 749.322107ms 749.498137ms 749.542955ms 749.575121ms 749.715848ms 749.731143ms 749.861158ms 749.934966ms 749.946595ms 750.004596ms 750.0599ms 750.183184ms 750.316442ms 750.440655ms 750.451385ms 750.512374ms 751.34305ms 751.617507ms 751.656513ms 751.771205ms 751.892779ms 751.896147ms 751.924662ms 752.078711ms 752.098006ms 752.239771ms 752.286106ms 752.315546ms 752.615383ms 753.288831ms 753.453775ms 753.473654ms 753.89045ms 753.916658ms 754.131186ms 754.518312ms 754.704376ms 754.925533ms 755.01257ms 755.372037ms 755.682968ms 755.688909ms 755.752428ms 756.328692ms 756.777867ms 756.794932ms 757.380897ms 757.416882ms 758.353741ms 758.431058ms 758.577945ms 758.972933ms 759.225162ms 759.22951ms 759.774661ms 760.607004ms 761.638172ms 762.102572ms 762.110843ms 762.762583ms 763.837102ms 764.077611ms 765.778704ms 773.267729ms 775.163967ms 777.418341ms 786.236755ms 789.991235ms 790.473233ms 791.084499ms 793.018933ms 793.563424ms 796.282213ms 797.893544ms 799.164154ms 800.243361ms 801.084763ms 802.671375ms 803.912042ms 804.802246ms 806.964341ms 808.268729ms 860.041424ms 908.825988ms 956.025829ms]
  Sep 13 12:59:40.293: INFO: 50 %ile: 748.041565ms
  Sep 13 12:59:40.293: INFO: 90 %ile: 777.418341ms
  Sep 13 12:59:40.293: INFO: 99 %ile: 908.825988ms
  Sep 13 12:59:40.294: INFO: Total sample count: 200
  Sep 13 12:59:40.294: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-6371" for this suite. @ 09/13/24 12:59:40.302
• [9.831 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:639
  STEP: Creating a kubernetes client @ 09/13/24 12:59:40.31
  Sep 13 12:59:40.310: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename gc @ 09/13/24 12:59:40.312
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 12:59:40.337
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 12:59:40.34
  STEP: create the rc @ 09/13/24 12:59:40.347
  E0913 12:59:40.348737      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  W0913 12:59:40.367481      23 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E0913 12:59:41.349215      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:59:42.350303      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:59:43.352711      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 12:59:44.353126      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc @ 09/13/24 12:59:44.375
  STEP: wait for the rc to be deleted @ 09/13/24 12:59:44.396
  E0913 12:59:45.353191      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 12:59:45.432: INFO: 99 pods remaining
  Sep 13 12:59:45.432: INFO: 80 pods has nil DeletionTimestamp
  Sep 13 12:59:45.433: INFO: 
  E0913 12:59:46.353324      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 12:59:46.440: INFO: 99 pods remaining
  Sep 13 12:59:46.440: INFO: 71 pods has nil DeletionTimestamp
  Sep 13 12:59:46.440: INFO: 
  E0913 12:59:47.354206      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 12:59:47.416: INFO: 99 pods remaining
  Sep 13 12:59:47.416: INFO: 59 pods has nil DeletionTimestamp
  Sep 13 12:59:47.416: INFO: 
  E0913 12:59:48.357223      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 12:59:48.434: INFO: 99 pods remaining
  Sep 13 12:59:48.434: INFO: 40 pods has nil DeletionTimestamp
  Sep 13 12:59:48.434: INFO: 
  E0913 12:59:49.357043      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 12:59:49.447: INFO: 99 pods remaining
  Sep 13 12:59:49.447: INFO: 31 pods has nil DeletionTimestamp
  Sep 13 12:59:49.447: INFO: 
  E0913 12:59:50.358914      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 12:59:50.425: INFO: 99 pods remaining
  Sep 13 12:59:50.425: INFO: 19 pods has nil DeletionTimestamp
  Sep 13 12:59:50.425: INFO: 
  E0913 12:59:51.359010      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 12:59:51.467: INFO: 99 pods remaining
  Sep 13 12:59:51.467: INFO: 0 pods has nil DeletionTimestamp
  Sep 13 12:59:51.467: INFO: 
  E0913 12:59:52.360402      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 12:59:52.409: INFO: 95 pods remaining
  Sep 13 12:59:52.410: INFO: 0 pods has nil DeletionTimestamp
  Sep 13 12:59:52.410: INFO: 
  E0913 12:59:53.360486      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 12:59:53.414: INFO: 83 pods remaining
  Sep 13 12:59:53.414: INFO: 0 pods has nil DeletionTimestamp
  Sep 13 12:59:53.414: INFO: 
  E0913 12:59:54.361555      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 12:59:54.409: INFO: 77 pods remaining
  Sep 13 12:59:54.409: INFO: 0 pods has nil DeletionTimestamp
  Sep 13 12:59:54.409: INFO: 
  E0913 12:59:55.361732      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 12:59:55.405: INFO: 71 pods remaining
  Sep 13 12:59:55.405: INFO: 0 pods has nil DeletionTimestamp
  Sep 13 12:59:55.405: INFO: 
  E0913 12:59:56.362531      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 12:59:56.419: INFO: 61 pods remaining
  Sep 13 12:59:56.419: INFO: 0 pods has nil DeletionTimestamp
  Sep 13 12:59:56.419: INFO: 
  E0913 12:59:57.363066      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 12:59:57.404: INFO: 56 pods remaining
  Sep 13 12:59:57.404: INFO: 0 pods has nil DeletionTimestamp
  Sep 13 12:59:57.404: INFO: 
  E0913 12:59:58.363368      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 12:59:58.406: INFO: 48 pods remaining
  Sep 13 12:59:58.406: INFO: 0 pods has nil DeletionTimestamp
  Sep 13 12:59:58.406: INFO: 
  E0913 12:59:59.363973      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 12:59:59.404: INFO: 40 pods remaining
  Sep 13 12:59:59.404: INFO: 0 pods has nil DeletionTimestamp
  Sep 13 12:59:59.404: INFO: 
  E0913 13:00:00.363997      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:00:00.403: INFO: 35 pods remaining
  Sep 13 13:00:00.403: INFO: 0 pods has nil DeletionTimestamp
  Sep 13 13:00:00.403: INFO: 
  E0913 13:00:01.365000      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:00:01.412: INFO: 25 pods remaining
  Sep 13 13:00:01.412: INFO: 0 pods has nil DeletionTimestamp
  Sep 13 13:00:01.412: INFO: 
  E0913 13:00:02.365539      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:00:02.404: INFO: 20 pods remaining
  Sep 13 13:00:02.404: INFO: 0 pods has nil DeletionTimestamp
  Sep 13 13:00:02.404: INFO: 
  E0913 13:00:03.365757      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:00:03.400: INFO: 15 pods remaining
  Sep 13 13:00:03.400: INFO: 0 pods has nil DeletionTimestamp
  Sep 13 13:00:03.400: INFO: 
  E0913 13:00:04.365929      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:00:04.404: INFO: 4 pods remaining
  Sep 13 13:00:04.404: INFO: 0 pods has nil DeletionTimestamp
  Sep 13 13:00:04.404: INFO: 
  E0913 13:00:05.366330      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:00:05.456: INFO: 0 pods remaining
  Sep 13 13:00:05.456: INFO: 0 pods has nil DeletionTimestamp
  Sep 13 13:00:05.456: INFO: 
  E0913 13:00:06.367065      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:00:06.401: INFO: 0 pods remaining
  Sep 13 13:00:06.401: INFO: 0 pods has nil DeletionTimestamp
  Sep 13 13:00:06.401: INFO: 
  E0913 13:00:07.367950      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 09/13/24 13:00:07.401
  Sep 13 13:00:07.479: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Sep 13 13:00:07.479: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-3011" for this suite. @ 09/13/24 13:00:07.484
• [27.180 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:285
  STEP: Creating a kubernetes client @ 09/13/24 13:00:07.49
  Sep 13 13:00:07.490: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename webhook @ 09/13/24 13:00:07.492
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:00:07.5
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:00:07.503
  STEP: Setting up server cert @ 09/13/24 13:00:07.533
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/13/24 13:00:07.796
  STEP: Deploying the webhook pod @ 09/13/24 13:00:07.804
  STEP: Wait for the deployment to be ready @ 09/13/24 13:00:07.825
  Sep 13 13:00:07.830: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0913 13:00:08.368039      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:00:09.368686      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/13/24 13:00:09.839
  STEP: Verifying the service has paired with the endpoint @ 09/13/24 13:00:09.853
  E0913 13:00:10.368901      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:00:10.853: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Sep 13 13:00:10.858: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-8379-crds.webhook.example.com via the AdmissionRegistration API @ 09/13/24 13:00:11.368
  E0913 13:00:11.368885      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a custom resource that should be mutated by the webhook @ 09/13/24 13:00:11.39
  E0913 13:00:12.369259      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:00:13.370213      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:00:14.018: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8606" for this suite. @ 09/13/24 13:00:14.021
  STEP: Destroying namespace "webhook-markers-7156" for this suite. @ 09/13/24 13:00:14.039
• [6.556 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 09/13/24 13:00:14.047
  Sep 13 13:00:14.047: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename projected @ 09/13/24 13:00:14.047
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:00:14.064
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:00:14.067
  STEP: Creating projection with secret that has name projected-secret-test-map-5817fbb2-72cf-4a4b-a12b-c9cbeeda17bd @ 09/13/24 13:00:14.069
  STEP: Creating a pod to test consume secrets @ 09/13/24 13:00:14.076
  E0913 13:00:14.370446      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:00:15.370701      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:00:16.370801      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:00:17.371294      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/13/24 13:00:18.096
  Sep 13 13:00:18.098: INFO: Trying to get logs from node cncf-3 pod pod-projected-secrets-65982ed8-09c0-4d3a-879a-1cde0ec52495 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/13/24 13:00:18.111
  Sep 13 13:00:18.123: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9422" for this suite. @ 09/13/24 13:00:18.126
• [4.084 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve endpoints on same port and different protocols [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3649
  STEP: Creating a kubernetes client @ 09/13/24 13:00:18.132
  Sep 13 13:00:18.132: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename services @ 09/13/24 13:00:18.134
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:00:18.149
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:00:18.152
  STEP: creating service multiprotocol-test in namespace services-1460 @ 09/13/24 13:00:18.154
  STEP: creating pod pod1 in namespace services-1460 @ 09/13/24 13:00:18.167
  STEP: Creating pod pod1 in namespace services-1460 @ 09/13/24 13:00:18.167
  E0913 13:00:18.372486      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:00:19.372879      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multiprotocol-test in namespace services-1460 to expose endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]] @ 09/13/24 13:00:20.19
  Sep 13 13:00:20.195: INFO: successfully validated that service multiprotocol-test in namespace services-1460 exposes endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]]
  STEP: Checking if the Service forwards traffic to the TCP and UDP port @ 09/13/24 13:00:20.195
  Sep 13 13:00:20.195: INFO: Creating new exec pod
  E0913 13:00:20.373059      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:00:21.373376      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:00:22.210: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=services-1460 exec execpod6rt7m -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.47.226 80'
  Sep 13 13:00:22.317: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.47.226 80\nConnection to 10.233.47.226 80 port [tcp/http] succeeded!\n"
  Sep 13 13:00:22.317: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep 13 13:00:22.317: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=services-1460 exec execpod6rt7m -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.233.47.226 80'
  E0913 13:00:22.373928      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:00:23.373932      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:00:24.374690      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:00:25.375860      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:00:26.376240      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:00:26.442: INFO: stderr: "+ echo hostName\n+ nc -v -u -w 2 10.233.47.226 80\nConnection to 10.233.47.226 80 port [udp/*] succeeded!\n"
  Sep 13 13:00:26.442: INFO: stdout: "pod1"
  STEP: Checking if the Service forwards traffic to TCP only @ 09/13/24 13:00:26.443
  Sep 13 13:00:26.459: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=services-1460 exec execpod6rt7m -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.47.226 80'
  Sep 13 13:00:26.594: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.47.226 80\nConnection to 10.233.47.226 80 port [tcp/http] succeeded!\n"
  Sep 13 13:00:26.594: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep 13 13:00:26.594: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=services-1460 exec execpod6rt7m -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.233.47.226 80'
  Sep 13 13:00:26.700: INFO: rc: 1
  Sep 13 13:00:26.700: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=services-1460 exec execpod6rt7m -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.233.47.226 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -u -w 2 10.233.47.226 80
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  E0913 13:00:27.377183      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:00:28.377302      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:00:28.595: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=services-1460 exec execpod6rt7m -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.233.47.226 80'
  Sep 13 13:00:28.686: INFO: rc: 1
  Sep 13 13:00:28.686: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=services-1460 exec execpod6rt7m -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.233.47.226 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -u -w 2 10.233.47.226 80
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  E0913 13:00:29.378181      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:00:30.378543      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:00:30.594: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=services-1460 exec execpod6rt7m -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.233.47.226 80'
  Sep 13 13:00:30.702: INFO: rc: 1
  Sep 13 13:00:30.702: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=services-1460 exec execpod6rt7m -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.233.47.226 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -u -w 2 10.233.47.226 80
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  E0913 13:00:31.379483      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:00:32.379934      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:00:32.594: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=services-1460 exec execpod6rt7m -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.233.47.226 80'
  Sep 13 13:00:32.697: INFO: rc: 1
  Sep 13 13:00:32.697: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=services-1460 exec execpod6rt7m -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.233.47.226 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -u -w 2 10.233.47.226 80
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  STEP: Checking if the Service forwards traffic to UDP only @ 09/13/24 13:00:32.697
  Sep 13 13:00:32.710: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=services-1460 exec execpod6rt7m -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.233.47.226 80'
  Sep 13 13:00:32.806: INFO: rc: 1
  Sep 13 13:00:32.806: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=services-1460 exec execpod6rt7m -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.233.47.226 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -u -w 2 10.233.47.226 80
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  E0913 13:00:33.380784      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:00:34.381180      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:00:34.711: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=services-1460 exec execpod6rt7m -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.233.47.226 80'
  E0913 13:00:35.381962      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:00:36.383184      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:00:37.383541      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:00:38.384666      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:00:38.827: INFO: stderr: "+ echo hostName\n+ nc -v -u -w 2 10.233.47.226 80\nConnection to 10.233.47.226 80 port [udp/*] succeeded!\n"
  Sep 13 13:00:38.827: INFO: stdout: "pod1"
  Sep 13 13:00:38.827: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=services-1460 exec execpod6rt7m -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.47.226 80'
  Sep 13 13:00:38.931: INFO: rc: 1
  Sep 13 13:00:38.931: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=services-1460 exec execpod6rt7m -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.47.226 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.233.47.226 80
  nc: connect to 10.233.47.226 port 80 (tcp) failed: Connection refused
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  E0913 13:00:39.385031      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:00:40.385238      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:00:40.827: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=services-1460 exec execpod6rt7m -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.47.226 80'
  Sep 13 13:00:40.924: INFO: rc: 1
  Sep 13 13:00:40.924: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=services-1460 exec execpod6rt7m -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.47.226 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.233.47.226 80
  nc: connect to 10.233.47.226 port 80 (tcp) failed: Connection refused
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  E0913 13:00:41.385399      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:00:42.385938      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:00:42.828: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=services-1460 exec execpod6rt7m -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.47.226 80'
  Sep 13 13:00:42.944: INFO: rc: 1
  Sep 13 13:00:42.944: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=services-1460 exec execpod6rt7m -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.47.226 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.233.47.226 80
  nc: connect to 10.233.47.226 port 80 (tcp) failed: Connection refused
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  E0913 13:00:43.386047      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:00:44.386193      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:00:44.827: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=services-1460 exec execpod6rt7m -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.47.226 80'
  Sep 13 13:00:44.913: INFO: rc: 1
  Sep 13 13:00:44.913: INFO: Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=services-1460 exec execpod6rt7m -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.47.226 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.233.47.226 80
  nc: connect to 10.233.47.226 port 80 (tcp) failed: Connection refused
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  Sep 13 13:00:44.913: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1460" for this suite. @ 09/13/24 13:00:44.918
• [26.790 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:241
  STEP: Creating a kubernetes client @ 09/13/24 13:00:44.923
  Sep 13 13:00:44.923: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename configmap @ 09/13/24 13:00:44.923
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:00:44.934
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:00:44.936
  STEP: Creating configMap with name cm-test-opt-del-575b1fac-9463-4460-988a-573cd5043faa @ 09/13/24 13:00:44.951
  STEP: Creating configMap with name cm-test-opt-upd-56bb7f50-53a3-436c-b3bc-1632f3cad495 @ 09/13/24 13:00:44.959
  STEP: Creating the pod @ 09/13/24 13:00:44.965
  E0913 13:00:45.386576      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:00:46.387175      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-575b1fac-9463-4460-988a-573cd5043faa @ 09/13/24 13:00:47.004
  STEP: Updating configmap cm-test-opt-upd-56bb7f50-53a3-436c-b3bc-1632f3cad495 @ 09/13/24 13:00:47.017
  STEP: Creating configMap with name cm-test-opt-create-1e7af1dd-8b53-4e47-a7bb-ee5fdd107bee @ 09/13/24 13:00:47.03
  STEP: waiting to observe update in volume @ 09/13/24 13:00:47.037
  E0913 13:00:47.387503      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:00:48.387942      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:00:49.388449      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:00:50.388940      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:00:51.389135      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:00:52.389756      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:00:53.390576      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:00:54.390756      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:00:55.391015      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:00:56.391333      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:00:57.392201      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:00:58.392553      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:00:59.393399      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:01:00.394315      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:01:01.394491      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:01:02.395303      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:01:03.396002      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:01:04.396942      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:01:05.397111      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:01:06.397307      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:01:07.397377      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:01:08.397706      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:01:09.398630      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:01:10.398902      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:01:11.399754      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:01:12.399891      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:01:13.400927      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:01:14.401154      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:01:15.401801      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:01:16.402083      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:01:17.402400      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:01:18.402836      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:01:19.403429      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:01:20.403828      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:01:21.404592      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:01:22.405454      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:01:23.406229      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:01:24.406462      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:01:25.407067      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:01:26.407302      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:01:27.407994      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:01:28.408146      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:01:29.408499      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:01:30.408718      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:01:31.409765      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:01:32.410563      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:01:33.410911      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:01:34.411303      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:01:35.411392      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:01:36.411706      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:01:37.412763      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:01:38.413537      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:01:39.413603      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:01:40.413905      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:01:41.414145      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:01:42.415057      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:01:43.415287      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:01:44.415528      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:01:45.416656      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:01:46.417745      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:01:47.417896      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:01:48.418200      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:01:49.418629      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:01:50.418811      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:01:51.419318      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:01:52.419841      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:01:53.420638      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:01:54.420940      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:01:55.421764      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:01:56.422212      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:01:57.423305      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:01:58.424243      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:01:59.424834      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:02:00.425634      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:02:01.426643      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:02:02.427738      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:02:03.428675      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:02:04.428925      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:02:05.429340      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:02:06.429651      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:02:07.430142      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:02:08.430277      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:02:09.341: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5264" for this suite. @ 09/13/24 13:02:09.345
• [84.429 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:793
  STEP: Creating a kubernetes client @ 09/13/24 13:02:09.352
  Sep 13 13:02:09.352: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename statefulset @ 09/13/24 13:02:09.353
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:02:09.375
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:02:09.377
  STEP: Creating service test in namespace statefulset-2592 @ 09/13/24 13:02:09.379
  STEP: Looking for a node to schedule stateful set and pod @ 09/13/24 13:02:09.384
  STEP: Creating pod with conflicting port in namespace statefulset-2592 @ 09/13/24 13:02:09.388
  STEP: Waiting until pod test-pod will start running in namespace statefulset-2592 @ 09/13/24 13:02:09.4
  E0913 13:02:09.430818      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:02:10.431059      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating statefulset with conflicting port in namespace statefulset-2592 @ 09/13/24 13:02:11.406
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-2592 @ 09/13/24 13:02:11.412
  Sep 13 13:02:11.427: INFO: Observed stateful pod in namespace: statefulset-2592, name: ss-0, uid: ed2f3a21-5629-4e9b-981d-a748d4888557, status phase: Pending. Waiting for statefulset controller to delete.
  E0913 13:02:11.431149      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:02:11.452: INFO: Observed stateful pod in namespace: statefulset-2592, name: ss-0, uid: ed2f3a21-5629-4e9b-981d-a748d4888557, status phase: Failed. Waiting for statefulset controller to delete.
  Sep 13 13:02:11.463: INFO: Observed stateful pod in namespace: statefulset-2592, name: ss-0, uid: ed2f3a21-5629-4e9b-981d-a748d4888557, status phase: Failed. Waiting for statefulset controller to delete.
  Sep 13 13:02:11.471: INFO: Observed delete event for stateful pod ss-0 in namespace statefulset-2592
  STEP: Removing pod with conflicting port in namespace statefulset-2592 @ 09/13/24 13:02:11.471
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-2592 and will be in running state @ 09/13/24 13:02:11.494
  E0913 13:02:12.431192      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:02:13.431930      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:02:13.518: INFO: Deleting all statefulset in ns statefulset-2592
  Sep 13 13:02:13.520: INFO: Scaling statefulset ss to 0
  E0913 13:02:14.432944      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:02:15.433370      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:02:16.433619      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:02:17.433743      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:02:18.434760      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:02:19.435393      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:02:20.435753      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:02:21.436413      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:02:22.437250      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:02:23.437615      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:02:23.534: INFO: Waiting for statefulset status.replicas updated to 0
  Sep 13 13:02:23.536: INFO: Deleting statefulset ss
  Sep 13 13:02:23.550: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-2592" for this suite. @ 09/13/24 13:02:23.556
• [14.210 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:324
  STEP: Creating a kubernetes client @ 09/13/24 13:02:23.564
  Sep 13 13:02:23.564: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename cronjob @ 09/13/24 13:02:23.564
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:02:23.586
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:02:23.589
  STEP: Creating a cronjob @ 09/13/24 13:02:23.593
  STEP: creating @ 09/13/24 13:02:23.593
  STEP: getting @ 09/13/24 13:02:23.605
  STEP: listing @ 09/13/24 13:02:23.608
  STEP: watching @ 09/13/24 13:02:23.61
  Sep 13 13:02:23.610: INFO: starting watch
  STEP: cluster-wide listing @ 09/13/24 13:02:23.611
  STEP: cluster-wide watching @ 09/13/24 13:02:23.614
  Sep 13 13:02:23.614: INFO: starting watch
  STEP: patching @ 09/13/24 13:02:23.615
  STEP: updating @ 09/13/24 13:02:23.622
  Sep 13 13:02:23.631: INFO: waiting for watch events with expected annotations
  Sep 13 13:02:23.631: INFO: saw patched and updated annotations
  STEP: patching /status @ 09/13/24 13:02:23.631
  STEP: updating /status @ 09/13/24 13:02:23.641
  STEP: get /status @ 09/13/24 13:02:23.646
  STEP: deleting @ 09/13/24 13:02:23.647
  STEP: deleting a collection @ 09/13/24 13:02:23.66
  Sep 13 13:02:23.667: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-5599" for this suite. @ 09/13/24 13:02:23.67
• [0.119 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:141
  STEP: Creating a kubernetes client @ 09/13/24 13:02:23.684
  Sep 13 13:02:23.684: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename disruption @ 09/13/24 13:02:23.685
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:02:23.702
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:02:23.705
  STEP: Waiting for the pdb to be processed @ 09/13/24 13:02:23.715
  E0913 13:02:24.438426      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:02:25.439017      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for all pods to be running @ 09/13/24 13:02:25.747
  Sep 13 13:02:25.752: INFO: running pods: 0 < 3
  E0913 13:02:26.439973      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:02:27.440156      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:02:27.752: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-5637" for this suite. @ 09/13/24 13:02:27.756
• [4.078 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:190
  STEP: Creating a kubernetes client @ 09/13/24 13:02:27.764
  Sep 13 13:02:27.764: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename emptydir @ 09/13/24 13:02:27.765
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:02:27.778
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:02:27.783
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 09/13/24 13:02:27.786
  E0913 13:02:28.440926      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:02:29.441347      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:02:30.442252      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:02:31.442588      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/13/24 13:02:31.804
  Sep 13 13:02:31.806: INFO: Trying to get logs from node cncf-3 pod pod-26f41e94-2c04-4164-8b8c-d8138ecd7e0b container test-container: <nil>
  STEP: delete the pod @ 09/13/24 13:02:31.816
  Sep 13 13:02:31.835: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4139" for this suite. @ 09/13/24 13:02:31.839
• [4.081 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:96
  STEP: Creating a kubernetes client @ 09/13/24 13:02:31.844
  Sep 13 13:02:31.844: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename pod-network-test @ 09/13/24 13:02:31.845
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:02:31.856
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:02:31.859
  STEP: Performing setup for networking test in namespace pod-network-test-9630 @ 09/13/24 13:02:31.862
  STEP: creating a selector @ 09/13/24 13:02:31.862
  STEP: Creating the service pods in kubernetes @ 09/13/24 13:02:31.862
  Sep 13 13:02:31.862: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0913 13:02:32.443201      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:02:33.443882      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:02:34.444302      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:02:35.445292      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:02:36.445473      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:02:37.446030      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:02:38.446230      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:02:39.446361      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:02:40.447365      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:02:41.447597      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:02:42.448211      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:02:43.448636      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 09/13/24 13:02:43.956
  E0913 13:02:44.448758      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:02:45.449204      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:02:45.976: INFO: Setting MaxTries for pod polling to 46 for networking test based on endpoint count 4
  Sep 13 13:02:45.976: INFO: Breadth first check of 10.0.4.172 on host 172.10.50.163...
  Sep 13 13:02:45.978: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.0.1.230:9080/dial?request=hostname&protocol=udp&host=10.0.4.172&port=8081&tries=1'] Namespace:pod-network-test-9630 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 13 13:02:45.978: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  Sep 13 13:02:45.979: INFO: ExecWithOptions: Clientset creation
  Sep 13 13:02:45.979: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-9630/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.0.1.230%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.0.4.172%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Sep 13 13:02:46.025: INFO: Waiting for responses: map[]
  Sep 13 13:02:46.025: INFO: reached 10.0.4.172 after 0/1 tries
  Sep 13 13:02:46.025: INFO: Breadth first check of 10.0.1.83 on host 172.10.50.243...
  Sep 13 13:02:46.029: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.0.1.230:9080/dial?request=hostname&protocol=udp&host=10.0.1.83&port=8081&tries=1'] Namespace:pod-network-test-9630 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 13 13:02:46.029: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  Sep 13 13:02:46.029: INFO: ExecWithOptions: Clientset creation
  Sep 13 13:02:46.029: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-9630/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.0.1.230%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.0.1.83%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Sep 13 13:02:46.072: INFO: Waiting for responses: map[]
  Sep 13 13:02:46.072: INFO: reached 10.0.1.83 after 0/1 tries
  Sep 13 13:02:46.072: INFO: Breadth first check of 10.0.3.10 on host 172.10.50.34...
  Sep 13 13:02:46.075: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.0.1.230:9080/dial?request=hostname&protocol=udp&host=10.0.3.10&port=8081&tries=1'] Namespace:pod-network-test-9630 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 13 13:02:46.075: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  Sep 13 13:02:46.075: INFO: ExecWithOptions: Clientset creation
  Sep 13 13:02:46.076: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-9630/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.0.1.230%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.0.3.10%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Sep 13 13:02:46.114: INFO: Waiting for responses: map[]
  Sep 13 13:02:46.114: INFO: reached 10.0.3.10 after 0/1 tries
  Sep 13 13:02:46.114: INFO: Breadth first check of 10.0.0.209 on host 172.10.50.77...
  Sep 13 13:02:46.118: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.0.1.230:9080/dial?request=hostname&protocol=udp&host=10.0.0.209&port=8081&tries=1'] Namespace:pod-network-test-9630 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 13 13:02:46.118: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  Sep 13 13:02:46.118: INFO: ExecWithOptions: Clientset creation
  Sep 13 13:02:46.119: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-9630/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.0.1.230%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.0.0.209%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Sep 13 13:02:46.164: INFO: Waiting for responses: map[]
  Sep 13 13:02:46.164: INFO: reached 10.0.0.209 after 0/1 tries
  Sep 13 13:02:46.164: INFO: Going to retry 0 out of 4 pods....
  Sep 13 13:02:46.164: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-9630" for this suite. @ 09/13/24 13:02:46.168
• [14.329 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:151
  STEP: Creating a kubernetes client @ 09/13/24 13:02:46.174
  Sep 13 13:02:46.174: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename container-probe @ 09/13/24 13:02:46.174
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:02:46.19
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:02:46.192
  STEP: Creating pod busybox-32ee266d-7711-49d2-90d9-ff3d25795e34 in namespace container-probe-1131 @ 09/13/24 13:02:46.195
  E0913 13:02:46.449997      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:02:47.450076      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/13/24 13:02:48.205
  Sep 13 13:02:48.208: INFO: Initial restart count of pod busybox-32ee266d-7711-49d2-90d9-ff3d25795e34 is 0
  Sep 13 13:02:48.210: INFO: Get pod busybox-32ee266d-7711-49d2-90d9-ff3d25795e34 in namespace container-probe-1131
  E0913 13:02:48.450152      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:02:49.450374      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:02:50.214: INFO: Get pod busybox-32ee266d-7711-49d2-90d9-ff3d25795e34 in namespace container-probe-1131
  E0913 13:02:50.450833      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:02:51.450993      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:02:52.218: INFO: Get pod busybox-32ee266d-7711-49d2-90d9-ff3d25795e34 in namespace container-probe-1131
  E0913 13:02:52.451458      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:02:53.451869      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:02:54.223: INFO: Get pod busybox-32ee266d-7711-49d2-90d9-ff3d25795e34 in namespace container-probe-1131
  E0913 13:02:54.452691      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:02:55.452866      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:02:56.227: INFO: Get pod busybox-32ee266d-7711-49d2-90d9-ff3d25795e34 in namespace container-probe-1131
  E0913 13:02:56.453835      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:02:57.454375      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:02:58.232: INFO: Get pod busybox-32ee266d-7711-49d2-90d9-ff3d25795e34 in namespace container-probe-1131
  E0913 13:02:58.454887      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:02:59.455087      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:03:00.236: INFO: Get pod busybox-32ee266d-7711-49d2-90d9-ff3d25795e34 in namespace container-probe-1131
  E0913 13:03:00.455697      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:03:01.455883      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:03:02.239: INFO: Get pod busybox-32ee266d-7711-49d2-90d9-ff3d25795e34 in namespace container-probe-1131
  E0913 13:03:02.456372      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:03:03.456465      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:03:04.243: INFO: Get pod busybox-32ee266d-7711-49d2-90d9-ff3d25795e34 in namespace container-probe-1131
  E0913 13:03:04.456698      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:03:05.456818      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:03:06.247: INFO: Get pod busybox-32ee266d-7711-49d2-90d9-ff3d25795e34 in namespace container-probe-1131
  E0913 13:03:06.457530      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:03:07.458313      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:03:08.250: INFO: Get pod busybox-32ee266d-7711-49d2-90d9-ff3d25795e34 in namespace container-probe-1131
  E0913 13:03:08.458893      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:03:09.459190      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:03:10.254: INFO: Get pod busybox-32ee266d-7711-49d2-90d9-ff3d25795e34 in namespace container-probe-1131
  E0913 13:03:10.459518      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:03:11.459614      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:03:12.257: INFO: Get pod busybox-32ee266d-7711-49d2-90d9-ff3d25795e34 in namespace container-probe-1131
  E0913 13:03:12.460104      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:03:13.460597      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:03:14.262: INFO: Get pod busybox-32ee266d-7711-49d2-90d9-ff3d25795e34 in namespace container-probe-1131
  E0913 13:03:14.461522      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:03:15.461971      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:03:16.265: INFO: Get pod busybox-32ee266d-7711-49d2-90d9-ff3d25795e34 in namespace container-probe-1131
  E0913 13:03:16.462921      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:03:17.463872      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:03:18.268: INFO: Get pod busybox-32ee266d-7711-49d2-90d9-ff3d25795e34 in namespace container-probe-1131
  E0913 13:03:18.464755      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:03:19.465014      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:03:20.272: INFO: Get pod busybox-32ee266d-7711-49d2-90d9-ff3d25795e34 in namespace container-probe-1131
  E0913 13:03:20.465470      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:03:21.465705      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:03:22.275: INFO: Get pod busybox-32ee266d-7711-49d2-90d9-ff3d25795e34 in namespace container-probe-1131
  E0913 13:03:22.466174      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:03:23.466346      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:03:24.279: INFO: Get pod busybox-32ee266d-7711-49d2-90d9-ff3d25795e34 in namespace container-probe-1131
  E0913 13:03:24.467271      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:03:25.468317      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:03:26.283: INFO: Get pod busybox-32ee266d-7711-49d2-90d9-ff3d25795e34 in namespace container-probe-1131
  E0913 13:03:26.468939      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:03:27.469305      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:03:28.287: INFO: Get pod busybox-32ee266d-7711-49d2-90d9-ff3d25795e34 in namespace container-probe-1131
  E0913 13:03:28.470322      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:03:29.470469      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:03:30.294: INFO: Get pod busybox-32ee266d-7711-49d2-90d9-ff3d25795e34 in namespace container-probe-1131
  E0913 13:03:30.471262      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:03:31.471502      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:03:32.297: INFO: Get pod busybox-32ee266d-7711-49d2-90d9-ff3d25795e34 in namespace container-probe-1131
  E0913 13:03:32.472352      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:03:33.472652      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:03:34.302: INFO: Get pod busybox-32ee266d-7711-49d2-90d9-ff3d25795e34 in namespace container-probe-1131
  E0913 13:03:34.473677      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:03:35.473903      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:03:36.307: INFO: Get pod busybox-32ee266d-7711-49d2-90d9-ff3d25795e34 in namespace container-probe-1131
  E0913 13:03:36.473857      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:03:37.474540      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:03:38.312: INFO: Get pod busybox-32ee266d-7711-49d2-90d9-ff3d25795e34 in namespace container-probe-1131
  E0913 13:03:38.475316      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:03:39.475548      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:03:40.315: INFO: Get pod busybox-32ee266d-7711-49d2-90d9-ff3d25795e34 in namespace container-probe-1131
  E0913 13:03:40.476508      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:03:41.477452      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:03:42.320: INFO: Get pod busybox-32ee266d-7711-49d2-90d9-ff3d25795e34 in namespace container-probe-1131
  E0913 13:03:42.478093      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:03:43.478927      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:03:44.324: INFO: Get pod busybox-32ee266d-7711-49d2-90d9-ff3d25795e34 in namespace container-probe-1131
  E0913 13:03:44.479269      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:03:45.479637      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:03:46.329: INFO: Get pod busybox-32ee266d-7711-49d2-90d9-ff3d25795e34 in namespace container-probe-1131
  E0913 13:03:46.480540      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:03:47.481352      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:03:48.333: INFO: Get pod busybox-32ee266d-7711-49d2-90d9-ff3d25795e34 in namespace container-probe-1131
  E0913 13:03:48.481463      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:03:49.482020      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:03:50.336: INFO: Get pod busybox-32ee266d-7711-49d2-90d9-ff3d25795e34 in namespace container-probe-1131
  E0913 13:03:50.482808      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:03:51.483410      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:03:52.341: INFO: Get pod busybox-32ee266d-7711-49d2-90d9-ff3d25795e34 in namespace container-probe-1131
  E0913 13:03:52.484188      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:03:53.484975      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:03:54.345: INFO: Get pod busybox-32ee266d-7711-49d2-90d9-ff3d25795e34 in namespace container-probe-1131
  E0913 13:03:54.485751      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:03:55.485852      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:03:56.349: INFO: Get pod busybox-32ee266d-7711-49d2-90d9-ff3d25795e34 in namespace container-probe-1131
  E0913 13:03:56.486261      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:03:57.486262      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:03:58.353: INFO: Get pod busybox-32ee266d-7711-49d2-90d9-ff3d25795e34 in namespace container-probe-1131
  E0913 13:03:58.487034      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:03:59.487501      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:04:00.356: INFO: Get pod busybox-32ee266d-7711-49d2-90d9-ff3d25795e34 in namespace container-probe-1131
  E0913 13:04:00.488040      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:04:01.488458      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:04:02.360: INFO: Get pod busybox-32ee266d-7711-49d2-90d9-ff3d25795e34 in namespace container-probe-1131
  E0913 13:04:02.489511      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:04:03.489780      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:04:04.365: INFO: Get pod busybox-32ee266d-7711-49d2-90d9-ff3d25795e34 in namespace container-probe-1131
  E0913 13:04:04.490336      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:04:05.491375      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:04:06.368: INFO: Get pod busybox-32ee266d-7711-49d2-90d9-ff3d25795e34 in namespace container-probe-1131
  E0913 13:04:06.492367      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:04:07.492400      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:04:08.373: INFO: Get pod busybox-32ee266d-7711-49d2-90d9-ff3d25795e34 in namespace container-probe-1131
  E0913 13:04:08.493072      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:04:09.493468      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:04:10.420: INFO: Get pod busybox-32ee266d-7711-49d2-90d9-ff3d25795e34 in namespace container-probe-1131
  E0913 13:04:10.494194      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:04:11.494610      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:04:12.426: INFO: Get pod busybox-32ee266d-7711-49d2-90d9-ff3d25795e34 in namespace container-probe-1131
  E0913 13:04:12.495320      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:04:13.495559      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:04:14.433: INFO: Get pod busybox-32ee266d-7711-49d2-90d9-ff3d25795e34 in namespace container-probe-1131
  E0913 13:04:14.496253      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:04:15.496877      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:04:16.437: INFO: Get pod busybox-32ee266d-7711-49d2-90d9-ff3d25795e34 in namespace container-probe-1131
  E0913 13:04:16.497839      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:04:17.498310      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:04:18.441: INFO: Get pod busybox-32ee266d-7711-49d2-90d9-ff3d25795e34 in namespace container-probe-1131
  E0913 13:04:18.499107      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:04:19.499404      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:04:20.443: INFO: Get pod busybox-32ee266d-7711-49d2-90d9-ff3d25795e34 in namespace container-probe-1131
  E0913 13:04:20.499935      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:04:21.500264      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:04:22.447: INFO: Get pod busybox-32ee266d-7711-49d2-90d9-ff3d25795e34 in namespace container-probe-1131
  E0913 13:04:22.501242      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:04:23.501416      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:04:24.450: INFO: Get pod busybox-32ee266d-7711-49d2-90d9-ff3d25795e34 in namespace container-probe-1131
  E0913 13:04:24.501943      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:04:25.502280      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:04:26.497: INFO: Get pod busybox-32ee266d-7711-49d2-90d9-ff3d25795e34 in namespace container-probe-1131
  E0913 13:04:26.502804      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:04:27.503448      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:04:28.502: INFO: Get pod busybox-32ee266d-7711-49d2-90d9-ff3d25795e34 in namespace container-probe-1131
  E0913 13:04:28.503824      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:04:29.503987      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:04:30.503864      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:04:30.507: INFO: Get pod busybox-32ee266d-7711-49d2-90d9-ff3d25795e34 in namespace container-probe-1131
  E0913 13:04:31.504370      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:04:32.505392      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:04:32.511: INFO: Get pod busybox-32ee266d-7711-49d2-90d9-ff3d25795e34 in namespace container-probe-1131
  E0913 13:04:33.506299      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:04:34.506632      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:04:34.514: INFO: Get pod busybox-32ee266d-7711-49d2-90d9-ff3d25795e34 in namespace container-probe-1131
  E0913 13:04:35.506785      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:04:36.507352      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:04:36.518: INFO: Get pod busybox-32ee266d-7711-49d2-90d9-ff3d25795e34 in namespace container-probe-1131
  E0913 13:04:37.507998      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:04:38.508921      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:04:38.522: INFO: Get pod busybox-32ee266d-7711-49d2-90d9-ff3d25795e34 in namespace container-probe-1131
  E0913 13:04:39.509559      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:04:40.509962      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:04:40.525: INFO: Get pod busybox-32ee266d-7711-49d2-90d9-ff3d25795e34 in namespace container-probe-1131
  E0913 13:04:41.510976      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:04:42.511412      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:04:42.530: INFO: Get pod busybox-32ee266d-7711-49d2-90d9-ff3d25795e34 in namespace container-probe-1131
  E0913 13:04:43.511895      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:04:44.512952      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:04:44.540: INFO: Get pod busybox-32ee266d-7711-49d2-90d9-ff3d25795e34 in namespace container-probe-1131
  E0913 13:04:45.513788      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:04:46.514155      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:04:46.558: INFO: Get pod busybox-32ee266d-7711-49d2-90d9-ff3d25795e34 in namespace container-probe-1131
  E0913 13:04:47.514382      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:04:48.514541      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:04:48.563: INFO: Get pod busybox-32ee266d-7711-49d2-90d9-ff3d25795e34 in namespace container-probe-1131
  E0913 13:04:49.514556      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:04:50.514755      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:04:50.567: INFO: Get pod busybox-32ee266d-7711-49d2-90d9-ff3d25795e34 in namespace container-probe-1131
  E0913 13:04:51.515462      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:04:52.515770      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:04:52.571: INFO: Get pod busybox-32ee266d-7711-49d2-90d9-ff3d25795e34 in namespace container-probe-1131
  E0913 13:04:53.515887      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:04:54.516012      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:04:54.575: INFO: Get pod busybox-32ee266d-7711-49d2-90d9-ff3d25795e34 in namespace container-probe-1131
  E0913 13:04:55.516256      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:04:56.516675      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:04:56.578: INFO: Get pod busybox-32ee266d-7711-49d2-90d9-ff3d25795e34 in namespace container-probe-1131
  E0913 13:04:57.516651      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:04:58.516865      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:04:58.582: INFO: Get pod busybox-32ee266d-7711-49d2-90d9-ff3d25795e34 in namespace container-probe-1131
  E0913 13:04:59.516890      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:05:00.517071      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:05:00.586: INFO: Get pod busybox-32ee266d-7711-49d2-90d9-ff3d25795e34 in namespace container-probe-1131
  E0913 13:05:01.517347      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:05:02.517416      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:05:02.589: INFO: Get pod busybox-32ee266d-7711-49d2-90d9-ff3d25795e34 in namespace container-probe-1131
  E0913 13:05:03.517544      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:05:04.517630      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:05:04.593: INFO: Get pod busybox-32ee266d-7711-49d2-90d9-ff3d25795e34 in namespace container-probe-1131
  E0913 13:05:05.517735      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:05:06.518056      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:05:06.595: INFO: Get pod busybox-32ee266d-7711-49d2-90d9-ff3d25795e34 in namespace container-probe-1131
  E0913 13:05:07.518805      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:05:08.519278      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:05:08.600: INFO: Get pod busybox-32ee266d-7711-49d2-90d9-ff3d25795e34 in namespace container-probe-1131
  E0913 13:05:09.520153      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:05:10.520216      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:05:10.604: INFO: Get pod busybox-32ee266d-7711-49d2-90d9-ff3d25795e34 in namespace container-probe-1131
  E0913 13:05:11.521062      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:05:12.521491      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:05:12.608: INFO: Get pod busybox-32ee266d-7711-49d2-90d9-ff3d25795e34 in namespace container-probe-1131
  E0913 13:05:13.521620      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:05:14.522623      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:05:14.615: INFO: Get pod busybox-32ee266d-7711-49d2-90d9-ff3d25795e34 in namespace container-probe-1131
  E0913 13:05:15.522665      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:05:16.523182      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:05:16.619: INFO: Get pod busybox-32ee266d-7711-49d2-90d9-ff3d25795e34 in namespace container-probe-1131
  E0913 13:05:17.523724      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:05:18.524605      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:05:18.623: INFO: Get pod busybox-32ee266d-7711-49d2-90d9-ff3d25795e34 in namespace container-probe-1131
  E0913 13:05:19.525075      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:05:20.525374      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:05:20.626: INFO: Get pod busybox-32ee266d-7711-49d2-90d9-ff3d25795e34 in namespace container-probe-1131
  E0913 13:05:21.526330      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:05:22.526842      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:05:22.629: INFO: Get pod busybox-32ee266d-7711-49d2-90d9-ff3d25795e34 in namespace container-probe-1131
  E0913 13:05:23.526878      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:05:24.527359      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:05:24.633: INFO: Get pod busybox-32ee266d-7711-49d2-90d9-ff3d25795e34 in namespace container-probe-1131
  E0913 13:05:25.527447      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:05:26.527752      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:05:26.637: INFO: Get pod busybox-32ee266d-7711-49d2-90d9-ff3d25795e34 in namespace container-probe-1131
  E0913 13:05:27.528227      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:05:28.528541      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:05:28.640: INFO: Get pod busybox-32ee266d-7711-49d2-90d9-ff3d25795e34 in namespace container-probe-1131
  E0913 13:05:29.528588      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:05:30.528968      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:05:30.644: INFO: Get pod busybox-32ee266d-7711-49d2-90d9-ff3d25795e34 in namespace container-probe-1131
  E0913 13:05:31.529664      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:05:32.529683      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:05:32.707: INFO: Get pod busybox-32ee266d-7711-49d2-90d9-ff3d25795e34 in namespace container-probe-1131
  E0913 13:05:33.529794      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:05:34.530117      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:05:34.711: INFO: Get pod busybox-32ee266d-7711-49d2-90d9-ff3d25795e34 in namespace container-probe-1131
  E0913 13:05:35.530272      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:05:36.530357      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:05:36.715: INFO: Get pod busybox-32ee266d-7711-49d2-90d9-ff3d25795e34 in namespace container-probe-1131
  E0913 13:05:37.530463      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:05:38.531161      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:05:38.720: INFO: Get pod busybox-32ee266d-7711-49d2-90d9-ff3d25795e34 in namespace container-probe-1131
  E0913 13:05:39.531194      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:05:40.532122      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:05:40.724: INFO: Get pod busybox-32ee266d-7711-49d2-90d9-ff3d25795e34 in namespace container-probe-1131
  E0913 13:05:41.532961      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:05:42.533359      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:05:42.727: INFO: Get pod busybox-32ee266d-7711-49d2-90d9-ff3d25795e34 in namespace container-probe-1131
  E0913 13:05:43.533438      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:05:44.534101      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:05:44.732: INFO: Get pod busybox-32ee266d-7711-49d2-90d9-ff3d25795e34 in namespace container-probe-1131
  E0913 13:05:45.535046      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:05:46.535261      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:05:46.735: INFO: Get pod busybox-32ee266d-7711-49d2-90d9-ff3d25795e34 in namespace container-probe-1131
  E0913 13:05:47.536223      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:05:48.536388      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:05:48.739: INFO: Get pod busybox-32ee266d-7711-49d2-90d9-ff3d25795e34 in namespace container-probe-1131
  E0913 13:05:49.536644      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:05:50.537007      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:05:50.745: INFO: Get pod busybox-32ee266d-7711-49d2-90d9-ff3d25795e34 in namespace container-probe-1131
  E0913 13:05:51.537783      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:05:52.538142      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:05:52.748: INFO: Get pod busybox-32ee266d-7711-49d2-90d9-ff3d25795e34 in namespace container-probe-1131
  E0913 13:05:53.538252      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:05:54.538445      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:05:54.751: INFO: Get pod busybox-32ee266d-7711-49d2-90d9-ff3d25795e34 in namespace container-probe-1131
  E0913 13:05:55.539179      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:05:56.539305      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:05:56.755: INFO: Get pod busybox-32ee266d-7711-49d2-90d9-ff3d25795e34 in namespace container-probe-1131
  E0913 13:05:57.539469      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:05:58.540084      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:05:58.759: INFO: Get pod busybox-32ee266d-7711-49d2-90d9-ff3d25795e34 in namespace container-probe-1131
  E0913 13:05:59.540077      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:06:00.540121      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:06:00.762: INFO: Get pod busybox-32ee266d-7711-49d2-90d9-ff3d25795e34 in namespace container-probe-1131
  E0913 13:06:01.540445      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:06:02.540535      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:06:02.766: INFO: Get pod busybox-32ee266d-7711-49d2-90d9-ff3d25795e34 in namespace container-probe-1131
  E0913 13:06:03.540638      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:06:04.541082      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:06:04.770: INFO: Get pod busybox-32ee266d-7711-49d2-90d9-ff3d25795e34 in namespace container-probe-1131
  E0913 13:06:05.541195      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:06:06.541337      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:06:06.773: INFO: Get pod busybox-32ee266d-7711-49d2-90d9-ff3d25795e34 in namespace container-probe-1131
  E0913 13:06:07.541473      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:06:08.541982      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:06:08.777: INFO: Get pod busybox-32ee266d-7711-49d2-90d9-ff3d25795e34 in namespace container-probe-1131
  E0913 13:06:09.543124      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:06:10.543204      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:06:10.780: INFO: Get pod busybox-32ee266d-7711-49d2-90d9-ff3d25795e34 in namespace container-probe-1131
  E0913 13:06:11.543301      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:06:12.543407      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:06:12.784: INFO: Get pod busybox-32ee266d-7711-49d2-90d9-ff3d25795e34 in namespace container-probe-1131
  E0913 13:06:13.543611      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:06:14.543916      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:06:14.789: INFO: Get pod busybox-32ee266d-7711-49d2-90d9-ff3d25795e34 in namespace container-probe-1131
  E0913 13:06:15.544876      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:06:16.544996      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:06:16.793: INFO: Get pod busybox-32ee266d-7711-49d2-90d9-ff3d25795e34 in namespace container-probe-1131
  E0913 13:06:17.545235      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:06:18.545423      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:06:18.797: INFO: Get pod busybox-32ee266d-7711-49d2-90d9-ff3d25795e34 in namespace container-probe-1131
  E0913 13:06:19.545574      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:06:20.545699      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:06:20.801: INFO: Get pod busybox-32ee266d-7711-49d2-90d9-ff3d25795e34 in namespace container-probe-1131
  E0913 13:06:21.546400      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:06:22.546365      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:06:22.805: INFO: Get pod busybox-32ee266d-7711-49d2-90d9-ff3d25795e34 in namespace container-probe-1131
  E0913 13:06:23.546657      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:06:24.546830      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:06:24.810: INFO: Get pod busybox-32ee266d-7711-49d2-90d9-ff3d25795e34 in namespace container-probe-1131
  E0913 13:06:25.547030      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:06:26.547416      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:06:26.813: INFO: Get pod busybox-32ee266d-7711-49d2-90d9-ff3d25795e34 in namespace container-probe-1131
  E0913 13:06:27.547592      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:06:28.547880      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:06:28.816: INFO: Get pod busybox-32ee266d-7711-49d2-90d9-ff3d25795e34 in namespace container-probe-1131
  E0913 13:06:29.548518      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:06:30.548790      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:06:30.820: INFO: Get pod busybox-32ee266d-7711-49d2-90d9-ff3d25795e34 in namespace container-probe-1131
  E0913 13:06:31.549238      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:06:32.549433      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:06:32.824: INFO: Get pod busybox-32ee266d-7711-49d2-90d9-ff3d25795e34 in namespace container-probe-1131
  E0913 13:06:33.549703      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:06:34.550179      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:06:34.828: INFO: Get pod busybox-32ee266d-7711-49d2-90d9-ff3d25795e34 in namespace container-probe-1131
  E0913 13:06:35.550878      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:06:36.551095      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:06:36.837: INFO: Get pod busybox-32ee266d-7711-49d2-90d9-ff3d25795e34 in namespace container-probe-1131
  E0913 13:06:37.551166      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:06:38.551223      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:06:38.841: INFO: Get pod busybox-32ee266d-7711-49d2-90d9-ff3d25795e34 in namespace container-probe-1131
  E0913 13:06:39.552009      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:06:40.552199      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:06:40.845: INFO: Get pod busybox-32ee266d-7711-49d2-90d9-ff3d25795e34 in namespace container-probe-1131
  E0913 13:06:41.552473      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:06:42.552605      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:06:42.850: INFO: Get pod busybox-32ee266d-7711-49d2-90d9-ff3d25795e34 in namespace container-probe-1131
  E0913 13:06:43.553095      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:06:44.553413      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:06:44.854: INFO: Get pod busybox-32ee266d-7711-49d2-90d9-ff3d25795e34 in namespace container-probe-1131
  E0913 13:06:45.554256      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:06:46.554351      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:06:46.860: INFO: Get pod busybox-32ee266d-7711-49d2-90d9-ff3d25795e34 in namespace container-probe-1131
  E0913 13:06:47.555083      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:06:48.555294      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 09/13/24 13:06:48.861
  Sep 13 13:06:48.882: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-1131" for this suite. @ 09/13/24 13:06:48.887
• [242.727 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 09/13/24 13:06:48.901
  Sep 13 13:06:48.901: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename projected @ 09/13/24 13:06:48.902
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:06:48.918
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:06:48.921
  STEP: Creating projection with secret that has name projected-secret-test-4d04907c-ae9a-4a11-aa52-695eac5c890b @ 09/13/24 13:06:48.923
  STEP: Creating a pod to test consume secrets @ 09/13/24 13:06:48.929
  E0913 13:06:49.555300      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:06:50.555403      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:06:51.556039      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:06:52.556456      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/13/24 13:06:52.952
  Sep 13 13:06:52.954: INFO: Trying to get logs from node cncf-3 pod pod-projected-secrets-782e0c8d-aa68-4228-b676-df1863e34349 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/13/24 13:06:52.966
  Sep 13 13:06:52.990: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3570" for this suite. @ 09/13/24 13:06:52.995
• [4.100 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:153
  STEP: Creating a kubernetes client @ 09/13/24 13:06:53.002
  Sep 13 13:06:53.003: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 09/13/24 13:06:53.005
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:06:53.024
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:06:53.026
  STEP: create the container to handle the HTTPGet hook request. @ 09/13/24 13:06:53.032
  E0913 13:06:53.557413      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:06:54.557670      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 09/13/24 13:06:55.05
  E0913 13:06:55.558557      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:06:56.558764      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 09/13/24 13:06:57.073
  E0913 13:06:57.558889      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:06:58.559102      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 09/13/24 13:06:59.094
  Sep 13 13:06:59.109: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-6689" for this suite. @ 09/13/24 13:06:59.113
• [6.115 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 09/13/24 13:06:59.118
  Sep 13 13:06:59.118: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename daemonsets @ 09/13/24 13:06:59.12
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:06:59.14
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:06:59.142
  Sep 13 13:06:59.158: INFO: Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 09/13/24 13:06:59.17
  Sep 13 13:06:59.172: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 13 13:06:59.172: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 09/13/24 13:06:59.173
  Sep 13 13:06:59.196: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 13 13:06:59.196: INFO: Node cncf-2 is running 0 daemon pod, expected 1
  E0913 13:06:59.559196      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:07:00.198: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 13 13:07:00.198: INFO: Node cncf-2 is running 0 daemon pod, expected 1
  E0913 13:07:00.560107      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:07:01.199: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Sep 13 13:07:01.199: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 09/13/24 13:07:01.201
  Sep 13 13:07:01.228: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Sep 13 13:07:01.228: INFO: Number of running nodes: 0, number of available pods: 1 in daemonset daemon-set
  E0913 13:07:01.560448      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:07:02.229: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 13 13:07:02.229: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 09/13/24 13:07:02.229
  Sep 13 13:07:02.246: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 13 13:07:02.246: INFO: Node cncf-2 is running 0 daemon pod, expected 1
  E0913 13:07:02.560810      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:07:03.249: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 13 13:07:03.249: INFO: Node cncf-2 is running 0 daemon pod, expected 1
  E0913 13:07:03.561239      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:07:04.245: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 13 13:07:04.245: INFO: Node cncf-2 is running 0 daemon pod, expected 1
  E0913 13:07:04.562266      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:07:05.246: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Sep 13 13:07:05.246: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 09/13/24 13:07:05.25
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-5788, will wait for the garbage collector to delete the pods @ 09/13/24 13:07:05.25
  Sep 13 13:07:05.308: INFO: Deleting DaemonSet.extensions daemon-set took: 5.57436ms
  Sep 13 13:07:05.408: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.29586ms
  E0913 13:07:05.562451      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:07:06.562558      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:07:06.612: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 13 13:07:06.612: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Sep 13 13:07:06.621: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"731610"},"items":null}

  Sep 13 13:07:06.623: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"731610"},"items":null}

  Sep 13 13:07:06.654: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-5788" for this suite. @ 09/13/24 13:07:06.658
• [7.552 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:474
  STEP: Creating a kubernetes client @ 09/13/24 13:07:06.67
  Sep 13 13:07:06.670: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename field-validation @ 09/13/24 13:07:06.671
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:07:06.693
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:07:06.695
  Sep 13 13:07:06.699: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  E0913 13:07:07.563602      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:07:08.563849      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  W0913 13:07:09.244416      23 warnings.go:70] unknown field "alpha"
  W0913 13:07:09.244457      23 warnings.go:70] unknown field "beta"
  W0913 13:07:09.244464      23 warnings.go:70] unknown field "delta"
  W0913 13:07:09.244471      23 warnings.go:70] unknown field "epsilon"
  W0913 13:07:09.244476      23 warnings.go:70] unknown field "gamma"
  E0913 13:07:09.564349      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:07:09.789: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-6201" for this suite. @ 09/13/24 13:07:09.793
• [3.128 seconds]
------------------------------
SS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:136
  STEP: Creating a kubernetes client @ 09/13/24 13:07:09.799
  Sep 13 13:07:09.799: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 09/13/24 13:07:09.8
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:07:09.824
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:07:09.828
  STEP: create the container to handle the HTTPGet hook request. @ 09/13/24 13:07:09.833
  E0913 13:07:10.565102      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:07:11.565368      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 09/13/24 13:07:11.864
  E0913 13:07:12.565472      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:07:13.565857      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 09/13/24 13:07:13.959
  STEP: delete the pod with lifecycle hook @ 09/13/24 13:07:13.964
  E0913 13:07:14.566716      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:07:15.566904      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:07:15.977: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-7363" for this suite. @ 09/13/24 13:07:15.981
• [6.189 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:183
  STEP: Creating a kubernetes client @ 09/13/24 13:07:15.988
  Sep 13 13:07:15.988: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename container-probe @ 09/13/24 13:07:15.989
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:07:16.011
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:07:16.014
  STEP: Creating pod liveness-27161ed6-2490-43c8-9cb3-dcac4e349aeb in namespace container-probe-9982 @ 09/13/24 13:07:16.022
  E0913 13:07:16.567847      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:07:17.568763      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/13/24 13:07:18.034
  Sep 13 13:07:18.036: INFO: Initial restart count of pod liveness-27161ed6-2490-43c8-9cb3-dcac4e349aeb is 0
  Sep 13 13:07:18.038: INFO: Get pod liveness-27161ed6-2490-43c8-9cb3-dcac4e349aeb in namespace container-probe-9982
  E0913 13:07:18.569160      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:07:19.569282      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:07:20.042: INFO: Get pod liveness-27161ed6-2490-43c8-9cb3-dcac4e349aeb in namespace container-probe-9982
  E0913 13:07:20.569467      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:07:21.570335      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:07:22.045: INFO: Get pod liveness-27161ed6-2490-43c8-9cb3-dcac4e349aeb in namespace container-probe-9982
  E0913 13:07:22.571339      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:07:23.571470      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:07:24.049: INFO: Get pod liveness-27161ed6-2490-43c8-9cb3-dcac4e349aeb in namespace container-probe-9982
  E0913 13:07:24.571871      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:07:25.573040      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:07:26.052: INFO: Get pod liveness-27161ed6-2490-43c8-9cb3-dcac4e349aeb in namespace container-probe-9982
  E0913 13:07:26.573094      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:07:27.573795      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:07:28.057: INFO: Get pod liveness-27161ed6-2490-43c8-9cb3-dcac4e349aeb in namespace container-probe-9982
  E0913 13:07:28.574083      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:07:29.574435      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:07:30.062: INFO: Get pod liveness-27161ed6-2490-43c8-9cb3-dcac4e349aeb in namespace container-probe-9982
  E0913 13:07:30.575013      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:07:31.575509      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:07:32.066: INFO: Get pod liveness-27161ed6-2490-43c8-9cb3-dcac4e349aeb in namespace container-probe-9982
  E0913 13:07:32.576193      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:07:33.576982      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:07:34.070: INFO: Get pod liveness-27161ed6-2490-43c8-9cb3-dcac4e349aeb in namespace container-probe-9982
  E0913 13:07:34.577978      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:07:35.578073      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:07:36.076: INFO: Get pod liveness-27161ed6-2490-43c8-9cb3-dcac4e349aeb in namespace container-probe-9982
  E0913 13:07:36.578468      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:07:37.578822      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:07:38.080: INFO: Get pod liveness-27161ed6-2490-43c8-9cb3-dcac4e349aeb in namespace container-probe-9982
  E0913 13:07:38.579626      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:07:39.579921      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:07:40.085: INFO: Get pod liveness-27161ed6-2490-43c8-9cb3-dcac4e349aeb in namespace container-probe-9982
  E0913 13:07:40.580641      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:07:41.581164      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:07:42.089: INFO: Get pod liveness-27161ed6-2490-43c8-9cb3-dcac4e349aeb in namespace container-probe-9982
  E0913 13:07:42.582032      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:07:43.582318      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:07:44.093: INFO: Get pod liveness-27161ed6-2490-43c8-9cb3-dcac4e349aeb in namespace container-probe-9982
  E0913 13:07:44.583198      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:07:45.583566      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:07:46.098: INFO: Get pod liveness-27161ed6-2490-43c8-9cb3-dcac4e349aeb in namespace container-probe-9982
  E0913 13:07:46.584262      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:07:47.584801      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:07:48.103: INFO: Get pod liveness-27161ed6-2490-43c8-9cb3-dcac4e349aeb in namespace container-probe-9982
  E0913 13:07:48.585294      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:07:49.585484      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:07:50.109: INFO: Get pod liveness-27161ed6-2490-43c8-9cb3-dcac4e349aeb in namespace container-probe-9982
  E0913 13:07:50.585684      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:07:51.586187      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:07:52.113: INFO: Get pod liveness-27161ed6-2490-43c8-9cb3-dcac4e349aeb in namespace container-probe-9982
  E0913 13:07:52.586829      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:07:53.587336      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:07:54.117: INFO: Get pod liveness-27161ed6-2490-43c8-9cb3-dcac4e349aeb in namespace container-probe-9982
  E0913 13:07:54.588013      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:07:55.589045      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:07:56.121: INFO: Get pod liveness-27161ed6-2490-43c8-9cb3-dcac4e349aeb in namespace container-probe-9982
  E0913 13:07:56.589293      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:07:57.589460      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:07:58.125: INFO: Get pod liveness-27161ed6-2490-43c8-9cb3-dcac4e349aeb in namespace container-probe-9982
  E0913 13:07:58.590001      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:07:59.589754      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:08:00.128: INFO: Get pod liveness-27161ed6-2490-43c8-9cb3-dcac4e349aeb in namespace container-probe-9982
  E0913 13:08:00.594002      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:08:01.594441      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:08:02.132: INFO: Get pod liveness-27161ed6-2490-43c8-9cb3-dcac4e349aeb in namespace container-probe-9982
  E0913 13:08:02.594598      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:08:03.595128      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:08:04.136: INFO: Get pod liveness-27161ed6-2490-43c8-9cb3-dcac4e349aeb in namespace container-probe-9982
  E0913 13:08:04.595428      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:08:05.595996      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:08:06.141: INFO: Get pod liveness-27161ed6-2490-43c8-9cb3-dcac4e349aeb in namespace container-probe-9982
  E0913 13:08:06.597031      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:08:07.597514      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:08:08.144: INFO: Get pod liveness-27161ed6-2490-43c8-9cb3-dcac4e349aeb in namespace container-probe-9982
  E0913 13:08:08.598349      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:08:09.598342      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:08:10.148: INFO: Get pod liveness-27161ed6-2490-43c8-9cb3-dcac4e349aeb in namespace container-probe-9982
  E0913 13:08:10.598745      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:08:11.599180      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:08:12.151: INFO: Get pod liveness-27161ed6-2490-43c8-9cb3-dcac4e349aeb in namespace container-probe-9982
  E0913 13:08:12.599492      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:08:13.599762      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:08:14.154: INFO: Get pod liveness-27161ed6-2490-43c8-9cb3-dcac4e349aeb in namespace container-probe-9982
  E0913 13:08:14.600483      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:08:15.600664      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:08:16.159: INFO: Get pod liveness-27161ed6-2490-43c8-9cb3-dcac4e349aeb in namespace container-probe-9982
  E0913 13:08:16.600737      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:08:17.601007      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:08:18.162: INFO: Get pod liveness-27161ed6-2490-43c8-9cb3-dcac4e349aeb in namespace container-probe-9982
  E0913 13:08:18.601118      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:08:19.602139      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:08:20.166: INFO: Get pod liveness-27161ed6-2490-43c8-9cb3-dcac4e349aeb in namespace container-probe-9982
  E0913 13:08:20.602245      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:08:21.603216      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:08:22.171: INFO: Get pod liveness-27161ed6-2490-43c8-9cb3-dcac4e349aeb in namespace container-probe-9982
  E0913 13:08:22.603761      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:08:23.603900      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:08:24.174: INFO: Get pod liveness-27161ed6-2490-43c8-9cb3-dcac4e349aeb in namespace container-probe-9982
  E0913 13:08:24.604357      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:08:25.604968      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:08:26.178: INFO: Get pod liveness-27161ed6-2490-43c8-9cb3-dcac4e349aeb in namespace container-probe-9982
  E0913 13:08:26.605206      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:08:27.605315      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:08:28.181: INFO: Get pod liveness-27161ed6-2490-43c8-9cb3-dcac4e349aeb in namespace container-probe-9982
  E0913 13:08:28.605379      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:08:29.605740      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:08:30.191: INFO: Get pod liveness-27161ed6-2490-43c8-9cb3-dcac4e349aeb in namespace container-probe-9982
  E0913 13:08:30.606490      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:08:31.607175      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:08:32.196: INFO: Get pod liveness-27161ed6-2490-43c8-9cb3-dcac4e349aeb in namespace container-probe-9982
  E0913 13:08:32.607771      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:08:33.607957      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:08:34.201: INFO: Get pod liveness-27161ed6-2490-43c8-9cb3-dcac4e349aeb in namespace container-probe-9982
  E0913 13:08:34.611735      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:08:35.612188      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:08:36.205: INFO: Get pod liveness-27161ed6-2490-43c8-9cb3-dcac4e349aeb in namespace container-probe-9982
  E0913 13:08:36.613052      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:08:37.613731      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:08:38.209: INFO: Get pod liveness-27161ed6-2490-43c8-9cb3-dcac4e349aeb in namespace container-probe-9982
  E0913 13:08:38.614389      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:08:39.614578      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:08:40.214: INFO: Get pod liveness-27161ed6-2490-43c8-9cb3-dcac4e349aeb in namespace container-probe-9982
  E0913 13:08:40.614655      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:08:41.615656      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:08:42.218: INFO: Get pod liveness-27161ed6-2490-43c8-9cb3-dcac4e349aeb in namespace container-probe-9982
  E0913 13:08:42.616333      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:08:43.616937      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:08:44.222: INFO: Get pod liveness-27161ed6-2490-43c8-9cb3-dcac4e349aeb in namespace container-probe-9982
  E0913 13:08:44.617983      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:08:45.618233      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:08:46.226: INFO: Get pod liveness-27161ed6-2490-43c8-9cb3-dcac4e349aeb in namespace container-probe-9982
  E0913 13:08:46.618522      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:08:47.619093      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:08:48.230: INFO: Get pod liveness-27161ed6-2490-43c8-9cb3-dcac4e349aeb in namespace container-probe-9982
  E0913 13:08:48.619278      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:08:49.619817      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:08:50.236: INFO: Get pod liveness-27161ed6-2490-43c8-9cb3-dcac4e349aeb in namespace container-probe-9982
  E0913 13:08:50.620675      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:08:51.621143      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:08:52.239: INFO: Get pod liveness-27161ed6-2490-43c8-9cb3-dcac4e349aeb in namespace container-probe-9982
  E0913 13:08:52.621539      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:08:53.622324      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:08:54.243: INFO: Get pod liveness-27161ed6-2490-43c8-9cb3-dcac4e349aeb in namespace container-probe-9982
  E0913 13:08:54.622918      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:08:55.623520      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:08:56.248: INFO: Get pod liveness-27161ed6-2490-43c8-9cb3-dcac4e349aeb in namespace container-probe-9982
  E0913 13:08:56.624618      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:08:57.624998      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:08:58.252: INFO: Get pod liveness-27161ed6-2490-43c8-9cb3-dcac4e349aeb in namespace container-probe-9982
  E0913 13:08:58.625237      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:08:59.625288      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:09:00.257: INFO: Get pod liveness-27161ed6-2490-43c8-9cb3-dcac4e349aeb in namespace container-probe-9982
  E0913 13:09:00.625406      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:09:01.626312      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:09:02.262: INFO: Get pod liveness-27161ed6-2490-43c8-9cb3-dcac4e349aeb in namespace container-probe-9982
  E0913 13:09:02.626526      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:09:03.626590      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:09:04.265: INFO: Get pod liveness-27161ed6-2490-43c8-9cb3-dcac4e349aeb in namespace container-probe-9982
  E0913 13:09:04.627541      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:09:05.628200      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:09:06.269: INFO: Get pod liveness-27161ed6-2490-43c8-9cb3-dcac4e349aeb in namespace container-probe-9982
  E0913 13:09:06.629107      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:09:07.636621      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:09:08.284: INFO: Get pod liveness-27161ed6-2490-43c8-9cb3-dcac4e349aeb in namespace container-probe-9982
  E0913 13:09:08.637043      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:09:09.637171      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:09:10.288: INFO: Get pod liveness-27161ed6-2490-43c8-9cb3-dcac4e349aeb in namespace container-probe-9982
  E0913 13:09:10.638117      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:09:11.638615      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:09:12.292: INFO: Get pod liveness-27161ed6-2490-43c8-9cb3-dcac4e349aeb in namespace container-probe-9982
  E0913 13:09:12.639033      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:09:13.639413      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:09:14.297: INFO: Get pod liveness-27161ed6-2490-43c8-9cb3-dcac4e349aeb in namespace container-probe-9982
  E0913 13:09:14.639796      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:09:15.640129      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:09:16.301: INFO: Get pod liveness-27161ed6-2490-43c8-9cb3-dcac4e349aeb in namespace container-probe-9982
  E0913 13:09:16.641037      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:09:17.641428      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:09:18.306: INFO: Get pod liveness-27161ed6-2490-43c8-9cb3-dcac4e349aeb in namespace container-probe-9982
  E0913 13:09:18.642465      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:09:19.642579      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:09:20.310: INFO: Get pod liveness-27161ed6-2490-43c8-9cb3-dcac4e349aeb in namespace container-probe-9982
  E0913 13:09:20.643158      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:09:21.643498      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:09:22.318: INFO: Get pod liveness-27161ed6-2490-43c8-9cb3-dcac4e349aeb in namespace container-probe-9982
  E0913 13:09:22.643525      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:09:23.643766      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:09:24.322: INFO: Get pod liveness-27161ed6-2490-43c8-9cb3-dcac4e349aeb in namespace container-probe-9982
  E0913 13:09:24.644518      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:09:25.644883      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:09:26.326: INFO: Get pod liveness-27161ed6-2490-43c8-9cb3-dcac4e349aeb in namespace container-probe-9982
  E0913 13:09:26.644880      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:09:27.645500      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:09:28.331: INFO: Get pod liveness-27161ed6-2490-43c8-9cb3-dcac4e349aeb in namespace container-probe-9982
  E0913 13:09:28.645743      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:09:29.646361      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:09:30.336: INFO: Get pod liveness-27161ed6-2490-43c8-9cb3-dcac4e349aeb in namespace container-probe-9982
  E0913 13:09:30.646469      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:09:31.647469      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:09:32.340: INFO: Get pod liveness-27161ed6-2490-43c8-9cb3-dcac4e349aeb in namespace container-probe-9982
  E0913 13:09:32.648033      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:09:33.648260      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:09:34.345: INFO: Get pod liveness-27161ed6-2490-43c8-9cb3-dcac4e349aeb in namespace container-probe-9982
  E0913 13:09:34.648417      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:09:35.648543      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:09:36.348: INFO: Get pod liveness-27161ed6-2490-43c8-9cb3-dcac4e349aeb in namespace container-probe-9982
  E0913 13:09:36.649016      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:09:37.649536      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:09:38.352: INFO: Get pod liveness-27161ed6-2490-43c8-9cb3-dcac4e349aeb in namespace container-probe-9982
  E0913 13:09:38.649764      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:09:39.650012      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:09:40.355: INFO: Get pod liveness-27161ed6-2490-43c8-9cb3-dcac4e349aeb in namespace container-probe-9982
  E0913 13:09:40.650884      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:09:41.651449      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:09:42.360: INFO: Get pod liveness-27161ed6-2490-43c8-9cb3-dcac4e349aeb in namespace container-probe-9982
  E0913 13:09:42.652802      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:09:43.653486      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:09:44.363: INFO: Get pod liveness-27161ed6-2490-43c8-9cb3-dcac4e349aeb in namespace container-probe-9982
  E0913 13:09:44.654283      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:09:45.654659      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:09:46.368: INFO: Get pod liveness-27161ed6-2490-43c8-9cb3-dcac4e349aeb in namespace container-probe-9982
  E0913 13:09:46.654777      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:09:47.655291      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:09:48.372: INFO: Get pod liveness-27161ed6-2490-43c8-9cb3-dcac4e349aeb in namespace container-probe-9982
  E0913 13:09:48.656190      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:09:49.656479      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:09:50.381: INFO: Get pod liveness-27161ed6-2490-43c8-9cb3-dcac4e349aeb in namespace container-probe-9982
  E0913 13:09:50.657341      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:09:51.657954      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:09:52.386: INFO: Get pod liveness-27161ed6-2490-43c8-9cb3-dcac4e349aeb in namespace container-probe-9982
  E0913 13:09:52.658224      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:09:53.658419      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:09:54.389: INFO: Get pod liveness-27161ed6-2490-43c8-9cb3-dcac4e349aeb in namespace container-probe-9982
  E0913 13:09:54.658732      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:09:55.658984      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:09:56.394: INFO: Get pod liveness-27161ed6-2490-43c8-9cb3-dcac4e349aeb in namespace container-probe-9982
  E0913 13:09:56.659918      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:09:57.660430      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:09:58.399: INFO: Get pod liveness-27161ed6-2490-43c8-9cb3-dcac4e349aeb in namespace container-probe-9982
  E0913 13:09:58.660804      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:09:59.661049      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:10:00.406: INFO: Get pod liveness-27161ed6-2490-43c8-9cb3-dcac4e349aeb in namespace container-probe-9982
  E0913 13:10:00.661624      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:10:01.661995      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:10:02.409: INFO: Get pod liveness-27161ed6-2490-43c8-9cb3-dcac4e349aeb in namespace container-probe-9982
  E0913 13:10:02.662108      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:10:03.663090      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:10:04.413: INFO: Get pod liveness-27161ed6-2490-43c8-9cb3-dcac4e349aeb in namespace container-probe-9982
  E0913 13:10:04.663611      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:10:05.663907      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:10:06.418: INFO: Get pod liveness-27161ed6-2490-43c8-9cb3-dcac4e349aeb in namespace container-probe-9982
  E0913 13:10:06.664595      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:10:07.665478      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:10:08.421: INFO: Get pod liveness-27161ed6-2490-43c8-9cb3-dcac4e349aeb in namespace container-probe-9982
  E0913 13:10:08.666193      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:10:09.666553      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:10:10.426: INFO: Get pod liveness-27161ed6-2490-43c8-9cb3-dcac4e349aeb in namespace container-probe-9982
  E0913 13:10:10.666989      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:10:11.667583      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:10:12.429: INFO: Get pod liveness-27161ed6-2490-43c8-9cb3-dcac4e349aeb in namespace container-probe-9982
  E0913 13:10:12.667706      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:10:13.667958      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:10:14.433: INFO: Get pod liveness-27161ed6-2490-43c8-9cb3-dcac4e349aeb in namespace container-probe-9982
  E0913 13:10:14.667916      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:10:15.668031      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:10:16.438: INFO: Get pod liveness-27161ed6-2490-43c8-9cb3-dcac4e349aeb in namespace container-probe-9982
  E0913 13:10:16.668723      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:10:17.669460      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:10:18.442: INFO: Get pod liveness-27161ed6-2490-43c8-9cb3-dcac4e349aeb in namespace container-probe-9982
  E0913 13:10:18.669574      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:10:19.670485      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:10:20.447: INFO: Get pod liveness-27161ed6-2490-43c8-9cb3-dcac4e349aeb in namespace container-probe-9982
  E0913 13:10:20.670998      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:10:21.671376      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:10:22.451: INFO: Get pod liveness-27161ed6-2490-43c8-9cb3-dcac4e349aeb in namespace container-probe-9982
  E0913 13:10:22.671955      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:10:23.672146      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:10:24.454: INFO: Get pod liveness-27161ed6-2490-43c8-9cb3-dcac4e349aeb in namespace container-probe-9982
  E0913 13:10:24.673060      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:10:25.673297      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:10:26.460: INFO: Get pod liveness-27161ed6-2490-43c8-9cb3-dcac4e349aeb in namespace container-probe-9982
  E0913 13:10:26.674268      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:10:27.675134      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:10:28.466: INFO: Get pod liveness-27161ed6-2490-43c8-9cb3-dcac4e349aeb in namespace container-probe-9982
  E0913 13:10:28.676222      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:10:29.676614      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:10:30.470: INFO: Get pod liveness-27161ed6-2490-43c8-9cb3-dcac4e349aeb in namespace container-probe-9982
  E0913 13:10:30.676706      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:10:31.677201      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:10:32.474: INFO: Get pod liveness-27161ed6-2490-43c8-9cb3-dcac4e349aeb in namespace container-probe-9982
  E0913 13:10:32.678258      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:10:33.679213      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:10:34.479: INFO: Get pod liveness-27161ed6-2490-43c8-9cb3-dcac4e349aeb in namespace container-probe-9982
  E0913 13:10:34.679850      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:10:35.680171      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:10:36.483: INFO: Get pod liveness-27161ed6-2490-43c8-9cb3-dcac4e349aeb in namespace container-probe-9982
  E0913 13:10:36.680770      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:10:37.681739      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:10:38.488: INFO: Get pod liveness-27161ed6-2490-43c8-9cb3-dcac4e349aeb in namespace container-probe-9982
  E0913 13:10:38.682391      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:10:39.682931      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:10:40.492: INFO: Get pod liveness-27161ed6-2490-43c8-9cb3-dcac4e349aeb in namespace container-probe-9982
  E0913 13:10:40.683767      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:10:41.684230      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:10:42.496: INFO: Get pod liveness-27161ed6-2490-43c8-9cb3-dcac4e349aeb in namespace container-probe-9982
  E0913 13:10:42.684718      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:10:43.684790      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:10:44.499: INFO: Get pod liveness-27161ed6-2490-43c8-9cb3-dcac4e349aeb in namespace container-probe-9982
  E0913 13:10:44.684871      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:10:45.685732      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:10:46.503: INFO: Get pod liveness-27161ed6-2490-43c8-9cb3-dcac4e349aeb in namespace container-probe-9982
  E0913 13:10:46.686578      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:10:47.687698      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:10:48.507: INFO: Get pod liveness-27161ed6-2490-43c8-9cb3-dcac4e349aeb in namespace container-probe-9982
  E0913 13:10:48.688307      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:10:49.688355      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:10:50.510: INFO: Get pod liveness-27161ed6-2490-43c8-9cb3-dcac4e349aeb in namespace container-probe-9982
  E0913 13:10:50.688949      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:10:51.689382      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:10:52.515: INFO: Get pod liveness-27161ed6-2490-43c8-9cb3-dcac4e349aeb in namespace container-probe-9982
  E0913 13:10:52.689524      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:10:53.689759      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:10:54.520: INFO: Get pod liveness-27161ed6-2490-43c8-9cb3-dcac4e349aeb in namespace container-probe-9982
  E0913 13:10:54.690010      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:10:55.691038      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:10:56.525: INFO: Get pod liveness-27161ed6-2490-43c8-9cb3-dcac4e349aeb in namespace container-probe-9982
  E0913 13:10:56.691835      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:10:57.692474      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:10:58.528: INFO: Get pod liveness-27161ed6-2490-43c8-9cb3-dcac4e349aeb in namespace container-probe-9982
  E0913 13:10:58.692824      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:10:59.693754      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:11:00.532: INFO: Get pod liveness-27161ed6-2490-43c8-9cb3-dcac4e349aeb in namespace container-probe-9982
  E0913 13:11:00.694653      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:11:01.695084      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:11:02.536: INFO: Get pod liveness-27161ed6-2490-43c8-9cb3-dcac4e349aeb in namespace container-probe-9982
  E0913 13:11:02.695997      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:11:03.696107      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:11:04.540: INFO: Get pod liveness-27161ed6-2490-43c8-9cb3-dcac4e349aeb in namespace container-probe-9982
  E0913 13:11:04.696691      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:11:05.696936      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:11:06.553: INFO: Get pod liveness-27161ed6-2490-43c8-9cb3-dcac4e349aeb in namespace container-probe-9982
  E0913 13:11:06.697639      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:11:07.698146      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:11:08.557: INFO: Get pod liveness-27161ed6-2490-43c8-9cb3-dcac4e349aeb in namespace container-probe-9982
  E0913 13:11:08.698987      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:11:09.699234      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:11:10.561: INFO: Get pod liveness-27161ed6-2490-43c8-9cb3-dcac4e349aeb in namespace container-probe-9982
  E0913 13:11:10.699578      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:11:11.700657      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:11:12.566: INFO: Get pod liveness-27161ed6-2490-43c8-9cb3-dcac4e349aeb in namespace container-probe-9982
  E0913 13:11:12.701097      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:11:13.701347      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:11:14.571: INFO: Get pod liveness-27161ed6-2490-43c8-9cb3-dcac4e349aeb in namespace container-probe-9982
  E0913 13:11:14.702068      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:11:15.702511      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:11:16.574: INFO: Get pod liveness-27161ed6-2490-43c8-9cb3-dcac4e349aeb in namespace container-probe-9982
  E0913 13:11:16.703241      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:11:17.703901      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 09/13/24 13:11:18.575
  Sep 13 13:11:18.608: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-9982" for this suite. @ 09/13/24 13:11:18.615
• [242.639 seconds]
------------------------------
SSS
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 09/13/24 13:11:18.63
  Sep 13 13:11:18.630: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename cronjob @ 09/13/24 13:11:18.631
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:11:18.678
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:11:18.681
  STEP: Creating a suspended cronjob @ 09/13/24 13:11:18.683
  STEP: Ensuring no jobs are scheduled @ 09/13/24 13:11:18.703
  E0913 13:11:18.704214      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:11:19.704470      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:11:20.704927      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:11:21.705375      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:11:22.706012      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:11:23.706212      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:11:24.706887      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:11:25.707394      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:11:26.707433      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:11:27.707560      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:11:28.708876      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:11:29.708904      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:11:30.709872      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:11:31.710475      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:11:32.711146      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:11:33.711361      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:11:34.712092      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:11:35.712329      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:11:36.713221      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:11:37.713526      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:11:38.714450      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:11:39.714780      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:11:40.715544      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:11:41.716450      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:11:42.716376      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:11:43.716705      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:11:44.716949      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:11:45.717226      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:11:46.718688      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:11:47.719813      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:11:48.719915      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:11:49.720360      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:11:50.720693      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:11:51.720933      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:11:52.721465      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:11:53.722469      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:11:54.723044      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:11:55.723674      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:11:56.724186      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:11:57.725083      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:11:58.726119      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:11:59.726244      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:12:00.726524      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:12:01.727164      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:12:02.728220      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:12:03.728471      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:12:04.729190      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:12:05.729355      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:12:06.730593      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:12:07.731205      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:12:08.731889      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:12:09.732049      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:12:10.732608      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:12:11.733039      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:12:12.733872      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:12:13.734336      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:12:14.734392      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:12:15.734878      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:12:16.735478      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:12:17.735618      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:12:18.736415      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:12:19.736910      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:12:20.737255      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:12:21.737559      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:12:22.737919      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:12:23.738753      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:12:24.738768      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:12:25.739068      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:12:26.739898      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:12:27.740042      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:12:28.740317      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:12:29.740998      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:12:30.741549      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:12:31.741825      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:12:32.742528      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:12:33.742662      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:12:34.743770      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:12:35.743889      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:12:36.744606      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:12:37.745081      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:12:38.745614      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:12:39.745745      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:12:40.746012      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:12:41.746438      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:12:42.747112      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:12:43.747190      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:12:44.747838      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:12:45.747981      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:12:46.748941      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:12:47.749379      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:12:48.750471      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:12:49.750638      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:12:50.751192      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:12:51.751617      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:12:52.752231      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:12:53.752441      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:12:54.753704      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:12:55.754857      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:12:56.755191      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:12:57.755364      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:12:58.755739      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:12:59.755977      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:13:00.756018      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:13:01.756533      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:13:02.757160      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:13:03.757450      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:13:04.757380      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:13:05.757416      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:13:06.757739      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:13:07.758179      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:13:08.758227      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:13:09.759205      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:13:10.759821      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:13:11.760594      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:13:12.761504      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:13:13.761878      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:13:14.762992      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:13:15.763991      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:13:16.764175      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:13:17.764468      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:13:18.765047      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:13:19.765569      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:13:20.766680      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:13:21.766696      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:13:22.767778      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:13:23.768131      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:13:24.768851      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:13:25.769177      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:13:26.770241      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:13:27.770956      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:13:28.771993      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:13:29.772865      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:13:30.773452      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:13:31.774396      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:13:32.774794      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:13:33.774907      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:13:34.775573      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:13:35.776389      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:13:36.776874      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:13:37.777069      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:13:38.777741      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:13:39.777949      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:13:40.778774      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:13:41.779445      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:13:42.780212      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:13:43.781037      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:13:44.781937      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:13:45.782097      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:13:46.782167      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:13:47.782583      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:13:48.783031      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:13:49.783639      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:13:50.783971      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:13:51.784561      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:13:52.784794      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:13:53.785818      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:13:54.785953      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:13:55.786174      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:13:56.787154      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:13:57.787288      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:13:58.787788      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:13:59.788634      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:14:00.789323      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:14:01.790238      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:14:02.791330      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:14:03.792224      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:14:04.792857      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:14:05.793159      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:14:06.793973      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:14:07.794347      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:14:08.795106      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:14:09.795306      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:14:10.795788      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:14:11.796260      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:14:12.797207      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:14:13.797625      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:14:14.798542      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:14:15.799239      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:14:16.800166      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:14:17.800288      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:14:18.801072      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:14:19.801269      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:14:20.801555      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:14:21.802441      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:14:22.803121      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:14:23.803853      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:14:24.804486      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:14:25.804859      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:14:26.805883      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:14:27.806159      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:14:28.806240      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:14:29.806323      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:14:30.807001      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:14:31.807139      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:14:32.807449      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:14:33.808031      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:14:34.809002      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:14:35.809052      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:14:36.809547      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:14:37.809847      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:14:38.810253      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:14:39.810571      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:14:40.810869      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:14:41.815778      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:14:42.817060      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:14:43.817390      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:14:44.817514      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:14:45.817561      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:14:46.818121      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:14:47.818251      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:14:48.818900      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:14:49.819114      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:14:50.820214      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:14:51.820444      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:14:52.821439      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:14:53.821806      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:14:54.822803      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:14:55.823651      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:14:56.824104      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:14:57.824214      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:14:58.825222      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:14:59.825380      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:15:00.826356      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:15:01.826455      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:15:02.826825      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:15:03.827170      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:15:04.827950      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:15:05.828933      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:15:06.829798      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:15:07.830071      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:15:08.830373      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:15:09.830749      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:15:10.831137      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:15:11.831366      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:15:12.832204      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:15:13.832969      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:15:14.833260      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:15:15.833494      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:15:16.833990      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:15:17.834277      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:15:18.835354      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:15:19.836298      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:15:20.837198      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:15:21.840390      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:15:22.841091      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:15:23.841506      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:15:24.842571      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:15:25.842986      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:15:26.843448      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:15:27.843664      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:15:28.843901      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:15:29.844689      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:15:30.845318      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:15:31.845920      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:15:32.846279      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:15:33.847156      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:15:34.848040      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:15:35.849019      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:15:36.849783      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:15:37.849899      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:15:38.850384      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:15:39.850623      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:15:40.851469      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:15:41.851653      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:15:42.852512      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:15:43.852703      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:15:44.853779      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:15:45.854523      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:15:46.855208      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:15:47.855877      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:15:48.856952      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:15:49.857227      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:15:50.857722      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:15:51.858085      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:15:52.858202      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:15:53.858478      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:15:54.859444      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:15:55.860284      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:15:56.860352      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:15:57.860848      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:15:58.861662      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:15:59.861902      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:16:00.862369      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:16:01.862622      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:16:02.863378      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:16:03.863592      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:16:04.864481      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:16:05.865076      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:16:06.866057      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:16:07.866541      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:16:08.867051      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:16:09.867365      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:16:10.867431      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:16:11.867806      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:16:12.868324      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:16:13.868990      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:16:14.869914      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:16:15.870373      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:16:16.871359      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:16:17.872280      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring no job exists by listing jobs explicitly @ 09/13/24 13:16:18.717
  STEP: Removing cronjob @ 09/13/24 13:16:18.72
  Sep 13 13:16:18.734: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-7395" for this suite. @ 09/13/24 13:16:18.74
• [300.116 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:695
  STEP: Creating a kubernetes client @ 09/13/24 13:16:18.746
  Sep 13 13:16:18.746: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename resourcequota @ 09/13/24 13:16:18.746
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:16:18.766
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:16:18.769
  STEP: Creating a ResourceQuota with terminating scope @ 09/13/24 13:16:18.771
  STEP: Ensuring ResourceQuota status is calculated @ 09/13/24 13:16:18.776
  E0913 13:16:18.873233      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:16:19.873578      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not terminating scope @ 09/13/24 13:16:20.779
  STEP: Ensuring ResourceQuota status is calculated @ 09/13/24 13:16:20.783
  E0913 13:16:20.873901      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:16:21.874438      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a long running pod @ 09/13/24 13:16:22.787
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 09/13/24 13:16:22.802
  E0913 13:16:22.874837      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:16:23.875341      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 09/13/24 13:16:24.807
  E0913 13:16:24.875979      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:16:25.876453      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 09/13/24 13:16:26.811
  STEP: Ensuring resource quota status released the pod usage @ 09/13/24 13:16:26.829
  E0913 13:16:26.877076      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:16:27.877662      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a terminating pod @ 09/13/24 13:16:28.834
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 09/13/24 13:16:28.855
  E0913 13:16:28.877845      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:16:29.878084      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 09/13/24 13:16:30.859
  E0913 13:16:30.878704      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:16:31.879084      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 09/13/24 13:16:32.863
  E0913 13:16:32.879825      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota status released the pod usage @ 09/13/24 13:16:32.884
  E0913 13:16:33.880056      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:16:34.881041      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:16:34.902: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8153" for this suite. @ 09/13/24 13:16:35.133
• [16.394 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:216
  STEP: Creating a kubernetes client @ 09/13/24 13:16:35.141
  Sep 13 13:16:35.141: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename container-runtime @ 09/13/24 13:16:35.142
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:16:35.152
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:16:35.155
  STEP: create the container @ 09/13/24 13:16:35.158
  W0913 13:16:35.169273      23 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Failed @ 09/13/24 13:16:35.169
  E0913 13:16:35.882056      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:16:36.882742      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:16:37.882850      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 09/13/24 13:16:38.183
  STEP: the container should be terminated @ 09/13/24 13:16:38.185
  STEP: the termination message should be set @ 09/13/24 13:16:38.186
  Sep 13 13:16:38.186: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 09/13/24 13:16:38.186
  Sep 13 13:16:38.206: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-1569" for this suite. @ 09/13/24 13:16:38.211
• [3.083 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 09/13/24 13:16:38.224
  Sep 13 13:16:38.224: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename hostport @ 09/13/24 13:16:38.225
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:16:38.241
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:16:38.243
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 09/13/24 13:16:38.25
  E0913 13:16:38.883383      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:16:39.883552      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 172.10.50.243 on the node which pod1 resides and expect scheduled @ 09/13/24 13:16:40.277
  E0913 13:16:40.883774      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:16:41.884688      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 172.10.50.243 but use UDP protocol on the node which pod2 resides @ 09/13/24 13:16:42.289
  E0913 13:16:42.885693      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:16:43.886831      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:16:44.886867      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:16:45.887876      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 09/13/24 13:16:46.329
  Sep 13 13:16:46.329: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 172.10.50.243 http://127.0.0.1:54323/hostname] Namespace:hostport-2809 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 13 13:16:46.329: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  Sep 13 13:16:46.330: INFO: ExecWithOptions: Clientset creation
  Sep 13 13:16:46.330: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/hostport-2809/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+172.10.50.243+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.10.50.243, port: 54323 @ 09/13/24 13:16:46.373
  Sep 13 13:16:46.373: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://172.10.50.243:54323/hostname] Namespace:hostport-2809 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 13 13:16:46.373: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  Sep 13 13:16:46.374: INFO: ExecWithOptions: Clientset creation
  Sep 13 13:16:46.374: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/hostport-2809/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F172.10.50.243%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.10.50.243, port: 54323 UDP @ 09/13/24 13:16:46.41
  Sep 13 13:16:46.410: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 172.10.50.243 54323] Namespace:hostport-2809 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 13 13:16:46.410: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  Sep 13 13:16:46.411: INFO: ExecWithOptions: Clientset creation
  Sep 13 13:16:46.411: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/hostport-2809/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+172.10.50.243+54323&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  E0913 13:16:46.887875      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:16:47.888706      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:16:48.889046      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:16:49.889471      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:16:50.889722      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:16:51.458: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-2809" for this suite. @ 09/13/24 13:16:51.463
• [13.253 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:277
  STEP: Creating a kubernetes client @ 09/13/24 13:16:51.478
  Sep 13 13:16:51.478: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename svcaccounts @ 09/13/24 13:16:51.479
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:16:51.508
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:16:51.51
  STEP: Creating a pod to test service account token:  @ 09/13/24 13:16:51.513
  E0913 13:16:51.890521      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:16:52.890581      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:16:53.891383      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:16:54.891659      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/13/24 13:16:55.542
  Sep 13 13:16:55.544: INFO: Trying to get logs from node cncf-3 pod test-pod-4967b9a0-d46f-4006-9fbe-16a52ba83589 container agnhost-container: <nil>
  STEP: delete the pod @ 09/13/24 13:16:55.556
  Sep 13 13:16:55.586: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-7605" for this suite. @ 09/13/24 13:16:55.59
• [4.118 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 09/13/24 13:16:55.597
  Sep 13 13:16:55.597: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename pods @ 09/13/24 13:16:55.597
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:16:55.612
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:16:55.615
  STEP: creating the pod @ 09/13/24 13:16:55.618
  STEP: submitting the pod to kubernetes @ 09/13/24 13:16:55.618
  W0913 13:16:55.625280      23 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  E0913 13:16:55.891702      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:16:56.891877      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 09/13/24 13:16:57.646
  STEP: updating the pod @ 09/13/24 13:16:57.649
  E0913 13:16:57.892023      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:16:58.166: INFO: Successfully updated pod "pod-update-activedeadlineseconds-0f1052c6-9270-4dc2-96e5-e08d59980200"
  E0913 13:16:58.892082      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:16:59.892262      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:17:00.892365      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:17:01.892501      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:17:02.176: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6635" for this suite. @ 09/13/24 13:17:02.18
• [6.590 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:273
  STEP: Creating a kubernetes client @ 09/13/24 13:17:02.188
  Sep 13 13:17:02.188: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename webhook @ 09/13/24 13:17:02.19
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:17:02.21
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:17:02.213
  STEP: Setting up server cert @ 09/13/24 13:17:02.235
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/13/24 13:17:02.409
  STEP: Deploying the webhook pod @ 09/13/24 13:17:02.419
  STEP: Wait for the deployment to be ready @ 09/13/24 13:17:02.433
  Sep 13 13:17:02.446: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0913 13:17:02.893670      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:17:03.894367      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:17:04.454: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.September, 13, 13, 17, 2, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 13, 13, 17, 2, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.September, 13, 13, 17, 2, 0, time.Local), LastTransitionTime:time.Date(2024, time.September, 13, 13, 17, 2, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7c55c7d74c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0913 13:17:04.894986      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:17:05.895449      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/13/24 13:17:06.458
  STEP: Verifying the service has paired with the endpoint @ 09/13/24 13:17:06.47
  E0913 13:17:06.896353      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:17:07.471: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 09/13/24 13:17:07.478
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 09/13/24 13:17:07.508
  STEP: Creating a dummy validating-webhook-configuration object @ 09/13/24 13:17:07.532
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 09/13/24 13:17:07.553
  STEP: Creating a dummy mutating-webhook-configuration object @ 09/13/24 13:17:07.559
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 09/13/24 13:17:07.572
  Sep 13 13:17:07.650: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-19" for this suite. @ 09/13/24 13:17:07.658
  STEP: Destroying namespace "webhook-markers-6880" for this suite. @ 09/13/24 13:17:07.67
• [5.488 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:624
  STEP: Creating a kubernetes client @ 09/13/24 13:17:07.678
  Sep 13 13:17:07.679: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename sched-preemption @ 09/13/24 13:17:07.68
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:17:07.715
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:17:07.718
  Sep 13 13:17:07.760: INFO: Waiting up to 1m0s for all nodes to be ready
  E0913 13:17:07.897244      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:17:08.897374      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:17:09.898018      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:17:10.898419      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:17:11.898578      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:17:12.898629      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:17:13.898937      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:17:14.899051      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:17:15.899826      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:17:16.900476      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:17:17.901227      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:17:18.901479      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:17:19.901884      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:17:20.902234      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:17:21.903137      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:17:22.904126      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:17:23.905148      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:17:24.905520      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:17:25.905924      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:17:26.906202      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:17:27.907169      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:17:28.907256      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:17:29.907605      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:17:30.907911      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:17:31.908562      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:17:32.908965      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:17:33.909914      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:17:34.910025      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:17:35.910741      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:17:36.910878      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:17:37.912868      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:17:38.913012      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:17:39.913119      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:17:40.913364      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:17:41.913491      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:17:42.913763      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:17:43.914342      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:17:44.914599      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:17:45.915568      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:17:46.915865      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:17:47.916572      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:17:48.916857      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:17:49.917183      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:17:50.917776      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:17:51.918360      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:17:52.918497      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:17:53.919198      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:17:54.919294      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:17:55.919567      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:17:56.919772      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:17:57.920684      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:17:58.921010      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:17:59.921603      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:18:00.922313      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:18:01.922627      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:18:02.922797      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:18:03.922848      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:18:04.923053      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:18:05.923353      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:18:06.923950      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:18:07.766: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 09/13/24 13:18:07.769
  Sep 13 13:18:07.769: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename sched-preemption-path @ 09/13/24 13:18:07.771
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:18:07.797
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:18:07.799
  STEP: Finding an available node @ 09/13/24 13:18:07.802
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 09/13/24 13:18:07.802
  E0913 13:18:07.924828      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:18:08.925795      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 09/13/24 13:18:09.825
  Sep 13 13:18:09.837: INFO: found a healthy node: cncf-3
  E0913 13:18:09.926380      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:18:10.926986      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:18:11.927294      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:18:12.927658      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:18:13.927985      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:18:14.928512      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:18:15.905: INFO: pods created so far: [1 1 1]
  Sep 13 13:18:15.905: INFO: length of pods created so far: 3
  E0913 13:18:15.929214      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:18:16.929744      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:18:17.915: INFO: pods created so far: [2 2 1]
  E0913 13:18:17.930655      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:18:18.930949      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:18:19.931963      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:18:20.932238      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:18:21.932951      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:18:22.933023      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:18:23.933529      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:18:24.934442      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:18:25.023: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-8487" for this suite. @ 09/13/24 13:18:25.027
  Sep 13 13:18:25.034: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-6959" for this suite. @ 09/13/24 13:18:25.039
• [77.367 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:199
  STEP: Creating a kubernetes client @ 09/13/24 13:18:25.045
  Sep 13 13:18:25.045: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename webhook @ 09/13/24 13:18:25.046
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:18:25.067
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:18:25.07
  STEP: Setting up server cert @ 09/13/24 13:18:25.095
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/13/24 13:18:25.766
  STEP: Deploying the webhook pod @ 09/13/24 13:18:25.776
  STEP: Wait for the deployment to be ready @ 09/13/24 13:18:25.797
  Sep 13 13:18:25.809: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0913 13:18:25.935550      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:18:26.936031      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/13/24 13:18:27.819
  STEP: Verifying the service has paired with the endpoint @ 09/13/24 13:18:27.829
  E0913 13:18:27.936907      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:18:28.829: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 09/13/24 13:18:28.835
  STEP: create a pod that should be denied by the webhook @ 09/13/24 13:18:28.864
  STEP: create a pod that causes the webhook to hang @ 09/13/24 13:18:28.873
  E0913 13:18:28.937075      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:18:29.937325      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:18:30.937474      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:18:31.938012      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:18:32.938127      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:18:33.938312      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:18:34.939005      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:18:35.939093      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:18:36.939586      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:18:37.939749      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create a configmap that should be denied by the webhook @ 09/13/24 13:18:38.88
  STEP: create a configmap that should be admitted by the webhook @ 09/13/24 13:18:38.888
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 09/13/24 13:18:38.902
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 09/13/24 13:18:38.908
  STEP: create a namespace that bypass the webhook @ 09/13/24 13:18:38.913
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 09/13/24 13:18:38.926
  E0913 13:18:38.939969      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:18:39.025: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4214" for this suite. @ 09/13/24 13:18:39.033
  STEP: Destroying namespace "webhook-markers-6702" for this suite. @ 09/13/24 13:18:39.051
  STEP: Destroying namespace "exempted-namespace-7500" for this suite. @ 09/13/24 13:18:39.066
• [14.031 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:708
  STEP: Creating a kubernetes client @ 09/13/24 13:18:39.077
  Sep 13 13:18:39.077: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename sched-pred @ 09/13/24 13:18:39.077
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:18:39.108
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:18:39.111
  Sep 13 13:18:39.113: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Sep 13 13:18:39.120: INFO: Waiting for terminating namespaces to be deleted...
  Sep 13 13:18:39.123: INFO: 
  Logging pods the apiserver thinks is on node cncf-2 before test
  Sep 13 13:18:39.144: INFO: keycloak-76cc8f6cb7-cj7kf from auth started at 2024-09-13 09:57:40 +0000 UTC (1 container statuses recorded)
  Sep 13 13:18:39.144: INFO: 	Container keycloak ready: true, restart count 0
  Sep 13 13:18:39.144: INFO: mariadb-keycloak-5b96c4c67d-txbrd from auth started at 2024-09-13 09:57:40 +0000 UTC (1 container statuses recorded)
  Sep 13 13:18:39.144: INFO: 	Container mariadb-keycloak ready: true, restart count 0
  Sep 13 13:18:39.144: INFO: oauth2-proxy-admin-845c96b6c9-mbn86 from auth started at 2024-09-13 13:15:03 +0000 UTC (1 container statuses recorded)
  Sep 13 13:18:39.144: INFO: 	Container oauth2-proxy-admin ready: true, restart count 0
  Sep 13 13:18:39.144: INFO: oauth2-redis-admin-0 from auth started at 2024-09-13 09:31:35 +0000 UTC (1 container statuses recorded)
  Sep 13 13:18:39.144: INFO: 	Container redis ready: true, restart count 0
  Sep 13 13:18:39.144: INFO: cloud-service-api-75445b94f9-sjmqd from cmp started at 2024-09-13 09:59:40 +0000 UTC (2 container statuses recorded)
  Sep 13 13:18:39.144: INFO: 	Container cloud-service-api ready: true, restart count 0
  Sep 13 13:18:39.144: INFO: 	Container istio-proxy ready: true, restart count 0
  Sep 13 13:18:39.144: INFO: cloud-service-collector-6bd966f4d6-tqsdq from cmp started at 2024-09-13 09:59:40 +0000 UTC (2 container statuses recorded)
  Sep 13 13:18:39.144: INFO: 	Container cloud-service-collector ready: true, restart count 0
  Sep 13 13:18:39.144: INFO: 	Container istio-proxy ready: true, restart count 0
  Sep 13 13:18:39.144: INFO: maestro-auth-gateway-admin-7b4b969475-75b5g from cmp started at 2024-09-13 09:59:40 +0000 UTC (2 container statuses recorded)
  Sep 13 13:18:39.144: INFO: 	Container istio-proxy ready: true, restart count 0
  Sep 13 13:18:39.144: INFO: 	Container maestro-auth-gateway ready: true, restart count 0
  Sep 13 13:18:39.144: INFO: maestro-common-api-admin-b46b8f8b8-df9xr from cmp started at 2024-09-13 09:58:52 +0000 UTC (2 container statuses recorded)
  Sep 13 13:18:39.144: INFO: 	Container istio-proxy ready: true, restart count 0
  Sep 13 13:18:39.144: INFO: 	Container maestro-common-api ready: true, restart count 0
  Sep 13 13:18:39.144: INFO: maestro-host-app-admin-7d644fbb7b-pdwbt from cmp started at 2024-09-13 09:59:04 +0000 UTC (2 container statuses recorded)
  Sep 13 13:18:39.144: INFO: 	Container istio-proxy ready: true, restart count 0
  Sep 13 13:18:39.144: INFO: 	Container maestro-host-app ready: true, restart count 0
  Sep 13 13:18:39.144: INFO: maestro-remote-app-admin-6f86d5cb87-n7x59 from cmp started at 2024-09-13 10:02:45 +0000 UTC (2 container statuses recorded)
  Sep 13 13:18:39.144: INFO: 	Container istio-proxy ready: true, restart count 0
  Sep 13 13:18:39.144: INFO: 	Container maestro-remote-app ready: true, restart count 0
  Sep 13 13:18:39.144: INFO: mariadb-maxscale-745d5dfb5f-9m26l from dataplatform started at 2024-09-13 09:57:40 +0000 UTC (1 container statuses recorded)
  Sep 13 13:18:39.144: INFO: 	Container maxscale ready: true, restart count 0
  Sep 13 13:18:39.144: INFO: vault-1 from dataplatform started at 2024-09-13 09:31:36 +0000 UTC (1 container statuses recorded)
  Sep 13 13:18:39.144: INFO: 	Container vault ready: true, restart count 0
  Sep 13 13:18:39.144: INFO: ingress-nginx-controller-66f986c956-fkb8s from ingress-nginx started at 2024-09-13 09:57:41 +0000 UTC (1 container statuses recorded)
  Sep 13 13:18:39.144: INFO: 	Container controller ready: true, restart count 0
  Sep 13 13:18:39.144: INFO: istio-gateway-5f7f7c65d8-m5wpn from istio-system started at 2024-09-13 10:03:27 +0000 UTC (1 container statuses recorded)
  Sep 13 13:18:39.144: INFO: 	Container istio-proxy ready: true, restart count 0
  Sep 13 13:18:39.144: INFO: istiod-f77745497-cqmfd from istio-system started at 2024-09-13 09:57:41 +0000 UTC (1 container statuses recorded)
  Sep 13 13:18:39.144: INFO: 	Container discovery ready: true, restart count 0
  Sep 13 13:18:39.144: INFO: cilium-jzdbd from kube-system started at 2024-09-13 09:30:51 +0000 UTC (1 container statuses recorded)
  Sep 13 13:18:39.144: INFO: 	Container cilium-agent ready: true, restart count 0
  Sep 13 13:18:39.144: INFO: kube-proxy-c6wbb from kube-system started at 2024-09-13 07:33:07 +0000 UTC (1 container statuses recorded)
  Sep 13 13:18:39.144: INFO: 	Container kube-proxy ready: true, restart count 1
  Sep 13 13:18:39.144: INFO: nginx-proxy-cncf-2 from kube-system started at 2024-09-13 09:30:34 +0000 UTC (1 container statuses recorded)
  Sep 13 13:18:39.144: INFO: 	Container nginx-proxy ready: true, restart count 2
  Sep 13 13:18:39.144: INFO: csi-cephfsplugin-k4vk8 from rook-ceph started at 2024-09-12 04:28:27 +0000 UTC (3 container statuses recorded)
  Sep 13 13:18:39.144: INFO: 	Container csi-cephfsplugin ready: true, restart count 2
  Sep 13 13:18:39.144: INFO: 	Container driver-registrar ready: true, restart count 2
  Sep 13 13:18:39.144: INFO: 	Container log-collector ready: true, restart count 1
  Sep 13 13:18:39.144: INFO: csi-cephfsplugin-provisioner-69554c6fcb-p7sjj from rook-ceph started at 2024-09-13 09:57:40 +0000 UTC (6 container statuses recorded)
  Sep 13 13:18:39.144: INFO: 	Container csi-attacher ready: true, restart count 0
  Sep 13 13:18:39.144: INFO: 	Container csi-cephfsplugin ready: true, restart count 0
  Sep 13 13:18:39.144: INFO: 	Container csi-provisioner ready: true, restart count 0
  Sep 13 13:18:39.144: INFO: 	Container csi-resizer ready: true, restart count 0
  Sep 13 13:18:39.144: INFO: 	Container csi-snapshotter ready: true, restart count 0
  Sep 13 13:18:39.144: INFO: 	Container log-collector ready: true, restart count 0
  Sep 13 13:18:39.144: INFO: csi-rbdplugin-provisioner-78947cbcdb-sdpts from rook-ceph started at 2024-09-13 09:57:42 +0000 UTC (6 container statuses recorded)
  Sep 13 13:18:39.144: INFO: 	Container csi-attacher ready: true, restart count 0
  Sep 13 13:18:39.144: INFO: 	Container csi-provisioner ready: true, restart count 0
  Sep 13 13:18:39.144: INFO: 	Container csi-rbdplugin ready: true, restart count 0
  Sep 13 13:18:39.144: INFO: 	Container csi-resizer ready: true, restart count 0
  Sep 13 13:18:39.144: INFO: 	Container csi-snapshotter ready: true, restart count 0
  Sep 13 13:18:39.144: INFO: 	Container log-collector ready: true, restart count 0
  Sep 13 13:18:39.144: INFO: csi-rbdplugin-tjtg5 from rook-ceph started at 2024-09-12 04:28:26 +0000 UTC (3 container statuses recorded)
  Sep 13 13:18:39.144: INFO: 	Container csi-rbdplugin ready: true, restart count 2
  Sep 13 13:18:39.144: INFO: 	Container driver-registrar ready: true, restart count 2
  Sep 13 13:18:39.144: INFO: 	Container log-collector ready: true, restart count 1
  Sep 13 13:18:39.144: INFO: rook-ceph-crashcollector-cncf-2-66bdbb4dc-k99dz from rook-ceph started at 2024-09-13 10:34:53 +0000 UTC (1 container statuses recorded)
  Sep 13 13:18:39.144: INFO: 	Container ceph-crash ready: true, restart count 0
  Sep 13 13:18:39.144: INFO: rook-ceph-exporter-cncf-2-69c7b74bf6-rddt9 from rook-ceph started at 2024-09-13 10:34:56 +0000 UTC (1 container statuses recorded)
  Sep 13 13:18:39.144: INFO: 	Container ceph-exporter ready: true, restart count 0
  Sep 13 13:18:39.144: INFO: rook-ceph-mds-myfs-a-77ccbf966b-dv275 from rook-ceph started at 2024-09-13 09:52:44 +0000 UTC (2 container statuses recorded)
  Sep 13 13:18:39.144: INFO: 	Container log-collector ready: true, restart count 0
  Sep 13 13:18:39.144: INFO: 	Container mds ready: true, restart count 11
  Sep 13 13:18:39.144: INFO: rook-ceph-mgr-a-85d9858989-j5hfp from rook-ceph started at 2024-09-13 09:52:44 +0000 UTC (3 container statuses recorded)
  Sep 13 13:18:39.144: INFO: 	Container log-collector ready: true, restart count 0
  Sep 13 13:18:39.144: INFO: 	Container mgr ready: true, restart count 15
  Sep 13 13:18:39.144: INFO: 	Container watch-active ready: true, restart count 0
  Sep 13 13:18:39.144: INFO: rook-ceph-mon-a-586dfd7d45-8dpxm from rook-ceph started at 2024-09-13 09:31:03 +0000 UTC (2 container statuses recorded)
  Sep 13 13:18:39.144: INFO: 	Container log-collector ready: true, restart count 0
  Sep 13 13:18:39.144: INFO: 	Container mon ready: true, restart count 0
  Sep 13 13:18:39.144: INFO: rook-ceph-operator-5f86b7cfd4-dqxdc from rook-ceph started at 2024-09-13 10:34:50 +0000 UTC (1 container statuses recorded)
  Sep 13 13:18:39.144: INFO: 	Container rook-ceph-operator ready: true, restart count 0
  Sep 13 13:18:39.144: INFO: rook-ceph-osd-2-7c6b7cbf57-9p8bq from rook-ceph started at 2024-09-13 09:43:44 +0000 UTC (2 container statuses recorded)
  Sep 13 13:18:39.144: INFO: 	Container log-collector ready: true, restart count 0
  Sep 13 13:18:39.144: INFO: 	Container osd ready: true, restart count 0
  Sep 13 13:18:39.144: INFO: rook-ceph-osd-prepare-cncf-2-2cltm from rook-ceph started at 2024-09-13 10:35:23 +0000 UTC (1 container statuses recorded)
  Sep 13 13:18:39.144: INFO: 	Container provision ready: false, restart count 0
  Sep 13 13:18:39.144: INFO: sonobuoy-systemd-logs-daemon-set-1cc6cc51fb6b46e1-kpx2t from sonobuoy started at 2024-09-13 12:12:20 +0000 UTC (2 container statuses recorded)
  Sep 13 13:18:39.144: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep 13 13:18:39.144: INFO: 	Container systemd-logs ready: true, restart count 0
  Sep 13 13:18:39.144: INFO: trombone-remote-app-6497cdc6ff-f2gsz from trombone started at 2024-09-13 10:06:40 +0000 UTC (2 container statuses recorded)
  Sep 13 13:18:39.145: INFO: 	Container istio-proxy ready: true, restart count 0
  Sep 13 13:18:39.145: INFO: 	Container trombone-remote-app ready: true, restart count 0
  Sep 13 13:18:39.145: INFO: viola-api-admin-d66495c9c-tcsh6 from viola started at 2024-09-13 10:06:35 +0000 UTC (2 container statuses recorded)
  Sep 13 13:18:39.145: INFO: 	Container istio-proxy ready: true, restart count 0
  Sep 13 13:18:39.145: INFO: 	Container viola-api ready: true, restart count 0
  Sep 13 13:18:39.145: INFO: viola-remote-app-7d5b58b94c-dlvn4 from viola started at 2024-09-13 10:06:40 +0000 UTC (2 container statuses recorded)
  Sep 13 13:18:39.145: INFO: 	Container istio-proxy ready: true, restart count 0
  Sep 13 13:18:39.145: INFO: 	Container viola-remote-app ready: true, restart count 0
  Sep 13 13:18:39.145: INFO: 
  Logging pods the apiserver thinks is on node cncf-3 before test
  Sep 13 13:18:39.164: INFO: oauth2-proxy-admin-845c96b6c9-8scl8 from auth started at 2024-09-13 13:15:02 +0000 UTC (1 container statuses recorded)
  Sep 13 13:18:39.164: INFO: 	Container oauth2-proxy-admin ready: true, restart count 0
  Sep 13 13:18:39.164: INFO: oauth2-redis-admin-3 from auth started at 2024-09-13 12:37:34 +0000 UTC (1 container statuses recorded)
  Sep 13 13:18:39.164: INFO: 	Container redis ready: true, restart count 0
  Sep 13 13:18:39.164: INFO: oauth2-redis-admin-5 from auth started at 2024-09-13 12:37:40 +0000 UTC (1 container statuses recorded)
  Sep 13 13:18:39.164: INFO: 	Container redis ready: true, restart count 0
  Sep 13 13:18:39.164: INFO: redis-cluster-maintenance-cronjob-28770555-rcvt2 from auth started at 2024-09-13 13:15:00 +0000 UTC (1 container statuses recorded)
  Sep 13 13:18:39.164: INFO: 	Container redis-cluster-check ready: false, restart count 0
  Sep 13 13:18:39.164: INFO: mariadb-backup-cronjob-28770550-wvxvt from dataplatform started at 2024-09-13 13:10:00 +0000 UTC (1 container statuses recorded)
  Sep 13 13:18:39.164: INFO: 	Container mariadb-backup-cronjob ready: false, restart count 0
  Sep 13 13:18:39.164: INFO: my-cluster-kafka-2 from dataplatform started at 2024-09-13 12:38:11 +0000 UTC (1 container statuses recorded)
  Sep 13 13:18:39.164: INFO: 	Container kafka ready: true, restart count 0
  Sep 13 13:18:39.164: INFO: my-cluster-zookeeper-1 from dataplatform started at 2024-09-13 12:38:02 +0000 UTC (1 container statuses recorded)
  Sep 13 13:18:39.164: INFO: 	Container zookeeper ready: true, restart count 0
  Sep 13 13:18:39.164: INFO: redis-0 from dataplatform started at 2024-09-13 12:37:30 +0000 UTC (1 container statuses recorded)
  Sep 13 13:18:39.164: INFO: 	Container redis ready: true, restart count 0
  Sep 13 13:18:39.164: INFO: vault-2 from dataplatform started at 2024-09-13 12:37:35 +0000 UTC (1 container statuses recorded)
  Sep 13 13:18:39.164: INFO: 	Container vault ready: true, restart count 0
  Sep 13 13:18:39.164: INFO: vault-backup-cronjob-28770550-hrl77 from dataplatform started at 2024-09-13 13:10:00 +0000 UTC (1 container statuses recorded)
  Sep 13 13:18:39.164: INFO: 	Container clean-backup ready: false, restart count 0
  Sep 13 13:18:39.164: INFO: vault-unsealer-28770550-zpwjd from dataplatform started at 2024-09-13 13:10:00 +0000 UTC (1 container statuses recorded)
  Sep 13 13:18:39.164: INFO: 	Container unsealer ready: false, restart count 0
  Sep 13 13:18:39.164: INFO: cilium-gpk6m from kube-system started at 2024-09-13 10:34:22 +0000 UTC (1 container statuses recorded)
  Sep 13 13:18:39.164: INFO: 	Container cilium-agent ready: true, restart count 0
  Sep 13 13:18:39.164: INFO: cilium-operator-5d64788c99-v6sqx from kube-system started at 2024-09-13 10:34:22 +0000 UTC (1 container statuses recorded)
  Sep 13 13:18:39.164: INFO: 	Container cilium-operator ready: true, restart count 0
  Sep 13 13:18:39.164: INFO: kube-proxy-4wnlq from kube-system started at 2024-09-13 07:33:22 +0000 UTC (1 container statuses recorded)
  Sep 13 13:18:39.164: INFO: 	Container kube-proxy ready: true, restart count 1
  Sep 13 13:18:39.164: INFO: nginx-proxy-cncf-3 from kube-system started at 2024-09-13 10:34:20 +0000 UTC (1 container statuses recorded)
  Sep 13 13:18:39.164: INFO: 	Container nginx-proxy ready: true, restart count 3
  Sep 13 13:18:39.164: INFO: csi-cephfsplugin-xflnd from rook-ceph started at 2024-09-13 12:37:58 +0000 UTC (3 container statuses recorded)
  Sep 13 13:18:39.164: INFO: 	Container csi-cephfsplugin ready: true, restart count 0
  Sep 13 13:18:39.164: INFO: 	Container driver-registrar ready: true, restart count 0
  Sep 13 13:18:39.164: INFO: 	Container log-collector ready: true, restart count 0
  Sep 13 13:18:39.164: INFO: csi-rbdplugin-d8ds7 from rook-ceph started at 2024-09-13 12:37:29 +0000 UTC (3 container statuses recorded)
  Sep 13 13:18:39.164: INFO: 	Container csi-rbdplugin ready: true, restart count 0
  Sep 13 13:18:39.164: INFO: 	Container driver-registrar ready: true, restart count 0
  Sep 13 13:18:39.164: INFO: 	Container log-collector ready: true, restart count 0
  Sep 13 13:18:39.164: INFO: rook-ceph-crashcollector-cncf-3-c8d5f5b74-cd2s2 from rook-ceph started at 2024-09-13 12:37:35 +0000 UTC (1 container statuses recorded)
  Sep 13 13:18:39.164: INFO: 	Container ceph-crash ready: true, restart count 0
  Sep 13 13:18:39.164: INFO: rook-ceph-exporter-cncf-3-5848c97b8f-6c9s8 from rook-ceph started at 2024-09-13 12:37:38 +0000 UTC (1 container statuses recorded)
  Sep 13 13:18:39.164: INFO: 	Container ceph-exporter ready: true, restart count 0
  Sep 13 13:18:39.164: INFO: rook-ceph-mon-d-78554cdc5c-ld84x from rook-ceph started at 2024-09-13 12:37:29 +0000 UTC (2 container statuses recorded)
  Sep 13 13:18:39.164: INFO: 	Container log-collector ready: true, restart count 0
  Sep 13 13:18:39.164: INFO: 	Container mon ready: true, restart count 0
  Sep 13 13:18:39.164: INFO: rook-ceph-osd-1-697c857c8f-x4nn9 from rook-ceph started at 2024-09-13 12:37:29 +0000 UTC (2 container statuses recorded)
  Sep 13 13:18:39.164: INFO: 	Container log-collector ready: true, restart count 0
  Sep 13 13:18:39.164: INFO: 	Container osd ready: true, restart count 0
  Sep 13 13:18:39.164: INFO: rook-ceph-tools-7b67b65bd-dtvfv from rook-ceph started at 2024-09-13 12:37:29 +0000 UTC (1 container statuses recorded)
  Sep 13 13:18:39.164: INFO: 	Container rook-ceph-tools ready: true, restart count 0
  Sep 13 13:18:39.164: INFO: sonobuoy-systemd-logs-daemon-set-1cc6cc51fb6b46e1-p7scg from sonobuoy started at 2024-09-13 12:12:20 +0000 UTC (2 container statuses recorded)
  Sep 13 13:18:39.164: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep 13 13:18:39.164: INFO: 	Container systemd-logs ready: true, restart count 0
  Sep 13 13:18:39.164: INFO: 
  Logging pods the apiserver thinks is on node cncf-4 before test
  Sep 13 13:18:39.187: INFO: oauth2-redis-admin-2 from auth started at 2024-09-13 10:39:13 +0000 UTC (1 container statuses recorded)
  Sep 13 13:18:39.187: INFO: 	Container redis ready: true, restart count 0
  Sep 13 13:18:39.188: INFO: oauth2-redis-admin-4 from auth started at 2024-09-13 10:39:28 +0000 UTC (1 container statuses recorded)
  Sep 13 13:18:39.188: INFO: 	Container redis ready: true, restart count 0
  Sep 13 13:18:39.188: INFO: maestro-event-pusher-754554d8bc-rnszn from cmp started at 2024-09-13 10:41:42 +0000 UTC (2 container statuses recorded)
  Sep 13 13:18:39.188: INFO: 	Container istio-proxy ready: true, restart count 0
  Sep 13 13:18:39.189: INFO: 	Container maestro-event-pusher ready: true, restart count 0
  Sep 13 13:18:39.189: INFO: mariadb-sts-1 from dataplatform started at 2024-09-13 10:39:14 +0000 UTC (1 container statuses recorded)
  Sep 13 13:18:39.189: INFO: 	Container mariadb ready: true, restart count 0
  Sep 13 13:18:39.189: INFO: my-cluster-entity-operator-764cdd6bfb-w8n8x from dataplatform started at 2024-09-13 10:41:42 +0000 UTC (3 container statuses recorded)
  Sep 13 13:18:39.189: INFO: 	Container tls-sidecar ready: true, restart count 0
  Sep 13 13:18:39.190: INFO: 	Container topic-operator ready: true, restart count 0
  Sep 13 13:18:39.190: INFO: 	Container user-operator ready: true, restart count 0
  Sep 13 13:18:39.190: INFO: my-cluster-kafka-0 from dataplatform started at 2024-09-13 10:39:07 +0000 UTC (1 container statuses recorded)
  Sep 13 13:18:39.190: INFO: 	Container kafka ready: true, restart count 2
  Sep 13 13:18:39.191: INFO: my-cluster-zookeeper-0 from dataplatform started at 2024-09-13 10:39:07 +0000 UTC (1 container statuses recorded)
  Sep 13 13:18:39.191: INFO: 	Container zookeeper ready: true, restart count 0
  Sep 13 13:18:39.191: INFO: cilium-fj5rn from kube-system started at 2024-09-13 08:50:53 +0000 UTC (1 container statuses recorded)
  Sep 13 13:18:39.191: INFO: 	Container cilium-agent ready: true, restart count 1
  Sep 13 13:18:39.191: INFO: kube-proxy-2zm9n from kube-system started at 2024-09-13 07:33:08 +0000 UTC (1 container statuses recorded)
  Sep 13 13:18:39.191: INFO: 	Container kube-proxy ready: true, restart count 1
  Sep 13 13:18:39.191: INFO: nginx-proxy-cncf-4 from kube-system started at 2024-09-13 10:36:48 +0000 UTC (1 container statuses recorded)
  Sep 13 13:18:39.192: INFO: 	Container nginx-proxy ready: true, restart count 2
  Sep 13 13:18:39.192: INFO: csi-cephfsplugin-mj44d from rook-ceph started at 2024-09-12 04:28:27 +0000 UTC (3 container statuses recorded)
  Sep 13 13:18:39.192: INFO: 	Container csi-cephfsplugin ready: true, restart count 1
  Sep 13 13:18:39.192: INFO: 	Container driver-registrar ready: true, restart count 1
  Sep 13 13:18:39.192: INFO: 	Container log-collector ready: true, restart count 1
  Sep 13 13:18:39.193: INFO: csi-rbdplugin-jr8hc from rook-ceph started at 2024-09-12 04:28:26 +0000 UTC (3 container statuses recorded)
  Sep 13 13:18:39.193: INFO: 	Container csi-rbdplugin ready: true, restart count 1
  Sep 13 13:18:39.193: INFO: 	Container driver-registrar ready: true, restart count 1
  Sep 13 13:18:39.193: INFO: 	Container log-collector ready: true, restart count 1
  Sep 13 13:18:39.193: INFO: rook-ceph-crashcollector-cncf-4-55d6f448b9-hn6gj from rook-ceph started at 2024-09-13 12:37:29 +0000 UTC (1 container statuses recorded)
  Sep 13 13:18:39.194: INFO: 	Container ceph-crash ready: true, restart count 0
  Sep 13 13:18:39.194: INFO: rook-ceph-exporter-cncf-4-69df574c74-vqlfp from rook-ceph started at 2024-09-13 12:37:32 +0000 UTC (1 container statuses recorded)
  Sep 13 13:18:39.194: INFO: 	Container ceph-exporter ready: true, restart count 0
  Sep 13 13:18:39.194: INFO: rook-ceph-mds-myfs-b-6f56dc888d-l9vjb from rook-ceph started at 2024-09-13 12:37:29 +0000 UTC (2 container statuses recorded)
  Sep 13 13:18:39.194: INFO: 	Container log-collector ready: true, restart count 0
  Sep 13 13:18:39.194: INFO: 	Container mds ready: true, restart count 0
  Sep 13 13:18:39.194: INFO: rook-ceph-mgr-b-57755d7888-bnmpq from rook-ceph started at 2024-09-13 12:37:29 +0000 UTC (3 container statuses recorded)
  Sep 13 13:18:39.194: INFO: 	Container log-collector ready: true, restart count 0
  Sep 13 13:18:39.194: INFO: 	Container mgr ready: true, restart count 0
  Sep 13 13:18:39.194: INFO: 	Container watch-active ready: true, restart count 0
  Sep 13 13:18:39.195: INFO: rook-ceph-osd-3-54cb9dd4d7-gzszb from rook-ceph started at 2024-09-13 10:37:04 +0000 UTC (2 container statuses recorded)
  Sep 13 13:18:39.195: INFO: 	Container log-collector ready: true, restart count 0
  Sep 13 13:18:39.195: INFO: 	Container osd ready: true, restart count 0
  Sep 13 13:18:39.195: INFO: sonobuoy from sonobuoy started at 2024-09-13 12:12:19 +0000 UTC (1 container statuses recorded)
  Sep 13 13:18:39.195: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Sep 13 13:18:39.195: INFO: sonobuoy-e2e-job-781d9a3c1a264d66 from sonobuoy started at 2024-09-13 12:12:20 +0000 UTC (2 container statuses recorded)
  Sep 13 13:18:39.195: INFO: 	Container e2e ready: true, restart count 0
  Sep 13 13:18:39.195: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep 13 13:18:39.196: INFO: sonobuoy-systemd-logs-daemon-set-1cc6cc51fb6b46e1-pt4k7 from sonobuoy started at 2024-09-13 12:12:20 +0000 UTC (2 container statuses recorded)
  Sep 13 13:18:39.196: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep 13 13:18:39.196: INFO: 	Container systemd-logs ready: true, restart count 0
  Sep 13 13:18:39.196: INFO: trombone-pipeline-api-admin-6457988cdb-kgvph from trombone started at 2024-09-13 10:38:32 +0000 UTC (2 container statuses recorded)
  Sep 13 13:18:39.196: INFO: 	Container istio-proxy ready: true, restart count 0
  Sep 13 13:18:39.196: INFO: 	Container trombone-pipeline-api ready: true, restart count 4
  Sep 13 13:18:39.196: INFO: 
  Logging pods the apiserver thinks is on node cncf-5 before test
  Sep 13 13:18:39.214: INFO: keycloak-76cc8f6cb7-x6gfj from auth started at 2024-09-12 08:04:31 +0000 UTC (1 container statuses recorded)
  Sep 13 13:18:39.214: INFO: 	Container keycloak ready: true, restart count 1
  Sep 13 13:18:39.214: INFO: oauth2-redis-admin-1 from auth started at 2024-09-13 08:22:43 +0000 UTC (1 container statuses recorded)
  Sep 13 13:18:39.214: INFO: 	Container redis ready: true, restart count 0
  Sep 13 13:18:39.214: INFO: maestro-iam-adapter-api-84d7945fdd-vt9vl from cmp started at 2024-09-13 05:36:03 +0000 UTC (2 container statuses recorded)
  Sep 13 13:18:39.214: INFO: 	Container istio-proxy ready: true, restart count 1
  Sep 13 13:18:39.214: INFO: 	Container maestro-iam-adapter-api ready: true, restart count 1
  Sep 13 13:18:39.214: INFO: notification-adapter-api-67cb5bfffc-72vhz from cmp started at 2024-09-13 05:36:03 +0000 UTC (2 container statuses recorded)
  Sep 13 13:18:39.214: INFO: 	Container istio-proxy ready: true, restart count 1
  Sep 13 13:18:39.214: INFO: 	Container noti-api ready: true, restart count 1
  Sep 13 13:18:39.214: INFO: mariadb-maxscale-745d5dfb5f-cdhhn from dataplatform started at 2024-09-12 08:30:28 +0000 UTC (1 container statuses recorded)
  Sep 13 13:18:39.214: INFO: 	Container maxscale ready: true, restart count 1
  Sep 13 13:18:39.214: INFO: mariadb-sts-0 from dataplatform started at 2024-09-12 07:06:14 +0000 UTC (1 container statuses recorded)
  Sep 13 13:18:39.214: INFO: 	Container mariadb ready: true, restart count 1
  Sep 13 13:18:39.214: INFO: my-cluster-kafka-1 from dataplatform started at 2024-09-12 07:07:17 +0000 UTC (1 container statuses recorded)
  Sep 13 13:18:39.214: INFO: 	Container kafka ready: true, restart count 2
  Sep 13 13:18:39.214: INFO: my-cluster-zookeeper-2 from dataplatform started at 2024-09-12 07:06:30 +0000 UTC (1 container statuses recorded)
  Sep 13 13:18:39.214: INFO: 	Container zookeeper ready: true, restart count 1
  Sep 13 13:18:39.214: INFO: strimzi-cluster-operator-7fbfc5c86f-94ths from dataplatform started at 2024-09-13 08:34:15 +0000 UTC (1 container statuses recorded)
  Sep 13 13:18:39.214: INFO: 	Container strimzi-cluster-operator ready: true, restart count 1
  Sep 13 13:18:39.214: INFO: vault-0 from dataplatform started at 2024-09-12 07:06:14 +0000 UTC (1 container statuses recorded)
  Sep 13 13:18:39.214: INFO: 	Container vault ready: true, restart count 1
  Sep 13 13:18:39.214: INFO: ingress-nginx-admission-create-pqp74 from ingress-nginx started at 2024-09-12 03:44:55 +0000 UTC (1 container statuses recorded)
  Sep 13 13:18:39.214: INFO: 	Container create ready: false, restart count 0
  Sep 13 13:18:39.214: INFO: cilium-2dbxd from kube-system started at 2024-09-13 08:50:53 +0000 UTC (1 container statuses recorded)
  Sep 13 13:18:39.214: INFO: 	Container cilium-agent ready: true, restart count 1
  Sep 13 13:18:39.214: INFO: coredns-69db55dd76-vzt9s from kube-system started at 2024-09-13 08:22:23 +0000 UTC (1 container statuses recorded)
  Sep 13 13:18:39.214: INFO: 	Container coredns ready: true, restart count 1
  Sep 13 13:18:39.214: INFO: kube-proxy-l5kxx from kube-system started at 2024-09-13 08:27:26 +0000 UTC (1 container statuses recorded)
  Sep 13 13:18:39.214: INFO: 	Container kube-proxy ready: true, restart count 1
  Sep 13 13:18:39.214: INFO: nginx-proxy-cncf-5 from kube-system started at 2024-09-13 10:38:05 +0000 UTC (1 container statuses recorded)
  Sep 13 13:18:39.214: INFO: 	Container nginx-proxy ready: true, restart count 2
  Sep 13 13:18:39.214: INFO: csi-cephfsplugin-m68bj from rook-ceph started at 2024-09-12 04:28:27 +0000 UTC (3 container statuses recorded)
  Sep 13 13:18:39.214: INFO: 	Container csi-cephfsplugin ready: true, restart count 1
  Sep 13 13:18:39.214: INFO: 	Container driver-registrar ready: true, restart count 1
  Sep 13 13:18:39.214: INFO: 	Container log-collector ready: true, restart count 1
  Sep 13 13:18:39.214: INFO: csi-cephfsplugin-provisioner-69554c6fcb-jtmn4 from rook-ceph started at 2024-09-12 04:28:27 +0000 UTC (6 container statuses recorded)
  Sep 13 13:18:39.214: INFO: 	Container csi-attacher ready: true, restart count 2
  Sep 13 13:18:39.214: INFO: 	Container csi-cephfsplugin ready: true, restart count 1
  Sep 13 13:18:39.214: INFO: 	Container csi-provisioner ready: true, restart count 2
  Sep 13 13:18:39.214: INFO: 	Container csi-resizer ready: true, restart count 1
  Sep 13 13:18:39.214: INFO: 	Container csi-snapshotter ready: true, restart count 1
  Sep 13 13:18:39.214: INFO: 	Container log-collector ready: true, restart count 1
  Sep 13 13:18:39.214: INFO: csi-rbdplugin-cjlrl from rook-ceph started at 2024-09-12 04:28:26 +0000 UTC (3 container statuses recorded)
  Sep 13 13:18:39.214: INFO: 	Container csi-rbdplugin ready: true, restart count 1
  Sep 13 13:18:39.214: INFO: 	Container driver-registrar ready: true, restart count 1
  Sep 13 13:18:39.214: INFO: 	Container log-collector ready: true, restart count 1
  Sep 13 13:18:39.214: INFO: csi-rbdplugin-provisioner-78947cbcdb-zjs8f from rook-ceph started at 2024-09-12 08:30:28 +0000 UTC (6 container statuses recorded)
  Sep 13 13:18:39.214: INFO: 	Container csi-attacher ready: true, restart count 5
  Sep 13 13:18:39.214: INFO: 	Container csi-provisioner ready: true, restart count 2
  Sep 13 13:18:39.214: INFO: 	Container csi-rbdplugin ready: true, restart count 1
  Sep 13 13:18:39.214: INFO: 	Container csi-resizer ready: true, restart count 1
  Sep 13 13:18:39.214: INFO: 	Container csi-snapshotter ready: true, restart count 4
  Sep 13 13:18:39.214: INFO: 	Container log-collector ready: true, restart count 1
  Sep 13 13:18:39.214: INFO: rook-ceph-crashcollector-cncf-5-8f85f95b8-qtqwc from rook-ceph started at 2024-09-13 10:38:56 +0000 UTC (1 container statuses recorded)
  Sep 13 13:18:39.214: INFO: 	Container ceph-crash ready: true, restart count 0
  Sep 13 13:18:39.214: INFO: rook-ceph-exporter-cncf-5-7678cb8495-mgpgl from rook-ceph started at 2024-09-13 10:38:56 +0000 UTC (1 container statuses recorded)
  Sep 13 13:18:39.214: INFO: 	Container ceph-exporter ready: true, restart count 0
  Sep 13 13:18:39.214: INFO: rook-ceph-mon-b-56676fdd5-5hdhl from rook-ceph started at 2024-09-13 10:38:56 +0000 UTC (2 container statuses recorded)
  Sep 13 13:18:39.214: INFO: 	Container log-collector ready: true, restart count 0
  Sep 13 13:18:39.214: INFO: 	Container mon ready: true, restart count 0
  Sep 13 13:18:39.214: INFO: rook-ceph-osd-0-7574f4df4-bncm9 from rook-ceph started at 2024-09-13 10:38:56 +0000 UTC (2 container statuses recorded)
  Sep 13 13:18:39.214: INFO: 	Container log-collector ready: true, restart count 0
  Sep 13 13:18:39.214: INFO: 	Container osd ready: true, restart count 0
  Sep 13 13:18:39.214: INFO: rook-ceph-osd-prepare-cncf-5-f2kll from rook-ceph started at 2024-09-12 17:18:35 +0000 UTC (1 container statuses recorded)
  Sep 13 13:18:39.214: INFO: 	Container provision ready: false, restart count 0
  Sep 13 13:18:39.214: INFO: sonobuoy-systemd-logs-daemon-set-1cc6cc51fb6b46e1-27xgb from sonobuoy started at 2024-09-13 12:12:20 +0000 UTC (2 container statuses recorded)
  Sep 13 13:18:39.214: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep 13 13:18:39.214: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 09/13/24 13:18:39.215
  E0913 13:18:39.940170      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:18:40.940689      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 09/13/24 13:18:41.235
  STEP: Trying to apply a random label on the found node. @ 09/13/24 13:18:41.261
  STEP: verifying the node has the label kubernetes.io/e2e-eefc3463-b5cb-4e7b-a00f-d3889b577df8 95 @ 09/13/24 13:18:41.275
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 09/13/24 13:18:41.277
  E0913 13:18:41.940843      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:18:42.940918      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 172.10.50.243 on the node which pod4 resides and expect not scheduled @ 09/13/24 13:18:43.293
  E0913 13:18:43.941454      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:18:44.941740      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:18:45.941972      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:18:46.942306      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:18:47.942999      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:18:48.943480      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:18:49.943623      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:18:50.943945      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:18:51.943986      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:18:52.944098      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:18:53.944787      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:18:54.944877      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:18:55.945613      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:18:56.945992      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:18:57.945987      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:18:58.946306      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:18:59.946939      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:19:00.947194      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:19:01.947548      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:19:02.947776      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:19:03.947948      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:19:04.948992      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:19:05.949731      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:19:06.949831      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:19:07.950730      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:19:08.950892      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:19:09.951065      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:19:10.952030      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:19:11.952700      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:19:12.953002      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:19:13.953685      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:19:14.954153      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:19:15.954396      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:19:16.954804      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:19:17.954970      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:19:18.955076      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:19:19.955282      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:19:20.955438      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:19:21.955616      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:19:22.955745      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:19:23.956130      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:19:24.956379      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:19:25.957439      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:19:26.957489      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:19:27.957575      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:19:28.957855      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:19:29.957977      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:19:30.958269      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:19:31.958552      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:19:32.958934      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:19:33.959328      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:19:34.959918      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:19:35.960854      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:19:36.961697      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:19:37.962201      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:19:38.962316      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:19:39.963385      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:19:40.963684      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:19:41.964400      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:19:42.965178      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:19:43.965911      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:19:44.966403      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:19:45.967253      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:19:46.967548      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:19:47.967883      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:19:48.968940      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:19:49.969650      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:19:50.970064      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:19:51.970796      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:19:52.971163      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:19:53.971636      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:19:54.971895      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:19:55.972057      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:19:56.972082      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:19:57.972678      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:19:58.973178      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:19:59.974123      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:20:00.974439      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:20:01.974595      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:20:02.975393      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:20:03.976467      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:20:04.976850      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:20:05.977776      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:20:06.978249      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:20:07.979054      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:20:08.979277      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:20:09.980264      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:20:10.981227      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:20:11.981971      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:20:12.982299      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:20:13.982738      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:20:14.983011      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:20:15.984032      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:20:16.984090      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:20:17.984614      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:20:18.985243      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:20:19.985737      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:20:20.986125      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:20:21.986808      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:20:22.987158      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:20:23.987272      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:20:24.987474      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:20:25.988078      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:20:26.988129      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:20:27.989031      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:20:28.989646      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:20:29.989741      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:20:30.990036      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:20:31.990269      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:20:32.990434      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:20:33.990803      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:20:34.991241      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:20:35.991702      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:20:36.991864      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:20:37.992737      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:20:38.993620      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:20:39.993787      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:20:40.993982      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:20:41.995819      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:20:42.996004      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:20:43.996793      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:20:44.997017      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:20:45.997929      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:20:46.998599      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:20:47.999663      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:20:49.000235      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:20:50.001293      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:20:51.001454      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:20:52.002520      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:20:53.002603      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:20:54.002799      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:20:55.003244      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:20:56.003769      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:20:57.003944      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:20:58.004019      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:20:59.004666      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:21:00.005328      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:21:01.005735      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:21:02.006595      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:21:03.006952      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:21:04.007771      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:21:05.007883      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:21:06.008230      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:21:07.009195      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:21:08.009575      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:21:09.010613      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:21:10.011613      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:21:11.011923      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:21:12.012446      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:21:13.012850      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:21:14.013804      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:21:15.014254      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:21:16.015195      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:21:17.015419      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:21:18.015919      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:21:19.016283      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:21:20.017063      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:21:21.017273      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:21:22.017446      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:21:23.017929      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:21:24.019093      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:21:25.019206      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:21:26.020058      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:21:27.021005      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:21:28.021077      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:21:29.021430      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:21:30.022469      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:21:31.022794      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:21:32.022899      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:21:33.023050      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:21:34.023902      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:21:35.025090      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:21:36.026094      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:21:37.026291      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:21:38.026377      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:21:39.026813      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:21:40.027135      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:21:41.027734      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:21:42.027890      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:21:43.028913      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:21:44.029960      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:21:45.030057      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:21:46.031031      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:21:47.031278      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:21:48.034928      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:21:49.035054      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:21:50.035869      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:21:51.036029      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:21:52.036506      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:21:53.037062      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:21:54.037932      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:21:55.038300      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:21:56.039206      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:21:57.039447      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:21:58.040338      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:21:59.040717      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:22:00.041411      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:22:01.041543      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:22:02.042005      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:22:03.042218      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:22:04.043029      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:22:05.043288      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:22:06.043648      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:22:07.044029      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:22:08.044600      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:22:09.044972      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:22:10.045736      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:22:11.045861      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:22:12.046003      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:22:13.046821      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:22:14.047375      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:22:15.047411      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:22:16.047828      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:22:17.048016      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:22:18.048737      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:22:19.048932      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:22:20.049454      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:22:21.049738      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:22:22.049762      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:22:23.050539      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:22:24.051090      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:22:25.051417      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:22:26.052570      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:22:27.052960      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:22:28.054048      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:22:29.053859      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:22:30.054815      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:22:31.054786      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:22:32.055832      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:22:33.056288      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:22:34.056577      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:22:35.057049      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:22:36.057235      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:22:37.057479      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:22:38.058277      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:22:39.058440      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:22:40.059117      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:22:41.059228      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:22:42.060119      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:22:43.061037      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:22:44.061493      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:22:45.061724      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:22:46.061946      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:22:47.062198      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:22:48.063131      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:22:49.063525      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:22:50.064406      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:22:51.064996      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:22:52.065703      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:22:53.065758      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:22:54.066683      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:22:55.072599      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:22:56.073516      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:22:57.073843      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:22:58.074749      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:22:59.075020      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:23:00.075306      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:23:01.075338      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:23:02.075909      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:23:03.076890      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:23:04.077078      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:23:05.077633      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:23:06.078424      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:23:07.079014      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:23:08.079789      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:23:09.080233      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:23:10.080703      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:23:11.081040      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:23:12.081917      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:23:13.082037      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:23:14.082640      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:23:15.083007      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:23:16.083896      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:23:17.084012      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:23:18.084397      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:23:19.084815      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:23:20.085340      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:23:21.085571      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:23:22.085624      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:23:23.085738      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:23:24.086283      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:23:25.086447      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:23:26.086619      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:23:27.086903      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:23:28.087848      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:23:29.087980      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:23:30.088408      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:23:31.089031      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:23:32.089702      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:23:33.089823      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:23:34.089956      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:23:35.090464      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:23:36.091028      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:23:37.091745      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:23:38.092407      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:23:39.093090      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:23:40.093144      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:23:41.093265      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:23:42.094178      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:23:43.095558      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-eefc3463-b5cb-4e7b-a00f-d3889b577df8 off the node cncf-3 @ 09/13/24 13:23:43.366
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-eefc3463-b5cb-4e7b-a00f-d3889b577df8 @ 09/13/24 13:23:43.383
  Sep 13 13:23:43.386: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-7275" for this suite. @ 09/13/24 13:23:43.391
• [304.324 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:69
  STEP: Creating a kubernetes client @ 09/13/24 13:23:43.402
  Sep 13 13:23:43.402: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename endpointslice @ 09/13/24 13:23:43.403
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:23:43.427
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:23:43.43
  Sep 13 13:23:43.438: INFO: Endpoints addresses: [172.10.50.96] , ports: [6443]
  Sep 13 13:23:43.438: INFO: EndpointSlices addresses: [172.10.50.96] , ports: [6443]
  Sep 13 13:23:43.438: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-4886" for this suite. @ 09/13/24 13:23:43.442
• [0.045 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:223
  STEP: Creating a kubernetes client @ 09/13/24 13:23:43.448
  Sep 13 13:23:43.448: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename downward-api @ 09/13/24 13:23:43.449
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:23:43.463
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:23:43.465
  STEP: Creating a pod to test downward API volume plugin @ 09/13/24 13:23:43.47
  E0913 13:23:44.095097      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:23:45.095680      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:23:46.095824      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:23:47.095930      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/13/24 13:23:47.486
  Sep 13 13:23:47.488: INFO: Trying to get logs from node cncf-3 pod downwardapi-volume-5804507c-bdee-4b8f-9870-e0e6c9000b8b container client-container: <nil>
  STEP: delete the pod @ 09/13/24 13:23:47.5
  Sep 13 13:23:47.516: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2921" for this suite. @ 09/13/24 13:23:47.52
• [4.086 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:94
  STEP: Creating a kubernetes client @ 09/13/24 13:23:47.534
  Sep 13 13:23:47.534: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename configmap @ 09/13/24 13:23:47.535
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:23:47.562
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:23:47.564
  STEP: Creating configMap configmap-5857/configmap-test-59a0dacf-9432-4728-9ce2-d3c767f5cd1f @ 09/13/24 13:23:47.566
  STEP: Creating a pod to test consume configMaps @ 09/13/24 13:23:47.571
  E0913 13:23:48.096917      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:23:49.097112      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:23:50.097496      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:23:51.097641      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/13/24 13:23:51.594
  Sep 13 13:23:51.596: INFO: Trying to get logs from node cncf-3 pod pod-configmaps-3b4785b8-962b-4440-a57c-619b036b8a75 container env-test: <nil>
  STEP: delete the pod @ 09/13/24 13:23:51.601
  Sep 13 13:23:51.623: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5857" for this suite. @ 09/13/24 13:23:51.627
• [4.098 seconds]
------------------------------
SSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:90
  STEP: Creating a kubernetes client @ 09/13/24 13:23:51.632
  Sep 13 13:23:51.632: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename configmap @ 09/13/24 13:23:51.633
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:23:51.643
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:23:51.645
  STEP: Creating configMap with name configmap-test-volume-map-7c9dff0f-e444-465c-8d1e-43bcf03f361e @ 09/13/24 13:23:51.649
  STEP: Creating a pod to test consume configMaps @ 09/13/24 13:23:51.653
  E0913 13:23:52.097832      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:23:53.098403      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:23:54.098625      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:23:55.099981      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/13/24 13:23:55.685
  Sep 13 13:23:55.687: INFO: Trying to get logs from node cncf-3 pod pod-configmaps-ca26f863-9627-4724-94e3-6d010e8eca01 container agnhost-container: <nil>
  STEP: delete the pod @ 09/13/24 13:23:55.692
  Sep 13 13:23:55.707: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7896" for this suite. @ 09/13/24 13:23:55.71
• [4.090 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 09/13/24 13:23:55.722
  Sep 13 13:23:55.722: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename deployment @ 09/13/24 13:23:55.723
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:23:55.742
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:23:55.745
  Sep 13 13:23:55.748: INFO: Creating deployment "webserver-deployment"
  Sep 13 13:23:55.753: INFO: Waiting for observed generation 1
  E0913 13:23:56.100591      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:23:57.101046      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:23:57.758: INFO: Waiting for all required pods to come up
  Sep 13 13:23:57.762: INFO: Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 09/13/24 13:23:57.762
  E0913 13:23:58.102091      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:23:59.102432      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:23:59.778: INFO: Waiting for deployment "webserver-deployment" to complete
  Sep 13 13:23:59.787: INFO: Updating deployment "webserver-deployment" with a non-existent image
  Sep 13 13:23:59.795: INFO: Updating deployment webserver-deployment
  Sep 13 13:23:59.795: INFO: Waiting for observed generation 2
  E0913 13:24:00.103318      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:24:01.103465      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:24:01.801: INFO: Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  Sep 13 13:24:01.803: INFO: Waiting for the first rollout's replicaset to have .spec.replicas = 8
  Sep 13 13:24:01.804: INFO: Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  Sep 13 13:24:01.812: INFO: Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  Sep 13 13:24:01.812: INFO: Waiting for the second rollout's replicaset to have .spec.replicas = 5
  Sep 13 13:24:01.814: INFO: Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  Sep 13 13:24:01.816: INFO: Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  Sep 13 13:24:01.816: INFO: Scaling up the deployment "webserver-deployment" from 10 to 30
  Sep 13 13:24:01.836: INFO: Updating deployment webserver-deployment
  Sep 13 13:24:01.836: INFO: Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  Sep 13 13:24:01.842: INFO: Verifying that first rollout's replicaset has .spec.replicas = 20
  Sep 13 13:24:01.843: INFO: Verifying that second rollout's replicaset has .spec.replicas = 13
  E0913 13:24:02.104349      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:24:03.104892      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:24:03.860: INFO: Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3147",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "619e5421-5c29-4767-a92a-f429aeebd474",
      ResourceVersion: (string) (len=6) "737566",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861830635,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830643,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 3,
      Replicas: (int32) 33,
      UpdatedReplicas: (int32) 13,
      ReadyReplicas: (int32) 19,
      AvailableReplicas: (int32) 19,
      UnavailableReplicas: (int32) 14,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830643,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830635,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=59) "ReplicaSet \"webserver-deployment-9b4f5bf69\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Sep 13 13:24:03.867: INFO: New ReplicaSet "webserver-deployment-9b4f5bf69" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3147",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "46fcedcb-a33d-4266-9a5a-b9fcf44ac635",
      ResourceVersion: (string) (len=6) "737416",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861830639,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "619e5421-5c29-4767-a92a-f429aeebd474",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 36 31 39 65 35 34  32 31 2d 35 63 32 39 2d  |\"619e5421-5c29-|
              00000120  34 37 36 37 2d 61 39 32  61 2d 66 34 32 39 61 65  |4767-a92a-f429ae|
              00000130  65 62 64 34 37 34 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |ebd474\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 13,
      FullyLabeledReplicas: (int32) 13,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Sep 13 13:24:03.868: INFO: All old ReplicaSets of Deployment "webserver-deployment":
  Sep 13 13:24:03.869: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-557759b7c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3147",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a6899d7c-3ead-4352-915f-a467608d4b12",
      ResourceVersion: (string) (len=6) "737569",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861830635,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "619e5421-5c29-4767-a92a-f429aeebd474",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 36 31 39 65 35 34  32 31 2d 35 63 32 39 2d  |\"619e5421-5c29-|
              00000120  34 37 36 37 2d 61 39 32  61 2d 66 34 32 39 61 65  |4767-a92a-f429ae|
              00000130  65 62 64 34 37 34 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |ebd474\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830643,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 20,
      FullyLabeledReplicas: (int32) 20,
      ReadyReplicas: (int32) 20,
      AvailableReplicas: (int32) 20,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Sep 13 13:24:03.880: INFO: Pod "webserver-deployment-557759b7c7-4b8bh" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-4b8bh",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-3147",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f17436ab-4351-4607-bb13-a80598aac416",
      ResourceVersion: (string) (len=6) "737209",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861830635,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "a6899d7c-3ead-4352-915f-a467608d4b12",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830635,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 36  38 39 39 64 37 63 2d 33  |d\":\"a6899d7c-3|
              00000090  65 61 64 2d 34 33 35 32  2d 39 31 35 66 2d 61 34  |ead-4352-915f-a4|
              000000a0  36 37 36 30 38 64 34 62  31 32 5c 22 7d 22 3a 7b  |67608d4b12\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830637,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 30 2e 34 2e 31 35 35  5c 22 7d 22 3a 7b 22 2e  |.0.4.155\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-d8rph",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-d8rph",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "cncf-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830637,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830635,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830637,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830637,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830635,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.10.50.163",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.10.50.163"
        }
      },
      PodIP: (string) (len=10) "10.0.4.155",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.0.4.155"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861830635,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63861830636,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://4a818c351b3560e750fc1a4395be484a11ed3224c1927d5f2128bacce5c3f633",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 13 13:24:03.882: INFO: Pod "webserver-deployment-557759b7c7-4jc74" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-4jc74",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-3147",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "32cd1895-1da0-4fe6-93c2-ebffe6b352e2",
      ResourceVersion: (string) (len=6) "737554",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861830641,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "a6899d7c-3ead-4352-915f-a467608d4b12",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 36  38 39 39 64 37 63 2d 33  |d\":\"a6899d7c-3|
              00000090  65 61 64 2d 34 33 35 32  2d 39 31 35 66 2d 61 34  |ead-4352-915f-a4|
              000000a0  36 37 36 30 38 64 34 62  31 32 5c 22 7d 22 3a 7b  |67608d4b12\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830643,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 30 2e 31 2e 32 34 30  5c 22 7d 22 3a 7b 22 2e  |.0.1.240\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4fvdd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4fvdd",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "cncf-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830643,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830643,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830643,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.10.50.243",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.10.50.243"
        }
      },
      PodIP: (string) (len=10) "10.0.1.240",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.0.1.240"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861830641,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63861830643,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://4d765e91756c9019cd352981c03390746ec9c997807aeed4197d330f8464d765",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 13 13:24:03.883: INFO: Pod "webserver-deployment-557759b7c7-4l2mw" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-4l2mw",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-3147",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a0cbd65d-7eb5-4c9d-bfcf-661ce7fa36e7",
      ResourceVersion: (string) (len=6) "737215",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861830635,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "a6899d7c-3ead-4352-915f-a467608d4b12",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830635,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 36  38 39 39 64 37 63 2d 33  |d\":\"a6899d7c-3|
              00000090  65 61 64 2d 34 33 35 32  2d 39 31 35 66 2d 61 34  |ead-4352-915f-a4|
              000000a0  36 37 36 30 38 64 34 62  31 32 5c 22 7d 22 3a 7b  |67608d4b12\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830637,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 30 2e 30 2e 31 31 39  5c 22 7d 22 3a 7b 22 2e  |.0.0.119\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ql7nt",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ql7nt",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "cncf-5",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830637,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830635,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830637,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830637,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830635,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.10.50.77",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.10.50.77"
        }
      },
      PodIP: (string) (len=10) "10.0.0.119",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.0.0.119"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861830635,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63861830636,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://f43b9c9a032b7436407fe2ad737b18f9533631787c8634c99b30f52771d299ea",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 13 13:24:03.884: INFO: Pod "webserver-deployment-557759b7c7-5zqr4" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-5zqr4",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-3147",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c8a47cbd-2ea0-4b45-94fa-7baf2be0c10b",
      ResourceVersion: (string) (len=6) "737212",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861830635,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "a6899d7c-3ead-4352-915f-a467608d4b12",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830635,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 36  38 39 39 64 37 63 2d 33  |d\":\"a6899d7c-3|
              00000090  65 61 64 2d 34 33 35 32  2d 39 31 35 66 2d 61 34  |ead-4352-915f-a4|
              000000a0  36 37 36 30 38 64 34 62  31 32 5c 22 7d 22 3a 7b  |67608d4b12\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830637,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=658) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 30 2e 34 2e 37 37 5c  22 7d 22 3a 7b 22 2e 22  |.0.4.77\"}":{"."|
              00000270  3a 7b 7d 2c 22 66 3a 69  70 22 3a 7b 7d 7d 7d 2c  |:{},"f:ip":{}}},|
              00000280  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              00000290  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5jxm6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5jxm6",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "cncf-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830637,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830635,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830637,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830637,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830635,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.10.50.163",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.10.50.163"
        }
      },
      PodIP: (string) (len=9) "10.0.4.77",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=9) "10.0.4.77"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861830635,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63861830636,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://5c3e2aa5c64aa6bc4a8b12cab4f04d99aff8c33c4a6d431dd21865641ad7640a",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 13 13:24:03.887: INFO: Pod "webserver-deployment-557759b7c7-7tb46" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-7tb46",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-3147",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a5a727dd-ccc2-4664-9c8f-c948eed57e53",
      ResourceVersion: (string) (len=6) "737536",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861830641,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "a6899d7c-3ead-4352-915f-a467608d4b12",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 36  38 39 39 64 37 63 2d 33  |d\":\"a6899d7c-3|
              00000090  65 61 64 2d 34 33 35 32  2d 39 31 35 66 2d 61 34  |ead-4352-915f-a4|
              000000a0  36 37 36 30 38 64 34 62  31 32 5c 22 7d 22 3a 7b  |67608d4b12\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830643,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=658) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 30 2e 30 2e 37 36 5c  22 7d 22 3a 7b 22 2e 22  |.0.0.76\"}":{"."|
              00000270  3a 7b 7d 2c 22 66 3a 69  70 22 3a 7b 7d 7d 7d 2c  |:{},"f:ip":{}}},|
              00000280  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              00000290  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zgjbw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zgjbw",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "cncf-5",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830643,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830643,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830643,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.10.50.77",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.10.50.77"
        }
      },
      PodIP: (string) (len=9) "10.0.0.76",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=9) "10.0.0.76"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861830641,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63861830642,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://3e5ed63d13d8abb9dabdb0afdcab1b167d9c06e410471b367bfb1ae6f4bf5c7b",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 13 13:24:03.890: INFO: Pod "webserver-deployment-557759b7c7-7v5tc" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-7v5tc",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-3147",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ff24b76e-04dc-4c03-9e93-aae29b0e66ad",
      ResourceVersion: (string) (len=6) "737224",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861830635,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "a6899d7c-3ead-4352-915f-a467608d4b12",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830635,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 36  38 39 39 64 37 63 2d 33  |d\":\"a6899d7c-3|
              00000090  65 61 64 2d 34 33 35 32  2d 39 31 35 66 2d 61 34  |ead-4352-915f-a4|
              000000a0  36 37 36 30 38 64 34 62  31 32 5c 22 7d 22 3a 7b  |67608d4b12\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830637,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=658) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 30 2e 31 2e 37 30 5c  22 7d 22 3a 7b 22 2e 22  |.0.1.70\"}":{"."|
              00000270  3a 7b 7d 2c 22 66 3a 69  70 22 3a 7b 7d 7d 7d 2c  |:{},"f:ip":{}}},|
              00000280  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              00000290  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-sd8mw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-sd8mw",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "cncf-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830637,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830635,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830637,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830637,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830635,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.10.50.243",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.10.50.243"
        }
      },
      PodIP: (string) (len=9) "10.0.1.70",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=9) "10.0.1.70"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861830635,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63861830636,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://3926cd39f254ef5e5d7e312239cf7aef782c070fa6b5afdbef0410e0a5a1a594",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 13 13:24:03.891: INFO: Pod "webserver-deployment-557759b7c7-88r5r" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-88r5r",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-3147",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fc13cc64-c99b-4785-a56a-515f577fa6ab",
      ResourceVersion: (string) (len=6) "737532",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861830641,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "a6899d7c-3ead-4352-915f-a467608d4b12",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 36  38 39 39 64 37 63 2d 33  |d\":\"a6899d7c-3|
              00000090  65 61 64 2d 34 33 35 32  2d 39 31 35 66 2d 61 34  |ead-4352-915f-a4|
              000000a0  36 37 36 30 38 64 34 62  31 32 5c 22 7d 22 3a 7b  |67608d4b12\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830643,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=658) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 30 2e 30 2e 32 30 5c  22 7d 22 3a 7b 22 2e 22  |.0.0.20\"}":{"."|
              00000270  3a 7b 7d 2c 22 66 3a 69  70 22 3a 7b 7d 7d 7d 2c  |:{},"f:ip":{}}},|
              00000280  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              00000290  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-s47bg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-s47bg",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "cncf-5",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830643,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830643,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830643,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.10.50.77",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.10.50.77"
        }
      },
      PodIP: (string) (len=9) "10.0.0.20",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=9) "10.0.0.20"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861830641,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63861830643,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://4038ac32361e3039a315055ff4f8fc9053d13e21822f85ff518da3bc4af8f583",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 13 13:24:03.893: INFO: Pod "webserver-deployment-557759b7c7-9hqc7" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-9hqc7",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-3147",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2a1f722a-c182-48b0-9a18-53e1fbc9d898",
      ResourceVersion: (string) (len=6) "737531",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861830641,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "a6899d7c-3ead-4352-915f-a467608d4b12",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 36  38 39 39 64 37 63 2d 33  |d\":\"a6899d7c-3|
              00000090  65 61 64 2d 34 33 35 32  2d 39 31 35 66 2d 61 34  |ead-4352-915f-a4|
              000000a0  36 37 36 30 38 64 34 62  31 32 5c 22 7d 22 3a 7b  |67608d4b12\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830643,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=658) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 30 2e 34 2e 39 30 5c  22 7d 22 3a 7b 22 2e 22  |.0.4.90\"}":{"."|
              00000270  3a 7b 7d 2c 22 66 3a 69  70 22 3a 7b 7d 7d 7d 2c  |:{},"f:ip":{}}},|
              00000280  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              00000290  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-tl452",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-tl452",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "cncf-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830643,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830643,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830643,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.10.50.163",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.10.50.163"
        }
      },
      PodIP: (string) (len=9) "10.0.4.90",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=9) "10.0.4.90"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861830641,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63861830643,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://d5cb8f91e9ab0fab7d28689836a54637c92f9568c2b773c42534ae13a65b5105",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 13 13:24:03.896: INFO: Pod "webserver-deployment-557759b7c7-dh728" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-dh728",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-3147",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "278cd103-ebbe-4e5c-beb1-5ca2d06a0113",
      ResourceVersion: (string) (len=6) "737559",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861830641,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "a6899d7c-3ead-4352-915f-a467608d4b12",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 36  38 39 39 64 37 63 2d 33  |d\":\"a6899d7c-3|
              00000090  65 61 64 2d 34 33 35 32  2d 39 31 35 66 2d 61 34  |ead-4352-915f-a4|
              000000a0  36 37 36 30 38 64 34 62  31 32 5c 22 7d 22 3a 7b  |67608d4b12\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830643,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=658) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 30 2e 31 2e 31 33 5c  22 7d 22 3a 7b 22 2e 22  |.0.1.13\"}":{"."|
              00000270  3a 7b 7d 2c 22 66 3a 69  70 22 3a 7b 7d 7d 7d 2c  |:{},"f:ip":{}}},|
              00000280  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              00000290  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-cs4xh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-cs4xh",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "cncf-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830643,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830643,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830643,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.10.50.243",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.10.50.243"
        }
      },
      PodIP: (string) (len=9) "10.0.1.13",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=9) "10.0.1.13"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861830641,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63861830643,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://47dd17aa0d712e612d82ee5be665f6bf2005972eefd424d3207cefc3cefbec55",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 13 13:24:03.898: INFO: Pod "webserver-deployment-557759b7c7-gx5qh" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-gx5qh",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-3147",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c58aa6ef-8dd2-4cf7-ada0-66fdcd8e5182",
      ResourceVersion: (string) (len=6) "737533",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861830641,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "a6899d7c-3ead-4352-915f-a467608d4b12",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 36  38 39 39 64 37 63 2d 33  |d\":\"a6899d7c-3|
              00000090  65 61 64 2d 34 33 35 32  2d 39 31 35 66 2d 61 34  |ead-4352-915f-a4|
              000000a0  36 37 36 30 38 64 34 62  31 32 5c 22 7d 22 3a 7b  |67608d4b12\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830643,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=658) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 30 2e 34 2e 33 33 5c  22 7d 22 3a 7b 22 2e 22  |.0.4.33\"}":{"."|
              00000270  3a 7b 7d 2c 22 66 3a 69  70 22 3a 7b 7d 7d 7d 2c  |:{},"f:ip":{}}},|
              00000280  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              00000290  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9jbvl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9jbvl",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "cncf-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830643,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830643,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830643,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.10.50.163",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.10.50.163"
        }
      },
      PodIP: (string) (len=9) "10.0.4.33",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=9) "10.0.4.33"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861830641,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63861830643,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://f21f53636359b332d71b5b94708ff6ab335ed7c14609d58262262223f32e2695",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 13 13:24:03.902: INFO: Pod "webserver-deployment-557759b7c7-k2hfv" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-k2hfv",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-3147",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d201f69d-49cf-4d75-b414-2862c9fa567c",
      ResourceVersion: (string) (len=6) "737541",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861830641,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "a6899d7c-3ead-4352-915f-a467608d4b12",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 36  38 39 39 64 37 63 2d 33  |d\":\"a6899d7c-3|
              00000090  65 61 64 2d 34 33 35 32  2d 39 31 35 66 2d 61 34  |ead-4352-915f-a4|
              000000a0  36 37 36 30 38 64 34 62  31 32 5c 22 7d 22 3a 7b  |67608d4b12\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830643,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=658) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 30 2e 30 2e 33 39 5c  22 7d 22 3a 7b 22 2e 22  |.0.0.39\"}":{"."|
              00000270  3a 7b 7d 2c 22 66 3a 69  70 22 3a 7b 7d 7d 7d 2c  |:{},"f:ip":{}}},|
              00000280  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              00000290  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5jllx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5jllx",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "cncf-5",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830643,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830643,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830643,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.10.50.77",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.10.50.77"
        }
      },
      PodIP: (string) (len=9) "10.0.0.39",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=9) "10.0.0.39"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861830641,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63861830643,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://0c41d95a8b8adb0a8cc43e1685a4b65b778ae348462417b7562f4a418f7aad2f",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 13 13:24:03.903: INFO: Pod "webserver-deployment-557759b7c7-kvdzm" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-kvdzm",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-3147",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0416d8a7-a5b7-4918-a7ce-fd4cc2a20ff4",
      ResourceVersion: (string) (len=6) "737211",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861830635,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "a6899d7c-3ead-4352-915f-a467608d4b12",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830635,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 36  38 39 39 64 37 63 2d 33  |d\":\"a6899d7c-3|
              00000090  65 61 64 2d 34 33 35 32  2d 39 31 35 66 2d 61 34  |ead-4352-915f-a4|
              000000a0  36 37 36 30 38 64 34 62  31 32 5c 22 7d 22 3a 7b  |67608d4b12\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830637,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 30 2e 30 2e 31 30 39  5c 22 7d 22 3a 7b 22 2e  |.0.0.109\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mt42h",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mt42h",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "cncf-5",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830637,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830635,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830637,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830637,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830635,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.10.50.77",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.10.50.77"
        }
      },
      PodIP: (string) (len=10) "10.0.0.109",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.0.0.109"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861830635,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63861830636,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://0ca6e7bc59c822c3e7766d62acde21b7be12688403827afc6b195d9fa6abb9dd",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 13 13:24:03.906: INFO: Pod "webserver-deployment-557759b7c7-mc7pw" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-mc7pw",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-3147",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "80c417ed-4fac-4789-8414-868a1d7c84a7",
      ResourceVersion: (string) (len=6) "737195",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861830635,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "a6899d7c-3ead-4352-915f-a467608d4b12",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830635,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 36  38 39 39 64 37 63 2d 33  |d\":\"a6899d7c-3|
              00000090  65 61 64 2d 34 33 35 32  2d 39 31 35 66 2d 61 34  |ead-4352-915f-a4|
              000000a0  36 37 36 30 38 64 34 62  31 32 5c 22 7d 22 3a 7b  |67608d4b12\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830636,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 30 2e 33 2e 31 38 33  5c 22 7d 22 3a 7b 22 2e  |.0.3.183\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9br99",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9br99",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "cncf-4",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830636,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830635,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830636,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830636,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830635,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.10.50.34",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.10.50.34"
        }
      },
      PodIP: (string) (len=10) "10.0.3.183",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.0.3.183"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861830635,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63861830636,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://d0f21e5ce037b5e8e6c67d204d7dfdb1be37aec55286aca46ac3c86020a20fc9",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 13 13:24:03.908: INFO: Pod "webserver-deployment-557759b7c7-q6vzg" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-q6vzg",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-3147",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0a55f8a2-9c61-47d1-a897-25e69feedbf2",
      ResourceVersion: (string) (len=6) "737568",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861830641,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "a6899d7c-3ead-4352-915f-a467608d4b12",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 36  38 39 39 64 37 63 2d 33  |d\":\"a6899d7c-3|
              00000090  65 61 64 2d 34 33 35 32  2d 39 31 35 66 2d 61 34  |ead-4352-915f-a4|
              000000a0  36 37 36 30 38 64 34 62  31 32 5c 22 7d 22 3a 7b  |67608d4b12\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830643,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=658) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 30 2e 33 2e 36 36 5c  22 7d 22 3a 7b 22 2e 22  |.0.3.66\"}":{"."|
              00000270  3a 7b 7d 2c 22 66 3a 69  70 22 3a 7b 7d 7d 7d 2c  |:{},"f:ip":{}}},|
              00000280  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              00000290  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-f2hmh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-f2hmh",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "cncf-4",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830643,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830643,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830643,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.10.50.34",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.10.50.34"
        }
      },
      PodIP: (string) (len=9) "10.0.3.66",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=9) "10.0.3.66"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861830641,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63861830643,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://897346543da45293fc143730427c649eab7561409ad78e6f2bae089624938665",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 13 13:24:03.910: INFO: Pod "webserver-deployment-557759b7c7-rsgzn" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-rsgzn",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-3147",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "234f03a8-c0d7-41d6-bd79-37574d198879",
      ResourceVersion: (string) (len=6) "737229",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861830635,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "a6899d7c-3ead-4352-915f-a467608d4b12",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830635,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 36  38 39 39 64 37 63 2d 33  |d\":\"a6899d7c-3|
              00000090  65 61 64 2d 34 33 35 32  2d 39 31 35 66 2d 61 34  |ead-4352-915f-a4|
              000000a0  36 37 36 30 38 64 34 62  31 32 5c 22 7d 22 3a 7b  |67608d4b12\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830637,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 30 2e 33 2e 31 31 34  5c 22 7d 22 3a 7b 22 2e  |.0.3.114\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-99k8k",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-99k8k",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "cncf-4",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830637,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830635,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830637,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830637,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830635,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.10.50.34",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.10.50.34"
        }
      },
      PodIP: (string) (len=10) "10.0.3.114",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.0.3.114"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861830635,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63861830636,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://7cbbb2d1126990e7d218bbe0ae5df6def3c06c59880e4bb7de4d020b4030fa8d",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 13 13:24:03.911: INFO: Pod "webserver-deployment-557759b7c7-sjjcz" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-sjjcz",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-3147",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c03d719b-3de0-4e17-9b03-e74cb23a7409",
      ResourceVersion: (string) (len=6) "737564",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861830641,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "a6899d7c-3ead-4352-915f-a467608d4b12",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 36  38 39 39 64 37 63 2d 33  |d\":\"a6899d7c-3|
              00000090  65 61 64 2d 34 33 35 32  2d 39 31 35 66 2d 61 34  |ead-4352-915f-a4|
              000000a0  36 37 36 30 38 64 34 62  31 32 5c 22 7d 22 3a 7b  |67608d4b12\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830643,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=658) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 30 2e 33 2e 39 39 5c  22 7d 22 3a 7b 22 2e 22  |.0.3.99\"}":{"."|
              00000270  3a 7b 7d 2c 22 66 3a 69  70 22 3a 7b 7d 7d 7d 2c  |:{},"f:ip":{}}},|
              00000280  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              00000290  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jpqt9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jpqt9",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "cncf-4",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830643,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830643,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830643,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.10.50.34",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.10.50.34"
        }
      },
      PodIP: (string) (len=9) "10.0.3.99",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=9) "10.0.3.99"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861830641,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63861830642,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://c1260cceac5e9fd0b51425e8e49927a8eb6d18c4d9d102bce8faedbab9d3769f",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 13 13:24:03.912: INFO: Pod "webserver-deployment-557759b7c7-x5272" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-x5272",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-3147",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b96b494f-3018-4f1d-ab5c-2c8051d8a2c6",
      ResourceVersion: (string) (len=6) "737232",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861830635,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "a6899d7c-3ead-4352-915f-a467608d4b12",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830635,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 36  38 39 39 64 37 63 2d 33  |d\":\"a6899d7c-3|
              00000090  65 61 64 2d 34 33 35 32  2d 39 31 35 66 2d 61 34  |ead-4352-915f-a4|
              000000a0  36 37 36 30 38 64 34 62  31 32 5c 22 7d 22 3a 7b  |67608d4b12\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830637,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 30 2e 33 2e 31 36 33  5c 22 7d 22 3a 7b 22 2e  |.0.3.163\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6n65g",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6n65g",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "cncf-4",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830637,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830635,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830637,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830637,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830635,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.10.50.34",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.10.50.34"
        }
      },
      PodIP: (string) (len=10) "10.0.3.163",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.0.3.163"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861830635,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63861830636,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://3f0ca28189f02f3f697175e96bc38327f1973f2a9879dd9c7e5d959311be423f",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 13 13:24:03.913: INFO: Pod "webserver-deployment-557759b7c7-xdfn9" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-xdfn9",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-3147",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "203aaa88-8373-4715-9327-20f9f91a1045",
      ResourceVersion: (string) (len=6) "737556",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861830641,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "a6899d7c-3ead-4352-915f-a467608d4b12",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 36  38 39 39 64 37 63 2d 33  |d\":\"a6899d7c-3|
              00000090  65 61 64 2d 34 33 35 32  2d 39 31 35 66 2d 61 34  |ead-4352-915f-a4|
              000000a0  36 37 36 30 38 64 34 62  31 32 5c 22 7d 22 3a 7b  |67608d4b12\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830643,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=658) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 30 2e 31 2e 35 32 5c  22 7d 22 3a 7b 22 2e 22  |.0.1.52\"}":{"."|
              00000270  3a 7b 7d 2c 22 66 3a 69  70 22 3a 7b 7d 7d 7d 2c  |:{},"f:ip":{}}},|
              00000280  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              00000290  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jdg6f",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jdg6f",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "cncf-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830643,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830643,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830643,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.10.50.243",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.10.50.243"
        }
      },
      PodIP: (string) (len=9) "10.0.1.52",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=9) "10.0.1.52"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861830641,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63861830642,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://bc9cd8c59583def13601daa628029374fe60ccf0220c2667994e371f884b55ff",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 13 13:24:03.916: INFO: Pod "webserver-deployment-557759b7c7-xptvl" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-xptvl",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-3147",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "49181eee-fc60-49c3-a5c6-93a12d71c075",
      ResourceVersion: (string) (len=6) "737548",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861830641,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "a6899d7c-3ead-4352-915f-a467608d4b12",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 36  38 39 39 64 37 63 2d 33  |d\":\"a6899d7c-3|
              00000090  65 61 64 2d 34 33 35 32  2d 39 31 35 66 2d 61 34  |ead-4352-915f-a4|
              000000a0  36 37 36 30 38 64 34 62  31 32 5c 22 7d 22 3a 7b  |67608d4b12\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830643,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 30 2e 31 2e 31 38 30  5c 22 7d 22 3a 7b 22 2e  |.0.1.180\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7mbjs",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7mbjs",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "cncf-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830643,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830643,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830643,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.10.50.243",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.10.50.243"
        }
      },
      PodIP: (string) (len=10) "10.0.1.180",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.0.1.180"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861830641,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63861830643,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://3276cb9aa47aad0b89521d15265fe8e15d07e4c3a98e0a73e7abf28480c22ff2",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 13 13:24:03.917: INFO: Pod "webserver-deployment-557759b7c7-zchph" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-zchph",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-3147",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3b5f7d4f-e6ca-4a55-be72-38261a497b78",
      ResourceVersion: (string) (len=6) "737538",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861830641,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "a6899d7c-3ead-4352-915f-a467608d4b12",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 36  38 39 39 64 37 63 2d 33  |d\":\"a6899d7c-3|
              00000090  65 61 64 2d 34 33 35 32  2d 39 31 35 66 2d 61 34  |ead-4352-915f-a4|
              000000a0  36 37 36 30 38 64 34 62  31 32 5c 22 7d 22 3a 7b  |67608d4b12\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830643,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 30 2e 34 2e 31 32 35  5c 22 7d 22 3a 7b 22 2e  |.0.4.125\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-75gsr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-75gsr",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "cncf-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830643,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830643,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830643,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.10.50.163",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.10.50.163"
        }
      },
      PodIP: (string) (len=10) "10.0.4.125",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.0.4.125"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861830641,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63861830643,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://45b03ae718d9467ccd375e903911c35ba5ca1e5d6d021780f4f6b438698d1e11",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 13 13:24:03.918: INFO: Pod "webserver-deployment-9b4f5bf69-29h65" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-29h65",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-3147",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "07bae618-7c75-4383-a329-21179ad94e53",
      ResourceVersion: (string) (len=6) "737418",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861830641,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "46fcedcb-a33d-4266-9a5a-b9fcf44ac635",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 36  66 63 65 64 63 62 2d 61  |d\":\"46fcedcb-a|
              00000090  33 33 64 2d 34 32 36 36  2d 39 61 35 61 2d 62 39  |33d-4266-9a5a-b9|
              000000a0  66 63 66 34 34 61 63 36  33 35 5c 22 7d 22 3a 7b  |fcf44ac635\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bzch8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bzch8",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "cncf-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.10.50.243",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.10.50.243"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861830641,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 13 13:24:03.920: INFO: Pod "webserver-deployment-9b4f5bf69-2lt8r" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-2lt8r",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-3147",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "de648efe-9b06-49f2-ab0f-a614292a14c5",
      ResourceVersion: (string) (len=6) "737408",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861830641,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "46fcedcb-a33d-4266-9a5a-b9fcf44ac635",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 36  66 63 65 64 63 62 2d 61  |d\":\"46fcedcb-a|
              00000090  33 33 64 2d 34 32 36 36  2d 39 61 35 61 2d 62 39  |33d-4266-9a5a-b9|
              000000a0  66 63 66 34 34 61 63 36  33 35 5c 22 7d 22 3a 7b  |fcf44ac635\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5264d",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5264d",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "cncf-5",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.10.50.77",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.10.50.77"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861830641,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 13 13:24:03.922: INFO: Pod "webserver-deployment-9b4f5bf69-5rq9b" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-5rq9b",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-3147",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "866f84ef-865d-4ab8-b261-6eec9a53cc0c",
      ResourceVersion: (string) (len=6) "737407",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861830641,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "46fcedcb-a33d-4266-9a5a-b9fcf44ac635",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 36  66 63 65 64 63 62 2d 61  |d\":\"46fcedcb-a|
              00000090  33 33 64 2d 34 32 36 36  2d 39 61 35 61 2d 62 39  |33d-4266-9a5a-b9|
              000000a0  66 63 66 34 34 61 63 36  33 35 5c 22 7d 22 3a 7b  |fcf44ac635\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-plstk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-plstk",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "cncf-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.10.50.163",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.10.50.163"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861830641,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 13 13:24:03.924: INFO: Pod "webserver-deployment-9b4f5bf69-9zqj9" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-9zqj9",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-3147",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0578942e-1273-4c3c-89c6-26d1c24fce6b",
      ResourceVersion: (string) (len=6) "737430",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861830641,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "46fcedcb-a33d-4266-9a5a-b9fcf44ac635",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 36  66 63 65 64 63 62 2d 61  |d\":\"46fcedcb-a|
              00000090  33 33 64 2d 34 32 36 36  2d 39 61 35 61 2d 62 39  |33d-4266-9a5a-b9|
              000000a0  66 63 66 34 34 61 63 36  33 35 5c 22 7d 22 3a 7b  |fcf44ac635\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830642,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gqzw2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gqzw2",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "cncf-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.10.50.243",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.10.50.243"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861830641,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 13 13:24:03.926: INFO: Pod "webserver-deployment-9b4f5bf69-dqfzq" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-dqfzq",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-3147",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2b31fb90-f9c8-4452-a687-c99cd62ba5ce",
      ResourceVersion: (string) (len=6) "737450",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861830639,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "46fcedcb-a33d-4266-9a5a-b9fcf44ac635",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830639,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 36  66 63 65 64 63 62 2d 61  |d\":\"46fcedcb-a|
              00000090  33 33 64 2d 34 32 36 36  2d 39 61 35 61 2d 62 39  |33d-4266-9a5a-b9|
              000000a0  66 63 66 34 34 61 63 36  33 35 5c 22 7d 22 3a 7b  |fcf44ac635\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830642,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=704) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 30 2e  |:{\"ip\":\"10.0.|
              00000290  31 2e 31 39 33 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |1.193\"}":{".":{|
              000002a0  7d 2c 22 66 3a 69 70 22  3a 7b 7d 7d 7d 2c 22 66  |},"f:ip":{}}},"f|
              000002b0  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8rvp5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8rvp5",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "cncf-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830642,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830639,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830639,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830639,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830639,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.10.50.243",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.10.50.243"
        }
      },
      PodIP: (string) (len=10) "10.0.1.193",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.0.1.193"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861830639,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 13 13:24:03.930: INFO: Pod "webserver-deployment-9b4f5bf69-ftvwv" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-ftvwv",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-3147",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "22b7b563-5ddd-41dc-b3b2-59cd0b76450f",
      ResourceVersion: (string) (len=6) "737552",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861830639,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "46fcedcb-a33d-4266-9a5a-b9fcf44ac635",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830639,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 36  66 63 65 64 63 62 2d 61  |d\":\"46fcedcb-a|
              00000090  33 33 64 2d 34 32 36 36  2d 39 61 35 61 2d 62 39  |33d-4266-9a5a-b9|
              000000a0  66 63 66 34 34 61 63 36  33 35 5c 22 7d 22 3a 7b  |fcf44ac635\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830643,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=704) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 30 2e  |:{\"ip\":\"10.0.|
              00000290  31 2e 32 30 35 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |1.205\"}":{".":{|
              000002a0  7d 2c 22 66 3a 69 70 22  3a 7b 7d 7d 7d 2c 22 66  |},"f:ip":{}}},"f|
              000002b0  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rmpxm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rmpxm",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "cncf-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830643,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830639,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830639,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830639,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830639,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.10.50.243",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.10.50.243"
        }
      },
      PodIP: (string) (len=10) "10.0.1.205",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.0.1.205"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861830639,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 13 13:24:03.933: INFO: Pod "webserver-deployment-9b4f5bf69-j7qk4" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-j7qk4",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-3147",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3746dff9-c2c0-47ef-bae5-c68df0808ed7",
      ResourceVersion: (string) (len=6) "737427",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861830641,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "46fcedcb-a33d-4266-9a5a-b9fcf44ac635",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 36  66 63 65 64 63 62 2d 61  |d\":\"46fcedcb-a|
              00000090  33 33 64 2d 34 32 36 36  2d 39 61 35 61 2d 62 39  |33d-4266-9a5a-b9|
              000000a0  66 63 66 34 34 61 63 36  33 35 5c 22 7d 22 3a 7b  |fcf44ac635\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830642,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gh4tg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gh4tg",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "cncf-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.10.50.163",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.10.50.163"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861830641,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 13 13:24:03.935: INFO: Pod "webserver-deployment-9b4f5bf69-jprf5" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-jprf5",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-3147",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2506e327-b8db-4439-92ef-a834e2127d3a",
      ResourceVersion: (string) (len=6) "737431",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861830641,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "46fcedcb-a33d-4266-9a5a-b9fcf44ac635",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 36  66 63 65 64 63 62 2d 61  |d\":\"46fcedcb-a|
              00000090  33 33 64 2d 34 32 36 36  2d 39 61 35 61 2d 62 39  |33d-4266-9a5a-b9|
              000000a0  66 63 66 34 34 61 63 36  33 35 5c 22 7d 22 3a 7b  |fcf44ac635\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830642,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wgbfl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wgbfl",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "cncf-5",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.10.50.77",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.10.50.77"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861830641,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 13 13:24:03.937: INFO: Pod "webserver-deployment-9b4f5bf69-n45c7" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-n45c7",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-3147",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "278f51c1-4ad0-4b2c-af7e-77cb51f7efe0",
      ResourceVersion: (string) (len=6) "737424",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861830641,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "46fcedcb-a33d-4266-9a5a-b9fcf44ac635",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 36  66 63 65 64 63 62 2d 61  |d\":\"46fcedcb-a|
              00000090  33 33 64 2d 34 32 36 36  2d 39 61 35 61 2d 62 39  |33d-4266-9a5a-b9|
              000000a0  66 63 66 34 34 61 63 36  33 35 5c 22 7d 22 3a 7b  |fcf44ac635\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830642,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-kscwj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-kscwj",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "cncf-4",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.10.50.34",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.10.50.34"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861830641,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 13 13:24:03.939: INFO: Pod "webserver-deployment-9b4f5bf69-pdzjc" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-pdzjc",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-3147",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2507481c-338d-4afc-a951-84cdd3117b48",
      ResourceVersion: (string) (len=6) "737413",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861830641,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "46fcedcb-a33d-4266-9a5a-b9fcf44ac635",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 36  66 63 65 64 63 62 2d 61  |d\":\"46fcedcb-a|
              00000090  33 33 64 2d 34 32 36 36  2d 39 61 35 61 2d 62 39  |33d-4266-9a5a-b9|
              000000a0  66 63 66 34 34 61 63 36  33 35 5c 22 7d 22 3a 7b  |fcf44ac635\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qxj5g",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qxj5g",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "cncf-4",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830641,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.10.50.34",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.10.50.34"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861830641,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 13 13:24:03.942: INFO: Pod "webserver-deployment-9b4f5bf69-skwfj" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-skwfj",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-3147",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "166023b5-5511-4576-8533-dac2c1d9229b",
      ResourceVersion: (string) (len=6) "737443",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861830639,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "46fcedcb-a33d-4266-9a5a-b9fcf44ac635",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830639,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 36  66 63 65 64 63 62 2d 61  |d\":\"46fcedcb-a|
              00000090  33 33 64 2d 34 32 36 36  2d 39 61 35 61 2d 62 39  |33d-4266-9a5a-b9|
              000000a0  66 63 66 34 34 61 63 36  33 35 5c 22 7d 22 3a 7b  |fcf44ac635\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830642,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=703) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 30 2e  |:{\"ip\":\"10.0.|
              00000290  30 2e 31 38 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |0.18\"}":{".":{}|
              000002a0  2c 22 66 3a 69 70 22 3a  7b 7d 7d 7d 2c 22 66 3a  |,"f:ip":{}}},"f:|
              000002b0  73 74 61 72 74 54 69 6d  65 22 3a 7b 7d 7d 7d     |startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-pdvnv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-pdvnv",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "cncf-5",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830642,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830639,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830639,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830639,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830639,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.10.50.77",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.10.50.77"
        }
      },
      PodIP: (string) (len=9) "10.0.0.18",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=9) "10.0.0.18"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861830639,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 13 13:24:03.945: INFO: Pod "webserver-deployment-9b4f5bf69-wgp89" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-wgp89",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-3147",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "76de1ff0-63ba-4d6b-8324-32c12f20925c",
      ResourceVersion: (string) (len=6) "737440",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861830639,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "46fcedcb-a33d-4266-9a5a-b9fcf44ac635",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830639,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 36  66 63 65 64 63 62 2d 61  |d\":\"46fcedcb-a|
              00000090  33 33 64 2d 34 32 36 36  2d 39 61 35 61 2d 62 39  |33d-4266-9a5a-b9|
              000000a0  66 63 66 34 34 61 63 36  33 35 5c 22 7d 22 3a 7b  |fcf44ac635\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830642,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=704) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 30 2e  |:{\"ip\":\"10.0.|
              00000290  34 2e 32 30 33 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |4.203\"}":{".":{|
              000002a0  7d 2c 22 66 3a 69 70 22  3a 7b 7d 7d 7d 2c 22 66  |},"f:ip":{}}},"f|
              000002b0  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rdss5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rdss5",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "cncf-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830642,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830639,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830639,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830639,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830639,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.10.50.163",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.10.50.163"
        }
      },
      PodIP: (string) (len=10) "10.0.4.203",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.0.4.203"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861830639,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 13 13:24:03.947: INFO: Pod "webserver-deployment-9b4f5bf69-xmrpg" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-xmrpg",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-3147",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1fb4a54d-b0ef-430e-9aeb-f5661299b634",
      ResourceVersion: (string) (len=6) "737483",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861830639,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "46fcedcb-a33d-4266-9a5a-b9fcf44ac635",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830639,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 36  66 63 65 64 63 62 2d 61  |d\":\"46fcedcb-a|
              00000090  33 33 64 2d 34 32 36 36  2d 39 61 35 61 2d 62 39  |33d-4266-9a5a-b9|
              000000a0  66 63 66 34 34 61 63 36  33 35 5c 22 7d 22 3a 7b  |fcf44ac635\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830642,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=704) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 30 2e  |:{\"ip\":\"10.0.|
              00000290  33 2e 32 30 32 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |3.202\"}":{".":{|
              000002a0  7d 2c 22 66 3a 69 70 22  3a 7b 7d 7d 7d 2c 22 66  |},"f:ip":{}}},"f|
              000002b0  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-j6km5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-j6km5",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=6) "cncf-4",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830642,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830639,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830639,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830639,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63861830639,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.10.50.34",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.10.50.34"
        }
      },
      PodIP: (string) (len=10) "10.0.3.202",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.0.3.202"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63861830639,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 13 13:24:03.949: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-3147" for this suite. @ 09/13/24 13:24:03.954
• [8.243 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:372
  STEP: Creating a kubernetes client @ 09/13/24 13:24:03.967
  Sep 13 13:24:03.967: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename namespaces @ 09/13/24 13:24:03.968
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:24:03.98
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:24:03.985
  STEP: Updating Namespace "namespaces-2001" @ 09/13/24 13:24:03.987
  Sep 13 13:24:04.008: INFO: Namespace "namespaces-2001" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"66130911-57fd-4a55-8165-526358ee3177", "kubernetes.io/metadata.name":"namespaces-2001", "namespaces-2001":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  Sep 13 13:24:04.008: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-2001" for this suite. @ 09/13/24 13:24:04.013
• [0.050 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 09/13/24 13:24:04.018
  Sep 13 13:24:04.018: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename endpointslicemirroring @ 09/13/24 13:24:04.019
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:24:04.033
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:24:04.037
  STEP: mirroring a new custom Endpoint @ 09/13/24 13:24:04.057
  Sep 13 13:24:04.068: INFO: Waiting for at least 1 EndpointSlice to exist, got 0
  E0913 13:24:04.105661      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:24:05.105902      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: mirroring an update to a custom Endpoint @ 09/13/24 13:24:06.072
  Sep 13 13:24:06.083: INFO: Expected EndpointSlice to have 10.2.3.4 as address, got 10.1.2.3
  E0913 13:24:06.106727      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:24:07.106949      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: mirroring deletion of a custom Endpoint @ 09/13/24 13:24:08.086
  Sep 13 13:24:08.094: INFO: Waiting for 0 EndpointSlices to exist, got 1
  E0913 13:24:08.107793      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:24:09.108029      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:24:10.101: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0913 13:24:10.108709      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "endpointslicemirroring-1638" for this suite. @ 09/13/24 13:24:10.127
• [6.133 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:655
  STEP: Creating a kubernetes client @ 09/13/24 13:24:10.152
  Sep 13 13:24:10.152: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename job @ 09/13/24 13:24:10.152
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:24:10.211
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:24:10.214
  STEP: Creating a job @ 09/13/24 13:24:10.218
  STEP: Ensuring active pods == parallelism @ 09/13/24 13:24:10.227
  E0913 13:24:11.108904      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:24:12.109440      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:24:13.110437      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:24:14.110748      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Orphaning one of the Job's Pods @ 09/13/24 13:24:14.232
  Sep 13 13:24:14.745: INFO: Successfully updated pod "adopt-release-8t6xg"
  STEP: Checking that the Job readopts the Pod @ 09/13/24 13:24:14.745
  E0913 13:24:15.110925      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:24:16.112001      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Removing the labels from the Job's Pod @ 09/13/24 13:24:16.751
  E0913 13:24:17.112080      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:24:17.262: INFO: Successfully updated pod "adopt-release-8t6xg"
  STEP: Checking that the Job releases the Pod @ 09/13/24 13:24:17.262
  E0913 13:24:18.112783      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:24:19.113029      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:24:19.268: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-4561" for this suite. @ 09/13/24 13:24:19.272
• [9.126 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:357
  STEP: Creating a kubernetes client @ 09/13/24 13:24:19.284
  Sep 13 13:24:19.284: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename kubectl @ 09/13/24 13:24:19.284
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:24:19.301
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:24:19.303
  STEP: creating a replication controller @ 09/13/24 13:24:19.307
  Sep 13 13:24:19.307: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=kubectl-6381 create -f -'
  Sep 13 13:24:19.415: INFO: stderr: ""
  Sep 13 13:24:19.415: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 09/13/24 13:24:19.415
  Sep 13 13:24:19.415: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=kubectl-6381 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Sep 13 13:24:19.479: INFO: stderr: ""
  Sep 13 13:24:19.479: INFO: stdout: "update-demo-nautilus-b8hx4 update-demo-nautilus-q2q6r "
  Sep 13 13:24:19.479: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=kubectl-6381 get pods update-demo-nautilus-b8hx4 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Sep 13 13:24:19.536: INFO: stderr: ""
  Sep 13 13:24:19.536: INFO: stdout: ""
  Sep 13 13:24:19.536: INFO: update-demo-nautilus-b8hx4 is created but not running
  E0913 13:24:20.114008      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:24:21.114234      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:24:22.114837      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:24:23.115261      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:24:24.115586      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:24:24.537: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=kubectl-6381 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Sep 13 13:24:24.598: INFO: stderr: ""
  Sep 13 13:24:24.598: INFO: stdout: "update-demo-nautilus-b8hx4 update-demo-nautilus-q2q6r "
  Sep 13 13:24:24.598: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=kubectl-6381 get pods update-demo-nautilus-b8hx4 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Sep 13 13:24:24.654: INFO: stderr: ""
  Sep 13 13:24:24.654: INFO: stdout: "true"
  Sep 13 13:24:24.654: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=kubectl-6381 get pods update-demo-nautilus-b8hx4 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Sep 13 13:24:24.702: INFO: stderr: ""
  Sep 13 13:24:24.702: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Sep 13 13:24:24.702: INFO: validating pod update-demo-nautilus-b8hx4
  Sep 13 13:24:24.707: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Sep 13 13:24:24.707: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Sep 13 13:24:24.707: INFO: update-demo-nautilus-b8hx4 is verified up and running
  Sep 13 13:24:24.707: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=kubectl-6381 get pods update-demo-nautilus-q2q6r -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Sep 13 13:24:24.760: INFO: stderr: ""
  Sep 13 13:24:24.760: INFO: stdout: "true"
  Sep 13 13:24:24.760: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=kubectl-6381 get pods update-demo-nautilus-q2q6r -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Sep 13 13:24:24.822: INFO: stderr: ""
  Sep 13 13:24:24.822: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Sep 13 13:24:24.822: INFO: validating pod update-demo-nautilus-q2q6r
  Sep 13 13:24:24.826: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Sep 13 13:24:24.826: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Sep 13 13:24:24.826: INFO: update-demo-nautilus-q2q6r is verified up and running
  STEP: scaling down the replication controller @ 09/13/24 13:24:24.826
  Sep 13 13:24:24.828: INFO: scanned /root for discovery docs: <nil>
  Sep 13 13:24:24.828: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=kubectl-6381 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  E0913 13:24:25.115522      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:24:25.933: INFO: stderr: ""
  Sep 13 13:24:25.933: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 09/13/24 13:24:25.933
  Sep 13 13:24:25.933: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=kubectl-6381 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Sep 13 13:24:26.000: INFO: stderr: ""
  Sep 13 13:24:26.000: INFO: stdout: "update-demo-nautilus-q2q6r "
  Sep 13 13:24:26.000: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=kubectl-6381 get pods update-demo-nautilus-q2q6r -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Sep 13 13:24:26.057: INFO: stderr: ""
  Sep 13 13:24:26.057: INFO: stdout: "true"
  Sep 13 13:24:26.057: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=kubectl-6381 get pods update-demo-nautilus-q2q6r -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  E0913 13:24:26.116588      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:24:26.131: INFO: stderr: ""
  Sep 13 13:24:26.131: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Sep 13 13:24:26.131: INFO: validating pod update-demo-nautilus-q2q6r
  Sep 13 13:24:26.135: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Sep 13 13:24:26.135: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Sep 13 13:24:26.135: INFO: update-demo-nautilus-q2q6r is verified up and running
  STEP: scaling up the replication controller @ 09/13/24 13:24:26.135
  Sep 13 13:24:26.138: INFO: scanned /root for discovery docs: <nil>
  Sep 13 13:24:26.138: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=kubectl-6381 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  E0913 13:24:27.116783      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:24:27.216: INFO: stderr: ""
  Sep 13 13:24:27.216: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 09/13/24 13:24:27.216
  Sep 13 13:24:27.216: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=kubectl-6381 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Sep 13 13:24:27.296: INFO: stderr: ""
  Sep 13 13:24:27.296: INFO: stdout: "update-demo-nautilus-q2q6r update-demo-nautilus-tklc8 "
  Sep 13 13:24:27.296: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=kubectl-6381 get pods update-demo-nautilus-q2q6r -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Sep 13 13:24:27.367: INFO: stderr: ""
  Sep 13 13:24:27.367: INFO: stdout: "true"
  Sep 13 13:24:27.367: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=kubectl-6381 get pods update-demo-nautilus-q2q6r -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Sep 13 13:24:27.436: INFO: stderr: ""
  Sep 13 13:24:27.436: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Sep 13 13:24:27.436: INFO: validating pod update-demo-nautilus-q2q6r
  Sep 13 13:24:27.440: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Sep 13 13:24:27.440: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Sep 13 13:24:27.440: INFO: update-demo-nautilus-q2q6r is verified up and running
  Sep 13 13:24:27.440: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=kubectl-6381 get pods update-demo-nautilus-tklc8 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Sep 13 13:24:27.497: INFO: stderr: ""
  Sep 13 13:24:27.497: INFO: stdout: ""
  Sep 13 13:24:27.497: INFO: update-demo-nautilus-tklc8 is created but not running
  E0913 13:24:28.117094      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:24:29.117345      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:24:30.117649      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:24:31.117914      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:24:32.118474      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:24:32.498: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=kubectl-6381 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Sep 13 13:24:32.569: INFO: stderr: ""
  Sep 13 13:24:32.569: INFO: stdout: "update-demo-nautilus-q2q6r update-demo-nautilus-tklc8 "
  Sep 13 13:24:32.570: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=kubectl-6381 get pods update-demo-nautilus-q2q6r -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Sep 13 13:24:32.631: INFO: stderr: ""
  Sep 13 13:24:32.631: INFO: stdout: "true"
  Sep 13 13:24:32.631: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=kubectl-6381 get pods update-demo-nautilus-q2q6r -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Sep 13 13:24:32.702: INFO: stderr: ""
  Sep 13 13:24:32.702: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Sep 13 13:24:32.702: INFO: validating pod update-demo-nautilus-q2q6r
  Sep 13 13:24:32.707: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Sep 13 13:24:32.707: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Sep 13 13:24:32.707: INFO: update-demo-nautilus-q2q6r is verified up and running
  Sep 13 13:24:32.707: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=kubectl-6381 get pods update-demo-nautilus-tklc8 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Sep 13 13:24:32.760: INFO: stderr: ""
  Sep 13 13:24:32.760: INFO: stdout: "true"
  Sep 13 13:24:32.760: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=kubectl-6381 get pods update-demo-nautilus-tklc8 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Sep 13 13:24:32.817: INFO: stderr: ""
  Sep 13 13:24:32.817: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Sep 13 13:24:32.817: INFO: validating pod update-demo-nautilus-tklc8
  Sep 13 13:24:32.821: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Sep 13 13:24:32.821: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Sep 13 13:24:32.821: INFO: update-demo-nautilus-tklc8 is verified up and running
  STEP: using delete to clean up resources @ 09/13/24 13:24:32.821
  Sep 13 13:24:32.822: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=kubectl-6381 delete --grace-period=0 --force -f -'
  Sep 13 13:24:32.893: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Sep 13 13:24:32.893: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  Sep 13 13:24:32.893: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=kubectl-6381 get rc,svc -l name=update-demo --no-headers'
  Sep 13 13:24:32.967: INFO: stderr: "No resources found in kubectl-6381 namespace.\n"
  Sep 13 13:24:32.967: INFO: stdout: ""
  Sep 13 13:24:32.967: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=kubectl-6381 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Sep 13 13:24:33.031: INFO: stderr: ""
  Sep 13 13:24:33.031: INFO: stdout: ""
  Sep 13 13:24:33.031: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6381" for this suite. @ 09/13/24 13:24:33.036
• [13.764 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:641
  STEP: Creating a kubernetes client @ 09/13/24 13:24:33.048
  Sep 13 13:24:33.048: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename statefulset @ 09/13/24 13:24:33.048
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:24:33.065
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:24:33.067
  STEP: Creating service test in namespace statefulset-588 @ 09/13/24 13:24:33.069
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 09/13/24 13:24:33.074
  STEP: Creating stateful set ss in namespace statefulset-588 @ 09/13/24 13:24:33.076
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-588 @ 09/13/24 13:24:33.083
  Sep 13 13:24:33.085: INFO: Found 0 stateful pods, waiting for 1
  E0913 13:24:33.119208      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:24:34.119353      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:24:35.119770      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:24:36.119924      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:24:37.119963      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:24:38.120974      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:24:39.121070      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:24:40.121353      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:24:41.121409      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:24:42.121903      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:24:43.089: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 09/13/24 13:24:43.089
  Sep 13 13:24:43.092: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=statefulset-588 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  E0913 13:24:43.122424      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:24:43.206: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Sep 13 13:24:43.206: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Sep 13 13:24:43.206: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Sep 13 13:24:43.209: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E0913 13:24:44.122503      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:24:45.122764      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:24:46.123359      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:24:47.123883      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:24:48.124038      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:24:49.124328      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:24:50.124429      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:24:51.124565      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:24:52.124717      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:24:53.124921      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:24:53.211: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Sep 13 13:24:53.211: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Sep 13 13:24:53.234: INFO: Verifying statefulset ss doesn't scale past 1 for another 9.999999772s
  E0913 13:24:54.125500      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:24:54.239: INFO: Verifying statefulset ss doesn't scale past 1 for another 8.987138439s
  E0913 13:24:55.125665      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:24:55.244: INFO: Verifying statefulset ss doesn't scale past 1 for another 7.982062247s
  E0913 13:24:56.126464      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:24:56.247: INFO: Verifying statefulset ss doesn't scale past 1 for another 6.977254097s
  E0913 13:24:57.127588      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:24:57.252: INFO: Verifying statefulset ss doesn't scale past 1 for another 5.973117528s
  E0913 13:24:58.128656      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:24:58.256: INFO: Verifying statefulset ss doesn't scale past 1 for another 4.969179398s
  E0913 13:24:59.129582      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:24:59.259: INFO: Verifying statefulset ss doesn't scale past 1 for another 3.96520605s
  E0913 13:25:00.130138      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:25:00.263: INFO: Verifying statefulset ss doesn't scale past 1 for another 2.961558094s
  E0913 13:25:01.130494      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:25:01.267: INFO: Verifying statefulset ss doesn't scale past 1 for another 1.958289086s
  E0913 13:25:02.130647      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:25:02.271: INFO: Verifying statefulset ss doesn't scale past 1 for another 954.294122ms
  E0913 13:25:03.131327      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-588 @ 09/13/24 13:25:03.271
  Sep 13 13:25:03.274: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=statefulset-588 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Sep 13 13:25:03.376: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Sep 13 13:25:03.376: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Sep 13 13:25:03.376: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Sep 13 13:25:03.379: INFO: Found 1 stateful pods, waiting for 3
  E0913 13:25:04.132385      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:25:05.132749      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:25:06.133036      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:25:07.133208      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:25:08.133858      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:25:09.134267      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:25:10.134620      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:25:11.134840      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:25:12.135170      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:25:13.135594      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:25:13.380: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Sep 13 13:25:13.380: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  Sep 13 13:25:13.380: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 09/13/24 13:25:13.38
  STEP: Scale down will halt with unhealthy stateful pod @ 09/13/24 13:25:13.38
  Sep 13 13:25:13.385: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=statefulset-588 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Sep 13 13:25:13.500: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Sep 13 13:25:13.500: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Sep 13 13:25:13.500: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Sep 13 13:25:13.500: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=statefulset-588 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Sep 13 13:25:13.655: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Sep 13 13:25:13.655: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Sep 13 13:25:13.655: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Sep 13 13:25:13.655: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=statefulset-588 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Sep 13 13:25:13.842: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Sep 13 13:25:13.842: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Sep 13 13:25:13.842: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Sep 13 13:25:13.842: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Sep 13 13:25:13.947: INFO: Waiting for statefulset status.readyReplicas to become 0, currently 3
  E0913 13:25:14.136102      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:25:15.136238      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:25:16.136979      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:25:17.137069      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:25:18.137250      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:25:19.137308      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:25:20.137406      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:25:21.137533      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:25:22.137816      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:25:23.138001      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:25:23.850: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Sep 13 13:25:23.850: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  Sep 13 13:25:23.850: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  Sep 13 13:25:23.860: INFO: Verifying statefulset ss doesn't scale past 3 for another 9.999999726s
  E0913 13:25:24.138112      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:25:24.864: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.997437195s
  E0913 13:25:25.138499      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:25:25.867: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.993524362s
  E0913 13:25:26.138924      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:25:26.872: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.989584844s
  E0913 13:25:27.139489      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:25:27.876: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.985452982s
  E0913 13:25:28.139648      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:25:28.880: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.981751339s
  E0913 13:25:29.140130      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:25:29.884: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.9775924s
  E0913 13:25:30.140936      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:25:30.888: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.973375842s
  E0913 13:25:31.141437      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:25:31.892: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.969924882s
  E0913 13:25:32.142064      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:25:32.925: INFO: Verifying statefulset ss doesn't scale past 3 for another 965.20058ms
  E0913 13:25:33.142856      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-588 @ 09/13/24 13:25:33.925
  Sep 13 13:25:33.929: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=statefulset-588 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Sep 13 13:25:34.039: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Sep 13 13:25:34.039: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Sep 13 13:25:34.039: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Sep 13 13:25:34.039: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=statefulset-588 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  E0913 13:25:34.143376      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:25:34.148: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Sep 13 13:25:34.149: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Sep 13 13:25:34.149: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Sep 13 13:25:34.149: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=statefulset-588 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Sep 13 13:25:34.253: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Sep 13 13:25:34.253: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Sep 13 13:25:34.253: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Sep 13 13:25:34.253: INFO: Scaling statefulset ss to 0
  E0913 13:25:35.144108      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:25:36.144732      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:25:37.145702      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:25:38.146096      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:25:39.146391      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:25:40.146825      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:25:41.146885      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:25:42.147379      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:25:43.148021      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:25:44.148430      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 09/13/24 13:25:44.259
  Sep 13 13:25:44.259: INFO: Deleting all statefulset in ns statefulset-588
  Sep 13 13:25:44.261: INFO: Scaling statefulset ss to 0
  Sep 13 13:25:44.265: INFO: Waiting for statefulset status.replicas updated to 0
  Sep 13 13:25:44.266: INFO: Deleting statefulset ss
  Sep 13 13:25:44.283: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-588" for this suite. @ 09/13/24 13:25:44.3
• [71.276 seconds]
------------------------------
SSSS
------------------------------
[sig-network] DNS should provide DNS for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:50
  STEP: Creating a kubernetes client @ 09/13/24 13:25:44.324
  Sep 13 13:25:44.324: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename dns @ 09/13/24 13:25:44.325
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:25:44.338
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:25:44.341
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 09/13/24 13:25:44.35
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 09/13/24 13:25:44.351
  STEP: creating a pod to probe DNS @ 09/13/24 13:25:44.351
  STEP: submitting the pod to kubernetes @ 09/13/24 13:25:44.351
  E0913 13:25:45.149528      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:25:46.149745      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/13/24 13:25:46.368
  STEP: looking for the results for each expected name from probers @ 09/13/24 13:25:46.37
  Sep 13 13:25:46.380: INFO: DNS probes using dns-2642/dns-test-c916e47f-d785-40d0-8b46-8d27fcd67003 succeeded

  STEP: deleting the pod @ 09/13/24 13:25:46.38
  Sep 13 13:25:46.399: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-2642" for this suite. @ 09/13/24 13:25:46.403
• [2.084 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:54
  STEP: Creating a kubernetes client @ 09/13/24 13:25:46.411
  Sep 13 13:25:46.411: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename podtemplate @ 09/13/24 13:25:46.413
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:25:46.429
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:25:46.431
  Sep 13 13:25:46.458: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-6416" for this suite. @ 09/13/24 13:25:46.462
• [0.057 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:261
  STEP: Creating a kubernetes client @ 09/13/24 13:25:46.468
  Sep 13 13:25:46.468: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename webhook @ 09/13/24 13:25:46.469
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:25:46.484
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:25:46.489
  STEP: Setting up server cert @ 09/13/24 13:25:46.511
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/13/24 13:25:46.876
  STEP: Deploying the webhook pod @ 09/13/24 13:25:46.882
  STEP: Wait for the deployment to be ready @ 09/13/24 13:25:46.902
  Sep 13 13:25:46.906: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0913 13:25:47.150213      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:25:48.150313      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/13/24 13:25:48.914
  STEP: Verifying the service has paired with the endpoint @ 09/13/24 13:25:48.925
  E0913 13:25:49.150692      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:25:49.925: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 09/13/24 13:25:49.931
  STEP: create a pod that should be updated by the webhook @ 09/13/24 13:25:49.949
  Sep 13 13:25:50.018: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1001" for this suite. @ 09/13/24 13:25:50.026
  STEP: Destroying namespace "webhook-markers-1793" for this suite. @ 09/13/24 13:25:50.032
• [3.569 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:855
  STEP: Creating a kubernetes client @ 09/13/24 13:25:50.038
  Sep 13 13:25:50.038: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename job @ 09/13/24 13:25:50.039
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:25:50.054
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:25:50.057
  STEP: Creating a suspended job @ 09/13/24 13:25:50.064
  STEP: Patching the Job @ 09/13/24 13:25:50.069
  STEP: Watching for Job to be patched @ 09/13/24 13:25:50.085
  Sep 13 13:25:50.087: INFO: Event ADDED observed for Job e2e-226z2 in namespace job-7973 with labels: map[e2e-job-label:e2e-226z2] and annotations: map[]
  Sep 13 13:25:50.087: INFO: Event MODIFIED observed for Job e2e-226z2 in namespace job-7973 with labels: map[e2e-job-label:e2e-226z2] and annotations: map[]
  Sep 13 13:25:50.087: INFO: Event MODIFIED found for Job e2e-226z2 in namespace job-7973 with labels: map[e2e-226z2:patched e2e-job-label:e2e-226z2] and annotations: map[]
  STEP: Updating the job @ 09/13/24 13:25:50.087
  STEP: Watching for Job to be updated @ 09/13/24 13:25:50.098
  Sep 13 13:25:50.100: INFO: Event MODIFIED found for Job e2e-226z2 in namespace job-7973 with labels: map[e2e-226z2:patched e2e-job-label:e2e-226z2] and annotations: map[updated:true]
  Sep 13 13:25:50.100: INFO: Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 09/13/24 13:25:50.1
  Sep 13 13:25:50.103: INFO: Job: e2e-226z2 as labels: map[e2e-226z2:patched e2e-job-label:e2e-226z2]
  STEP: Waiting for job to complete @ 09/13/24 13:25:50.103
  E0913 13:25:50.151416      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:25:51.151485      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:25:52.152671      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:25:53.153212      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:25:54.153818      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:25:55.154092      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:25:56.154906      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:25:57.155082      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:25:58.155586      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:25:59.155750      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Delete a job collection with a labelselector @ 09/13/24 13:26:00.107
  STEP: Watching for Job to be deleted @ 09/13/24 13:26:00.116
  Sep 13 13:26:00.118: INFO: Event MODIFIED observed for Job e2e-226z2 in namespace job-7973 with labels: map[e2e-226z2:patched e2e-job-label:e2e-226z2] and annotations: map[updated:true]
  Sep 13 13:26:00.118: INFO: Event MODIFIED observed for Job e2e-226z2 in namespace job-7973 with labels: map[e2e-226z2:patched e2e-job-label:e2e-226z2] and annotations: map[updated:true]
  Sep 13 13:26:00.118: INFO: Event MODIFIED observed for Job e2e-226z2 in namespace job-7973 with labels: map[e2e-226z2:patched e2e-job-label:e2e-226z2] and annotations: map[updated:true]
  Sep 13 13:26:00.119: INFO: Event MODIFIED observed for Job e2e-226z2 in namespace job-7973 with labels: map[e2e-226z2:patched e2e-job-label:e2e-226z2] and annotations: map[updated:true]
  Sep 13 13:26:00.119: INFO: Event MODIFIED observed for Job e2e-226z2 in namespace job-7973 with labels: map[e2e-226z2:patched e2e-job-label:e2e-226z2] and annotations: map[updated:true]
  Sep 13 13:26:00.119: INFO: Event DELETED found for Job e2e-226z2 in namespace job-7973 with labels: map[e2e-226z2:patched e2e-job-label:e2e-226z2] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 09/13/24 13:26:00.119
  Sep 13 13:26:00.122: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-7973" for this suite. @ 09/13/24 13:26:00.126
  E0913 13:26:00.155844      23 retrywatcher.go:129] "Watch failed" err="context canceled"
• [10.119 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1798
  STEP: Creating a kubernetes client @ 09/13/24 13:26:00.158
  Sep 13 13:26:00.158: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename kubectl @ 09/13/24 13:26:00.16
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:26:00.186
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:26:00.188
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 09/13/24 13:26:00.191
  Sep 13 13:26:00.191: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=kubectl-9331 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  Sep 13 13:26:00.277: INFO: stderr: ""
  Sep 13 13:26:00.277: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 09/13/24 13:26:00.277
  E0913 13:26:01.156325      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:26:02.156486      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:26:03.157412      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:26:04.158383      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:26:05.158628      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 09/13/24 13:26:05.328
  Sep 13 13:26:05.328: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=kubectl-9331 get pod e2e-test-httpd-pod -o json'
  Sep 13 13:26:05.382: INFO: stderr: ""
  Sep 13 13:26:05.382: INFO: stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"creationTimestamp\": \"2024-09-13T13:26:00Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-9331\",\n        \"resourceVersion\": \"739093\",\n        \"uid\": \"58c76b70-7e61-4623-b487-4cd8b1969ead\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-qkfg4\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"cncf-3\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-qkfg4\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-09-13T13:26:01Z\",\n                \"status\": \"True\",\n                \"type\": \"PodReadyToStartContainers\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-09-13T13:26:00Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-09-13T13:26:01Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-09-13T13:26:01Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-09-13T13:26:00Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://f6bf58bf731e783e96f5d8f7db6258e7029142946328658b5084f97ab82bc3e1\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2024-09-13T13:26:01Z\"\n                    }\n                }\n            }\n        ],\n        \"hostIP\": \"172.10.50.243\",\n        \"hostIPs\": [\n            {\n                \"ip\": \"172.10.50.243\"\n            }\n        ],\n        \"phase\": \"Running\",\n        \"podIP\": \"10.0.1.181\",\n        \"podIPs\": [\n            {\n                \"ip\": \"10.0.1.181\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2024-09-13T13:26:00Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 09/13/24 13:26:05.382
  Sep 13 13:26:05.383: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=kubectl-9331 replace -f -'
  Sep 13 13:26:05.501: INFO: stderr: ""
  Sep 13 13:26:05.501: INFO: stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.36.1-1 @ 09/13/24 13:26:05.501
  Sep 13 13:26:05.503: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=kubectl-9331 delete pods e2e-test-httpd-pod'
  E0913 13:26:06.159064      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:26:06.960: INFO: stderr: ""
  Sep 13 13:26:06.960: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Sep 13 13:26:06.960: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9331" for this suite. @ 09/13/24 13:26:06.964
• [6.814 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:180
  STEP: Creating a kubernetes client @ 09/13/24 13:26:06.972
  Sep 13 13:26:06.972: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename emptydir @ 09/13/24 13:26:06.972
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:26:06.994
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:26:06.997
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 09/13/24 13:26:07.002
  E0913 13:26:07.159646      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:26:08.160181      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:26:09.160652      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:26:10.160945      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/13/24 13:26:11.021
  Sep 13 13:26:11.023: INFO: Trying to get logs from node cncf-3 pod pod-46fe7031-452a-4bd0-be90-40a87d48ef73 container test-container: <nil>
  STEP: delete the pod @ 09/13/24 13:26:11.033
  Sep 13 13:26:11.047: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3552" for this suite. @ 09/13/24 13:26:11.051
• [4.084 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:649
  STEP: Creating a kubernetes client @ 09/13/24 13:26:11.056
  Sep 13 13:26:11.056: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename svcaccounts @ 09/13/24 13:26:11.057
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:26:11.076
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:26:11.079
  STEP: creating a ServiceAccount @ 09/13/24 13:26:11.081
  STEP: watching for the ServiceAccount to be added @ 09/13/24 13:26:11.092
  STEP: patching the ServiceAccount @ 09/13/24 13:26:11.094
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 09/13/24 13:26:11.097
  STEP: deleting the ServiceAccount @ 09/13/24 13:26:11.1
  Sep 13 13:26:11.109: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-9212" for this suite. @ 09/13/24 13:26:11.113
• [0.065 seconds]
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 09/13/24 13:26:11.121
  Sep 13 13:26:11.121: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename subpath @ 09/13/24 13:26:11.123
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:26:11.142
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:26:11.145
  STEP: Setting up data @ 09/13/24 13:26:11.148
  STEP: Creating pod pod-subpath-test-configmap-c9hp @ 09/13/24 13:26:11.158
  STEP: Creating a pod to test atomic-volume-subpath @ 09/13/24 13:26:11.158
  E0913 13:26:11.161374      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:26:12.162169      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:26:13.162435      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:26:14.162478      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:26:15.162683      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:26:16.162739      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:26:17.162868      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:26:18.163328      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:26:19.163529      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:26:20.163917      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:26:21.165647      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:26:22.165542      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:26:23.166623      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:26:24.167295      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:26:25.167512      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:26:26.167856      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:26:27.167936      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:26:28.168805      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:26:29.169029      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:26:30.173572      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:26:31.173674      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:26:32.173989      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:26:33.174388      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/13/24 13:26:33.21
  Sep 13 13:26:33.213: INFO: Trying to get logs from node cncf-3 pod pod-subpath-test-configmap-c9hp container test-container-subpath-configmap-c9hp: <nil>
  STEP: delete the pod @ 09/13/24 13:26:33.217
  STEP: Deleting pod pod-subpath-test-configmap-c9hp @ 09/13/24 13:26:33.237
  Sep 13 13:26:33.238: INFO: Deleting pod "pod-subpath-test-configmap-c9hp" in namespace "subpath-3575"
  Sep 13 13:26:33.240: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-3575" for this suite. @ 09/13/24 13:26:33.244
• [22.130 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should run through the lifecycle of a PV and a PVC [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:430
  STEP: Creating a kubernetes client @ 09/13/24 13:26:33.251
  Sep 13 13:26:33.251: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename pv @ 09/13/24 13:26:33.253
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:26:33.263
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:26:33.265
  STEP: Creating initial PV and PVC @ 09/13/24 13:26:33.268
  Sep 13 13:26:33.268: INFO: Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-4860" @ 09/13/24 13:26:33.28
  STEP: Listing PVCs in namespace "pv-4860" @ 09/13/24 13:26:33.282
  STEP: Patching the PV "pv-4860-mjxkc" @ 09/13/24 13:26:33.284
  STEP: Patching the PVC "pvc-824sz" @ 09/13/24 13:26:33.293
  STEP: Getting PV "pv-4860-mjxkc" @ 09/13/24 13:26:33.3
  STEP: Getting PVC "pvc-824sz" @ 09/13/24 13:26:33.302
  STEP: Deleting PVC "pvc-824sz" @ 09/13/24 13:26:33.305
  STEP: Confirm deletion of PVC "pvc-824sz" @ 09/13/24 13:26:33.309
  E0913 13:26:34.175214      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:26:35.175562      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting PV "pv-4860-mjxkc" @ 09/13/24 13:26:35.314
  STEP: Confirm deletion of PV "pv-4860-mjxkc" @ 09/13/24 13:26:35.323
  E0913 13:26:36.176278      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:26:37.176539      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Recreating another PV & PVC @ 09/13/24 13:26:37.33
  Sep 13 13:26:37.330: INFO: Creating a PV followed by a PVC
  STEP: Updating the PV "pv-4860-8jcm5" @ 09/13/24 13:26:37.361
  STEP: Updating the PVC "pvc-7xrdg" @ 09/13/24 13:26:37.373
  STEP: Listing PVCs in all namespaces with the labelSelector: "pvc-7xrdg=updated" @ 09/13/24 13:26:37.379
  STEP: Deleting PVC "pvc-7xrdg" via DeleteCollection @ 09/13/24 13:26:37.382
  STEP: Confirm deletion of PVC "pvc-7xrdg" @ 09/13/24 13:26:37.388
  E0913 13:26:38.176943      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:26:39.177267      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting PV "pv-4860-8jcm5" via DeleteCollection @ 09/13/24 13:26:39.397
  STEP: Confirm deletion of PV "pv-4860-8jcm5" @ 09/13/24 13:26:39.407
  E0913 13:26:40.177692      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:26:41.178018      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:26:41.413: INFO: AfterEach: deleting 1 PVCs and 1 PVs...
  Sep 13 13:26:41.413: INFO: Deleting PersistentVolumeClaim "pvc-7xrdg"
  Sep 13 13:26:41.415: INFO: Deleting PersistentVolume "pv-4860-8jcm5"
  Sep 13 13:26:41.417: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-4860" for this suite. @ 09/13/24 13:26:41.42
• [8.177 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:86
  STEP: Creating a kubernetes client @ 09/13/24 13:26:41.429
  Sep 13 13:26:41.429: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename projected @ 09/13/24 13:26:41.431
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:26:41.44
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:26:41.443
  STEP: Creating a pod to test downward API volume plugin @ 09/13/24 13:26:41.445
  E0913 13:26:42.178201      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:26:43.178820      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:26:44.179175      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:26:45.179453      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/13/24 13:26:45.467
  Sep 13 13:26:45.470: INFO: Trying to get logs from node cncf-3 pod downwardapi-volume-1b0ec183-d1e7-4d22-8bae-f3a28c30e9ca container client-container: <nil>
  STEP: delete the pod @ 09/13/24 13:26:45.473
  Sep 13 13:26:45.494: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3297" for this suite. @ 09/13/24 13:26:45.498
• [4.074 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1632
  STEP: Creating a kubernetes client @ 09/13/24 13:26:45.504
  Sep 13 13:26:45.504: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename kubectl @ 09/13/24 13:26:45.505
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:26:45.517
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:26:45.52
  STEP: creating the pod @ 09/13/24 13:26:45.523
  Sep 13 13:26:45.523: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=kubectl-4194 create -f -'
  Sep 13 13:26:45.643: INFO: stderr: ""
  Sep 13 13:26:45.643: INFO: stdout: "pod/pause created\n"
  E0913 13:26:46.179507      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:26:47.179810      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 09/13/24 13:26:47.65
  Sep 13 13:26:47.650: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=kubectl-4194 label pods pause testing-label=testing-label-value'
  Sep 13 13:26:47.728: INFO: stderr: ""
  Sep 13 13:26:47.728: INFO: stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 09/13/24 13:26:47.728
  Sep 13 13:26:47.728: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=kubectl-4194 get pod pause -L testing-label'
  Sep 13 13:26:47.782: INFO: stderr: ""
  Sep 13 13:26:47.782: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 09/13/24 13:26:47.782
  Sep 13 13:26:47.782: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=kubectl-4194 label pods pause testing-label-'
  Sep 13 13:26:47.860: INFO: stderr: ""
  Sep 13 13:26:47.860: INFO: stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 09/13/24 13:26:47.86
  Sep 13 13:26:47.860: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=kubectl-4194 get pod pause -L testing-label'
  Sep 13 13:26:47.926: INFO: stderr: ""
  Sep 13 13:26:47.926: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    \n"
  STEP: using delete to clean up resources @ 09/13/24 13:26:47.926
  Sep 13 13:26:47.926: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=kubectl-4194 delete --grace-period=0 --force -f -'
  Sep 13 13:26:47.989: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Sep 13 13:26:47.990: INFO: stdout: "pod \"pause\" force deleted\n"
  Sep 13 13:26:47.990: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=kubectl-4194 get rc,svc -l name=pause --no-headers'
  Sep 13 13:26:48.044: INFO: stderr: "No resources found in kubectl-4194 namespace.\n"
  Sep 13 13:26:48.044: INFO: stdout: ""
  Sep 13 13:26:48.044: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=kubectl-4194 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Sep 13 13:26:48.106: INFO: stderr: ""
  Sep 13 13:26:48.106: INFO: stdout: ""
  Sep 13 13:26:48.106: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4194" for this suite. @ 09/13/24 13:26:48.11
• [2.611 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:251
  STEP: Creating a kubernetes client @ 09/13/24 13:26:48.115
  Sep 13 13:26:48.115: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename projected @ 09/13/24 13:26:48.117
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:26:48.13
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:26:48.134
  STEP: Creating a pod to test downward API volume plugin @ 09/13/24 13:26:48.145
  E0913 13:26:48.179851      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:26:49.180074      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:26:50.180697      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:26:51.180760      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/13/24 13:26:52.162
  Sep 13 13:26:52.165: INFO: Trying to get logs from node cncf-3 pod downwardapi-volume-1f71fbea-0ea5-42f1-a40d-0fb0984ce4bc container client-container: <nil>
  STEP: delete the pod @ 09/13/24 13:26:52.169
  E0913 13:26:52.181052      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:26:52.183: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9203" for this suite. @ 09/13/24 13:26:52.186
• [4.080 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:170
  STEP: Creating a kubernetes client @ 09/13/24 13:26:52.196
  Sep 13 13:26:52.196: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename emptydir @ 09/13/24 13:26:52.198
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:26:52.213
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:26:52.215
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 09/13/24 13:26:52.217
  E0913 13:26:53.181109      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:26:54.181338      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:26:55.181412      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:26:56.181528      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/13/24 13:26:56.233
  Sep 13 13:26:56.237: INFO: Trying to get logs from node cncf-3 pod pod-39849968-676d-4547-b5b3-ce2d53f2ef56 container test-container: <nil>
  STEP: delete the pod @ 09/13/24 13:26:56.241
  Sep 13 13:26:56.261: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7394" for this suite. @ 09/13/24 13:26:56.27
• [4.080 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:126
  STEP: Creating a kubernetes client @ 09/13/24 13:26:56.276
  Sep 13 13:26:56.276: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename discovery @ 09/13/24 13:26:56.277
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:26:56.299
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:26:56.301
  STEP: Setting up server cert @ 09/13/24 13:26:56.305
  Sep 13 13:26:56.567: INFO: Checking APIGroup: apiregistration.k8s.io
  Sep 13 13:26:56.569: INFO: PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  Sep 13 13:26:56.569: INFO: Versions found [{apiregistration.k8s.io/v1 v1}]
  Sep 13 13:26:56.569: INFO: apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  Sep 13 13:26:56.569: INFO: Checking APIGroup: apps
  Sep 13 13:26:56.570: INFO: PreferredVersion.GroupVersion: apps/v1
  Sep 13 13:26:56.570: INFO: Versions found [{apps/v1 v1}]
  Sep 13 13:26:56.570: INFO: apps/v1 matches apps/v1
  Sep 13 13:26:56.570: INFO: Checking APIGroup: events.k8s.io
  Sep 13 13:26:56.571: INFO: PreferredVersion.GroupVersion: events.k8s.io/v1
  Sep 13 13:26:56.571: INFO: Versions found [{events.k8s.io/v1 v1}]
  Sep 13 13:26:56.571: INFO: events.k8s.io/v1 matches events.k8s.io/v1
  Sep 13 13:26:56.571: INFO: Checking APIGroup: authentication.k8s.io
  Sep 13 13:26:56.573: INFO: PreferredVersion.GroupVersion: authentication.k8s.io/v1
  Sep 13 13:26:56.573: INFO: Versions found [{authentication.k8s.io/v1 v1}]
  Sep 13 13:26:56.573: INFO: authentication.k8s.io/v1 matches authentication.k8s.io/v1
  Sep 13 13:26:56.573: INFO: Checking APIGroup: authorization.k8s.io
  Sep 13 13:26:56.574: INFO: PreferredVersion.GroupVersion: authorization.k8s.io/v1
  Sep 13 13:26:56.574: INFO: Versions found [{authorization.k8s.io/v1 v1}]
  Sep 13 13:26:56.574: INFO: authorization.k8s.io/v1 matches authorization.k8s.io/v1
  Sep 13 13:26:56.574: INFO: Checking APIGroup: autoscaling
  Sep 13 13:26:56.576: INFO: PreferredVersion.GroupVersion: autoscaling/v2
  Sep 13 13:26:56.576: INFO: Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  Sep 13 13:26:56.576: INFO: autoscaling/v2 matches autoscaling/v2
  Sep 13 13:26:56.576: INFO: Checking APIGroup: batch
  Sep 13 13:26:56.577: INFO: PreferredVersion.GroupVersion: batch/v1
  Sep 13 13:26:56.577: INFO: Versions found [{batch/v1 v1}]
  Sep 13 13:26:56.577: INFO: batch/v1 matches batch/v1
  Sep 13 13:26:56.577: INFO: Checking APIGroup: certificates.k8s.io
  Sep 13 13:26:56.578: INFO: PreferredVersion.GroupVersion: certificates.k8s.io/v1
  Sep 13 13:26:56.578: INFO: Versions found [{certificates.k8s.io/v1 v1}]
  Sep 13 13:26:56.578: INFO: certificates.k8s.io/v1 matches certificates.k8s.io/v1
  Sep 13 13:26:56.578: INFO: Checking APIGroup: networking.k8s.io
  Sep 13 13:26:56.579: INFO: PreferredVersion.GroupVersion: networking.k8s.io/v1
  Sep 13 13:26:56.579: INFO: Versions found [{networking.k8s.io/v1 v1}]
  Sep 13 13:26:56.579: INFO: networking.k8s.io/v1 matches networking.k8s.io/v1
  Sep 13 13:26:56.579: INFO: Checking APIGroup: policy
  Sep 13 13:26:56.579: INFO: PreferredVersion.GroupVersion: policy/v1
  Sep 13 13:26:56.580: INFO: Versions found [{policy/v1 v1}]
  Sep 13 13:26:56.580: INFO: policy/v1 matches policy/v1
  Sep 13 13:26:56.580: INFO: Checking APIGroup: rbac.authorization.k8s.io
  Sep 13 13:26:56.580: INFO: PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  Sep 13 13:26:56.580: INFO: Versions found [{rbac.authorization.k8s.io/v1 v1}]
  Sep 13 13:26:56.580: INFO: rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  Sep 13 13:26:56.580: INFO: Checking APIGroup: storage.k8s.io
  Sep 13 13:26:56.581: INFO: PreferredVersion.GroupVersion: storage.k8s.io/v1
  Sep 13 13:26:56.581: INFO: Versions found [{storage.k8s.io/v1 v1}]
  Sep 13 13:26:56.581: INFO: storage.k8s.io/v1 matches storage.k8s.io/v1
  Sep 13 13:26:56.581: INFO: Checking APIGroup: admissionregistration.k8s.io
  Sep 13 13:26:56.582: INFO: PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  Sep 13 13:26:56.582: INFO: Versions found [{admissionregistration.k8s.io/v1 v1}]
  Sep 13 13:26:56.582: INFO: admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  Sep 13 13:26:56.582: INFO: Checking APIGroup: apiextensions.k8s.io
  Sep 13 13:26:56.583: INFO: PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  Sep 13 13:26:56.583: INFO: Versions found [{apiextensions.k8s.io/v1 v1}]
  Sep 13 13:26:56.583: INFO: apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  Sep 13 13:26:56.583: INFO: Checking APIGroup: scheduling.k8s.io
  Sep 13 13:26:56.583: INFO: PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  Sep 13 13:26:56.584: INFO: Versions found [{scheduling.k8s.io/v1 v1}]
  Sep 13 13:26:56.584: INFO: scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  Sep 13 13:26:56.584: INFO: Checking APIGroup: coordination.k8s.io
  Sep 13 13:26:56.584: INFO: PreferredVersion.GroupVersion: coordination.k8s.io/v1
  Sep 13 13:26:56.584: INFO: Versions found [{coordination.k8s.io/v1 v1}]
  Sep 13 13:26:56.584: INFO: coordination.k8s.io/v1 matches coordination.k8s.io/v1
  Sep 13 13:26:56.584: INFO: Checking APIGroup: node.k8s.io
  Sep 13 13:26:56.585: INFO: PreferredVersion.GroupVersion: node.k8s.io/v1
  Sep 13 13:26:56.585: INFO: Versions found [{node.k8s.io/v1 v1}]
  Sep 13 13:26:56.585: INFO: node.k8s.io/v1 matches node.k8s.io/v1
  Sep 13 13:26:56.585: INFO: Checking APIGroup: discovery.k8s.io
  Sep 13 13:26:56.589: INFO: PreferredVersion.GroupVersion: discovery.k8s.io/v1
  Sep 13 13:26:56.589: INFO: Versions found [{discovery.k8s.io/v1 v1}]
  Sep 13 13:26:56.589: INFO: discovery.k8s.io/v1 matches discovery.k8s.io/v1
  Sep 13 13:26:56.589: INFO: Checking APIGroup: flowcontrol.apiserver.k8s.io
  Sep 13 13:26:56.590: INFO: PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1
  Sep 13 13:26:56.590: INFO: Versions found [{flowcontrol.apiserver.k8s.io/v1 v1} {flowcontrol.apiserver.k8s.io/v1beta3 v1beta3}]
  Sep 13 13:26:56.590: INFO: flowcontrol.apiserver.k8s.io/v1 matches flowcontrol.apiserver.k8s.io/v1
  Sep 13 13:26:56.590: INFO: Checking APIGroup: ceph.rook.io
  Sep 13 13:26:56.591: INFO: PreferredVersion.GroupVersion: ceph.rook.io/v1
  Sep 13 13:26:56.591: INFO: Versions found [{ceph.rook.io/v1 v1}]
  Sep 13 13:26:56.591: INFO: ceph.rook.io/v1 matches ceph.rook.io/v1
  Sep 13 13:26:56.591: INFO: Checking APIGroup: networking.istio.io
  Sep 13 13:26:56.592: INFO: PreferredVersion.GroupVersion: networking.istio.io/v1
  Sep 13 13:26:56.592: INFO: Versions found [{networking.istio.io/v1 v1} {networking.istio.io/v1beta1 v1beta1} {networking.istio.io/v1alpha3 v1alpha3}]
  Sep 13 13:26:56.592: INFO: networking.istio.io/v1 matches networking.istio.io/v1
  Sep 13 13:26:56.592: INFO: Checking APIGroup: security.istio.io
  Sep 13 13:26:56.593: INFO: PreferredVersion.GroupVersion: security.istio.io/v1
  Sep 13 13:26:56.593: INFO: Versions found [{security.istio.io/v1 v1} {security.istio.io/v1beta1 v1beta1}]
  Sep 13 13:26:56.593: INFO: security.istio.io/v1 matches security.istio.io/v1
  Sep 13 13:26:56.593: INFO: Checking APIGroup: telemetry.istio.io
  Sep 13 13:26:56.594: INFO: PreferredVersion.GroupVersion: telemetry.istio.io/v1
  Sep 13 13:26:56.594: INFO: Versions found [{telemetry.istio.io/v1 v1} {telemetry.istio.io/v1alpha1 v1alpha1}]
  Sep 13 13:26:56.594: INFO: telemetry.istio.io/v1 matches telemetry.istio.io/v1
  Sep 13 13:26:56.594: INFO: Checking APIGroup: extensions.istio.io
  Sep 13 13:26:56.595: INFO: PreferredVersion.GroupVersion: extensions.istio.io/v1alpha1
  Sep 13 13:26:56.595: INFO: Versions found [{extensions.istio.io/v1alpha1 v1alpha1}]
  Sep 13 13:26:56.595: INFO: extensions.istio.io/v1alpha1 matches extensions.istio.io/v1alpha1
  Sep 13 13:26:56.595: INFO: Checking APIGroup: kafka.strimzi.io
  Sep 13 13:26:56.597: INFO: PreferredVersion.GroupVersion: kafka.strimzi.io/v1beta2
  Sep 13 13:26:56.597: INFO: Versions found [{kafka.strimzi.io/v1beta2 v1beta2} {kafka.strimzi.io/v1beta1 v1beta1} {kafka.strimzi.io/v1alpha1 v1alpha1}]
  Sep 13 13:26:56.597: INFO: kafka.strimzi.io/v1beta2 matches kafka.strimzi.io/v1beta2
  Sep 13 13:26:56.597: INFO: Checking APIGroup: objectbucket.io
  Sep 13 13:26:56.599: INFO: PreferredVersion.GroupVersion: objectbucket.io/v1alpha1
  Sep 13 13:26:56.599: INFO: Versions found [{objectbucket.io/v1alpha1 v1alpha1}]
  Sep 13 13:26:56.599: INFO: objectbucket.io/v1alpha1 matches objectbucket.io/v1alpha1
  Sep 13 13:26:56.599: INFO: Checking APIGroup: core.strimzi.io
  Sep 13 13:26:56.600: INFO: PreferredVersion.GroupVersion: core.strimzi.io/v1beta2
  Sep 13 13:26:56.600: INFO: Versions found [{core.strimzi.io/v1beta2 v1beta2}]
  Sep 13 13:26:56.600: INFO: core.strimzi.io/v1beta2 matches core.strimzi.io/v1beta2
  Sep 13 13:26:56.600: INFO: Checking APIGroup: cilium.io
  Sep 13 13:26:56.601: INFO: PreferredVersion.GroupVersion: cilium.io/v2
  Sep 13 13:26:56.601: INFO: Versions found [{cilium.io/v2 v2} {cilium.io/v2alpha1 v2alpha1}]
  Sep 13 13:26:56.601: INFO: cilium.io/v2 matches cilium.io/v2
  Sep 13 13:26:56.601: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-8830" for this suite. @ 09/13/24 13:26:56.604
• [0.333 seconds]
------------------------------
SSS
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 09/13/24 13:26:56.61
  Sep 13 13:26:56.610: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename pods @ 09/13/24 13:26:56.611
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:26:56.623
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:26:56.626
  STEP: creating pod @ 09/13/24 13:26:56.629
  E0913 13:26:57.181558      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:26:58.181752      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:26:58.660: INFO: Pod pod-hostip-cd093e39-105c-47d4-9180-5b2d9c33858c has hostIP: 172.10.50.243
  Sep 13 13:26:58.660: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9449" for this suite. @ 09/13/24 13:26:58.664
• [2.066 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:948
  STEP: Creating a kubernetes client @ 09/13/24 13:26:58.678
  Sep 13 13:26:58.678: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename resourcequota @ 09/13/24 13:26:58.679
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:26:58.689
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:26:58.692
  STEP: Creating a ResourceQuota @ 09/13/24 13:26:58.698
  STEP: Getting a ResourceQuota @ 09/13/24 13:26:58.704
  STEP: Listing all ResourceQuotas with LabelSelector @ 09/13/24 13:26:58.706
  STEP: Patching the ResourceQuota @ 09/13/24 13:26:58.709
  STEP: Deleting a Collection of ResourceQuotas @ 09/13/24 13:26:58.715
  STEP: Verifying the deleted ResourceQuota @ 09/13/24 13:26:58.73
  Sep 13 13:26:58.732: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8773" for this suite. @ 09/13/24 13:26:58.736
• [0.062 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:245
  STEP: Creating a kubernetes client @ 09/13/24 13:26:58.74
  Sep 13 13:26:58.740: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename namespaces @ 09/13/24 13:26:58.742
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:26:58.767
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:26:58.77
  STEP: Creating a test namespace @ 09/13/24 13:26:58.772
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:26:58.788
  STEP: Creating a pod in the namespace @ 09/13/24 13:26:58.79
  STEP: Waiting for the pod to have running status @ 09/13/24 13:26:58.806
  E0913 13:26:59.181930      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:27:00.182451      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the namespace @ 09/13/24 13:27:00.813
  STEP: Waiting for the namespace to be removed. @ 09/13/24 13:27:00.82
  E0913 13:27:01.183513      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:27:02.183667      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:27:03.184387      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:27:04.184554      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:27:05.185395      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:27:06.185663      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:27:07.186628      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:27:08.187000      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:27:09.188069      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:27:10.189174      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:27:11.189902      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 09/13/24 13:27:11.824
  STEP: Verifying there are no pods in the namespace @ 09/13/24 13:27:11.844
  Sep 13 13:27:11.846: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-3535" for this suite. @ 09/13/24 13:27:11.85
  STEP: Destroying namespace "nsdeletetest-3316" for this suite. @ 09/13/24 13:27:11.858
  Sep 13 13:27:11.860: INFO: Namespace nsdeletetest-3316 was already deleted
  STEP: Destroying namespace "nsdeletetest-2016" for this suite. @ 09/13/24 13:27:11.86
• [13.132 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:238
  STEP: Creating a kubernetes client @ 09/13/24 13:27:11.876
  Sep 13 13:27:11.876: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename webhook @ 09/13/24 13:27:11.877
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:27:11.89
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:27:11.892
  STEP: Setting up server cert @ 09/13/24 13:27:11.928
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/13/24 13:27:12.17
  STEP: Deploying the webhook pod @ 09/13/24 13:27:12.178
  E0913 13:27:12.190303      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Wait for the deployment to be ready @ 09/13/24 13:27:12.206
  Sep 13 13:27:12.219: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0913 13:27:13.190874      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:27:14.191005      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/13/24 13:27:14.227
  STEP: Verifying the service has paired with the endpoint @ 09/13/24 13:27:14.247
  E0913 13:27:15.191694      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:27:15.248: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 09/13/24 13:27:15.254
  STEP: create a namespace for the webhook @ 09/13/24 13:27:15.272
  STEP: create a configmap should be unconditionally rejected by the webhook @ 09/13/24 13:27:15.284
  Sep 13 13:27:15.356: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7048" for this suite. @ 09/13/24 13:27:15.367
  STEP: Destroying namespace "webhook-markers-3718" for this suite. @ 09/13/24 13:27:15.372
  STEP: Destroying namespace "fail-closed-namespace-6652" for this suite. @ 09/13/24 13:27:15.381
• [3.517 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:55
  STEP: Creating a kubernetes client @ 09/13/24 13:27:15.393
  Sep 13 13:27:15.393: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename downward-api @ 09/13/24 13:27:15.395
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:27:15.421
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:27:15.425
  STEP: Creating a pod to test downward API volume plugin @ 09/13/24 13:27:15.427
  E0913 13:27:16.191871      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:27:17.193059      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:27:18.193943      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:27:19.194086      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/13/24 13:27:19.456
  Sep 13 13:27:19.458: INFO: Trying to get logs from node cncf-3 pod downwardapi-volume-bd0720bf-d1db-416d-9d83-b30c8f9d309a container client-container: <nil>
  STEP: delete the pod @ 09/13/24 13:27:19.463
  Sep 13 13:27:19.477: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9230" for this suite. @ 09/13/24 13:27:19.48
• [4.094 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:301
  STEP: Creating a kubernetes client @ 09/13/24 13:27:19.486
  Sep 13 13:27:19.487: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename webhook @ 09/13/24 13:27:19.488
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:27:19.514
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:27:19.517
  STEP: Setting up server cert @ 09/13/24 13:27:19.547
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/13/24 13:27:20.04
  STEP: Deploying the webhook pod @ 09/13/24 13:27:20.045
  STEP: Wait for the deployment to be ready @ 09/13/24 13:27:20.073
  Sep 13 13:27:20.088: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0913 13:27:20.194471      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:27:21.194602      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/13/24 13:27:22.106
  STEP: Verifying the service has paired with the endpoint @ 09/13/24 13:27:22.122
  E0913 13:27:22.195036      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:27:23.123: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 09/13/24 13:27:23.128
  STEP: Creating a custom resource definition that should be denied by the webhook @ 09/13/24 13:27:23.149
  Sep 13 13:27:23.149: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  E0913 13:27:23.194977      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:27:23.221: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7140" for this suite. @ 09/13/24 13:27:23.232
  STEP: Destroying namespace "webhook-markers-1359" for this suite. @ 09/13/24 13:27:23.253
• [3.774 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:220
  STEP: Creating a kubernetes client @ 09/13/24 13:27:23.261
  Sep 13 13:27:23.261: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename emptydir @ 09/13/24 13:27:23.262
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:27:23.276
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:27:23.279
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 09/13/24 13:27:23.283
  E0913 13:27:24.195197      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:27:25.195251      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:27:26.195448      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:27:27.195860      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/13/24 13:27:27.3
  Sep 13 13:27:27.302: INFO: Trying to get logs from node cncf-3 pod pod-13ca0a21-142c-4ddc-8d32-cc9e5c6bc1b8 container test-container: <nil>
  STEP: delete the pod @ 09/13/24 13:27:27.307
  Sep 13 13:27:27.338: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9443" for this suite. @ 09/13/24 13:27:27.342
• [4.097 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:480
  STEP: Creating a kubernetes client @ 09/13/24 13:27:27.359
  Sep 13 13:27:27.359: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename gc @ 09/13/24 13:27:27.36
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:27:27.388
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:27:27.391
  STEP: create the deployment @ 09/13/24 13:27:27.393
  W0913 13:27:27.402945      23 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 09/13/24 13:27:27.403
  STEP: delete the deployment @ 09/13/24 13:27:27.906
  STEP: wait for all rs to be garbage collected @ 09/13/24 13:27:27.911
  STEP: expected 0 rs, got 1 rs @ 09/13/24 13:27:27.915
  STEP: expected 0 pods, got 2 pods @ 09/13/24 13:27:27.917
  E0913 13:27:28.196284      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 09/13/24 13:27:28.417
  Sep 13 13:27:28.531: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Sep 13 13:27:28.531: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-5437" for this suite. @ 09/13/24 13:27:28.536
• [1.184 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:232
  STEP: Creating a kubernetes client @ 09/13/24 13:27:28.543
  Sep 13 13:27:28.543: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename container-runtime @ 09/13/24 13:27:28.543
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:27:28.581
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:27:28.584
  STEP: create the container @ 09/13/24 13:27:28.589
  W0913 13:27:28.607798      23 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 09/13/24 13:27:28.608
  E0913 13:27:29.196956      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:27:30.197824      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:27:31.198116      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 09/13/24 13:27:31.628
  STEP: the container should be terminated @ 09/13/24 13:27:31.63
  STEP: the termination message should be set @ 09/13/24 13:27:31.63
  Sep 13 13:27:31.630: INFO: Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 09/13/24 13:27:31.63
  Sep 13 13:27:31.657: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-5789" for this suite. @ 09/13/24 13:27:31.661
• [3.124 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:897
  STEP: Creating a kubernetes client @ 09/13/24 13:27:31.668
  Sep 13 13:27:31.668: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename pods @ 09/13/24 13:27:31.67
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:27:31.693
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:27:31.696
  STEP: creating a Pod with a static label @ 09/13/24 13:27:31.709
  STEP: watching for Pod to be ready @ 09/13/24 13:27:31.715
  Sep 13 13:27:31.717: INFO: observed Pod pod-test in namespace pods-3663 in phase Pending with labels: map[test-pod-static:true] & conditions []
  Sep 13 13:27:31.722: INFO: observed Pod pod-test in namespace pods-3663 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-09-13 13:27:31 +0000 UTC  }]
  Sep 13 13:27:31.738: INFO: observed Pod pod-test in namespace pods-3663 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-09-13 13:27:31 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-09-13 13:27:31 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-09-13 13:27:31 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-09-13 13:27:31 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-09-13 13:27:31 +0000 UTC  }]
  E0913 13:27:32.198515      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:27:33.199327      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:27:33.277: INFO: Found Pod pod-test in namespace pods-3663 in phase Running with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-09-13 13:27:33 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-09-13 13:27:31 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2024-09-13 13:27:33 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2024-09-13 13:27:33 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-09-13 13:27:31 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 09/13/24 13:27:33.28
  STEP: getting the Pod and ensuring that it's patched @ 09/13/24 13:27:33.296
  STEP: replacing the Pod's status Ready condition to False @ 09/13/24 13:27:33.302
  STEP: check the Pod again to ensure its Ready conditions are False @ 09/13/24 13:27:33.325
  STEP: deleting the Pod via a Collection with a LabelSelector @ 09/13/24 13:27:33.325
  STEP: watching for the Pod to be deleted @ 09/13/24 13:27:33.332
  Sep 13 13:27:33.334: INFO: observed event type MODIFIED
  E0913 13:27:34.199608      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:27:35.199977      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:27:35.287: INFO: observed event type MODIFIED
  Sep 13 13:27:35.437: INFO: observed event type MODIFIED
  E0913 13:27:36.200189      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:27:36.289: INFO: observed event type MODIFIED
  Sep 13 13:27:36.304: INFO: observed event type MODIFIED
  Sep 13 13:27:36.313: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3663" for this suite. @ 09/13/24 13:27:36.316
• [4.656 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:403
  STEP: Creating a kubernetes client @ 09/13/24 13:27:36.324
  Sep 13 13:27:36.324: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename webhook @ 09/13/24 13:27:36.324
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:27:36.345
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:27:36.347
  STEP: Setting up server cert @ 09/13/24 13:27:36.369
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/13/24 13:27:36.519
  STEP: Deploying the webhook pod @ 09/13/24 13:27:36.528
  STEP: Wait for the deployment to be ready @ 09/13/24 13:27:36.548
  Sep 13 13:27:36.552: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0913 13:27:37.201048      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:27:38.201188      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/13/24 13:27:38.561
  STEP: Verifying the service has paired with the endpoint @ 09/13/24 13:27:38.587
  E0913 13:27:39.202012      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:27:39.587: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 09/13/24 13:27:39.599
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/13/24 13:27:39.645
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 09/13/24 13:27:39.651
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/13/24 13:27:39.684
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 09/13/24 13:27:39.715
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/13/24 13:27:39.736
  Sep 13 13:27:39.865: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-62" for this suite. @ 09/13/24 13:27:39.869
  STEP: Destroying namespace "webhook-markers-9231" for this suite. @ 09/13/24 13:27:39.889
• [3.581 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:95
  STEP: Creating a kubernetes client @ 09/13/24 13:27:39.905
  Sep 13 13:27:39.906: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename replication-controller @ 09/13/24 13:27:39.907
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:27:39.96
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:27:39.962
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 09/13/24 13:27:39.965
  E0913 13:27:40.202702      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:27:41.202945      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: When a replication controller with a matching selector is created @ 09/13/24 13:27:41.985
  STEP: Then the orphan pod is adopted @ 09/13/24 13:27:41.994
  E0913 13:27:42.203747      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:27:43.000: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-8968" for this suite. @ 09/13/24 13:27:43.003
• [3.106 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:276
  STEP: Creating a kubernetes client @ 09/13/24 13:27:43.013
  Sep 13 13:27:43.013: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/13/24 13:27:43.014
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:27:43.039
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:27:43.043
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 09/13/24 13:27:43.049
  Sep 13 13:27:43.050: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  E0913 13:27:43.204203      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:27:44.204666      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:27:44.787: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  E0913 13:27:45.205428      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:27:46.205881      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:27:47.206874      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:27:48.207864      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:27:49.208568      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:27:50.209047      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:27:51.209723      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:27:51.475: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-2412" for this suite. @ 09/13/24 13:27:51.482
• [8.479 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1533
  STEP: Creating a kubernetes client @ 09/13/24 13:27:51.492
  Sep 13 13:27:51.492: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename services @ 09/13/24 13:27:51.494
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:27:51.513
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:27:51.516
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-7200 @ 09/13/24 13:27:51.518
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 09/13/24 13:27:51.536
  STEP: creating service externalsvc in namespace services-7200 @ 09/13/24 13:27:51.536
  STEP: creating replication controller externalsvc in namespace services-7200 @ 09/13/24 13:27:51.553
  I0913 13:27:51.563570      23 runners.go:197] Created replication controller with name: externalsvc, namespace: services-7200, replica count: 2
  E0913 13:27:52.210055      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:27:53.210330      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:27:54.210433      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0913 13:27:54.616364      23 runners.go:197] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the NodePort service to type=ExternalName @ 09/13/24 13:27:54.619
  Sep 13 13:27:54.641: INFO: Creating new exec pod
  E0913 13:27:55.210537      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:27:56.210678      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:27:56.666: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=services-7200 exec execpod998qx -- /bin/sh -x -c nslookup nodeport-service.services-7200.svc.cluster.local'
  Sep 13 13:27:56.839: INFO: stderr: "+ nslookup nodeport-service.services-7200.svc.cluster.local\n"
  Sep 13 13:27:56.839: INFO: stdout: "Server:\t\t10.233.0.3\nAddress:\t10.233.0.3#53\n\nnodeport-service.services-7200.svc.cluster.local\tcanonical name = externalsvc.services-7200.svc.cluster.local.\nName:\texternalsvc.services-7200.svc.cluster.local\nAddress: 10.233.49.42\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-7200, will wait for the garbage collector to delete the pods @ 09/13/24 13:27:56.839
  Sep 13 13:27:56.898: INFO: Deleting ReplicationController externalsvc took: 5.726105ms
  Sep 13 13:27:56.999: INFO: Terminating ReplicationController externalsvc pods took: 100.464724ms
  E0913 13:27:57.211491      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:27:58.211872      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:27:59.212699      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:27:59.713: INFO: Cleaning up the NodePort to ExternalName test service
  Sep 13 13:27:59.721: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7200" for this suite. @ 09/13/24 13:27:59.725
• [8.238 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:810
  STEP: Creating a kubernetes client @ 09/13/24 13:27:59.731
  Sep 13 13:27:59.731: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename svcaccounts @ 09/13/24 13:27:59.732
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:27:59.746
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:27:59.75
  STEP: Creating ServiceAccount "e2e-sa-nrwhg"  @ 09/13/24 13:27:59.752
  Sep 13 13:27:59.756: INFO: AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-nrwhg"  @ 09/13/24 13:27:59.756
  Sep 13 13:27:59.764: INFO: AutomountServiceAccountToken: true
  Sep 13 13:27:59.764: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-8756" for this suite. @ 09/13/24 13:27:59.767
• [0.041 seconds]
------------------------------
SS
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2177
  STEP: Creating a kubernetes client @ 09/13/24 13:27:59.772
  Sep 13 13:27:59.772: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename services @ 09/13/24 13:27:59.774
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:27:59.79
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:27:59.793
  STEP: creating service in namespace services-9732 @ 09/13/24 13:27:59.796
  STEP: creating service affinity-clusterip in namespace services-9732 @ 09/13/24 13:27:59.796
  STEP: creating replication controller affinity-clusterip in namespace services-9732 @ 09/13/24 13:27:59.809
  I0913 13:27:59.818040      23 runners.go:197] Created replication controller with name: affinity-clusterip, namespace: services-9732, replica count: 3
  E0913 13:28:00.213980      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:28:01.214688      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:28:02.214749      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0913 13:28:02.869789      23 runners.go:197] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Sep 13 13:28:02.877: INFO: Creating new exec pod
  E0913 13:28:03.215691      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:28:04.215979      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:28:05.216833      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:28:05.889: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=services-9732 exec execpod-affinitydfvmk -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  Sep 13 13:28:06.003: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip 80\nConnection to affinity-clusterip 80 port [tcp/http] succeeded!\n"
  Sep 13 13:28:06.003: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep 13 13:28:06.004: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=services-9732 exec execpod-affinitydfvmk -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.6.192 80'
  Sep 13 13:28:06.122: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.6.192 80\nConnection to 10.233.6.192 80 port [tcp/http] succeeded!\n"
  Sep 13 13:28:06.122: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep 13 13:28:06.122: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=services-9732 exec execpod-affinitydfvmk -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.233.6.192:80/ ; done'
  E0913 13:28:06.217289      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:28:06.280: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.6.192:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.6.192:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.6.192:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.6.192:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.6.192:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.6.192:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.6.192:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.6.192:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.6.192:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.6.192:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.6.192:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.6.192:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.6.192:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.6.192:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.6.192:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.6.192:80/\n"
  Sep 13 13:28:06.280: INFO: stdout: "\naffinity-clusterip-8nsch\naffinity-clusterip-8nsch\naffinity-clusterip-8nsch\naffinity-clusterip-8nsch\naffinity-clusterip-8nsch\naffinity-clusterip-8nsch\naffinity-clusterip-8nsch\naffinity-clusterip-8nsch\naffinity-clusterip-8nsch\naffinity-clusterip-8nsch\naffinity-clusterip-8nsch\naffinity-clusterip-8nsch\naffinity-clusterip-8nsch\naffinity-clusterip-8nsch\naffinity-clusterip-8nsch\naffinity-clusterip-8nsch"
  Sep 13 13:28:06.280: INFO: Received response from host: affinity-clusterip-8nsch
  Sep 13 13:28:06.280: INFO: Received response from host: affinity-clusterip-8nsch
  Sep 13 13:28:06.280: INFO: Received response from host: affinity-clusterip-8nsch
  Sep 13 13:28:06.280: INFO: Received response from host: affinity-clusterip-8nsch
  Sep 13 13:28:06.280: INFO: Received response from host: affinity-clusterip-8nsch
  Sep 13 13:28:06.280: INFO: Received response from host: affinity-clusterip-8nsch
  Sep 13 13:28:06.280: INFO: Received response from host: affinity-clusterip-8nsch
  Sep 13 13:28:06.280: INFO: Received response from host: affinity-clusterip-8nsch
  Sep 13 13:28:06.280: INFO: Received response from host: affinity-clusterip-8nsch
  Sep 13 13:28:06.280: INFO: Received response from host: affinity-clusterip-8nsch
  Sep 13 13:28:06.280: INFO: Received response from host: affinity-clusterip-8nsch
  Sep 13 13:28:06.280: INFO: Received response from host: affinity-clusterip-8nsch
  Sep 13 13:28:06.280: INFO: Received response from host: affinity-clusterip-8nsch
  Sep 13 13:28:06.280: INFO: Received response from host: affinity-clusterip-8nsch
  Sep 13 13:28:06.280: INFO: Received response from host: affinity-clusterip-8nsch
  Sep 13 13:28:06.280: INFO: Received response from host: affinity-clusterip-8nsch
  Sep 13 13:28:06.280: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip in namespace services-9732, will wait for the garbage collector to delete the pods @ 09/13/24 13:28:06.291
  Sep 13 13:28:06.352: INFO: Deleting ReplicationController affinity-clusterip took: 7.706514ms
  Sep 13 13:28:06.453: INFO: Terminating ReplicationController affinity-clusterip pods took: 100.491216ms
  E0913 13:28:07.218334      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:28:08.219334      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:28:09.219947      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:28:09.770: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9732" for this suite. @ 09/13/24 13:28:09.774
• [10.008 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:248
  STEP: Creating a kubernetes client @ 09/13/24 13:28:09.78
  Sep 13 13:28:09.780: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename container-runtime @ 09/13/24 13:28:09.781
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:28:09.796
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:28:09.799
  STEP: create the container @ 09/13/24 13:28:09.802
  W0913 13:28:09.808776      23 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 09/13/24 13:28:09.808
  E0913 13:28:10.220690      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:28:11.221696      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:28:12.221854      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 09/13/24 13:28:12.827
  STEP: the container should be terminated @ 09/13/24 13:28:12.829
  STEP: the termination message should be set @ 09/13/24 13:28:12.829
  Sep 13 13:28:12.829: INFO: Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 09/13/24 13:28:12.829
  Sep 13 13:28:12.845: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-8150" for this suite. @ 09/13/24 13:28:12.848
• [3.072 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance] [sig-architecture, Conformance]
k8s.io/kubernetes/test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 09/13/24 13:28:12.854
  Sep 13 13:28:12.854: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename conformance-tests @ 09/13/24 13:28:12.855
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:28:12.867
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:28:12.869
  STEP: Getting node addresses @ 09/13/24 13:28:12.871
  Sep 13 13:28:12.871: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  Sep 13 13:28:12.876: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-2995" for this suite. @ 09/13/24 13:28:12.879
• [0.030 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:164
  STEP: Creating a kubernetes client @ 09/13/24 13:28:12.885
  Sep 13 13:28:12.885: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename projected @ 09/13/24 13:28:12.886
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:28:12.899
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:28:12.902
  STEP: Creating the pod @ 09/13/24 13:28:12.905
  E0913 13:28:13.222341      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:28:14.223001      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:28:15.223221      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:28:15.451: INFO: Successfully updated pod "annotationupdateb757f608-727e-4c6c-a2a5-dfbb9deaf6ef"
  E0913 13:28:16.223367      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:28:17.224104      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:28:17.462: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9141" for this suite. @ 09/13/24 13:28:17.465
• [4.587 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1731
  STEP: Creating a kubernetes client @ 09/13/24 13:28:17.472
  Sep 13 13:28:17.472: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename kubectl @ 09/13/24 13:28:17.472
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:28:17.483
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:28:17.485
  Sep 13 13:28:17.490: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=kubectl-23 version'
  Sep 13 13:28:17.535: INFO: stderr: ""
  Sep 13 13:28:17.535: INFO: stdout: "Client Version: v1.29.7\nKustomize Version: v5.0.4-0.20230601165947-6ce0bf390ce3\nServer Version: v1.29.7\n"
  Sep 13 13:28:17.535: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-23" for this suite. @ 09/13/24 13:28:17.544
• [0.083 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:100
  STEP: Creating a kubernetes client @ 09/13/24 13:28:17.555
  Sep 13 13:28:17.555: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename projected @ 09/13/24 13:28:17.556
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:28:17.575
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:28:17.578
  STEP: Creating configMap with name projected-configmap-test-volume-map-4320dca8-1b9c-4f8a-9114-0269dafbd7e1 @ 09/13/24 13:28:17.58
  STEP: Creating a pod to test consume configMaps @ 09/13/24 13:28:17.585
  E0913 13:28:18.224203      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:28:19.224855      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:28:20.225362      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:28:21.225526      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/13/24 13:28:21.686
  Sep 13 13:28:21.688: INFO: Trying to get logs from node cncf-3 pod pod-projected-configmaps-a77e3ade-8d03-4ef8-bdae-91303f8b8f52 container agnhost-container: <nil>
  STEP: delete the pod @ 09/13/24 13:28:21.693
  Sep 13 13:28:21.706: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6599" for this suite. @ 09/13/24 13:28:21.709
• [4.158 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:134
  STEP: Creating a kubernetes client @ 09/13/24 13:28:21.714
  Sep 13 13:28:21.714: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename container-probe @ 09/13/24 13:28:21.715
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:28:21.729
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:28:21.731
  STEP: Creating pod busybox-3d5db297-934a-43b3-b1fe-a9c16cd3c7b8 in namespace container-probe-3966 @ 09/13/24 13:28:21.733
  E0913 13:28:22.226123      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:28:23.226519      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/13/24 13:28:23.749
  Sep 13 13:28:23.751: INFO: Initial restart count of pod busybox-3d5db297-934a-43b3-b1fe-a9c16cd3c7b8 is 0
  Sep 13 13:28:23.753: INFO: Get pod busybox-3d5db297-934a-43b3-b1fe-a9c16cd3c7b8 in namespace container-probe-3966
  E0913 13:28:24.226855      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:28:25.226973      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:28:25.757: INFO: Get pod busybox-3d5db297-934a-43b3-b1fe-a9c16cd3c7b8 in namespace container-probe-3966
  E0913 13:28:26.227373      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:28:27.227666      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:28:27.761: INFO: Get pod busybox-3d5db297-934a-43b3-b1fe-a9c16cd3c7b8 in namespace container-probe-3966
  E0913 13:28:28.228348      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:28:29.228992      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:28:29.766: INFO: Get pod busybox-3d5db297-934a-43b3-b1fe-a9c16cd3c7b8 in namespace container-probe-3966
  E0913 13:28:30.229187      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:28:31.229536      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:28:31.770: INFO: Get pod busybox-3d5db297-934a-43b3-b1fe-a9c16cd3c7b8 in namespace container-probe-3966
  E0913 13:28:32.230265      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:28:33.230748      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:28:33.774: INFO: Get pod busybox-3d5db297-934a-43b3-b1fe-a9c16cd3c7b8 in namespace container-probe-3966
  E0913 13:28:34.230996      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:28:35.231657      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:28:35.778: INFO: Get pod busybox-3d5db297-934a-43b3-b1fe-a9c16cd3c7b8 in namespace container-probe-3966
  E0913 13:28:36.231899      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:28:37.232108      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:28:37.782: INFO: Get pod busybox-3d5db297-934a-43b3-b1fe-a9c16cd3c7b8 in namespace container-probe-3966
  E0913 13:28:38.232998      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:28:39.233988      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:28:39.786: INFO: Get pod busybox-3d5db297-934a-43b3-b1fe-a9c16cd3c7b8 in namespace container-probe-3966
  E0913 13:28:40.234076      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:28:41.234291      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:28:41.791: INFO: Get pod busybox-3d5db297-934a-43b3-b1fe-a9c16cd3c7b8 in namespace container-probe-3966
  E0913 13:28:42.235039      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:28:43.235193      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:28:43.796: INFO: Get pod busybox-3d5db297-934a-43b3-b1fe-a9c16cd3c7b8 in namespace container-probe-3966
  E0913 13:28:44.235463      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:28:45.235888      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:28:45.800: INFO: Get pod busybox-3d5db297-934a-43b3-b1fe-a9c16cd3c7b8 in namespace container-probe-3966
  E0913 13:28:46.236779      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:28:47.237124      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:28:47.805: INFO: Get pod busybox-3d5db297-934a-43b3-b1fe-a9c16cd3c7b8 in namespace container-probe-3966
  E0913 13:28:48.238275      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:28:49.239212      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:28:49.809: INFO: Get pod busybox-3d5db297-934a-43b3-b1fe-a9c16cd3c7b8 in namespace container-probe-3966
  E0913 13:28:50.239579      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:28:51.239680      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:28:51.814: INFO: Get pod busybox-3d5db297-934a-43b3-b1fe-a9c16cd3c7b8 in namespace container-probe-3966
  E0913 13:28:52.239895      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:28:53.240054      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:28:53.818: INFO: Get pod busybox-3d5db297-934a-43b3-b1fe-a9c16cd3c7b8 in namespace container-probe-3966
  E0913 13:28:54.240152      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:28:55.240916      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:28:55.823: INFO: Get pod busybox-3d5db297-934a-43b3-b1fe-a9c16cd3c7b8 in namespace container-probe-3966
  E0913 13:28:56.240992      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:28:57.241245      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:28:57.828: INFO: Get pod busybox-3d5db297-934a-43b3-b1fe-a9c16cd3c7b8 in namespace container-probe-3966
  E0913 13:28:58.241532      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:28:59.242517      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:28:59.830: INFO: Get pod busybox-3d5db297-934a-43b3-b1fe-a9c16cd3c7b8 in namespace container-probe-3966
  E0913 13:29:00.243430      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:29:01.243505      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:29:01.835: INFO: Get pod busybox-3d5db297-934a-43b3-b1fe-a9c16cd3c7b8 in namespace container-probe-3966
  E0913 13:29:02.243617      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:29:03.243857      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:29:03.838: INFO: Get pod busybox-3d5db297-934a-43b3-b1fe-a9c16cd3c7b8 in namespace container-probe-3966
  E0913 13:29:04.244995      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:29:05.245215      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:29:05.843: INFO: Get pod busybox-3d5db297-934a-43b3-b1fe-a9c16cd3c7b8 in namespace container-probe-3966
  E0913 13:29:06.245341      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:29:07.245525      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:29:07.846: INFO: Get pod busybox-3d5db297-934a-43b3-b1fe-a9c16cd3c7b8 in namespace container-probe-3966
  E0913 13:29:08.245920      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:29:09.247018      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:29:09.849: INFO: Get pod busybox-3d5db297-934a-43b3-b1fe-a9c16cd3c7b8 in namespace container-probe-3966
  E0913 13:29:10.247670      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:29:11.248689      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:29:11.855: INFO: Get pod busybox-3d5db297-934a-43b3-b1fe-a9c16cd3c7b8 in namespace container-probe-3966
  E0913 13:29:12.248920      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:29:13.249489      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:29:13.858: INFO: Get pod busybox-3d5db297-934a-43b3-b1fe-a9c16cd3c7b8 in namespace container-probe-3966
  Sep 13 13:29:13.858: INFO: Restart count of pod container-probe-3966/busybox-3d5db297-934a-43b3-b1fe-a9c16cd3c7b8 is now 1 (50.10719197s elapsed)
  STEP: deleting the pod @ 09/13/24 13:29:13.858
  Sep 13 13:29:13.871: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-3966" for this suite. @ 09/13/24 13:29:13.875
• [52.167 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:110
  STEP: Creating a kubernetes client @ 09/13/24 13:29:13.882
  Sep 13 13:29:13.882: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename configmap @ 09/13/24 13:29:13.883
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:29:13.901
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:29:13.903
  STEP: Creating configMap with name configmap-test-volume-map-23ad4495-d6c1-44e8-b491-d2befa0316fb @ 09/13/24 13:29:13.905
  STEP: Creating a pod to test consume configMaps @ 09/13/24 13:29:13.909
  E0913 13:29:14.250138      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:29:15.250052      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:29:16.251050      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:29:17.251324      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/13/24 13:29:17.929
  Sep 13 13:29:17.931: INFO: Trying to get logs from node cncf-3 pod pod-configmaps-93c63317-5872-456d-a229-cf0c066c148a container agnhost-container: <nil>
  STEP: delete the pod @ 09/13/24 13:29:17.937
  Sep 13 13:29:17.951: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-472" for this suite. @ 09/13/24 13:29:17.954
• [4.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:61
  STEP: Creating a kubernetes client @ 09/13/24 13:29:17.96
  Sep 13 13:29:17.960: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename containers @ 09/13/24 13:29:17.961
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:29:17.982
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:29:17.984
  STEP: Creating a pod to test override arguments @ 09/13/24 13:29:17.987
  E0913 13:29:18.252220      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:29:19.252801      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:29:20.253720      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:29:21.254235      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/13/24 13:29:22.004
  Sep 13 13:29:22.007: INFO: Trying to get logs from node cncf-3 pod client-containers-57f55f29-8975-4784-8d53-dd88e9a53ebb container agnhost-container: <nil>
  STEP: delete the pod @ 09/13/24 13:29:22.012
  Sep 13 13:29:22.028: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-4756" for this suite. @ 09/13/24 13:29:22.032
• [4.077 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 09/13/24 13:29:22.038
  Sep 13 13:29:22.038: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename subpath @ 09/13/24 13:29:22.039
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:29:22.06
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:29:22.062
  STEP: Setting up data @ 09/13/24 13:29:22.066
  STEP: Creating pod pod-subpath-test-secret-xhvz @ 09/13/24 13:29:22.076
  STEP: Creating a pod to test atomic-volume-subpath @ 09/13/24 13:29:22.076
  E0913 13:29:22.254699      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:29:23.254806      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:29:24.255189      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:29:25.255453      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:29:26.255763      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:29:27.256058      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:29:28.256642      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:29:29.257232      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:29:30.257327      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:29:31.257568      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:29:32.258235      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:29:33.259044      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:29:34.259609      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:29:35.259917      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:29:36.260681      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:29:37.261055      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:29:38.261891      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:29:39.262262      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:29:40.263097      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:29:41.263450      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:29:42.264465      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:29:43.265342      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:29:44.265748      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:29:45.265800      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/13/24 13:29:46.137
  Sep 13 13:29:46.140: INFO: Trying to get logs from node cncf-3 pod pod-subpath-test-secret-xhvz container test-container-subpath-secret-xhvz: <nil>
  STEP: delete the pod @ 09/13/24 13:29:46.146
  STEP: Deleting pod pod-subpath-test-secret-xhvz @ 09/13/24 13:29:46.169
  Sep 13 13:29:46.169: INFO: Deleting pod "pod-subpath-test-secret-xhvz" in namespace "subpath-6904"
  Sep 13 13:29:46.171: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-6904" for this suite. @ 09/13/24 13:29:46.173
• [24.142 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:889
  STEP: Creating a kubernetes client @ 09/13/24 13:29:46.18
  Sep 13 13:29:46.180: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename resourcequota @ 09/13/24 13:29:46.181
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:29:46.205
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:29:46.207
  STEP: Creating a ResourceQuota @ 09/13/24 13:29:46.21
  STEP: Getting a ResourceQuota @ 09/13/24 13:29:46.235
  STEP: Updating a ResourceQuota @ 09/13/24 13:29:46.238
  STEP: Verifying a ResourceQuota was modified @ 09/13/24 13:29:46.258
  STEP: Deleting a ResourceQuota @ 09/13/24 13:29:46.26
  E0913 13:29:46.266573      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Verifying the deleted ResourceQuota @ 09/13/24 13:29:46.267
  Sep 13 13:29:46.269: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9086" for this suite. @ 09/13/24 13:29:46.272
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:132
  STEP: Creating a kubernetes client @ 09/13/24 13:29:46.28
  Sep 13 13:29:46.280: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename projected @ 09/13/24 13:29:46.281
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:29:46.317
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:29:46.32
  STEP: Creating the pod @ 09/13/24 13:29:46.323
  E0913 13:29:47.267286      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:29:48.267807      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:29:48.866: INFO: Successfully updated pod "labelsupdateb6d63cbb-36ff-42ad-bfa1-41c0f81600c0"
  E0913 13:29:49.268031      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:29:50.268055      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:29:50.887: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9651" for this suite. @ 09/13/24 13:29:50.89
• [4.619 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:125
  STEP: Creating a kubernetes client @ 09/13/24 13:29:50.9
  Sep 13 13:29:50.900: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename projected @ 09/13/24 13:29:50.902
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:29:50.933
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:29:50.935
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-4f0c30e4-ecfe-451b-a813-dd6ac34907bf @ 09/13/24 13:29:50.94
  STEP: Creating the pod @ 09/13/24 13:29:50.95
  E0913 13:29:51.268732      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:29:52.269397      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating configmap projected-configmap-test-upd-4f0c30e4-ecfe-451b-a813-dd6ac34907bf @ 09/13/24 13:29:52.97
  STEP: waiting to observe update in volume @ 09/13/24 13:29:52.974
  E0913 13:29:53.269665      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:29:54.269895      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:29:55.271044      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:29:56.271472      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:29:57.271928      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:29:58.272003      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:29:59.272963      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:30:00.273191      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:30:01.273807      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:30:02.274088      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:30:03.274906      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:30:04.275132      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:30:05.276142      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:30:06.276343      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:30:07.276301      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:30:08.276448      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:30:09.277044      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:30:10.277227      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:30:11.277395      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:30:12.278180      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:30:13.278451      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:30:14.278625      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:30:15.279560      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:30:16.279942      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:30:17.280565      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:30:18.280689      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:30:19.281195      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:30:20.281339      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:30:21.281878      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:30:22.282119      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:30:23.282369      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:30:24.282857      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:30:25.283246      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:30:26.283401      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:30:27.283895      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:30:28.284948      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:30:29.285107      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:30:30.285319      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:30:31.285483      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:30:32.286401      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:30:33.287433      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:30:34.288344      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:30:35.289161      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:30:36.289302      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:30:37.290088      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:30:38.290168      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:30:39.290671      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:30:40.290741      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:30:41.291813      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:30:42.292198      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:30:43.293165      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:30:44.293380      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:30:45.293432      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:30:46.293603      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:30:47.294539      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:30:48.294877      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:30:49.295649      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:30:50.295858      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:30:51.296434      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:30:52.297348      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:30:53.298395      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:30:54.298843      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:30:55.299041      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:30:56.299258      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:30:57.300182      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:30:58.300319      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:30:59.301658      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:31:00.301993      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:31:01.303127      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:31:02.303562      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:31:03.304253      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:31:04.304629      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:31:05.305295      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:31:06.305566      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:31:07.306436      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:31:08.306650      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:31:09.307534      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:31:10.307913      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:31:11.308113      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:31:12.308509      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:31:13.309247      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:31:14.309487      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:31:15.310298      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:31:16.310902      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:31:17.292: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-87" for this suite. @ 09/13/24 13:31:17.296
• [86.402 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 09/13/24 13:31:17.303
  Sep 13 13:31:17.303: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename subpath @ 09/13/24 13:31:17.304
  E0913 13:31:17.311472      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:31:17.317
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:31:17.32
  STEP: Setting up data @ 09/13/24 13:31:17.322
  STEP: Creating pod pod-subpath-test-configmap-5gjs @ 09/13/24 13:31:17.334
  STEP: Creating a pod to test atomic-volume-subpath @ 09/13/24 13:31:17.334
  E0913 13:31:18.312465      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:31:19.313084      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:31:20.313176      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:31:21.318612      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:31:22.319334      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:31:23.319402      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:31:24.319855      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:31:25.319961      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:31:26.321363      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:31:27.322133      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:31:28.323034      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:31:29.323370      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:31:30.323974      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:31:31.324941      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:31:32.326692      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:31:33.326786      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:31:34.327621      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:31:35.327855      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:31:36.328100      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:31:37.328403      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:31:38.328545      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:31:39.328869      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:31:40.329800      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:31:41.330184      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/13/24 13:31:41.395
  Sep 13 13:31:41.398: INFO: Trying to get logs from node cncf-3 pod pod-subpath-test-configmap-5gjs container test-container-subpath-configmap-5gjs: <nil>
  STEP: delete the pod @ 09/13/24 13:31:41.403
  STEP: Deleting pod pod-subpath-test-configmap-5gjs @ 09/13/24 13:31:41.424
  Sep 13 13:31:41.424: INFO: Deleting pod "pod-subpath-test-configmap-5gjs" in namespace "subpath-3221"
  Sep 13 13:31:41.427: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-3221" for this suite. @ 09/13/24 13:31:41.43
• [24.140 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:450
  STEP: Creating a kubernetes client @ 09/13/24 13:31:41.443
  Sep 13 13:31:41.443: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename taint-multiple-pods @ 09/13/24 13:31:41.444
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:31:41.454
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:31:41.457
  Sep 13 13:31:41.463: INFO: Waiting up to 1m0s for all nodes to be ready
  E0913 13:31:42.330391      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:31:43.330664      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:31:44.330888      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:31:45.331384      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:31:46.331667      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:31:47.332272      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:31:48.333172      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:31:49.333245      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:31:50.333749      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:31:51.334265      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:31:52.334709      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:31:53.334790      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:31:54.335286      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:31:55.335553      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:31:56.335605      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:31:57.336184      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:31:58.336936      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:31:59.337056      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:32:00.337176      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:32:01.337441      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:32:02.338100      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:32:03.338304      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:32:04.338408      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:32:05.338596      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:32:06.338876      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:32:07.339222      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:32:08.340088      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:32:09.341022      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:32:10.341887      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:32:11.342126      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:32:12.342946      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:32:13.343257      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:32:14.343424      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:32:15.343719      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:32:16.344631      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:32:17.345388      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:32:18.346192      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:32:19.346471      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:32:20.347493      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:32:21.347560      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:32:22.347697      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:32:23.348464      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:32:24.348999      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:32:25.349227      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:32:26.349368      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:32:27.350283      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:32:28.350434      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:32:29.350758      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:32:30.355868      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:32:31.356959      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:32:32.357250      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:32:33.357360      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:32:34.357484      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:32:35.358233      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:32:36.358261      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:32:37.358382      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:32:38.358461      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:32:39.359148      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:32:40.359930      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:32:41.360919      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:32:41.463: INFO: Waiting for terminating namespaces to be deleted...
  Sep 13 13:32:41.467: INFO: Starting informer...
  STEP: Starting pods... @ 09/13/24 13:32:41.467
  Sep 13 13:32:41.683: INFO: Pod1 is running on cncf-3. Tainting Node
  E0913 13:32:42.361843      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:32:43.362575      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:32:43.901: INFO: Pod2 is running on cncf-3. Tainting Node
  STEP: Trying to apply a taint on the Node @ 09/13/24 13:32:43.901
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 09/13/24 13:32:43.915
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 09/13/24 13:32:43.92
  E0913 13:32:44.363184      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:32:45.363333      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:32:46.364705      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:32:47.365466      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:32:48.366259      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:32:49.367006      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:32:49.440: INFO: Noticed Pod "taint-eviction-b1" gets evicted.
  E0913 13:32:50.367415      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:32:51.367954      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:32:52.368438      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:32:53.368745      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:32:54.369294      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:32:55.369389      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:32:56.369776      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:32:57.370598      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:32:58.370760      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:32:59.370844      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:33:00.371252      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:33:01.371470      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:33:02.371812      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:33:03.372007      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:33:04.372080      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:33:05.372185      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:33:06.372600      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:33:07.373399      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:33:08.373485      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:33:09.374563      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:33:09.517: INFO: Noticed Pod "taint-eviction-b2" gets evicted.
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 09/13/24 13:33:09.535
  Sep 13 13:33:09.543: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-multiple-pods-1006" for this suite. @ 09/13/24 13:33:09.56
• [88.149 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:254
  STEP: Creating a kubernetes client @ 09/13/24 13:33:09.593
  Sep 13 13:33:09.593: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename namespaces @ 09/13/24 13:33:09.595
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:33:09.641
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:33:09.644
  STEP: Creating a test namespace @ 09/13/24 13:33:09.646
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:33:09.683
  STEP: Creating a service in the namespace @ 09/13/24 13:33:09.689
  STEP: Deleting the namespace @ 09/13/24 13:33:09.713
  STEP: Waiting for the namespace to be removed. @ 09/13/24 13:33:09.728
  E0913 13:33:10.375620      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:33:11.376329      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:33:12.377108      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:33:13.377400      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:33:14.377709      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:33:15.377847      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 09/13/24 13:33:15.732
  STEP: Verifying there is no service in the namespace @ 09/13/24 13:33:15.743
  Sep 13 13:33:15.748: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-2004" for this suite. @ 09/13/24 13:33:15.751
  STEP: Destroying namespace "nsdeletetest-3950" for this suite. @ 09/13/24 13:33:15.756
  Sep 13 13:33:15.757: INFO: Namespace nsdeletetest-3950 was already deleted
  STEP: Destroying namespace "nsdeletetest-6317" for this suite. @ 09/13/24 13:33:15.758
• [6.170 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:200
  STEP: Creating a kubernetes client @ 09/13/24 13:33:15.763
  Sep 13 13:33:15.763: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename emptydir @ 09/13/24 13:33:15.764
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:33:15.773
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:33:15.776
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 09/13/24 13:33:15.779
  E0913 13:33:16.378753      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:33:17.379473      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:33:18.379932      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:33:19.380956      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/13/24 13:33:19.796
  Sep 13 13:33:19.799: INFO: Trying to get logs from node cncf-3 pod pod-8163a69f-a947-4808-a09e-abecd2fc54be container test-container: <nil>
  STEP: delete the pod @ 09/13/24 13:33:19.809
  Sep 13 13:33:19.835: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2450" for this suite. @ 09/13/24 13:33:19.839
• [4.082 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:169
  STEP: Creating a kubernetes client @ 09/13/24 13:33:19.845
  Sep 13 13:33:19.845: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 09/13/24 13:33:19.846
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:33:19.872
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:33:19.875
  STEP: create the container to handle the HTTPGet hook request. @ 09/13/24 13:33:19.881
  E0913 13:33:20.381284      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:33:21.381762      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 09/13/24 13:33:21.913
  E0913 13:33:22.382134      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:33:23.382268      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 09/13/24 13:33:23.935
  STEP: delete the pod with lifecycle hook @ 09/13/24 13:33:23.946
  E0913 13:33:24.382357      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:33:25.382574      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:33:25.962: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-6365" for this suite. @ 09/13/24 13:33:25.966
• [6.127 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] DNS should provide DNS for services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:137
  STEP: Creating a kubernetes client @ 09/13/24 13:33:25.973
  Sep 13 13:33:25.973: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename dns @ 09/13/24 13:33:25.975
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:33:25.995
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:33:25.998
  STEP: Creating a test headless service @ 09/13/24 13:33:26.001
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-939.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-939.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-939.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-939.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-939.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-939.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-939.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-939.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-939.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-939.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-939.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-939.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 65.41.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.41.65_udp@PTR;check="$$(dig +tcp +noall +answer +search 65.41.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.41.65_tcp@PTR;sleep 1; done
   @ 09/13/24 13:33:26.047
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-939.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-939.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-939.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-939.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-939.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-939.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-939.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-939.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-939.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-939.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-939.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-939.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 65.41.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.41.65_udp@PTR;check="$$(dig +tcp +noall +answer +search 65.41.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.41.65_tcp@PTR;sleep 1; done
   @ 09/13/24 13:33:26.048
  STEP: creating a pod to probe DNS @ 09/13/24 13:33:26.049
  STEP: submitting the pod to kubernetes @ 09/13/24 13:33:26.049
  E0913 13:33:26.383745      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:33:27.384236      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/13/24 13:33:28.081
  STEP: looking for the results for each expected name from probers @ 09/13/24 13:33:28.083
  Sep 13 13:33:28.088: INFO: Unable to read wheezy_udp@dns-test-service.dns-939.svc.cluster.local from pod dns-939/dns-test-6947d9f2-a29c-4c58-9b0b-e9ffbfa41312: the server could not find the requested resource (get pods dns-test-6947d9f2-a29c-4c58-9b0b-e9ffbfa41312)
  Sep 13 13:33:28.091: INFO: Unable to read wheezy_tcp@dns-test-service.dns-939.svc.cluster.local from pod dns-939/dns-test-6947d9f2-a29c-4c58-9b0b-e9ffbfa41312: the server could not find the requested resource (get pods dns-test-6947d9f2-a29c-4c58-9b0b-e9ffbfa41312)
  Sep 13 13:33:28.093: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-939.svc.cluster.local from pod dns-939/dns-test-6947d9f2-a29c-4c58-9b0b-e9ffbfa41312: the server could not find the requested resource (get pods dns-test-6947d9f2-a29c-4c58-9b0b-e9ffbfa41312)
  Sep 13 13:33:28.095: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-939.svc.cluster.local from pod dns-939/dns-test-6947d9f2-a29c-4c58-9b0b-e9ffbfa41312: the server could not find the requested resource (get pods dns-test-6947d9f2-a29c-4c58-9b0b-e9ffbfa41312)
  Sep 13 13:33:28.108: INFO: Unable to read jessie_udp@dns-test-service.dns-939.svc.cluster.local from pod dns-939/dns-test-6947d9f2-a29c-4c58-9b0b-e9ffbfa41312: the server could not find the requested resource (get pods dns-test-6947d9f2-a29c-4c58-9b0b-e9ffbfa41312)
  Sep 13 13:33:28.110: INFO: Unable to read jessie_tcp@dns-test-service.dns-939.svc.cluster.local from pod dns-939/dns-test-6947d9f2-a29c-4c58-9b0b-e9ffbfa41312: the server could not find the requested resource (get pods dns-test-6947d9f2-a29c-4c58-9b0b-e9ffbfa41312)
  Sep 13 13:33:28.112: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-939.svc.cluster.local from pod dns-939/dns-test-6947d9f2-a29c-4c58-9b0b-e9ffbfa41312: the server could not find the requested resource (get pods dns-test-6947d9f2-a29c-4c58-9b0b-e9ffbfa41312)
  Sep 13 13:33:28.115: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-939.svc.cluster.local from pod dns-939/dns-test-6947d9f2-a29c-4c58-9b0b-e9ffbfa41312: the server could not find the requested resource (get pods dns-test-6947d9f2-a29c-4c58-9b0b-e9ffbfa41312)
  Sep 13 13:33:28.128: INFO: Lookups using dns-939/dns-test-6947d9f2-a29c-4c58-9b0b-e9ffbfa41312 failed for: [wheezy_udp@dns-test-service.dns-939.svc.cluster.local wheezy_tcp@dns-test-service.dns-939.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-939.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-939.svc.cluster.local jessie_udp@dns-test-service.dns-939.svc.cluster.local jessie_tcp@dns-test-service.dns-939.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-939.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-939.svc.cluster.local]

  Sep 13 13:33:28.133: INFO: Pod client logs for webserver: 
  Sep 13 13:33:28.136: INFO: Pod client logs for querier: 
  Sep 13 13:33:28.139: INFO: Pod client logs for jessie-querier: 
  E0913 13:33:28.384970      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:33:29.385242      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:33:30.385926      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:33:31.386068      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:33:32.386663      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:33:33.127: INFO: DNS probes using dns-939/dns-test-6947d9f2-a29c-4c58-9b0b-e9ffbfa41312 succeeded

  STEP: deleting the pod @ 09/13/24 13:33:33.128
  STEP: deleting the test service @ 09/13/24 13:33:33.139
  STEP: deleting the test headless service @ 09/13/24 13:33:33.179
  Sep 13 13:33:33.192: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-939" for this suite. @ 09/13/24 13:33:33.198
• [7.231 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Lease lease API should be available [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lease.go:73
  STEP: Creating a kubernetes client @ 09/13/24 13:33:33.207
  Sep 13 13:33:33.207: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename lease-test @ 09/13/24 13:33:33.21
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:33:33.229
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:33:33.232
  Sep 13 13:33:33.288: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-1057" for this suite. @ 09/13/24 13:33:33.292
• [0.093 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:208
  STEP: Creating a kubernetes client @ 09/13/24 13:33:33.302
  Sep 13 13:33:33.302: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename endpointslice @ 09/13/24 13:33:33.304
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:33:33.317
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:33:33.32
  E0913 13:33:33.387424      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:33:34.388146      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:33:35.388299      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:33:36.389010      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:33:37.389434      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:33:38.389778      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: referencing a single matching pod @ 09/13/24 13:33:38.424
  E0913 13:33:39.390276      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:33:40.390434      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:33:41.390589      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:33:42.391206      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:33:43.391298      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: referencing matching pods with named port @ 09/13/24 13:33:43.432
  E0913 13:33:44.391506      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:33:45.391886      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:33:46.392144      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:33:47.392559      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:33:48.392940      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 09/13/24 13:33:48.438
  E0913 13:33:49.393047      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:33:50.393352      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:33:51.394103      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:33:52.394443      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:33:53.394792      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: recreating EndpointSlices after they've been deleted @ 09/13/24 13:33:53.446
  Sep 13 13:33:53.461: INFO: EndpointSlice for Service endpointslice-2694/example-named-port not found
  E0913 13:33:54.395087      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:33:55.395474      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:33:56.395544      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:33:57.396625      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:33:58.397606      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:33:59.398297      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:34:00.398708      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:34:01.399020      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:34:02.399486      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:34:03.400328      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:34:03.468: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-2694" for this suite. @ 09/13/24 13:34:03.472
• [30.175 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 09/13/24 13:34:03.477
  Sep 13 13:34:03.478: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename secrets @ 09/13/24 13:34:03.478
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:34:03.497
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:34:03.499
  STEP: Creating secret with name secret-test-78bcf769-ef78-4ec2-9a13-fc951afbdd46 @ 09/13/24 13:34:03.501
  STEP: Creating a pod to test consume secrets @ 09/13/24 13:34:03.506
  E0913 13:34:04.401429      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:34:05.401582      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:34:06.401918      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:34:07.402264      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/13/24 13:34:07.536
  Sep 13 13:34:07.539: INFO: Trying to get logs from node cncf-3 pod pod-secrets-16718fe7-fa29-4bdd-9928-b4ca167722d8 container secret-volume-test: <nil>
  STEP: delete the pod @ 09/13/24 13:34:07.544
  Sep 13 13:34:07.557: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3649" for this suite. @ 09/13/24 13:34:07.564
• [4.092 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:119
  STEP: Creating a kubernetes client @ 09/13/24 13:34:07.57
  Sep 13 13:34:07.570: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename webhook @ 09/13/24 13:34:07.571
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:34:07.597
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:34:07.6
  STEP: Setting up server cert @ 09/13/24 13:34:07.648
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/13/24 13:34:07.966
  STEP: Deploying the webhook pod @ 09/13/24 13:34:07.973
  STEP: Wait for the deployment to be ready @ 09/13/24 13:34:07.999
  Sep 13 13:34:08.006: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0913 13:34:08.402365      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:34:09.403073      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/13/24 13:34:10.015
  STEP: Verifying the service has paired with the endpoint @ 09/13/24 13:34:10.03
  E0913 13:34:10.403158      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:34:11.031: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 09/13/24 13:34:11.036
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 09/13/24 13:34:11.037
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 09/13/24 13:34:11.038
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 09/13/24 13:34:11.038
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 09/13/24 13:34:11.038
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 09/13/24 13:34:11.038
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 09/13/24 13:34:11.039
  Sep 13 13:34:11.085: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6674" for this suite. @ 09/13/24 13:34:11.089
  STEP: Destroying namespace "webhook-markers-8001" for this suite. @ 09/13/24 13:34:11.097
• [3.536 seconds]
------------------------------
S
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 09/13/24 13:34:11.106
  Sep 13 13:34:11.106: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename secrets @ 09/13/24 13:34:11.108
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:34:11.129
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:34:11.132
  STEP: Creating secret with name secret-test-map-2bfede78-6716-4c77-91ba-e3511dddb36b @ 09/13/24 13:34:11.134
  STEP: Creating a pod to test consume secrets @ 09/13/24 13:34:11.139
  E0913 13:34:11.403759      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:34:12.404548      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:34:13.405549      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:34:14.406036      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/13/24 13:34:15.159
  Sep 13 13:34:15.161: INFO: Trying to get logs from node cncf-3 pod pod-secrets-46f06a14-d4a1-48ed-bddc-b0292fc1e9e9 container secret-volume-test: <nil>
  STEP: delete the pod @ 09/13/24 13:34:15.166
  Sep 13 13:34:15.186: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3741" for this suite. @ 09/13/24 13:34:15.189
• [4.093 seconds]
------------------------------
SSSSSS
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:531
  STEP: Creating a kubernetes client @ 09/13/24 13:34:15.199
  Sep 13 13:34:15.199: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename svcaccounts @ 09/13/24 13:34:15.2
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:34:15.223
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:34:15.226
  Sep 13 13:34:15.240: INFO: created pod
  E0913 13:34:15.406185      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:34:16.406365      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:34:17.407170      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:34:18.407329      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/13/24 13:34:19.251
  E0913 13:34:19.408231      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:34:20.408479      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:34:21.408654      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:34:22.409447      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:34:23.409805      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:34:24.410192      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:34:25.410437      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:34:26.410544      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:34:27.411266      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:34:28.411494      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:34:29.411676      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:34:30.411835      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:34:31.411949      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:34:32.412528      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:34:33.412935      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:34:34.413181      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:34:35.413482      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:34:36.413694      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:34:37.414145      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:34:38.414451      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:34:39.414581      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:34:40.415180      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:34:41.415314      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:34:42.415463      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:34:43.415664      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:34:44.415935      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:34:45.416204      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:34:46.416512      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:34:47.416919      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:34:48.416998      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:34:49.251: INFO: polling logs
  Sep 13 13:34:49.258: INFO: Pod logs: 
  I0913 13:34:16.025414       1 log.go:245] OK: Got token
  I0913 13:34:16.025464       1 log.go:245] validating with in-cluster discovery
  I0913 13:34:16.025668       1 log.go:245] OK: got issuer https://kubernetes.default.svc.cluster.local
  I0913 13:34:16.025690       1 log.go:245] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-6384:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc000012f70), NotBefore:(*jwt.NumericDate)(0xc000013058), IssuedAt:(*jwt.NumericDate)(0xc000012f80), ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-6384", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"c8cb790c-31b6-4cdb-bd30-6fe1895010d2"}}}
  I0913 13:34:16.074972       1 log.go:245] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc.cluster.local
  I0913 13:34:16.079672       1 log.go:245] OK: Validated signature on JWT
  I0913 13:34:16.079763       1 log.go:245] OK: Got valid claims from token!
  I0913 13:34:16.079801       1 log.go:245] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-6384:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc000522cf0), NotBefore:(*jwt.NumericDate)(0xc000522d18), IssuedAt:(*jwt.NumericDate)(0xc000522cf8), ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-6384", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"c8cb790c-31b6-4cdb-bd30-6fe1895010d2"}}}

  Sep 13 13:34:49.258: INFO: completed pod
  Sep 13 13:34:49.265: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-6384" for this suite. @ 09/13/24 13:34:49.269
• [34.077 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:962
  STEP: Creating a kubernetes client @ 09/13/24 13:34:49.276
  Sep 13 13:34:49.276: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename statefulset @ 09/13/24 13:34:49.277
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:34:49.292
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:34:49.294
  STEP: Creating service test in namespace statefulset-9937 @ 09/13/24 13:34:49.302
  Sep 13 13:34:49.330: INFO: Found 0 stateful pods, waiting for 1
  E0913 13:34:49.417624      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:34:50.418187      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:34:51.418738      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:34:52.419159      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:34:53.419377      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:34:54.419972      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:34:55.420996      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:34:56.421236      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:34:57.421379      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:34:58.421764      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:34:59.332: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 09/13/24 13:34:59.336
  W0913 13:34:59.345363      23 warnings.go:70] unknown field "spec.template.spec.TerminationGracePeriodSeconds"
  Sep 13 13:34:59.352: INFO: Found 1 stateful pods, waiting for 2
  E0913 13:34:59.422602      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:35:00.423091      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:35:01.423328      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:35:02.424333      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:35:03.425030      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:35:04.425270      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:35:05.425509      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:35:06.425885      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:35:07.426604      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:35:08.426808      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:35:09.351: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Sep 13 13:35:09.351: INFO: Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 09/13/24 13:35:09.355
  STEP: Delete all of the StatefulSets @ 09/13/24 13:35:09.358
  STEP: Verify that StatefulSets have been deleted @ 09/13/24 13:35:09.367
  Sep 13 13:35:09.370: INFO: Deleting all statefulset in ns statefulset-9937
  Sep 13 13:35:09.393: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-9937" for this suite. @ 09/13/24 13:35:09.397
• [20.141 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:228
  STEP: Creating a kubernetes client @ 09/13/24 13:35:09.421
  Sep 13 13:35:09.421: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename var-expansion @ 09/13/24 13:35:09.423
  E0913 13:35:09.427369      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:35:09.436
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:35:09.438
  STEP: creating the pod with failed condition @ 09/13/24 13:35:09.443
  E0913 13:35:10.427599      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:35:11.427699      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:35:12.427947      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:35:13.428935      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:35:14.429577      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:35:15.429932      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:35:16.430785      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:35:17.431469      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:35:18.431582      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:35:19.432246      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:35:20.432588      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:35:21.432716      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:35:22.433128      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:35:23.433385      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:35:24.434169      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:35:25.435936      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:35:26.436360      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:35:27.437563      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:35:28.437832      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:35:29.437970      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:35:30.438087      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:35:31.438220      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:35:32.438377      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:35:33.438743      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:35:34.438930      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:35:35.439224      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:35:36.440041      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:35:37.440902      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:35:38.441250      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:35:39.441900      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:35:40.442079      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:35:41.442263      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:35:42.443243      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:35:43.443284      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:35:44.443824      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:35:45.444010      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:35:46.444981      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:35:47.445339      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:35:48.445494      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:35:49.445789      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:35:50.445889      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:35:51.446426      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:35:52.447876      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:35:53.448966      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:35:54.449298      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:35:55.449557      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:35:56.450147      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:35:57.451588      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:35:58.452661      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:35:59.452883      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:36:00.452930      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:36:01.453069      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:36:02.453183      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:36:03.453299      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:36:04.453532      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:36:05.454276      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:36:06.454936      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:36:07.455986      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:36:08.456645      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:36:09.456262      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:36:10.456611      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:36:11.457134      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:36:12.457641      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:36:13.457813      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:36:14.457839      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:36:15.457960      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:36:16.458175      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:36:17.458663      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:36:18.458975      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:36:19.459842      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:36:20.460696      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:36:21.460880      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:36:22.461875      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:36:23.461957      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:36:24.462899      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:36:25.463018      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:36:26.463420      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:36:27.463658      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:36:28.464189      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:36:29.464936      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:36:30.465515      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:36:31.465807      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:36:32.466528      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:36:33.466791      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:36:34.466930      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:36:35.467099      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:36:36.467817      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:36:37.468137      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:36:38.468993      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:36:39.469246      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:36:40.469269      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:36:41.469390      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:36:42.469680      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:36:43.469860      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:36:44.470021      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:36:45.470134      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:36:46.470672      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:36:47.471552      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:36:48.471613      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:36:49.471931      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:36:50.472937      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:36:51.473511      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:36:52.474440      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:36:53.474796      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:36:54.474950      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:36:55.475001      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:36:56.475570      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:36:57.476280      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:36:58.476441      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:36:59.476606      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:37:00.476808      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:37:01.477165      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:37:02.478000      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:37:03.478265      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:37:04.478517      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:37:05.478633      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:37:06.478713      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:37:07.479675      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:37:08.480219      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: updating the pod @ 09/13/24 13:37:09.45
  E0913 13:37:09.480552      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:37:09.974: INFO: Successfully updated pod "var-expansion-2c1e58e6-d75e-47b7-938c-ebc9b8b66452"
  STEP: waiting for pod running @ 09/13/24 13:37:09.974
  E0913 13:37:10.481004      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:37:11.481479      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 09/13/24 13:37:11.981
  Sep 13 13:37:11.981: INFO: Deleting pod "var-expansion-2c1e58e6-d75e-47b7-938c-ebc9b8b66452" in namespace "var-expansion-1836"
  Sep 13 13:37:11.996: INFO: Wait up to 5m0s for pod "var-expansion-2c1e58e6-d75e-47b7-938c-ebc9b8b66452" to be fully deleted
  E0913 13:37:12.482440      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:37:13.482602      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:37:14.483194      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:37:15.483583      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:37:16.483773      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:37:17.484799      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:37:18.485013      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:37:19.485163      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:37:20.485209      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:37:21.485927      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:37:22.486929      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:37:23.487109      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:37:24.487800      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:37:25.488141      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:37:26.489107      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:37:27.489444      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:37:28.489389      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:37:29.490000      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:37:30.490804      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:37:31.491182      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:37:32.491490      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:37:33.491875      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:37:34.492776      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:37:35.493107      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:37:36.493377      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:37:37.494523      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:37:38.494880      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:37:39.495219      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:37:40.495599      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:37:41.496296      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:37:42.497006      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:37:43.497108      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:37:44.067: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-1836" for this suite. @ 09/13/24 13:37:44.071
• [154.660 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should apply changes to a pv/pvc status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:669
  STEP: Creating a kubernetes client @ 09/13/24 13:37:44.081
  Sep 13 13:37:44.081: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename pv @ 09/13/24 13:37:44.082
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:37:44.092
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:37:44.094
  STEP: Creating initial PV and PVC @ 09/13/24 13:37:44.097
  Sep 13 13:37:44.098: INFO: Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-5853" @ 09/13/24 13:37:44.122
  STEP: Listing PVCs in namespace "pv-5853" @ 09/13/24 13:37:44.131
  STEP: Reading "pvc-xl54s" Status @ 09/13/24 13:37:44.133
  STEP: Reading "pv-5853-9qk9x" Status @ 09/13/24 13:37:44.136
  STEP: Patching "pvc-xl54s" Status @ 09/13/24 13:37:44.139
  STEP: Patching "pv-5853-9qk9x" Status @ 09/13/24 13:37:44.15
  STEP: Updating "pvc-xl54s" Status @ 09/13/24 13:37:44.154
  STEP: Updating "pv-5853-9qk9x" Status @ 09/13/24 13:37:44.17
  Sep 13 13:37:44.182: INFO: AfterEach: deleting 1 PVCs and 1 PVs...
  Sep 13 13:37:44.182: INFO: Deleting PersistentVolumeClaim "pvc-xl54s"
  Sep 13 13:37:44.186: INFO: Deleting PersistentVolume "pv-5853-9qk9x"
  Sep 13 13:37:44.193: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-5853" for this suite. @ 09/13/24 13:37:44.199
• [0.122 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:78
  STEP: Creating a kubernetes client @ 09/13/24 13:37:44.209
  Sep 13 13:37:44.209: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename resourcequota @ 09/13/24 13:37:44.21
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:37:44.227
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:37:44.229
  STEP: Counting existing ResourceQuota @ 09/13/24 13:37:44.231
  E0913 13:37:44.497951      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:37:45.498127      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:37:46.498659      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:37:47.499297      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:37:48.499927      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 09/13/24 13:37:49.234
  STEP: Ensuring resource quota status is calculated @ 09/13/24 13:37:49.241
  E0913 13:37:49.500929      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:37:50.501116      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:37:51.246: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6897" for this suite. @ 09/13/24 13:37:51.25
• [7.046 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:251
  STEP: Creating a kubernetes client @ 09/13/24 13:37:51.257
  Sep 13 13:37:51.257: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename downward-api @ 09/13/24 13:37:51.259
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:37:51.275
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:37:51.277
  STEP: Creating a pod to test downward API volume plugin @ 09/13/24 13:37:51.279
  E0913 13:37:51.502137      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:37:52.502807      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:37:53.503332      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:37:54.503908      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/13/24 13:37:55.303
  Sep 13 13:37:55.305: INFO: Trying to get logs from node cncf-3 pod downwardapi-volume-4c6c4e48-9389-40eb-aafe-f6464d8ca4ec container client-container: <nil>
  STEP: delete the pod @ 09/13/24 13:37:55.314
  Sep 13 13:37:55.338: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8776" for this suite. @ 09/13/24 13:37:55.344
• [4.105 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1863
  STEP: Creating a kubernetes client @ 09/13/24 13:37:55.363
  Sep 13 13:37:55.363: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename kubectl @ 09/13/24 13:37:55.364
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:37:55.418
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:37:55.421
  STEP: Starting the proxy @ 09/13/24 13:37:55.429
  Sep 13 13:37:55.430: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=kubectl-1863 proxy --unix-socket=/tmp/kubectl-proxy-unix3353622935/test'
  STEP: retrieving proxy /api/ output @ 09/13/24 13:37:55.482
  Sep 13 13:37:55.483: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1863" for this suite. @ 09/13/24 13:37:55.491
• [0.133 seconds]
------------------------------
S
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:125
  STEP: Creating a kubernetes client @ 09/13/24 13:37:55.497
  Sep 13 13:37:55.497: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename sysctl @ 09/13/24 13:37:55.499
  E0913 13:37:55.503963      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:37:55.527
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:37:55.53
  STEP: Creating a pod with one valid and two invalid sysctls @ 09/13/24 13:37:55.533
  Sep 13 13:37:55.536: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-4490" for this suite. @ 09/13/24 13:37:55.539
• [0.050 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:67
  STEP: Creating a kubernetes client @ 09/13/24 13:37:55.547
  Sep 13 13:37:55.547: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename emptydir-wrapper @ 09/13/24 13:37:55.55
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:37:55.583
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:37:55.586
  E0913 13:37:56.504211      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:37:57.504720      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Cleaning up the secret @ 09/13/24 13:37:57.62
  STEP: Cleaning up the configmap @ 09/13/24 13:37:57.629
  STEP: Cleaning up the pod @ 09/13/24 13:37:57.634
  Sep 13 13:37:57.647: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-2527" for this suite. @ 09/13/24 13:37:57.651
• [2.111 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 09/13/24 13:37:57.659
  Sep 13 13:37:57.659: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename pods @ 09/13/24 13:37:57.66
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:37:57.677
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:37:57.681
  Sep 13 13:37:57.683: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: creating the pod @ 09/13/24 13:37:57.684
  STEP: submitting the pod to kubernetes @ 09/13/24 13:37:57.684
  E0913 13:37:58.504857      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:37:59.506143      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:37:59.771: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6320" for this suite. @ 09/13/24 13:37:59.775
• [2.129 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 09/13/24 13:37:59.787
  Sep 13 13:37:59.787: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename deployment @ 09/13/24 13:37:59.788
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:37:59.811
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:37:59.813
  STEP: creating a Deployment @ 09/13/24 13:37:59.82
  STEP: waiting for Deployment to be created @ 09/13/24 13:37:59.825
  STEP: waiting for all Replicas to be Ready @ 09/13/24 13:37:59.827
  Sep 13 13:37:59.829: INFO: observed Deployment test-deployment in namespace deployment-5129 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Sep 13 13:37:59.829: INFO: observed Deployment test-deployment in namespace deployment-5129 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Sep 13 13:37:59.842: INFO: observed Deployment test-deployment in namespace deployment-5129 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Sep 13 13:37:59.842: INFO: observed Deployment test-deployment in namespace deployment-5129 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Sep 13 13:37:59.864: INFO: observed Deployment test-deployment in namespace deployment-5129 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Sep 13 13:37:59.865: INFO: observed Deployment test-deployment in namespace deployment-5129 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Sep 13 13:37:59.906: INFO: observed Deployment test-deployment in namespace deployment-5129 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Sep 13 13:37:59.906: INFO: observed Deployment test-deployment in namespace deployment-5129 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  E0913 13:38:00.506248      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:38:01.480: INFO: observed Deployment test-deployment in namespace deployment-5129 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  Sep 13 13:38:01.480: INFO: observed Deployment test-deployment in namespace deployment-5129 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  E0913 13:38:01.506492      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:38:01.526: INFO: observed Deployment test-deployment in namespace deployment-5129 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 09/13/24 13:38:01.526
  Sep 13 13:38:01.534: INFO: observed event type ADDED
  STEP: waiting for Replicas to scale @ 09/13/24 13:38:01.534
  Sep 13 13:38:01.536: INFO: observed Deployment test-deployment in namespace deployment-5129 with ReadyReplicas 0
  Sep 13 13:38:01.536: INFO: observed Deployment test-deployment in namespace deployment-5129 with ReadyReplicas 0
  Sep 13 13:38:01.536: INFO: observed Deployment test-deployment in namespace deployment-5129 with ReadyReplicas 0
  Sep 13 13:38:01.536: INFO: observed Deployment test-deployment in namespace deployment-5129 with ReadyReplicas 0
  Sep 13 13:38:01.536: INFO: observed Deployment test-deployment in namespace deployment-5129 with ReadyReplicas 0
  Sep 13 13:38:01.536: INFO: observed Deployment test-deployment in namespace deployment-5129 with ReadyReplicas 0
  Sep 13 13:38:01.536: INFO: observed Deployment test-deployment in namespace deployment-5129 with ReadyReplicas 0
  Sep 13 13:38:01.536: INFO: observed Deployment test-deployment in namespace deployment-5129 with ReadyReplicas 0
  Sep 13 13:38:01.537: INFO: observed Deployment test-deployment in namespace deployment-5129 with ReadyReplicas 1
  Sep 13 13:38:01.537: INFO: observed Deployment test-deployment in namespace deployment-5129 with ReadyReplicas 1
  Sep 13 13:38:01.537: INFO: observed Deployment test-deployment in namespace deployment-5129 with ReadyReplicas 2
  Sep 13 13:38:01.537: INFO: observed Deployment test-deployment in namespace deployment-5129 with ReadyReplicas 2
  Sep 13 13:38:01.538: INFO: observed Deployment test-deployment in namespace deployment-5129 with ReadyReplicas 2
  Sep 13 13:38:01.538: INFO: observed Deployment test-deployment in namespace deployment-5129 with ReadyReplicas 2
  Sep 13 13:38:01.554: INFO: observed Deployment test-deployment in namespace deployment-5129 with ReadyReplicas 2
  Sep 13 13:38:01.554: INFO: observed Deployment test-deployment in namespace deployment-5129 with ReadyReplicas 2
  Sep 13 13:38:01.576: INFO: observed Deployment test-deployment in namespace deployment-5129 with ReadyReplicas 2
  Sep 13 13:38:01.576: INFO: observed Deployment test-deployment in namespace deployment-5129 with ReadyReplicas 2
  Sep 13 13:38:01.610: INFO: observed Deployment test-deployment in namespace deployment-5129 with ReadyReplicas 1
  Sep 13 13:38:01.610: INFO: observed Deployment test-deployment in namespace deployment-5129 with ReadyReplicas 1
  Sep 13 13:38:01.617: INFO: observed Deployment test-deployment in namespace deployment-5129 with ReadyReplicas 1
  Sep 13 13:38:01.617: INFO: observed Deployment test-deployment in namespace deployment-5129 with ReadyReplicas 1
  Sep 13 13:38:02.505: INFO: observed Deployment test-deployment in namespace deployment-5129 with ReadyReplicas 2
  Sep 13 13:38:02.505: INFO: observed Deployment test-deployment in namespace deployment-5129 with ReadyReplicas 2
  E0913 13:38:02.507557      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:38:02.533: INFO: observed Deployment test-deployment in namespace deployment-5129 with ReadyReplicas 1
  STEP: listing Deployments @ 09/13/24 13:38:02.533
  Sep 13 13:38:02.540: INFO: Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 09/13/24 13:38:02.54
  Sep 13 13:38:02.565: INFO: observed Deployment test-deployment in namespace deployment-5129 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 09/13/24 13:38:02.566
  Sep 13 13:38:02.572: INFO: observed Deployment test-deployment in namespace deployment-5129 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Sep 13 13:38:02.580: INFO: observed Deployment test-deployment in namespace deployment-5129 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Sep 13 13:38:02.611: INFO: observed Deployment test-deployment in namespace deployment-5129 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Sep 13 13:38:02.633: INFO: observed Deployment test-deployment in namespace deployment-5129 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Sep 13 13:38:02.650: INFO: observed Deployment test-deployment in namespace deployment-5129 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  E0913 13:38:03.507863      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:38:03.523: INFO: observed Deployment test-deployment in namespace deployment-5129 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Sep 13 13:38:03.575: INFO: observed Deployment test-deployment in namespace deployment-5129 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  E0913 13:38:04.508199      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:38:04.559: INFO: observed Deployment test-deployment in namespace deployment-5129 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 09/13/24 13:38:04.603
  STEP: fetching the DeploymentStatus @ 09/13/24 13:38:04.627
  Sep 13 13:38:04.631: INFO: observed Deployment test-deployment in namespace deployment-5129 with ReadyReplicas 1
  Sep 13 13:38:04.631: INFO: observed Deployment test-deployment in namespace deployment-5129 with ReadyReplicas 1
  Sep 13 13:38:04.631: INFO: observed Deployment test-deployment in namespace deployment-5129 with ReadyReplicas 1
  Sep 13 13:38:04.631: INFO: observed Deployment test-deployment in namespace deployment-5129 with ReadyReplicas 1
  Sep 13 13:38:04.632: INFO: observed Deployment test-deployment in namespace deployment-5129 with ReadyReplicas 1
  Sep 13 13:38:04.632: INFO: observed Deployment test-deployment in namespace deployment-5129 with ReadyReplicas 2
  Sep 13 13:38:04.632: INFO: observed Deployment test-deployment in namespace deployment-5129 with ReadyReplicas 2
  Sep 13 13:38:04.632: INFO: observed Deployment test-deployment in namespace deployment-5129 with ReadyReplicas 3
  STEP: deleting the Deployment @ 09/13/24 13:38:04.632
  Sep 13 13:38:04.641: INFO: observed event type MODIFIED
  Sep 13 13:38:04.641: INFO: observed event type MODIFIED
  Sep 13 13:38:04.641: INFO: observed event type MODIFIED
  Sep 13 13:38:04.642: INFO: observed event type MODIFIED
  Sep 13 13:38:04.642: INFO: observed event type MODIFIED
  Sep 13 13:38:04.642: INFO: observed event type MODIFIED
  Sep 13 13:38:04.643: INFO: observed event type MODIFIED
  Sep 13 13:38:04.643: INFO: observed event type MODIFIED
  Sep 13 13:38:04.643: INFO: observed event type MODIFIED
  Sep 13 13:38:04.643: INFO: observed event type MODIFIED
  Sep 13 13:38:04.643: INFO: observed event type MODIFIED
  Sep 13 13:38:04.657: INFO: Log out all the ReplicaSets if there is no deployment created
  Sep 13 13:38:04.658: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-5129" for this suite. @ 09/13/24 13:38:04.662
• [4.903 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:442
  STEP: Creating a kubernetes client @ 09/13/24 13:38:04.691
  Sep 13 13:38:04.691: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/13/24 13:38:04.692
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:38:04.704
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:38:04.707
  STEP: set up a multi version CRD @ 09/13/24 13:38:04.712
  Sep 13 13:38:04.713: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  E0913 13:38:05.509008      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:38:06.509344      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:38:07.509545      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:38:08.510198      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: mark a version not serverd @ 09/13/24 13:38:08.943
  STEP: check the unserved version gets removed @ 09/13/24 13:38:08.964
  E0913 13:38:09.511379      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check the other version is not changed @ 09/13/24 13:38:10.154
  E0913 13:38:10.511736      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:38:11.512471      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:38:12.519737      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:38:13.448: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-2022" for this suite. @ 09/13/24 13:38:13.455
• [8.771 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:332
  STEP: Creating a kubernetes client @ 09/13/24 13:38:13.463
  Sep 13 13:38:13.463: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename statefulset @ 09/13/24 13:38:13.467
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:38:13.483
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:38:13.486
  STEP: Creating service test in namespace statefulset-5384 @ 09/13/24 13:38:13.49
  STEP: Creating a new StatefulSet @ 09/13/24 13:38:13.497
  Sep 13 13:38:13.507: INFO: Found 0 stateful pods, waiting for 3
  E0913 13:38:13.520119      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:38:14.520300      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:38:15.520372      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:38:16.520717      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:38:17.521341      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:38:18.521745      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:38:19.521907      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:38:20.522453      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:38:21.523367      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:38:22.524023      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:38:23.508: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Sep 13 13:38:23.508: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Sep 13 13:38:23.508: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 09/13/24 13:38:23.514
  E0913 13:38:23.525215      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:38:23.539: INFO: Updating stateful set ss2
  STEP: Creating a new revision @ 09/13/24 13:38:23.539
  E0913 13:38:24.525793      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:38:25.526068      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:38:26.526318      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:38:27.527496      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:38:28.527889      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:38:29.529030      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:38:30.529278      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:38:31.529671      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:38:32.530096      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:38:33.530312      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Not applying an update when the partition is greater than the number of replicas @ 09/13/24 13:38:33.552
  STEP: Performing a canary update @ 09/13/24 13:38:33.552
  Sep 13 13:38:33.576: INFO: Updating stateful set ss2
  Sep 13 13:38:33.587: INFO: Waiting for Pod statefulset-5384/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0913 13:38:34.531236      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:38:35.531450      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:38:36.531929      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:38:37.532218      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:38:38.532798      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:38:39.533242      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:38:40.533291      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:38:41.533361      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:38:42.534012      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:38:43.534095      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Restoring Pods to the correct revision when they are deleted @ 09/13/24 13:38:43.582
  Sep 13 13:38:43.640: INFO: Found 1 stateful pods, waiting for 3
  E0913 13:38:44.534195      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:38:45.534618      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:38:46.534568      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:38:47.535100      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:38:48.535484      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:38:49.535908      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:38:50.536042      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:38:51.536524      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:38:52.537510      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:38:53.537783      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:38:53.634: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Sep 13 13:38:53.634: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Sep 13 13:38:53.634: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 09/13/24 13:38:53.638
  Sep 13 13:38:53.657: INFO: Updating stateful set ss2
  Sep 13 13:38:53.670: INFO: Waiting for Pod statefulset-5384/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0913 13:38:54.537926      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:38:55.538151      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:38:56.538144      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:38:57.538359      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:38:58.538757      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:38:59.539057      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:39:00.539563      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:39:01.540177      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:39:02.540857      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:39:03.541392      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:39:03.719: INFO: Updating stateful set ss2
  Sep 13 13:39:03.729: INFO: Waiting for StatefulSet statefulset-5384/ss2 to complete update
  Sep 13 13:39:03.729: INFO: Waiting for Pod statefulset-5384/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0913 13:39:04.542205      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:39:05.542381      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:39:06.543774      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:39:07.544783      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:39:08.544914      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:39:09.545148      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:39:10.545335      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:39:11.545819      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:39:12.545944      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:39:13.546107      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:39:13.727: INFO: Deleting all statefulset in ns statefulset-5384
  Sep 13 13:39:13.729: INFO: Scaling statefulset ss2 to 0
  E0913 13:39:14.547180      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:39:15.547690      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:39:16.547936      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:39:17.547974      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:39:18.548292      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:39:19.548971      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:39:20.549424      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:39:21.549686      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:39:22.550593      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:39:23.550689      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:39:23.742: INFO: Waiting for statefulset status.replicas updated to 0
  Sep 13 13:39:23.744: INFO: Deleting statefulset ss2
  Sep 13 13:39:23.759: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-5384" for this suite. @ 09/13/24 13:39:23.778
• [70.320 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:332
  STEP: Creating a kubernetes client @ 09/13/24 13:39:23.785
  Sep 13 13:39:23.785: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename webhook @ 09/13/24 13:39:23.786
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:39:23.804
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:39:23.806
  STEP: Setting up server cert @ 09/13/24 13:39:23.826
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/13/24 13:39:24.163
  STEP: Deploying the webhook pod @ 09/13/24 13:39:24.172
  STEP: Wait for the deployment to be ready @ 09/13/24 13:39:24.184
  Sep 13 13:39:24.196: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0913 13:39:24.551360      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:39:25.551752      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/13/24 13:39:26.206
  STEP: Verifying the service has paired with the endpoint @ 09/13/24 13:39:26.221
  E0913 13:39:26.551852      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:39:27.221: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Sep 13 13:39:27.227: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  E0913 13:39:27.551949      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-7808-crds.webhook.example.com via the AdmissionRegistration API @ 09/13/24 13:39:27.746
  STEP: Creating a custom resource that should be mutated by the webhook @ 09/13/24 13:39:27.766
  E0913 13:39:28.552126      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:39:29.552447      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:39:30.394: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-610" for this suite. @ 09/13/24 13:39:30.397
  STEP: Destroying namespace "webhook-markers-4860" for this suite. @ 09/13/24 13:39:30.402
• [6.626 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:714
  STEP: Creating a kubernetes client @ 09/13/24 13:39:30.41
  Sep 13 13:39:30.410: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename gc @ 09/13/24 13:39:30.411
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:39:30.427
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:39:30.429
  STEP: create the rc1 @ 09/13/24 13:39:30.435
  STEP: create the rc2 @ 09/13/24 13:39:30.44
  E0913 13:39:30.552703      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:39:31.557205      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:39:32.555010      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:39:33.555303      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:39:34.555401      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:39:35.556225      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 09/13/24 13:39:36.449
  E0913 13:39:36.556972      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc simpletest-rc-to-be-deleted @ 09/13/24 13:39:36.993
  STEP: wait for the rc to be deleted @ 09/13/24 13:39:37.004
  E0913 13:39:37.557585      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:39:38.557897      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:39:39.558181      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:39:40.558278      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:39:41.558694      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:39:42.027: INFO: 100 pods remaining
  Sep 13 13:39:42.027: INFO: 69 pods has nil DeletionTimestamp
  Sep 13 13:39:42.027: INFO: 
  E0913 13:39:42.559629      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:39:43.560627      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:39:44.560877      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:39:45.560994      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:39:46.562038      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:39:47.026: INFO: 86 pods remaining
  Sep 13 13:39:47.026: INFO: 50 pods has nil DeletionTimestamp
  Sep 13 13:39:47.026: INFO: 
  E0913 13:39:47.562189      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:39:48.562547      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:39:49.562660      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:39:50.562802      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:39:51.563085      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 09/13/24 13:39:52.015
  Sep 13 13:39:52.120: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Sep 13 13:39:52.120: INFO: Deleting pod "simpletest-rc-to-be-deleted-25cl5" in namespace "gc-3454"
  Sep 13 13:39:52.135: INFO: Deleting pod "simpletest-rc-to-be-deleted-2jmrn" in namespace "gc-3454"
  Sep 13 13:39:52.153: INFO: Deleting pod "simpletest-rc-to-be-deleted-2qqz2" in namespace "gc-3454"
  Sep 13 13:39:52.183: INFO: Deleting pod "simpletest-rc-to-be-deleted-44r28" in namespace "gc-3454"
  Sep 13 13:39:52.211: INFO: Deleting pod "simpletest-rc-to-be-deleted-4j2kj" in namespace "gc-3454"
  Sep 13 13:39:52.234: INFO: Deleting pod "simpletest-rc-to-be-deleted-4wkng" in namespace "gc-3454"
  Sep 13 13:39:52.258: INFO: Deleting pod "simpletest-rc-to-be-deleted-4xrx6" in namespace "gc-3454"
  Sep 13 13:39:52.291: INFO: Deleting pod "simpletest-rc-to-be-deleted-54bsq" in namespace "gc-3454"
  Sep 13 13:39:52.305: INFO: Deleting pod "simpletest-rc-to-be-deleted-5fdtc" in namespace "gc-3454"
  Sep 13 13:39:52.338: INFO: Deleting pod "simpletest-rc-to-be-deleted-5hlmq" in namespace "gc-3454"
  Sep 13 13:39:52.366: INFO: Deleting pod "simpletest-rc-to-be-deleted-5j4rd" in namespace "gc-3454"
  Sep 13 13:39:52.393: INFO: Deleting pod "simpletest-rc-to-be-deleted-5n9dz" in namespace "gc-3454"
  Sep 13 13:39:52.418: INFO: Deleting pod "simpletest-rc-to-be-deleted-5tp58" in namespace "gc-3454"
  Sep 13 13:39:52.432: INFO: Deleting pod "simpletest-rc-to-be-deleted-5wsh6" in namespace "gc-3454"
  Sep 13 13:39:52.456: INFO: Deleting pod "simpletest-rc-to-be-deleted-62lj8" in namespace "gc-3454"
  Sep 13 13:39:52.478: INFO: Deleting pod "simpletest-rc-to-be-deleted-67kc4" in namespace "gc-3454"
  Sep 13 13:39:52.495: INFO: Deleting pod "simpletest-rc-to-be-deleted-6m6vm" in namespace "gc-3454"
  Sep 13 13:39:52.527: INFO: Deleting pod "simpletest-rc-to-be-deleted-6vvlx" in namespace "gc-3454"
  Sep 13 13:39:52.554: INFO: Deleting pod "simpletest-rc-to-be-deleted-6x857" in namespace "gc-3454"
  E0913 13:39:52.564053      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:39:52.567: INFO: Deleting pod "simpletest-rc-to-be-deleted-77b4m" in namespace "gc-3454"
  Sep 13 13:39:52.595: INFO: Deleting pod "simpletest-rc-to-be-deleted-77rmd" in namespace "gc-3454"
  Sep 13 13:39:52.610: INFO: Deleting pod "simpletest-rc-to-be-deleted-7ljj8" in namespace "gc-3454"
  Sep 13 13:39:52.642: INFO: Deleting pod "simpletest-rc-to-be-deleted-89xgp" in namespace "gc-3454"
  Sep 13 13:39:52.684: INFO: Deleting pod "simpletest-rc-to-be-deleted-8mw67" in namespace "gc-3454"
  Sep 13 13:39:52.698: INFO: Deleting pod "simpletest-rc-to-be-deleted-8zsvm" in namespace "gc-3454"
  Sep 13 13:39:52.715: INFO: Deleting pod "simpletest-rc-to-be-deleted-9hbfm" in namespace "gc-3454"
  Sep 13 13:39:52.748: INFO: Deleting pod "simpletest-rc-to-be-deleted-9rc4b" in namespace "gc-3454"
  Sep 13 13:39:52.781: INFO: Deleting pod "simpletest-rc-to-be-deleted-9x75j" in namespace "gc-3454"
  Sep 13 13:39:52.794: INFO: Deleting pod "simpletest-rc-to-be-deleted-b56cz" in namespace "gc-3454"
  Sep 13 13:39:52.819: INFO: Deleting pod "simpletest-rc-to-be-deleted-brc4t" in namespace "gc-3454"
  Sep 13 13:39:52.838: INFO: Deleting pod "simpletest-rc-to-be-deleted-btnvp" in namespace "gc-3454"
  Sep 13 13:39:52.870: INFO: Deleting pod "simpletest-rc-to-be-deleted-ccntm" in namespace "gc-3454"
  Sep 13 13:39:52.902: INFO: Deleting pod "simpletest-rc-to-be-deleted-cnv2l" in namespace "gc-3454"
  Sep 13 13:39:52.930: INFO: Deleting pod "simpletest-rc-to-be-deleted-crvtn" in namespace "gc-3454"
  Sep 13 13:39:52.956: INFO: Deleting pod "simpletest-rc-to-be-deleted-dfhlv" in namespace "gc-3454"
  Sep 13 13:39:52.985: INFO: Deleting pod "simpletest-rc-to-be-deleted-dgcm7" in namespace "gc-3454"
  Sep 13 13:39:53.018: INFO: Deleting pod "simpletest-rc-to-be-deleted-f2lcq" in namespace "gc-3454"
  Sep 13 13:39:53.061: INFO: Deleting pod "simpletest-rc-to-be-deleted-f96g9" in namespace "gc-3454"
  Sep 13 13:39:53.082: INFO: Deleting pod "simpletest-rc-to-be-deleted-fhhn7" in namespace "gc-3454"
  Sep 13 13:39:53.102: INFO: Deleting pod "simpletest-rc-to-be-deleted-fkz6j" in namespace "gc-3454"
  Sep 13 13:39:53.146: INFO: Deleting pod "simpletest-rc-to-be-deleted-fwv29" in namespace "gc-3454"
  Sep 13 13:39:53.164: INFO: Deleting pod "simpletest-rc-to-be-deleted-fz2f7" in namespace "gc-3454"
  Sep 13 13:39:53.185: INFO: Deleting pod "simpletest-rc-to-be-deleted-g24z8" in namespace "gc-3454"
  Sep 13 13:39:53.211: INFO: Deleting pod "simpletest-rc-to-be-deleted-gdh7f" in namespace "gc-3454"
  Sep 13 13:39:53.252: INFO: Deleting pod "simpletest-rc-to-be-deleted-gh5gw" in namespace "gc-3454"
  Sep 13 13:39:53.264: INFO: Deleting pod "simpletest-rc-to-be-deleted-glbgh" in namespace "gc-3454"
  Sep 13 13:39:53.318: INFO: Deleting pod "simpletest-rc-to-be-deleted-gzmt5" in namespace "gc-3454"
  Sep 13 13:39:53.334: INFO: Deleting pod "simpletest-rc-to-be-deleted-hctd2" in namespace "gc-3454"
  Sep 13 13:39:53.384: INFO: Deleting pod "simpletest-rc-to-be-deleted-hgfh4" in namespace "gc-3454"
  Sep 13 13:39:53.408: INFO: Deleting pod "simpletest-rc-to-be-deleted-hthvz" in namespace "gc-3454"
  Sep 13 13:39:53.444: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-3454" for this suite. @ 09/13/24 13:39:53.448
• [23.057 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:572
  STEP: Creating a kubernetes client @ 09/13/24 13:39:53.468
  Sep 13 13:39:53.468: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename job @ 09/13/24 13:39:53.469
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:39:53.49
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:39:53.493
  STEP: Creating a job @ 09/13/24 13:39:53.495
  STEP: Ensuring job reaches completions @ 09/13/24 13:39:53.504
  E0913 13:39:53.564358      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:39:54.567889      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:39:55.568278      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:39:56.568663      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:39:57.569537      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:39:58.570184      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:39:59.570277      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:40:00.571213      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:40:01.571514      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:40:02.572023      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:40:03.507: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-6867" for this suite. @ 09/13/24 13:40:03.51
• [10.047 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3338
  STEP: Creating a kubernetes client @ 09/13/24 13:40:03.515
  Sep 13 13:40:03.515: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename services @ 09/13/24 13:40:03.516
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:40:03.539
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:40:03.542
  STEP: creating a Service @ 09/13/24 13:40:03.546
  E0913 13:40:03.573042      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: watching for the Service to be added @ 09/13/24 13:40:03.574
  Sep 13 13:40:03.576: INFO: Found Service test-service-jd6hg in namespace services-3163 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 31794}]
  Sep 13 13:40:03.576: INFO: Service test-service-jd6hg created
  STEP: Getting /status @ 09/13/24 13:40:03.576
  Sep 13 13:40:03.587: INFO: Service test-service-jd6hg has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 09/13/24 13:40:03.587
  STEP: watching for the Service to be patched @ 09/13/24 13:40:03.595
  Sep 13 13:40:03.596: INFO: observed Service test-service-jd6hg in namespace services-3163 with annotations: map[] & LoadBalancer: {[]}
  Sep 13 13:40:03.596: INFO: Found Service test-service-jd6hg in namespace services-3163 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  <nil> []}]}
  Sep 13 13:40:03.596: INFO: Service test-service-jd6hg has service status patched
  STEP: updating the ServiceStatus @ 09/13/24 13:40:03.596
  Sep 13 13:40:03.610: INFO: updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 09/13/24 13:40:03.613
  Sep 13 13:40:03.615: INFO: Observed Service test-service-jd6hg in namespace services-3163 with annotations: map[] & Conditions: {[]}
  Sep 13 13:40:03.615: INFO: Observed event: &Service{ObjectMeta:{test-service-jd6hg  services-3163  75f006e3-1560-4932-b0cd-9a9f115e164d 748869 0 2024-09-13 13:40:03 +0000 UTC <nil> <nil> map[test-service-static:true] map[patchedstatus:true] [] [] [{e2e.test Update v1 2024-09-13 13:40:03 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:test-service-static":{}}},"f:spec":{"f:allocateLoadBalancerNodePorts":{},"f:externalTrafficPolicy":{},"f:internalTrafficPolicy":{},"f:loadBalancerClass":{},"f:ports":{".":{},"k:{\"port\":80,\"protocol\":\"TCP\"}":{".":{},"f:name":{},"f:port":{},"f:protocol":{},"f:targetPort":{}}},"f:sessionAffinity":{},"f:type":{}}} } {e2e.test Update v1 2024-09-13 13:40:03 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:patchedstatus":{}}},"f:status":{"f:loadBalancer":{"f:ingress":{}}}} status}]},Spec:ServiceSpec{Ports:[]ServicePort{ServicePort{Name:http,Protocol:TCP,Port:80,TargetPort:{0 80 },NodePort:31794,AppProtocol:nil,},},Selector:map[string]string{},ClusterIP:10.233.55.222,Type:LoadBalancer,ExternalIPs:[],SessionAffinity:None,LoadBalancerIP:,LoadBalancerSourceRanges:[],ExternalName:,ExternalTrafficPolicy:Cluster,HealthCheckNodePort:0,PublishNotReadyAddresses:false,SessionAffinityConfig:nil,IPFamilyPolicy:*SingleStack,ClusterIPs:[10.233.55.222],IPFamilies:[IPv4],AllocateLoadBalancerNodePorts:*true,LoadBalancerClass:*example.com/internal-vip,InternalTrafficPolicy:*Cluster,},Status:ServiceStatus{LoadBalancer:LoadBalancerStatus{Ingress:[]LoadBalancerIngress{LoadBalancerIngress{IP:203.0.113.1,Hostname:,IPMode:nil,Ports:[]PortStatus{},},},},Conditions:[]Condition{},},}
  Sep 13 13:40:03.615: INFO: Found Service test-service-jd6hg in namespace services-3163 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Sep 13 13:40:03.615: INFO: Service test-service-jd6hg has service status updated
  STEP: patching the service @ 09/13/24 13:40:03.615
  STEP: watching for the Service to be patched @ 09/13/24 13:40:03.635
  Sep 13 13:40:03.638: INFO: observed Service test-service-jd6hg in namespace services-3163 with labels: map[test-service-static:true]
  Sep 13 13:40:03.638: INFO: observed Service test-service-jd6hg in namespace services-3163 with labels: map[test-service-static:true]
  Sep 13 13:40:03.638: INFO: observed Service test-service-jd6hg in namespace services-3163 with labels: map[test-service-static:true]
  Sep 13 13:40:03.638: INFO: Found Service test-service-jd6hg in namespace services-3163 with labels: map[test-service:patched test-service-static:true]
  Sep 13 13:40:03.638: INFO: Service test-service-jd6hg patched
  STEP: deleting the service @ 09/13/24 13:40:03.638
  STEP: watching for the Service to be deleted @ 09/13/24 13:40:03.653
  Sep 13 13:40:03.654: INFO: Observed event: ADDED
  Sep 13 13:40:03.654: INFO: Observed event: MODIFIED
  Sep 13 13:40:03.655: INFO: Observed event: MODIFIED
  Sep 13 13:40:03.655: INFO: Observed event: MODIFIED
  Sep 13 13:40:03.655: INFO: Found Service test-service-jd6hg in namespace services-3163 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  Sep 13 13:40:03.655: INFO: Service test-service-jd6hg deleted
  Sep 13 13:40:03.655: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3163" for this suite. @ 09/13/24 13:40:03.659
• [0.152 seconds]
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:424
  STEP: Creating a kubernetes client @ 09/13/24 13:40:03.668
  Sep 13 13:40:03.668: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename configmap @ 09/13/24 13:40:03.669
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:40:03.693
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:40:03.696
  STEP: Creating configMap with name configmap-test-volume-40796b36-74e8-48c8-9be0-7e11ba859059 @ 09/13/24 13:40:03.699
  STEP: Creating a pod to test consume configMaps @ 09/13/24 13:40:03.703
  E0913 13:40:04.573151      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:40:05.573181      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:40:06.573359      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:40:07.574253      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/13/24 13:40:07.729
  Sep 13 13:40:07.731: INFO: Trying to get logs from node cncf-3 pod pod-configmaps-6b6f8700-e7cc-4e90-be21-9c8e9674b489 container configmap-volume-test: <nil>
  STEP: delete the pod @ 09/13/24 13:40:07.743
  Sep 13 13:40:07.768: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2877" for this suite. @ 09/13/24 13:40:07.772
• [4.109 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:105
  STEP: Creating a kubernetes client @ 09/13/24 13:40:07.778
  Sep 13 13:40:07.778: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename endpointslice @ 09/13/24 13:40:07.779
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:40:07.796
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:40:07.798
  E0913 13:40:08.574638      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:40:09.574871      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:40:09.852: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-2768" for this suite. @ 09/13/24 13:40:09.856
• [2.085 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 09/13/24 13:40:09.863
  Sep 13 13:40:09.863: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename watch @ 09/13/24 13:40:09.864
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:40:09.886
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:40:09.893
  STEP: creating a new configmap @ 09/13/24 13:40:09.895
  STEP: modifying the configmap once @ 09/13/24 13:40:09.9
  STEP: modifying the configmap a second time @ 09/13/24 13:40:09.908
  STEP: deleting the configmap @ 09/13/24 13:40:09.915
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 09/13/24 13:40:09.919
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 09/13/24 13:40:09.92
  Sep 13 13:40:09.921: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-4038  a9102769-896b-4d78-b2c7-97aa4296a063 749005 0 2024-09-13 13:40:09 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-09-13 13:40:09 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep 13 13:40:09.922: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-4038  a9102769-896b-4d78-b2c7-97aa4296a063 749006 0 2024-09-13 13:40:09 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-09-13 13:40:09 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep 13 13:40:09.922: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-4038" for this suite. @ 09/13/24 13:40:09.927
• [0.070 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:305
  STEP: Creating a kubernetes client @ 09/13/24 13:40:09.935
  Sep 13 13:40:09.935: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename namespaces @ 09/13/24 13:40:09.936
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:40:09.958
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:40:09.965
  STEP: Read namespace status @ 09/13/24 13:40:09.968
  Sep 13 13:40:09.975: INFO: Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 09/13/24 13:40:09.975
  Sep 13 13:40:09.987: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 09/13/24 13:40:09.987
  Sep 13 13:40:10.007: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  Sep 13 13:40:10.008: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-9661" for this suite. @ 09/13/24 13:40:10.012
• [0.085 seconds]
------------------------------
S
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:164
  STEP: Creating a kubernetes client @ 09/13/24 13:40:10.02
  Sep 13 13:40:10.020: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename downward-api @ 09/13/24 13:40:10.022
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:40:10.041
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:40:10.043
  STEP: Creating the pod @ 09/13/24 13:40:10.045
  E0913 13:40:10.575028      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:40:11.575600      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:40:12.575847      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:40:12.588: INFO: Successfully updated pod "annotationupdatecf0ec3e8-cfb7-4d29-968c-c678da732e9b"
  E0913 13:40:13.576589      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:40:14.576182      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:40:14.602: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6144" for this suite. @ 09/13/24 13:40:14.606
• [4.594 seconds]
------------------------------
SS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 09/13/24 13:40:14.614
  Sep 13 13:40:14.614: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename secrets @ 09/13/24 13:40:14.615
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:40:14.628
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:40:14.63
  STEP: Creating secret with name secret-test-map-5ad8ddca-4917-4e59-80b2-b2d8a0dcfc02 @ 09/13/24 13:40:14.633
  STEP: Creating a pod to test consume secrets @ 09/13/24 13:40:14.638
  E0913 13:40:15.576283      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:40:16.576438      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:40:17.576999      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:40:18.577284      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/13/24 13:40:18.662
  Sep 13 13:40:18.664: INFO: Trying to get logs from node cncf-3 pod pod-secrets-b2fd330c-c370-499d-a317-004496b94f59 container secret-volume-test: <nil>
  STEP: delete the pod @ 09/13/24 13:40:18.669
  Sep 13 13:40:18.683: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5935" for this suite. @ 09/13/24 13:40:18.687
• [4.083 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:131
  STEP: Creating a kubernetes client @ 09/13/24 13:40:18.697
  Sep 13 13:40:18.697: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename runtimeclass @ 09/13/24 13:40:18.698
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:40:18.714
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:40:18.717
  E0913 13:40:19.577581      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:40:20.578453      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:40:20.740: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-9949" for this suite. @ 09/13/24 13:40:20.743
• [2.051 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:168
  STEP: Creating a kubernetes client @ 09/13/24 13:40:20.748
  Sep 13 13:40:20.748: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename field-validation @ 09/13/24 13:40:20.749
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:40:20.759
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:40:20.761
  Sep 13 13:40:20.765: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  E0913 13:40:21.578413      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:40:22.578996      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  W0913 13:40:23.312487      23 warnings.go:70] unknown field "alpha"
  W0913 13:40:23.312539      23 warnings.go:70] unknown field "beta"
  W0913 13:40:23.312545      23 warnings.go:70] unknown field "delta"
  W0913 13:40:23.312550      23 warnings.go:70] unknown field "epsilon"
  W0913 13:40:23.312555      23 warnings.go:70] unknown field "gamma"
  E0913 13:40:23.579753      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:40:23.862: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-1110" for this suite. @ 09/13/24 13:40:23.865
• [3.122 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1373
  STEP: Creating a kubernetes client @ 09/13/24 13:40:23.87
  Sep 13 13:40:23.870: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename kubectl @ 09/13/24 13:40:23.872
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:40:23.887
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:40:23.891
  STEP: validating cluster-info @ 09/13/24 13:40:23.897
  Sep 13 13:40:23.897: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=kubectl-4055 cluster-info'
  Sep 13 13:40:23.959: INFO: stderr: ""
  Sep 13 13:40:23.959: INFO: stdout: "\x1b[0;32mKubernetes control plane\x1b[0m is running at \x1b[0;33mhttps://10.233.0.1:443\x1b[0m\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  Sep 13 13:40:23.959: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4055" for this suite. @ 09/13/24 13:40:23.962
• [0.096 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:214
  STEP: Creating a kubernetes client @ 09/13/24 13:40:23.967
  Sep 13 13:40:23.967: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 09/13/24 13:40:23.968
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:40:23.988
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:40:23.99
  STEP: create the container to handle the HTTPGet hook request. @ 09/13/24 13:40:23.997
  E0913 13:40:24.579989      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:40:25.583472      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 09/13/24 13:40:26.027
  E0913 13:40:26.584233      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:40:27.584872      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 09/13/24 13:40:28.04
  E0913 13:40:28.584933      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:40:29.585046      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 09/13/24 13:40:30.056
  Sep 13 13:40:30.069: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-1800" for this suite. @ 09/13/24 13:40:30.072
• [6.110 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:223
  STEP: Creating a kubernetes client @ 09/13/24 13:40:30.077
  Sep 13 13:40:30.077: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename projected @ 09/13/24 13:40:30.078
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:40:30.089
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:40:30.092
  STEP: Creating a pod to test downward API volume plugin @ 09/13/24 13:40:30.097
  E0913 13:40:30.585659      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:40:31.586571      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:40:32.587200      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:40:33.587397      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/13/24 13:40:34.117
  Sep 13 13:40:34.119: INFO: Trying to get logs from node cncf-3 pod downwardapi-volume-e1f97ba7-c63e-46ae-a8f0-ce13f3914c60 container client-container: <nil>
  STEP: delete the pod @ 09/13/24 13:40:34.123
  Sep 13 13:40:34.143: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5143" for this suite. @ 09/13/24 13:40:34.147
• [4.080 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:115
  STEP: Creating a kubernetes client @ 09/13/24 13:40:34.158
  Sep 13 13:40:34.158: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename var-expansion @ 09/13/24 13:40:34.159
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:40:34.178
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:40:34.181
  STEP: Creating a pod to test substitution in volume subpath @ 09/13/24 13:40:34.184
  E0913 13:40:34.588327      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:40:35.588450      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:40:36.589032      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:40:37.589608      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/13/24 13:40:38.201
  Sep 13 13:40:38.203: INFO: Trying to get logs from node cncf-3 pod var-expansion-073b0a55-3792-48fb-8ab6-e24a3d526e24 container dapi-container: <nil>
  STEP: delete the pod @ 09/13/24 13:40:38.206
  Sep 13 13:40:38.250: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-3690" for this suite. @ 09/13/24 13:40:38.254
• [4.106 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:875
  STEP: Creating a kubernetes client @ 09/13/24 13:40:38.264
  Sep 13 13:40:38.264: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename daemonsets @ 09/13/24 13:40:38.265
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:40:38.287
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:40:38.29
  STEP: Creating simple DaemonSet "daemon-set" @ 09/13/24 13:40:38.318
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/13/24 13:40:38.331
  Sep 13 13:40:38.335: INFO: DaemonSet pods can't tolerate node cncf-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep 13 13:40:38.337: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 13 13:40:38.337: INFO: Node cncf-2 is running 0 daemon pod, expected 1
  E0913 13:40:38.589756      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:40:39.350: INFO: DaemonSet pods can't tolerate node cncf-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep 13 13:40:39.358: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Sep 13 13:40:39.358: INFO: Node cncf-2 is running 0 daemon pod, expected 1
  E0913 13:40:39.590682      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:40:40.337: INFO: DaemonSet pods can't tolerate node cncf-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Sep 13 13:40:40.340: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 4
  Sep 13 13:40:40.340: INFO: Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
  STEP: Getting /status @ 09/13/24 13:40:40.342
  Sep 13 13:40:40.346: INFO: Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 09/13/24 13:40:40.346
  Sep 13 13:40:40.353: INFO: updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 09/13/24 13:40:40.354
  Sep 13 13:40:40.355: INFO: Observed &DaemonSet event: ADDED
  Sep 13 13:40:40.355: INFO: Observed &DaemonSet event: MODIFIED
  Sep 13 13:40:40.356: INFO: Observed &DaemonSet event: MODIFIED
  Sep 13 13:40:40.356: INFO: Observed &DaemonSet event: MODIFIED
  Sep 13 13:40:40.356: INFO: Observed &DaemonSet event: MODIFIED
  Sep 13 13:40:40.356: INFO: Observed &DaemonSet event: MODIFIED
  Sep 13 13:40:40.356: INFO: Found daemon set daemon-set in namespace daemonsets-5215 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Sep 13 13:40:40.356: INFO: Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 09/13/24 13:40:40.356
  STEP: watching for the daemon set status to be patched @ 09/13/24 13:40:40.366
  Sep 13 13:40:40.368: INFO: Observed &DaemonSet event: ADDED
  Sep 13 13:40:40.368: INFO: Observed &DaemonSet event: MODIFIED
  Sep 13 13:40:40.368: INFO: Observed &DaemonSet event: MODIFIED
  Sep 13 13:40:40.369: INFO: Observed &DaemonSet event: MODIFIED
  Sep 13 13:40:40.369: INFO: Observed &DaemonSet event: MODIFIED
  Sep 13 13:40:40.369: INFO: Observed &DaemonSet event: MODIFIED
  Sep 13 13:40:40.369: INFO: Observed daemon set daemon-set in namespace daemonsets-5215 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Sep 13 13:40:40.370: INFO: Observed &DaemonSet event: MODIFIED
  Sep 13 13:40:40.370: INFO: Found daemon set daemon-set in namespace daemonsets-5215 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  Sep 13 13:40:40.370: INFO: Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 09/13/24 13:40:40.373
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-5215, will wait for the garbage collector to delete the pods @ 09/13/24 13:40:40.373
  Sep 13 13:40:40.431: INFO: Deleting DaemonSet.extensions daemon-set took: 5.459119ms
  Sep 13 13:40:40.532: INFO: Terminating DaemonSet.extensions daemon-set pods took: 101.088878ms
  E0913 13:40:40.591567      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:40:41.434: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 13 13:40:41.434: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Sep 13 13:40:41.436: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"749482"},"items":null}

  Sep 13 13:40:41.438: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"749482"},"items":null}

  Sep 13 13:40:41.448: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-5215" for this suite. @ 09/13/24 13:40:41.455
• [3.196 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:96
  STEP: Creating a kubernetes client @ 09/13/24 13:40:41.46
  Sep 13 13:40:41.460: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename secrets @ 09/13/24 13:40:41.461
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:40:41.491
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:40:41.494
  STEP: creating secret secrets-9700/secret-test-57a4b911-26da-459f-ad3f-421236b790a5 @ 09/13/24 13:40:41.496
  STEP: Creating a pod to test consume secrets @ 09/13/24 13:40:41.502
  E0913 13:40:41.591883      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:40:42.592012      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:40:43.592437      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:40:44.592830      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/13/24 13:40:45.523
  Sep 13 13:40:45.526: INFO: Trying to get logs from node cncf-3 pod pod-configmaps-0cba5580-7d59-4cf4-bd50-af06436a4773 container env-test: <nil>
  STEP: delete the pod @ 09/13/24 13:40:45.531
  Sep 13 13:40:45.545: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9700" for this suite. @ 09/13/24 13:40:45.549
• [4.094 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:183
  STEP: Creating a kubernetes client @ 09/13/24 13:40:45.555
  Sep 13 13:40:45.555: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename kubelet-test @ 09/13/24 13:40:45.556
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:40:45.574
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:40:45.577
  E0913 13:40:45.594433      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:40:46.594662      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:40:47.594775      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:40:47.604: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-5077" for this suite. @ 09/13/24 13:40:47.607
• [2.063 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve multiport endpoints from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:846
  STEP: Creating a kubernetes client @ 09/13/24 13:40:47.618
  Sep 13 13:40:47.618: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename services @ 09/13/24 13:40:47.619
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:40:47.635
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:40:47.637
  STEP: creating service multi-endpoint-test in namespace services-1523 @ 09/13/24 13:40:47.64
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-1523 to expose endpoints map[] @ 09/13/24 13:40:47.655
  Sep 13 13:40:47.663: INFO: successfully validated that service multi-endpoint-test in namespace services-1523 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-1523 @ 09/13/24 13:40:47.663
  E0913 13:40:48.594963      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:40:49.595957      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-1523 to expose endpoints map[pod1:[100]] @ 09/13/24 13:40:49.686
  Sep 13 13:40:49.691: INFO: successfully validated that service multi-endpoint-test in namespace services-1523 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-1523 @ 09/13/24 13:40:49.691
  E0913 13:40:50.596228      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:40:51.596608      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-1523 to expose endpoints map[pod1:[100] pod2:[101]] @ 09/13/24 13:40:51.707
  Sep 13 13:40:51.716: INFO: successfully validated that service multi-endpoint-test in namespace services-1523 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 09/13/24 13:40:51.716
  Sep 13 13:40:51.716: INFO: Creating new exec pod
  E0913 13:40:52.597387      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:40:53.597695      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:40:54.597787      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:40:54.727: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=services-1523 exec execpodzqcpt -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  Sep 13 13:40:54.825: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test 80 port [tcp/http] succeeded!\n"
  Sep 13 13:40:54.825: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep 13 13:40:54.826: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=services-1523 exec execpodzqcpt -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.59.120 80'
  Sep 13 13:40:54.927: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.59.120 80\nConnection to 10.233.59.120 80 port [tcp/http] succeeded!\n"
  Sep 13 13:40:54.927: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep 13 13:40:54.928: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=services-1523 exec execpodzqcpt -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  Sep 13 13:40:55.032: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test 81 port [tcp/*] succeeded!\n"
  Sep 13 13:40:55.032: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep 13 13:40:55.032: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=services-1523 exec execpodzqcpt -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.59.120 81'
  Sep 13 13:40:55.141: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.59.120 81\nConnection to 10.233.59.120 81 port [tcp/*] succeeded!\n"
  Sep 13 13:40:55.141: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-1523 @ 09/13/24 13:40:55.141
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-1523 to expose endpoints map[pod2:[101]] @ 09/13/24 13:40:55.163
  Sep 13 13:40:55.183: INFO: successfully validated that service multi-endpoint-test in namespace services-1523 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-1523 @ 09/13/24 13:40:55.183
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-1523 to expose endpoints map[] @ 09/13/24 13:40:55.195
  Sep 13 13:40:55.207: INFO: successfully validated that service multi-endpoint-test in namespace services-1523 exposes endpoints map[]
  Sep 13 13:40:55.227: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1523" for this suite. @ 09/13/24 13:40:55.236
• [7.627 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:125
  STEP: Creating a kubernetes client @ 09/13/24 13:40:55.246
  Sep 13 13:40:55.246: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename pod-network-test @ 09/13/24 13:40:55.248
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:40:55.275
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:40:55.279
  STEP: Performing setup for networking test in namespace pod-network-test-7716 @ 09/13/24 13:40:55.281
  STEP: creating a selector @ 09/13/24 13:40:55.281
  STEP: Creating the service pods in kubernetes @ 09/13/24 13:40:55.281
  Sep 13 13:40:55.282: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0913 13:40:55.598072      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:40:56.598213      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:40:57.599142      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:40:58.599659      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:40:59.600342      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:41:00.601420      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:41:01.601691      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:41:02.601918      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:41:03.602373      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:41:04.602824      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:41:05.602955      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:41:06.603463      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:41:07.603551      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:41:08.603943      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:41:09.604339      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:41:10.604702      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:41:11.604964      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:41:12.606071      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:41:13.606871      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:41:14.607088      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:41:15.607744      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:41:16.607940      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 09/13/24 13:41:17.428
  E0913 13:41:17.608049      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:41:18.608312      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:41:19.457: INFO: Setting MaxTries for pod polling to 46 for networking test based on endpoint count 4
  Sep 13 13:41:19.457: INFO: Going to poll 10.0.4.88 on port 8081 at least 0 times, with a maximum of 46 tries before failing
  Sep 13 13:41:19.459: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.0.4.88 8081 | grep -v '^\s*$'] Namespace:pod-network-test-7716 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 13 13:41:19.459: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  Sep 13 13:41:19.460: INFO: ExecWithOptions: Clientset creation
  Sep 13 13:41:19.460: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-7716/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.0.4.88+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E0913 13:41:19.608350      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:41:20.501: INFO: Found all 1 expected endpoints: [netserver-0]
  Sep 13 13:41:20.501: INFO: Going to poll 10.0.1.196 on port 8081 at least 0 times, with a maximum of 46 tries before failing
  Sep 13 13:41:20.504: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.0.1.196 8081 | grep -v '^\s*$'] Namespace:pod-network-test-7716 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 13 13:41:20.504: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  Sep 13 13:41:20.505: INFO: ExecWithOptions: Clientset creation
  Sep 13 13:41:20.505: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-7716/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.0.1.196+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E0913 13:41:20.608787      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:41:21.542: INFO: Found all 1 expected endpoints: [netserver-1]
  Sep 13 13:41:21.542: INFO: Going to poll 10.0.3.147 on port 8081 at least 0 times, with a maximum of 46 tries before failing
  Sep 13 13:41:21.546: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.0.3.147 8081 | grep -v '^\s*$'] Namespace:pod-network-test-7716 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 13 13:41:21.546: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  Sep 13 13:41:21.546: INFO: ExecWithOptions: Clientset creation
  Sep 13 13:41:21.546: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-7716/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.0.3.147+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E0913 13:41:21.609767      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:41:22.597: INFO: Found all 1 expected endpoints: [netserver-2]
  Sep 13 13:41:22.597: INFO: Going to poll 10.0.0.85 on port 8081 at least 0 times, with a maximum of 46 tries before failing
  Sep 13 13:41:22.601: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.0.0.85 8081 | grep -v '^\s*$'] Namespace:pod-network-test-7716 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 13 13:41:22.601: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  Sep 13 13:41:22.602: INFO: ExecWithOptions: Clientset creation
  Sep 13 13:41:22.602: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-7716/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.0.0.85+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E0913 13:41:22.610778      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:41:23.611208      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:41:23.648: INFO: Found all 1 expected endpoints: [netserver-3]
  Sep 13 13:41:23.648: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-7716" for this suite. @ 09/13/24 13:41:23.655
• [28.414 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:140
  STEP: Creating a kubernetes client @ 09/13/24 13:41:23.661
  Sep 13 13:41:23.661: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename emptydir @ 09/13/24 13:41:23.662
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:41:23.674
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:41:23.676
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 09/13/24 13:41:23.679
  E0913 13:41:24.611889      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:41:25.611882      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:41:26.611984      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:41:27.612329      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/13/24 13:41:27.696
  Sep 13 13:41:27.698: INFO: Trying to get logs from node cncf-3 pod pod-5e9e3c71-fbac-432f-8c91-9d83e933a1a6 container test-container: <nil>
  STEP: delete the pod @ 09/13/24 13:41:27.703
  Sep 13 13:41:27.718: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3274" for this suite. @ 09/13/24 13:41:27.721
• [4.069 seconds]
------------------------------
SSS
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 09/13/24 13:41:27.731
  Sep 13 13:41:27.731: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename pods @ 09/13/24 13:41:27.732
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:41:27.756
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:41:27.759
  STEP: creating the pod @ 09/13/24 13:41:27.761
  STEP: setting up watch @ 09/13/24 13:41:27.761
  STEP: submitting the pod to kubernetes @ 09/13/24 13:41:27.864
  STEP: verifying the pod is in kubernetes @ 09/13/24 13:41:27.874
  STEP: verifying pod creation was observed @ 09/13/24 13:41:27.877
  E0913 13:41:28.612851      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:41:29.613079      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 09/13/24 13:41:29.898
  STEP: verifying pod deletion was observed @ 09/13/24 13:41:29.914
  E0913 13:41:30.614144      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:41:31.495: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-724" for this suite. @ 09/13/24 13:41:31.499
• [3.775 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2199
  STEP: Creating a kubernetes client @ 09/13/24 13:41:31.505
  Sep 13 13:41:31.506: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename services @ 09/13/24 13:41:31.507
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:41:31.517
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:41:31.519
  STEP: creating service in namespace services-9163 @ 09/13/24 13:41:31.523
  STEP: creating service affinity-clusterip-transition in namespace services-9163 @ 09/13/24 13:41:31.523
  STEP: creating replication controller affinity-clusterip-transition in namespace services-9163 @ 09/13/24 13:41:31.537
  I0913 13:41:31.542701      23 runners.go:197] Created replication controller with name: affinity-clusterip-transition, namespace: services-9163, replica count: 3
  E0913 13:41:31.614561      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:41:32.615212      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:41:33.615339      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0913 13:41:34.594535      23 runners.go:197] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Sep 13 13:41:34.600: INFO: Creating new exec pod
  E0913 13:41:34.615840      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:41:35.615960      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:41:36.616132      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:41:37.616911      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:41:37.618: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=services-9163 exec execpod-affinity8vdnc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  Sep 13 13:41:37.736: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition 80 port [tcp/http] succeeded!\n"
  Sep 13 13:41:37.736: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep 13 13:41:37.736: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=services-9163 exec execpod-affinity8vdnc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.27.22 80'
  Sep 13 13:41:37.856: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.27.22 80\nConnection to 10.233.27.22 80 port [tcp/http] succeeded!\n"
  Sep 13 13:41:37.856: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep 13 13:41:37.870: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=services-9163 exec execpod-affinity8vdnc -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.233.27.22:80/ ; done'
  Sep 13 13:41:38.052: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.27.22:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.27.22:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.27.22:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.27.22:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.27.22:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.27.22:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.27.22:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.27.22:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.27.22:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.27.22:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.27.22:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.27.22:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.27.22:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.27.22:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.27.22:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.27.22:80/\n"
  Sep 13 13:41:38.052: INFO: stdout: "\naffinity-clusterip-transition-vlmwf\naffinity-clusterip-transition-rwhlx\naffinity-clusterip-transition-t6bvn\naffinity-clusterip-transition-vlmwf\naffinity-clusterip-transition-rwhlx\naffinity-clusterip-transition-t6bvn\naffinity-clusterip-transition-vlmwf\naffinity-clusterip-transition-rwhlx\naffinity-clusterip-transition-t6bvn\naffinity-clusterip-transition-vlmwf\naffinity-clusterip-transition-rwhlx\naffinity-clusterip-transition-t6bvn\naffinity-clusterip-transition-vlmwf\naffinity-clusterip-transition-rwhlx\naffinity-clusterip-transition-t6bvn\naffinity-clusterip-transition-vlmwf"
  Sep 13 13:41:38.052: INFO: Received response from host: affinity-clusterip-transition-vlmwf
  Sep 13 13:41:38.052: INFO: Received response from host: affinity-clusterip-transition-rwhlx
  Sep 13 13:41:38.052: INFO: Received response from host: affinity-clusterip-transition-t6bvn
  Sep 13 13:41:38.052: INFO: Received response from host: affinity-clusterip-transition-vlmwf
  Sep 13 13:41:38.052: INFO: Received response from host: affinity-clusterip-transition-rwhlx
  Sep 13 13:41:38.052: INFO: Received response from host: affinity-clusterip-transition-t6bvn
  Sep 13 13:41:38.052: INFO: Received response from host: affinity-clusterip-transition-vlmwf
  Sep 13 13:41:38.052: INFO: Received response from host: affinity-clusterip-transition-rwhlx
  Sep 13 13:41:38.052: INFO: Received response from host: affinity-clusterip-transition-t6bvn
  Sep 13 13:41:38.052: INFO: Received response from host: affinity-clusterip-transition-vlmwf
  Sep 13 13:41:38.052: INFO: Received response from host: affinity-clusterip-transition-rwhlx
  Sep 13 13:41:38.052: INFO: Received response from host: affinity-clusterip-transition-t6bvn
  Sep 13 13:41:38.052: INFO: Received response from host: affinity-clusterip-transition-vlmwf
  Sep 13 13:41:38.052: INFO: Received response from host: affinity-clusterip-transition-rwhlx
  Sep 13 13:41:38.052: INFO: Received response from host: affinity-clusterip-transition-t6bvn
  Sep 13 13:41:38.052: INFO: Received response from host: affinity-clusterip-transition-vlmwf
  Sep 13 13:41:38.062: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=services-9163 exec execpod-affinity8vdnc -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.233.27.22:80/ ; done'
  Sep 13 13:41:38.220: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.27.22:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.27.22:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.27.22:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.27.22:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.27.22:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.27.22:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.27.22:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.27.22:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.27.22:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.27.22:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.27.22:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.27.22:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.27.22:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.27.22:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.27.22:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.27.22:80/\n"
  Sep 13 13:41:38.220: INFO: stdout: "\naffinity-clusterip-transition-t6bvn\naffinity-clusterip-transition-t6bvn\naffinity-clusterip-transition-t6bvn\naffinity-clusterip-transition-t6bvn\naffinity-clusterip-transition-t6bvn\naffinity-clusterip-transition-t6bvn\naffinity-clusterip-transition-t6bvn\naffinity-clusterip-transition-t6bvn\naffinity-clusterip-transition-t6bvn\naffinity-clusterip-transition-t6bvn\naffinity-clusterip-transition-t6bvn\naffinity-clusterip-transition-t6bvn\naffinity-clusterip-transition-t6bvn\naffinity-clusterip-transition-t6bvn\naffinity-clusterip-transition-t6bvn\naffinity-clusterip-transition-t6bvn"
  Sep 13 13:41:38.220: INFO: Received response from host: affinity-clusterip-transition-t6bvn
  Sep 13 13:41:38.220: INFO: Received response from host: affinity-clusterip-transition-t6bvn
  Sep 13 13:41:38.220: INFO: Received response from host: affinity-clusterip-transition-t6bvn
  Sep 13 13:41:38.220: INFO: Received response from host: affinity-clusterip-transition-t6bvn
  Sep 13 13:41:38.220: INFO: Received response from host: affinity-clusterip-transition-t6bvn
  Sep 13 13:41:38.220: INFO: Received response from host: affinity-clusterip-transition-t6bvn
  Sep 13 13:41:38.220: INFO: Received response from host: affinity-clusterip-transition-t6bvn
  Sep 13 13:41:38.220: INFO: Received response from host: affinity-clusterip-transition-t6bvn
  Sep 13 13:41:38.220: INFO: Received response from host: affinity-clusterip-transition-t6bvn
  Sep 13 13:41:38.220: INFO: Received response from host: affinity-clusterip-transition-t6bvn
  Sep 13 13:41:38.220: INFO: Received response from host: affinity-clusterip-transition-t6bvn
  Sep 13 13:41:38.220: INFO: Received response from host: affinity-clusterip-transition-t6bvn
  Sep 13 13:41:38.220: INFO: Received response from host: affinity-clusterip-transition-t6bvn
  Sep 13 13:41:38.220: INFO: Received response from host: affinity-clusterip-transition-t6bvn
  Sep 13 13:41:38.220: INFO: Received response from host: affinity-clusterip-transition-t6bvn
  Sep 13 13:41:38.220: INFO: Received response from host: affinity-clusterip-transition-t6bvn
  Sep 13 13:41:38.220: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-9163, will wait for the garbage collector to delete the pods @ 09/13/24 13:41:38.236
  Sep 13 13:41:38.296: INFO: Deleting ReplicationController affinity-clusterip-transition took: 6.602258ms
  Sep 13 13:41:38.397: INFO: Terminating ReplicationController affinity-clusterip-transition pods took: 100.99118ms
  E0913 13:41:38.617218      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:41:39.617284      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:41:40.618241      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:41:41.618: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0913 13:41:41.618631      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "services-9163" for this suite. @ 09/13/24 13:41:41.622
• [10.133 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:199
  STEP: Creating a kubernetes client @ 09/13/24 13:41:41.64
  Sep 13 13:41:41.640: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/13/24 13:41:41.641
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:41:41.658
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:41:41.663
  STEP: fetching the /apis discovery document @ 09/13/24 13:41:41.678
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 09/13/24 13:41:41.68
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 09/13/24 13:41:41.68
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 09/13/24 13:41:41.68
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 09/13/24 13:41:41.68
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 09/13/24 13:41:41.681
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 09/13/24 13:41:41.682
  Sep 13 13:41:41.682: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-8768" for this suite. @ 09/13/24 13:41:41.686
• [0.052 seconds]
------------------------------
SS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:1031
  STEP: Creating a kubernetes client @ 09/13/24 13:41:41.692
  Sep 13 13:41:41.693: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename statefulset @ 09/13/24 13:41:41.694
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:41:41.718
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:41:41.721
  STEP: Creating service test in namespace statefulset-7637 @ 09/13/24 13:41:41.723
  STEP: Creating statefulset ss in namespace statefulset-7637 @ 09/13/24 13:41:41.74
  Sep 13 13:41:41.760: INFO: Found 0 stateful pods, waiting for 1
  E0913 13:41:42.619023      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:41:43.619174      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:41:44.619840      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:41:45.620078      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:41:46.620099      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:41:47.620730      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:41:48.621244      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:41:49.621717      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:41:50.623445      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:41:51.623116      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:41:51.758: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 09/13/24 13:41:51.763
  STEP: Getting /status @ 09/13/24 13:41:51.77
  Sep 13 13:41:51.772: INFO: StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 09/13/24 13:41:51.772
  Sep 13 13:41:51.792: INFO: updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 09/13/24 13:41:51.792
  Sep 13 13:41:51.794: INFO: Observed &StatefulSet event: ADDED
  Sep 13 13:41:51.794: INFO: Found Statefulset ss in namespace statefulset-7637 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Sep 13 13:41:51.795: INFO: Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 09/13/24 13:41:51.795
  Sep 13 13:41:51.795: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Sep 13 13:41:51.804: INFO: Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 09/13/24 13:41:51.804
  Sep 13 13:41:51.805: INFO: Observed &StatefulSet event: ADDED
  Sep 13 13:41:51.805: INFO: Observed Statefulset ss in namespace statefulset-7637 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Sep 13 13:41:51.805: INFO: Observed &StatefulSet event: MODIFIED
  Sep 13 13:41:51.805: INFO: Deleting all statefulset in ns statefulset-7637
  Sep 13 13:41:51.807: INFO: Scaling statefulset ss to 0
  E0913 13:41:52.623523      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:41:53.624162      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:41:54.625105      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:41:55.625178      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:41:56.625363      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:41:57.625389      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:41:58.625656      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:41:59.626466      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:42:00.627325      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:42:01.627557      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:42:01.822: INFO: Waiting for statefulset status.replicas updated to 0
  Sep 13 13:42:01.824: INFO: Deleting statefulset ss
  Sep 13 13:42:01.839: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-7637" for this suite. @ 09/13/24 13:42:01.848
• [20.164 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 09/13/24 13:42:01.857
  Sep 13 13:42:01.857: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename subpath @ 09/13/24 13:42:01.858
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:42:01.902
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:42:01.904
  STEP: Setting up data @ 09/13/24 13:42:01.906
  STEP: Creating pod pod-subpath-test-downwardapi-7lvd @ 09/13/24 13:42:01.942
  STEP: Creating a pod to test atomic-volume-subpath @ 09/13/24 13:42:01.942
  E0913 13:42:02.627669      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:42:03.627910      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:42:04.628760      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:42:05.629412      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:42:06.629641      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:42:07.630368      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:42:08.630494      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:42:09.630559      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:42:10.630591      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:42:11.631421      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:42:12.631564      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:42:13.632323      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:42:14.631966      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:42:15.632690      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:42:16.633665      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:42:17.634568      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:42:18.634797      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:42:19.635201      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:42:20.635965      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:42:21.636827      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:42:22.636921      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:42:23.637036      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:42:24.637883      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:42:25.638030      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/13/24 13:42:26.05
  Sep 13 13:42:26.052: INFO: Trying to get logs from node cncf-3 pod pod-subpath-test-downwardapi-7lvd container test-container-subpath-downwardapi-7lvd: <nil>
  STEP: delete the pod @ 09/13/24 13:42:26.056
  STEP: Deleting pod pod-subpath-test-downwardapi-7lvd @ 09/13/24 13:42:26.077
  Sep 13 13:42:26.077: INFO: Deleting pod "pod-subpath-test-downwardapi-7lvd" in namespace "subpath-4626"
  Sep 13 13:42:26.079: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-4626" for this suite. @ 09/13/24 13:42:26.082
• [24.239 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:498
  STEP: Creating a kubernetes client @ 09/13/24 13:42:26.096
  Sep 13 13:42:26.096: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename webhook @ 09/13/24 13:42:26.097
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:42:26.117
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:42:26.12
  STEP: Setting up server cert @ 09/13/24 13:42:26.149
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/13/24 13:42:26.59
  STEP: Deploying the webhook pod @ 09/13/24 13:42:26.604
  STEP: Wait for the deployment to be ready @ 09/13/24 13:42:26.617
  Sep 13 13:42:26.627: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0913 13:42:26.638177      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:42:27.638535      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:42:28.639280      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/13/24 13:42:28.644
  STEP: Verifying the service has paired with the endpoint @ 09/13/24 13:42:28.66
  E0913 13:42:29.639731      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:42:29.660: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 09/13/24 13:42:29.665
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 09/13/24 13:42:29.688
  STEP: Creating a configMap that should not be mutated @ 09/13/24 13:42:29.7
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 09/13/24 13:42:29.712
  STEP: Creating a configMap that should be mutated @ 09/13/24 13:42:29.727
  Sep 13 13:42:29.793: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-432" for this suite. @ 09/13/24 13:42:29.797
  STEP: Destroying namespace "webhook-markers-2092" for this suite. @ 09/13/24 13:42:29.812
• [3.721 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:103
  STEP: Creating a kubernetes client @ 09/13/24 13:42:29.819
  Sep 13 13:42:29.820: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename resourcequota @ 09/13/24 13:42:29.821
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:42:29.839
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:42:29.841
  STEP: Counting existing ResourceQuota @ 09/13/24 13:42:29.846
  E0913 13:42:30.639802      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:42:31.640758      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:42:32.641212      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:42:33.641301      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:42:34.641657      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 09/13/24 13:42:34.851
  STEP: Ensuring resource quota status is calculated @ 09/13/24 13:42:34.857
  E0913 13:42:35.642210      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:42:36.642436      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Service @ 09/13/24 13:42:36.861
  STEP: Creating a NodePort Service @ 09/13/24 13:42:36.884
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 09/13/24 13:42:36.921
  STEP: Ensuring resource quota status captures service creation @ 09/13/24 13:42:36.944
  E0913 13:42:37.643049      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:42:38.643315      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting Services @ 09/13/24 13:42:38.948
  STEP: Ensuring resource quota status released usage @ 09/13/24 13:42:38.991
  E0913 13:42:39.643554      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:42:40.643827      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:42:40.995: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7597" for this suite. @ 09/13/24 13:42:40.998
• [11.187 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:170
  STEP: Creating a kubernetes client @ 09/13/24 13:42:41.005
  Sep 13 13:42:41.005: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename configmap @ 09/13/24 13:42:41.007
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:42:41.033
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:42:41.035
  STEP: creating a ConfigMap @ 09/13/24 13:42:41.038
  STEP: fetching the ConfigMap @ 09/13/24 13:42:41.052
  STEP: patching the ConfigMap @ 09/13/24 13:42:41.055
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 09/13/24 13:42:41.06
  STEP: deleting the ConfigMap by collection with a label selector @ 09/13/24 13:42:41.064
  STEP: listing all ConfigMaps in test namespace @ 09/13/24 13:42:41.078
  Sep 13 13:42:41.080: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7061" for this suite. @ 09/13/24 13:42:41.083
• [0.083 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1015
  STEP: Creating a kubernetes client @ 09/13/24 13:42:41.089
  Sep 13 13:42:41.089: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename resourcequota @ 09/13/24 13:42:41.09
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:42:41.101
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:42:41.103
  STEP: Creating resourceQuota "e2e-rq-status-f4svl" @ 09/13/24 13:42:41.109
  Sep 13 13:42:41.117: INFO: Resource quota "e2e-rq-status-f4svl" reports spec: hard cpu limit of 500m
  Sep 13 13:42:41.117: INFO: Resource quota "e2e-rq-status-f4svl" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-f4svl" /status @ 09/13/24 13:42:41.117
  STEP: Confirm /status for "e2e-rq-status-f4svl" resourceQuota via watch @ 09/13/24 13:42:41.129
  Sep 13 13:42:41.130: INFO: observed resourceQuota "e2e-rq-status-f4svl" in namespace "resourcequota-5031" with hard status: v1.ResourceList(nil)
  Sep 13 13:42:41.130: INFO: Found resourceQuota "e2e-rq-status-f4svl" in namespace "resourcequota-5031" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  Sep 13 13:42:41.131: INFO: ResourceQuota "e2e-rq-status-f4svl" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 09/13/24 13:42:41.133
  Sep 13 13:42:41.139: INFO: Resource quota "e2e-rq-status-f4svl" reports spec: hard cpu limit of 1
  Sep 13 13:42:41.139: INFO: Resource quota "e2e-rq-status-f4svl" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-f4svl" /status @ 09/13/24 13:42:41.139
  STEP: Confirm /status for "e2e-rq-status-f4svl" resourceQuota via watch @ 09/13/24 13:42:41.154
  Sep 13 13:42:41.155: INFO: observed resourceQuota "e2e-rq-status-f4svl" in namespace "resourcequota-5031" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  Sep 13 13:42:41.155: INFO: Found resourceQuota "e2e-rq-status-f4svl" in namespace "resourcequota-5031" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  Sep 13 13:42:41.156: INFO: ResourceQuota "e2e-rq-status-f4svl" /status was patched
  STEP: Get "e2e-rq-status-f4svl" /status @ 09/13/24 13:42:41.156
  Sep 13 13:42:41.158: INFO: Resourcequota "e2e-rq-status-f4svl" reports status: hard cpu of 1
  Sep 13 13:42:41.159: INFO: Resourcequota "e2e-rq-status-f4svl" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-f4svl" /status before checking Spec is unchanged @ 09/13/24 13:42:41.161
  Sep 13 13:42:41.165: INFO: Resourcequota "e2e-rq-status-f4svl" reports status: hard cpu of 2
  Sep 13 13:42:41.165: INFO: Resourcequota "e2e-rq-status-f4svl" reports status: hard memory of 2Gi
  Sep 13 13:42:41.166: INFO: Found resourceQuota "e2e-rq-status-f4svl" in namespace "resourcequota-5031" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  Sep 13 13:42:41.169: INFO: ResourceQuota "e2e-rq-status-f4svl" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-f4svl", GenerateName:"", Namespace:"resourcequota-5031", SelfLink:"", UID:"3999cc59-244e-4ca2-b50d-199fa5365ee6", ResourceVersion:"750715", Generation:0, CreationTimestamp:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-f4svl"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0053d0150), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0053d0180), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0053d01b0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0913 13:42:41.644157      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:42:42.644743      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:42:43.645348      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:42:44.645514      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:42:45.646028      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:42:46.170: INFO: ResourceQuota "e2e-rq-status-f4svl" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-f4svl", GenerateName:"", Namespace:"resourcequota-5031", SelfLink:"", UID:"3999cc59-244e-4ca2-b50d-199fa5365ee6", ResourceVersion:"750715", Generation:0, CreationTimestamp:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-f4svl"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0053d0318), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0053d0348), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0053d0378), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0913 13:42:46.646784      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:42:47.646915      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:42:48.647178      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:42:49.647296      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:42:50.647484      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:42:51.171: INFO: ResourceQuota "e2e-rq-status-f4svl" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-f4svl", GenerateName:"", Namespace:"resourcequota-5031", SelfLink:"", UID:"3999cc59-244e-4ca2-b50d-199fa5365ee6", ResourceVersion:"750715", Generation:0, CreationTimestamp:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-f4svl"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00459f308), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00459f338), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00459f398), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0913 13:42:51.648305      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:42:52.648473      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:42:53.648913      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:42:54.649100      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:42:55.649516      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:42:56.171: INFO: ResourceQuota "e2e-rq-status-f4svl" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-f4svl", GenerateName:"", Namespace:"resourcequota-5031", SelfLink:"", UID:"3999cc59-244e-4ca2-b50d-199fa5365ee6", ResourceVersion:"750715", Generation:0, CreationTimestamp:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-f4svl"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0010495f0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001049620), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001049698), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0913 13:42:56.650645      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:42:57.651147      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:42:58.652086      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:42:59.653699      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:43:00.653518      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:43:01.171: INFO: ResourceQuota "e2e-rq-status-f4svl" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-f4svl", GenerateName:"", Namespace:"resourcequota-5031", SelfLink:"", UID:"3999cc59-244e-4ca2-b50d-199fa5365ee6", ResourceVersion:"750715", Generation:0, CreationTimestamp:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-f4svl"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0053d0600), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0053d0630), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0053d0660), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0913 13:43:01.654568      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:43:02.655478      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:43:03.655568      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:43:04.655825      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:43:05.655871      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:43:06.170: INFO: ResourceQuota "e2e-rq-status-f4svl" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-f4svl", GenerateName:"", Namespace:"resourcequota-5031", SelfLink:"", UID:"3999cc59-244e-4ca2-b50d-199fa5365ee6", ResourceVersion:"750715", Generation:0, CreationTimestamp:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-f4svl"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00459f5c0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00459f5f0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00459f620), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0913 13:43:06.656374      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:43:07.656415      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:43:08.656599      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:43:09.656760      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:43:10.656890      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:43:11.171: INFO: ResourceQuota "e2e-rq-status-f4svl" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-f4svl", GenerateName:"", Namespace:"resourcequota-5031", SelfLink:"", UID:"3999cc59-244e-4ca2-b50d-199fa5365ee6", ResourceVersion:"750715", Generation:0, CreationTimestamp:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-f4svl"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0010498a8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001049920), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001049950), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0913 13:43:11.657613      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:43:12.658618      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:43:13.659257      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:43:14.659334      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:43:15.659916      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:43:16.170: INFO: ResourceQuota "e2e-rq-status-f4svl" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-f4svl", GenerateName:"", Namespace:"resourcequota-5031", SelfLink:"", UID:"3999cc59-244e-4ca2-b50d-199fa5365ee6", ResourceVersion:"750715", Generation:0, CreationTimestamp:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-f4svl"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001049b30), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001049b60), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001049b90), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0913 13:43:16.660541      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:43:17.661538      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:43:18.661754      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:43:19.662129      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:43:20.662392      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:43:21.170: INFO: ResourceQuota "e2e-rq-status-f4svl" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-f4svl", GenerateName:"", Namespace:"resourcequota-5031", SelfLink:"", UID:"3999cc59-244e-4ca2-b50d-199fa5365ee6", ResourceVersion:"750715", Generation:0, CreationTimestamp:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-f4svl"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00459f8c0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00459f920), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00459f950), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0913 13:43:21.662609      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:43:22.663423      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:43:23.663558      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:43:24.663739      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:43:25.663861      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:43:26.170: INFO: ResourceQuota "e2e-rq-status-f4svl" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-f4svl", GenerateName:"", Namespace:"resourcequota-5031", SelfLink:"", UID:"3999cc59-244e-4ca2-b50d-199fa5365ee6", ResourceVersion:"750715", Generation:0, CreationTimestamp:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-f4svl"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00459fb18), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00459fb60), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00459fb90), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0913 13:43:26.664538      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:43:27.665298      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:43:28.665540      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:43:29.665683      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:43:30.666162      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:43:31.171: INFO: ResourceQuota "e2e-rq-status-f4svl" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-f4svl", GenerateName:"", Namespace:"resourcequota-5031", SelfLink:"", UID:"3999cc59-244e-4ca2-b50d-199fa5365ee6", ResourceVersion:"750715", Generation:0, CreationTimestamp:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-f4svl"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001049f68), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0017d8030), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0017d8078), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0913 13:43:31.666175      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:43:32.666792      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:43:33.667540      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:43:34.667766      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:43:35.667994      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:43:36.170: INFO: ResourceQuota "e2e-rq-status-f4svl" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-f4svl", GenerateName:"", Namespace:"resourcequota-5031", SelfLink:"", UID:"3999cc59-244e-4ca2-b50d-199fa5365ee6", ResourceVersion:"750715", Generation:0, CreationTimestamp:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-f4svl"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0017d8258), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0017d8288), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0017d8300), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0913 13:43:36.668911      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:43:37.669032      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:43:38.669893      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:43:39.670079      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:43:40.670421      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:43:41.171: INFO: ResourceQuota "e2e-rq-status-f4svl" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-f4svl", GenerateName:"", Namespace:"resourcequota-5031", SelfLink:"", UID:"3999cc59-244e-4ca2-b50d-199fa5365ee6", ResourceVersion:"750715", Generation:0, CreationTimestamp:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-f4svl"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00459fe60), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00459fe90), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00459fed8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0913 13:43:41.671301      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:43:42.671425      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:43:43.671674      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:43:44.671873      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:43:45.672045      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:43:46.170: INFO: ResourceQuota "e2e-rq-status-f4svl" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-f4svl", GenerateName:"", Namespace:"resourcequota-5031", SelfLink:"", UID:"3999cc59-244e-4ca2-b50d-199fa5365ee6", ResourceVersion:"750715", Generation:0, CreationTimestamp:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-f4svl"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0050200d8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005020120), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005020180), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0913 13:43:46.672909      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:43:47.673183      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:43:48.673381      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:43:49.673480      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:43:50.673648      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:43:51.171: INFO: ResourceQuota "e2e-rq-status-f4svl" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-f4svl", GenerateName:"", Namespace:"resourcequota-5031", SelfLink:"", UID:"3999cc59-244e-4ca2-b50d-199fa5365ee6", ResourceVersion:"750715", Generation:0, CreationTimestamp:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-f4svl"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0053d0978), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0053d09a8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0053d09f0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0913 13:43:51.674274      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:43:52.674346      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:43:53.674535      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:43:54.674633      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:43:55.675243      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:43:56.170: INFO: ResourceQuota "e2e-rq-status-f4svl" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-f4svl", GenerateName:"", Namespace:"resourcequota-5031", SelfLink:"", UID:"3999cc59-244e-4ca2-b50d-199fa5365ee6", ResourceVersion:"750715", Generation:0, CreationTimestamp:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-f4svl"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0053d0bb8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0053d0be8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0053d0c18), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0913 13:43:56.675925      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:43:57.677027      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:43:58.677091      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:43:59.677225      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:44:00.677341      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:44:01.170: INFO: ResourceQuota "e2e-rq-status-f4svl" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-f4svl", GenerateName:"", Namespace:"resourcequota-5031", SelfLink:"", UID:"3999cc59-244e-4ca2-b50d-199fa5365ee6", ResourceVersion:"750715", Generation:0, CreationTimestamp:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-f4svl"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0053d0d98), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0053d0de0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0053d0e28), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0913 13:44:01.678234      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:44:02.678638      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:44:03.679069      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:44:04.679284      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:44:05.679498      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:44:06.170: INFO: ResourceQuota "e2e-rq-status-f4svl" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-f4svl", GenerateName:"", Namespace:"resourcequota-5031", SelfLink:"", UID:"3999cc59-244e-4ca2-b50d-199fa5365ee6", ResourceVersion:"750715", Generation:0, CreationTimestamp:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-f4svl"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0053d0f48), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0053d0f78), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0053d0fa8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0913 13:44:06.680323      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:44:07.680915      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:44:08.681102      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:44:09.681344      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:44:10.681632      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:44:11.170: INFO: ResourceQuota "e2e-rq-status-f4svl" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-f4svl", GenerateName:"", Namespace:"resourcequota-5031", SelfLink:"", UID:"3999cc59-244e-4ca2-b50d-199fa5365ee6", ResourceVersion:"750715", Generation:0, CreationTimestamp:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-f4svl"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0017d88b8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0017d8900), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0017d8960), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0913 13:44:11.682409      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:44:12.683460      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:44:13.683663      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:44:14.685011      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:44:15.684767      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:44:16.171: INFO: ResourceQuota "e2e-rq-status-f4svl" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-f4svl", GenerateName:"", Namespace:"resourcequota-5031", SelfLink:"", UID:"3999cc59-244e-4ca2-b50d-199fa5365ee6", ResourceVersion:"750715", Generation:0, CreationTimestamp:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-f4svl"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0053d00d8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0053d0108), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0053d0138), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0913 13:44:16.685742      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:44:17.686065      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:44:18.686284      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:44:19.686517      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:44:20.686734      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:44:21.171: INFO: ResourceQuota "e2e-rq-status-f4svl" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-f4svl", GenerateName:"", Namespace:"resourcequota-5031", SelfLink:"", UID:"3999cc59-244e-4ca2-b50d-199fa5365ee6", ResourceVersion:"750715", Generation:0, CreationTimestamp:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-f4svl"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0017d8108), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0017d8150), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0017d8180), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0913 13:44:21.687104      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:44:22.687465      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:44:23.687695      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:44:24.687976      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:44:25.688923      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:44:26.170: INFO: ResourceQuota "e2e-rq-status-f4svl" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-f4svl", GenerateName:"", Namespace:"resourcequota-5031", SelfLink:"", UID:"3999cc59-244e-4ca2-b50d-199fa5365ee6", ResourceVersion:"750715", Generation:0, CreationTimestamp:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-f4svl"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0017d8408), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0017d8468), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0017d8510), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0913 13:44:26.690060      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:44:27.690575      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:44:28.690935      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:44:29.691148      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:44:30.691807      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:44:31.169: INFO: ResourceQuota "e2e-rq-status-f4svl" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-f4svl", GenerateName:"", Namespace:"resourcequota-5031", SelfLink:"", UID:"3999cc59-244e-4ca2-b50d-199fa5365ee6", ResourceVersion:"750715", Generation:0, CreationTimestamp:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-f4svl"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0017d88a0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0017d88d0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0017d8948), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0913 13:44:31.691949      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:44:32.692340      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:44:33.693000      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:44:34.693219      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:44:35.693503      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:44:36.171: INFO: ResourceQuota "e2e-rq-status-f4svl" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-f4svl", GenerateName:"", Namespace:"resourcequota-5031", SelfLink:"", UID:"3999cc59-244e-4ca2-b50d-199fa5365ee6", ResourceVersion:"750715", Generation:0, CreationTimestamp:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-f4svl"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0053d0330), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0053d0360), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0053d0390), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0913 13:44:36.693717      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:44:37.694071      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:44:38.694405      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:44:39.694463      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:44:40.694653      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:44:41.176: INFO: ResourceQuota "e2e-rq-status-f4svl" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-f4svl", GenerateName:"", Namespace:"resourcequota-5031", SelfLink:"", UID:"3999cc59-244e-4ca2-b50d-199fa5365ee6", ResourceVersion:"750715", Generation:0, CreationTimestamp:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-f4svl"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0017d8c00), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0017d8c78), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0017d8cc0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0913 13:44:41.695513      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:44:42.695618      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:44:43.695841      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:44:44.696446      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:44:45.696824      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:44:46.171: INFO: ResourceQuota "e2e-rq-status-f4svl" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-f4svl", GenerateName:"", Namespace:"resourcequota-5031", SelfLink:"", UID:"3999cc59-244e-4ca2-b50d-199fa5365ee6", ResourceVersion:"750715", Generation:0, CreationTimestamp:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-f4svl"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0017d8ed0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0017d8f48), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0017d8f90), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0913 13:44:46.697125      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:44:47.697533      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:44:48.698023      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:44:49.698255      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:44:50.698511      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:44:51.171: INFO: ResourceQuota "e2e-rq-status-f4svl" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-f4svl", GenerateName:"", Namespace:"resourcequota-5031", SelfLink:"", UID:"3999cc59-244e-4ca2-b50d-199fa5365ee6", ResourceVersion:"750715", Generation:0, CreationTimestamp:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-f4svl"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0017d9278), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0017d92c0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0017d9320), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0913 13:44:51.699208      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:44:52.699802      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:44:53.700600      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:44:54.700867      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:44:55.701651      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:44:56.171: INFO: ResourceQuota "e2e-rq-status-f4svl" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-f4svl", GenerateName:"", Namespace:"resourcequota-5031", SelfLink:"", UID:"3999cc59-244e-4ca2-b50d-199fa5365ee6", ResourceVersion:"750715", Generation:0, CreationTimestamp:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-f4svl"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0017d9620), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0017d9698), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0017d96c8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0913 13:44:56.702054      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:44:57.702626      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:44:58.702698      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:44:59.703110      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:45:00.703270      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:45:01.171: INFO: ResourceQuota "e2e-rq-status-f4svl" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-f4svl", GenerateName:"", Namespace:"resourcequota-5031", SelfLink:"", UID:"3999cc59-244e-4ca2-b50d-199fa5365ee6", ResourceVersion:"750715", Generation:0, CreationTimestamp:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-f4svl"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0017d9980), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0017d99e0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0017d9a58), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0913 13:45:01.703759      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:45:02.703898      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:45:03.703995      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:45:04.704247      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:45:05.704285      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:45:06.170: INFO: ResourceQuota "e2e-rq-status-f4svl" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-f4svl", GenerateName:"", Namespace:"resourcequota-5031", SelfLink:"", UID:"3999cc59-244e-4ca2-b50d-199fa5365ee6", ResourceVersion:"750715", Generation:0, CreationTimestamp:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-f4svl"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0017d9d40), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0017d9de8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0017d9e18), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0913 13:45:06.704993      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:45:07.705148      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:45:08.705338      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:45:09.705497      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:45:10.705599      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:45:11.171: INFO: ResourceQuota "e2e-rq-status-f4svl" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-f4svl", GenerateName:"", Namespace:"resourcequota-5031", SelfLink:"", UID:"3999cc59-244e-4ca2-b50d-199fa5365ee6", ResourceVersion:"750715", Generation:0, CreationTimestamp:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-f4svl"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0050200d8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005020120), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005020180), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0913 13:45:11.706383      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:45:12.706478      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:45:13.706655      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:45:14.707031      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:45:15.707229      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:45:16.171: INFO: ResourceQuota "e2e-rq-status-f4svl" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-f4svl", GenerateName:"", Namespace:"resourcequota-5031", SelfLink:"", UID:"3999cc59-244e-4ca2-b50d-199fa5365ee6", ResourceVersion:"750715", Generation:0, CreationTimestamp:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-f4svl"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0053d0708), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0053d0738), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0053d0780), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0913 13:45:16.708003      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:45:17.708828      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:45:18.708817      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:45:19.709062      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:45:20.709170      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:45:21.171: INFO: ResourceQuota "e2e-rq-status-f4svl" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-f4svl", GenerateName:"", Namespace:"resourcequota-5031", SelfLink:"", UID:"3999cc59-244e-4ca2-b50d-199fa5365ee6", ResourceVersion:"750715", Generation:0, CreationTimestamp:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-f4svl"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0050203a8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0050203d8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005020420), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0913 13:45:21.709266      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:45:22.709311      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:45:23.709586      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:45:24.710225      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:45:25.711633      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:45:26.170: INFO: ResourceQuota "e2e-rq-status-f4svl" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-f4svl", GenerateName:"", Namespace:"resourcequota-5031", SelfLink:"", UID:"3999cc59-244e-4ca2-b50d-199fa5365ee6", ResourceVersion:"750715", Generation:0, CreationTimestamp:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-f4svl"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0053d0918), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0053d0960), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0053d0990), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0913 13:45:26.711661      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:45:27.711940      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:45:28.712033      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:45:29.712383      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:45:30.712878      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:45:31.170: INFO: ResourceQuota "e2e-rq-status-f4svl" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-f4svl", GenerateName:"", Namespace:"resourcequota-5031", SelfLink:"", UID:"3999cc59-244e-4ca2-b50d-199fa5365ee6", ResourceVersion:"750715", Generation:0, CreationTimestamp:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-f4svl"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e94378), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e943a8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e943d8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0913 13:45:31.713809      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:45:32.713928      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:45:33.714395      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:45:34.714511      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:45:35.714688      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:45:36.171: INFO: ResourceQuota "e2e-rq-status-f4svl" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-f4svl", GenerateName:"", Namespace:"resourcequota-5031", SelfLink:"", UID:"3999cc59-244e-4ca2-b50d-199fa5365ee6", ResourceVersion:"750715", Generation:0, CreationTimestamp:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-f4svl"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e94528), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e94588), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e945b8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0913 13:45:36.714810      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:45:37.715137      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:45:38.715244      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:45:39.715346      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:45:40.715578      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:45:41.171: INFO: ResourceQuota "e2e-rq-status-f4svl" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-f4svl", GenerateName:"", Namespace:"resourcequota-5031", SelfLink:"", UID:"3999cc59-244e-4ca2-b50d-199fa5365ee6", ResourceVersion:"750715", Generation:0, CreationTimestamp:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-f4svl"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0053d0af8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0053d0b70), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0053d0bb8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0913 13:45:41.716376      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:45:42.716514      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:45:43.716737      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:45:44.716822      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:45:45.717118      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:45:46.169: INFO: ResourceQuota "e2e-rq-status-f4svl" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-f4svl", GenerateName:"", Namespace:"resourcequota-5031", SelfLink:"", UID:"3999cc59-244e-4ca2-b50d-199fa5365ee6", ResourceVersion:"750715", Generation:0, CreationTimestamp:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-f4svl"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0050207b0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0050207e0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005020828), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0913 13:45:46.717281      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:45:47.717963      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:45:48.718276      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:45:49.719103      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:45:50.719376      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:45:51.171: INFO: ResourceQuota "e2e-rq-status-f4svl" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-f4svl", GenerateName:"", Namespace:"resourcequota-5031", SelfLink:"", UID:"3999cc59-244e-4ca2-b50d-199fa5365ee6", ResourceVersion:"750715", Generation:0, CreationTimestamp:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-f4svl"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e94828), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e94858), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e948b8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0913 13:45:51.720375      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:45:52.720503      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:45:53.720989      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:45:54.721258      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:45:55.721421      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:45:56.170: INFO: ResourceQuota "e2e-rq-status-f4svl" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-f4svl", GenerateName:"", Namespace:"resourcequota-5031", SelfLink:"", UID:"3999cc59-244e-4ca2-b50d-199fa5365ee6", ResourceVersion:"750715", Generation:0, CreationTimestamp:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-f4svl"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e94a98), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e94af8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e94b28), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0913 13:45:56.721972      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:45:57.722403      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:45:58.722712      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:45:59.723648      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:46:00.723862      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:46:01.171: INFO: ResourceQuota "e2e-rq-status-f4svl" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-f4svl", GenerateName:"", Namespace:"resourcequota-5031", SelfLink:"", UID:"3999cc59-244e-4ca2-b50d-199fa5365ee6", ResourceVersion:"750715", Generation:0, CreationTimestamp:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-f4svl"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005020ac8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005020b10), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005020b40), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0913 13:46:01.724036      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:46:02.724557      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:46:03.724948      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:46:04.725284      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:46:05.725475      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:46:06.171: INFO: ResourceQuota "e2e-rq-status-f4svl" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-f4svl", GenerateName:"", Namespace:"resourcequota-5031", SelfLink:"", UID:"3999cc59-244e-4ca2-b50d-199fa5365ee6", ResourceVersion:"750715", Generation:0, CreationTimestamp:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-f4svl"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0053d0d68), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0053d0d98), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0053d0de0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0913 13:46:06.726052      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:46:07.726439      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:46:08.726635      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:46:09.726836      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:46:10.727656      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:46:11.172: INFO: ResourceQuota "e2e-rq-status-f4svl" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-f4svl", GenerateName:"", Namespace:"resourcequota-5031", SelfLink:"", UID:"3999cc59-244e-4ca2-b50d-199fa5365ee6", ResourceVersion:"750715", Generation:0, CreationTimestamp:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-f4svl"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0053d0f60), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0053d0f90), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0053d0fc0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0913 13:46:11.728372      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:46:12.729416      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:46:13.729828      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:46:14.730139      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:46:15.731191      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:46:16.171: INFO: ResourceQuota "e2e-rq-status-f4svl" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-f4svl", GenerateName:"", Namespace:"resourcequota-5031", SelfLink:"", UID:"3999cc59-244e-4ca2-b50d-199fa5365ee6", ResourceVersion:"750715", Generation:0, CreationTimestamp:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-f4svl"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005020090), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0050200c0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005020108), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0913 13:46:16.731677      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:46:17.732416      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:46:18.732604      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:46:19.732882      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:46:20.733106      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:46:21.170: INFO: ResourceQuota "e2e-rq-status-f4svl" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-f4svl", GenerateName:"", Namespace:"resourcequota-5031", SelfLink:"", UID:"3999cc59-244e-4ca2-b50d-199fa5365ee6", ResourceVersion:"750715", Generation:0, CreationTimestamp:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-f4svl"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0053d00f0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0053d0120), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0053d0150), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0913 13:46:21.733343      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:46:22.733519      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:46:23.733833      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:46:24.734017      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:46:25.734229      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:46:26.171: INFO: ResourceQuota "e2e-rq-status-f4svl" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-f4svl", GenerateName:"", Namespace:"resourcequota-5031", SelfLink:"", UID:"3999cc59-244e-4ca2-b50d-199fa5365ee6", ResourceVersion:"750715", Generation:0, CreationTimestamp:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-f4svl"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0053d02a0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0053d0300), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0053d0330), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0913 13:46:26.735186      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:46:27.735940      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:46:28.736361      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:46:29.736543      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:46:30.737041      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:46:31.170: INFO: ResourceQuota "e2e-rq-status-f4svl" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-f4svl", GenerateName:"", Namespace:"resourcequota-5031", SelfLink:"", UID:"3999cc59-244e-4ca2-b50d-199fa5365ee6", ResourceVersion:"750715", Generation:0, CreationTimestamp:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-f4svl"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e941c8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e94228), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e94258), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0913 13:46:31.738033      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:46:32.738362      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:46:33.738380      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:46:34.739094      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:46:35.739317      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:46:36.170: INFO: ResourceQuota "e2e-rq-status-f4svl" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-f4svl", GenerateName:"", Namespace:"resourcequota-5031", SelfLink:"", UID:"3999cc59-244e-4ca2-b50d-199fa5365ee6", ResourceVersion:"750715", Generation:0, CreationTimestamp:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-f4svl"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e943c0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e943f0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e94420), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0913 13:46:36.739901      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:46:37.740780      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:46:38.740846      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:46:39.740956      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:46:40.741087      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:46:41.170: INFO: ResourceQuota "e2e-rq-status-f4svl" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-f4svl", GenerateName:"", Namespace:"resourcequota-5031", SelfLink:"", UID:"3999cc59-244e-4ca2-b50d-199fa5365ee6", ResourceVersion:"750715", Generation:0, CreationTimestamp:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-f4svl"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e945d0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e94630), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e94678), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0913 13:46:41.742237      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:46:42.742451      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:46:43.742676      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:46:44.742805      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:46:45.742899      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:46:46.170: INFO: ResourceQuota "e2e-rq-status-f4svl" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-f4svl", GenerateName:"", Namespace:"resourcequota-5031", SelfLink:"", UID:"3999cc59-244e-4ca2-b50d-199fa5365ee6", ResourceVersion:"750715", Generation:0, CreationTimestamp:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-f4svl"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e947f8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e94828), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e94858), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0913 13:46:46.743262      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:46:47.743742      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:46:48.744783      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:46:49.745525      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:46:50.745784      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:46:51.171: INFO: ResourceQuota "e2e-rq-status-f4svl" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-f4svl", GenerateName:"", Namespace:"resourcequota-5031", SelfLink:"", UID:"3999cc59-244e-4ca2-b50d-199fa5365ee6", ResourceVersion:"750715", Generation:0, CreationTimestamp:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-f4svl"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005020408), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005020438), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005020468), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0913 13:46:51.746328      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:46:52.746527      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:46:53.746873      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:46:54.747132      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:46:55.747344      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:46:56.170: INFO: ResourceQuota "e2e-rq-status-f4svl" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-f4svl", GenerateName:"", Namespace:"resourcequota-5031", SelfLink:"", UID:"3999cc59-244e-4ca2-b50d-199fa5365ee6", ResourceVersion:"750715", Generation:0, CreationTimestamp:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-f4svl"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0050205e8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005020618), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0050206c0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0913 13:46:56.748412      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:46:57.748596      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:46:58.748829      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:46:59.748881      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:47:00.748991      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:47:01.171: INFO: ResourceQuota "e2e-rq-status-f4svl" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-f4svl", GenerateName:"", Namespace:"resourcequota-5031", SelfLink:"", UID:"3999cc59-244e-4ca2-b50d-199fa5365ee6", ResourceVersion:"750715", Generation:0, CreationTimestamp:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-f4svl"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e94b58), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e94b88), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e94bd0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0913 13:47:01.749741      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:47:02.750708      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:47:03.750891      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:47:04.751104      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:47:05.751695      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:47:06.171: INFO: ResourceQuota "e2e-rq-status-f4svl" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-f4svl", GenerateName:"", Namespace:"resourcequota-5031", SelfLink:"", UID:"3999cc59-244e-4ca2-b50d-199fa5365ee6", ResourceVersion:"750715", Generation:0, CreationTimestamp:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-f4svl"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e94e28), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e94e70), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e94ea0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0913 13:47:06.751998      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:47:07.752274      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:47:08.753058      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:47:09.753597      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:47:10.753703      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:47:11.171: INFO: ResourceQuota "e2e-rq-status-f4svl" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-f4svl", GenerateName:"", Namespace:"resourcequota-5031", SelfLink:"", UID:"3999cc59-244e-4ca2-b50d-199fa5365ee6", ResourceVersion:"750715", Generation:0, CreationTimestamp:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-f4svl"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e94ff0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e95020), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e95068), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0913 13:47:11.754095      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:47:12.755126      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:47:13.755457      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:47:14.755652      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:47:15.756023      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:47:16.170: INFO: ResourceQuota "e2e-rq-status-f4svl" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-f4svl", GenerateName:"", Namespace:"resourcequota-5031", SelfLink:"", UID:"3999cc59-244e-4ca2-b50d-199fa5365ee6", ResourceVersion:"750715", Generation:0, CreationTimestamp:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-f4svl"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e95248), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e95278), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004e952a8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0913 13:47:16.756527      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:47:17.756593      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:47:18.756768      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:47:19.757836      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:47:20.758100      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:47:21.173: INFO: ResourceQuota "e2e-rq-status-f4svl" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-f4svl", GenerateName:"", Namespace:"resourcequota-5031", SelfLink:"", UID:"3999cc59-244e-4ca2-b50d-199fa5365ee6", ResourceVersion:"750715", Generation:0, CreationTimestamp:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-f4svl"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005020918), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005020960), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005020990), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0913 13:47:21.759156      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:47:22.759831      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:47:23.760385      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:47:24.760713      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:47:25.760941      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:47:26.170: INFO: ResourceQuota "e2e-rq-status-f4svl" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-f4svl", GenerateName:"", Namespace:"resourcequota-5031", SelfLink:"", UID:"3999cc59-244e-4ca2-b50d-199fa5365ee6", ResourceVersion:"750715", Generation:0, CreationTimestamp:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-f4svl"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0053d07b0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0053d07e0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0053d0828), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0913 13:47:26.761095      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:47:27.761553      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:47:28.761776      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:47:29.767870      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:47:30.768647      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:47:31.171: INFO: ResourceQuota "e2e-rq-status-f4svl" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-f4svl", GenerateName:"", Namespace:"resourcequota-5031", SelfLink:"", UID:"3999cc59-244e-4ca2-b50d-199fa5365ee6", ResourceVersion:"750715", Generation:0, CreationTimestamp:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-f4svl"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0053d09d8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0053d0a08), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.September, 13, 13, 42, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0053d0a38), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0913 13:47:31.769631      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:47:32.770070      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:47:33.770209      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:47:34.770305      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:47:35.770423      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:47:36.170: INFO: ResourceQuota "e2e-rq-status-f4svl" Spec was unchanged and /status reset
  Sep 13 13:47:36.170: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5031" for this suite. @ 09/13/24 13:47:36.174
• [295.097 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:110
  STEP: Creating a kubernetes client @ 09/13/24 13:47:36.186
  Sep 13 13:47:36.186: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename projected @ 09/13/24 13:47:36.187
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:47:36.202
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:47:36.205
  STEP: Creating configMap with name projected-configmap-test-volume-map-3d5dfbed-985c-4f55-b878-8a0f324fb959 @ 09/13/24 13:47:36.207
  STEP: Creating a pod to test consume configMaps @ 09/13/24 13:47:36.214
  E0913 13:47:36.771093      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:47:37.771284      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:47:38.771547      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:47:39.771696      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/13/24 13:47:40.231
  Sep 13 13:47:40.233: INFO: Trying to get logs from node cncf-3 pod pod-projected-configmaps-e1a55f42-3084-41bf-8a18-a85e44a6d6c5 container agnhost-container: <nil>
  STEP: delete the pod @ 09/13/24 13:47:40.246
  Sep 13 13:47:40.265: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1747" for this suite. @ 09/13/24 13:47:40.269
• [4.090 seconds]
------------------------------
SSS
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 09/13/24 13:47:40.276
  Sep 13 13:47:40.276: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename events @ 09/13/24 13:47:40.277
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:47:40.297
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:47:40.299
  STEP: Create set of events @ 09/13/24 13:47:40.301
  STEP: get a list of Events with a label in the current namespace @ 09/13/24 13:47:40.318
  STEP: delete a list of events @ 09/13/24 13:47:40.32
  Sep 13 13:47:40.320: INFO: requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 09/13/24 13:47:40.334
  Sep 13 13:47:40.336: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-9477" for this suite. @ 09/13/24 13:47:40.339
• [0.074 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:104
  STEP: Creating a kubernetes client @ 09/13/24 13:47:40.351
  Sep 13 13:47:40.351: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename replication-controller @ 09/13/24 13:47:40.352
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:47:40.373
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:47:40.375
  STEP: Given a ReplicationController is created @ 09/13/24 13:47:40.378
  STEP: When the matched label of one of its pods change @ 09/13/24 13:47:40.383
  Sep 13 13:47:40.386: INFO: Pod name pod-release: Found 0 pods out of 1
  E0913 13:47:40.771806      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:47:41.772435      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:47:42.772493      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:47:43.772998      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:47:44.773356      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:47:45.390: INFO: Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 09/13/24 13:47:45.398
  E0913 13:47:45.774475      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:47:46.405: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-7890" for this suite. @ 09/13/24 13:47:46.409
• [6.065 seconds]
------------------------------
SS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:887
  STEP: Creating a kubernetes client @ 09/13/24 13:47:46.416
  Sep 13 13:47:46.416: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename kubectl @ 09/13/24 13:47:46.417
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:47:46.438
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:47:46.44
  STEP: validating api versions @ 09/13/24 13:47:46.443
  Sep 13 13:47:46.443: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=kubectl-6592 api-versions'
  Sep 13 13:47:46.499: INFO: stderr: ""
  Sep 13 13:47:46.499: INFO: stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\nceph.rook.io/v1\ncertificates.k8s.io/v1\ncilium.io/v2\ncilium.io/v2alpha1\ncoordination.k8s.io/v1\ncore.strimzi.io/v1beta2\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nextensions.istio.io/v1alpha1\nflowcontrol.apiserver.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1beta3\nkafka.strimzi.io/v1alpha1\nkafka.strimzi.io/v1beta1\nkafka.strimzi.io/v1beta2\nnetworking.istio.io/v1\nnetworking.istio.io/v1alpha3\nnetworking.istio.io/v1beta1\nnetworking.k8s.io/v1\nnode.k8s.io/v1\nobjectbucket.io/v1alpha1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nsecurity.istio.io/v1\nsecurity.istio.io/v1beta1\nstorage.k8s.io/v1\ntelemetry.istio.io/v1\ntelemetry.istio.io/v1alpha1\nv1\n"
  Sep 13 13:47:46.499: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6592" for this suite. @ 09/13/24 13:47:46.503
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:62
  STEP: Creating a kubernetes client @ 09/13/24 13:47:46.517
  Sep 13 13:47:46.517: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename limitrange @ 09/13/24 13:47:46.519
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:47:46.533
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:47:46.535
  STEP: Creating a LimitRange @ 09/13/24 13:47:46.543
  STEP: Setting up watch @ 09/13/24 13:47:46.543
  STEP: Submitting a LimitRange @ 09/13/24 13:47:46.645
  STEP: Verifying LimitRange creation was observed @ 09/13/24 13:47:46.654
  STEP: Fetching the LimitRange to ensure it has proper values @ 09/13/24 13:47:46.654
  Sep 13 13:47:46.656: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  Sep 13 13:47:46.656: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 09/13/24 13:47:46.656
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 09/13/24 13:47:46.663
  Sep 13 13:47:46.665: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  Sep 13 13:47:46.665: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 09/13/24 13:47:46.665
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 09/13/24 13:47:46.675
  Sep 13 13:47:46.678: INFO: Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  Sep 13 13:47:46.679: INFO: Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 09/13/24 13:47:46.679
  STEP: Failing to create a Pod with more than max resources @ 09/13/24 13:47:46.681
  STEP: Updating a LimitRange @ 09/13/24 13:47:46.683
  STEP: Verifying LimitRange updating is effective @ 09/13/24 13:47:46.69
  E0913 13:47:46.775421      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:47:47.775896      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Pod with less than former min resources @ 09/13/24 13:47:48.694
  STEP: Failing to create a Pod with more than max resources @ 09/13/24 13:47:48.708
  STEP: Deleting a LimitRange @ 09/13/24 13:47:48.711
  STEP: Verifying the LimitRange was deleted @ 09/13/24 13:47:48.721
  E0913 13:47:48.776223      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:47:49.776811      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:47:50.777790      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:47:51.778440      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:47:52.779138      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:47:53.725: INFO: limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 09/13/24 13:47:53.725
  Sep 13 13:47:53.735: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-3840" for this suite. @ 09/13/24 13:47:53.74
• [7.241 seconds]
------------------------------
SS
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:407
  STEP: Creating a kubernetes client @ 09/13/24 13:47:53.757
  Sep 13 13:47:53.757: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename dns @ 09/13/24 13:47:53.758
  E0913 13:47:53.779207      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:47:53.822
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:47:53.826
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 09/13/24 13:47:53.829
  Sep 13 13:47:53.839: INFO: Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-2443  ffcb1b96-5609-4ff1-b9b5-6bb2e8ece928 752307 0 2024-09-13 13:47:53 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2024-09-13 13:47:53 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-s7zsx,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,ClusterTrustBundle:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.47,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-s7zsx,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},},}
  E0913 13:47:54.779380      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:47:55.779794      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Verifying customized DNS suffix list is configured on pod... @ 09/13/24 13:47:55.852
  Sep 13 13:47:55.852: INFO: ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-2443 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 13 13:47:55.853: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  Sep 13 13:47:55.856: INFO: ExecWithOptions: Clientset creation
  Sep 13 13:47:55.856: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/dns-2443/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  STEP: Verifying customized DNS server is configured on pod... @ 09/13/24 13:47:55.928
  Sep 13 13:47:55.929: INFO: ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-2443 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 13 13:47:55.929: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  Sep 13 13:47:55.930: INFO: ExecWithOptions: Clientset creation
  Sep 13 13:47:55.930: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/dns-2443/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Sep 13 13:47:55.989: INFO: Deleting pod test-dns-nameservers...
  Sep 13 13:47:56.002: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-2443" for this suite. @ 09/13/24 13:47:56.011
• [2.259 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:371
  STEP: Creating a kubernetes client @ 09/13/24 13:47:56.021
  Sep 13 13:47:56.021: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename webhook @ 09/13/24 13:47:56.023
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:47:56.05
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:47:56.052
  STEP: Setting up server cert @ 09/13/24 13:47:56.093
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/13/24 13:47:56.394
  STEP: Deploying the webhook pod @ 09/13/24 13:47:56.403
  STEP: Wait for the deployment to be ready @ 09/13/24 13:47:56.429
  Sep 13 13:47:56.436: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0913 13:47:56.780640      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:47:57.781046      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/13/24 13:47:58.444
  STEP: Verifying the service has paired with the endpoint @ 09/13/24 13:47:58.456
  E0913 13:47:58.781098      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:47:59.456: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 09/13/24 13:47:59.462
  STEP: Registering slow webhook via the AdmissionRegistration API @ 09/13/24 13:47:59.462
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 09/13/24 13:47:59.483
  E0913 13:47:59.781166      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 09/13/24 13:48:00.495
  STEP: Registering slow webhook via the AdmissionRegistration API @ 09/13/24 13:48:00.495
  E0913 13:48:00.781379      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is longer than webhook latency @ 09/13/24 13:48:01.54
  STEP: Registering slow webhook via the AdmissionRegistration API @ 09/13/24 13:48:01.54
  E0913 13:48:01.781409      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:48:02.781478      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:48:03.781821      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:48:04.782032      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:48:05.782287      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 09/13/24 13:48:06.596
  STEP: Registering slow webhook via the AdmissionRegistration API @ 09/13/24 13:48:06.596
  E0913 13:48:06.782335      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:48:07.782416      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:48:08.782737      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:48:09.782925      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:48:10.783258      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:48:11.708: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4616" for this suite. @ 09/13/24 13:48:11.712
  STEP: Destroying namespace "webhook-markers-2149" for this suite. @ 09/13/24 13:48:11.719
• [15.703 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:505
  STEP: Creating a kubernetes client @ 09/13/24 13:48:11.723
  Sep 13 13:48:11.723: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename configmap @ 09/13/24 13:48:11.724
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:48:11.74
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:48:11.742
  E0913 13:48:11.784691      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:48:11.786: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2432" for this suite. @ 09/13/24 13:48:11.792
• [0.079 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 09/13/24 13:48:11.804
  Sep 13 13:48:11.804: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename projected @ 09/13/24 13:48:11.805
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:48:11.838
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:48:11.843
  STEP: Creating configMap with name configmap-projected-all-test-volume-1fee5e06-afb1-4658-b2c8-c7417e5dffa9 @ 09/13/24 13:48:11.847
  STEP: Creating secret with name secret-projected-all-test-volume-aaf65c9b-5c3f-48c2-98b6-1399aea6e84c @ 09/13/24 13:48:11.857
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 09/13/24 13:48:11.862
  E0913 13:48:12.785440      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:48:13.787104      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:48:14.787478      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:48:15.787775      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/13/24 13:48:15.891
  Sep 13 13:48:15.893: INFO: Trying to get logs from node cncf-3 pod projected-volume-e131d822-6d0d-481d-ad8c-805be6297017 container projected-all-volume-test: <nil>
  STEP: delete the pod @ 09/13/24 13:48:15.898
  Sep 13 13:48:15.914: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1257" for this suite. @ 09/13/24 13:48:15.918
• [4.121 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:349
  STEP: Creating a kubernetes client @ 09/13/24 13:48:15.925
  Sep 13 13:48:15.925: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename security-context-test @ 09/13/24 13:48:15.926
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:48:15.947
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:48:15.949
  E0913 13:48:16.788404      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:48:17.788566      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:48:18.789415      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:48:19.789745      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:48:19.973: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-1953" for this suite. @ 09/13/24 13:48:19.977
• [4.061 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:350
  STEP: Creating a kubernetes client @ 09/13/24 13:48:19.988
  Sep 13 13:48:19.988: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename field-validation @ 09/13/24 13:48:19.989
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:48:20.007
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:48:20.01
  Sep 13 13:48:20.013: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  W0913 13:48:20.014610      23 field_validation.go:423] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc000b11a10 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  E0913 13:48:20.789879      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:48:21.790052      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  W0913 13:48:22.555951      23 warnings.go:70] unknown field "alpha"
  W0913 13:48:22.555973      23 warnings.go:70] unknown field "beta"
  W0913 13:48:22.555976      23 warnings.go:70] unknown field "delta"
  W0913 13:48:22.555980      23 warnings.go:70] unknown field "epsilon"
  W0913 13:48:22.555983      23 warnings.go:70] unknown field "gamma"
  E0913 13:48:22.790390      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:48:23.084: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-1705" for this suite. @ 09/13/24 13:48:23.087
• [3.105 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 09/13/24 13:48:23.094
  Sep 13 13:48:23.094: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename init-container @ 09/13/24 13:48:23.095
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:48:23.111
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:48:23.113
  STEP: creating the pod @ 09/13/24 13:48:23.115
  Sep 13 13:48:23.115: INFO: PodSpec: initContainers in spec.initContainers
  E0913 13:48:23.790761      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:48:24.791331      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:48:25.791786      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:48:26.791829      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:48:26.919: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-101" for this suite. @ 09/13/24 13:48:26.923
• [3.835 seconds]
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:47
  STEP: Creating a kubernetes client @ 09/13/24 13:48:26.93
  Sep 13 13:48:26.930: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename var-expansion @ 09/13/24 13:48:26.931
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:48:26.951
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:48:26.953
  STEP: Creating a pod to test env composition @ 09/13/24 13:48:26.956
  E0913 13:48:27.792871      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:48:28.793123      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:48:29.793316      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:48:30.793546      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/13/24 13:48:30.978
  Sep 13 13:48:30.981: INFO: Trying to get logs from node cncf-3 pod var-expansion-a00a1337-99b7-45eb-8901-571348d1b55f container dapi-container: <nil>
  STEP: delete the pod @ 09/13/24 13:48:30.985
  Sep 13 13:48:31.009: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-433" for this suite. @ 09/13/24 13:48:31.013
• [4.089 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support FlowSchema API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:270
  STEP: Creating a kubernetes client @ 09/13/24 13:48:31.019
  Sep 13 13:48:31.019: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename apf @ 09/13/24 13:48:31.021
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:48:31.031
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:48:31.033
  STEP: getting /apis @ 09/13/24 13:48:31.037
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 09/13/24 13:48:31.043
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 09/13/24 13:48:31.044
  STEP: creating @ 09/13/24 13:48:31.045
  STEP: getting @ 09/13/24 13:48:31.07
  STEP: listing @ 09/13/24 13:48:31.072
  STEP: watching @ 09/13/24 13:48:31.074
  Sep 13 13:48:31.074: INFO: starting watch
  STEP: patching @ 09/13/24 13:48:31.075
  STEP: updating @ 09/13/24 13:48:31.111
  Sep 13 13:48:31.120: INFO: waiting for watch events with expected annotations
  Sep 13 13:48:31.120: INFO: missing expected annotations, waiting: map[string]string(nil)
  STEP: getting /status @ 09/13/24 13:48:31.12
  STEP: patching /status @ 09/13/24 13:48:31.123
  STEP: updating /status @ 09/13/24 13:48:31.137
  STEP: deleting @ 09/13/24 13:48:31.174
  STEP: deleting a collection @ 09/13/24 13:48:31.192
  Sep 13 13:48:31.213: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-803" for this suite. @ 09/13/24 13:48:31.217
• [0.206 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:818
  STEP: Creating a kubernetes client @ 09/13/24 13:48:31.231
  Sep 13 13:48:31.232: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename gc @ 09/13/24 13:48:31.234
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:48:31.25
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:48:31.254
  Sep 13 13:48:31.326: INFO: pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"2c5f8451-201f-4f35-aab3-c8c5e5231842", Controller:(*bool)(0xc00a401ada), BlockOwnerDeletion:(*bool)(0xc00a401adb)}}
  Sep 13 13:48:31.336: INFO: pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"05cc21a0-9522-41fd-bd90-6e81f7d4260e", Controller:(*bool)(0xc001c1ea82), BlockOwnerDeletion:(*bool)(0xc001c1ea83)}}
  Sep 13 13:48:31.349: INFO: pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"ebdc1a6c-7035-4e6c-9ed4-4781e9255cd0", Controller:(*bool)(0xc001c1ed3a), BlockOwnerDeletion:(*bool)(0xc001c1ed3b)}}
  E0913 13:48:31.793887      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:48:32.794391      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:48:33.794729      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:48:34.795051      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:48:35.795422      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:48:36.356: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-1857" for this suite. @ 09/13/24 13:48:36.361
• [5.139 seconds]
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 09/13/24 13:48:36.37
  Sep 13 13:48:36.370: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename projected @ 09/13/24 13:48:36.371
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:48:36.382
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:48:36.384
  STEP: Creating secret with name projected-secret-test-2c55c2b0-0027-4961-a5e9-155339be32a8 @ 09/13/24 13:48:36.387
  STEP: Creating a pod to test consume secrets @ 09/13/24 13:48:36.392
  E0913 13:48:36.795543      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:48:37.796084      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:48:38.796912      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:48:39.796956      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/13/24 13:48:40.414
  Sep 13 13:48:40.416: INFO: Trying to get logs from node cncf-3 pod pod-projected-secrets-d0e58501-4796-489f-b599-92a65c8d60fc container secret-volume-test: <nil>
  STEP: delete the pod @ 09/13/24 13:48:40.42
  Sep 13 13:48:40.447: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4871" for this suite. @ 09/13/24 13:48:40.451
• [4.090 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Servers with support for API chunking should return chunks of results for list calls [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:83
  STEP: Creating a kubernetes client @ 09/13/24 13:48:40.46
  Sep 13 13:48:40.460: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename chunking @ 09/13/24 13:48:40.462
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:48:40.473
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:48:40.475
  STEP: creating a large number of resources @ 09/13/24 13:48:40.479
  E0913 13:48:40.797422      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:48:41.798384      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:48:42.799006      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:48:43.799658      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:48:44.800184      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:48:45.800373      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:48:46.801391      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:48:47.801611      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:48:48.801749      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:48:49.802475      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:48:50.802495      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:48:51.805041      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:48:52.804136      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:48:53.804456      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:48:54.804685      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:48:55.805185      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:48:56.805988      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:48:57.806101      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving those results in paged fashion several times @ 09/13/24 13:48:58.168
  Sep 13 13:48:58.216: INFO: Retrieved 17/17 results with rv 753371 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzUzMzcxLCJzdGFydCI6InRlbXBsYXRlLTAwMTZcdTAwMDAifQ
  Sep 13 13:48:58.266: INFO: Retrieved 17/17 results with rv 753371 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzUzMzcxLCJzdGFydCI6InRlbXBsYXRlLTAwMzNcdTAwMDAifQ
  Sep 13 13:48:58.316: INFO: Retrieved 17/17 results with rv 753371 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzUzMzcxLCJzdGFydCI6InRlbXBsYXRlLTAwNTBcdTAwMDAifQ
  Sep 13 13:48:58.367: INFO: Retrieved 17/17 results with rv 753371 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzUzMzcxLCJzdGFydCI6InRlbXBsYXRlLTAwNjdcdTAwMDAifQ
  Sep 13 13:48:58.415: INFO: Retrieved 17/17 results with rv 753371 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzUzMzcxLCJzdGFydCI6InRlbXBsYXRlLTAwODRcdTAwMDAifQ
  Sep 13 13:48:58.466: INFO: Retrieved 17/17 results with rv 753371 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzUzMzcxLCJzdGFydCI6InRlbXBsYXRlLTAxMDFcdTAwMDAifQ
  Sep 13 13:48:58.516: INFO: Retrieved 17/17 results with rv 753371 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzUzMzcxLCJzdGFydCI6InRlbXBsYXRlLTAxMThcdTAwMDAifQ
  Sep 13 13:48:58.566: INFO: Retrieved 17/17 results with rv 753371 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzUzMzcxLCJzdGFydCI6InRlbXBsYXRlLTAxMzVcdTAwMDAifQ
  Sep 13 13:48:58.616: INFO: Retrieved 17/17 results with rv 753371 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzUzMzcxLCJzdGFydCI6InRlbXBsYXRlLTAxNTJcdTAwMDAifQ
  Sep 13 13:48:58.668: INFO: Retrieved 17/17 results with rv 753371 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzUzMzcxLCJzdGFydCI6InRlbXBsYXRlLTAxNjlcdTAwMDAifQ
  Sep 13 13:48:58.715: INFO: Retrieved 17/17 results with rv 753371 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzUzMzcxLCJzdGFydCI6InRlbXBsYXRlLTAxODZcdTAwMDAifQ
  Sep 13 13:48:58.766: INFO: Retrieved 17/17 results with rv 753371 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzUzMzcxLCJzdGFydCI6InRlbXBsYXRlLTAyMDNcdTAwMDAifQ
  E0913 13:48:58.806600      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:48:58.816: INFO: Retrieved 17/17 results with rv 753371 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzUzMzcxLCJzdGFydCI6InRlbXBsYXRlLTAyMjBcdTAwMDAifQ
  Sep 13 13:48:58.867: INFO: Retrieved 17/17 results with rv 753371 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzUzMzcxLCJzdGFydCI6InRlbXBsYXRlLTAyMzdcdTAwMDAifQ
  Sep 13 13:48:58.917: INFO: Retrieved 17/17 results with rv 753371 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzUzMzcxLCJzdGFydCI6InRlbXBsYXRlLTAyNTRcdTAwMDAifQ
  Sep 13 13:48:58.965: INFO: Retrieved 17/17 results with rv 753371 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzUzMzcxLCJzdGFydCI6InRlbXBsYXRlLTAyNzFcdTAwMDAifQ
  Sep 13 13:48:59.016: INFO: Retrieved 17/17 results with rv 753371 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzUzMzcxLCJzdGFydCI6InRlbXBsYXRlLTAyODhcdTAwMDAifQ
  Sep 13 13:48:59.068: INFO: Retrieved 17/17 results with rv 753371 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzUzMzcxLCJzdGFydCI6InRlbXBsYXRlLTAzMDVcdTAwMDAifQ
  Sep 13 13:48:59.117: INFO: Retrieved 17/17 results with rv 753371 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzUzMzcxLCJzdGFydCI6InRlbXBsYXRlLTAzMjJcdTAwMDAifQ
  Sep 13 13:48:59.165: INFO: Retrieved 17/17 results with rv 753371 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzUzMzcxLCJzdGFydCI6InRlbXBsYXRlLTAzMzlcdTAwMDAifQ
  Sep 13 13:48:59.215: INFO: Retrieved 17/17 results with rv 753371 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzUzMzcxLCJzdGFydCI6InRlbXBsYXRlLTAzNTZcdTAwMDAifQ
  Sep 13 13:48:59.266: INFO: Retrieved 17/17 results with rv 753371 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzUzMzcxLCJzdGFydCI6InRlbXBsYXRlLTAzNzNcdTAwMDAifQ
  Sep 13 13:48:59.315: INFO: Retrieved 17/17 results with rv 753371 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzUzMzcxLCJzdGFydCI6InRlbXBsYXRlLTAzOTBcdTAwMDAifQ
  Sep 13 13:48:59.366: INFO: Retrieved 9/17 results with rv 753371 and continue 
  Sep 13 13:48:59.416: INFO: Retrieved 17/17 results with rv 753376 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzUzMzc2LCJzdGFydCI6InRlbXBsYXRlLTAwMTZcdTAwMDAifQ
  Sep 13 13:48:59.466: INFO: Retrieved 17/17 results with rv 753376 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzUzMzc2LCJzdGFydCI6InRlbXBsYXRlLTAwMzNcdTAwMDAifQ
  Sep 13 13:48:59.516: INFO: Retrieved 17/17 results with rv 753376 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzUzMzc2LCJzdGFydCI6InRlbXBsYXRlLTAwNTBcdTAwMDAifQ
  Sep 13 13:48:59.565: INFO: Retrieved 17/17 results with rv 753376 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzUzMzc2LCJzdGFydCI6InRlbXBsYXRlLTAwNjdcdTAwMDAifQ
  Sep 13 13:48:59.616: INFO: Retrieved 17/17 results with rv 753376 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzUzMzc2LCJzdGFydCI6InRlbXBsYXRlLTAwODRcdTAwMDAifQ
  Sep 13 13:48:59.667: INFO: Retrieved 17/17 results with rv 753376 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzUzMzc2LCJzdGFydCI6InRlbXBsYXRlLTAxMDFcdTAwMDAifQ
  Sep 13 13:48:59.716: INFO: Retrieved 17/17 results with rv 753376 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzUzMzc2LCJzdGFydCI6InRlbXBsYXRlLTAxMThcdTAwMDAifQ
  Sep 13 13:48:59.766: INFO: Retrieved 17/17 results with rv 753376 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzUzMzc2LCJzdGFydCI6InRlbXBsYXRlLTAxMzVcdTAwMDAifQ
  E0913 13:48:59.807081      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:48:59.815: INFO: Retrieved 17/17 results with rv 753376 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzUzMzc2LCJzdGFydCI6InRlbXBsYXRlLTAxNTJcdTAwMDAifQ
  Sep 13 13:48:59.865: INFO: Retrieved 17/17 results with rv 753376 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzUzMzc2LCJzdGFydCI6InRlbXBsYXRlLTAxNjlcdTAwMDAifQ
  Sep 13 13:48:59.915: INFO: Retrieved 17/17 results with rv 753376 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzUzMzc2LCJzdGFydCI6InRlbXBsYXRlLTAxODZcdTAwMDAifQ
  Sep 13 13:48:59.965: INFO: Retrieved 17/17 results with rv 753376 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzUzMzc2LCJzdGFydCI6InRlbXBsYXRlLTAyMDNcdTAwMDAifQ
  Sep 13 13:49:00.016: INFO: Retrieved 17/17 results with rv 753376 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzUzMzc2LCJzdGFydCI6InRlbXBsYXRlLTAyMjBcdTAwMDAifQ
  Sep 13 13:49:00.066: INFO: Retrieved 17/17 results with rv 753376 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzUzMzc2LCJzdGFydCI6InRlbXBsYXRlLTAyMzdcdTAwMDAifQ
  Sep 13 13:49:00.116: INFO: Retrieved 17/17 results with rv 753376 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzUzMzc2LCJzdGFydCI6InRlbXBsYXRlLTAyNTRcdTAwMDAifQ
  Sep 13 13:49:00.165: INFO: Retrieved 17/17 results with rv 753376 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzUzMzc2LCJzdGFydCI6InRlbXBsYXRlLTAyNzFcdTAwMDAifQ
  Sep 13 13:49:00.216: INFO: Retrieved 17/17 results with rv 753376 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzUzMzc2LCJzdGFydCI6InRlbXBsYXRlLTAyODhcdTAwMDAifQ
  Sep 13 13:49:00.266: INFO: Retrieved 17/17 results with rv 753376 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzUzMzc2LCJzdGFydCI6InRlbXBsYXRlLTAzMDVcdTAwMDAifQ
  Sep 13 13:49:00.316: INFO: Retrieved 17/17 results with rv 753376 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzUzMzc2LCJzdGFydCI6InRlbXBsYXRlLTAzMjJcdTAwMDAifQ
  Sep 13 13:49:00.366: INFO: Retrieved 17/17 results with rv 753376 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzUzMzc2LCJzdGFydCI6InRlbXBsYXRlLTAzMzlcdTAwMDAifQ
  Sep 13 13:49:00.415: INFO: Retrieved 17/17 results with rv 753376 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzUzMzc2LCJzdGFydCI6InRlbXBsYXRlLTAzNTZcdTAwMDAifQ
  Sep 13 13:49:00.465: INFO: Retrieved 17/17 results with rv 753376 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzUzMzc2LCJzdGFydCI6InRlbXBsYXRlLTAzNzNcdTAwMDAifQ
  Sep 13 13:49:00.515: INFO: Retrieved 17/17 results with rv 753376 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzUzMzc2LCJzdGFydCI6InRlbXBsYXRlLTAzOTBcdTAwMDAifQ
  Sep 13 13:49:00.573: INFO: Retrieved 9/17 results with rv 753376 and continue 
  Sep 13 13:49:00.662: INFO: Retrieved 17/17 results with rv 753381 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzUzMzgxLCJzdGFydCI6InRlbXBsYXRlLTAwMTZcdTAwMDAifQ
  Sep 13 13:49:00.665: INFO: Retrieved 17/17 results with rv 753381 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzUzMzgxLCJzdGFydCI6InRlbXBsYXRlLTAwMzNcdTAwMDAifQ
  Sep 13 13:49:00.723: INFO: Retrieved 17/17 results with rv 753381 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzUzMzgxLCJzdGFydCI6InRlbXBsYXRlLTAwNTBcdTAwMDAifQ
  Sep 13 13:49:00.767: INFO: Retrieved 17/17 results with rv 753381 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzUzMzgxLCJzdGFydCI6InRlbXBsYXRlLTAwNjdcdTAwMDAifQ
  E0913 13:49:00.807629      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:49:00.815: INFO: Retrieved 17/17 results with rv 753381 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzUzMzgxLCJzdGFydCI6InRlbXBsYXRlLTAwODRcdTAwMDAifQ
  Sep 13 13:49:00.865: INFO: Retrieved 17/17 results with rv 753381 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzUzMzgxLCJzdGFydCI6InRlbXBsYXRlLTAxMDFcdTAwMDAifQ
  Sep 13 13:49:00.916: INFO: Retrieved 17/17 results with rv 753381 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzUzMzgxLCJzdGFydCI6InRlbXBsYXRlLTAxMThcdTAwMDAifQ
  Sep 13 13:49:00.966: INFO: Retrieved 17/17 results with rv 753381 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzUzMzgxLCJzdGFydCI6InRlbXBsYXRlLTAxMzVcdTAwMDAifQ
  Sep 13 13:49:01.016: INFO: Retrieved 17/17 results with rv 753381 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzUzMzgxLCJzdGFydCI6InRlbXBsYXRlLTAxNTJcdTAwMDAifQ
  Sep 13 13:49:01.065: INFO: Retrieved 17/17 results with rv 753381 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzUzMzgxLCJzdGFydCI6InRlbXBsYXRlLTAxNjlcdTAwMDAifQ
  Sep 13 13:49:01.116: INFO: Retrieved 17/17 results with rv 753381 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzUzMzgxLCJzdGFydCI6InRlbXBsYXRlLTAxODZcdTAwMDAifQ
  Sep 13 13:49:01.166: INFO: Retrieved 17/17 results with rv 753381 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzUzMzgxLCJzdGFydCI6InRlbXBsYXRlLTAyMDNcdTAwMDAifQ
  Sep 13 13:49:01.216: INFO: Retrieved 17/17 results with rv 753381 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzUzMzgxLCJzdGFydCI6InRlbXBsYXRlLTAyMjBcdTAwMDAifQ
  Sep 13 13:49:01.266: INFO: Retrieved 17/17 results with rv 753381 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzUzMzgxLCJzdGFydCI6InRlbXBsYXRlLTAyMzdcdTAwMDAifQ
  Sep 13 13:49:01.318: INFO: Retrieved 17/17 results with rv 753381 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzUzMzgxLCJzdGFydCI6InRlbXBsYXRlLTAyNTRcdTAwMDAifQ
  Sep 13 13:49:01.366: INFO: Retrieved 17/17 results with rv 753381 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzUzMzgxLCJzdGFydCI6InRlbXBsYXRlLTAyNzFcdTAwMDAifQ
  Sep 13 13:49:01.416: INFO: Retrieved 17/17 results with rv 753381 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzUzMzgxLCJzdGFydCI6InRlbXBsYXRlLTAyODhcdTAwMDAifQ
  Sep 13 13:49:01.466: INFO: Retrieved 17/17 results with rv 753381 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzUzMzgxLCJzdGFydCI6InRlbXBsYXRlLTAzMDVcdTAwMDAifQ
  Sep 13 13:49:01.517: INFO: Retrieved 17/17 results with rv 753381 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzUzMzgxLCJzdGFydCI6InRlbXBsYXRlLTAzMjJcdTAwMDAifQ
  Sep 13 13:49:01.575: INFO: Retrieved 17/17 results with rv 753381 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzUzMzgxLCJzdGFydCI6InRlbXBsYXRlLTAzMzlcdTAwMDAifQ
  Sep 13 13:49:01.616: INFO: Retrieved 17/17 results with rv 753381 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzUzMzgxLCJzdGFydCI6InRlbXBsYXRlLTAzNTZcdTAwMDAifQ
  Sep 13 13:49:01.666: INFO: Retrieved 17/17 results with rv 753381 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzUzMzgxLCJzdGFydCI6InRlbXBsYXRlLTAzNzNcdTAwMDAifQ
  Sep 13 13:49:01.716: INFO: Retrieved 17/17 results with rv 753381 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzUzMzgxLCJzdGFydCI6InRlbXBsYXRlLTAzOTBcdTAwMDAifQ
  Sep 13 13:49:01.765: INFO: Retrieved 9/17 results with rv 753381 and continue 
  STEP: retrieving those results all at once @ 09/13/24 13:49:01.765
  E0913 13:49:01.808615      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:49:01.824: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-9365" for this suite. @ 09/13/24 13:49:01.892
• [21.460 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:230
  STEP: Creating a kubernetes client @ 09/13/24 13:49:01.92
  Sep 13 13:49:01.920: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename emptydir @ 09/13/24 13:49:01.921
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:49:01.971
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:49:01.974
  STEP: Creating Pod @ 09/13/24 13:49:01.977
  E0913 13:49:02.808776      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:49:03.809474      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Reading file content from the nginx-container @ 09/13/24 13:49:04.02
  Sep 13 13:49:04.021: INFO: ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-5196 PodName:pod-sharedvolume-d2fdcbc9-f2d0-4189-939f-f92c397f6b72 ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 13 13:49:04.021: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  Sep 13 13:49:04.022: INFO: ExecWithOptions: Clientset creation
  Sep 13 13:49:04.022: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/emptydir-5196/pods/pod-sharedvolume-d2fdcbc9-f2d0-4189-939f-f92c397f6b72/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&container=busybox-main-container&stderr=true&stdout=true)
  Sep 13 13:49:04.076: INFO: Exec stderr: ""
  Sep 13 13:49:04.076: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5196" for this suite. @ 09/13/24 13:49:04.081
• [2.172 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:300
  STEP: Creating a kubernetes client @ 09/13/24 13:49:04.092
  Sep 13 13:49:04.092: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename var-expansion @ 09/13/24 13:49:04.094
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:49:04.113
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:49:04.115
  STEP: creating the pod @ 09/13/24 13:49:04.118
  STEP: waiting for pod running @ 09/13/24 13:49:04.138
  E0913 13:49:04.809812      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:49:05.809976      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: creating a file in subpath @ 09/13/24 13:49:06.161
  Sep 13 13:49:06.164: INFO: ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-1264 PodName:var-expansion-21048a2e-99e4-400e-9a36-60ff5d6f66f6 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 13 13:49:06.164: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  Sep 13 13:49:06.165: INFO: ExecWithOptions: Clientset creation
  Sep 13 13:49:06.165: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/var-expansion-1264/pods/var-expansion-21048a2e-99e4-400e-9a36-60ff5d6f66f6/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: test for file in mounted path @ 09/13/24 13:49:06.21
  Sep 13 13:49:06.212: INFO: ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-1264 PodName:var-expansion-21048a2e-99e4-400e-9a36-60ff5d6f66f6 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 13 13:49:06.213: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  Sep 13 13:49:06.213: INFO: ExecWithOptions: Clientset creation
  Sep 13 13:49:06.213: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/var-expansion-1264/pods/var-expansion-21048a2e-99e4-400e-9a36-60ff5d6f66f6/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: updating the annotation value @ 09/13/24 13:49:06.252
  Sep 13 13:49:06.768: INFO: Successfully updated pod "var-expansion-21048a2e-99e4-400e-9a36-60ff5d6f66f6"
  STEP: waiting for annotated pod running @ 09/13/24 13:49:06.769
  STEP: deleting the pod gracefully @ 09/13/24 13:49:06.771
  Sep 13 13:49:06.771: INFO: Deleting pod "var-expansion-21048a2e-99e4-400e-9a36-60ff5d6f66f6" in namespace "var-expansion-1264"
  Sep 13 13:49:06.785: INFO: Wait up to 5m0s for pod "var-expansion-21048a2e-99e4-400e-9a36-60ff5d6f66f6" to be fully deleted
  E0913 13:49:06.810366      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:49:07.810606      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:49:08.811246      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:49:09.811778      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:49:10.812420      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:49:11.815830      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:49:12.816826      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:49:13.817279      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:49:14.818106      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:49:15.818336      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:49:16.819123      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:49:17.819182      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:49:18.819434      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:49:19.819908      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:49:20.820598      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:49:21.821955      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:49:22.822867      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:49:23.823045      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:49:24.823801      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:49:25.824055      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:49:26.824227      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:49:27.824617      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:49:28.825090      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:49:29.826010      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:49:30.826389      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:49:31.826386      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:49:32.827030      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:49:33.827129      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:49:34.827775      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:49:35.828402      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:49:36.829131      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:49:37.829132      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:49:38.829455      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:49:39.829503      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:49:40.829612      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:49:40.854: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-1264" for this suite. @ 09/13/24 13:49:40.858
• [36.772 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:58
  STEP: Creating a kubernetes client @ 09/13/24 13:49:40.864
  Sep 13 13:49:40.864: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename configmap @ 09/13/24 13:49:40.865
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:49:40.88
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:49:40.883
  STEP: Creating configMap with name configmap-test-volume-4187932e-f5a4-462d-a12c-8f748620e879 @ 09/13/24 13:49:40.886
  STEP: Creating a pod to test consume configMaps @ 09/13/24 13:49:40.903
  E0913 13:49:41.829705      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:49:42.829956      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:49:43.830626      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:49:44.831106      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/13/24 13:49:44.921
  Sep 13 13:49:44.923: INFO: Trying to get logs from node cncf-3 pod pod-configmaps-e4c2ee6e-f1a1-4dc9-b29f-15b6e110c285 container agnhost-container: <nil>
  STEP: delete the pod @ 09/13/24 13:49:44.928
  Sep 13 13:49:44.946: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7686" for this suite. @ 09/13/24 13:49:44.949
• [4.090 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:51
  STEP: Creating a kubernetes client @ 09/13/24 13:49:44.956
  Sep 13 13:49:44.956: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename kubelet-test @ 09/13/24 13:49:44.957
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:49:44.974
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:49:44.976
  E0913 13:49:45.831032      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:49:46.831773      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:49:47.000: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-9488" for this suite. @ 09/13/24 13:49:47.003
• [2.056 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 09/13/24 13:49:47.012
  Sep 13 13:49:47.012: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename secrets @ 09/13/24 13:49:47.013
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:49:47.03
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:49:47.033
  STEP: Creating secret with name secret-test-d412e434-8643-4681-9579-29689b6a5149 @ 09/13/24 13:49:47.062
  STEP: Creating a pod to test consume secrets @ 09/13/24 13:49:47.07
  E0913 13:49:47.831997      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:49:48.832970      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:49:49.833267      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:49:50.834164      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/13/24 13:49:51.093
  Sep 13 13:49:51.096: INFO: Trying to get logs from node cncf-3 pod pod-secrets-fae8f9b6-4f35-45a3-ba80-6925a2460316 container secret-volume-test: <nil>
  STEP: delete the pod @ 09/13/24 13:49:51.101
  Sep 13 13:49:51.125: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6350" for this suite. @ 09/13/24 13:49:51.128
  STEP: Destroying namespace "secret-namespace-5525" for this suite. @ 09/13/24 13:49:51.135
• [4.128 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:219
  STEP: Creating a kubernetes client @ 09/13/24 13:49:51.141
  Sep 13 13:49:51.141: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename downward-api @ 09/13/24 13:49:51.142
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:49:51.161
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:49:51.164
  STEP: Creating a pod to test downward api env vars @ 09/13/24 13:49:51.168
  E0913 13:49:51.834878      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:49:52.834994      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:49:53.835488      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:49:54.835623      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/13/24 13:49:55.184
  Sep 13 13:49:55.186: INFO: Trying to get logs from node cncf-3 pod downward-api-e33c23e7-7f92-48f6-8182-e4c6da26a4dd container dapi-container: <nil>
  STEP: delete the pod @ 09/13/24 13:49:55.191
  Sep 13 13:49:55.210: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8973" for this suite. @ 09/13/24 13:49:55.214
• [4.083 seconds]
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:244
  STEP: Creating a kubernetes client @ 09/13/24 13:49:55.225
  Sep 13 13:49:55.225: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename dns @ 09/13/24 13:49:55.226
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:49:55.236
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:49:55.239
  STEP: Creating a test headless service @ 09/13/24 13:49:55.242
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-4012.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-2.dns-test-service-2.dns-4012.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/wheezy_hosts@dns-querier-2;sleep 1; done
   @ 09/13/24 13:49:55.25
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-4012.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-4012.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 09/13/24 13:49:55.25
  STEP: creating a pod to probe DNS @ 09/13/24 13:49:55.25
  STEP: submitting the pod to kubernetes @ 09/13/24 13:49:55.25
  E0913 13:49:55.835648      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:49:56.836091      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/13/24 13:49:57.27
  STEP: looking for the results for each expected name from probers @ 09/13/24 13:49:57.272
  Sep 13 13:49:57.282: INFO: DNS probes using dns-4012/dns-test-cbbbd67c-10bc-43aa-bd2a-960311f17b7e succeeded

  STEP: deleting the pod @ 09/13/24 13:49:57.282
  STEP: deleting the test headless service @ 09/13/24 13:49:57.302
  Sep 13 13:49:57.332: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-4012" for this suite. @ 09/13/24 13:49:57.338
• [2.120 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1280
  STEP: Creating a kubernetes client @ 09/13/24 13:49:57.348
  Sep 13 13:49:57.348: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename services @ 09/13/24 13:49:57.35
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:49:57.361
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:49:57.363
  STEP: creating service nodeport-test with type=NodePort in namespace services-2583 @ 09/13/24 13:49:57.371
  STEP: creating replication controller nodeport-test in namespace services-2583 @ 09/13/24 13:49:57.397
  I0913 13:49:57.409782      23 runners.go:197] Created replication controller with name: nodeport-test, namespace: services-2583, replica count: 2
  E0913 13:49:57.836548      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:49:58.837478      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:49:59.837905      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0913 13:50:00.460498      23 runners.go:197] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Sep 13 13:50:00.460: INFO: Creating new exec pod
  E0913 13:50:00.838088      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:50:01.839017      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:50:02.839947      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:50:03.492: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=services-2583 exec execpodndcwb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  Sep 13 13:50:03.584: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  Sep 13 13:50:03.584: INFO: stdout: ""
  E0913 13:50:03.840582      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:50:04.492: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=services-2583 exec execpodndcwb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  Sep 13 13:50:04.598: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  Sep 13 13:50:04.598: INFO: stdout: ""
  E0913 13:50:04.841063      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:50:05.492: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=services-2583 exec execpodndcwb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  Sep 13 13:50:05.612: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  Sep 13 13:50:05.612: INFO: stdout: "nodeport-test-4wsxp"
  Sep 13 13:50:05.612: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=services-2583 exec execpodndcwb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.14.214 80'
  Sep 13 13:50:05.724: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.14.214 80\nConnection to 10.233.14.214 80 port [tcp/http] succeeded!\n"
  Sep 13 13:50:05.724: INFO: stdout: ""
  E0913 13:50:05.841856      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:50:06.612: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=services-2583 exec execpodndcwb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.14.214 80'
  Sep 13 13:50:06.704: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.14.214 80\nConnection to 10.233.14.214 80 port [tcp/http] succeeded!\n"
  Sep 13 13:50:06.705: INFO: stdout: ""
  E0913 13:50:06.842309      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:50:07.613: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=services-2583 exec execpodndcwb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.14.214 80'
  Sep 13 13:50:07.698: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.14.214 80\nConnection to 10.233.14.214 80 port [tcp/http] succeeded!\n"
  Sep 13 13:50:07.698: INFO: stdout: "nodeport-test-vwf69"
  Sep 13 13:50:07.698: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=services-2583 exec execpodndcwb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.10.50.34 30741'
  Sep 13 13:50:07.807: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.10.50.34 30741\nConnection to 172.10.50.34 30741 port [tcp/*] succeeded!\n"
  Sep 13 13:50:07.807: INFO: stdout: ""
  E0913 13:50:07.842996      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:50:08.699: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=services-2583 exec execpodndcwb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.10.50.34 30741'
  Sep 13 13:50:08.815: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.10.50.34 30741\nConnection to 172.10.50.34 30741 port [tcp/*] succeeded!\n"
  Sep 13 13:50:08.815: INFO: stdout: ""
  E0913 13:50:08.843977      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:50:09.699: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=services-2583 exec execpodndcwb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.10.50.34 30741'
  Sep 13 13:50:09.806: INFO: stderr: "+ + echonc -v hostName -t -w\n 2 172.10.50.34 30741\nConnection to 172.10.50.34 30741 port [tcp/*] succeeded!\n"
  Sep 13 13:50:09.806: INFO: stdout: ""
  E0913 13:50:09.844187      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:50:10.698: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=services-2583 exec execpodndcwb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.10.50.34 30741'
  Sep 13 13:50:10.819: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.10.50.34 30741\nConnection to 172.10.50.34 30741 port [tcp/*] succeeded!\n"
  Sep 13 13:50:10.819: INFO: stdout: "nodeport-test-vwf69"
  Sep 13 13:50:10.819: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=services-2583 exec execpodndcwb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.10.50.163 30741'
  E0913 13:50:10.845202      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:50:10.925: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.10.50.163 30741\nConnection to 172.10.50.163 30741 port [tcp/*] succeeded!\n"
  Sep 13 13:50:10.925: INFO: stdout: "nodeport-test-4wsxp"
  Sep 13 13:50:10.926: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2583" for this suite. @ 09/13/24 13:50:10.931
• [13.591 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:195
  STEP: Creating a kubernetes client @ 09/13/24 13:50:10.941
  Sep 13 13:50:10.941: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename projected @ 09/13/24 13:50:10.942
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:50:10.961
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:50:10.964
  STEP: Creating a pod to test downward API volume plugin @ 09/13/24 13:50:10.966
  E0913 13:50:11.845332      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:50:12.846253      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:50:13.846741      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:50:14.847209      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/13/24 13:50:15.005
  Sep 13 13:50:15.008: INFO: Trying to get logs from node cncf-3 pod downwardapi-volume-04e40833-6b46-4e61-8144-d7b03384fa91 container client-container: <nil>
  STEP: delete the pod @ 09/13/24 13:50:15.013
  Sep 13 13:50:15.040: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6242" for this suite. @ 09/13/24 13:50:15.043
• [4.108 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 09/13/24 13:50:15.049
  Sep 13 13:50:15.049: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename cronjob @ 09/13/24 13:50:15.052
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:50:15.071
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:50:15.074
  STEP: Creating a ForbidConcurrent cronjob @ 09/13/24 13:50:15.095
  STEP: Ensuring a job is scheduled @ 09/13/24 13:50:15.119
  E0913 13:50:15.847362      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:50:16.847947      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:50:17.848512      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:50:18.849133      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:50:19.849473      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:50:20.850205      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:50:21.850927      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:50:22.851471      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:50:23.851965      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:50:24.852317      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:50:25.852701      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:50:26.853470      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:50:27.854460      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:50:28.854895      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:50:29.855297      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:50:30.856093      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:50:31.857105      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:50:32.857632      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:50:33.858540      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:50:34.858799      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:50:35.858815      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:50:36.858985      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:50:37.859898      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:50:38.859973      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:50:39.860087      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:50:40.860191      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:50:41.860804      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:50:42.861222      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:50:43.862239      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:50:44.862854      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:50:45.863094      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:50:46.863319      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:50:47.863738      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:50:48.863877      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:50:49.864175      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:50:50.864152      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:50:51.864916      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:50:52.865043      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:50:53.865286      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:50:54.865373      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:50:55.866014      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:50:56.866389      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:50:57.867255      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:50:58.867555      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:50:59.868504      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:51:00.868993      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 09/13/24 13:51:01.124
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 09/13/24 13:51:01.127
  STEP: Ensuring no more jobs are scheduled @ 09/13/24 13:51:01.129
  E0913 13:51:01.869057      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:51:02.869194      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:51:03.870341      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:51:04.870372      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:51:05.871364      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:51:06.871545      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:51:07.872544      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:51:08.873537      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:51:09.874221      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:51:10.874396      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:51:11.875467      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:51:12.876213      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:51:13.876258      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:51:14.876513      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:51:15.876871      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:51:16.877459      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:51:17.877732      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:51:18.877837      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:51:19.879237      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:51:20.878849      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:51:21.879745      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:51:22.880430      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:51:23.880972      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:51:24.881425      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:51:25.882366      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:51:26.883886      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:51:27.883897      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:51:28.884117      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:51:29.884975      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:51:30.885889      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:51:31.886361      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:51:32.886643      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:51:33.887147      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:51:34.887255      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:51:35.887362      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:51:36.888564      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:51:37.888735      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:51:38.888927      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:51:39.889944      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:51:40.890726      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:51:41.891526      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:51:42.892319      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:51:43.892604      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:51:44.893092      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:51:45.893864      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:51:46.893775      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:51:47.893860      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:51:48.894057      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:51:49.894176      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:51:50.894392      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:51:51.894676      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:51:52.894781      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:51:53.895904      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:51:54.897108      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:51:55.898019      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:51:56.898710      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:51:57.899311      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:51:58.900071      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:51:59.900011      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:52:00.900879      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:52:01.901877      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:52:02.901962      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:52:03.902859      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:52:04.903019      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:52:05.903982      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:52:06.904240      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:52:07.904719      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:52:08.905032      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:52:09.906086      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:52:10.906259      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:52:11.907171      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:52:12.907769      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:52:13.908893      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:52:14.909181      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:52:15.909598      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:52:16.909588      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:52:17.910278      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:52:18.910411      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:52:19.911385      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:52:20.911649      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:52:21.912466      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:52:22.912612      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:52:23.912729      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:52:24.913083      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:52:25.913355      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:52:26.913386      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:52:27.914421      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:52:28.914546      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:52:29.914611      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:52:30.915047      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:52:31.914783      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:52:32.914935      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:52:33.915869      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:52:34.916442      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:52:35.916554      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:52:36.916614      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:52:37.916825      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:52:38.917212      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:52:39.917412      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:52:40.917479      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:52:41.917732      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:52:42.917825      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:52:43.917930      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:52:44.918349      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:52:45.918621      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:52:46.918983      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:52:47.919831      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:52:48.920008      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:52:49.920002      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:52:50.920219      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:52:51.920649      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:52:52.921054      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:52:53.922127      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:52:54.922289      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:52:55.922421      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:52:56.922822      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:52:57.922915      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:52:58.923131      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:52:59.924151      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:53:00.924960      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:53:01.924910      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:53:02.925385      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:53:03.925707      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:53:04.925804      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:53:05.926402      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:53:06.926629      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:53:07.927642      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:53:08.927835      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:53:09.927863      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:53:10.928010      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:53:11.928131      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:53:12.928985      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:53:13.930078      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:53:14.930713      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:53:15.930755      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:53:16.930886      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:53:17.931020      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:53:18.931104      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:53:19.931270      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:53:20.931498      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:53:21.931698      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:53:22.932146      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:53:23.932564      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:53:24.933071      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:53:25.933371      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:53:26.933629      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:53:27.933810      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:53:28.933968      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:53:29.934339      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:53:30.934439      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:53:31.935565      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:53:32.935934      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:53:33.936155      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:53:34.936356      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:53:35.937388      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:53:36.937955      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:53:37.938665      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:53:38.939407      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:53:39.940158      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:53:40.940484      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:53:41.940645      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:53:42.941125      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:53:43.942165      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:53:44.942182      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:53:45.942728      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:53:46.942912      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:53:47.942945      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:53:48.943626      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:53:49.943922      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:53:50.944022      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:53:51.944558      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:53:52.944748      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:53:53.945514      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:53:54.945878      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:53:55.946045      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:53:56.946424      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:53:57.947532      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:53:58.947729      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:53:59.947901      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:54:00.948179      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:54:01.949169      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:54:02.949768      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:54:03.950336      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:54:04.950569      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:54:05.950685      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:54:06.951662      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:54:07.951815      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:54:08.951901      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:54:09.952114      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:54:10.952940      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:54:11.953303      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:54:12.953390      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:54:13.953530      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:54:14.953909      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:54:15.953936      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:54:16.954058      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:54:17.954126      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:54:18.954354      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:54:19.954944      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:54:20.955261      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:54:21.955318      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:54:22.955730      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:54:23.956698      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:54:24.956788      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:54:25.957801      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:54:26.957960      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:54:27.959138      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:54:28.959498      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:54:29.959631      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:54:30.959943      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:54:31.960094      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:54:32.961973      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:54:33.962116      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:54:34.962345      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:54:35.962487      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:54:36.962818      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:54:37.963758      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:54:38.963842      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:54:39.964523      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:54:40.964257      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:54:41.964239      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:54:42.964706      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:54:43.966119      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:54:44.967307      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:54:45.967177      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:54:46.967306      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:54:47.967631      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:54:48.968043      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:54:49.968382      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:54:50.968587      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:54:51.968843      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:54:52.969236      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:54:53.970297      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:54:54.970561      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:54:55.971174      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:54:56.971809      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:54:57.972889      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:54:58.973721      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:54:59.974387      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:55:00.974700      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:55:01.974812      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:55:02.975474      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:55:03.975880      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:55:04.975954      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:55:05.976036      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:55:06.977052      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:55:07.977205      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:55:08.977260      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:55:09.978158      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:55:10.978315      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:55:11.978867      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:55:12.979524      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:55:13.980292      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:55:14.981033      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:55:15.981102      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:55:16.981294      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:55:17.981637      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:55:18.981928      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:55:19.983144      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:55:20.984342      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:55:21.985000      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:55:22.985613      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:55:23.985746      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:55:24.986185      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:55:25.986297      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:55:26.986392      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:55:27.987338      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:55:28.987540      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:55:29.988193      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:55:30.988358      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:55:31.988969      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:55:32.989510      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:55:33.989612      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:55:34.990022      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:55:35.990500      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:55:36.990612      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:55:37.991224      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:55:38.991973      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:55:39.992842      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:55:40.993914      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:55:41.994389      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:55:42.994977      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:55:43.995325      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:55:44.995576      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:55:45.996304      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:55:46.996071      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:55:47.996424      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:55:48.996860      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:55:49.997151      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:55:50.997286      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:55:51.998192      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:55:52.998415      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:55:53.998946      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:55:54.999136      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:55:55.999901      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:55:57.000035      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:55:58.001015      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:55:59.001614      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:56:00.002697      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:56:01.002983      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Removing cronjob @ 09/13/24 13:56:01.135
  Sep 13 13:56:01.145: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-2560" for this suite. @ 09/13/24 13:56:01.148
• [346.118 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:75
  STEP: Creating a kubernetes client @ 09/13/24 13:56:01.168
  Sep 13 13:56:01.168: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename projected @ 09/13/24 13:56:01.17
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:56:01.212
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:56:01.215
  STEP: Creating configMap with name projected-configmap-test-volume-ff302b32-a970-4745-9ef0-325bfe0ff001 @ 09/13/24 13:56:01.218
  STEP: Creating a pod to test consume configMaps @ 09/13/24 13:56:01.232
  E0913 13:56:02.003076      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:56:03.004153      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:56:04.005102      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:56:05.005256      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/13/24 13:56:05.259
  Sep 13 13:56:05.262: INFO: Trying to get logs from node cncf-3 pod pod-projected-configmaps-c7afab2b-ed61-4ade-8c18-6df27b128f3f container agnhost-container: <nil>
  STEP: delete the pod @ 09/13/24 13:56:05.276
  Sep 13 13:56:05.294: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7550" for this suite. @ 09/13/24 13:56:05.298
• [4.150 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:132
  STEP: Creating a kubernetes client @ 09/13/24 13:56:05.319
  Sep 13 13:56:05.319: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename downward-api @ 09/13/24 13:56:05.32
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:56:05.34
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:56:05.343
  STEP: Creating the pod @ 09/13/24 13:56:05.35
  E0913 13:56:06.006323      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:56:07.006697      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:56:07.886: INFO: Successfully updated pod "labelsupdate32bbfa15-65ae-4904-bbcb-3519a8af5b36"
  E0913 13:56:08.006936      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:56:09.007765      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:56:09.896: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6916" for this suite. @ 09/13/24 13:56:09.9
• [4.588 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:488
  STEP: Creating a kubernetes client @ 09/13/24 13:56:09.907
  Sep 13 13:56:09.907: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename security-context-test @ 09/13/24 13:56:09.909
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:56:09.925
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:56:09.927
  E0913 13:56:10.007984      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:56:11.008936      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:56:12.009211      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:56:13.009415      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:56:13.948: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-9324" for this suite. @ 09/13/24 13:56:13.952
• [4.051 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 09/13/24 13:56:13.958
  Sep 13 13:56:13.958: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename proxy @ 09/13/24 13:56:13.96
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:56:13.981
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:56:13.984
  STEP: starting an echo server on multiple ports @ 09/13/24 13:56:13.996
  STEP: creating replication controller proxy-service-plbjx in namespace proxy-1384 @ 09/13/24 13:56:13.996
  E0913 13:56:14.009598      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0913 13:56:14.014801      23 runners.go:197] Created replication controller with name: proxy-service-plbjx, namespace: proxy-1384, replica count: 1
  E0913 13:56:15.009952      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0913 13:56:15.066543      23 runners.go:197] proxy-service-plbjx Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  E0913 13:56:16.010228      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0913 13:56:16.067495      23 runners.go:197] proxy-service-plbjx Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Sep 13 13:56:16.070: INFO: setup took 2.084109542s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 09/13/24 13:56:16.071
  Sep 13 13:56:16.076: INFO: (0) /api/v1/namespaces/proxy-1384/pods/http:proxy-service-plbjx-rl9rr:162/proxy/: bar (200; 4.804564ms)
  Sep 13 13:56:16.076: INFO: (0) /api/v1/namespaces/proxy-1384/services/proxy-service-plbjx:portname1/proxy/: foo (200; 5.468851ms)
  Sep 13 13:56:16.077: INFO: (0) /api/v1/namespaces/proxy-1384/pods/http:proxy-service-plbjx-rl9rr:160/proxy/: foo (200; 5.467277ms)
  Sep 13 13:56:16.077: INFO: (0) /api/v1/namespaces/proxy-1384/pods/proxy-service-plbjx-rl9rr/proxy/: <a href="/api/v1/namespaces/proxy-1384/pods/proxy-service-plbjx-rl9rr/proxy/rewriteme">test</a> (200; 6.437655ms)
  Sep 13 13:56:16.078: INFO: (0) /api/v1/namespaces/proxy-1384/services/proxy-service-plbjx:portname2/proxy/: bar (200; 6.591833ms)
  Sep 13 13:56:16.078: INFO: (0) /api/v1/namespaces/proxy-1384/services/http:proxy-service-plbjx:portname1/proxy/: foo (200; 6.633453ms)
  Sep 13 13:56:16.078: INFO: (0) /api/v1/namespaces/proxy-1384/services/http:proxy-service-plbjx:portname2/proxy/: bar (200; 6.553528ms)
  Sep 13 13:56:16.078: INFO: (0) /api/v1/namespaces/proxy-1384/services/https:proxy-service-plbjx:tlsportname1/proxy/: tls baz (200; 6.631753ms)
  Sep 13 13:56:16.078: INFO: (0) /api/v1/namespaces/proxy-1384/pods/proxy-service-plbjx-rl9rr:160/proxy/: foo (200; 6.838102ms)
  Sep 13 13:56:16.078: INFO: (0) /api/v1/namespaces/proxy-1384/pods/proxy-service-plbjx-rl9rr:162/proxy/: bar (200; 6.925565ms)
  Sep 13 13:56:16.078: INFO: (0) /api/v1/namespaces/proxy-1384/pods/http:proxy-service-plbjx-rl9rr:1080/proxy/: <a href="/api/v1/namespaces/proxy-1384/pods/http:proxy-service-plbjx-rl9rr:1080/proxy/rewriteme">... (200; 7.007309ms)
  Sep 13 13:56:16.079: INFO: (0) /api/v1/namespaces/proxy-1384/pods/https:proxy-service-plbjx-rl9rr:462/proxy/: tls qux (200; 7.563942ms)
  Sep 13 13:56:16.079: INFO: (0) /api/v1/namespaces/proxy-1384/services/https:proxy-service-plbjx:tlsportname2/proxy/: tls qux (200; 7.744978ms)
  Sep 13 13:56:16.079: INFO: (0) /api/v1/namespaces/proxy-1384/pods/https:proxy-service-plbjx-rl9rr:460/proxy/: tls baz (200; 8.477705ms)
  Sep 13 13:56:16.079: INFO: (0) /api/v1/namespaces/proxy-1384/pods/proxy-service-plbjx-rl9rr:1080/proxy/: <a href="/api/v1/namespaces/proxy-1384/pods/proxy-service-plbjx-rl9rr:1080/proxy/rewriteme">test<... (200; 8.148292ms)
  Sep 13 13:56:16.080: INFO: (0) /api/v1/namespaces/proxy-1384/pods/https:proxy-service-plbjx-rl9rr:443/proxy/: <a href="/api/v1/namespaces/proxy-1384/pods/https:proxy-service-plbjx-rl9rr:443/proxy/tlsrewritem... (200; 8.938812ms)
  Sep 13 13:56:16.083: INFO: (1) /api/v1/namespaces/proxy-1384/pods/proxy-service-plbjx-rl9rr:160/proxy/: foo (200; 2.818087ms)
  Sep 13 13:56:16.084: INFO: (1) /api/v1/namespaces/proxy-1384/pods/proxy-service-plbjx-rl9rr:162/proxy/: bar (200; 2.817387ms)
  Sep 13 13:56:16.084: INFO: (1) /api/v1/namespaces/proxy-1384/pods/http:proxy-service-plbjx-rl9rr:162/proxy/: bar (200; 2.799433ms)
  Sep 13 13:56:16.086: INFO: (1) /api/v1/namespaces/proxy-1384/pods/http:proxy-service-plbjx-rl9rr:1080/proxy/: <a href="/api/v1/namespaces/proxy-1384/pods/http:proxy-service-plbjx-rl9rr:1080/proxy/rewriteme">... (200; 5.189389ms)
  Sep 13 13:56:16.086: INFO: (1) /api/v1/namespaces/proxy-1384/services/http:proxy-service-plbjx:portname1/proxy/: foo (200; 5.359931ms)
  Sep 13 13:56:16.086: INFO: (1) /api/v1/namespaces/proxy-1384/pods/https:proxy-service-plbjx-rl9rr:462/proxy/: tls qux (200; 5.776823ms)
  Sep 13 13:56:16.086: INFO: (1) /api/v1/namespaces/proxy-1384/services/https:proxy-service-plbjx:tlsportname1/proxy/: tls baz (200; 5.860409ms)
  Sep 13 13:56:16.086: INFO: (1) /api/v1/namespaces/proxy-1384/services/proxy-service-plbjx:portname2/proxy/: bar (200; 5.786503ms)
  Sep 13 13:56:16.086: INFO: (1) /api/v1/namespaces/proxy-1384/services/http:proxy-service-plbjx:portname2/proxy/: bar (200; 5.715949ms)
  Sep 13 13:56:16.086: INFO: (1) /api/v1/namespaces/proxy-1384/pods/http:proxy-service-plbjx-rl9rr:160/proxy/: foo (200; 5.427666ms)
  Sep 13 13:56:16.086: INFO: (1) /api/v1/namespaces/proxy-1384/pods/proxy-service-plbjx-rl9rr/proxy/: <a href="/api/v1/namespaces/proxy-1384/pods/proxy-service-plbjx-rl9rr/proxy/rewriteme">test</a> (200; 5.501232ms)
  Sep 13 13:56:16.086: INFO: (1) /api/v1/namespaces/proxy-1384/pods/https:proxy-service-plbjx-rl9rr:443/proxy/: <a href="/api/v1/namespaces/proxy-1384/pods/https:proxy-service-plbjx-rl9rr:443/proxy/tlsrewritem... (200; 5.506893ms)
  Sep 13 13:56:16.086: INFO: (1) /api/v1/namespaces/proxy-1384/pods/proxy-service-plbjx-rl9rr:1080/proxy/: <a href="/api/v1/namespaces/proxy-1384/pods/proxy-service-plbjx-rl9rr:1080/proxy/rewriteme">test<... (200; 5.52795ms)
  Sep 13 13:56:16.086: INFO: (1) /api/v1/namespaces/proxy-1384/services/https:proxy-service-plbjx:tlsportname2/proxy/: tls qux (200; 5.699592ms)
  Sep 13 13:56:16.087: INFO: (1) /api/v1/namespaces/proxy-1384/pods/https:proxy-service-plbjx-rl9rr:460/proxy/: tls baz (200; 5.820161ms)
  Sep 13 13:56:16.087: INFO: (1) /api/v1/namespaces/proxy-1384/services/proxy-service-plbjx:portname1/proxy/: foo (200; 6.121492ms)
  Sep 13 13:56:16.089: INFO: (2) /api/v1/namespaces/proxy-1384/pods/https:proxy-service-plbjx-rl9rr:460/proxy/: tls baz (200; 2.254218ms)
  Sep 13 13:56:16.091: INFO: (2) /api/v1/namespaces/proxy-1384/pods/proxy-service-plbjx-rl9rr/proxy/: <a href="/api/v1/namespaces/proxy-1384/pods/proxy-service-plbjx-rl9rr/proxy/rewriteme">test</a> (200; 3.794659ms)
  Sep 13 13:56:16.091: INFO: (2) /api/v1/namespaces/proxy-1384/pods/proxy-service-plbjx-rl9rr:1080/proxy/: <a href="/api/v1/namespaces/proxy-1384/pods/proxy-service-plbjx-rl9rr:1080/proxy/rewriteme">test<... (200; 3.664946ms)
  Sep 13 13:56:16.091: INFO: (2) /api/v1/namespaces/proxy-1384/pods/proxy-service-plbjx-rl9rr:160/proxy/: foo (200; 3.4212ms)
  Sep 13 13:56:16.091: INFO: (2) /api/v1/namespaces/proxy-1384/pods/http:proxy-service-plbjx-rl9rr:162/proxy/: bar (200; 3.544479ms)
  Sep 13 13:56:16.092: INFO: (2) /api/v1/namespaces/proxy-1384/pods/proxy-service-plbjx-rl9rr:162/proxy/: bar (200; 3.554626ms)
  Sep 13 13:56:16.092: INFO: (2) /api/v1/namespaces/proxy-1384/pods/https:proxy-service-plbjx-rl9rr:462/proxy/: tls qux (200; 3.959424ms)
  Sep 13 13:56:16.092: INFO: (2) /api/v1/namespaces/proxy-1384/pods/http:proxy-service-plbjx-rl9rr:160/proxy/: foo (200; 4.033584ms)
  Sep 13 13:56:16.092: INFO: (2) /api/v1/namespaces/proxy-1384/pods/https:proxy-service-plbjx-rl9rr:443/proxy/: <a href="/api/v1/namespaces/proxy-1384/pods/https:proxy-service-plbjx-rl9rr:443/proxy/tlsrewritem... (200; 3.512256ms)
  Sep 13 13:56:16.092: INFO: (2) /api/v1/namespaces/proxy-1384/pods/http:proxy-service-plbjx-rl9rr:1080/proxy/: <a href="/api/v1/namespaces/proxy-1384/pods/http:proxy-service-plbjx-rl9rr:1080/proxy/rewriteme">... (200; 3.633078ms)
  Sep 13 13:56:16.093: INFO: (2) /api/v1/namespaces/proxy-1384/services/proxy-service-plbjx:portname1/proxy/: foo (200; 5.763679ms)
  Sep 13 13:56:16.093: INFO: (2) /api/v1/namespaces/proxy-1384/services/http:proxy-service-plbjx:portname1/proxy/: foo (200; 5.289888ms)
  Sep 13 13:56:16.093: INFO: (2) /api/v1/namespaces/proxy-1384/services/http:proxy-service-plbjx:portname2/proxy/: bar (200; 5.321476ms)
  Sep 13 13:56:16.093: INFO: (2) /api/v1/namespaces/proxy-1384/services/proxy-service-plbjx:portname2/proxy/: bar (200; 5.461039ms)
  Sep 13 13:56:16.093: INFO: (2) /api/v1/namespaces/proxy-1384/services/https:proxy-service-plbjx:tlsportname2/proxy/: tls qux (200; 5.366446ms)
  Sep 13 13:56:16.093: INFO: (2) /api/v1/namespaces/proxy-1384/services/https:proxy-service-plbjx:tlsportname1/proxy/: tls baz (200; 5.503679ms)
  Sep 13 13:56:16.096: INFO: (3) /api/v1/namespaces/proxy-1384/pods/https:proxy-service-plbjx-rl9rr:462/proxy/: tls qux (200; 2.464451ms)
  Sep 13 13:56:16.099: INFO: (3) /api/v1/namespaces/proxy-1384/pods/https:proxy-service-plbjx-rl9rr:443/proxy/: <a href="/api/v1/namespaces/proxy-1384/pods/https:proxy-service-plbjx-rl9rr:443/proxy/tlsrewritem... (200; 4.748709ms)
  Sep 13 13:56:16.099: INFO: (3) /api/v1/namespaces/proxy-1384/pods/proxy-service-plbjx-rl9rr:162/proxy/: bar (200; 5.55227ms)
  Sep 13 13:56:16.101: INFO: (3) /api/v1/namespaces/proxy-1384/pods/http:proxy-service-plbjx-rl9rr:160/proxy/: foo (200; 7.044679ms)
  Sep 13 13:56:16.103: INFO: (3) /api/v1/namespaces/proxy-1384/services/http:proxy-service-plbjx:portname2/proxy/: bar (200; 8.750572ms)
  Sep 13 13:56:16.103: INFO: (3) /api/v1/namespaces/proxy-1384/services/https:proxy-service-plbjx:tlsportname2/proxy/: tls qux (200; 9.081417ms)
  Sep 13 13:56:16.103: INFO: (3) /api/v1/namespaces/proxy-1384/services/http:proxy-service-plbjx:portname1/proxy/: foo (200; 9.598559ms)
  Sep 13 13:56:16.103: INFO: (3) /api/v1/namespaces/proxy-1384/pods/proxy-service-plbjx-rl9rr/proxy/: <a href="/api/v1/namespaces/proxy-1384/pods/proxy-service-plbjx-rl9rr/proxy/rewriteme">test</a> (200; 9.548909ms)
  Sep 13 13:56:16.104: INFO: (3) /api/v1/namespaces/proxy-1384/pods/http:proxy-service-plbjx-rl9rr:1080/proxy/: <a href="/api/v1/namespaces/proxy-1384/pods/http:proxy-service-plbjx-rl9rr:1080/proxy/rewriteme">... (200; 9.79751ms)
  Sep 13 13:56:16.104: INFO: (3) /api/v1/namespaces/proxy-1384/services/https:proxy-service-plbjx:tlsportname1/proxy/: tls baz (200; 9.936532ms)
  Sep 13 13:56:16.104: INFO: (3) /api/v1/namespaces/proxy-1384/services/proxy-service-plbjx:portname1/proxy/: foo (200; 10.573036ms)
  Sep 13 13:56:16.104: INFO: (3) /api/v1/namespaces/proxy-1384/pods/proxy-service-plbjx-rl9rr:160/proxy/: foo (200; 10.413624ms)
  Sep 13 13:56:16.105: INFO: (3) /api/v1/namespaces/proxy-1384/pods/proxy-service-plbjx-rl9rr:1080/proxy/: <a href="/api/v1/namespaces/proxy-1384/pods/proxy-service-plbjx-rl9rr:1080/proxy/rewriteme">test<... (200; 10.685476ms)
  Sep 13 13:56:16.105: INFO: (3) /api/v1/namespaces/proxy-1384/pods/http:proxy-service-plbjx-rl9rr:162/proxy/: bar (200; 10.497875ms)
  Sep 13 13:56:16.105: INFO: (3) /api/v1/namespaces/proxy-1384/services/proxy-service-plbjx:portname2/proxy/: bar (200; 11.243555ms)
  Sep 13 13:56:16.105: INFO: (3) /api/v1/namespaces/proxy-1384/pods/https:proxy-service-plbjx-rl9rr:460/proxy/: tls baz (200; 11.469436ms)
  Sep 13 13:56:16.111: INFO: (4) /api/v1/namespaces/proxy-1384/pods/proxy-service-plbjx-rl9rr:162/proxy/: bar (200; 5.439754ms)
  Sep 13 13:56:16.111: INFO: (4) /api/v1/namespaces/proxy-1384/pods/proxy-service-plbjx-rl9rr:160/proxy/: foo (200; 5.47767ms)
  Sep 13 13:56:16.111: INFO: (4) /api/v1/namespaces/proxy-1384/pods/https:proxy-service-plbjx-rl9rr:462/proxy/: tls qux (200; 5.780975ms)
  Sep 13 13:56:16.111: INFO: (4) /api/v1/namespaces/proxy-1384/pods/proxy-service-plbjx-rl9rr/proxy/: <a href="/api/v1/namespaces/proxy-1384/pods/proxy-service-plbjx-rl9rr/proxy/rewriteme">test</a> (200; 5.853074ms)
  Sep 13 13:56:16.113: INFO: (4) /api/v1/namespaces/proxy-1384/services/proxy-service-plbjx:portname2/proxy/: bar (200; 7.710513ms)
  Sep 13 13:56:16.113: INFO: (4) /api/v1/namespaces/proxy-1384/pods/http:proxy-service-plbjx-rl9rr:1080/proxy/: <a href="/api/v1/namespaces/proxy-1384/pods/http:proxy-service-plbjx-rl9rr:1080/proxy/rewriteme">... (200; 7.779811ms)
  Sep 13 13:56:16.113: INFO: (4) /api/v1/namespaces/proxy-1384/pods/http:proxy-service-plbjx-rl9rr:162/proxy/: bar (200; 7.663622ms)
  Sep 13 13:56:16.113: INFO: (4) /api/v1/namespaces/proxy-1384/pods/https:proxy-service-plbjx-rl9rr:443/proxy/: <a href="/api/v1/namespaces/proxy-1384/pods/https:proxy-service-plbjx-rl9rr:443/proxy/tlsrewritem... (200; 7.692481ms)
  Sep 13 13:56:16.114: INFO: (4) /api/v1/namespaces/proxy-1384/services/http:proxy-service-plbjx:portname1/proxy/: foo (200; 7.925097ms)
  Sep 13 13:56:16.114: INFO: (4) /api/v1/namespaces/proxy-1384/services/https:proxy-service-plbjx:tlsportname1/proxy/: tls baz (200; 7.901026ms)
  Sep 13 13:56:16.114: INFO: (4) /api/v1/namespaces/proxy-1384/pods/http:proxy-service-plbjx-rl9rr:160/proxy/: foo (200; 7.809081ms)
  Sep 13 13:56:16.114: INFO: (4) /api/v1/namespaces/proxy-1384/services/http:proxy-service-plbjx:portname2/proxy/: bar (200; 7.825367ms)
  Sep 13 13:56:16.114: INFO: (4) /api/v1/namespaces/proxy-1384/services/https:proxy-service-plbjx:tlsportname2/proxy/: tls qux (200; 7.839201ms)
  Sep 13 13:56:16.114: INFO: (4) /api/v1/namespaces/proxy-1384/pods/https:proxy-service-plbjx-rl9rr:460/proxy/: tls baz (200; 7.96648ms)
  Sep 13 13:56:16.114: INFO: (4) /api/v1/namespaces/proxy-1384/services/proxy-service-plbjx:portname1/proxy/: foo (200; 8.277042ms)
  Sep 13 13:56:16.114: INFO: (4) /api/v1/namespaces/proxy-1384/pods/proxy-service-plbjx-rl9rr:1080/proxy/: <a href="/api/v1/namespaces/proxy-1384/pods/proxy-service-plbjx-rl9rr:1080/proxy/rewriteme">test<... (200; 8.210332ms)
  Sep 13 13:56:16.119: INFO: (5) /api/v1/namespaces/proxy-1384/pods/proxy-service-plbjx-rl9rr/proxy/: <a href="/api/v1/namespaces/proxy-1384/pods/proxy-service-plbjx-rl9rr/proxy/rewriteme">test</a> (200; 4.266138ms)
  Sep 13 13:56:16.119: INFO: (5) /api/v1/namespaces/proxy-1384/pods/http:proxy-service-plbjx-rl9rr:1080/proxy/: <a href="/api/v1/namespaces/proxy-1384/pods/http:proxy-service-plbjx-rl9rr:1080/proxy/rewriteme">... (200; 4.758188ms)
  Sep 13 13:56:16.120: INFO: (5) /api/v1/namespaces/proxy-1384/services/proxy-service-plbjx:portname2/proxy/: bar (200; 5.286947ms)
  Sep 13 13:56:16.120: INFO: (5) /api/v1/namespaces/proxy-1384/services/http:proxy-service-plbjx:portname1/proxy/: foo (200; 5.806664ms)
  Sep 13 13:56:16.120: INFO: (5) /api/v1/namespaces/proxy-1384/pods/proxy-service-plbjx-rl9rr:160/proxy/: foo (200; 5.654513ms)
  Sep 13 13:56:16.121: INFO: (5) /api/v1/namespaces/proxy-1384/services/https:proxy-service-plbjx:tlsportname1/proxy/: tls baz (200; 6.437267ms)
  Sep 13 13:56:16.121: INFO: (5) /api/v1/namespaces/proxy-1384/pods/https:proxy-service-plbjx-rl9rr:443/proxy/: <a href="/api/v1/namespaces/proxy-1384/pods/https:proxy-service-plbjx-rl9rr:443/proxy/tlsrewritem... (200; 5.837948ms)
  Sep 13 13:56:16.121: INFO: (5) /api/v1/namespaces/proxy-1384/pods/http:proxy-service-plbjx-rl9rr:162/proxy/: bar (200; 6.332228ms)
  Sep 13 13:56:16.121: INFO: (5) /api/v1/namespaces/proxy-1384/pods/https:proxy-service-plbjx-rl9rr:460/proxy/: tls baz (200; 6.542319ms)
  Sep 13 13:56:16.121: INFO: (5) /api/v1/namespaces/proxy-1384/services/proxy-service-plbjx:portname1/proxy/: foo (200; 6.519903ms)
  Sep 13 13:56:16.121: INFO: (5) /api/v1/namespaces/proxy-1384/pods/http:proxy-service-plbjx-rl9rr:160/proxy/: foo (200; 6.373534ms)
  Sep 13 13:56:16.121: INFO: (5) /api/v1/namespaces/proxy-1384/services/https:proxy-service-plbjx:tlsportname2/proxy/: tls qux (200; 6.438368ms)
  Sep 13 13:56:16.121: INFO: (5) /api/v1/namespaces/proxy-1384/pods/https:proxy-service-plbjx-rl9rr:462/proxy/: tls qux (200; 7.277321ms)
  Sep 13 13:56:16.121: INFO: (5) /api/v1/namespaces/proxy-1384/pods/proxy-service-plbjx-rl9rr:1080/proxy/: <a href="/api/v1/namespaces/proxy-1384/pods/proxy-service-plbjx-rl9rr:1080/proxy/rewriteme">test<... (200; 6.691344ms)
  Sep 13 13:56:16.121: INFO: (5) /api/v1/namespaces/proxy-1384/services/http:proxy-service-plbjx:portname2/proxy/: bar (200; 6.556602ms)
  Sep 13 13:56:16.122: INFO: (5) /api/v1/namespaces/proxy-1384/pods/proxy-service-plbjx-rl9rr:162/proxy/: bar (200; 7.300153ms)
  Sep 13 13:56:16.127: INFO: (6) /api/v1/namespaces/proxy-1384/pods/proxy-service-plbjx-rl9rr:160/proxy/: foo (200; 4.363544ms)
  Sep 13 13:56:16.127: INFO: (6) /api/v1/namespaces/proxy-1384/pods/https:proxy-service-plbjx-rl9rr:460/proxy/: tls baz (200; 4.411426ms)
  Sep 13 13:56:16.127: INFO: (6) /api/v1/namespaces/proxy-1384/pods/proxy-service-plbjx-rl9rr/proxy/: <a href="/api/v1/namespaces/proxy-1384/pods/proxy-service-plbjx-rl9rr/proxy/rewriteme">test</a> (200; 4.742416ms)
  Sep 13 13:56:16.127: INFO: (6) /api/v1/namespaces/proxy-1384/pods/http:proxy-service-plbjx-rl9rr:162/proxy/: bar (200; 5.4252ms)
  Sep 13 13:56:16.127: INFO: (6) /api/v1/namespaces/proxy-1384/pods/proxy-service-plbjx-rl9rr:1080/proxy/: <a href="/api/v1/namespaces/proxy-1384/pods/proxy-service-plbjx-rl9rr:1080/proxy/rewriteme">test<... (200; 5.455562ms)
  Sep 13 13:56:16.128: INFO: (6) /api/v1/namespaces/proxy-1384/pods/http:proxy-service-plbjx-rl9rr:160/proxy/: foo (200; 6.024713ms)
  Sep 13 13:56:16.129: INFO: (6) /api/v1/namespaces/proxy-1384/pods/http:proxy-service-plbjx-rl9rr:1080/proxy/: <a href="/api/v1/namespaces/proxy-1384/pods/http:proxy-service-plbjx-rl9rr:1080/proxy/rewriteme">... (200; 6.876269ms)
  Sep 13 13:56:16.129: INFO: (6) /api/v1/namespaces/proxy-1384/pods/proxy-service-plbjx-rl9rr:162/proxy/: bar (200; 7.022688ms)
  Sep 13 13:56:16.130: INFO: (6) /api/v1/namespaces/proxy-1384/services/http:proxy-service-plbjx:portname2/proxy/: bar (200; 7.539206ms)
  Sep 13 13:56:16.130: INFO: (6) /api/v1/namespaces/proxy-1384/services/https:proxy-service-plbjx:tlsportname1/proxy/: tls baz (200; 7.399363ms)
  Sep 13 13:56:16.130: INFO: (6) /api/v1/namespaces/proxy-1384/pods/https:proxy-service-plbjx-rl9rr:462/proxy/: tls qux (200; 7.520415ms)
  Sep 13 13:56:16.130: INFO: (6) /api/v1/namespaces/proxy-1384/services/proxy-service-plbjx:portname1/proxy/: foo (200; 8.065514ms)
  Sep 13 13:56:16.130: INFO: (6) /api/v1/namespaces/proxy-1384/services/proxy-service-plbjx:portname2/proxy/: bar (200; 8.009758ms)
  Sep 13 13:56:16.130: INFO: (6) /api/v1/namespaces/proxy-1384/services/https:proxy-service-plbjx:tlsportname2/proxy/: tls qux (200; 8.098979ms)
  Sep 13 13:56:16.130: INFO: (6) /api/v1/namespaces/proxy-1384/pods/https:proxy-service-plbjx-rl9rr:443/proxy/: <a href="/api/v1/namespaces/proxy-1384/pods/https:proxy-service-plbjx-rl9rr:443/proxy/tlsrewritem... (200; 8.493943ms)
  Sep 13 13:56:16.131: INFO: (6) /api/v1/namespaces/proxy-1384/services/http:proxy-service-plbjx:portname1/proxy/: foo (200; 9.136404ms)
  Sep 13 13:56:16.135: INFO: (7) /api/v1/namespaces/proxy-1384/pods/http:proxy-service-plbjx-rl9rr:160/proxy/: foo (200; 3.860989ms)
  Sep 13 13:56:16.135: INFO: (7) /api/v1/namespaces/proxy-1384/pods/http:proxy-service-plbjx-rl9rr:162/proxy/: bar (200; 3.825335ms)
  Sep 13 13:56:16.135: INFO: (7) /api/v1/namespaces/proxy-1384/pods/proxy-service-plbjx-rl9rr:160/proxy/: foo (200; 4.064762ms)
  Sep 13 13:56:16.137: INFO: (7) /api/v1/namespaces/proxy-1384/services/proxy-service-plbjx:portname1/proxy/: foo (200; 5.175715ms)
  Sep 13 13:56:16.137: INFO: (7) /api/v1/namespaces/proxy-1384/services/http:proxy-service-plbjx:portname2/proxy/: bar (200; 5.050705ms)
  Sep 13 13:56:16.137: INFO: (7) /api/v1/namespaces/proxy-1384/pods/proxy-service-plbjx-rl9rr:1080/proxy/: <a href="/api/v1/namespaces/proxy-1384/pods/proxy-service-plbjx-rl9rr:1080/proxy/rewriteme">test<... (200; 5.212591ms)
  Sep 13 13:56:16.137: INFO: (7) /api/v1/namespaces/proxy-1384/pods/http:proxy-service-plbjx-rl9rr:1080/proxy/: <a href="/api/v1/namespaces/proxy-1384/pods/http:proxy-service-plbjx-rl9rr:1080/proxy/rewriteme">... (200; 5.458669ms)
  Sep 13 13:56:16.137: INFO: (7) /api/v1/namespaces/proxy-1384/services/proxy-service-plbjx:portname2/proxy/: bar (200; 5.490997ms)
  Sep 13 13:56:16.137: INFO: (7) /api/v1/namespaces/proxy-1384/pods/proxy-service-plbjx-rl9rr/proxy/: <a href="/api/v1/namespaces/proxy-1384/pods/proxy-service-plbjx-rl9rr/proxy/rewriteme">test</a> (200; 5.735951ms)
  Sep 13 13:56:16.137: INFO: (7) /api/v1/namespaces/proxy-1384/pods/https:proxy-service-plbjx-rl9rr:460/proxy/: tls baz (200; 5.60701ms)
  Sep 13 13:56:16.138: INFO: (7) /api/v1/namespaces/proxy-1384/services/http:proxy-service-plbjx:portname1/proxy/: foo (200; 6.084142ms)
  Sep 13 13:56:16.138: INFO: (7) /api/v1/namespaces/proxy-1384/services/https:proxy-service-plbjx:tlsportname2/proxy/: tls qux (200; 6.518475ms)
  Sep 13 13:56:16.138: INFO: (7) /api/v1/namespaces/proxy-1384/services/https:proxy-service-plbjx:tlsportname1/proxy/: tls baz (200; 6.504033ms)
  Sep 13 13:56:16.138: INFO: (7) /api/v1/namespaces/proxy-1384/pods/https:proxy-service-plbjx-rl9rr:462/proxy/: tls qux (200; 6.605842ms)
  Sep 13 13:56:16.139: INFO: (7) /api/v1/namespaces/proxy-1384/pods/https:proxy-service-plbjx-rl9rr:443/proxy/: <a href="/api/v1/namespaces/proxy-1384/pods/https:proxy-service-plbjx-rl9rr:443/proxy/tlsrewritem... (200; 6.753499ms)
  Sep 13 13:56:16.139: INFO: (7) /api/v1/namespaces/proxy-1384/pods/proxy-service-plbjx-rl9rr:162/proxy/: bar (200; 6.684461ms)
  Sep 13 13:56:16.143: INFO: (8) /api/v1/namespaces/proxy-1384/pods/http:proxy-service-plbjx-rl9rr:160/proxy/: foo (200; 4.071685ms)
  Sep 13 13:56:16.143: INFO: (8) /api/v1/namespaces/proxy-1384/pods/proxy-service-plbjx-rl9rr:162/proxy/: bar (200; 4.200238ms)
  Sep 13 13:56:16.144: INFO: (8) /api/v1/namespaces/proxy-1384/pods/proxy-service-plbjx-rl9rr:160/proxy/: foo (200; 4.777277ms)
  Sep 13 13:56:16.145: INFO: (8) /api/v1/namespaces/proxy-1384/services/proxy-service-plbjx:portname1/proxy/: foo (200; 5.906949ms)
  Sep 13 13:56:16.145: INFO: (8) /api/v1/namespaces/proxy-1384/services/proxy-service-plbjx:portname2/proxy/: bar (200; 6.392092ms)
  Sep 13 13:56:16.145: INFO: (8) /api/v1/namespaces/proxy-1384/pods/proxy-service-plbjx-rl9rr/proxy/: <a href="/api/v1/namespaces/proxy-1384/pods/proxy-service-plbjx-rl9rr/proxy/rewriteme">test</a> (200; 6.544184ms)
  Sep 13 13:56:16.145: INFO: (8) /api/v1/namespaces/proxy-1384/pods/proxy-service-plbjx-rl9rr:1080/proxy/: <a href="/api/v1/namespaces/proxy-1384/pods/proxy-service-plbjx-rl9rr:1080/proxy/rewriteme">test<... (200; 6.396091ms)
  Sep 13 13:56:16.145: INFO: (8) /api/v1/namespaces/proxy-1384/pods/https:proxy-service-plbjx-rl9rr:460/proxy/: tls baz (200; 6.443039ms)
  Sep 13 13:56:16.145: INFO: (8) /api/v1/namespaces/proxy-1384/pods/https:proxy-service-plbjx-rl9rr:462/proxy/: tls qux (200; 6.43728ms)
  Sep 13 13:56:16.146: INFO: (8) /api/v1/namespaces/proxy-1384/pods/http:proxy-service-plbjx-rl9rr:1080/proxy/: <a href="/api/v1/namespaces/proxy-1384/pods/http:proxy-service-plbjx-rl9rr:1080/proxy/rewriteme">... (200; 6.557661ms)
  Sep 13 13:56:16.146: INFO: (8) /api/v1/namespaces/proxy-1384/pods/http:proxy-service-plbjx-rl9rr:162/proxy/: bar (200; 6.689343ms)
  Sep 13 13:56:16.146: INFO: (8) /api/v1/namespaces/proxy-1384/pods/https:proxy-service-plbjx-rl9rr:443/proxy/: <a href="/api/v1/namespaces/proxy-1384/pods/https:proxy-service-plbjx-rl9rr:443/proxy/tlsrewritem... (200; 6.617543ms)
  Sep 13 13:56:16.146: INFO: (8) /api/v1/namespaces/proxy-1384/services/https:proxy-service-plbjx:tlsportname2/proxy/: tls qux (200; 6.94236ms)
  Sep 13 13:56:16.146: INFO: (8) /api/v1/namespaces/proxy-1384/services/http:proxy-service-plbjx:portname1/proxy/: foo (200; 7.014828ms)
  Sep 13 13:56:16.146: INFO: (8) /api/v1/namespaces/proxy-1384/services/http:proxy-service-plbjx:portname2/proxy/: bar (200; 6.993454ms)
  Sep 13 13:56:16.146: INFO: (8) /api/v1/namespaces/proxy-1384/services/https:proxy-service-plbjx:tlsportname1/proxy/: tls baz (200; 7.207177ms)
  Sep 13 13:56:16.149: INFO: (9) /api/v1/namespaces/proxy-1384/pods/https:proxy-service-plbjx-rl9rr:462/proxy/: tls qux (200; 3.387591ms)
  Sep 13 13:56:16.150: INFO: (9) /api/v1/namespaces/proxy-1384/pods/proxy-service-plbjx-rl9rr:160/proxy/: foo (200; 3.270005ms)
  Sep 13 13:56:16.152: INFO: (9) /api/v1/namespaces/proxy-1384/pods/proxy-service-plbjx-rl9rr:1080/proxy/: <a href="/api/v1/namespaces/proxy-1384/pods/proxy-service-plbjx-rl9rr:1080/proxy/rewriteme">test<... (200; 5.13173ms)
  Sep 13 13:56:16.152: INFO: (9) /api/v1/namespaces/proxy-1384/pods/proxy-service-plbjx-rl9rr/proxy/: <a href="/api/v1/namespaces/proxy-1384/pods/proxy-service-plbjx-rl9rr/proxy/rewriteme">test</a> (200; 5.366718ms)
  Sep 13 13:56:16.152: INFO: (9) /api/v1/namespaces/proxy-1384/pods/http:proxy-service-plbjx-rl9rr:162/proxy/: bar (200; 5.460863ms)
  Sep 13 13:56:16.152: INFO: (9) /api/v1/namespaces/proxy-1384/pods/https:proxy-service-plbjx-rl9rr:460/proxy/: tls baz (200; 5.758094ms)
  Sep 13 13:56:16.152: INFO: (9) /api/v1/namespaces/proxy-1384/services/proxy-service-plbjx:portname1/proxy/: foo (200; 6.310665ms)
  Sep 13 13:56:16.152: INFO: (9) /api/v1/namespaces/proxy-1384/pods/proxy-service-plbjx-rl9rr:162/proxy/: bar (200; 6.247961ms)
  Sep 13 13:56:16.153: INFO: (9) /api/v1/namespaces/proxy-1384/services/http:proxy-service-plbjx:portname1/proxy/: foo (200; 6.260079ms)
  Sep 13 13:56:16.153: INFO: (9) /api/v1/namespaces/proxy-1384/pods/https:proxy-service-plbjx-rl9rr:443/proxy/: <a href="/api/v1/namespaces/proxy-1384/pods/https:proxy-service-plbjx-rl9rr:443/proxy/tlsrewritem... (200; 5.893196ms)
  Sep 13 13:56:16.153: INFO: (9) /api/v1/namespaces/proxy-1384/pods/http:proxy-service-plbjx-rl9rr:1080/proxy/: <a href="/api/v1/namespaces/proxy-1384/pods/http:proxy-service-plbjx-rl9rr:1080/proxy/rewriteme">... (200; 7.306896ms)
  Sep 13 13:56:16.153: INFO: (9) /api/v1/namespaces/proxy-1384/services/https:proxy-service-plbjx:tlsportname2/proxy/: tls qux (200; 6.679667ms)
  Sep 13 13:56:16.154: INFO: (9) /api/v1/namespaces/proxy-1384/services/proxy-service-plbjx:portname2/proxy/: bar (200; 7.178483ms)
  Sep 13 13:56:16.154: INFO: (9) /api/v1/namespaces/proxy-1384/pods/http:proxy-service-plbjx-rl9rr:160/proxy/: foo (200; 6.863246ms)
  Sep 13 13:56:16.154: INFO: (9) /api/v1/namespaces/proxy-1384/services/http:proxy-service-plbjx:portname2/proxy/: bar (200; 6.834863ms)
  Sep 13 13:56:16.154: INFO: (9) /api/v1/namespaces/proxy-1384/services/https:proxy-service-plbjx:tlsportname1/proxy/: tls baz (200; 7.336773ms)
  Sep 13 13:56:16.158: INFO: (10) /api/v1/namespaces/proxy-1384/pods/http:proxy-service-plbjx-rl9rr:162/proxy/: bar (200; 3.517491ms)
  Sep 13 13:56:16.158: INFO: (10) /api/v1/namespaces/proxy-1384/pods/http:proxy-service-plbjx-rl9rr:1080/proxy/: <a href="/api/v1/namespaces/proxy-1384/pods/http:proxy-service-plbjx-rl9rr:1080/proxy/rewriteme">... (200; 3.368371ms)
  Sep 13 13:56:16.159: INFO: (10) /api/v1/namespaces/proxy-1384/pods/proxy-service-plbjx-rl9rr:160/proxy/: foo (200; 3.946242ms)
  Sep 13 13:56:16.159: INFO: (10) /api/v1/namespaces/proxy-1384/services/proxy-service-plbjx:portname2/proxy/: bar (200; 4.29799ms)
  Sep 13 13:56:16.159: INFO: (10) /api/v1/namespaces/proxy-1384/services/http:proxy-service-plbjx:portname2/proxy/: bar (200; 4.888476ms)
  Sep 13 13:56:16.160: INFO: (10) /api/v1/namespaces/proxy-1384/services/http:proxy-service-plbjx:portname1/proxy/: foo (200; 4.927116ms)
  Sep 13 13:56:16.160: INFO: (10) /api/v1/namespaces/proxy-1384/pods/proxy-service-plbjx-rl9rr:162/proxy/: bar (200; 4.698604ms)
  Sep 13 13:56:16.160: INFO: (10) /api/v1/namespaces/proxy-1384/pods/https:proxy-service-plbjx-rl9rr:443/proxy/: <a href="/api/v1/namespaces/proxy-1384/pods/https:proxy-service-plbjx-rl9rr:443/proxy/tlsrewritem... (200; 5.102525ms)
  Sep 13 13:56:16.160: INFO: (10) /api/v1/namespaces/proxy-1384/pods/https:proxy-service-plbjx-rl9rr:462/proxy/: tls qux (200; 5.051611ms)
  Sep 13 13:56:16.160: INFO: (10) /api/v1/namespaces/proxy-1384/services/https:proxy-service-plbjx:tlsportname2/proxy/: tls qux (200; 5.193485ms)
  Sep 13 13:56:16.160: INFO: (10) /api/v1/namespaces/proxy-1384/services/https:proxy-service-plbjx:tlsportname1/proxy/: tls baz (200; 4.951125ms)
  Sep 13 13:56:16.160: INFO: (10) /api/v1/namespaces/proxy-1384/pods/https:proxy-service-plbjx-rl9rr:460/proxy/: tls baz (200; 5.435295ms)
  Sep 13 13:56:16.161: INFO: (10) /api/v1/namespaces/proxy-1384/services/proxy-service-plbjx:portname1/proxy/: foo (200; 5.523653ms)
  Sep 13 13:56:16.161: INFO: (10) /api/v1/namespaces/proxy-1384/pods/proxy-service-plbjx-rl9rr/proxy/: <a href="/api/v1/namespaces/proxy-1384/pods/proxy-service-plbjx-rl9rr/proxy/rewriteme">test</a> (200; 6.077542ms)
  Sep 13 13:56:16.162: INFO: (10) /api/v1/namespaces/proxy-1384/pods/proxy-service-plbjx-rl9rr:1080/proxy/: <a href="/api/v1/namespaces/proxy-1384/pods/proxy-service-plbjx-rl9rr:1080/proxy/rewriteme">test<... (200; 6.373204ms)
  Sep 13 13:56:16.162: INFO: (10) /api/v1/namespaces/proxy-1384/pods/http:proxy-service-plbjx-rl9rr:160/proxy/: foo (200; 6.911249ms)
  Sep 13 13:56:16.167: INFO: (11) /api/v1/namespaces/proxy-1384/services/https:proxy-service-plbjx:tlsportname1/proxy/: tls baz (200; 4.324598ms)
  Sep 13 13:56:16.167: INFO: (11) /api/v1/namespaces/proxy-1384/pods/proxy-service-plbjx-rl9rr:160/proxy/: foo (200; 4.831102ms)
  Sep 13 13:56:16.167: INFO: (11) /api/v1/namespaces/proxy-1384/pods/http:proxy-service-plbjx-rl9rr:1080/proxy/: <a href="/api/v1/namespaces/proxy-1384/pods/http:proxy-service-plbjx-rl9rr:1080/proxy/rewriteme">... (200; 4.88967ms)
  Sep 13 13:56:16.167: INFO: (11) /api/v1/namespaces/proxy-1384/pods/proxy-service-plbjx-rl9rr:1080/proxy/: <a href="/api/v1/namespaces/proxy-1384/pods/proxy-service-plbjx-rl9rr:1080/proxy/rewriteme">test<... (200; 5.185468ms)
  Sep 13 13:56:16.168: INFO: (11) /api/v1/namespaces/proxy-1384/pods/https:proxy-service-plbjx-rl9rr:462/proxy/: tls qux (200; 5.169793ms)
  Sep 13 13:56:16.167: INFO: (11) /api/v1/namespaces/proxy-1384/pods/http:proxy-service-plbjx-rl9rr:160/proxy/: foo (200; 5.31611ms)
  Sep 13 13:56:16.167: INFO: (11) /api/v1/namespaces/proxy-1384/pods/http:proxy-service-plbjx-rl9rr:162/proxy/: bar (200; 5.201013ms)
  Sep 13 13:56:16.168: INFO: (11) /api/v1/namespaces/proxy-1384/pods/https:proxy-service-plbjx-rl9rr:443/proxy/: <a href="/api/v1/namespaces/proxy-1384/pods/https:proxy-service-plbjx-rl9rr:443/proxy/tlsrewritem... (200; 5.174653ms)
  Sep 13 13:56:16.168: INFO: (11) /api/v1/namespaces/proxy-1384/pods/proxy-service-plbjx-rl9rr/proxy/: <a href="/api/v1/namespaces/proxy-1384/pods/proxy-service-plbjx-rl9rr/proxy/rewriteme">test</a> (200; 5.263453ms)
  Sep 13 13:56:16.168: INFO: (11) /api/v1/namespaces/proxy-1384/pods/proxy-service-plbjx-rl9rr:162/proxy/: bar (200; 5.197326ms)
  Sep 13 13:56:16.168: INFO: (11) /api/v1/namespaces/proxy-1384/pods/https:proxy-service-plbjx-rl9rr:460/proxy/: tls baz (200; 5.72307ms)
  Sep 13 13:56:16.168: INFO: (11) /api/v1/namespaces/proxy-1384/services/proxy-service-plbjx:portname1/proxy/: foo (200; 5.807903ms)
  Sep 13 13:56:16.168: INFO: (11) /api/v1/namespaces/proxy-1384/services/proxy-service-plbjx:portname2/proxy/: bar (200; 5.650203ms)
  Sep 13 13:56:16.169: INFO: (11) /api/v1/namespaces/proxy-1384/services/http:proxy-service-plbjx:portname1/proxy/: foo (200; 6.518474ms)
  Sep 13 13:56:16.169: INFO: (11) /api/v1/namespaces/proxy-1384/services/http:proxy-service-plbjx:portname2/proxy/: bar (200; 6.823029ms)
  Sep 13 13:56:16.170: INFO: (11) /api/v1/namespaces/proxy-1384/services/https:proxy-service-plbjx:tlsportname2/proxy/: tls qux (200; 7.455017ms)
  Sep 13 13:56:16.175: INFO: (12) /api/v1/namespaces/proxy-1384/pods/http:proxy-service-plbjx-rl9rr:1080/proxy/: <a href="/api/v1/namespaces/proxy-1384/pods/http:proxy-service-plbjx-rl9rr:1080/proxy/rewriteme">... (200; 5.417783ms)
  Sep 13 13:56:16.175: INFO: (12) /api/v1/namespaces/proxy-1384/pods/https:proxy-service-plbjx-rl9rr:460/proxy/: tls baz (200; 5.514944ms)
  Sep 13 13:56:16.175: INFO: (12) /api/v1/namespaces/proxy-1384/pods/proxy-service-plbjx-rl9rr:1080/proxy/: <a href="/api/v1/namespaces/proxy-1384/pods/proxy-service-plbjx-rl9rr:1080/proxy/rewriteme">test<... (200; 5.441225ms)
  Sep 13 13:56:16.175: INFO: (12) /api/v1/namespaces/proxy-1384/pods/proxy-service-plbjx-rl9rr:160/proxy/: foo (200; 5.404786ms)
  Sep 13 13:56:16.175: INFO: (12) /api/v1/namespaces/proxy-1384/pods/proxy-service-plbjx-rl9rr:162/proxy/: bar (200; 5.406167ms)
  Sep 13 13:56:16.175: INFO: (12) /api/v1/namespaces/proxy-1384/pods/https:proxy-service-plbjx-rl9rr:443/proxy/: <a href="/api/v1/namespaces/proxy-1384/pods/https:proxy-service-plbjx-rl9rr:443/proxy/tlsrewritem... (200; 5.389289ms)
  Sep 13 13:56:16.176: INFO: (12) /api/v1/namespaces/proxy-1384/pods/http:proxy-service-plbjx-rl9rr:160/proxy/: foo (200; 5.509527ms)
  Sep 13 13:56:16.176: INFO: (12) /api/v1/namespaces/proxy-1384/pods/https:proxy-service-plbjx-rl9rr:462/proxy/: tls qux (200; 5.874935ms)
  Sep 13 13:56:16.176: INFO: (12) /api/v1/namespaces/proxy-1384/pods/proxy-service-plbjx-rl9rr/proxy/: <a href="/api/v1/namespaces/proxy-1384/pods/proxy-service-plbjx-rl9rr/proxy/rewriteme">test</a> (200; 6.174656ms)
  Sep 13 13:56:16.177: INFO: (12) /api/v1/namespaces/proxy-1384/services/https:proxy-service-plbjx:tlsportname2/proxy/: tls qux (200; 6.705057ms)
  Sep 13 13:56:16.177: INFO: (12) /api/v1/namespaces/proxy-1384/pods/http:proxy-service-plbjx-rl9rr:162/proxy/: bar (200; 6.672589ms)
  Sep 13 13:56:16.177: INFO: (12) /api/v1/namespaces/proxy-1384/services/https:proxy-service-plbjx:tlsportname1/proxy/: tls baz (200; 6.95143ms)
  Sep 13 13:56:16.177: INFO: (12) /api/v1/namespaces/proxy-1384/services/http:proxy-service-plbjx:portname1/proxy/: foo (200; 7.21619ms)
  Sep 13 13:56:16.177: INFO: (12) /api/v1/namespaces/proxy-1384/services/proxy-service-plbjx:portname1/proxy/: foo (200; 7.203483ms)
  Sep 13 13:56:16.177: INFO: (12) /api/v1/namespaces/proxy-1384/services/http:proxy-service-plbjx:portname2/proxy/: bar (200; 7.314527ms)
  Sep 13 13:56:16.177: INFO: (12) /api/v1/namespaces/proxy-1384/services/proxy-service-plbjx:portname2/proxy/: bar (200; 7.521075ms)
  Sep 13 13:56:16.181: INFO: (13) /api/v1/namespaces/proxy-1384/pods/https:proxy-service-plbjx-rl9rr:462/proxy/: tls qux (200; 3.388535ms)
  Sep 13 13:56:16.181: INFO: (13) /api/v1/namespaces/proxy-1384/pods/http:proxy-service-plbjx-rl9rr:1080/proxy/: <a href="/api/v1/namespaces/proxy-1384/pods/http:proxy-service-plbjx-rl9rr:1080/proxy/rewriteme">... (200; 3.47878ms)
  Sep 13 13:56:16.181: INFO: (13) /api/v1/namespaces/proxy-1384/pods/http:proxy-service-plbjx-rl9rr:160/proxy/: foo (200; 3.620755ms)
  Sep 13 13:56:16.182: INFO: (13) /api/v1/namespaces/proxy-1384/pods/http:proxy-service-plbjx-rl9rr:162/proxy/: bar (200; 4.204396ms)
  Sep 13 13:56:16.183: INFO: (13) /api/v1/namespaces/proxy-1384/pods/proxy-service-plbjx-rl9rr:160/proxy/: foo (200; 4.789909ms)
  Sep 13 13:56:16.183: INFO: (13) /api/v1/namespaces/proxy-1384/pods/proxy-service-plbjx-rl9rr/proxy/: <a href="/api/v1/namespaces/proxy-1384/pods/proxy-service-plbjx-rl9rr/proxy/rewriteme">test</a> (200; 5.060144ms)
  Sep 13 13:56:16.183: INFO: (13) /api/v1/namespaces/proxy-1384/pods/https:proxy-service-plbjx-rl9rr:443/proxy/: <a href="/api/v1/namespaces/proxy-1384/pods/https:proxy-service-plbjx-rl9rr:443/proxy/tlsrewritem... (200; 5.583242ms)
  Sep 13 13:56:16.184: INFO: (13) /api/v1/namespaces/proxy-1384/services/http:proxy-service-plbjx:portname2/proxy/: bar (200; 6.131821ms)
  Sep 13 13:56:16.184: INFO: (13) /api/v1/namespaces/proxy-1384/pods/proxy-service-plbjx-rl9rr:162/proxy/: bar (200; 5.995065ms)
  Sep 13 13:56:16.184: INFO: (13) /api/v1/namespaces/proxy-1384/services/proxy-service-plbjx:portname1/proxy/: foo (200; 6.313027ms)
  Sep 13 13:56:16.184: INFO: (13) /api/v1/namespaces/proxy-1384/services/http:proxy-service-plbjx:portname1/proxy/: foo (200; 6.218227ms)
  Sep 13 13:56:16.184: INFO: (13) /api/v1/namespaces/proxy-1384/pods/https:proxy-service-plbjx-rl9rr:460/proxy/: tls baz (200; 6.264403ms)
  Sep 13 13:56:16.184: INFO: (13) /api/v1/namespaces/proxy-1384/services/https:proxy-service-plbjx:tlsportname1/proxy/: tls baz (200; 6.073892ms)
  Sep 13 13:56:16.184: INFO: (13) /api/v1/namespaces/proxy-1384/services/https:proxy-service-plbjx:tlsportname2/proxy/: tls qux (200; 6.158699ms)
  Sep 13 13:56:16.184: INFO: (13) /api/v1/namespaces/proxy-1384/pods/proxy-service-plbjx-rl9rr:1080/proxy/: <a href="/api/v1/namespaces/proxy-1384/pods/proxy-service-plbjx-rl9rr:1080/proxy/rewriteme">test<... (200; 6.424594ms)
  Sep 13 13:56:16.184: INFO: (13) /api/v1/namespaces/proxy-1384/services/proxy-service-plbjx:portname2/proxy/: bar (200; 6.361928ms)
  Sep 13 13:56:16.189: INFO: (14) /api/v1/namespaces/proxy-1384/pods/http:proxy-service-plbjx-rl9rr:1080/proxy/: <a href="/api/v1/namespaces/proxy-1384/pods/http:proxy-service-plbjx-rl9rr:1080/proxy/rewriteme">... (200; 4.260721ms)
  Sep 13 13:56:16.189: INFO: (14) /api/v1/namespaces/proxy-1384/pods/https:proxy-service-plbjx-rl9rr:460/proxy/: tls baz (200; 4.998951ms)
  Sep 13 13:56:16.189: INFO: (14) /api/v1/namespaces/proxy-1384/pods/http:proxy-service-plbjx-rl9rr:162/proxy/: bar (200; 4.908421ms)
  Sep 13 13:56:16.189: INFO: (14) /api/v1/namespaces/proxy-1384/pods/http:proxy-service-plbjx-rl9rr:160/proxy/: foo (200; 4.848038ms)
  Sep 13 13:56:16.189: INFO: (14) /api/v1/namespaces/proxy-1384/pods/https:proxy-service-plbjx-rl9rr:443/proxy/: <a href="/api/v1/namespaces/proxy-1384/pods/https:proxy-service-plbjx-rl9rr:443/proxy/tlsrewritem... (200; 4.812081ms)
  Sep 13 13:56:16.189: INFO: (14) /api/v1/namespaces/proxy-1384/pods/proxy-service-plbjx-rl9rr:1080/proxy/: <a href="/api/v1/namespaces/proxy-1384/pods/proxy-service-plbjx-rl9rr:1080/proxy/rewriteme">test<... (200; 4.888097ms)
  Sep 13 13:56:16.189: INFO: (14) /api/v1/namespaces/proxy-1384/pods/proxy-service-plbjx-rl9rr:162/proxy/: bar (200; 4.967903ms)
  Sep 13 13:56:16.189: INFO: (14) /api/v1/namespaces/proxy-1384/pods/proxy-service-plbjx-rl9rr/proxy/: <a href="/api/v1/namespaces/proxy-1384/pods/proxy-service-plbjx-rl9rr/proxy/rewriteme">test</a> (200; 5.140404ms)
  Sep 13 13:56:16.189: INFO: (14) /api/v1/namespaces/proxy-1384/pods/proxy-service-plbjx-rl9rr:160/proxy/: foo (200; 5.225059ms)
  Sep 13 13:56:16.190: INFO: (14) /api/v1/namespaces/proxy-1384/services/http:proxy-service-plbjx:portname1/proxy/: foo (200; 5.420726ms)
  Sep 13 13:56:16.190: INFO: (14) /api/v1/namespaces/proxy-1384/services/proxy-service-plbjx:portname2/proxy/: bar (200; 5.858351ms)
  Sep 13 13:56:16.190: INFO: (14) /api/v1/namespaces/proxy-1384/services/http:proxy-service-plbjx:portname2/proxy/: bar (200; 5.546056ms)
  Sep 13 13:56:16.190: INFO: (14) /api/v1/namespaces/proxy-1384/services/proxy-service-plbjx:portname1/proxy/: foo (200; 5.807745ms)
  Sep 13 13:56:16.190: INFO: (14) /api/v1/namespaces/proxy-1384/pods/https:proxy-service-plbjx-rl9rr:462/proxy/: tls qux (200; 5.720872ms)
  Sep 13 13:56:16.190: INFO: (14) /api/v1/namespaces/proxy-1384/services/https:proxy-service-plbjx:tlsportname2/proxy/: tls qux (200; 6.096857ms)
  Sep 13 13:56:16.190: INFO: (14) /api/v1/namespaces/proxy-1384/services/https:proxy-service-plbjx:tlsportname1/proxy/: tls baz (200; 6.237346ms)
  Sep 13 13:56:16.194: INFO: (15) /api/v1/namespaces/proxy-1384/pods/https:proxy-service-plbjx-rl9rr:460/proxy/: tls baz (200; 3.658715ms)
  Sep 13 13:56:16.194: INFO: (15) /api/v1/namespaces/proxy-1384/pods/proxy-service-plbjx-rl9rr:162/proxy/: bar (200; 3.703446ms)
  Sep 13 13:56:16.195: INFO: (15) /api/v1/namespaces/proxy-1384/pods/http:proxy-service-plbjx-rl9rr:160/proxy/: foo (200; 3.95913ms)
  Sep 13 13:56:16.195: INFO: (15) /api/v1/namespaces/proxy-1384/pods/http:proxy-service-plbjx-rl9rr:162/proxy/: bar (200; 4.012036ms)
  Sep 13 13:56:16.197: INFO: (15) /api/v1/namespaces/proxy-1384/pods/https:proxy-service-plbjx-rl9rr:443/proxy/: <a href="/api/v1/namespaces/proxy-1384/pods/https:proxy-service-plbjx-rl9rr:443/proxy/tlsrewritem... (200; 6.663028ms)
  Sep 13 13:56:16.197: INFO: (15) /api/v1/namespaces/proxy-1384/services/http:proxy-service-plbjx:portname1/proxy/: foo (200; 6.671201ms)
  Sep 13 13:56:16.197: INFO: (15) /api/v1/namespaces/proxy-1384/services/proxy-service-plbjx:portname2/proxy/: bar (200; 6.76842ms)
  Sep 13 13:56:16.198: INFO: (15) /api/v1/namespaces/proxy-1384/pods/proxy-service-plbjx-rl9rr:1080/proxy/: <a href="/api/v1/namespaces/proxy-1384/pods/proxy-service-plbjx-rl9rr:1080/proxy/rewriteme">test<... (200; 6.898204ms)
  Sep 13 13:56:16.198: INFO: (15) /api/v1/namespaces/proxy-1384/services/proxy-service-plbjx:portname1/proxy/: foo (200; 7.008946ms)
  Sep 13 13:56:16.198: INFO: (15) /api/v1/namespaces/proxy-1384/pods/proxy-service-plbjx-rl9rr/proxy/: <a href="/api/v1/namespaces/proxy-1384/pods/proxy-service-plbjx-rl9rr/proxy/rewriteme">test</a> (200; 6.956074ms)
  Sep 13 13:56:16.198: INFO: (15) /api/v1/namespaces/proxy-1384/services/https:proxy-service-plbjx:tlsportname1/proxy/: tls baz (200; 7.252195ms)
  Sep 13 13:56:16.198: INFO: (15) /api/v1/namespaces/proxy-1384/pods/http:proxy-service-plbjx-rl9rr:1080/proxy/: <a href="/api/v1/namespaces/proxy-1384/pods/http:proxy-service-plbjx-rl9rr:1080/proxy/rewriteme">... (200; 7.17255ms)
  Sep 13 13:56:16.198: INFO: (15) /api/v1/namespaces/proxy-1384/services/http:proxy-service-plbjx:portname2/proxy/: bar (200; 7.572221ms)
  Sep 13 13:56:16.198: INFO: (15) /api/v1/namespaces/proxy-1384/services/https:proxy-service-plbjx:tlsportname2/proxy/: tls qux (200; 7.657743ms)
  Sep 13 13:56:16.198: INFO: (15) /api/v1/namespaces/proxy-1384/pods/https:proxy-service-plbjx-rl9rr:462/proxy/: tls qux (200; 7.796633ms)
  Sep 13 13:56:16.199: INFO: (15) /api/v1/namespaces/proxy-1384/pods/proxy-service-plbjx-rl9rr:160/proxy/: foo (200; 7.844725ms)
  Sep 13 13:56:16.204: INFO: (16) /api/v1/namespaces/proxy-1384/pods/http:proxy-service-plbjx-rl9rr:160/proxy/: foo (200; 4.920619ms)
  Sep 13 13:56:16.204: INFO: (16) /api/v1/namespaces/proxy-1384/pods/proxy-service-plbjx-rl9rr/proxy/: <a href="/api/v1/namespaces/proxy-1384/pods/proxy-service-plbjx-rl9rr/proxy/rewriteme">test</a> (200; 4.979647ms)
  Sep 13 13:56:16.204: INFO: (16) /api/v1/namespaces/proxy-1384/pods/proxy-service-plbjx-rl9rr:162/proxy/: bar (200; 5.104949ms)
  Sep 13 13:56:16.205: INFO: (16) /api/v1/namespaces/proxy-1384/pods/https:proxy-service-plbjx-rl9rr:443/proxy/: <a href="/api/v1/namespaces/proxy-1384/pods/https:proxy-service-plbjx-rl9rr:443/proxy/tlsrewritem... (200; 5.727999ms)
  Sep 13 13:56:16.205: INFO: (16) /api/v1/namespaces/proxy-1384/pods/http:proxy-service-plbjx-rl9rr:1080/proxy/: <a href="/api/v1/namespaces/proxy-1384/pods/http:proxy-service-plbjx-rl9rr:1080/proxy/rewriteme">... (200; 5.5255ms)
  Sep 13 13:56:16.205: INFO: (16) /api/v1/namespaces/proxy-1384/pods/http:proxy-service-plbjx-rl9rr:162/proxy/: bar (200; 5.263758ms)
  Sep 13 13:56:16.205: INFO: (16) /api/v1/namespaces/proxy-1384/pods/https:proxy-service-plbjx-rl9rr:462/proxy/: tls qux (200; 5.80987ms)
  Sep 13 13:56:16.205: INFO: (16) /api/v1/namespaces/proxy-1384/pods/https:proxy-service-plbjx-rl9rr:460/proxy/: tls baz (200; 6.114696ms)
  Sep 13 13:56:16.205: INFO: (16) /api/v1/namespaces/proxy-1384/services/proxy-service-plbjx:portname1/proxy/: foo (200; 5.835336ms)
  Sep 13 13:56:16.205: INFO: (16) /api/v1/namespaces/proxy-1384/services/https:proxy-service-plbjx:tlsportname2/proxy/: tls qux (200; 6.59538ms)
  Sep 13 13:56:16.205: INFO: (16) /api/v1/namespaces/proxy-1384/services/proxy-service-plbjx:portname2/proxy/: bar (200; 6.433895ms)
  Sep 13 13:56:16.205: INFO: (16) /api/v1/namespaces/proxy-1384/pods/proxy-service-plbjx-rl9rr:160/proxy/: foo (200; 6.289641ms)
  Sep 13 13:56:16.205: INFO: (16) /api/v1/namespaces/proxy-1384/services/http:proxy-service-plbjx:portname1/proxy/: foo (200; 6.53842ms)
  Sep 13 13:56:16.206: INFO: (16) /api/v1/namespaces/proxy-1384/services/http:proxy-service-plbjx:portname2/proxy/: bar (200; 6.772978ms)
  Sep 13 13:56:16.206: INFO: (16) /api/v1/namespaces/proxy-1384/services/https:proxy-service-plbjx:tlsportname1/proxy/: tls baz (200; 6.455953ms)
  Sep 13 13:56:16.206: INFO: (16) /api/v1/namespaces/proxy-1384/pods/proxy-service-plbjx-rl9rr:1080/proxy/: <a href="/api/v1/namespaces/proxy-1384/pods/proxy-service-plbjx-rl9rr:1080/proxy/rewriteme">test<... (200; 6.181938ms)
  Sep 13 13:56:16.210: INFO: (17) /api/v1/namespaces/proxy-1384/pods/proxy-service-plbjx-rl9rr:160/proxy/: foo (200; 4.013624ms)
  Sep 13 13:56:16.210: INFO: (17) /api/v1/namespaces/proxy-1384/pods/proxy-service-plbjx-rl9rr:162/proxy/: bar (200; 4.007154ms)
  Sep 13 13:56:16.210: INFO: (17) /api/v1/namespaces/proxy-1384/pods/http:proxy-service-plbjx-rl9rr:1080/proxy/: <a href="/api/v1/namespaces/proxy-1384/pods/http:proxy-service-plbjx-rl9rr:1080/proxy/rewriteme">... (200; 3.901018ms)
  Sep 13 13:56:16.210: INFO: (17) /api/v1/namespaces/proxy-1384/pods/proxy-service-plbjx-rl9rr:1080/proxy/: <a href="/api/v1/namespaces/proxy-1384/pods/proxy-service-plbjx-rl9rr:1080/proxy/rewriteme">test<... (200; 3.855618ms)
  Sep 13 13:56:16.210: INFO: (17) /api/v1/namespaces/proxy-1384/pods/https:proxy-service-plbjx-rl9rr:460/proxy/: tls baz (200; 4.158117ms)
  Sep 13 13:56:16.210: INFO: (17) /api/v1/namespaces/proxy-1384/pods/http:proxy-service-plbjx-rl9rr:160/proxy/: foo (200; 3.96006ms)
  Sep 13 13:56:16.211: INFO: (17) /api/v1/namespaces/proxy-1384/services/https:proxy-service-plbjx:tlsportname2/proxy/: tls qux (200; 5.530985ms)
  Sep 13 13:56:16.211: INFO: (17) /api/v1/namespaces/proxy-1384/services/http:proxy-service-plbjx:portname1/proxy/: foo (200; 5.473506ms)
  Sep 13 13:56:16.211: INFO: (17) /api/v1/namespaces/proxy-1384/pods/http:proxy-service-plbjx-rl9rr:162/proxy/: bar (200; 5.137604ms)
  Sep 13 13:56:16.212: INFO: (17) /api/v1/namespaces/proxy-1384/services/proxy-service-plbjx:portname1/proxy/: foo (200; 5.454386ms)
  Sep 13 13:56:16.212: INFO: (17) /api/v1/namespaces/proxy-1384/pods/proxy-service-plbjx-rl9rr/proxy/: <a href="/api/v1/namespaces/proxy-1384/pods/proxy-service-plbjx-rl9rr/proxy/rewriteme">test</a> (200; 5.626885ms)
  Sep 13 13:56:16.212: INFO: (17) /api/v1/namespaces/proxy-1384/pods/https:proxy-service-plbjx-rl9rr:443/proxy/: <a href="/api/v1/namespaces/proxy-1384/pods/https:proxy-service-plbjx-rl9rr:443/proxy/tlsrewritem... (200; 5.870243ms)
  Sep 13 13:56:16.212: INFO: (17) /api/v1/namespaces/proxy-1384/services/https:proxy-service-plbjx:tlsportname1/proxy/: tls baz (200; 6.278231ms)
  Sep 13 13:56:16.212: INFO: (17) /api/v1/namespaces/proxy-1384/pods/https:proxy-service-plbjx-rl9rr:462/proxy/: tls qux (200; 6.067576ms)
  Sep 13 13:56:16.212: INFO: (17) /api/v1/namespaces/proxy-1384/services/proxy-service-plbjx:portname2/proxy/: bar (200; 6.694867ms)
  Sep 13 13:56:16.212: INFO: (17) /api/v1/namespaces/proxy-1384/services/http:proxy-service-plbjx:portname2/proxy/: bar (200; 6.094092ms)
  Sep 13 13:56:16.216: INFO: (18) /api/v1/namespaces/proxy-1384/pods/proxy-service-plbjx-rl9rr:162/proxy/: bar (200; 2.817784ms)
  Sep 13 13:56:16.217: INFO: (18) /api/v1/namespaces/proxy-1384/pods/https:proxy-service-plbjx-rl9rr:460/proxy/: tls baz (200; 4.286128ms)
  Sep 13 13:56:16.218: INFO: (18) /api/v1/namespaces/proxy-1384/pods/proxy-service-plbjx-rl9rr:160/proxy/: foo (200; 4.867557ms)
  Sep 13 13:56:16.218: INFO: (18) /api/v1/namespaces/proxy-1384/services/proxy-service-plbjx:portname2/proxy/: bar (200; 5.178317ms)
  Sep 13 13:56:16.218: INFO: (18) /api/v1/namespaces/proxy-1384/services/https:proxy-service-plbjx:tlsportname1/proxy/: tls baz (200; 5.107112ms)
  Sep 13 13:56:16.218: INFO: (18) /api/v1/namespaces/proxy-1384/pods/http:proxy-service-plbjx-rl9rr:1080/proxy/: <a href="/api/v1/namespaces/proxy-1384/pods/http:proxy-service-plbjx-rl9rr:1080/proxy/rewriteme">... (200; 5.204046ms)
  Sep 13 13:56:16.219: INFO: (18) /api/v1/namespaces/proxy-1384/pods/proxy-service-plbjx-rl9rr/proxy/: <a href="/api/v1/namespaces/proxy-1384/pods/proxy-service-plbjx-rl9rr/proxy/rewriteme">test</a> (200; 6.343271ms)
  Sep 13 13:56:16.219: INFO: (18) /api/v1/namespaces/proxy-1384/pods/http:proxy-service-plbjx-rl9rr:160/proxy/: foo (200; 6.362008ms)
  Sep 13 13:56:16.220: INFO: (18) /api/v1/namespaces/proxy-1384/pods/http:proxy-service-plbjx-rl9rr:162/proxy/: bar (200; 6.534551ms)
  Sep 13 13:56:16.220: INFO: (18) /api/v1/namespaces/proxy-1384/pods/https:proxy-service-plbjx-rl9rr:443/proxy/: <a href="/api/v1/namespaces/proxy-1384/pods/https:proxy-service-plbjx-rl9rr:443/proxy/tlsrewritem... (200; 6.461312ms)
  Sep 13 13:56:16.220: INFO: (18) /api/v1/namespaces/proxy-1384/pods/proxy-service-plbjx-rl9rr:1080/proxy/: <a href="/api/v1/namespaces/proxy-1384/pods/proxy-service-plbjx-rl9rr:1080/proxy/rewriteme">test<... (200; 6.667642ms)
  Sep 13 13:56:16.220: INFO: (18) /api/v1/namespaces/proxy-1384/pods/https:proxy-service-plbjx-rl9rr:462/proxy/: tls qux (200; 6.584937ms)
  Sep 13 13:56:16.220: INFO: (18) /api/v1/namespaces/proxy-1384/services/http:proxy-service-plbjx:portname2/proxy/: bar (200; 6.742644ms)
  Sep 13 13:56:16.220: INFO: (18) /api/v1/namespaces/proxy-1384/services/proxy-service-plbjx:portname1/proxy/: foo (200; 7.015106ms)
  Sep 13 13:56:16.220: INFO: (18) /api/v1/namespaces/proxy-1384/services/https:proxy-service-plbjx:tlsportname2/proxy/: tls qux (200; 6.903323ms)
  Sep 13 13:56:16.220: INFO: (18) /api/v1/namespaces/proxy-1384/services/http:proxy-service-plbjx:portname1/proxy/: foo (200; 6.84788ms)
  Sep 13 13:56:16.225: INFO: (19) /api/v1/namespaces/proxy-1384/pods/https:proxy-service-plbjx-rl9rr:462/proxy/: tls qux (200; 5.315114ms)
  Sep 13 13:56:16.226: INFO: (19) /api/v1/namespaces/proxy-1384/pods/https:proxy-service-plbjx-rl9rr:443/proxy/: <a href="/api/v1/namespaces/proxy-1384/pods/https:proxy-service-plbjx-rl9rr:443/proxy/tlsrewritem... (200; 5.353289ms)
  Sep 13 13:56:16.226: INFO: (19) /api/v1/namespaces/proxy-1384/services/http:proxy-service-plbjx:portname2/proxy/: bar (200; 5.726896ms)
  Sep 13 13:56:16.227: INFO: (19) /api/v1/namespaces/proxy-1384/pods/https:proxy-service-plbjx-rl9rr:460/proxy/: tls baz (200; 6.305123ms)
  Sep 13 13:56:16.227: INFO: (19) /api/v1/namespaces/proxy-1384/services/proxy-service-plbjx:portname2/proxy/: bar (200; 6.546026ms)
  Sep 13 13:56:16.227: INFO: (19) /api/v1/namespaces/proxy-1384/services/https:proxy-service-plbjx:tlsportname1/proxy/: tls baz (200; 6.454285ms)
  Sep 13 13:56:16.227: INFO: (19) /api/v1/namespaces/proxy-1384/pods/proxy-service-plbjx-rl9rr:1080/proxy/: <a href="/api/v1/namespaces/proxy-1384/pods/proxy-service-plbjx-rl9rr:1080/proxy/rewriteme">test<... (200; 6.735238ms)
  Sep 13 13:56:16.228: INFO: (19) /api/v1/namespaces/proxy-1384/services/http:proxy-service-plbjx:portname1/proxy/: foo (200; 7.376888ms)
  Sep 13 13:56:16.228: INFO: (19) /api/v1/namespaces/proxy-1384/pods/http:proxy-service-plbjx-rl9rr:1080/proxy/: <a href="/api/v1/namespaces/proxy-1384/pods/http:proxy-service-plbjx-rl9rr:1080/proxy/rewriteme">... (200; 7.032244ms)
  Sep 13 13:56:16.228: INFO: (19) /api/v1/namespaces/proxy-1384/pods/http:proxy-service-plbjx-rl9rr:160/proxy/: foo (200; 7.004514ms)
  Sep 13 13:56:16.228: INFO: (19) /api/v1/namespaces/proxy-1384/pods/http:proxy-service-plbjx-rl9rr:162/proxy/: bar (200; 7.042193ms)
  Sep 13 13:56:16.228: INFO: (19) /api/v1/namespaces/proxy-1384/pods/proxy-service-plbjx-rl9rr:162/proxy/: bar (200; 7.276314ms)
  Sep 13 13:56:16.228: INFO: (19) /api/v1/namespaces/proxy-1384/pods/proxy-service-plbjx-rl9rr:160/proxy/: foo (200; 7.551372ms)
  Sep 13 13:56:16.228: INFO: (19) /api/v1/namespaces/proxy-1384/services/https:proxy-service-plbjx:tlsportname2/proxy/: tls qux (200; 7.797536ms)
  Sep 13 13:56:16.228: INFO: (19) /api/v1/namespaces/proxy-1384/pods/proxy-service-plbjx-rl9rr/proxy/: <a href="/api/v1/namespaces/proxy-1384/pods/proxy-service-plbjx-rl9rr/proxy/rewriteme">test</a> (200; 8.0445ms)
  Sep 13 13:56:16.229: INFO: (19) /api/v1/namespaces/proxy-1384/services/proxy-service-plbjx:portname1/proxy/: foo (200; 8.265049ms)
  STEP: deleting ReplicationController proxy-service-plbjx in namespace proxy-1384, will wait for the garbage collector to delete the pods @ 09/13/24 13:56:16.229
  Sep 13 13:56:16.289: INFO: Deleting ReplicationController proxy-service-plbjx took: 7.018283ms
  Sep 13 13:56:16.390: INFO: Terminating ReplicationController proxy-service-plbjx pods took: 101.005625ms
  E0913 13:56:17.010364      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:56:18.010935      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:56:19.011478      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:56:19.391: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-1384" for this suite. @ 09/13/24 13:56:19.405
• [5.458 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 09/13/24 13:56:19.417
  Sep 13 13:56:19.417: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename watch @ 09/13/24 13:56:19.419
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:56:19.429
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:56:19.432
  STEP: creating a watch on configmaps with a certain label @ 09/13/24 13:56:19.435
  STEP: creating a new configmap @ 09/13/24 13:56:19.437
  STEP: modifying the configmap once @ 09/13/24 13:56:19.44
  STEP: changing the label value of the configmap @ 09/13/24 13:56:19.46
  STEP: Expecting to observe a delete notification for the watched object @ 09/13/24 13:56:19.469
  Sep 13 13:56:19.469: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-1567  c82ead7f-f07d-46ce-bc3d-86c830c42c58 756361 0 2024-09-13 13:56:19 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-09-13 13:56:19 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep 13 13:56:19.470: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-1567  c82ead7f-f07d-46ce-bc3d-86c830c42c58 756362 0 2024-09-13 13:56:19 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-09-13 13:56:19 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep 13 13:56:19.470: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-1567  c82ead7f-f07d-46ce-bc3d-86c830c42c58 756364 0 2024-09-13 13:56:19 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-09-13 13:56:19 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 09/13/24 13:56:19.471
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 09/13/24 13:56:19.476
  E0913 13:56:20.011740      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:56:21.012122      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:56:22.012923      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:56:23.013094      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:56:24.013730      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:56:25.013837      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:56:26.013976      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:56:27.014071      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:56:28.014218      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:56:29.014350      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: changing the label value of the configmap back @ 09/13/24 13:56:29.477
  STEP: modifying the configmap a third time @ 09/13/24 13:56:29.487
  STEP: deleting the configmap @ 09/13/24 13:56:29.497
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 09/13/24 13:56:29.503
  Sep 13 13:56:29.503: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-1567  c82ead7f-f07d-46ce-bc3d-86c830c42c58 756427 0 2024-09-13 13:56:19 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-09-13 13:56:29 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep 13 13:56:29.503: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-1567  c82ead7f-f07d-46ce-bc3d-86c830c42c58 756428 0 2024-09-13 13:56:19 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-09-13 13:56:29 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep 13 13:56:29.503: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-1567  c82ead7f-f07d-46ce-bc3d-86c830c42c58 756429 0 2024-09-13 13:56:19 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-09-13 13:56:29 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep 13 13:56:29.503: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-1567" for this suite. @ 09/13/24 13:56:29.514
• [10.104 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0 [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1838
  STEP: Creating a kubernetes client @ 09/13/24 13:56:29.522
  Sep 13 13:56:29.522: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename kubectl @ 09/13/24 13:56:29.523
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:56:29.536
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:56:29.538
  STEP: starting the proxy server @ 09/13/24 13:56:29.548
  Sep 13 13:56:29.548: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=kubectl-6278 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 09/13/24 13:56:29.586
  Sep 13 13:56:29.594: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6278" for this suite. @ 09/13/24 13:56:29.598
• [0.083 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:75
  STEP: Creating a kubernetes client @ 09/13/24 13:56:29.606
  Sep 13 13:56:29.606: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename configmap @ 09/13/24 13:56:29.607
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:56:29.638
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:56:29.64
  STEP: Creating configMap with name configmap-test-volume-e94b8106-c633-477c-bd18-579880b9784c @ 09/13/24 13:56:29.643
  STEP: Creating a pod to test consume configMaps @ 09/13/24 13:56:29.649
  E0913 13:56:30.015148      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:56:31.015433      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:56:32.015844      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:56:33.016571      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/13/24 13:56:33.68
  Sep 13 13:56:33.683: INFO: Trying to get logs from node cncf-3 pod pod-configmaps-ccfbbc91-327a-459e-b449-adeb794c8198 container agnhost-container: <nil>
  STEP: delete the pod @ 09/13/24 13:56:33.688
  Sep 13 13:56:33.706: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2798" for this suite. @ 09/13/24 13:56:33.718
• [4.119 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 09/13/24 13:56:33.724
  Sep 13 13:56:33.724: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename projected @ 09/13/24 13:56:33.726
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:56:33.738
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:56:33.741
  STEP: Creating projection with secret that has name projected-secret-test-map-17846f14-1853-4121-99bc-d0a55151f80c @ 09/13/24 13:56:33.745
  STEP: Creating a pod to test consume secrets @ 09/13/24 13:56:33.752
  E0913 13:56:34.017510      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:56:35.018086      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:56:36.018530      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:56:37.018755      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/13/24 13:56:37.775
  Sep 13 13:56:37.776: INFO: Trying to get logs from node cncf-3 pod pod-projected-secrets-96f3a367-19b5-49fa-9137-b251c1effcb5 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/13/24 13:56:37.781
  Sep 13 13:56:37.796: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5524" for this suite. @ 09/13/24 13:56:37.8
• [4.081 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:48
  STEP: Creating a kubernetes client @ 09/13/24 13:56:37.805
  Sep 13 13:56:37.805: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename configmap @ 09/13/24 13:56:37.807
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:56:37.826
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:56:37.829
  STEP: Creating configMap with name configmap-test-volume-ebacc570-34e8-4f74-b0c8-98355b1f884c @ 09/13/24 13:56:37.832
  STEP: Creating a pod to test consume configMaps @ 09/13/24 13:56:37.839
  E0913 13:56:38.019290      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:56:39.020251      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:56:40.020820      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:56:41.021116      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/13/24 13:56:41.856
  Sep 13 13:56:41.859: INFO: Trying to get logs from node cncf-3 pod pod-configmaps-316e2d3f-163f-438e-af8d-081786af4882 container agnhost-container: <nil>
  STEP: delete the pod @ 09/13/24 13:56:41.863
  Sep 13 13:56:41.883: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5726" for this suite. @ 09/13/24 13:56:41.887
• [4.093 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:214
  STEP: Creating a kubernetes client @ 09/13/24 13:56:41.898
  Sep 13 13:56:41.898: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename container-probe @ 09/13/24 13:56:41.9
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 13:56:41.917
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 13:56:41.919
  STEP: Creating pod test-webserver-271cad14-b53b-439a-bec7-d77dcc95164e in namespace container-probe-3351 @ 09/13/24 13:56:41.921
  E0913 13:56:42.021416      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:56:43.021848      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/13/24 13:56:43.937
  Sep 13 13:56:43.940: INFO: Initial restart count of pod test-webserver-271cad14-b53b-439a-bec7-d77dcc95164e is 0
  Sep 13 13:56:43.942: INFO: Get pod test-webserver-271cad14-b53b-439a-bec7-d77dcc95164e in namespace container-probe-3351
  E0913 13:56:44.022531      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:56:45.023013      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:56:45.950: INFO: Get pod test-webserver-271cad14-b53b-439a-bec7-d77dcc95164e in namespace container-probe-3351
  E0913 13:56:46.023545      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:56:47.023938      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:56:47.954: INFO: Get pod test-webserver-271cad14-b53b-439a-bec7-d77dcc95164e in namespace container-probe-3351
  E0913 13:56:48.024757      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:56:49.025260      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:56:49.957: INFO: Get pod test-webserver-271cad14-b53b-439a-bec7-d77dcc95164e in namespace container-probe-3351
  E0913 13:56:50.027937      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:56:51.028036      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:56:51.962: INFO: Get pod test-webserver-271cad14-b53b-439a-bec7-d77dcc95164e in namespace container-probe-3351
  E0913 13:56:52.028180      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:56:53.028833      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:56:53.966: INFO: Get pod test-webserver-271cad14-b53b-439a-bec7-d77dcc95164e in namespace container-probe-3351
  E0913 13:56:54.029251      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:56:55.029482      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:56:55.969: INFO: Get pod test-webserver-271cad14-b53b-439a-bec7-d77dcc95164e in namespace container-probe-3351
  E0913 13:56:56.030291      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:56:57.031162      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:56:57.974: INFO: Get pod test-webserver-271cad14-b53b-439a-bec7-d77dcc95164e in namespace container-probe-3351
  E0913 13:56:58.031830      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:56:59.032127      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:56:59.977: INFO: Get pod test-webserver-271cad14-b53b-439a-bec7-d77dcc95164e in namespace container-probe-3351
  E0913 13:57:00.033080      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:57:01.033198      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:57:01.981: INFO: Get pod test-webserver-271cad14-b53b-439a-bec7-d77dcc95164e in namespace container-probe-3351
  E0913 13:57:02.033731      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:57:03.034126      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:57:03.985: INFO: Get pod test-webserver-271cad14-b53b-439a-bec7-d77dcc95164e in namespace container-probe-3351
  E0913 13:57:04.034440      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:57:05.034510      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:57:06.000: INFO: Get pod test-webserver-271cad14-b53b-439a-bec7-d77dcc95164e in namespace container-probe-3351
  E0913 13:57:06.035125      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:57:07.035322      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:57:08.005: INFO: Get pod test-webserver-271cad14-b53b-439a-bec7-d77dcc95164e in namespace container-probe-3351
  E0913 13:57:08.036332      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:57:09.036391      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:57:10.009: INFO: Get pod test-webserver-271cad14-b53b-439a-bec7-d77dcc95164e in namespace container-probe-3351
  E0913 13:57:10.036599      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:57:11.036883      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:57:12.013: INFO: Get pod test-webserver-271cad14-b53b-439a-bec7-d77dcc95164e in namespace container-probe-3351
  E0913 13:57:12.037492      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:57:13.037940      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:57:14.016: INFO: Get pod test-webserver-271cad14-b53b-439a-bec7-d77dcc95164e in namespace container-probe-3351
  E0913 13:57:14.038190      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:57:15.038528      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:57:16.022: INFO: Get pod test-webserver-271cad14-b53b-439a-bec7-d77dcc95164e in namespace container-probe-3351
  E0913 13:57:16.038747      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:57:17.039095      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:57:18.027: INFO: Get pod test-webserver-271cad14-b53b-439a-bec7-d77dcc95164e in namespace container-probe-3351
  E0913 13:57:18.039403      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:57:19.039600      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:57:20.031: INFO: Get pod test-webserver-271cad14-b53b-439a-bec7-d77dcc95164e in namespace container-probe-3351
  E0913 13:57:20.040271      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:57:21.040818      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:57:22.036: INFO: Get pod test-webserver-271cad14-b53b-439a-bec7-d77dcc95164e in namespace container-probe-3351
  E0913 13:57:22.041205      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:57:23.042380      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:57:24.040: INFO: Get pod test-webserver-271cad14-b53b-439a-bec7-d77dcc95164e in namespace container-probe-3351
  E0913 13:57:24.042441      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:57:25.042667      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:57:26.043117      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:57:26.045: INFO: Get pod test-webserver-271cad14-b53b-439a-bec7-d77dcc95164e in namespace container-probe-3351
  E0913 13:57:27.043851      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:57:28.043861      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:57:28.048: INFO: Get pod test-webserver-271cad14-b53b-439a-bec7-d77dcc95164e in namespace container-probe-3351
  E0913 13:57:29.044130      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:57:30.044914      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:57:30.052: INFO: Get pod test-webserver-271cad14-b53b-439a-bec7-d77dcc95164e in namespace container-probe-3351
  E0913 13:57:31.046035      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:57:32.046505      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:57:32.057: INFO: Get pod test-webserver-271cad14-b53b-439a-bec7-d77dcc95164e in namespace container-probe-3351
  E0913 13:57:33.046936      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:57:34.047330      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:57:34.060: INFO: Get pod test-webserver-271cad14-b53b-439a-bec7-d77dcc95164e in namespace container-probe-3351
  E0913 13:57:35.047583      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:57:36.047859      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:57:36.064: INFO: Get pod test-webserver-271cad14-b53b-439a-bec7-d77dcc95164e in namespace container-probe-3351
  E0913 13:57:37.047966      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:57:38.049663      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:57:38.068: INFO: Get pod test-webserver-271cad14-b53b-439a-bec7-d77dcc95164e in namespace container-probe-3351
  E0913 13:57:39.050243      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:57:40.050410      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:57:40.071: INFO: Get pod test-webserver-271cad14-b53b-439a-bec7-d77dcc95164e in namespace container-probe-3351
  E0913 13:57:41.050519      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:57:42.050981      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:57:42.076: INFO: Get pod test-webserver-271cad14-b53b-439a-bec7-d77dcc95164e in namespace container-probe-3351
  E0913 13:57:43.051151      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:57:44.051193      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:57:44.079: INFO: Get pod test-webserver-271cad14-b53b-439a-bec7-d77dcc95164e in namespace container-probe-3351
  E0913 13:57:45.051310      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:57:46.051925      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:57:46.083: INFO: Get pod test-webserver-271cad14-b53b-439a-bec7-d77dcc95164e in namespace container-probe-3351
  E0913 13:57:47.051950      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:57:48.052578      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:57:48.088: INFO: Get pod test-webserver-271cad14-b53b-439a-bec7-d77dcc95164e in namespace container-probe-3351
  E0913 13:57:49.052683      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:57:50.052944      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:57:50.091: INFO: Get pod test-webserver-271cad14-b53b-439a-bec7-d77dcc95164e in namespace container-probe-3351
  E0913 13:57:51.053039      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:57:52.053216      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:57:52.095: INFO: Get pod test-webserver-271cad14-b53b-439a-bec7-d77dcc95164e in namespace container-probe-3351
  E0913 13:57:53.053698      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:57:54.054577      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:57:54.098: INFO: Get pod test-webserver-271cad14-b53b-439a-bec7-d77dcc95164e in namespace container-probe-3351
  E0913 13:57:55.054811      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:57:56.055196      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:57:56.102: INFO: Get pod test-webserver-271cad14-b53b-439a-bec7-d77dcc95164e in namespace container-probe-3351
  E0913 13:57:57.055360      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:57:58.055830      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:57:58.107: INFO: Get pod test-webserver-271cad14-b53b-439a-bec7-d77dcc95164e in namespace container-probe-3351
  E0913 13:57:59.056745      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:58:00.057256      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:58:00.111: INFO: Get pod test-webserver-271cad14-b53b-439a-bec7-d77dcc95164e in namespace container-probe-3351
  E0913 13:58:01.057459      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:58:02.057857      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:58:02.116: INFO: Get pod test-webserver-271cad14-b53b-439a-bec7-d77dcc95164e in namespace container-probe-3351
  E0913 13:58:03.057873      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:58:04.058922      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:58:04.121: INFO: Get pod test-webserver-271cad14-b53b-439a-bec7-d77dcc95164e in namespace container-probe-3351
  E0913 13:58:05.059159      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:58:06.059474      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:58:06.125: INFO: Get pod test-webserver-271cad14-b53b-439a-bec7-d77dcc95164e in namespace container-probe-3351
  E0913 13:58:07.059989      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:58:08.060076      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:58:08.130: INFO: Get pod test-webserver-271cad14-b53b-439a-bec7-d77dcc95164e in namespace container-probe-3351
  E0913 13:58:09.060962      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:58:10.061445      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:58:10.135: INFO: Get pod test-webserver-271cad14-b53b-439a-bec7-d77dcc95164e in namespace container-probe-3351
  E0913 13:58:11.061540      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:58:12.061968      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:58:12.140: INFO: Get pod test-webserver-271cad14-b53b-439a-bec7-d77dcc95164e in namespace container-probe-3351
  E0913 13:58:13.062083      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:58:14.062297      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:58:14.144: INFO: Get pod test-webserver-271cad14-b53b-439a-bec7-d77dcc95164e in namespace container-probe-3351
  E0913 13:58:15.066334      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:58:16.066602      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:58:16.148: INFO: Get pod test-webserver-271cad14-b53b-439a-bec7-d77dcc95164e in namespace container-probe-3351
  E0913 13:58:17.066917      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:58:18.067527      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:58:18.152: INFO: Get pod test-webserver-271cad14-b53b-439a-bec7-d77dcc95164e in namespace container-probe-3351
  E0913 13:58:19.067687      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:58:20.067989      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:58:20.156: INFO: Get pod test-webserver-271cad14-b53b-439a-bec7-d77dcc95164e in namespace container-probe-3351
  E0913 13:58:21.068367      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:58:22.068997      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:58:22.160: INFO: Get pod test-webserver-271cad14-b53b-439a-bec7-d77dcc95164e in namespace container-probe-3351
  E0913 13:58:23.069759      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:58:24.070255      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:58:24.164: INFO: Get pod test-webserver-271cad14-b53b-439a-bec7-d77dcc95164e in namespace container-probe-3351
  E0913 13:58:25.070456      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:58:26.070720      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:58:26.167: INFO: Get pod test-webserver-271cad14-b53b-439a-bec7-d77dcc95164e in namespace container-probe-3351
  E0913 13:58:27.071127      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:58:28.071330      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:58:28.171: INFO: Get pod test-webserver-271cad14-b53b-439a-bec7-d77dcc95164e in namespace container-probe-3351
  E0913 13:58:29.072132      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:58:30.072989      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:58:30.175: INFO: Get pod test-webserver-271cad14-b53b-439a-bec7-d77dcc95164e in namespace container-probe-3351
  E0913 13:58:31.073574      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:58:32.073864      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:58:32.180: INFO: Get pod test-webserver-271cad14-b53b-439a-bec7-d77dcc95164e in namespace container-probe-3351
  E0913 13:58:33.074296      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:58:34.074762      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:58:34.184: INFO: Get pod test-webserver-271cad14-b53b-439a-bec7-d77dcc95164e in namespace container-probe-3351
  E0913 13:58:35.075397      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:58:36.075671      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:58:36.190: INFO: Get pod test-webserver-271cad14-b53b-439a-bec7-d77dcc95164e in namespace container-probe-3351
  E0913 13:58:37.076056      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:58:38.076955      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:58:38.194: INFO: Get pod test-webserver-271cad14-b53b-439a-bec7-d77dcc95164e in namespace container-probe-3351
  E0913 13:58:39.077356      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:58:40.077587      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:58:40.197: INFO: Get pod test-webserver-271cad14-b53b-439a-bec7-d77dcc95164e in namespace container-probe-3351
  E0913 13:58:41.077689      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:58:42.077826      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:58:42.201: INFO: Get pod test-webserver-271cad14-b53b-439a-bec7-d77dcc95164e in namespace container-probe-3351
  E0913 13:58:43.077963      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:58:44.078183      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:58:44.205: INFO: Get pod test-webserver-271cad14-b53b-439a-bec7-d77dcc95164e in namespace container-probe-3351
  E0913 13:58:45.079235      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:58:46.079337      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:58:46.209: INFO: Get pod test-webserver-271cad14-b53b-439a-bec7-d77dcc95164e in namespace container-probe-3351
  E0913 13:58:47.080410      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:58:48.080590      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:58:48.213: INFO: Get pod test-webserver-271cad14-b53b-439a-bec7-d77dcc95164e in namespace container-probe-3351
  E0913 13:58:49.080831      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:58:50.080908      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:58:50.217: INFO: Get pod test-webserver-271cad14-b53b-439a-bec7-d77dcc95164e in namespace container-probe-3351
  E0913 13:58:51.081009      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:58:52.081140      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:58:52.221: INFO: Get pod test-webserver-271cad14-b53b-439a-bec7-d77dcc95164e in namespace container-probe-3351
  E0913 13:58:53.081291      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:58:54.082089      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:58:54.225: INFO: Get pod test-webserver-271cad14-b53b-439a-bec7-d77dcc95164e in namespace container-probe-3351
  E0913 13:58:55.082146      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:58:56.082327      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:58:56.228: INFO: Get pod test-webserver-271cad14-b53b-439a-bec7-d77dcc95164e in namespace container-probe-3351
  E0913 13:58:57.082377      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:58:58.082720      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:58:58.233: INFO: Get pod test-webserver-271cad14-b53b-439a-bec7-d77dcc95164e in namespace container-probe-3351
  E0913 13:58:59.083180      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:59:00.083578      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:59:00.236: INFO: Get pod test-webserver-271cad14-b53b-439a-bec7-d77dcc95164e in namespace container-probe-3351
  E0913 13:59:01.084072      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:59:02.085207      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:59:02.241: INFO: Get pod test-webserver-271cad14-b53b-439a-bec7-d77dcc95164e in namespace container-probe-3351
  E0913 13:59:03.085088      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:59:04.085261      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:59:04.244: INFO: Get pod test-webserver-271cad14-b53b-439a-bec7-d77dcc95164e in namespace container-probe-3351
  E0913 13:59:05.085388      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:59:06.085450      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:59:06.248: INFO: Get pod test-webserver-271cad14-b53b-439a-bec7-d77dcc95164e in namespace container-probe-3351
  E0913 13:59:07.085623      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:59:08.085729      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:59:08.252: INFO: Get pod test-webserver-271cad14-b53b-439a-bec7-d77dcc95164e in namespace container-probe-3351
  E0913 13:59:09.085873      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:59:10.086035      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:59:10.256: INFO: Get pod test-webserver-271cad14-b53b-439a-bec7-d77dcc95164e in namespace container-probe-3351
  E0913 13:59:11.087007      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:59:12.086548      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:59:12.260: INFO: Get pod test-webserver-271cad14-b53b-439a-bec7-d77dcc95164e in namespace container-probe-3351
  E0913 13:59:13.086930      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:59:14.087297      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:59:14.265: INFO: Get pod test-webserver-271cad14-b53b-439a-bec7-d77dcc95164e in namespace container-probe-3351
  E0913 13:59:15.088090      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:59:16.089065      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:59:16.268: INFO: Get pod test-webserver-271cad14-b53b-439a-bec7-d77dcc95164e in namespace container-probe-3351
  E0913 13:59:17.089574      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:59:18.090405      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:59:18.274: INFO: Get pod test-webserver-271cad14-b53b-439a-bec7-d77dcc95164e in namespace container-probe-3351
  E0913 13:59:19.091115      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:59:20.091559      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:59:20.278: INFO: Get pod test-webserver-271cad14-b53b-439a-bec7-d77dcc95164e in namespace container-probe-3351
  E0913 13:59:21.092161      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:59:22.092256      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:59:22.282: INFO: Get pod test-webserver-271cad14-b53b-439a-bec7-d77dcc95164e in namespace container-probe-3351
  E0913 13:59:23.093083      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:59:24.093348      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:59:24.287: INFO: Get pod test-webserver-271cad14-b53b-439a-bec7-d77dcc95164e in namespace container-probe-3351
  E0913 13:59:25.093517      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:59:26.093605      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:59:26.291: INFO: Get pod test-webserver-271cad14-b53b-439a-bec7-d77dcc95164e in namespace container-probe-3351
  E0913 13:59:27.094610      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:59:28.094983      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:59:28.296: INFO: Get pod test-webserver-271cad14-b53b-439a-bec7-d77dcc95164e in namespace container-probe-3351
  E0913 13:59:29.095979      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:59:30.096967      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:59:30.300: INFO: Get pod test-webserver-271cad14-b53b-439a-bec7-d77dcc95164e in namespace container-probe-3351
  E0913 13:59:31.097119      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:59:32.097724      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:59:32.305: INFO: Get pod test-webserver-271cad14-b53b-439a-bec7-d77dcc95164e in namespace container-probe-3351
  E0913 13:59:33.098450      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:59:34.099536      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:59:34.308: INFO: Get pod test-webserver-271cad14-b53b-439a-bec7-d77dcc95164e in namespace container-probe-3351
  E0913 13:59:35.099524      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:59:36.099809      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:59:36.312: INFO: Get pod test-webserver-271cad14-b53b-439a-bec7-d77dcc95164e in namespace container-probe-3351
  E0913 13:59:37.100295      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:59:38.100731      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:59:38.316: INFO: Get pod test-webserver-271cad14-b53b-439a-bec7-d77dcc95164e in namespace container-probe-3351
  E0913 13:59:39.100864      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:59:40.101314      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:59:40.319: INFO: Get pod test-webserver-271cad14-b53b-439a-bec7-d77dcc95164e in namespace container-probe-3351
  E0913 13:59:41.101496      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:59:42.101884      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:59:42.324: INFO: Get pod test-webserver-271cad14-b53b-439a-bec7-d77dcc95164e in namespace container-probe-3351
  E0913 13:59:43.102522      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:59:44.102645      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:59:44.328: INFO: Get pod test-webserver-271cad14-b53b-439a-bec7-d77dcc95164e in namespace container-probe-3351
  E0913 13:59:45.102818      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:59:46.103379      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:59:46.334: INFO: Get pod test-webserver-271cad14-b53b-439a-bec7-d77dcc95164e in namespace container-probe-3351
  E0913 13:59:47.103234      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:59:48.103796      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:59:48.338: INFO: Get pod test-webserver-271cad14-b53b-439a-bec7-d77dcc95164e in namespace container-probe-3351
  E0913 13:59:49.104648      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:59:50.105014      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:59:50.342: INFO: Get pod test-webserver-271cad14-b53b-439a-bec7-d77dcc95164e in namespace container-probe-3351
  E0913 13:59:51.105182      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:59:52.105277      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:59:52.346: INFO: Get pod test-webserver-271cad14-b53b-439a-bec7-d77dcc95164e in namespace container-probe-3351
  E0913 13:59:53.105605      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:59:54.105676      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:59:54.350: INFO: Get pod test-webserver-271cad14-b53b-439a-bec7-d77dcc95164e in namespace container-probe-3351
  E0913 13:59:55.106504      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:59:56.107486      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:59:56.354: INFO: Get pod test-webserver-271cad14-b53b-439a-bec7-d77dcc95164e in namespace container-probe-3351
  E0913 13:59:57.108191      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 13:59:58.108185      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 13:59:58.359: INFO: Get pod test-webserver-271cad14-b53b-439a-bec7-d77dcc95164e in namespace container-probe-3351
  E0913 13:59:59.109053      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:00:00.109629      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 14:00:00.363: INFO: Get pod test-webserver-271cad14-b53b-439a-bec7-d77dcc95164e in namespace container-probe-3351
  E0913 14:00:01.110618      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:00:02.110899      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 14:00:02.367: INFO: Get pod test-webserver-271cad14-b53b-439a-bec7-d77dcc95164e in namespace container-probe-3351
  E0913 14:00:03.110921      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:00:04.111076      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 14:00:04.377: INFO: Get pod test-webserver-271cad14-b53b-439a-bec7-d77dcc95164e in namespace container-probe-3351
  E0913 14:00:05.111249      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:00:06.111844      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 14:00:06.382: INFO: Get pod test-webserver-271cad14-b53b-439a-bec7-d77dcc95164e in namespace container-probe-3351
  E0913 14:00:07.111913      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:00:08.113004      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 14:00:08.385: INFO: Get pod test-webserver-271cad14-b53b-439a-bec7-d77dcc95164e in namespace container-probe-3351
  E0913 14:00:09.113224      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:00:10.113582      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 14:00:10.389: INFO: Get pod test-webserver-271cad14-b53b-439a-bec7-d77dcc95164e in namespace container-probe-3351
  E0913 14:00:11.114436      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:00:12.115347      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 14:00:12.394: INFO: Get pod test-webserver-271cad14-b53b-439a-bec7-d77dcc95164e in namespace container-probe-3351
  E0913 14:00:13.115550      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:00:14.115914      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 14:00:14.403: INFO: Get pod test-webserver-271cad14-b53b-439a-bec7-d77dcc95164e in namespace container-probe-3351
  E0913 14:00:15.116750      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:00:16.117024      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 14:00:16.406: INFO: Get pod test-webserver-271cad14-b53b-439a-bec7-d77dcc95164e in namespace container-probe-3351
  E0913 14:00:17.117194      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:00:18.117353      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 14:00:18.409: INFO: Get pod test-webserver-271cad14-b53b-439a-bec7-d77dcc95164e in namespace container-probe-3351
  E0913 14:00:19.117342      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:00:20.117663      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 14:00:20.413: INFO: Get pod test-webserver-271cad14-b53b-439a-bec7-d77dcc95164e in namespace container-probe-3351
  E0913 14:00:21.117666      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:00:22.118043      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 14:00:22.416: INFO: Get pod test-webserver-271cad14-b53b-439a-bec7-d77dcc95164e in namespace container-probe-3351
  E0913 14:00:23.118552      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:00:24.118928      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 14:00:24.420: INFO: Get pod test-webserver-271cad14-b53b-439a-bec7-d77dcc95164e in namespace container-probe-3351
  E0913 14:00:25.119665      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:00:26.119839      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 14:00:26.424: INFO: Get pod test-webserver-271cad14-b53b-439a-bec7-d77dcc95164e in namespace container-probe-3351
  E0913 14:00:27.119897      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:00:28.120078      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 14:00:28.428: INFO: Get pod test-webserver-271cad14-b53b-439a-bec7-d77dcc95164e in namespace container-probe-3351
  E0913 14:00:29.120185      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:00:30.120344      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 14:00:30.433: INFO: Get pod test-webserver-271cad14-b53b-439a-bec7-d77dcc95164e in namespace container-probe-3351
  E0913 14:00:31.120456      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:00:32.120674      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 14:00:32.436: INFO: Get pod test-webserver-271cad14-b53b-439a-bec7-d77dcc95164e in namespace container-probe-3351
  E0913 14:00:33.121654      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:00:34.121821      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 14:00:34.440: INFO: Get pod test-webserver-271cad14-b53b-439a-bec7-d77dcc95164e in namespace container-probe-3351
  E0913 14:00:35.121922      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:00:36.122407      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 14:00:36.443: INFO: Get pod test-webserver-271cad14-b53b-439a-bec7-d77dcc95164e in namespace container-probe-3351
  E0913 14:00:37.122522      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:00:38.122602      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 14:00:38.447: INFO: Get pod test-webserver-271cad14-b53b-439a-bec7-d77dcc95164e in namespace container-probe-3351
  E0913 14:00:39.122704      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:00:40.123703      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 14:00:40.451: INFO: Get pod test-webserver-271cad14-b53b-439a-bec7-d77dcc95164e in namespace container-probe-3351
  E0913 14:00:41.123937      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:00:42.124845      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 14:00:42.455: INFO: Get pod test-webserver-271cad14-b53b-439a-bec7-d77dcc95164e in namespace container-probe-3351
  E0913 14:00:43.125253      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:00:44.125794      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 09/13/24 14:00:44.456
  Sep 13 14:00:44.474: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-3351" for this suite. @ 09/13/24 14:00:44.481
• [242.595 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1493
  STEP: Creating a kubernetes client @ 09/13/24 14:00:44.493
  Sep 13 14:00:44.493: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename services @ 09/13/24 14:00:44.495
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 14:00:44.537
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 14:00:44.539
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-8717 @ 09/13/24 14:00:44.541
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 09/13/24 14:00:44.562
  STEP: creating service externalsvc in namespace services-8717 @ 09/13/24 14:00:44.562
  STEP: creating replication controller externalsvc in namespace services-8717 @ 09/13/24 14:00:44.618
  I0913 14:00:44.720244      23 runners.go:197] Created replication controller with name: externalsvc, namespace: services-8717, replica count: 2
  E0913 14:00:45.131485      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:00:46.132048      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:00:47.132753      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0913 14:00:47.772003      23 runners.go:197] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the ClusterIP service to type=ExternalName @ 09/13/24 14:00:47.775
  Sep 13 14:00:47.787: INFO: Creating new exec pod
  E0913 14:00:48.132936      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:00:49.133021      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 14:00:49.811: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=services-8717 exec execpod6sp8h -- /bin/sh -x -c nslookup clusterip-service.services-8717.svc.cluster.local'
  Sep 13 14:00:49.985: INFO: stderr: "+ nslookup clusterip-service.services-8717.svc.cluster.local\n"
  Sep 13 14:00:49.985: INFO: stdout: "Server:\t\t10.233.0.3\nAddress:\t10.233.0.3#53\n\nclusterip-service.services-8717.svc.cluster.local\tcanonical name = externalsvc.services-8717.svc.cluster.local.\nName:\texternalsvc.services-8717.svc.cluster.local\nAddress: 10.233.27.125\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-8717, will wait for the garbage collector to delete the pods @ 09/13/24 14:00:49.985
  Sep 13 14:00:50.045: INFO: Deleting ReplicationController externalsvc took: 6.644695ms
  E0913 14:00:50.133752      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 14:00:50.145: INFO: Terminating ReplicationController externalsvc pods took: 100.288095ms
  E0913 14:00:51.133956      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:00:52.134359      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:00:53.135009      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 14:00:53.260: INFO: Cleaning up the ClusterIP to ExternalName test service
  Sep 13 14:00:53.279: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8717" for this suite. @ 09/13/24 14:00:53.285
• [8.797 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:425
  STEP: Creating a kubernetes client @ 09/13/24 14:00:53.29
  Sep 13 14:00:53.290: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename replication-controller @ 09/13/24 14:00:53.292
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 14:00:53.307
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 14:00:53.309
  STEP: Creating ReplicationController "e2e-rc-xs4vb" @ 09/13/24 14:00:53.317
  Sep 13 14:00:53.323: INFO: Get Replication Controller "e2e-rc-xs4vb" to confirm replicas
  E0913 14:00:54.135131      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 14:00:54.324: INFO: Get Replication Controller "e2e-rc-xs4vb" to confirm replicas
  Sep 13 14:00:54.327: INFO: Found 1 replicas for "e2e-rc-xs4vb" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-xs4vb" @ 09/13/24 14:00:54.327
  STEP: Updating a scale subresource @ 09/13/24 14:00:54.329
  STEP: Verifying replicas where modified for replication controller "e2e-rc-xs4vb" @ 09/13/24 14:00:54.337
  Sep 13 14:00:54.337: INFO: Get Replication Controller "e2e-rc-xs4vb" to confirm replicas
  E0913 14:00:55.136254      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 14:00:55.337: INFO: Get Replication Controller "e2e-rc-xs4vb" to confirm replicas
  Sep 13 14:00:55.341: INFO: Found 2 replicas for "e2e-rc-xs4vb" replication controller
  Sep 13 14:00:55.341: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-301" for this suite. @ 09/13/24 14:00:55.345
• [2.059 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1698
  STEP: Creating a kubernetes client @ 09/13/24 14:00:55.35
  Sep 13 14:00:55.350: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename kubectl @ 09/13/24 14:00:55.351
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 14:00:55.373
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 14:00:55.376
  STEP: creating Agnhost RC @ 09/13/24 14:00:55.38
  Sep 13 14:00:55.380: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=kubectl-9603 create -f -'
  Sep 13 14:00:55.499: INFO: stderr: ""
  Sep 13 14:00:55.499: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 09/13/24 14:00:55.499
  E0913 14:00:56.136416      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 14:00:56.508: INFO: Selector matched 1 pods for map[app:agnhost]
  Sep 13 14:00:56.508: INFO: Found 0 / 1
  E0913 14:00:57.137480      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 14:00:57.504: INFO: Selector matched 1 pods for map[app:agnhost]
  Sep 13 14:00:57.504: INFO: Found 1 / 1
  Sep 13 14:00:57.504: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 09/13/24 14:00:57.504
  Sep 13 14:00:57.506: INFO: Selector matched 1 pods for map[app:agnhost]
  Sep 13 14:00:57.506: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Sep 13 14:00:57.506: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4167952915 --namespace=kubectl-9603 patch pod agnhost-primary-dbzgs -p {"metadata":{"annotations":{"x":"y"}}}'
  Sep 13 14:00:57.590: INFO: stderr: ""
  Sep 13 14:00:57.590: INFO: stdout: "pod/agnhost-primary-dbzgs patched\n"
  STEP: checking annotations @ 09/13/24 14:00:57.59
  Sep 13 14:00:57.593: INFO: Selector matched 1 pods for map[app:agnhost]
  Sep 13 14:00:57.593: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Sep 13 14:00:57.593: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9603" for this suite. @ 09/13/24 14:00:57.6
• [2.255 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] server version should find the server version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/server_version.go:41
  STEP: Creating a kubernetes client @ 09/13/24 14:00:57.605
  Sep 13 14:00:57.605: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename server-version @ 09/13/24 14:00:57.606
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 14:00:57.618
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 14:00:57.621
  STEP: Request ServerVersion @ 09/13/24 14:00:57.624
  STEP: Confirm major version @ 09/13/24 14:00:57.625
  Sep 13 14:00:57.625: INFO: Major version: 1
  STEP: Confirm minor version @ 09/13/24 14:00:57.625
  Sep 13 14:00:57.625: INFO: cleanMinorVersion: 29
  Sep 13 14:00:57.625: INFO: Minor version: 29
  Sep 13 14:00:57.625: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-9438" for this suite. @ 09/13/24 14:00:57.629
• [0.032 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 09/13/24 14:00:57.637
  Sep 13 14:00:57.637: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename watch @ 09/13/24 14:00:57.638
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 14:00:57.663
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 14:00:57.665
  STEP: getting a starting resourceVersion @ 09/13/24 14:00:57.668
  STEP: starting a background goroutine to produce watch events @ 09/13/24 14:00:57.669
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 09/13/24 14:00:57.669
  E0913 14:00:58.137585      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:00:59.137942      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:01:00.138604      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 14:01:00.483: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-1219" for this suite. @ 09/13/24 14:01:00.506
• [2.946 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pods.go:163
  STEP: Creating a kubernetes client @ 09/13/24 14:01:00.584
  Sep 13 14:01:00.584: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename pods @ 09/13/24 14:01:00.586
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 14:01:00.651
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 14:01:00.654
  STEP: creating the pod @ 09/13/24 14:01:00.657
  STEP: submitting the pod to kubernetes @ 09/13/24 14:01:00.657
  STEP: verifying QOS class is set on the pod @ 09/13/24 14:01:00.672
  Sep 13 14:01:00.690: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7889" for this suite. @ 09/13/24 14:01:00.707
• [0.202 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:253
  STEP: Creating a kubernetes client @ 09/13/24 14:01:00.788
  Sep 13 14:01:00.788: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename limitrange @ 09/13/24 14:01:00.79
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 14:01:00.843
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 14:01:00.846
  STEP: Creating LimitRange "e2e-limitrange-w474b" in namespace "limitrange-3291" @ 09/13/24 14:01:00.849
  STEP: Creating another limitRange in another namespace @ 09/13/24 14:01:00.855
  Sep 13 14:01:00.873: INFO: Namespace "e2e-limitrange-w474b-9820" created
  Sep 13 14:01:00.873: INFO: Creating LimitRange "e2e-limitrange-w474b" in namespace "e2e-limitrange-w474b-9820"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-w474b" @ 09/13/24 14:01:00.886
  Sep 13 14:01:00.889: INFO: Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-w474b" in "limitrange-3291" namespace @ 09/13/24 14:01:00.889
  Sep 13 14:01:00.896: INFO: LimitRange "e2e-limitrange-w474b" has been patched
  STEP: Delete LimitRange "e2e-limitrange-w474b" by Collection with labelSelector: "e2e-limitrange-w474b=patched" @ 09/13/24 14:01:00.896
  STEP: Confirm that the limitRange "e2e-limitrange-w474b" has been deleted @ 09/13/24 14:01:00.903
  Sep 13 14:01:00.903: INFO: Requesting list of LimitRange to confirm quantity
  Sep 13 14:01:00.905: INFO: Found 0 LimitRange with label "e2e-limitrange-w474b=patched"
  Sep 13 14:01:00.905: INFO: LimitRange "e2e-limitrange-w474b" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-w474b" @ 09/13/24 14:01:00.905
  Sep 13 14:01:00.907: INFO: Found 1 limitRange
  Sep 13 14:01:00.907: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-3291" for this suite. @ 09/13/24 14:01:00.91
  STEP: Destroying namespace "e2e-limitrange-w474b-9820" for this suite. @ 09/13/24 14:01:00.915
• [0.146 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:175
  STEP: Creating a kubernetes client @ 09/13/24 14:01:00.935
  Sep 13 14:01:00.935: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename projected @ 09/13/24 14:01:00.936
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 14:01:00.952
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 14:01:00.955
  STEP: Creating configMap with name cm-test-opt-del-162a9d7a-69c6-4533-95ea-04335aabc629 @ 09/13/24 14:01:00.961
  STEP: Creating configMap with name cm-test-opt-upd-5d441e70-71eb-4837-a8a9-3f657813a3fe @ 09/13/24 14:01:00.967
  STEP: Creating the pod @ 09/13/24 14:01:00.972
  E0913 14:01:01.138920      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:01:02.139146      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-162a9d7a-69c6-4533-95ea-04335aabc629 @ 09/13/24 14:01:03.025
  STEP: Updating configmap cm-test-opt-upd-5d441e70-71eb-4837-a8a9-3f657813a3fe @ 09/13/24 14:01:03.032
  STEP: Creating configMap with name cm-test-opt-create-9a9e2c7a-77c9-438a-867c-42ae07180cc0 @ 09/13/24 14:01:03.036
  STEP: waiting to observe update in volume @ 09/13/24 14:01:03.041
  E0913 14:01:03.139620      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:01:04.139777      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:01:05.140770      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:01:06.141432      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:01:07.141415      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:01:08.142154      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:01:09.142243      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:01:10.142341      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:01:11.143303      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:01:12.143419      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:01:13.144165      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:01:14.145078      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:01:15.146163      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:01:16.147139      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:01:17.147916      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:01:18.148481      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:01:19.148740      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:01:20.149042      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:01:21.150109      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:01:22.151198      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:01:23.152174      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:01:24.153004      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:01:25.154013      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:01:26.154747      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:01:27.155808      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:01:28.156124      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:01:29.156238      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:01:30.156645      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:01:31.157040      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:01:32.157442      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:01:33.158143      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:01:34.158406      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:01:35.158693      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:01:36.158931      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:01:37.160136      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:01:38.160700      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:01:39.161221      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:01:40.161458      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:01:41.162047      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:01:42.163138      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:01:43.163263      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:01:44.163420      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:01:45.163889      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:01:46.164268      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:01:47.164098      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:01:48.164925      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:01:49.165328      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:01:50.166194      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:01:51.166384      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:01:52.166644      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:01:53.166979      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:01:54.167108      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:01:55.167341      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:01:56.167923      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:01:57.168068      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:01:58.168933      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:01:59.169039      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:02:00.169179      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:02:01.169293      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:02:02.169722      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:02:03.170253      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:02:04.170805      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:02:05.171063      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:02:06.171930      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:02:07.172201      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:02:08.172379      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:02:09.172487      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:02:10.173368      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:02:11.173496      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:02:12.174469      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:02:13.174993      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:02:14.175172      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:02:15.175288      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:02:16.175883      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:02:17.176624      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:02:18.177314      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:02:19.177551      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:02:20.178124      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:02:21.178325      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:02:22.179005      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:02:23.179851      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:02:24.180544      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:02:25.181103      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:02:26.181340      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:02:27.181560      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 14:02:27.364: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4817" for this suite. @ 09/13/24 14:02:27.369
• [86.468 seconds]
------------------------------
SSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:210
  STEP: Creating a kubernetes client @ 09/13/24 14:02:27.404
  Sep 13 14:02:27.404: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename emptydir @ 09/13/24 14:02:27.406
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 14:02:27.446
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 14:02:27.45
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 09/13/24 14:02:27.453
  E0913 14:02:28.181797      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:02:29.181941      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:02:30.182327      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:02:31.182817      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/13/24 14:02:31.472
  Sep 13 14:02:31.475: INFO: Trying to get logs from node cncf-3 pod pod-195abd32-9de5-412b-8c5f-d5c5985a43f7 container test-container: <nil>
  STEP: delete the pod @ 09/13/24 14:02:31.479
  Sep 13 14:02:31.502: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7408" for this suite. @ 09/13/24 14:02:31.506
• [4.111 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 09/13/24 14:02:31.515
  Sep 13 14:02:31.515: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename subjectreview @ 09/13/24 14:02:31.516
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 14:02:31.529
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 14:02:31.531
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-7105" @ 09/13/24 14:02:31.537
  Sep 13 14:02:31.541: INFO: saUsername: "system:serviceaccount:subjectreview-7105:e2e"
  Sep 13 14:02:31.541: INFO: saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-7105"}
  Sep 13 14:02:31.542: INFO: saUID: "6649a8ca-3504-4f52-a89e-dabc99d06730"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-7105:e2e" @ 09/13/24 14:02:31.542
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-7105:e2e" @ 09/13/24 14:02:31.543
  Sep 13 14:02:31.545: INFO: sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-7105:e2e" api 'list' configmaps in "subjectreview-7105" namespace @ 09/13/24 14:02:31.545
  Sep 13 14:02:31.547: INFO: SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-7105:e2e" @ 09/13/24 14:02:31.547
  Sep 13 14:02:31.549: INFO: lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  Sep 13 14:02:31.549: INFO: LocalSubjectAccessReview has been verified
  Sep 13 14:02:31.550: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-7105" for this suite. @ 09/13/24 14:02:31.553
• [0.058 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:198
  STEP: Creating a kubernetes client @ 09/13/24 14:02:31.574
  Sep 13 14:02:31.574: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename container-probe @ 09/13/24 14:02:31.575
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 14:02:31.596
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 14:02:31.599
  STEP: Creating pod liveness-906ea8c8-2e05-460e-a83f-dc2537918e5d in namespace container-probe-4457 @ 09/13/24 14:02:31.601
  E0913 14:02:32.182935      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:02:33.183105      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/13/24 14:02:33.629
  Sep 13 14:02:33.632: INFO: Initial restart count of pod liveness-906ea8c8-2e05-460e-a83f-dc2537918e5d is 0
  Sep 13 14:02:33.634: INFO: Get pod liveness-906ea8c8-2e05-460e-a83f-dc2537918e5d in namespace container-probe-4457
  E0913 14:02:34.184081      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:02:35.184279      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 14:02:35.638: INFO: Get pod liveness-906ea8c8-2e05-460e-a83f-dc2537918e5d in namespace container-probe-4457
  E0913 14:02:36.185067      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:02:37.185424      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 14:02:37.642: INFO: Get pod liveness-906ea8c8-2e05-460e-a83f-dc2537918e5d in namespace container-probe-4457
  E0913 14:02:38.185679      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:02:39.185977      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 14:02:39.646: INFO: Get pod liveness-906ea8c8-2e05-460e-a83f-dc2537918e5d in namespace container-probe-4457
  E0913 14:02:40.185946      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:02:41.186077      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 14:02:41.650: INFO: Get pod liveness-906ea8c8-2e05-460e-a83f-dc2537918e5d in namespace container-probe-4457
  E0913 14:02:42.187173      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:02:43.187565      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 14:02:43.655: INFO: Get pod liveness-906ea8c8-2e05-460e-a83f-dc2537918e5d in namespace container-probe-4457
  E0913 14:02:44.188893      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:02:45.188997      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 14:02:45.660: INFO: Get pod liveness-906ea8c8-2e05-460e-a83f-dc2537918e5d in namespace container-probe-4457
  E0913 14:02:46.189293      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:02:47.189436      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 14:02:47.664: INFO: Get pod liveness-906ea8c8-2e05-460e-a83f-dc2537918e5d in namespace container-probe-4457
  E0913 14:02:48.189811      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:02:49.190042      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 14:02:49.668: INFO: Get pod liveness-906ea8c8-2e05-460e-a83f-dc2537918e5d in namespace container-probe-4457
  E0913 14:02:50.190697      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:02:51.190804      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 14:02:51.673: INFO: Get pod liveness-906ea8c8-2e05-460e-a83f-dc2537918e5d in namespace container-probe-4457
  E0913 14:02:52.191011      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:02:53.191198      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 14:02:53.678: INFO: Get pod liveness-906ea8c8-2e05-460e-a83f-dc2537918e5d in namespace container-probe-4457
  Sep 13 14:02:53.678: INFO: Restart count of pod container-probe-4457/liveness-906ea8c8-2e05-460e-a83f-dc2537918e5d is now 1 (20.046387787s elapsed)
  E0913 14:02:54.192073      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:02:55.193111      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 14:02:55.682: INFO: Get pod liveness-906ea8c8-2e05-460e-a83f-dc2537918e5d in namespace container-probe-4457
  E0913 14:02:56.193503      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:02:57.193754      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 14:02:57.686: INFO: Get pod liveness-906ea8c8-2e05-460e-a83f-dc2537918e5d in namespace container-probe-4457
  E0913 14:02:58.193817      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:02:59.194084      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 14:02:59.690: INFO: Get pod liveness-906ea8c8-2e05-460e-a83f-dc2537918e5d in namespace container-probe-4457
  E0913 14:03:00.195103      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:03:01.195510      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 14:03:01.694: INFO: Get pod liveness-906ea8c8-2e05-460e-a83f-dc2537918e5d in namespace container-probe-4457
  E0913 14:03:02.195919      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:03:03.196841      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 14:03:03.698: INFO: Get pod liveness-906ea8c8-2e05-460e-a83f-dc2537918e5d in namespace container-probe-4457
  E0913 14:03:04.196949      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:03:05.197168      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 14:03:05.702: INFO: Get pod liveness-906ea8c8-2e05-460e-a83f-dc2537918e5d in namespace container-probe-4457
  E0913 14:03:06.197591      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:03:07.198164      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 14:03:07.705: INFO: Get pod liveness-906ea8c8-2e05-460e-a83f-dc2537918e5d in namespace container-probe-4457
  E0913 14:03:08.199270      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:03:09.199552      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 14:03:09.709: INFO: Get pod liveness-906ea8c8-2e05-460e-a83f-dc2537918e5d in namespace container-probe-4457
  E0913 14:03:10.200534      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:03:11.200669      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 14:03:11.713: INFO: Get pod liveness-906ea8c8-2e05-460e-a83f-dc2537918e5d in namespace container-probe-4457
  E0913 14:03:12.200834      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:03:13.201402      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 14:03:13.718: INFO: Get pod liveness-906ea8c8-2e05-460e-a83f-dc2537918e5d in namespace container-probe-4457
  Sep 13 14:03:13.718: INFO: Restart count of pod container-probe-4457/liveness-906ea8c8-2e05-460e-a83f-dc2537918e5d is now 2 (40.086190344s elapsed)
  E0913 14:03:14.201514      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:03:15.203857      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 14:03:15.723: INFO: Get pod liveness-906ea8c8-2e05-460e-a83f-dc2537918e5d in namespace container-probe-4457
  E0913 14:03:16.204713      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:03:17.205063      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 14:03:17.726: INFO: Get pod liveness-906ea8c8-2e05-460e-a83f-dc2537918e5d in namespace container-probe-4457
  E0913 14:03:18.205466      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:03:19.206133      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 14:03:19.731: INFO: Get pod liveness-906ea8c8-2e05-460e-a83f-dc2537918e5d in namespace container-probe-4457
  E0913 14:03:20.206894      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:03:21.207158      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 14:03:21.736: INFO: Get pod liveness-906ea8c8-2e05-460e-a83f-dc2537918e5d in namespace container-probe-4457
  E0913 14:03:22.208184      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:03:23.208138      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 14:03:23.739: INFO: Get pod liveness-906ea8c8-2e05-460e-a83f-dc2537918e5d in namespace container-probe-4457
  E0913 14:03:24.208292      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:03:25.208367      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 14:03:25.744: INFO: Get pod liveness-906ea8c8-2e05-460e-a83f-dc2537918e5d in namespace container-probe-4457
  E0913 14:03:26.208965      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:03:27.209179      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 14:03:27.750: INFO: Get pod liveness-906ea8c8-2e05-460e-a83f-dc2537918e5d in namespace container-probe-4457
  E0913 14:03:28.209307      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:03:29.209449      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 14:03:29.755: INFO: Get pod liveness-906ea8c8-2e05-460e-a83f-dc2537918e5d in namespace container-probe-4457
  E0913 14:03:30.209870      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:03:31.210564      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 14:03:31.760: INFO: Get pod liveness-906ea8c8-2e05-460e-a83f-dc2537918e5d in namespace container-probe-4457
  E0913 14:03:32.211495      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:03:33.211929      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 14:03:33.765: INFO: Get pod liveness-906ea8c8-2e05-460e-a83f-dc2537918e5d in namespace container-probe-4457
  Sep 13 14:03:33.766: INFO: Restart count of pod container-probe-4457/liveness-906ea8c8-2e05-460e-a83f-dc2537918e5d is now 3 (1m0.134168868s elapsed)
  E0913 14:03:34.212175      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:03:35.212365      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 14:03:35.769: INFO: Get pod liveness-906ea8c8-2e05-460e-a83f-dc2537918e5d in namespace container-probe-4457
  E0913 14:03:36.213130      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:03:37.213632      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 14:03:37.775: INFO: Get pod liveness-906ea8c8-2e05-460e-a83f-dc2537918e5d in namespace container-probe-4457
  E0913 14:03:38.213662      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:03:39.214046      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 14:03:39.779: INFO: Get pod liveness-906ea8c8-2e05-460e-a83f-dc2537918e5d in namespace container-probe-4457
  E0913 14:03:40.215890      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:03:41.217017      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 14:03:41.783: INFO: Get pod liveness-906ea8c8-2e05-460e-a83f-dc2537918e5d in namespace container-probe-4457
  E0913 14:03:42.218004      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:03:43.218246      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 14:03:43.787: INFO: Get pod liveness-906ea8c8-2e05-460e-a83f-dc2537918e5d in namespace container-probe-4457
  E0913 14:03:44.218930      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:03:45.219044      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 14:03:45.791: INFO: Get pod liveness-906ea8c8-2e05-460e-a83f-dc2537918e5d in namespace container-probe-4457
  E0913 14:03:46.219450      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:03:47.219428      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 14:03:47.795: INFO: Get pod liveness-906ea8c8-2e05-460e-a83f-dc2537918e5d in namespace container-probe-4457
  E0913 14:03:48.220174      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:03:49.221013      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 14:03:49.800: INFO: Get pod liveness-906ea8c8-2e05-460e-a83f-dc2537918e5d in namespace container-probe-4457
  E0913 14:03:50.221859      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:03:51.222022      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 14:03:51.804: INFO: Get pod liveness-906ea8c8-2e05-460e-a83f-dc2537918e5d in namespace container-probe-4457
  E0913 14:03:52.222555      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:03:53.222608      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 14:03:53.808: INFO: Get pod liveness-906ea8c8-2e05-460e-a83f-dc2537918e5d in namespace container-probe-4457
  Sep 13 14:03:53.808: INFO: Restart count of pod container-probe-4457/liveness-906ea8c8-2e05-460e-a83f-dc2537918e5d is now 4 (1m20.17663525s elapsed)
  E0913 14:03:54.223223      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:03:55.223755      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 14:03:55.813: INFO: Get pod liveness-906ea8c8-2e05-460e-a83f-dc2537918e5d in namespace container-probe-4457
  E0913 14:03:56.223830      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:03:57.224140      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 14:03:57.817: INFO: Get pod liveness-906ea8c8-2e05-460e-a83f-dc2537918e5d in namespace container-probe-4457
  E0913 14:03:58.224772      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:03:59.225064      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 14:03:59.821: INFO: Get pod liveness-906ea8c8-2e05-460e-a83f-dc2537918e5d in namespace container-probe-4457
  E0913 14:04:00.225991      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:04:01.226138      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 14:04:01.827: INFO: Get pod liveness-906ea8c8-2e05-460e-a83f-dc2537918e5d in namespace container-probe-4457
  E0913 14:04:02.226733      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:04:03.226976      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 14:04:03.832: INFO: Get pod liveness-906ea8c8-2e05-460e-a83f-dc2537918e5d in namespace container-probe-4457
  E0913 14:04:04.227606      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:04:05.227876      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 14:04:05.835: INFO: Get pod liveness-906ea8c8-2e05-460e-a83f-dc2537918e5d in namespace container-probe-4457
  E0913 14:04:06.229188      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:04:07.229168      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 14:04:07.839: INFO: Get pod liveness-906ea8c8-2e05-460e-a83f-dc2537918e5d in namespace container-probe-4457
  E0913 14:04:08.230136      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:04:09.231094      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 14:04:09.843: INFO: Get pod liveness-906ea8c8-2e05-460e-a83f-dc2537918e5d in namespace container-probe-4457
  E0913 14:04:10.231166      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:04:11.231457      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 14:04:11.848: INFO: Get pod liveness-906ea8c8-2e05-460e-a83f-dc2537918e5d in namespace container-probe-4457
  E0913 14:04:12.232269      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:04:13.232398      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 14:04:13.855: INFO: Get pod liveness-906ea8c8-2e05-460e-a83f-dc2537918e5d in namespace container-probe-4457
  E0913 14:04:14.232692      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:04:15.232926      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 14:04:15.858: INFO: Get pod liveness-906ea8c8-2e05-460e-a83f-dc2537918e5d in namespace container-probe-4457
  E0913 14:04:16.233980      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:04:17.234544      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 14:04:17.861: INFO: Get pod liveness-906ea8c8-2e05-460e-a83f-dc2537918e5d in namespace container-probe-4457
  E0913 14:04:18.234965      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:04:19.235228      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 14:04:19.864: INFO: Get pod liveness-906ea8c8-2e05-460e-a83f-dc2537918e5d in namespace container-probe-4457
  E0913 14:04:20.236334      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:04:21.236914      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 14:04:21.868: INFO: Get pod liveness-906ea8c8-2e05-460e-a83f-dc2537918e5d in namespace container-probe-4457
  E0913 14:04:22.237065      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:04:23.237449      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 14:04:23.871: INFO: Get pod liveness-906ea8c8-2e05-460e-a83f-dc2537918e5d in namespace container-probe-4457
  E0913 14:04:24.237417      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:04:25.237534      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 14:04:25.876: INFO: Get pod liveness-906ea8c8-2e05-460e-a83f-dc2537918e5d in namespace container-probe-4457
  E0913 14:04:26.238236      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:04:27.238509      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 14:04:27.880: INFO: Get pod liveness-906ea8c8-2e05-460e-a83f-dc2537918e5d in namespace container-probe-4457
  E0913 14:04:28.239147      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:04:29.239352      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 14:04:29.886: INFO: Get pod liveness-906ea8c8-2e05-460e-a83f-dc2537918e5d in namespace container-probe-4457
  E0913 14:04:30.240216      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:04:31.240969      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 14:04:31.890: INFO: Get pod liveness-906ea8c8-2e05-460e-a83f-dc2537918e5d in namespace container-probe-4457
  E0913 14:04:32.241940      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:04:33.242148      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 14:04:33.895: INFO: Get pod liveness-906ea8c8-2e05-460e-a83f-dc2537918e5d in namespace container-probe-4457
  E0913 14:04:34.242836      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:04:35.242946      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 14:04:35.899: INFO: Get pod liveness-906ea8c8-2e05-460e-a83f-dc2537918e5d in namespace container-probe-4457
  E0913 14:04:36.243847      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:04:37.245069      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 14:04:37.902: INFO: Get pod liveness-906ea8c8-2e05-460e-a83f-dc2537918e5d in namespace container-probe-4457
  E0913 14:04:38.246057      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:04:39.246583      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 14:04:39.907: INFO: Get pod liveness-906ea8c8-2e05-460e-a83f-dc2537918e5d in namespace container-probe-4457
  E0913 14:04:40.247387      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:04:41.247739      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 14:04:41.912: INFO: Get pod liveness-906ea8c8-2e05-460e-a83f-dc2537918e5d in namespace container-probe-4457
  E0913 14:04:42.247932      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:04:43.248666      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 14:04:43.920: INFO: Get pod liveness-906ea8c8-2e05-460e-a83f-dc2537918e5d in namespace container-probe-4457
  E0913 14:04:44.248773      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:04:45.249754      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 14:04:45.924: INFO: Get pod liveness-906ea8c8-2e05-460e-a83f-dc2537918e5d in namespace container-probe-4457
  E0913 14:04:46.250562      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:04:47.250825      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 14:04:47.927: INFO: Get pod liveness-906ea8c8-2e05-460e-a83f-dc2537918e5d in namespace container-probe-4457
  E0913 14:04:48.251350      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:04:49.251803      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 14:04:49.931: INFO: Get pod liveness-906ea8c8-2e05-460e-a83f-dc2537918e5d in namespace container-probe-4457
  E0913 14:04:50.252016      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:04:51.252008      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 14:04:51.935: INFO: Get pod liveness-906ea8c8-2e05-460e-a83f-dc2537918e5d in namespace container-probe-4457
  E0913 14:04:52.252818      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:04:53.253127      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 14:04:53.939: INFO: Get pod liveness-906ea8c8-2e05-460e-a83f-dc2537918e5d in namespace container-probe-4457
  E0913 14:04:54.253850      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:04:55.254069      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 14:04:55.952: INFO: Get pod liveness-906ea8c8-2e05-460e-a83f-dc2537918e5d in namespace container-probe-4457
  E0913 14:04:56.254842      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:04:57.255236      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 14:04:57.956: INFO: Get pod liveness-906ea8c8-2e05-460e-a83f-dc2537918e5d in namespace container-probe-4457
  E0913 14:04:58.255805      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:04:59.255938      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 14:04:59.960: INFO: Get pod liveness-906ea8c8-2e05-460e-a83f-dc2537918e5d in namespace container-probe-4457
  E0913 14:05:00.256839      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:05:01.257081      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 14:05:01.964: INFO: Get pod liveness-906ea8c8-2e05-460e-a83f-dc2537918e5d in namespace container-probe-4457
  E0913 14:05:02.257815      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:05:03.257883      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 14:05:03.974: INFO: Get pod liveness-906ea8c8-2e05-460e-a83f-dc2537918e5d in namespace container-probe-4457
  Sep 13 14:05:03.974: INFO: Restart count of pod container-probe-4457/liveness-906ea8c8-2e05-460e-a83f-dc2537918e5d is now 5 (2m30.342070726s elapsed)
  STEP: deleting the pod @ 09/13/24 14:05:03.974
  Sep 13 14:05:03.997: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-4457" for this suite. @ 09/13/24 14:05:04.001
• [152.435 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:92
  STEP: Creating a kubernetes client @ 09/13/24 14:05:04.017
  Sep 13 14:05:04.017: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename downward-api @ 09/13/24 14:05:04.018
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 14:05:04.043
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 14:05:04.046
  STEP: Creating a pod to test downward api env vars @ 09/13/24 14:05:04.049
  E0913 14:05:04.258439      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:05:05.259644      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:05:06.261018      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:05:07.260480      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/13/24 14:05:08.067
  Sep 13 14:05:08.069: INFO: Trying to get logs from node cncf-3 pod downward-api-ea60d656-8b24-4ccb-9a45-11ea8da0bbb7 container dapi-container: <nil>
  STEP: delete the pod @ 09/13/24 14:05:08.08
  Sep 13 14:05:08.098: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9938" for this suite. @ 09/13/24 14:05:08.101
• [4.096 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:315
  STEP: Creating a kubernetes client @ 09/13/24 14:05:08.117
  Sep 13 14:05:08.117: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename webhook @ 09/13/24 14:05:08.118
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 14:05:08.135
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 14:05:08.138
  STEP: Setting up server cert @ 09/13/24 14:05:08.158
  E0913 14:05:08.261173      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/13/24 14:05:08.392
  STEP: Deploying the webhook pod @ 09/13/24 14:05:08.4
  STEP: Wait for the deployment to be ready @ 09/13/24 14:05:08.42
  Sep 13 14:05:08.432: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0913 14:05:09.261527      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:05:10.261744      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/13/24 14:05:10.44
  STEP: Verifying the service has paired with the endpoint @ 09/13/24 14:05:10.454
  E0913 14:05:11.261853      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 14:05:11.455: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Sep 13 14:05:11.460: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-8787-crds.webhook.example.com via the AdmissionRegistration API @ 09/13/24 14:05:11.988
  STEP: Creating a custom resource while v1 is storage version @ 09/13/24 14:05:12.012
  E0913 14:05:12.263539      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:05:13.264145      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Patching Custom Resource Definition to set v2 as storage @ 09/13/24 14:05:14.048
  STEP: Patching the custom resource while v2 is storage version @ 09/13/24 14:05:14.058
  E0913 14:05:14.265227      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 14:05:14.660: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9013" for this suite. @ 09/13/24 14:05:14.664
  STEP: Destroying namespace "webhook-markers-3797" for this suite. @ 09/13/24 14:05:14.669
• [6.556 seconds]
------------------------------
S
------------------------------
[sig-storage] StorageClasses CSI Conformance should run through the lifecycle of a StorageClass [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/storageclass.go:53
  STEP: Creating a kubernetes client @ 09/13/24 14:05:14.673
  Sep 13 14:05:14.674: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename csi-storageclass @ 09/13/24 14:05:14.675
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 14:05:14.691
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 14:05:14.694
  STEP: Creating a StorageClass @ 09/13/24 14:05:14.696
  STEP: Get StorageClass "e2e-c44t5" @ 09/13/24 14:05:14.701
  STEP: Patching the StorageClass "e2e-c44t5" @ 09/13/24 14:05:14.703
  STEP: Delete StorageClass "e2e-c44t5" @ 09/13/24 14:05:14.713
  STEP: Confirm deletion of StorageClass "e2e-c44t5" @ 09/13/24 14:05:14.718
  STEP: Create a replacement StorageClass @ 09/13/24 14:05:14.721
  STEP: Updating StorageClass "e2e-v2-nnrvq" @ 09/13/24 14:05:14.73
  STEP: Listing all StorageClass with the labelSelector: "e2e-v2-nnrvq=updated" @ 09/13/24 14:05:14.736
  STEP: Deleting StorageClass "e2e-v2-nnrvq" via DeleteCollection @ 09/13/24 14:05:14.738
  STEP: Confirm deletion of StorageClass "e2e-v2-nnrvq" @ 09/13/24 14:05:14.742
  Sep 13 14:05:14.744: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csi-storageclass-645" for this suite. @ 09/13/24 14:05:14.748
• [0.079 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 09/13/24 14:05:14.753
  Sep 13 14:05:14.753: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename pods @ 09/13/24 14:05:14.754
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 14:05:14.771
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 14:05:14.774
  Sep 13 14:05:14.776: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: creating the pod @ 09/13/24 14:05:14.777
  STEP: submitting the pod to kubernetes @ 09/13/24 14:05:14.777
  E0913 14:05:15.265047      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0913 14:05:16.265610      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 13 14:05:16.804: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5983" for this suite. @ 09/13/24 14:05:16.808
• [2.063 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:117
  STEP: Creating a kubernetes client @ 09/13/24 14:05:16.816
  Sep 13 14:05:16.816: INFO: >>> kubeConfig: /tmp/kubeconfig-4167952915
  STEP: Building a namespace api object, basename field-validation @ 09/13/24 14:05:16.818
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/13/24 14:05:16.844
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/13/24 14:05:16.847
  STEP: apply creating a deployment @ 09/13/24 14:05:16.85
  Sep 13 14:05:16.858: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-5775" for this suite. @ 09/13/24 14:05:16.861
• [0.050 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[SynchronizedAfterSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:88
  Sep 13 14:05:16.867: INFO: Running AfterSuite actions on node 1
  Sep 13 14:05:16.867: INFO: Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
k8s.io/kubernetes/test/e2e/e2e_test.go:161
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
k8s.io/kubernetes/test/e2e/framework/test_context.go:621
[ReportAfterSuite] PASSED [0.056 seconds]
------------------------------

Ran 388 of 7408 Specs in 6774.413 seconds
SUCCESS! -- 388 Passed | 0 Failed | 0 Pending | 7020 Skipped
PASS

Ginkgo ran 1 suite in 1h52m55.505962678s
Test Suite Passed
