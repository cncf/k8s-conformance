  I0904 14:37:56.528512      23 e2e.go:109] Starting e2e run "816bb44b-d3f9-461b-9a4b-e93592776709" on Ginkgo node 1
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1756996676 - will randomize all specs

Will run 424 of 7132 specs
------------------------------
[ReportBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e_test.go:153
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:69
  I0904 14:37:56.754392 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  I0904 14:37:56.755151 23 helper.go:51] Waiting up to 30m0s for all (but 0) nodes to be schedulable
  I0904 14:37:56.773380 23 e2e.go:142] Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  I0904 14:37:56.776530 23 e2e.go:153] 5 / 5 pods ready in namespace 'kube-system' in daemonset 'calico-node' (0 seconds elapsed)
  I0904 14:37:56.776658 23 e2e.go:245] e2e test version: v1.34.0
  I0904 14:37:56.777308 23 e2e.go:254] kube-apiserver version: v1.34.0
  I0904 14:37:56.777354 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  I0904 14:37:56.779546 23 e2e.go:383] Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [0.025 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:89
  STEP: Creating a kubernetes client @ 09/04/25 14:37:56.93
  I0904 14:37:56.930163 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename configmap @ 09/04/25 14:37:56.93
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:37:56.944
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:37:56.947
  STEP: Creating configMap with name configmap-test-volume-map-ec2cbe11-fb0e-46ad-aa9a-b276fe2eadd0 @ 09/04/25 14:37:56.95
  STEP: Creating a pod to test consume configMaps @ 09/04/25 14:37:56.957
  STEP: Saw pod success @ 09/04/25 14:38:06.996
  I0904 14:38:06.998294 23 output.go:207] Trying to get logs from node ip-172-31-33-202 pod pod-configmaps-45149a42-f405-4371-adba-677482fd7ef2 container agnhost-container: <nil>
  STEP: delete the pod @ 09/04/25 14:38:07.015
  I0904 14:38:07.031090 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9242" for this suite. @ 09/04/25 14:38:07.034
• [10.112 seconds]
------------------------------
SSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:104
  STEP: Creating a kubernetes client @ 09/04/25 14:38:07.041
  I0904 14:38:07.042009 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 09/04/25 14:38:07.042
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:38:07.051
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:38:07.053
  STEP: creating a target pod @ 09/04/25 14:38:07.056
  STEP: adding an ephemeral container @ 09/04/25 14:38:09.076
  STEP: verifying the pod's generation is 2 @ 09/04/25 14:38:11.093
  STEP: checking pod container endpoints @ 09/04/25 14:38:11.095
  I0904 14:38:11.095666 23 exec_util.go:63] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-3170 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0904 14:38:11.095682 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0904 14:38:11.095721 23 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/ephemeral-containers-test-3170/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&stderr=true&stdout=true)
  I0904 14:38:11.139097 23 exec_util.go:112] Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 09/04/25 14:38:11.146
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 09/04/25 14:38:11.15
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 09/04/25 14:38:11.16
  I0904 14:38:11.164128 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-3170" for this suite. @ 09/04/25 14:38:11.169
• [4.137 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 09/04/25 14:38:11.179
  I0904 14:38:11.179292 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename projected @ 09/04/25 14:38:11.179
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:38:11.191
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:38:11.193
  STEP: Creating projection with secret that has name projected-secret-test-map-e0ed2ccc-5786-410a-9e2f-a4bbfd18505a @ 09/04/25 14:38:11.195
  STEP: Creating a pod to test consume secrets @ 09/04/25 14:38:11.202
  STEP: Saw pod success @ 09/04/25 14:38:17.229
  I0904 14:38:17.232252 23 output.go:207] Trying to get logs from node ip-172-31-18-79 pod pod-projected-secrets-7cfaee98-683d-462e-90cd-40fa125d85f6 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/04/25 14:38:17.241
  I0904 14:38:17.263240 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3579" for this suite. @ 09/04/25 14:38:17.268
• [6.096 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:46
  STEP: Creating a kubernetes client @ 09/04/25 14:38:17.275
  I0904 14:38:17.275101 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename configmap @ 09/04/25 14:38:17.275
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:38:17.284
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:38:17.285
  STEP: Creating configMap configmap-9350/configmap-test-cf549517-cb6c-4804-af95-1f8373201654 @ 09/04/25 14:38:17.288
  STEP: Creating a pod to test consume configMaps @ 09/04/25 14:38:17.291
  STEP: Saw pod success @ 09/04/25 14:38:21.312
  I0904 14:38:21.315538 23 output.go:207] Trying to get logs from node ip-172-31-33-202 pod pod-configmaps-33140c62-50d6-4fa1-98f4-9471b0cdc73c container env-test: <nil>
  STEP: delete the pod @ 09/04/25 14:38:21.32
  I0904 14:38:21.337983 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9350" for this suite. @ 09/04/25 14:38:21.343
• [4.074 seconds]
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingress.go:55
  STEP: Creating a kubernetes client @ 09/04/25 14:38:21.349
  I0904 14:38:21.349177 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename ingress @ 09/04/25 14:38:21.349
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:38:21.359
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:38:21.361
  STEP: getting /apis @ 09/04/25 14:38:21.363
  STEP: getting /apis/networking.k8s.io @ 09/04/25 14:38:21.365
  STEP: getting /apis/networking.k8s.iov1 @ 09/04/25 14:38:21.366
  STEP: creating @ 09/04/25 14:38:21.367
  STEP: getting @ 09/04/25 14:38:21.386
  STEP: listing @ 09/04/25 14:38:21.393
  STEP: watching @ 09/04/25 14:38:21.398
  I0904 14:38:21.398145 23 ingress.go:186] starting watch
  STEP: cluster-wide listing @ 09/04/25 14:38:21.399
  STEP: cluster-wide watching @ 09/04/25 14:38:21.498
  I0904 14:38:21.498889 23 ingress.go:198] starting watch
  STEP: patching @ 09/04/25 14:38:21.5
  STEP: updating @ 09/04/25 14:38:21.504
  I0904 14:38:21.512252 23 ingress.go:221] waiting for watch events with expected annotations
  I0904 14:38:21.512431 23 ingress.go:234] saw patched and updated annotations
  STEP: patching /status @ 09/04/25 14:38:21.512
  STEP: updating /status @ 09/04/25 14:38:21.518
  STEP: get /status @ 09/04/25 14:38:21.527
  STEP: deleting @ 09/04/25 14:38:21.53
  STEP: deleting a collection @ 09/04/25 14:38:21.599
  I0904 14:38:21.614564 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-51" for this suite. @ 09/04/25 14:38:21.618
• [0.275 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 09/04/25 14:38:21.624
  I0904 14:38:21.624693 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename subpath @ 09/04/25 14:38:21.625
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:38:21.637
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:38:21.64
  STEP: Setting up data @ 09/04/25 14:38:21.644
  STEP: Creating pod pod-subpath-test-projected-gmnp @ 09/04/25 14:38:21.654
  STEP: Creating a pod to test atomic-volume-subpath @ 09/04/25 14:38:21.654
  STEP: Saw pod success @ 09/04/25 14:38:45.729
  I0904 14:38:45.731444 23 output.go:207] Trying to get logs from node ip-172-31-18-79 pod pod-subpath-test-projected-gmnp container test-container-subpath-projected-gmnp: <nil>
  STEP: delete the pod @ 09/04/25 14:38:45.735
  STEP: Deleting pod pod-subpath-test-projected-gmnp @ 09/04/25 14:38:45.753
  I0904 14:38:45.753622 23 delete.go:78] Deleting pod "pod-subpath-test-projected-gmnp" in namespace "subpath-1892"
  I0904 14:38:45.755322 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-1892" for this suite. @ 09/04/25 14:38:45.76
• [24.140 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance] [sig-storage, Serial, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:190
  STEP: Creating a kubernetes client @ 09/04/25 14:38:45.765
  I0904 14:38:45.765231 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename emptydir-wrapper @ 09/04/25 14:38:45.765
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:38:45.777
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:38:45.778
  STEP: Creating 50 configmaps @ 09/04/25 14:38:45.78
  STEP: Creating RC which spawns configmap-volume pods @ 09/04/25 14:38:46.022
  I0904 14:38:46.140634 23 resource.go:64] Pod name wrapped-volume-race-ee816abe-57a1-4165-aa60-b6ed8a5a995a: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 09/04/25 14:38:46.14
  STEP: Creating RC which spawns configmap-volume pods @ 09/04/25 14:38:48.192
  I0904 14:38:48.204873 23 resource.go:64] Pod name wrapped-volume-race-2f5e2067-ccdd-448f-8101-f4c83d0a4630: Found 0 pods out of 5
  I0904 14:38:53.211914 23 resource.go:64] Pod name wrapped-volume-race-2f5e2067-ccdd-448f-8101-f4c83d0a4630: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 09/04/25 14:38:53.211
  STEP: Creating RC which spawns configmap-volume pods @ 09/04/25 14:38:53.23
  I0904 14:38:53.247259 23 resource.go:64] Pod name wrapped-volume-race-e01303ef-b691-40b0-8c15-4e164556266c: Found 1 pods out of 5
  I0904 14:38:58.252134 23 resource.go:64] Pod name wrapped-volume-race-e01303ef-b691-40b0-8c15-4e164556266c: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 09/04/25 14:38:58.252
  STEP: deleting ReplicationController wrapped-volume-race-e01303ef-b691-40b0-8c15-4e164556266c in namespace emptydir-wrapper-7306, will wait for the garbage collector to delete the pods @ 09/04/25 14:38:58.267
  I0904 14:38:58.326826 23 resources.go:139] Deleting ReplicationController wrapped-volume-race-e01303ef-b691-40b0-8c15-4e164556266c took: 5.031272ms
  I0904 14:38:58.427635 23 resources.go:163] Terminating ReplicationController wrapped-volume-race-e01303ef-b691-40b0-8c15-4e164556266c pods took: 100.790819ms
  STEP: deleting ReplicationController wrapped-volume-race-2f5e2067-ccdd-448f-8101-f4c83d0a4630 in namespace emptydir-wrapper-7306, will wait for the garbage collector to delete the pods @ 09/04/25 14:38:59.328
  I0904 14:38:59.389331 23 resources.go:139] Deleting ReplicationController wrapped-volume-race-2f5e2067-ccdd-448f-8101-f4c83d0a4630 took: 5.365277ms
  I0904 14:38:59.489978 23 resources.go:163] Terminating ReplicationController wrapped-volume-race-2f5e2067-ccdd-448f-8101-f4c83d0a4630 pods took: 100.642882ms
  STEP: deleting ReplicationController wrapped-volume-race-ee816abe-57a1-4165-aa60-b6ed8a5a995a in namespace emptydir-wrapper-7306, will wait for the garbage collector to delete the pods @ 09/04/25 14:39:00.59
  I0904 14:39:00.650986 23 resources.go:139] Deleting ReplicationController wrapped-volume-race-ee816abe-57a1-4165-aa60-b6ed8a5a995a took: 5.282412ms
  I0904 14:39:00.751611 23 resources.go:163] Terminating ReplicationController wrapped-volume-race-ee816abe-57a1-4165-aa60-b6ed8a5a995a pods took: 100.621148ms
  STEP: Cleaning up the configMaps @ 09/04/25 14:39:01.952
  I0904 14:39:02.225368 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-7306" for this suite. @ 09/04/25 14:39:02.229
• [16.472 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1007
  STEP: Creating a kubernetes client @ 09/04/25 14:39:02.236
  I0904 14:39:02.236875 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename resourcequota @ 09/04/25 14:39:02.237
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:39:02.247
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:39:02.249
  STEP: Creating a ResourceQuota @ 09/04/25 14:39:02.25
  STEP: Getting a ResourceQuota @ 09/04/25 14:39:02.255
  STEP: Listing all ResourceQuotas with LabelSelector @ 09/04/25 14:39:02.258
  STEP: Patching the ResourceQuota @ 09/04/25 14:39:02.26
  STEP: Deleting a Collection of ResourceQuotas @ 09/04/25 14:39:02.266
  STEP: Verifying the deleted ResourceQuota @ 09/04/25 14:39:02.277
  I0904 14:39:02.280820 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4701" for this suite. @ 09/04/25 14:39:02.329
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:726
  STEP: Creating a kubernetes client @ 09/04/25 14:39:02.336
  I0904 14:39:02.336750 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename security-context-test @ 09/04/25 14:39:02.337
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:39:02.347
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:39:02.351
  I0904 14:39:06.382203 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-6620" for this suite. @ 09/04/25 14:39:06.386
• [4.058 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:169
  STEP: Creating a kubernetes client @ 09/04/25 14:39:06.395
  I0904 14:39:06.395203 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename container-probe @ 09/04/25 14:39:06.395
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:39:06.405
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:39:06.407
  STEP: Creating pod liveness-ff9df5a7-b711-4d74-ad55-781a647bee3d in namespace container-probe-1416 @ 09/04/25 14:39:06.409
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/04/25 14:39:08.42
  I0904 14:39:08.424581 23 container_probe.go:1749] Initial restart count of pod liveness-ff9df5a7-b711-4d74-ad55-781a647bee3d is 0
  I0904 14:39:08.426796 23 container_probe.go:1759] Get pod liveness-ff9df5a7-b711-4d74-ad55-781a647bee3d in namespace container-probe-1416
  I0904 14:39:10.430280 23 container_probe.go:1759] Get pod liveness-ff9df5a7-b711-4d74-ad55-781a647bee3d in namespace container-probe-1416
  I0904 14:39:12.435777 23 container_probe.go:1759] Get pod liveness-ff9df5a7-b711-4d74-ad55-781a647bee3d in namespace container-probe-1416
  I0904 14:39:14.440108 23 container_probe.go:1759] Get pod liveness-ff9df5a7-b711-4d74-ad55-781a647bee3d in namespace container-probe-1416
  I0904 14:39:16.443345 23 container_probe.go:1759] Get pod liveness-ff9df5a7-b711-4d74-ad55-781a647bee3d in namespace container-probe-1416
  I0904 14:39:18.449655 23 container_probe.go:1759] Get pod liveness-ff9df5a7-b711-4d74-ad55-781a647bee3d in namespace container-probe-1416
  I0904 14:39:20.453996 23 container_probe.go:1759] Get pod liveness-ff9df5a7-b711-4d74-ad55-781a647bee3d in namespace container-probe-1416
  I0904 14:39:22.457019 23 container_probe.go:1759] Get pod liveness-ff9df5a7-b711-4d74-ad55-781a647bee3d in namespace container-probe-1416
  I0904 14:39:24.462847 23 container_probe.go:1759] Get pod liveness-ff9df5a7-b711-4d74-ad55-781a647bee3d in namespace container-probe-1416
  I0904 14:39:26.467469 23 container_probe.go:1759] Get pod liveness-ff9df5a7-b711-4d74-ad55-781a647bee3d in namespace container-probe-1416
  I0904 14:39:28.471514 23 container_probe.go:1759] Get pod liveness-ff9df5a7-b711-4d74-ad55-781a647bee3d in namespace container-probe-1416
  I0904 14:39:28.471554 23 container_probe.go:1763] Restart count of pod container-probe-1416/liveness-ff9df5a7-b711-4d74-ad55-781a647bee3d is now 1 (20.0469382s elapsed)
  STEP: deleting the pod @ 09/04/25 14:39:28.471
  I0904 14:39:28.482926 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-1416" for this suite. @ 09/04/25 14:39:28.488
• [22.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job with successPolicy succeededCount rule should succeeded even when some indexes remain pending [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:564
  STEP: Creating a kubernetes client @ 09/04/25 14:39:28.496
  I0904 14:39:28.496381 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename job @ 09/04/25 14:39:28.496
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:39:28.506
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:39:28.508
  STEP: Creating an indexed job with successPolicy succeededCount rule @ 09/04/25 14:39:28.51
  STEP: Awaiting for the job to have the interim SuccessCriteriaMet condition with SuccessPolicy reason @ 09/04/25 14:39:28.517
  STEP: Ensure that the job reaches completions @ 09/04/25 14:39:32.529
  STEP: Verifying that the job status to ensure correct final state @ 09/04/25 14:39:32.534
  I0904 14:39:32.537020 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-1735" for this suite. @ 09/04/25 14:39:32.54
• [4.048 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:300
  STEP: Creating a kubernetes client @ 09/04/25 14:39:32.544
  I0904 14:39:32.544721 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename var-expansion @ 09/04/25 14:39:32.545
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:39:32.562
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:39:32.564
  STEP: creating the pod @ 09/04/25 14:39:32.565
  STEP: waiting for pod running @ 09/04/25 14:39:32.573
  STEP: creating a file in subpath @ 09/04/25 14:39:34.582
  I0904 14:39:34.584388 23 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-3161 PodName:var-expansion-f30c7079-da91-4c12-aaf9-b91bb40629ff ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0904 14:39:34.584409 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0904 14:39:34.584441 23 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/var-expansion-3161/pods/var-expansion-f30c7079-da91-4c12-aaf9-b91bb40629ff/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&stderr=true&stdout=true)
  STEP: test for file in mounted path @ 09/04/25 14:39:34.616
  I0904 14:39:34.620916 23 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-3161 PodName:var-expansion-f30c7079-da91-4c12-aaf9-b91bb40629ff ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0904 14:39:34.620932 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0904 14:39:34.620965 23 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/var-expansion-3161/pods/var-expansion-f30c7079-da91-4c12-aaf9-b91bb40629ff/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&stderr=true&stdout=true)
  STEP: updating the annotation value @ 09/04/25 14:39:34.659
  I0904 14:39:35.170013 23 pod_client.go:186] Successfully updated pod "var-expansion-f30c7079-da91-4c12-aaf9-b91bb40629ff"
  STEP: waiting for annotated pod running @ 09/04/25 14:39:35.17
  STEP: deleting the pod gracefully @ 09/04/25 14:39:35.174
  I0904 14:39:35.174125 23 delete.go:78] Deleting pod "var-expansion-f30c7079-da91-4c12-aaf9-b91bb40629ff" in namespace "var-expansion-3161"
  I0904 14:39:35.180404 23 delete.go:86] Wait up to 5m0s for pod "var-expansion-f30c7079-da91-4c12-aaf9-b91bb40629ff" to be fully deleted
  I0904 14:40:07.260602 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-3161" for this suite. @ 09/04/25 14:40:07.263
• [34.726 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:177
  STEP: Creating a kubernetes client @ 09/04/25 14:40:07.27
  I0904 14:40:07.270988 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename podtemplate @ 09/04/25 14:40:07.271
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:40:07.281
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:40:07.283
  STEP: Create a pod template @ 09/04/25 14:40:07.285
  STEP: Replace a pod template @ 09/04/25 14:40:07.291
  I0904 14:40:07.299067 23 podtemplates.go:210] Found updated podtemplate annotation: "true"

  I0904 14:40:07.299129 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-9889" for this suite. @ 09/04/25 14:40:07.364
• [0.101 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:229
  STEP: Creating a kubernetes client @ 09/04/25 14:40:07.372
  I0904 14:40:07.372135 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename emptydir @ 09/04/25 14:40:07.372
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:40:07.382
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:40:07.384
  STEP: Creating Pod @ 09/04/25 14:40:07.385
  STEP: Reading file content from the nginx-container @ 09/04/25 14:40:09.411
  I0904 14:40:09.411282 23 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-665 PodName:pod-sharedvolume-39996979-6058-4e06-85f3-2ce2df83f32e ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0904 14:40:09.411297 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0904 14:40:09.411331 23 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/emptydir-665/pods/pod-sharedvolume-39996979-6058-4e06-85f3-2ce2df83f32e/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&stderr=true&stdout=true)
  I0904 14:40:09.445506 23 exec_util.go:112] Exec stderr: ""
  I0904 14:40:09.445634 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-665" for this suite. @ 09/04/25 14:40:09.449
• [2.084 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:372
  STEP: Creating a kubernetes client @ 09/04/25 14:40:09.456
  I0904 14:40:09.456132 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename namespaces @ 09/04/25 14:40:09.456
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:40:09.466
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:40:09.467
  STEP: Updating Namespace "namespaces-2555" @ 09/04/25 14:40:09.469
  I0904 14:40:09.481834 23 namespace.go:389] Namespace "namespaces-2555" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"816bb44b-d3f9-461b-9a4b-e93592776709", "kubernetes.io/metadata.name":"namespaces-2555", "namespaces-2555":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  I0904 14:40:09.481900 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-2555" for this suite. @ 09/04/25 14:40:09.549
• [0.100 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:196
  STEP: Creating a kubernetes client @ 09/04/25 14:40:09.556
  I0904 14:40:09.556437 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/04/25 14:40:09.556
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:40:09.569
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:40:09.57
  I0904 14:40:09.572550 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 09/04/25 14:40:10.999
  I0904 14:40:10.999729 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=crd-publish-openapi-8202 --namespace=crd-publish-openapi-8202 create -f -'
  I0904 14:40:11.056269 23 builder.go:156] stderr: ""
  I0904 14:40:11.056300 23 builder.go:157] stdout: "e2e-test-crd-publish-openapi-8202-1849-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I0904 14:40:11.056345 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=crd-publish-openapi-8202 --namespace=crd-publish-openapi-8202 delete e2e-test-crd-publish-openapi-8202-1849-crds test-cr'
  I0904 14:40:11.097515 23 builder.go:156] stderr: ""
  I0904 14:40:11.097541 23 builder.go:157] stdout: "e2e-test-crd-publish-openapi-8202-1849-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted from crd-publish-openapi-8202 namespace\n"
  I0904 14:40:11.097575 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=crd-publish-openapi-8202 --namespace=crd-publish-openapi-8202 apply -f -'
  I0904 14:40:11.144296 23 builder.go:156] stderr: ""
  I0904 14:40:11.144354 23 builder.go:157] stdout: "e2e-test-crd-publish-openapi-8202-1849-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I0904 14:40:11.144382 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=crd-publish-openapi-8202 --namespace=crd-publish-openapi-8202 delete e2e-test-crd-publish-openapi-8202-1849-crds test-cr'
  I0904 14:40:11.186792 23 builder.go:156] stderr: ""
  I0904 14:40:11.186814 23 builder.go:157] stdout: "e2e-test-crd-publish-openapi-8202-1849-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted from crd-publish-openapi-8202 namespace\n"
  STEP: kubectl explain works to explain CR @ 09/04/25 14:40:11.186
  I0904 14:40:11.186868 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=crd-publish-openapi-8202 explain e2e-test-crd-publish-openapi-8202-1849-crds'
  I0904 14:40:11.218571 23 builder.go:156] stderr: ""
  I0904 14:40:11.218670 23 builder.go:157] stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-8202-1849-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  I0904 14:40:12.417709 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8202" for this suite. @ 09/04/25 14:40:12.422
• [2.871 seconds]
------------------------------
[sig-network] ServiceCIDR and IPAddress API should support IPAddress API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_cidrs.go:209
  STEP: Creating a kubernetes client @ 09/04/25 14:40:12.427
  I0904 14:40:12.427584 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename servicecidr @ 09/04/25 14:40:12.428
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:40:12.439
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:40:12.442
  STEP: creating @ 09/04/25 14:40:12.444
  STEP: patching @ 09/04/25 14:40:12.453
  STEP: updating @ 09/04/25 14:40:12.458
  STEP: getting @ 09/04/25 14:40:12.47
  STEP: listing @ 09/04/25 14:40:12.472
  STEP: watching @ 09/04/25 14:40:12.476
  STEP: deleting @ 09/04/25 14:40:12.478
  STEP: deleting a collection @ 09/04/25 14:40:12.484
  I0904 14:40:12.494637 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "servicecidr-5667" for this suite. @ 09/04/25 14:40:12.523
• [0.101 seconds]
------------------------------
SS
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:357
  STEP: Creating a kubernetes client @ 09/04/25 14:40:12.528
  I0904 14:40:12.528501 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename kubectl @ 09/04/25 14:40:12.528
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:40:12.541
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:40:12.543
  STEP: creating a replication controller @ 09/04/25 14:40:12.545
  I0904 14:40:12.545535 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=kubectl-2316 create -f -'
  I0904 14:40:12.626096 23 builder.go:156] stderr: ""
  I0904 14:40:12.626145 23 builder.go:157] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 09/04/25 14:40:12.626
  I0904 14:40:12.626224 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=kubectl-2316 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0904 14:40:12.660749 23 builder.go:156] stderr: ""
  I0904 14:40:12.660799 23 builder.go:157] stdout: ""
  STEP: Replicas for name=update-demo: expected=2 actual=0 @ 09/04/25 14:40:12.66
  I0904 14:40:17.661038 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=kubectl-2316 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0904 14:40:17.700979 23 builder.go:156] stderr: ""
  I0904 14:40:17.701041 23 builder.go:157] stdout: "update-demo-nautilus-kbdqg update-demo-nautilus-x6h56 "
  I0904 14:40:17.701188 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=kubectl-2316 get pods update-demo-nautilus-kbdqg -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0904 14:40:17.738232 23 builder.go:156] stderr: ""
  I0904 14:40:17.738264 23 builder.go:157] stdout: "true"
  I0904 14:40:17.738294 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=kubectl-2316 get pods update-demo-nautilus-kbdqg -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0904 14:40:17.773887 23 builder.go:156] stderr: ""
  I0904 14:40:17.773922 23 builder.go:157] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0904 14:40:17.773944 23 kubectl.go:2428] validating pod update-demo-nautilus-kbdqg
  I0904 14:40:17.780823 23 kubectl.go:2448] got data: {
    "image": "nautilus.jpg"
  }

  I0904 14:40:17.780932 23 kubectl.go:2453] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0904 14:40:17.780943 23 kubectl.go:2555] update-demo-nautilus-kbdqg is verified up and running
  I0904 14:40:17.780987 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=kubectl-2316 get pods update-demo-nautilus-x6h56 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0904 14:40:17.814379 23 builder.go:156] stderr: ""
  I0904 14:40:17.814441 23 builder.go:157] stdout: "true"
  I0904 14:40:17.814474 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=kubectl-2316 get pods update-demo-nautilus-x6h56 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0904 14:40:17.846245 23 builder.go:156] stderr: ""
  I0904 14:40:17.846301 23 builder.go:157] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0904 14:40:17.846311 23 kubectl.go:2428] validating pod update-demo-nautilus-x6h56
  I0904 14:40:17.855938 23 kubectl.go:2448] got data: {
    "image": "nautilus.jpg"
  }

  I0904 14:40:17.855974 23 kubectl.go:2453] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0904 14:40:17.855990 23 kubectl.go:2555] update-demo-nautilus-x6h56 is verified up and running
  STEP: using delete to clean up resources @ 09/04/25 14:40:17.856
  I0904 14:40:17.856051 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=kubectl-2316 delete --grace-period=0 --force -f -'
  I0904 14:40:17.896063 23 builder.go:156] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0904 14:40:17.896098 23 builder.go:157] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted from kubectl-2316 namespace\n"
  I0904 14:40:17.896130 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=kubectl-2316 get rc,svc -l name=update-demo --no-headers'
  I0904 14:40:17.951195 23 builder.go:156] stderr: "No resources found in kubectl-2316 namespace.\n"
  I0904 14:40:17.951233 23 builder.go:157] stdout: ""
  I0904 14:40:17.951299 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=kubectl-2316 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0904 14:40:17.992099 23 builder.go:156] stderr: ""
  I0904 14:40:17.992136 23 builder.go:157] stdout: ""
  I0904 14:40:17.992345 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2316" for this suite. @ 09/04/25 14:40:17.998
• [5.477 seconds]
------------------------------
SSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:809
  STEP: Creating a kubernetes client @ 09/04/25 14:40:18.005
  I0904 14:40:18.005321 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename statefulset @ 09/04/25 14:40:18.005
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:40:18.017
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:40:18.019
  STEP: Creating service test in namespace statefulset-5778 @ 09/04/25 14:40:18.021
  I0904 14:40:18.027377      23 warnings.go:110] "Warning: spec.SessionAffinity is ignored for headless services"
  STEP: Looking for a node to schedule stateful set and pod @ 09/04/25 14:40:18.027
  STEP: Creating pod with conflicting port in namespace statefulset-5778 @ 09/04/25 14:40:18.102
  STEP: Waiting until pod test-pod will start running in namespace statefulset-5778 @ 09/04/25 14:40:18.113
  STEP: Creating statefulset with conflicting port in namespace statefulset-5778 @ 09/04/25 14:40:22.125
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-5778 @ 09/04/25 14:40:22.131
  I0904 14:40:22.151093 23 statefulset.go:882] Observed stateful pod in namespace: statefulset-5778, name: ss-0, uid: 9afff250-d3ac-4c23-b527-d0c19aa79f14, status phase: Pending. Waiting for statefulset controller to delete.
  I0904 14:40:22.169103 23 statefulset.go:882] Observed stateful pod in namespace: statefulset-5778, name: ss-0, uid: 9afff250-d3ac-4c23-b527-d0c19aa79f14, status phase: Failed. Waiting for statefulset controller to delete.
  I0904 14:40:22.180022 23 statefulset.go:882] Observed stateful pod in namespace: statefulset-5778, name: ss-0, uid: 9afff250-d3ac-4c23-b527-d0c19aa79f14, status phase: Failed. Waiting for statefulset controller to delete.
  I0904 14:40:22.183345 23 statefulset.go:876] Observed delete event for stateful pod ss-0 in namespace statefulset-5778
  STEP: Removing pod with conflicting port in namespace statefulset-5778 @ 09/04/25 14:40:22.183
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-5778 and will be in running state @ 09/04/25 14:40:22.208
  I0904 14:40:24.216827 23 statefulset.go:136] Deleting all statefulset in ns statefulset-5778
  I0904 14:40:24.220282 23 rest.go:153] Scaling statefulset ss to 0
  I0904 14:40:34.239141 23 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0904 14:40:34.241950 23 rest.go:91] Deleting statefulset ss
  I0904 14:40:34.257673 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-5778" for this suite. @ 09/04/25 14:40:34.262
• [16.262 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 09/04/25 14:40:34.267
  I0904 14:40:34.267336 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename pods @ 09/04/25 14:40:34.267
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:40:34.279
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:40:34.281
  STEP: creating pod @ 09/04/25 14:40:34.284
  I0904 14:40:36.310122 23 pods.go:83] Pod pod-hostip-1cab4dde-8cad-495b-a70b-71e21c7be119 has hostIP: 172.31.33.202
  I0904 14:40:36.310220 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3730" for this suite. @ 09/04/25 14:40:36.312
• [2.054 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:432
  STEP: Creating a kubernetes client @ 09/04/25 14:40:36.321
  I0904 14:40:36.321167 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename proxy @ 09/04/25 14:40:36.321
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:40:36.33
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:40:36.332
  I0904 14:40:36.334708 23 proxy.go:439] Creating pod...
  I0904 14:40:38.355253 23 proxy.go:463] Creating service...
  I0904 14:40:38.366575 23 proxy.go:500] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3674/pods/agnhost/proxy?method=DELETE
  I0904 14:40:38.378331 23 proxy.go:582] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0904 14:40:38.378355 23 proxy.go:500] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3674/pods/agnhost/proxy?method=OPTIONS
  I0904 14:40:38.381499 23 proxy.go:582] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0904 14:40:38.381517 23 proxy.go:500] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3674/pods/agnhost/proxy?method=PATCH
  I0904 14:40:38.386438 23 proxy.go:582] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0904 14:40:38.386461 23 proxy.go:500] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3674/pods/agnhost/proxy?method=POST
  I0904 14:40:38.389975 23 proxy.go:582] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0904 14:40:38.389987 23 proxy.go:500] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3674/pods/agnhost/proxy?method=PUT
  I0904 14:40:38.393010 23 proxy.go:582] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0904 14:40:38.393022 23 proxy.go:511] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3674/services/e2e-proxy-test-service/proxy?method=DELETE
  I0904 14:40:38.398987 23 proxy.go:582] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0904 14:40:38.399019 23 proxy.go:511] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3674/services/e2e-proxy-test-service/proxy?method=OPTIONS
  I0904 14:40:38.404211 23 proxy.go:582] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0904 14:40:38.404225 23 proxy.go:511] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3674/services/e2e-proxy-test-service/proxy?method=PATCH
  I0904 14:40:38.410546 23 proxy.go:582] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0904 14:40:38.410579 23 proxy.go:511] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3674/services/e2e-proxy-test-service/proxy?method=POST
  I0904 14:40:38.416853 23 proxy.go:582] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0904 14:40:38.416887 23 proxy.go:511] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3674/services/e2e-proxy-test-service/proxy?method=PUT
  I0904 14:40:38.422855 23 proxy.go:582] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0904 14:40:38.422876 23 proxy.go:531] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3674/pods/agnhost/proxy?method=GET
  I0904 14:40:38.424702 23 proxy.go:539] http.Client request:GET StatusCode:301
  I0904 14:40:38.424717 23 proxy.go:531] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3674/services/e2e-proxy-test-service/proxy?method=GET
  I0904 14:40:38.431091 23 proxy.go:539] http.Client request:GET StatusCode:301
  I0904 14:40:38.431110 23 proxy.go:531] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3674/pods/agnhost/proxy?method=HEAD
  I0904 14:40:38.433650 23 proxy.go:539] http.Client request:HEAD StatusCode:301
  I0904 14:40:38.433665 23 proxy.go:531] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-3674/services/e2e-proxy-test-service/proxy?method=HEAD
  I0904 14:40:38.437083 23 proxy.go:539] http.Client request:HEAD StatusCode:301
  I0904 14:40:38.437177 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-3674" for this suite. @ 09/04/25 14:40:38.439
• [2.127 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:217
  STEP: Creating a kubernetes client @ 09/04/25 14:40:38.448
  I0904 14:40:38.448360 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename webhook @ 09/04/25 14:40:38.448
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:40:38.459
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:40:38.462
  STEP: Setting up server cert @ 09/04/25 14:40:38.482
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/04/25 14:40:38.893
  STEP: Deploying the webhook pod @ 09/04/25 14:40:38.9
  STEP: Wait for the deployment to be ready @ 09/04/25 14:40:38.912
  I0904 14:40:38.921382 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/04/25 14:40:40.934
  STEP: Verifying the service has paired with the endpoint @ 09/04/25 14:40:40.945
  I0904 14:40:41.946525 23 util.go:419] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0904 14:40:41.951391 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 09/04/25 14:40:42.458
  STEP: Creating a custom resource that should be denied by the webhook @ 09/04/25 14:40:42.471
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 09/04/25 14:40:44.483
  STEP: Updating the custom resource with disallowed data should be denied @ 09/04/25 14:40:44.493
  STEP: Deleting the custom resource should be denied @ 09/04/25 14:40:44.501
  STEP: Remove the offending key and value from the custom resource data @ 09/04/25 14:40:44.508
  STEP: Deleting the updated custom resource should be successful @ 09/04/25 14:40:44.518
  I0904 14:40:45.084581 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6703" for this suite. @ 09/04/25 14:40:45.088
  STEP: Destroying namespace "webhook-markers-1625" for this suite. @ 09/04/25 14:40:45.095
• [6.656 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:236
  STEP: Creating a kubernetes client @ 09/04/25 14:40:45.104
  I0904 14:40:45.104849 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename downward-api @ 09/04/25 14:40:45.105
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:40:45.118
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:40:45.12
  STEP: Creating a pod to test downward API volume plugin @ 09/04/25 14:40:45.122
  STEP: Saw pod success @ 09/04/25 14:40:49.147
  I0904 14:40:49.149690 23 output.go:207] Trying to get logs from node ip-172-31-33-202 pod downwardapi-volume-62feea97-d4fc-49ad-9e34-d30de8c100a5 container client-container: <nil>
  STEP: delete the pod @ 09/04/25 14:40:49.161
  I0904 14:40:49.179359 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7064" for this suite. @ 09/04/25 14:40:49.183
• [4.086 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:367
  STEP: Creating a kubernetes client @ 09/04/25 14:40:49.19
  I0904 14:40:49.190426 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename webhook @ 09/04/25 14:40:49.191
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:40:49.201
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:40:49.203
  STEP: Setting up server cert @ 09/04/25 14:40:49.22
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/04/25 14:40:49.415
  STEP: Deploying the webhook pod @ 09/04/25 14:40:49.424
  STEP: Wait for the deployment to be ready @ 09/04/25 14:40:49.439
  I0904 14:40:49.447087 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/04/25 14:40:51.459
  STEP: Verifying the service has paired with the endpoint @ 09/04/25 14:40:51.472
  I0904 14:40:52.472407 23 util.go:419] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 09/04/25 14:40:52.479
  STEP: Registering slow webhook via the AdmissionRegistration API @ 09/04/25 14:40:52.479
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 09/04/25 14:40:52.495
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 09/04/25 14:40:53.507
  STEP: Registering slow webhook via the AdmissionRegistration API @ 09/04/25 14:40:53.507
  STEP: Having no error when timeout is longer than webhook latency @ 09/04/25 14:40:54.537
  STEP: Registering slow webhook via the AdmissionRegistration API @ 09/04/25 14:40:54.537
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 09/04/25 14:40:59.57
  STEP: Registering slow webhook via the AdmissionRegistration API @ 09/04/25 14:40:59.57
  I0904 14:41:04.668285 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3522" for this suite. @ 09/04/25 14:41:04.671
  STEP: Destroying namespace "webhook-markers-8045" for this suite. @ 09/04/25 14:41:04.677
• [15.494 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 09/04/25 14:41:04.684
  I0904 14:41:04.684508 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename pods @ 09/04/25 14:41:04.684
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:41:04.703
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:41:04.706
  STEP: creating the pod @ 09/04/25 14:41:04.709
  STEP: setting up watch @ 09/04/25 14:41:04.709
  STEP: submitting the pod to kubernetes @ 09/04/25 14:41:04.82
  STEP: verifying the pod is in kubernetes @ 09/04/25 14:41:04.831
  STEP: verifying pod creation was observed @ 09/04/25 14:41:04.838
  STEP: deleting the pod gracefully @ 09/04/25 14:41:06.851
  STEP: verifying pod deletion was observed @ 09/04/25 14:41:06.859
  I0904 14:41:07.744373 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6349" for this suite. @ 09/04/25 14:41:07.748
• [3.069 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:174
  STEP: Creating a kubernetes client @ 09/04/25 14:41:07.753
  I0904 14:41:07.753426 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename crd-webhook @ 09/04/25 14:41:07.753
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:41:07.766
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:41:07.768
  STEP: Setting up server cert @ 09/04/25 14:41:07.77
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 09/04/25 14:41:07.952
  STEP: Deploying the custom resource conversion webhook pod @ 09/04/25 14:41:07.957
  STEP: Wait for the deployment to be ready @ 09/04/25 14:41:07.974
  I0904 14:41:07.981761 23 deployment.go:223] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/04/25 14:41:09.991
  STEP: Verifying the service has paired with the endpoint @ 09/04/25 14:41:10
  I0904 14:41:11.001711 23 util.go:419] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0904 14:41:11.007022 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Creating a v1 custom resource @ 09/04/25 14:41:13.559
  STEP: Create a v2 custom resource @ 09/04/25 14:41:13.575
  STEP: List CRs in v1 @ 09/04/25 14:41:13.596
  STEP: List CRs in v2 @ 09/04/25 14:41:13.6
  I0904 14:41:14.150134 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-6782" for this suite. @ 09/04/25 14:41:14.152
• [6.409 seconds]
------------------------------
S
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:219
  STEP: Creating a kubernetes client @ 09/04/25 14:41:14.162
  I0904 14:41:14.162664 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename emptydir @ 09/04/25 14:41:14.163
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:41:14.176
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:41:14.178
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 09/04/25 14:41:14.18
  STEP: Saw pod success @ 09/04/25 14:41:18.201
  I0904 14:41:18.205894 23 output.go:207] Trying to get logs from node ip-172-31-33-202 pod pod-b19eeb19-8858-45fe-a3b1-101113c45f92 container test-container: <nil>
  STEP: delete the pod @ 09/04/25 14:41:18.213
  I0904 14:41:18.235295 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3447" for this suite. @ 09/04/25 14:41:18.238
• [4.083 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:208
  STEP: Creating a kubernetes client @ 09/04/25 14:41:18.245
  I0904 14:41:18.245476 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename projected @ 09/04/25 14:41:18.245
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:41:18.257
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:41:18.258
  STEP: Creating a pod to test downward API volume plugin @ 09/04/25 14:41:18.26
  STEP: Saw pod success @ 09/04/25 14:41:22.283
  I0904 14:41:22.286565 23 output.go:207] Trying to get logs from node ip-172-31-33-202 pod downwardapi-volume-9f3556c3-f093-46f0-86b5-8d16660fec5c container client-container: <nil>
  STEP: delete the pod @ 09/04/25 14:41:22.291
  I0904 14:41:22.313032 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-57" for this suite. @ 09/04/25 14:41:22.316
• [4.075 seconds]
------------------------------
SS
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:96
  STEP: Creating a kubernetes client @ 09/04/25 14:41:22.32
  I0904 14:41:22.320690 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename secrets @ 09/04/25 14:41:22.321
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:41:22.332
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:41:22.334
  STEP: creating secret secrets-7371/secret-test-d8902a15-c559-4f0d-ba04-14f1573e98c1 @ 09/04/25 14:41:22.336
  STEP: Creating a pod to test consume secrets @ 09/04/25 14:41:22.339
  STEP: Saw pod success @ 09/04/25 14:41:26.361
  I0904 14:41:26.366401 23 output.go:207] Trying to get logs from node ip-172-31-33-202 pod pod-configmaps-76154aab-d118-4ac0-9d00-629f5ff193f1 container env-test: <nil>
  STEP: delete the pod @ 09/04/25 14:41:26.377
  I0904 14:41:26.393353 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7371" for this suite. @ 09/04/25 14:41:26.396
• [4.083 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:752
  STEP: Creating a kubernetes client @ 09/04/25 14:41:26.404
  I0904 14:41:26.404410 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename resourcequota @ 09/04/25 14:41:26.404
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:41:26.42
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:41:26.422
  STEP: Creating a ResourceQuota with terminating scope @ 09/04/25 14:41:26.426
  STEP: Ensuring ResourceQuota status is calculated @ 09/04/25 14:41:26.432
  I0904 14:41:26.441441 23 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc005e97cc0>: 
          metadata:
            creationTimestamp: "2025-09-04T14:41:26Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:limits.cpu: {}
                    f:limits.memory: {}
                    f:pods: {}
                    f:requests.cpu: {}
                    f:requests.memory: {}
                  f:scopes: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-04T14:41:26Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:limits.cpu: {}
                    f:limits.memory: {}
                    f:pods: {}
                    f:requests.cpu: {}
                    f:requests.memory: {}
                  f:used:
                    .: {}
                    f:limits.cpu: {}
                    f:limits.memory: {}
                    f:pods: {}
                    f:requests.cpu: {}
                    f:requests.memory: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-04T14:41:26Z"
            name: quota-terminating
            namespace: resourcequota-60
            resourceVersion: "6086"
            uid: 81668d08-40bb-4c96-817e-53364542a8fa
          spec:
            hard:
              limits.cpu: "2"
              limits.memory: 1Gi
              pods: "5"
              requests.cpu: "1"
              requests.memory: 500Mi
            scopes:
            - Terminating
          status:
            hard:
              limits.cpu: "2"
              limits.memory: 1Gi
              pods: "5"
              requests.cpu: "1"
              requests.memory: 500Mi
            used:
              limits.cpu: "0"
              limits.memory: "0"
              pods: "0"
              requests.cpu: "0"
              requests.memory: "0"
  STEP: Creating a ResourceQuota with not terminating scope @ 09/04/25 14:41:26.441
  STEP: Ensuring ResourceQuota status is calculated @ 09/04/25 14:41:26.445
  I0904 14:41:26.451786 23 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc005eb9180>: 
          metadata:
            creationTimestamp: "2025-09-04T14:41:26Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:limits.cpu: {}
                    f:limits.memory: {}
                    f:pods: {}
                    f:requests.cpu: {}
                    f:requests.memory: {}
                  f:scopes: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-04T14:41:26Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:limits.cpu: {}
                    f:limits.memory: {}
                    f:pods: {}
                    f:requests.cpu: {}
                    f:requests.memory: {}
                  f:used:
                    .: {}
                    f:limits.cpu: {}
                    f:limits.memory: {}
                    f:pods: {}
                    f:requests.cpu: {}
                    f:requests.memory: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-04T14:41:26Z"
            name: quota-not-terminating
            namespace: resourcequota-60
            resourceVersion: "6088"
            uid: 622a59e6-aeeb-4059-8948-55d9a3c3d4ea
          spec:
            hard:
              limits.cpu: "2"
              limits.memory: 1Gi
              pods: "5"
              requests.cpu: "1"
              requests.memory: 500Mi
            scopes:
            - NotTerminating
          status:
            hard:
              limits.cpu: "2"
              limits.memory: 1Gi
              pods: "5"
              requests.cpu: "1"
              requests.memory: 500Mi
            used:
              limits.cpu: "0"
              limits.memory: "0"
              pods: "0"
              requests.cpu: "0"
              requests.memory: "0"
  STEP: Creating a long running pod @ 09/04/25 14:41:26.451
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 09/04/25 14:41:26.467
  I0904 14:41:26.473455 23 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc005e47b80>: 
          metadata:
            creationTimestamp: "2025-09-04T14:41:26Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:limits.cpu: {}
                    f:limits.memory: {}
                    f:pods: {}
                    f:requests.cpu: {}
                    f:requests.memory: {}
                  f:scopes: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-04T14:41:26Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:used:
                    f:limits.cpu: {}
                    f:limits.memory: {}
                    f:pods: {}
                    f:requests.cpu: {}
                    f:requests.memory: {}
              manager: kube-apiserver
              operation: Update
              subresource: status
              time: "2025-09-04T14:41:26Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:limits.cpu: {}
                    f:limits.memory: {}
                    f:pods: {}
                    f:requests.cpu: {}
                    f:requests.memory: {}
                  f:used: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-04T14:41:26Z"
            name: quota-not-terminating
            namespace: resourcequota-60
            resourceVersion: "6089"
            uid: 622a59e6-aeeb-4059-8948-55d9a3c3d4ea
          spec:
            hard:
              limits.cpu: "2"
              limits.memory: 1Gi
              pods: "5"
              requests.cpu: "1"
              requests.memory: 500Mi
            scopes:
            - NotTerminating
          status:
            hard:
              limits.cpu: "2"
              limits.memory: 1Gi
              pods: "5"
              requests.cpu: "1"
              requests.memory: 500Mi
            used:
              limits.cpu: "1"
              limits.memory: 400Mi
              pods: "1"
              requests.cpu: 500m
              requests.memory: 200Mi
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 09/04/25 14:41:26.473
  STEP: Deleting the pod @ 09/04/25 14:41:36.474
  STEP: Ensuring resource quota status released the pod usage @ 09/04/25 14:41:36.493
  I0904 14:41:36.498452 23 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc003001180>: 
          metadata:
            creationTimestamp: "2025-09-04T14:41:26Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:limits.cpu: {}
                    f:limits.memory: {}
                    f:pods: {}
                    f:requests.cpu: {}
                    f:requests.memory: {}
                  f:scopes: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-04T14:41:26Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:limits.cpu: {}
                    f:limits.memory: {}
                    f:pods: {}
                    f:requests.cpu: {}
                    f:requests.memory: {}
                  f:used:
                    .: {}
                    f:limits.cpu: {}
                    f:limits.memory: {}
                    f:pods: {}
                    f:requests.cpu: {}
                    f:requests.memory: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-04T14:41:36Z"
            name: quota-not-terminating
            namespace: resourcequota-60
            resourceVersion: "6134"
            uid: 622a59e6-aeeb-4059-8948-55d9a3c3d4ea
          spec:
            hard:
              limits.cpu: "2"
              limits.memory: 1Gi
              pods: "5"
              requests.cpu: "1"
              requests.memory: 500Mi
            scopes:
            - NotTerminating
          status:
            hard:
              limits.cpu: "2"
              limits.memory: 1Gi
              pods: "5"
              requests.cpu: "1"
              requests.memory: 500Mi
            used:
              limits.cpu: "0"
              limits.memory: "0"
              pods: "0"
              requests.cpu: "0"
              requests.memory: "0"
  STEP: Creating a terminating pod @ 09/04/25 14:41:36.498
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 09/04/25 14:41:36.508
  I0904 14:41:36.511933 23 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc003066280>: 
          metadata:
            creationTimestamp: "2025-09-04T14:41:26Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:limits.cpu: {}
                    f:limits.memory: {}
                    f:pods: {}
                    f:requests.cpu: {}
                    f:requests.memory: {}
                  f:scopes: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-04T14:41:26Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:limits.cpu: {}
                    f:limits.memory: {}
                    f:pods: {}
                    f:requests.cpu: {}
                    f:requests.memory: {}
                  f:used: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-04T14:41:26Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:used:
                    f:limits.cpu: {}
                    f:limits.memory: {}
                    f:pods: {}
                    f:requests.cpu: {}
                    f:requests.memory: {}
              manager: kube-apiserver
              operation: Update
              subresource: status
              time: "2025-09-04T14:41:36Z"
            name: quota-terminating
            namespace: resourcequota-60
            resourceVersion: "6136"
            uid: 81668d08-40bb-4c96-817e-53364542a8fa
          spec:
            hard:
              limits.cpu: "2"
              limits.memory: 1Gi
              pods: "5"
              requests.cpu: "1"
              requests.memory: 500Mi
            scopes:
            - Terminating
          status:
            hard:
              limits.cpu: "2"
              limits.memory: 1Gi
              pods: "5"
              requests.cpu: "1"
              requests.memory: 500Mi
            used:
              limits.cpu: "1"
              limits.memory: 400Mi
              pods: "1"
              requests.cpu: 500m
              requests.memory: 200Mi
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 09/04/25 14:41:36.512
  I0904 14:41:36.517471 23 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc005eb8640>: 
          metadata:
            creationTimestamp: "2025-09-04T14:41:26Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:limits.cpu: {}
                    f:limits.memory: {}
                    f:pods: {}
                    f:requests.cpu: {}
                    f:requests.memory: {}
                  f:scopes: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-04T14:41:26Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:limits.cpu: {}
                    f:limits.memory: {}
                    f:pods: {}
                    f:requests.cpu: {}
                    f:requests.memory: {}
                  f:used:
                    .: {}
                    f:limits.cpu: {}
                    f:limits.memory: {}
                    f:pods: {}
                    f:requests.cpu: {}
                    f:requests.memory: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-04T14:41:36Z"
            name: quota-not-terminating
            namespace: resourcequota-60
            resourceVersion: "6134"
            uid: 622a59e6-aeeb-4059-8948-55d9a3c3d4ea
          spec:
            hard:
              limits.cpu: "2"
              limits.memory: 1Gi
              pods: "5"
              requests.cpu: "1"
              requests.memory: 500Mi
            scopes:
            - NotTerminating
          status:
            hard:
              limits.cpu: "2"
              limits.memory: 1Gi
              pods: "5"
              requests.cpu: "1"
              requests.memory: 500Mi
            used:
              limits.cpu: "0"
              limits.memory: "0"
              pods: "0"
              requests.cpu: "0"
              requests.memory: "0"
  STEP: Deleting the pod @ 09/04/25 14:41:46.517
  STEP: Ensuring resource quota status released the pod usage @ 09/04/25 14:41:46.539
  I0904 14:41:46.544363 23 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc005eb9540>: 
          metadata:
            creationTimestamp: "2025-09-04T14:41:26Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:limits.cpu: {}
                    f:limits.memory: {}
                    f:pods: {}
                    f:requests.cpu: {}
                    f:requests.memory: {}
                  f:scopes: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-04T14:41:26Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:limits.cpu: {}
                    f:limits.memory: {}
                    f:pods: {}
                    f:requests.cpu: {}
                    f:requests.memory: {}
                  f:used:
                    .: {}
                    f:limits.cpu: {}
                    f:limits.memory: {}
                    f:pods: {}
                    f:requests.cpu: {}
                    f:requests.memory: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-04T14:41:46Z"
            name: quota-terminating
            namespace: resourcequota-60
            resourceVersion: "6162"
            uid: 81668d08-40bb-4c96-817e-53364542a8fa
          spec:
            hard:
              limits.cpu: "2"
              limits.memory: 1Gi
              pods: "5"
              requests.cpu: "1"
              requests.memory: 500Mi
            scopes:
            - Terminating
          status:
            hard:
              limits.cpu: "2"
              limits.memory: 1Gi
              pods: "5"
              requests.cpu: "1"
              requests.memory: 500Mi
            used:
              limits.cpu: "0"
              limits.memory: "0"
              pods: "0"
              requests.cpu: "0"
              requests.memory: "0"
  I0904 14:41:46.544501 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-60" for this suite. @ 09/04/25 14:41:46.547
• [20.149 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:109
  STEP: Creating a kubernetes client @ 09/04/25 14:41:46.553
  I0904 14:41:46.553339 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename projected @ 09/04/25 14:41:46.553
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:41:46.564
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:41:46.566
  STEP: Creating configMap with name projected-configmap-test-volume-map-203dcac5-dfed-4a02-98cc-79ad219a70eb @ 09/04/25 14:41:46.569
  STEP: Creating a pod to test consume configMaps @ 09/04/25 14:41:46.574
  STEP: Saw pod success @ 09/04/25 14:41:50.591
  I0904 14:41:50.593663 23 output.go:207] Trying to get logs from node ip-172-31-33-202 pod pod-projected-configmaps-10260832-c625-4b26-ba20-576e9e0fa687 container agnhost-container: <nil>
  STEP: delete the pod @ 09/04/25 14:41:50.603
  I0904 14:41:50.619356 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2432" for this suite. @ 09/04/25 14:41:50.622
• [4.075 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:445
  STEP: Creating a kubernetes client @ 09/04/25 14:41:50.628
  I0904 14:41:50.628087 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename sched-pred @ 09/04/25 14:41:50.628
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:41:50.64
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:41:50.641
  I0904 14:41:50.643794 23 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0904 14:41:50.727888 23 util.go:390] Waiting for terminating namespaces to be deleted...
  I0904 14:41:50.730800 23 predicates.go:120] 
  Logging pods the apiserver thinks is on node ip-172-31-18-79 before test
  I0904 14:41:50.736344 23 predicates.go:958] nginx-ingress-controller-kubernetes-worker-th9mz from ingress-nginx-kubernetes-worker started at 2025-09-04 14:25:59 +0000 UTC (1 container statuses recorded)
  I0904 14:41:50.736359 23 predicates.go:960] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0904 14:41:50.736365 23 predicates.go:958] calico-node-hnfqw from kube-system started at 2025-09-04 14:35:51 +0000 UTC (1 container statuses recorded)
  I0904 14:41:50.736369 23 predicates.go:960] 	Container calico-node ready: true, restart count 0
  I0904 14:41:50.736374 23 predicates.go:958] sonobuoy-e2e-job-9fbf261a650c4889 from sonobuoy started at 2025-09-04 14:37:48 +0000 UTC (2 container statuses recorded)
  I0904 14:41:50.736377 23 predicates.go:960] 	Container e2e ready: true, restart count 0
  I0904 14:41:50.736381 23 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0904 14:41:50.736385 23 predicates.go:958] sonobuoy-systemd-logs-daemon-set-56e1dcee030f40d6-xkq28 from sonobuoy started at 2025-09-04 14:37:48 +0000 UTC (2 container statuses recorded)
  I0904 14:41:50.736389 23 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0904 14:41:50.736392 23 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  I0904 14:41:50.736397 23 predicates.go:120] 
  Logging pods the apiserver thinks is on node ip-172-31-33-202 before test
  I0904 14:41:50.739325 23 predicates.go:958] nginx-ingress-controller-kubernetes-worker-xbqvp from ingress-nginx-kubernetes-worker started at 2025-09-04 14:31:13 +0000 UTC (1 container statuses recorded)
  I0904 14:41:50.739337 23 predicates.go:960] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0904 14:41:50.739342 23 predicates.go:958] calico-node-q8qbr from kube-system started at 2025-09-04 14:33:35 +0000 UTC (1 container statuses recorded)
  I0904 14:41:50.739346 23 predicates.go:960] 	Container calico-node ready: true, restart count 0
  I0904 14:41:50.739350 23 predicates.go:958] sonobuoy from sonobuoy started at 2025-09-04 14:37:46 +0000 UTC (1 container statuses recorded)
  I0904 14:41:50.739353 23 predicates.go:960] 	Container kube-sonobuoy ready: true, restart count 0
  I0904 14:41:50.739358 23 predicates.go:958] sonobuoy-systemd-logs-daemon-set-56e1dcee030f40d6-sq6h5 from sonobuoy started at 2025-09-04 14:37:48 +0000 UTC (2 container statuses recorded)
  I0904 14:41:50.739362 23 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0904 14:41:50.739366 23 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  I0904 14:41:50.739371 23 predicates.go:120] 
  Logging pods the apiserver thinks is on node ip-172-31-87-111 before test
  I0904 14:41:50.741650 23 predicates.go:958] nginx-ingress-controller-kubernetes-worker-thhq5 from ingress-nginx-kubernetes-worker started at 2025-09-04 14:21:14 +0000 UTC (1 container statuses recorded)
  I0904 14:41:50.741662 23 predicates.go:960] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0904 14:41:50.741667 23 predicates.go:958] calico-node-z98vv from kube-system started at 2025-09-04 14:34:13 +0000 UTC (1 container statuses recorded)
  I0904 14:41:50.741672 23 predicates.go:960] 	Container calico-node ready: true, restart count 0
  I0904 14:41:50.741676 23 predicates.go:958] coredns-6bb7467dc9-q25dk from kube-system started at 2025-09-04 14:21:14 +0000 UTC (1 container statuses recorded)
  I0904 14:41:50.741680 23 predicates.go:960] 	Container coredns ready: true, restart count 0
  I0904 14:41:50.741684 23 predicates.go:958] kube-state-metrics-67d58dfcdd-wb9tq from kube-system started at 2025-09-04 14:21:14 +0000 UTC (1 container statuses recorded)
  I0904 14:41:50.741688 23 predicates.go:960] 	Container kube-state-metrics ready: true, restart count 2
  I0904 14:41:50.741692 23 predicates.go:958] metrics-server-v0.7.2-847d5645c8-dxxpg from kube-system started at 2025-09-04 14:21:14 +0000 UTC (2 container statuses recorded)
  I0904 14:41:50.741699 23 predicates.go:960] 	Container metrics-server ready: true, restart count 0
  I0904 14:41:50.741704 23 predicates.go:960] 	Container metrics-server-nanny ready: true, restart count 0
  I0904 14:41:50.741708 23 predicates.go:958] dashboard-metrics-scraper-55dc6fc9df-bxgsr from kubernetes-dashboard started at 2025-09-04 14:21:14 +0000 UTC (1 container statuses recorded)
  I0904 14:41:50.741744 23 predicates.go:960] 	Container dashboard-metrics-scraper ready: true, restart count 0
  I0904 14:41:50.741757 23 predicates.go:958] kubernetes-dashboard-847cf64d65-kmws8 from kubernetes-dashboard started at 2025-09-04 14:21:14 +0000 UTC (1 container statuses recorded)
  I0904 14:41:50.741765 23 predicates.go:960] 	Container kubernetes-dashboard ready: true, restart count 3
  I0904 14:41:50.741769 23 predicates.go:958] sonobuoy-systemd-logs-daemon-set-56e1dcee030f40d6-zthcb from sonobuoy started at 2025-09-04 14:37:48 +0000 UTC (2 container statuses recorded)
  I0904 14:41:50.741772 23 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0904 14:41:50.741776 23 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 09/04/25 14:41:50.741
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.18621b61a14b4958], Reason = [FailedScheduling], Message = [0/5 nodes are available: 2 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 3 node(s) didn't match Pod's node affinity/selector. no new claims to deallocate, preemption: 0/5 nodes are available: 5 Preemption is not helpful for scheduling.] @ 09/04/25 14:41:50.768
  I0904 14:41:51.766356 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-2939" for this suite. @ 09/04/25 14:41:51.772
• [1.151 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:488
  STEP: Creating a kubernetes client @ 09/04/25 14:41:51.778
  I0904 14:41:51.778973 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename deployment @ 09/04/25 14:41:51.779
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:41:51.791
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:41:51.793
  STEP: creating a Deployment @ 09/04/25 14:41:51.798
  I0904 14:41:51.798581 23 deployment.go:506] Creating simple deployment test-deployment-nfktz
  I0904 14:41:51.813145 23 deployment.go:223] deployment "test-deployment-nfktz" doesn't have the required revision set
  I0904 14:41:53.824262 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 4, 14, 41, 51, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 4, 14, 41, 51, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 4, 14, 41, 51, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 4, 14, 41, 51, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-deployment-nfktz-6dcdd4444f\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Getting /status @ 09/04/25 14:41:55.828
  I0904 14:41:55.833348 23 deployment.go:531] Deployment test-deployment-nfktz has Conditions: [{Available True 2025-09-04 14:41:54 +0000 UTC 2025-09-04 14:41:54 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2025-09-04 14:41:54 +0000 UTC 2025-09-04 14:41:51 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-nfktz-6dcdd4444f" has successfully progressed.}]
  STEP: updating Deployment Status @ 09/04/25 14:41:55.833
  I0904 14:41:55.839654 23 deployment.go:551] updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.September, 4, 14, 41, 54, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 4, 14, 41, 54, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 4, 14, 41, 54, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 4, 14, 41, 51, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-nfktz-6dcdd4444f\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 09/04/25 14:41:55.839
  I0904 14:41:55.841048 23 deployment.go:578] Observed &Deployment event: ADDED
  I0904 14:41:55.841080 23 deployment.go:574] Observed Deployment test-deployment-nfktz in namespace deployment-670 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-09-04 14:41:51 +0000 UTC 2025-09-04 14:41:51 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-nfktz-6dcdd4444f"}
  I0904 14:41:55.841174 23 deployment.go:578] Observed &Deployment event: MODIFIED
  I0904 14:41:55.841193 23 deployment.go:574] Observed Deployment test-deployment-nfktz in namespace deployment-670 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-09-04 14:41:51 +0000 UTC 2025-09-04 14:41:51 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-nfktz-6dcdd4444f"}
  I0904 14:41:55.841201 23 deployment.go:574] Observed Deployment test-deployment-nfktz in namespace deployment-670 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-09-04 14:41:51 +0000 UTC 2025-09-04 14:41:51 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0904 14:41:55.841301 23 deployment.go:578] Observed &Deployment event: MODIFIED
  I0904 14:41:55.841318 23 deployment.go:574] Observed Deployment test-deployment-nfktz in namespace deployment-670 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-09-04 14:41:51 +0000 UTC 2025-09-04 14:41:51 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0904 14:41:55.841327 23 deployment.go:574] Observed Deployment test-deployment-nfktz in namespace deployment-670 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-09-04 14:41:51 +0000 UTC 2025-09-04 14:41:51 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-nfktz-6dcdd4444f" is progressing.}
  I0904 14:41:55.841399 23 deployment.go:578] Observed &Deployment event: MODIFIED
  I0904 14:41:55.841411 23 deployment.go:574] Observed Deployment test-deployment-nfktz in namespace deployment-670 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-09-04 14:41:54 +0000 UTC 2025-09-04 14:41:54 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0904 14:41:55.841420 23 deployment.go:574] Observed Deployment test-deployment-nfktz in namespace deployment-670 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-09-04 14:41:54 +0000 UTC 2025-09-04 14:41:51 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-nfktz-6dcdd4444f" has successfully progressed.}
  I0904 14:41:55.841473 23 deployment.go:578] Observed &Deployment event: MODIFIED
  I0904 14:41:55.841487 23 deployment.go:574] Observed Deployment test-deployment-nfktz in namespace deployment-670 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-09-04 14:41:54 +0000 UTC 2025-09-04 14:41:54 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0904 14:41:55.841494 23 deployment.go:574] Observed Deployment test-deployment-nfktz in namespace deployment-670 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-09-04 14:41:54 +0000 UTC 2025-09-04 14:41:51 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-nfktz-6dcdd4444f" has successfully progressed.}
  I0904 14:41:55.841502 23 deployment.go:571] Found Deployment test-deployment-nfktz in namespace deployment-670 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0904 14:41:55.841510 23 deployment.go:582] Deployment test-deployment-nfktz has an updated status
  STEP: patching the Statefulset Status @ 09/04/25 14:41:55.841
  I0904 14:41:55.841550 23 deployment.go:586] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0904 14:41:55.850647 23 deployment.go:590] Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 09/04/25 14:41:55.85
  I0904 14:41:55.851810 23 deployment.go:615] Observed &Deployment event: ADDED
  I0904 14:41:55.851829 23 deployment.go:611] Observed deployment test-deployment-nfktz in namespace deployment-670 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-09-04 14:41:51 +0000 UTC 2025-09-04 14:41:51 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-nfktz-6dcdd4444f"}
  I0904 14:41:55.851880 23 deployment.go:615] Observed &Deployment event: MODIFIED
  I0904 14:41:55.851892 23 deployment.go:611] Observed deployment test-deployment-nfktz in namespace deployment-670 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-09-04 14:41:51 +0000 UTC 2025-09-04 14:41:51 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-nfktz-6dcdd4444f"}
  I0904 14:41:55.851901 23 deployment.go:611] Observed deployment test-deployment-nfktz in namespace deployment-670 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-09-04 14:41:51 +0000 UTC 2025-09-04 14:41:51 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0904 14:41:55.851957 23 deployment.go:615] Observed &Deployment event: MODIFIED
  I0904 14:41:55.852018 23 deployment.go:611] Observed deployment test-deployment-nfktz in namespace deployment-670 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2025-09-04 14:41:51 +0000 UTC 2025-09-04 14:41:51 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0904 14:41:55.852028 23 deployment.go:611] Observed deployment test-deployment-nfktz in namespace deployment-670 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-09-04 14:41:51 +0000 UTC 2025-09-04 14:41:51 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-nfktz-6dcdd4444f" is progressing.}
  I0904 14:41:55.852078 23 deployment.go:615] Observed &Deployment event: MODIFIED
  I0904 14:41:55.852090 23 deployment.go:611] Observed deployment test-deployment-nfktz in namespace deployment-670 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-09-04 14:41:54 +0000 UTC 2025-09-04 14:41:54 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0904 14:41:55.852096 23 deployment.go:611] Observed deployment test-deployment-nfktz in namespace deployment-670 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-09-04 14:41:54 +0000 UTC 2025-09-04 14:41:51 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-nfktz-6dcdd4444f" has successfully progressed.}
  I0904 14:41:55.852151 23 deployment.go:615] Observed &Deployment event: MODIFIED
  I0904 14:41:55.852163 23 deployment.go:611] Observed deployment test-deployment-nfktz in namespace deployment-670 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2025-09-04 14:41:54 +0000 UTC 2025-09-04 14:41:54 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0904 14:41:55.852171 23 deployment.go:611] Observed deployment test-deployment-nfktz in namespace deployment-670 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2025-09-04 14:41:54 +0000 UTC 2025-09-04 14:41:51 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-nfktz-6dcdd4444f" has successfully progressed.}
  I0904 14:41:55.852179 23 deployment.go:611] Observed deployment test-deployment-nfktz in namespace deployment-670 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0904 14:41:55.852231 23 deployment.go:615] Observed &Deployment event: MODIFIED
  I0904 14:41:55.852283 23 deployment.go:608] Found deployment test-deployment-nfktz in namespace deployment-670 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  I0904 14:41:55.852293 23 deployment.go:619] Deployment test-deployment-nfktz has a patched status
  I0904 14:41:55.857079 23 deployment.go:632] Deployment "test-deployment-nfktz":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-nfktz",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-670",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "52c4c8f4-2093-4ba5-9485-ded037b06660",
      ResourceVersion: (string) (len=4) "6262",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892593711,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892593711,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892593714,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=224) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |ions":{},"f:obse|
              00000090  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              000000a0  7b 7d 2c 22 66 3a 72 65  61 64 79 52 65 70 6c 69  |{},"f:readyRepli|
              000000b0  63 61 73 22 3a 7b 7d 2c  22 66 3a 72 65 70 6c 69  |cas":{},"f:repli|
              000000c0  63 61 73 22 3a 7b 7d 2c  22 66 3a 75 70 64 61 74  |cas":{},"f:updat|
              000000d0  65 64 52 65 70 6c 69 63  61 73 22 3a 7b 7d 7d 7d  |edReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892593715,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=3) "e2e": (string) (len=7) "testing"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=3) "e2e": (string) (len=7) "testing"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          HostnameOverride: (*string)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=1) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0904 14:41:55.860527 23 deployment.go:40] New ReplicaSet "test-deployment-nfktz-6dcdd4444f" of Deployment "test-deployment-nfktz":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-nfktz-6dcdd4444f",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-670",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "41728bba-0def-434a-806b-6a7c2a91a3dd",
      ResourceVersion: (string) (len=4) "6249",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892593711,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6dcdd4444f",
        (string) (len=3) "e2e": (string) (len=7) "testing"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-nfktz",
          UID: (types.UID) (len=36) "52c4c8f4-2093-4ba5-9485-ded037b06660",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892593711,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 35 32 63  |k:{\"uid\":\"52c|
              00000120  34 63 38 66 34 2d 32 30  39 33 2d 34 62 61 35 2d  |4c8f4-2093-4ba5-|
              00000130  39 34 38 35 2d 64 65 64  30 33 37 62 30 36 36 36  |9485-ded037b0666|
              00000140  30 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |0\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892593714,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6dcdd4444f"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6dcdd4444f"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          HostnameOverride: (*string)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0904 14:41:55.865370 23 deployment.go:68] Pod "test-deployment-nfktz-6dcdd4444f-mcvwf" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=38) "test-deployment-nfktz-6dcdd4444f-mcvwf",
      GenerateName: (string) (len=33) "test-deployment-nfktz-6dcdd4444f-",
      Namespace: (string) (len=14) "deployment-670",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d2fcaa4c-d03f-4bbc-a3bc-13e614f7ae28",
      ResourceVersion: (string) (len=4) "6248",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892593711,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6dcdd4444f",
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=32) "test-deployment-nfktz-6dcdd4444f",
          UID: (types.UID) (len=36) "41728bba-0def-434a-806b-6a7c2a91a3dd",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892593711,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 34 31 37 32 38 62 62  61 2d 30 64 65 66 2d 34  |"41728bba-0def-4|
              000000a0  33 34 61 2d 38 30 36 62  2d 36 61 37 63 32 61 39  |34a-806b-6a7c2a9|
              000000b0  31 61 33 64 64 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |1a3dd\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892593714,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=853) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6f 62 73 65 72 76  |me":{},"f:observ|
              00000080  65 64 47 65 6e 65 72 61  74 69 6f 6e 22 3a 7b 7d  |edGeneration":{}|
              00000090  2c 22 66 3a 73 74 61 74  75 73 22 3a 7b 7d 2c 22  |,"f:status":{},"|
              000000a0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |f:type":{}},"k:{|
              000000b0  5c 22 74 79 70 65 5c 22  3a 5c 22 49 6e 69 74 69  |\"type\":\"Initi|
              000000c0  61 6c 69 7a 65 64 5c 22  7d 22 3a 7b 22 2e 22 3a  |alized\"}":{".":|
              000000d0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000000f0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              00000100  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000110  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000120  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000130  65 22 3a 7b 7d 7d 2c 22  6b 3a 7b 5c 22 74 79 70  |e":{}},"k:{\"typ|
              00000140  65 5c 22 3a 5c 22 50 6f  64 52 65 61 64 79 54 6f  |e\":\"PodReadyTo|
              00000150  53 74 61 72 74 43 6f 6e  74 61 69 6e 65 72 73 5c  |StartContainers\|
              00000160  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 6c  |"}":{".":{},"f:l|
              00000170  61 73 74 50 72 6f 62 65  54 69 6d 65 22 3a 7b 7d  |astProbeTime":{}|
              00000180  2c 22 66 3a 6c 61 73 74  54 72 61 6e 73 69 74 69  |,"f:lastTransiti|
              00000190  6f 6e 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6f 62  |onTime":{},"f:ob|
              000001a0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001b0  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              000001c0  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000001d0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              000001e0  6f 64 53 63 68 65 64 75  6c 65 64 5c 22 7d 22 3a  |odScheduled\"}":|
              000001f0  7b 22 66 3a 6f 62 73 65  72 76 65 64 47 65 6e 65  |{"f:observedGene|
              00000200  72 61 74 69 6f 6e 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |ration":{}},"k:{|
              00000210  5c 22 74 79 70 65 5c 22  3a 5c 22 52 65 61 64 79  |\"type\":\"Ready|
              00000220  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000230  6c 61 73 74 50 72 6f 62  65 54 69 6d 65 22 3a 7b  |lastProbeTime":{|
              00000240  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000250  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6f  |ionTime":{},"f:o|
              00000260  62 73 65 72 76 65 64 47  65 6e 65 72 61 74 69 6f  |bservedGeneratio|
              00000270  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000280  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000290  7d 2c 22 66 3a 63 6f 6e  74 61 69 6e 65 72 53 74  |},"f:containerSt|
              000002a0  61 74 75 73 65 73 22 3a  7b 7d 2c 22 66 3a 68 6f  |atuses":{},"f:ho|
              000002b0  73 74 49 50 22 3a 7b 7d  2c 22 66 3a 68 6f 73 74  |stIP":{},"f:host|
              000002c0  49 50 73 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |IPs":{},"f:obser|
              000002d0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002e0  7d 2c 22 66 3a 70 68 61  73 65 22 3a 7b 7d 2c 22  |},"f:phase":{},"|
              000002f0  66 3a 70 6f 64 49 50 22  3a 7b 7d 2c 22 66 3a 70  |f:podIP":{},"f:p|
              00000300  6f 64 49 50 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |odIPs":{".":{},"|
              00000310  6b 3a 7b 5c 22 69 70 5c  22 3a 5c 22 31 39 32 2e  |k:{\"ip\":\"192.|
              00000320  31 36 38 2e 31 30 39 2e  39 30 5c 22 7d 22 3a 7b  |168.109.90\"}":{|
              00000330  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000340  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000350  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-pt8tf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-pt8tf",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-33-202",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892593714,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892593711,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892593714,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892593714,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892593711,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.33.202",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.33.202"
        }
      },
      PodIP: (string) (len=14) "192.168.109.90",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.109.90"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892593711,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63892593713,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://d4d04fbcd2f79d0f0f5001a2144db08bb91dc2150de03a291b8ba7b455604620",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-pt8tf",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0904 14:41:55.866269 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-670" for this suite. @ 09/04/25 14:41:55.869
• [4.095 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 09/04/25 14:41:55.874
  I0904 14:41:55.874226 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename certificates @ 09/04/25 14:41:55.874
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:41:55.888
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:41:55.89
  STEP: getting /apis @ 09/04/25 14:41:56.245
  STEP: getting /apis/certificates.k8s.io @ 09/04/25 14:41:56.247
  STEP: getting /apis/certificates.k8s.io/v1 @ 09/04/25 14:41:56.248
  STEP: creating @ 09/04/25 14:41:56.249
  STEP: getting @ 09/04/25 14:41:56.266
  STEP: listing @ 09/04/25 14:41:56.268
  STEP: watching @ 09/04/25 14:41:56.27
  I0904 14:41:56.270558 23 certificates.go:316] starting watch
  STEP: patching @ 09/04/25 14:41:56.271
  STEP: updating @ 09/04/25 14:41:56.279
  I0904 14:41:56.284684 23 certificates.go:332] waiting for watch events with expected annotations
  I0904 14:41:56.284708 23 certificates.go:345] saw patched and updated annotations
  STEP: getting /approval @ 09/04/25 14:41:56.284
  STEP: patching /approval @ 09/04/25 14:41:56.286
  STEP: updating /approval @ 09/04/25 14:41:56.294
  STEP: getting /status @ 09/04/25 14:41:56.299
  STEP: patching /status @ 09/04/25 14:41:56.301
  STEP: updating /status @ 09/04/25 14:41:56.311
  STEP: deleting @ 09/04/25 14:41:56.317
  STEP: deleting a collection @ 09/04/25 14:41:56.327
  I0904 14:41:56.346151 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-6429" for this suite. @ 09/04/25 14:41:56.348
• [0.483 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:52
  STEP: Creating a kubernetes client @ 09/04/25 14:41:56.357
  I0904 14:41:56.357023 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename kubelet-test @ 09/04/25 14:41:56.357
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:41:56.368
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:41:56.37
  I0904 14:41:58.406969 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-294" for this suite. @ 09/04/25 14:41:58.41
• [2.060 seconds]
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 09/04/25 14:41:58.417
  I0904 14:41:58.417263 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename watch @ 09/04/25 14:41:58.417
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:41:58.431
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:41:58.433
  STEP: creating a watch on configmaps @ 09/04/25 14:41:58.435
  STEP: creating a new configmap @ 09/04/25 14:41:58.438
  STEP: modifying the configmap once @ 09/04/25 14:41:58.443
  STEP: closing the watch once it receives two notifications @ 09/04/25 14:41:58.449
  I0904 14:41:58.449974 23 watch.go:426] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-5066  bc929460-2ef9-430e-8a94-9f2f5e64443f 6328 0 2025-09-04 14:41:58 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-09-04 14:41:58 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0904 14:41:58.450415 23 watch.go:426] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-5066  bc929460-2ef9-430e-8a94-9f2f5e64443f 6329 0 2025-09-04 14:41:58 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-09-04 14:41:58 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 09/04/25 14:41:58.45
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 09/04/25 14:41:58.458
  STEP: deleting the configmap @ 09/04/25 14:41:58.459
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 09/04/25 14:41:58.465
  I0904 14:41:58.465810 23 watch.go:426] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-5066  bc929460-2ef9-430e-8a94-9f2f5e64443f 6330 0 2025-09-04 14:41:58 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-09-04 14:41:58 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0904 14:41:58.465884 23 watch.go:426] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-5066  bc929460-2ef9-430e-8a94-9f2f5e64443f 6331 0 2025-09-04 14:41:58 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2025-09-04 14:41:58 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0904 14:41:58.465950 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-5066" for this suite. @ 09/04/25 14:41:58.511
• [0.099 seconds]
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 09/04/25 14:41:58.516
  I0904 14:41:58.516238 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename init-container @ 09/04/25 14:41:58.516
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:41:58.529
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:41:58.531
  STEP: creating the pod @ 09/04/25 14:41:58.533
  I0904 14:41:58.533634 23 init_container.go:499] PodSpec: initContainers in spec.initContainers
  I0904 14:42:02.021427 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-1870" for this suite. @ 09/04/25 14:42:02.027
• [3.517 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 09/04/25 14:42:02.033
  I0904 14:42:02.033617 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename subpath @ 09/04/25 14:42:02.034
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:42:02.046
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:42:02.048
  STEP: Setting up data @ 09/04/25 14:42:02.05
  STEP: Creating pod pod-subpath-test-downwardapi-crxp @ 09/04/25 14:42:02.059
  STEP: Creating a pod to test atomic-volume-subpath @ 09/04/25 14:42:02.059
  STEP: Saw pod success @ 09/04/25 14:42:24.13
  I0904 14:42:24.133139 23 output.go:207] Trying to get logs from node ip-172-31-33-202 pod pod-subpath-test-downwardapi-crxp container test-container-subpath-downwardapi-crxp: <nil>
  STEP: delete the pod @ 09/04/25 14:42:24.14
  STEP: Deleting pod pod-subpath-test-downwardapi-crxp @ 09/04/25 14:42:24.159
  I0904 14:42:24.159502 23 delete.go:78] Deleting pod "pod-subpath-test-downwardapi-crxp" in namespace "subpath-245"
  I0904 14:42:24.163482 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-245" for this suite. @ 09/04/25 14:42:24.166
• [22.140 seconds]
------------------------------
S
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:176
  STEP: Creating a kubernetes client @ 09/04/25 14:42:24.174
  I0904 14:42:24.174185 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename events @ 09/04/25 14:42:24.174
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:42:24.186
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:42:24.187
  STEP: Create set of events @ 09/04/25 14:42:24.189
  I0904 14:42:24.195249 23 core_events.go:198] created test-event-1
  I0904 14:42:24.200152 23 core_events.go:198] created test-event-2
  I0904 14:42:24.203410 23 core_events.go:198] created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 09/04/25 14:42:24.203
  STEP: delete collection of events @ 09/04/25 14:42:24.208
  I0904 14:42:24.208780 23 core_events.go:213] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 09/04/25 14:42:24.237
  I0904 14:42:24.237816 23 core_events.go:230] requesting list of events to confirm quantity
  I0904 14:42:24.239996 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-329" for this suite. @ 09/04/25 14:42:24.267
• [0.104 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 09/04/25 14:42:24.278
  I0904 14:42:24.278783 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename events @ 09/04/25 14:42:24.279
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:42:24.289
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:42:24.292
  STEP: Create set of events @ 09/04/25 14:42:24.294
  STEP: get a list of Events with a label in the current namespace @ 09/04/25 14:42:24.31
  STEP: delete a list of events @ 09/04/25 14:42:24.312
  I0904 14:42:24.312696 23 events.go:224] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 09/04/25 14:42:24.338
  I0904 14:42:24.341143 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-1266" for this suite. @ 09/04/25 14:42:24.367
• [0.096 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:657
  STEP: Creating a kubernetes client @ 09/04/25 14:42:24.375
  I0904 14:42:24.375399 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename statefulset @ 09/04/25 14:42:24.375
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:42:24.389
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:42:24.391
  STEP: Creating service test in namespace statefulset-1753 @ 09/04/25 14:42:24.393
  I0904 14:42:24.396691      23 warnings.go:110] "Warning: spec.SessionAffinity is ignored for headless services"
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 09/04/25 14:42:24.396
  STEP: Creating stateful set ss in namespace statefulset-1753 @ 09/04/25 14:42:24.4
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-1753 @ 09/04/25 14:42:24.406
  I0904 14:42:24.424423 23 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Pending - Ready=false
  I0904 14:42:34.413074 23 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 09/04/25 14:42:34.413
  I0904 14:42:34.415597 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=statefulset-1753 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0904 14:42:34.492133 23 builder.go:156] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0904 14:42:34.492180 23 builder.go:157] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0904 14:42:34.492192 23 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0904 14:42:34.496732 23 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  I0904 14:42:44.500875 23 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0904 14:42:44.500917 23 wait.go:109] Waiting for statefulset status.readyReplicas updated to 0
  I0904 14:42:44.602678 23 statefulset.go:2415] Verifying statefulset ss doesn't scale past 1 for another 9.999999844s
  I0904 14:42:45.607201 23 statefulset.go:2415] Verifying statefulset ss doesn't scale past 1 for another 8.909662457s
  I0904 14:42:46.614702 23 statefulset.go:2415] Verifying statefulset ss doesn't scale past 1 for another 7.904669919s
  I0904 14:42:47.622751 23 statefulset.go:2415] Verifying statefulset ss doesn't scale past 1 for another 6.896761632s
  I0904 14:42:48.627891 23 statefulset.go:2415] Verifying statefulset ss doesn't scale past 1 for another 5.889576201s
  I0904 14:42:49.632741 23 statefulset.go:2415] Verifying statefulset ss doesn't scale past 1 for another 4.884483495s
  I0904 14:42:50.639785 23 statefulset.go:2415] Verifying statefulset ss doesn't scale past 1 for another 3.879600265s
  I0904 14:42:51.645532 23 statefulset.go:2415] Verifying statefulset ss doesn't scale past 1 for another 2.871638351s
  I0904 14:42:52.653240 23 statefulset.go:2415] Verifying statefulset ss doesn't scale past 1 for another 1.86676251s
  I0904 14:42:53.658821 23 statefulset.go:2415] Verifying statefulset ss doesn't scale past 1 for another 858.4112ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-1753 @ 09/04/25 14:42:54.658
  I0904 14:42:54.664278 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=statefulset-1753 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0904 14:42:54.732950 23 builder.go:156] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0904 14:42:54.732975 23 builder.go:157] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0904 14:42:54.732983 23 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0904 14:42:54.735897 23 wait.go:44] Found 1 stateful pods, waiting for 3
  I0904 14:43:04.742039 23 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0904 14:43:04.742078 23 wait.go:54] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I0904 14:43:04.742084 23 wait.go:54] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 09/04/25 14:43:04.742
  STEP: Scale down will halt with unhealthy stateful pod @ 09/04/25 14:43:04.742
  I0904 14:43:04.747393 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=statefulset-1753 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0904 14:43:04.820926 23 builder.go:156] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0904 14:43:04.820953 23 builder.go:157] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0904 14:43:04.820961 23 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0904 14:43:04.820991 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=statefulset-1753 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0904 14:43:04.894553 23 builder.go:156] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0904 14:43:04.894581 23 builder.go:157] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0904 14:43:04.894611 23 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0904 14:43:04.894642 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=statefulset-1753 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0904 14:43:04.968443 23 builder.go:156] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0904 14:43:04.968469 23 builder.go:157] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0904 14:43:04.968477 23 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0904 14:43:04.968484 23 wait.go:109] Waiting for statefulset status.readyReplicas updated to 0
  I0904 14:43:04.972869 23 wait.go:122] Waiting for statefulset status.readyReplicas to become 0, currently 2
  I0904 14:43:14.981991 23 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0904 14:43:14.982019 23 wait.go:54] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I0904 14:43:14.982025 23 wait.go:54] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I0904 14:43:15.083140 23 statefulset.go:2415] Verifying statefulset ss doesn't scale past 3 for another 9.999999838s
  I0904 14:43:16.088709 23 statefulset.go:2415] Verifying statefulset ss doesn't scale past 3 for another 8.907844249s
  I0904 14:43:17.093973 23 statefulset.go:2415] Verifying statefulset ss doesn't scale past 3 for another 7.903019288s
  I0904 14:43:18.099576 23 statefulset.go:2415] Verifying statefulset ss doesn't scale past 3 for another 6.89706976s
  I0904 14:43:19.118154 23 statefulset.go:2415] Verifying statefulset ss doesn't scale past 3 for another 5.892071254s
  I0904 14:43:20.123268 23 statefulset.go:2415] Verifying statefulset ss doesn't scale past 3 for another 4.873517026s
  I0904 14:43:21.128831 23 statefulset.go:2415] Verifying statefulset ss doesn't scale past 3 for another 3.867838183s
  I0904 14:43:22.135151 23 statefulset.go:2415] Verifying statefulset ss doesn't scale past 3 for another 2.861913251s
  I0904 14:43:23.141268 23 statefulset.go:2415] Verifying statefulset ss doesn't scale past 3 for another 1.856075538s
  I0904 14:43:24.146715 23 statefulset.go:2415] Verifying statefulset ss doesn't scale past 3 for another 850.350796ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-1753 @ 09/04/25 14:43:25.146
  I0904 14:43:25.150916 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=statefulset-1753 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0904 14:43:25.227257 23 builder.go:156] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0904 14:43:25.227287 23 builder.go:157] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0904 14:43:25.227296 23 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0904 14:43:25.227411 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=statefulset-1753 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0904 14:43:25.293249 23 builder.go:156] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0904 14:43:25.293283 23 builder.go:157] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0904 14:43:25.293291 23 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0904 14:43:25.293324 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=statefulset-1753 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0904 14:43:25.359187 23 builder.go:156] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0904 14:43:25.359218 23 builder.go:157] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0904 14:43:25.359226 23 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0904 14:43:25.359248 23 rest.go:153] Scaling statefulset ss to 0
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 09/04/25 14:43:35.368
  I0904 14:43:35.368450 23 statefulset.go:136] Deleting all statefulset in ns statefulset-1753
  I0904 14:43:35.371258 23 rest.go:153] Scaling statefulset ss to 0
  I0904 14:43:35.376964 23 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0904 14:43:35.380870 23 rest.go:91] Deleting statefulset ss
  I0904 14:43:35.393256 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-1753" for this suite. @ 09/04/25 14:43:35.397
• [71.028 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject validating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:816
  STEP: Creating a kubernetes client @ 09/04/25 14:43:35.403
  I0904 14:43:35.403671 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename webhook @ 09/04/25 14:43:35.404
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:43:35.415
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:43:35.417
  STEP: Setting up server cert @ 09/04/25 14:43:35.439
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/04/25 14:43:35.653
  STEP: Deploying the webhook pod @ 09/04/25 14:43:35.659
  STEP: Wait for the deployment to be ready @ 09/04/25 14:43:35.676
  I0904 14:43:35.682941 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/04/25 14:43:37.691
  STEP: Verifying the service has paired with the endpoint @ 09/04/25 14:43:37.705
  I0904 14:43:38.706705 23 util.go:419] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 09/04/25 14:43:38.713
  I0904 14:43:38.749273 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3973" for this suite. @ 09/04/25 14:43:38.752
  STEP: Destroying namespace "webhook-markers-2704" for this suite. @ 09/04/25 14:43:38.761
• [3.366 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:948
  STEP: Creating a kubernetes client @ 09/04/25 14:43:38.77
  I0904 14:43:38.770432 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename resourcequota @ 09/04/25 14:43:38.77
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:43:38.781
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:43:38.783
  STEP: Creating a ResourceQuota @ 09/04/25 14:43:38.787
  STEP: Getting a ResourceQuota @ 09/04/25 14:43:38.792
  STEP: Updating a ResourceQuota @ 09/04/25 14:43:38.796
  STEP: Verifying a ResourceQuota was modified @ 09/04/25 14:43:38.804
  STEP: Deleting a ResourceQuota @ 09/04/25 14:43:38.806
  STEP: Verifying the deleted ResourceQuota @ 09/04/25 14:43:38.813
  I0904 14:43:38.815006 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9664" for this suite. @ 09/04/25 14:43:38.854
• [0.089 seconds]
------------------------------
SS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:942
  STEP: Creating a kubernetes client @ 09/04/25 14:43:38.859
  I0904 14:43:38.859037 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename sched-preemption @ 09/04/25 14:43:38.859
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:43:38.872
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:43:38.874
  I0904 14:43:38.892739 23 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I0904 14:44:38.898027 23 util.go:390] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 09/04/25 14:44:38.9
  I0904 14:44:38.900985 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename sched-preemption-path @ 09/04/25 14:44:38.901
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:44:38.913
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:44:38.915
  I0904 14:44:38.929015 23 preemption.go:948] PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  I0904 14:44:38.933388 23 preemption.go:954] PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  STEP: Removing a custom resource @ 09/04/25 14:44:38.977
  STEP: Removing a custom resource @ 09/04/25 14:44:38.985
  STEP: Removing a custom resource @ 09/04/25 14:44:38.993
  I0904 14:44:39.001066 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-6537" for this suite. @ 09/04/25 14:44:39.005
  I0904 14:44:39.012772 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-6066" for this suite. @ 09/04/25 14:44:39.106
• [60.255 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1565
  STEP: Creating a kubernetes client @ 09/04/25 14:44:39.114
  I0904 14:44:39.114097 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename kubectl @ 09/04/25 14:44:39.114
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:44:39.125
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:44:39.127
  STEP: creating Agnhost RC @ 09/04/25 14:44:39.129
  I0904 14:44:39.129856 23 kubectl.go:1572] namespace kubectl-8484
  I0904 14:44:39.129887 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=kubectl-8484 create -f -'
  I0904 14:44:39.205516 23 builder.go:156] stderr: ""
  I0904 14:44:39.205536 23 builder.go:157] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 09/04/25 14:44:39.205
  I0904 14:44:40.210609 23 framework.go:697] Selector matched 1 pods for map[app:agnhost]
  I0904 14:44:40.210637 23 framework.go:738] Found 1 / 1
  I0904 14:44:40.210648 23 framework.go:747] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I0904 14:44:40.213123 23 framework.go:697] Selector matched 1 pods for map[app:agnhost]
  I0904 14:44:40.213138 23 framework.go:770] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0904 14:44:40.213143 23 kubectl.go:1579] wait on agnhost-primary startup in kubectl-8484 
  I0904 14:44:40.213185 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=kubectl-8484 logs agnhost-primary-q4kzv agnhost-primary'
  I0904 14:44:40.267267 23 builder.go:156] stderr: ""
  I0904 14:44:40.267295 23 builder.go:157] stdout: "Paused\nSignals registered\n"
  STEP: exposing RC @ 09/04/25 14:44:40.267
  I0904 14:44:40.267382 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=kubectl-8484 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  I0904 14:44:40.312225 23 builder.go:156] stderr: ""
  I0904 14:44:40.312255 23 builder.go:157] stdout: "service/rm2 exposed\n"
  I0904 14:44:40.319429 23 utils.go:1116] Service rm2 in namespace kubectl-8484 found.
  STEP: exposing service @ 09/04/25 14:44:42.328
  I0904 14:44:42.328097 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=kubectl-8484 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  I0904 14:44:42.376821 23 builder.go:156] stderr: ""
  I0904 14:44:42.376857 23 builder.go:157] stdout: "service/rm3 exposed\n"
  I0904 14:44:42.380889 23 utils.go:1116] Service rm3 in namespace kubectl-8484 found.
  I0904 14:44:44.426694 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8484" for this suite. @ 09/04/25 14:44:44.43
• [5.321 seconds]
------------------------------
SSSS
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 09/04/25 14:44:44.435
  I0904 14:44:44.435071 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename events @ 09/04/25 14:44:44.435
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:44:44.448
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:44:44.449
  STEP: creating a test event @ 09/04/25 14:44:44.451
  STEP: listing events in all namespaces @ 09/04/25 14:44:44.457
  STEP: listing events in test namespace @ 09/04/25 14:44:44.471
  STEP: listing events with field selection filtering on source @ 09/04/25 14:44:44.473
  STEP: listing events with field selection filtering on reportingController @ 09/04/25 14:44:44.475
  STEP: getting the test event @ 09/04/25 14:44:44.478
  STEP: patching the test event @ 09/04/25 14:44:44.481
  STEP: getting the test event @ 09/04/25 14:44:44.487
  STEP: updating the test event @ 09/04/25 14:44:44.491
  STEP: getting the test event @ 09/04/25 14:44:44.496
  STEP: deleting the test event @ 09/04/25 14:44:44.5
  STEP: listing events in all namespaces @ 09/04/25 14:44:44.507
  STEP: listing events in test namespace @ 09/04/25 14:44:44.515
  I0904 14:44:44.518024 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-895" for this suite. @ 09/04/25 14:44:44.533
• [0.104 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:281
  STEP: Creating a kubernetes client @ 09/04/25 14:44:44.538
  I0904 14:44:44.538945 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename webhook @ 09/04/25 14:44:44.539
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:44:44.552
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:44:44.554
  STEP: Setting up server cert @ 09/04/25 14:44:44.572
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/04/25 14:44:44.741
  STEP: Deploying the webhook pod @ 09/04/25 14:44:44.746
  STEP: Wait for the deployment to be ready @ 09/04/25 14:44:44.76
  I0904 14:44:44.767390 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/04/25 14:44:46.78
  STEP: Verifying the service has paired with the endpoint @ 09/04/25 14:44:46.789
  I0904 14:44:47.789369 23 util.go:419] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0904 14:44:47.794100 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-4673-229-crds.webhook.example.com via the AdmissionRegistration API @ 09/04/25 14:44:48.303
  STEP: Creating a custom resource that should be mutated by the webhook @ 09/04/25 14:44:48.318
  I0904 14:44:50.899041 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4673" for this suite. @ 09/04/25 14:44:50.902
  STEP: Destroying namespace "webhook-markers-1684" for this suite. @ 09/04/25 14:44:50.909
• [6.375 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:234
  STEP: Creating a kubernetes client @ 09/04/25 14:44:50.913
  I0904 14:44:50.913954 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename webhook @ 09/04/25 14:44:50.914
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:44:50.925
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:44:50.927
  STEP: Setting up server cert @ 09/04/25 14:44:50.947
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/04/25 14:44:51.284
  STEP: Deploying the webhook pod @ 09/04/25 14:44:51.291
  STEP: Wait for the deployment to be ready @ 09/04/25 14:44:51.303
  I0904 14:44:51.308633 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/04/25 14:44:53.321
  STEP: Verifying the service has paired with the endpoint @ 09/04/25 14:44:53.33
  I0904 14:44:54.331240 23 util.go:419] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 09/04/25 14:44:54.336
  STEP: create a namespace for the webhook @ 09/04/25 14:44:54.352
  STEP: create a configmap should be unconditionally rejected by the webhook @ 09/04/25 14:44:54.376
  I0904 14:44:54.431029 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6617" for this suite. @ 09/04/25 14:44:54.434
  STEP: Destroying namespace "webhook-markers-1167" for this suite. @ 09/04/25 14:44:54.442
  STEP: Destroying namespace "fail-closed-namespace-2490" for this suite. @ 09/04/25 14:44:54.446
• [3.539 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:108
  STEP: Creating a kubernetes client @ 09/04/25 14:44:54.452
  I0904 14:44:54.452796 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename pod-network-test @ 09/04/25 14:44:54.453
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:44:54.462
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:44:54.465
  STEP: Performing setup for networking test in namespace pod-network-test-1074 @ 09/04/25 14:44:54.467
  STEP: creating a selector @ 09/04/25 14:44:54.467
  STEP: Creating the service pods in kubernetes @ 09/04/25 14:44:54.467
  I0904 14:44:54.467300 23 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 09/04/25 14:45:08.617
  I0904 14:45:10.655186 23 utils.go:803] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I0904 14:45:10.655216 23 utils.go:496] Going to poll 192.168.4.142 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  I0904 14:45:10.658819 23 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.4.142:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-1074 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0904 14:45:10.658840 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0904 14:45:10.658874 23 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/pod-network-test-1074/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.4.142%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0904 14:45:10.696717 23 utils.go:513] Found all 1 expected endpoints: [netserver-0]
  I0904 14:45:10.696741 23 utils.go:496] Going to poll 192.168.109.98 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  I0904 14:45:10.699571 23 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.109.98:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-1074 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0904 14:45:10.699597 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0904 14:45:10.699628 23 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/pod-network-test-1074/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.109.98%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0904 14:45:10.734954 23 utils.go:513] Found all 1 expected endpoints: [netserver-1]
  I0904 14:45:10.734978 23 utils.go:496] Going to poll 192.168.186.78 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  I0904 14:45:10.737684 23 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.186.78:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-1074 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0904 14:45:10.737698 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0904 14:45:10.737728 23 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/pod-network-test-1074/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.186.78%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  I0904 14:45:10.775266 23 utils.go:513] Found all 1 expected endpoints: [netserver-2]
  I0904 14:45:10.775366 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-1074" for this suite. @ 09/04/25 14:45:10.779
• [16.333 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 09/04/25 14:45:10.786
  I0904 14:45:10.786062 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename projected @ 09/04/25 14:45:10.786
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:45:10.799
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:45:10.801
  STEP: Creating projection with secret that has name projected-secret-test-a89ecedb-c9ec-42a0-9eba-ce5edef0fbf0 @ 09/04/25 14:45:10.803
  STEP: Creating a pod to test consume secrets @ 09/04/25 14:45:10.808
  STEP: Saw pod success @ 09/04/25 14:45:12.824
  I0904 14:45:12.826577 23 output.go:207] Trying to get logs from node ip-172-31-18-79 pod pod-projected-secrets-4b22b9e8-e392-4923-b030-45c3ee04adad container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/04/25 14:45:12.839
  I0904 14:45:12.856323 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5497" for this suite. @ 09/04/25 14:45:12.86
• [2.081 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:406
  STEP: Creating a kubernetes client @ 09/04/25 14:45:12.866
  I0904 14:45:12.866744 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename job @ 09/04/25 14:45:12.867
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:45:12.878
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:45:12.88
  STEP: Creating Indexed job @ 09/04/25 14:45:12.882
  STEP: Ensuring job reaches completions @ 09/04/25 14:45:12.888
  STEP: Ensuring pods with index for job exist @ 09/04/25 14:45:20.911
  I0904 14:45:20.968012 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-623" for this suite. @ 09/04/25 14:45:20.97
• [8.109 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:72
  STEP: Creating a kubernetes client @ 09/04/25 14:45:20.975
  I0904 14:45:20.975620 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename container-probe @ 09/04/25 14:45:20.976
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:45:20.987
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:45:20.989
  I0904 14:45:45.072231 23 container_probe.go:92] Container started at 2025-09-04 14:45:21 +0000 UTC, pod became ready at 2025-09-04 14:45:43 +0000 UTC
  I0904 14:45:45.072335 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2395" for this suite. @ 09/04/25 14:45:45.077
• [24.108 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:146
  STEP: Creating a kubernetes client @ 09/04/25 14:45:45.084
  I0904 14:45:45.084053 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/04/25 14:45:45.084
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:45:45.097
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:45:45.1
  I0904 14:45:45.102832 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  I0904 14:45:45.644533 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-3094" for this suite. @ 09/04/25 14:45:45.65
• [0.576 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:245
  STEP: Creating a kubernetes client @ 09/04/25 14:45:45.66
  I0904 14:45:45.660088 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename container-runtime @ 09/04/25 14:45:45.66
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:45:45.671
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:45:45.673
  STEP: create the container @ 09/04/25 14:45:45.675
  I0904 14:45:45.682125      23 warnings.go:110] "Warning: metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]"
  STEP: wait for the container to reach Succeeded @ 09/04/25 14:45:45.682
  STEP: get the container status @ 09/04/25 14:45:47.698
  STEP: the container should be terminated @ 09/04/25 14:45:47.702
  STEP: the termination message should be set @ 09/04/25 14:45:47.702
  I0904 14:45:47.702331 23 runtime.go:164] Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 09/04/25 14:45:47.702
  I0904 14:45:47.721848 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-1644" for this suite. @ 09/04/25 14:45:47.724
• [2.074 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:208
  STEP: Creating a kubernetes client @ 09/04/25 14:45:47.733
  I0904 14:45:47.733892 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename dns @ 09/04/25 14:45:47.734
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:45:47.746
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:45:47.748
  STEP: Creating a test headless service @ 09/04/25 14:45:47.75
  I0904 14:45:47.757037      23 warnings.go:110] "Warning: spec.SessionAffinity is ignored for headless services"
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-5557 A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service.dns-5557;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-5557 A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service.dns-5557;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-5557.svc A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service.dns-5557.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-5557.svc A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service.dns-5557.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-5557.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.dns-test-service.dns-5557.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-5557.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.dns-test-service.dns-5557.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-5557.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.test-service-2.dns-5557.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-5557.svc SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.test-service-2.dns-5557.svc;check="$$(dig +notcp +noall +answer +search 50.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.50_udp@PTR;check="$$(dig +tcp +noall +answer +search 50.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.50_tcp@PTR;sleep 1; done
   @ 09/04/25 14:45:47.77
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-5557 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-5557;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-5557 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-5557;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-5557.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-5557.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-5557.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-5557.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-5557.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-5557.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-5557.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-5557.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-5557.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-5557.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-5557.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-5557.svc;check="$$(dig +notcp +noall +answer +search 50.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.50_udp@PTR;check="$$(dig +tcp +noall +answer +search 50.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.50_tcp@PTR;sleep 1; done
   @ 09/04/25 14:45:47.77
  STEP: creating a pod to probe DNS @ 09/04/25 14:45:47.77
  STEP: submitting the pod to kubernetes @ 09/04/25 14:45:47.77
  STEP: retrieving the pod @ 09/04/25 14:45:51.798
  STEP: looking for the results for each expected name from probers @ 09/04/25 14:45:51.8
  I0904 14:45:51.806060 23 dns_common.go:495] Unable to read agnhost_udp@dns-test-service from pod dns-5557/dns-test-eb9bd23d-4a09-46a3-83c3-9aa4f57931e9: the server could not find the requested resource (get pods dns-test-eb9bd23d-4a09-46a3-83c3-9aa4f57931e9)
  I0904 14:45:51.809043 23 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service from pod dns-5557/dns-test-eb9bd23d-4a09-46a3-83c3-9aa4f57931e9: the server could not find the requested resource (get pods dns-test-eb9bd23d-4a09-46a3-83c3-9aa4f57931e9)
  I0904 14:45:51.813404 23 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-5557 from pod dns-5557/dns-test-eb9bd23d-4a09-46a3-83c3-9aa4f57931e9: the server could not find the requested resource (get pods dns-test-eb9bd23d-4a09-46a3-83c3-9aa4f57931e9)
  I0904 14:45:51.817987 23 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-5557 from pod dns-5557/dns-test-eb9bd23d-4a09-46a3-83c3-9aa4f57931e9: the server could not find the requested resource (get pods dns-test-eb9bd23d-4a09-46a3-83c3-9aa4f57931e9)
  I0904 14:45:51.821369 23 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-5557.svc from pod dns-5557/dns-test-eb9bd23d-4a09-46a3-83c3-9aa4f57931e9: the server could not find the requested resource (get pods dns-test-eb9bd23d-4a09-46a3-83c3-9aa4f57931e9)
  I0904 14:45:51.823896 23 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-5557.svc from pod dns-5557/dns-test-eb9bd23d-4a09-46a3-83c3-9aa4f57931e9: the server could not find the requested resource (get pods dns-test-eb9bd23d-4a09-46a3-83c3-9aa4f57931e9)
  I0904 14:45:51.828477 23 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-5557.svc from pod dns-5557/dns-test-eb9bd23d-4a09-46a3-83c3-9aa4f57931e9: the server could not find the requested resource (get pods dns-test-eb9bd23d-4a09-46a3-83c3-9aa4f57931e9)
  I0904 14:45:51.831366 23 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-5557.svc from pod dns-5557/dns-test-eb9bd23d-4a09-46a3-83c3-9aa4f57931e9: the server could not find the requested resource (get pods dns-test-eb9bd23d-4a09-46a3-83c3-9aa4f57931e9)
  I0904 14:45:51.847831 23 dns_common.go:495] Unable to read jessie_udp@dns-test-service from pod dns-5557/dns-test-eb9bd23d-4a09-46a3-83c3-9aa4f57931e9: the server could not find the requested resource (get pods dns-test-eb9bd23d-4a09-46a3-83c3-9aa4f57931e9)
  I0904 14:45:51.850988 23 dns_common.go:495] Unable to read jessie_tcp@dns-test-service from pod dns-5557/dns-test-eb9bd23d-4a09-46a3-83c3-9aa4f57931e9: the server could not find the requested resource (get pods dns-test-eb9bd23d-4a09-46a3-83c3-9aa4f57931e9)
  I0904 14:45:51.853379 23 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-5557 from pod dns-5557/dns-test-eb9bd23d-4a09-46a3-83c3-9aa4f57931e9: the server could not find the requested resource (get pods dns-test-eb9bd23d-4a09-46a3-83c3-9aa4f57931e9)
  I0904 14:45:51.858035 23 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-5557 from pod dns-5557/dns-test-eb9bd23d-4a09-46a3-83c3-9aa4f57931e9: the server could not find the requested resource (get pods dns-test-eb9bd23d-4a09-46a3-83c3-9aa4f57931e9)
  I0904 14:45:51.860830 23 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-5557.svc from pod dns-5557/dns-test-eb9bd23d-4a09-46a3-83c3-9aa4f57931e9: the server could not find the requested resource (get pods dns-test-eb9bd23d-4a09-46a3-83c3-9aa4f57931e9)
  I0904 14:45:51.863323 23 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-5557.svc from pod dns-5557/dns-test-eb9bd23d-4a09-46a3-83c3-9aa4f57931e9: the server could not find the requested resource (get pods dns-test-eb9bd23d-4a09-46a3-83c3-9aa4f57931e9)
  I0904 14:45:51.867464 23 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-5557.svc from pod dns-5557/dns-test-eb9bd23d-4a09-46a3-83c3-9aa4f57931e9: the server could not find the requested resource (get pods dns-test-eb9bd23d-4a09-46a3-83c3-9aa4f57931e9)
  I0904 14:45:51.869875 23 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-5557.svc from pod dns-5557/dns-test-eb9bd23d-4a09-46a3-83c3-9aa4f57931e9: the server could not find the requested resource (get pods dns-test-eb9bd23d-4a09-46a3-83c3-9aa4f57931e9)
  I0904 14:45:51.882285 23 dns_common.go:506] Lookups using dns-5557/dns-test-eb9bd23d-4a09-46a3-83c3-9aa4f57931e9 failed for: [agnhost_udp@dns-test-service agnhost_tcp@dns-test-service agnhost_udp@dns-test-service.dns-5557 agnhost_tcp@dns-test-service.dns-5557 agnhost_udp@dns-test-service.dns-5557.svc agnhost_tcp@dns-test-service.dns-5557.svc agnhost_udp@_http._tcp.dns-test-service.dns-5557.svc agnhost_tcp@_http._tcp.dns-test-service.dns-5557.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-5557 jessie_tcp@dns-test-service.dns-5557 jessie_udp@dns-test-service.dns-5557.svc jessie_tcp@dns-test-service.dns-5557.svc jessie_udp@_http._tcp.dns-test-service.dns-5557.svc jessie_tcp@_http._tcp.dns-test-service.dns-5557.svc]

  I0904 14:45:51.890667 23 dns_common.go:514] Pod client logs for webserver: 
  I0904 14:45:51.895463 23 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0904 14:45:51.902237 23 dns_common.go:514] Pod client logs for jessie-querier: 
  I0904 14:45:56.887035 23 dns_common.go:546] DNS probes using dns-5557/dns-test-eb9bd23d-4a09-46a3-83c3-9aa4f57931e9 succeeded

  STEP: deleting the pod @ 09/04/25 14:45:56.887
  STEP: deleting the test service @ 09/04/25 14:45:56.899
  STEP: deleting the test headless service @ 09/04/25 14:45:56.925
  I0904 14:45:56.936010 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-5557" for this suite. @ 09/04/25 14:45:56.941
• [9.217 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 09/04/25 14:45:56.951
  I0904 14:45:56.951372 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename deployment @ 09/04/25 14:45:56.951
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:45:56.963
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:45:56.965
  I0904 14:45:56.975681 23 resource.go:64] Pod name rollover-pod: Found 0 pods out of 1
  I0904 14:46:01.979962 23 resource.go:64] Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/04/25 14:46:01.979
  I0904 14:46:01.980038 23 deployment.go:930] Waiting for pods owned by replica set "test-rollover-controller" to become ready
  I0904 14:46:03.984384 23 deployment.go:940] Creating deployment "test-rollover-deployment"
  I0904 14:46:03.991202 23 deployment.go:953] Make sure deployment "test-rollover-deployment" performs scaling operations
  I0904 14:46:05.997617 23 deployment.go:958] Check revision of new replica set for deployment "test-rollover-deployment"
  I0904 14:46:06.004696 23 deployment.go:962] Ensure that both replica sets have 1 created replica
  I0904 14:46:06.008688 23 deployment.go:971] Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  I0904 14:46:06.019859 23 deployment.go:314] Updating deployment test-rollover-deployment
  I0904 14:46:06.019882 23 deployment.go:980] Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  I0904 14:46:08.028374 23 deployment.go:985] Wait for revision update of deployment "test-rollover-deployment" to 2
  I0904 14:46:08.033442 23 deployment.go:989] Make sure deployment "test-rollover-deployment" is complete
  I0904 14:46:08.039406 23 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0904 14:46:08.039458 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.September, 4, 14, 46, 4, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 4, 14, 46, 4, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 4, 14, 46, 7, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 4, 14, 46, 4, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5b97b67475\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0904 14:46:10.047925 23 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0904 14:46:10.047980 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.September, 4, 14, 46, 4, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 4, 14, 46, 4, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 4, 14, 46, 7, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 4, 14, 46, 4, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5b97b67475\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0904 14:46:12.046805 23 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0904 14:46:12.046850 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.September, 4, 14, 46, 4, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 4, 14, 46, 4, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 4, 14, 46, 7, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 4, 14, 46, 4, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5b97b67475\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0904 14:46:14.049390 23 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0904 14:46:14.049446 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.September, 4, 14, 46, 4, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 4, 14, 46, 4, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 4, 14, 46, 7, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 4, 14, 46, 4, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5b97b67475\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0904 14:46:16.047865 23 deployment.go:95] all replica sets need to contain the pod-template-hash label
  I0904 14:46:16.047912 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2025, time.September, 4, 14, 46, 4, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 4, 14, 46, 4, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 4, 14, 46, 7, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 4, 14, 46, 4, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5b97b67475\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0904 14:46:18.050096 23 deployment.go:95] 
  I0904 14:46:18.050142 23 deployment.go:993] Ensure that both old replica sets have no replicas
  I0904 14:46:18.059272 23 deployment.go:632] Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4441",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "62a48a12-8ec2-4060-9988-7d65f5271a93",
      ResourceVersion: (string) (len=4) "8197",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892593963,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892593966,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892593977,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.56",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          HostnameOverride: (*string)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892593964,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892593964,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892593977,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892593964,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-5b97b67475\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0904 14:46:18.064080 23 deployment.go:40] New ReplicaSet "test-rollover-deployment-5b97b67475" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-5b97b67475",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4441",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8443f4e0-8208-447d-b636-a58c90486077",
      ResourceVersion: (string) (len=4) "8187",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892593966,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "5b97b67475",
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "62a48a12-8ec2-4060-9988-7d65f5271a93",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892593966,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 36 32 61 34 38 61  31 32 2d 38 65 63 32 2d  |\"62a48a12-8ec2-|
              00000120  34 30 36 30 2d 39 39 38  38 2d 37 64 36 35 66 35  |4060-9988-7d65f5|
              00000130  32 37 31 61 39 33 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |271a93\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892593977,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "5b97b67475",
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5b97b67475"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.56",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          HostnameOverride: (*string)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0904 14:46:18.064471 23 deployment.go:45] All old ReplicaSets of Deployment "test-rollover-deployment":
  I0904 14:46:18.064772 23 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4441",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "922daee6-6578-4c02-b05a-7842c6aba92d",
      ResourceVersion: (string) (len=4) "8196",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892593956,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "62a48a12-8ec2-4060-9988-7d65f5271a93",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892593956,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892593977,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  36 32 61 34 38 61 31 32  2d 38 65 63 32 2d 34 30  |62a48a12-8ec2-40|
              000000c0  36 30 2d 39 39 38 38 2d  37 64 36 35 66 35 32 37  |60-9988-7d65f527|
              000000d0  31 61 39 33 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |1a93\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892593977,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "pod": (string) (len=5) "httpd",
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          HostnameOverride: (*string)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0904 14:46:18.065488 23 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-rollover-deployment-8fbb868dd",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4441",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d8797fd6-d6dd-459b-92a7-dc11a558dd7c",
      ResourceVersion: (string) (len=4) "8149",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892593964,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=9) "8fbb868dd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "62a48a12-8ec2-4060-9988-7d65f5271a93",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892593966,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 36 32 61 34 38 61  31 32 2d 38 65 63 32 2d  |\"62a48a12-8ec2-|
              00000120  34 30 36 30 2d 39 39 38  38 2d 37 64 36 35 66 35  |4060-9988-7d65f5|
              00000130  32 37 31 61 39 33 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |271a93\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892593966,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=9) "8fbb868dd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=9) "8fbb868dd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          HostnameOverride: (*string)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0904 14:46:18.070709 23 deployment.go:68] Pod "test-rollover-deployment-5b97b67475-6ptws" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-5b97b67475-6ptws",
      GenerateName: (string) (len=36) "test-rollover-deployment-5b97b67475-",
      Namespace: (string) (len=15) "deployment-4441",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3fb1fc0f-1ef5-42c4-8a7b-fa72f5049edc",
      ResourceVersion: (string) (len=4) "8166",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892593966,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5b97b67475"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-5b97b67475",
          UID: (types.UID) (len=36) "8443f4e0-8208-447d-b636-a58c90486077",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892593966,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 34  34 33 66 34 65 30 2d 38  |d\":\"8443f4e0-8|
              00000090  32 30 38 2d 34 34 37 64  2d 62 36 33 36 2d 61 35  |208-447d-b636-a5|
              000000a0  38 63 39 30 34 38 36 30  37 37 5c 22 7d 22 3a 7b  |8c90486077\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892593967,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=854) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6f 62 73 65 72 76  |me":{},"f:observ|
              00000080  65 64 47 65 6e 65 72 61  74 69 6f 6e 22 3a 7b 7d  |edGeneration":{}|
              00000090  2c 22 66 3a 73 74 61 74  75 73 22 3a 7b 7d 2c 22  |,"f:status":{},"|
              000000a0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |f:type":{}},"k:{|
              000000b0  5c 22 74 79 70 65 5c 22  3a 5c 22 49 6e 69 74 69  |\"type\":\"Initi|
              000000c0  61 6c 69 7a 65 64 5c 22  7d 22 3a 7b 22 2e 22 3a  |alized\"}":{".":|
              000000d0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000000f0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              00000100  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000110  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000120  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000130  65 22 3a 7b 7d 7d 2c 22  6b 3a 7b 5c 22 74 79 70  |e":{}},"k:{\"typ|
              00000140  65 5c 22 3a 5c 22 50 6f  64 52 65 61 64 79 54 6f  |e\":\"PodReadyTo|
              00000150  53 74 61 72 74 43 6f 6e  74 61 69 6e 65 72 73 5c  |StartContainers\|
              00000160  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 6c  |"}":{".":{},"f:l|
              00000170  61 73 74 50 72 6f 62 65  54 69 6d 65 22 3a 7b 7d  |astProbeTime":{}|
              00000180  2c 22 66 3a 6c 61 73 74  54 72 61 6e 73 69 74 69  |,"f:lastTransiti|
              00000190  6f 6e 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6f 62  |onTime":{},"f:ob|
              000001a0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001b0  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              000001c0  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000001d0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              000001e0  6f 64 53 63 68 65 64 75  6c 65 64 5c 22 7d 22 3a  |odScheduled\"}":|
              000001f0  7b 22 66 3a 6f 62 73 65  72 76 65 64 47 65 6e 65  |{"f:observedGene|
              00000200  72 61 74 69 6f 6e 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |ration":{}},"k:{|
              00000210  5c 22 74 79 70 65 5c 22  3a 5c 22 52 65 61 64 79  |\"type\":\"Ready|
              00000220  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000230  6c 61 73 74 50 72 6f 62  65 54 69 6d 65 22 3a 7b  |lastProbeTime":{|
              00000240  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000250  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6f  |ionTime":{},"f:o|
              00000260  62 73 65 72 76 65 64 47  65 6e 65 72 61 74 69 6f  |bservedGeneratio|
              00000270  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000280  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000290  7d 2c 22 66 3a 63 6f 6e  74 61 69 6e 65 72 53 74  |},"f:containerSt|
              000002a0  61 74 75 73 65 73 22 3a  7b 7d 2c 22 66 3a 68 6f  |atuses":{},"f:ho|
              000002b0  73 74 49 50 22 3a 7b 7d  2c 22 66 3a 68 6f 73 74  |stIP":{},"f:host|
              000002c0  49 50 73 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |IPs":{},"f:obser|
              000002d0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002e0  7d 2c 22 66 3a 70 68 61  73 65 22 3a 7b 7d 2c 22  |},"f:phase":{},"|
              000002f0  66 3a 70 6f 64 49 50 22  3a 7b 7d 2c 22 66 3a 70  |f:podIP":{},"f:p|
              00000300  6f 64 49 50 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |odIPs":{".":{},"|
              00000310  6b 3a 7b 5c 22 69 70 5c  22 3a 5c 22 31 39 32 2e  |k:{\"ip\":\"192.|
              00000320  31 36 38 2e 31 30 39 2e  31 30 34 5c 22 7d 22 3a  |168.109.104\"}":|
              00000330  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000340  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000350  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-spjrm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.56",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-spjrm",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-33-202",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892593967,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892593966,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892593967,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892593967,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892593966,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.33.202",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.33.202"
        }
      },
      PodIP: (string) (len=15) "192.168.109.104",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.109.104"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892593966,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63892593966,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.56",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:352a050380078cb2a1c246357a0dfa2fcf243ee416b92ff28b44a01d1b4b0294",
          ContainerID: (string) (len=77) "containerd://4658e56b63d01b096c50366deaaaa2707bd278180fd7590247759613a731fffc",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-spjrm",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0904 14:46:18.071650 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-4441" for this suite. @ 09/04/25 14:46:18.075
• [21.132 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:356
  STEP: Creating a kubernetes client @ 09/04/25 14:46:18.083
  I0904 14:46:18.083367 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename endpointslice @ 09/04/25 14:46:18.083
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:46:18.095
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:46:18.097
  STEP: getting /apis @ 09/04/25 14:46:18.099
  STEP: getting /apis/discovery.k8s.io @ 09/04/25 14:46:18.101
  STEP: getting /apis/discovery.k8s.iov1 @ 09/04/25 14:46:18.102
  STEP: creating @ 09/04/25 14:46:18.103
  STEP: getting @ 09/04/25 14:46:18.115
  STEP: listing @ 09/04/25 14:46:18.117
  STEP: watching @ 09/04/25 14:46:18.119
  I0904 14:46:18.119467 23 endpointslice.go:447] starting watch
  STEP: cluster-wide listing @ 09/04/25 14:46:18.12
  STEP: cluster-wide watching @ 09/04/25 14:46:18.124
  I0904 14:46:18.124354 23 endpointslice.go:459] starting watch
  STEP: patching @ 09/04/25 14:46:18.125
  STEP: updating @ 09/04/25 14:46:18.13
  I0904 14:46:18.137967 23 endpointslice.go:482] waiting for watch events with expected annotations
  I0904 14:46:18.137990 23 endpointslice.go:495] saw patched and updated annotations
  STEP: deleting @ 09/04/25 14:46:18.138
  STEP: deleting a collection @ 09/04/25 14:46:18.147
  I0904 14:46:18.162664 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-9659" for this suite. @ 09/04/25 14:46:18.176
• [0.099 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1113
  STEP: Creating a kubernetes client @ 09/04/25 14:46:18.182
  I0904 14:46:18.182779 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename kubectl @ 09/04/25 14:46:18.183
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:46:18.195
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:46:18.197
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 09/04/25 14:46:18.199
  I0904 14:46:18.199562 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=kubectl-6103 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I0904 14:46:18.242141 23 builder.go:156] stderr: ""
  I0904 14:46:18.242161 23 builder.go:157] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 09/04/25 14:46:18.242
  I0904 14:46:18.242237 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=kubectl-6103 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.37.0-1"}]}} --dry-run=server'
  I0904 14:46:18.282413 23 builder.go:156] stderr: ""
  I0904 14:46:18.282472 23 builder.go:157] stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 09/04/25 14:46:18.282
  I0904 14:46:18.286853 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=kubectl-6103 delete pods e2e-test-httpd-pod'
  I0904 14:46:20.308847 23 builder.go:156] stderr: ""
  I0904 14:46:20.308899 23 builder.go:157] stdout: "pod \"e2e-test-httpd-pod\" deleted from kubectl-6103 namespace\n"
  I0904 14:46:20.309131 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6103" for this suite. @ 09/04/25 14:46:20.314
• [2.139 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:216
  STEP: Creating a kubernetes client @ 09/04/25 14:46:20.321
  I0904 14:46:20.321994 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename sched-preemption @ 09/04/25 14:46:20.322
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:46:20.335
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:46:20.337
  I0904 14:46:20.353562 23 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  I0904 14:47:20.359052 23 util.go:390] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 09/04/25 14:47:20.362
  STEP: Adding a custom resource @ 09/04/25 14:47:20.362
  I0904 14:47:20.379647 23 preemption.go:257] Created pod: pod0-0-sched-preemption-low-priority
  I0904 14:47:20.386265 23 preemption.go:257] Created pod: pod0-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 09/04/25 14:47:20.386
  I0904 14:47:20.402798 23 preemption.go:257] Created pod: pod1-0-sched-preemption-medium-priority
  I0904 14:47:20.409340 23 preemption.go:257] Created pod: pod1-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 09/04/25 14:47:20.409
  I0904 14:47:20.435389 23 preemption.go:257] Created pod: pod2-0-sched-preemption-medium-priority
  I0904 14:47:20.446091 23 preemption.go:257] Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 09/04/25 14:47:20.446
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 09/04/25 14:47:22.475
  STEP: Removing a custom resource @ 09/04/25 14:47:24.555
  STEP: Removing a custom resource @ 09/04/25 14:47:24.572
  STEP: Removing a custom resource @ 09/04/25 14:47:24.594
  I0904 14:47:24.605958 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-397" for this suite. @ 09/04/25 14:47:24.61
• [64.293 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1547
  STEP: Creating a kubernetes client @ 09/04/25 14:47:24.615
  I0904 14:47:24.615103 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename services @ 09/04/25 14:47:24.615
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:47:24.628
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:47:24.629
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-9896 @ 09/04/25 14:47:24.631
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 09/04/25 14:47:24.647
  STEP: creating service externalsvc in namespace services-9896 @ 09/04/25 14:47:24.647
  I0904 14:47:24.673507 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  STEP: changing the NodePort service to type=ExternalName @ 09/04/25 14:47:26.687
  I0904 14:47:26.703413 23 resource.go:344] Creating new exec pod
  I0904 14:47:28.717378 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=services-9896 exec execpodjr97f -- /bin/sh -x -c nslookup nodeport-service.services-9896.svc.cluster.local'
  I0904 14:47:28.803507 23 builder.go:156] stderr: "+ nslookup nodeport-service.services-9896.svc.cluster.local\n"
  I0904 14:47:28.803546 23 builder.go:157] stdout: ";; Got recursion not available from 10.152.183.138\n;; Got recursion not available from 10.152.183.138\n;; Got recursion not available from 10.152.183.138\n;; Got recursion not available from 10.152.183.138\nServer:\t\t10.152.183.138\nAddress:\t10.152.183.138#53\n\nnodeport-service.services-9896.svc.cluster.local\tcanonical name = externalsvc.services-9896.svc.cluster.local.\nName:\texternalsvc.services-9896.svc.cluster.local\nAddress: 10.152.183.47\n;; Got recursion not available from 10.152.183.138\n\n"
  I0904 14:47:28.833976 23 service.go:1558] Cleaning up the NodePort to ExternalName test service
  I0904 14:47:28.848901 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9896" for this suite. @ 09/04/25 14:47:28.857
• [4.250 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 09/04/25 14:47:28.865
  I0904 14:47:28.865598 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename cronjob @ 09/04/25 14:47:28.866
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:47:28.877
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:47:28.878
  STEP: Creating a ForbidConcurrent cronjob @ 09/04/25 14:47:28.88
  STEP: Ensuring a job is scheduled @ 09/04/25 14:47:28.886
  STEP: Ensuring exactly one is scheduled @ 09/04/25 14:48:00.89
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 09/04/25 14:48:00.893
  STEP: Ensuring no more jobs are scheduled @ 09/04/25 14:48:00.897
  STEP: Removing cronjob @ 09/04/25 14:48:00.902
  I0904 14:48:00.909647 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-4843" for this suite. @ 09/04/25 14:48:00.915
• [32.058 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 09/04/25 14:48:00.923
  I0904 14:48:00.923709 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename init-container @ 09/04/25 14:48:00.924
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:48:00.946
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:48:00.95
  STEP: creating the pod @ 09/04/25 14:48:00.954
  I0904 14:48:00.954201 23 init_container.go:294] PodSpec: initContainers in spec.initContainers
  I0904 14:48:03.681821 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-7951" for this suite. @ 09/04/25 14:48:03.687
• [2.770 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:59
  STEP: Creating a kubernetes client @ 09/04/25 14:48:03.694
  I0904 14:48:03.694384 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/04/25 14:48:03.694
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:48:03.706
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:48:03.708
  I0904 14:48:03.710027 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  I0904 14:48:04.728021 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-4426" for this suite. @ 09/04/25 14:48:04.732
• [1.047 seconds]
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:240
  STEP: Creating a kubernetes client @ 09/04/25 14:48:04.741
  I0904 14:48:04.741051 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename configmap @ 09/04/25 14:48:04.741
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:48:04.756
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:48:04.758
  STEP: Creating configMap with name cm-test-opt-del-7919b986-d462-4495-a4bd-bfaaa44e208f @ 09/04/25 14:48:04.832
  STEP: Creating configMap with name cm-test-opt-upd-3c5806bf-3235-4492-8c6e-b366d89d535c @ 09/04/25 14:48:04.838
  STEP: Creating the pod @ 09/04/25 14:48:04.842
  STEP: Deleting configmap cm-test-opt-del-7919b986-d462-4495-a4bd-bfaaa44e208f @ 09/04/25 14:48:06.886
  STEP: Updating configmap cm-test-opt-upd-3c5806bf-3235-4492-8c6e-b366d89d535c @ 09/04/25 14:48:06.893
  STEP: Creating configMap with name cm-test-opt-create-99545b7d-207f-4718-842c-fc799b9d8921 @ 09/04/25 14:48:06.899
  STEP: waiting to observe update in volume @ 09/04/25 14:48:06.903
  I0904 14:48:10.944575 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8362" for this suite. @ 09/04/25 14:48:10.949
• [6.216 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:115
  STEP: Creating a kubernetes client @ 09/04/25 14:48:10.957
  I0904 14:48:10.957009 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename var-expansion @ 09/04/25 14:48:10.957
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:48:10.967
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:48:10.97
  STEP: Creating a pod to test substitution in volume subpath @ 09/04/25 14:48:10.972
  STEP: Saw pod success @ 09/04/25 14:48:12.99
  I0904 14:48:12.992792 23 output.go:207] Trying to get logs from node ip-172-31-18-79 pod var-expansion-623d2f37-6a1a-455d-9207-09ad20c4140a container dapi-container: <nil>
  STEP: delete the pod @ 09/04/25 14:48:13
  I0904 14:48:13.019611 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-2422" for this suite. @ 09/04/25 14:48:13.022
• [2.071 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 09/04/25 14:48:13.028
  I0904 14:48:13.028543 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename pods @ 09/04/25 14:48:13.028
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:48:13.04
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:48:13.042
  STEP: Saw pod success @ 09/04/25 14:48:17.087
  I0904 14:48:17.089870 23 output.go:207] Trying to get logs from node ip-172-31-18-79 pod client-envvars-8e85e1fa-c17e-4778-b28a-b5e863d7abdd container env3cont: <nil>
  STEP: delete the pod @ 09/04/25 14:48:17.096
  I0904 14:48:17.115858 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3326" for this suite. @ 09/04/25 14:48:17.118
• [4.095 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:47
  STEP: Creating a kubernetes client @ 09/04/25 14:48:17.123
  I0904 14:48:17.123202 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename var-expansion @ 09/04/25 14:48:17.123
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:48:17.137
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:48:17.14
  STEP: Creating a pod to test env composition @ 09/04/25 14:48:17.143
  STEP: Saw pod success @ 09/04/25 14:48:21.167
  I0904 14:48:21.170078 23 output.go:207] Trying to get logs from node ip-172-31-33-202 pod var-expansion-61b2cf56-6f6c-4c5c-acb9-80274b1c2a76 container dapi-container: <nil>
  STEP: delete the pod @ 09/04/25 14:48:21.176
  I0904 14:48:21.195633 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-2322" for this suite. @ 09/04/25 14:48:21.197
• [4.081 seconds]
------------------------------
SSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:57
  STEP: Creating a kubernetes client @ 09/04/25 14:48:21.204
  I0904 14:48:21.204018 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename runtimeclass @ 09/04/25 14:48:21.204
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:48:21.212
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:48:21.213
  I0904 14:48:21.270903 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-9032" for this suite. @ 09/04/25 14:48:21.298
• [0.101 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:69
  STEP: Creating a kubernetes client @ 09/04/25 14:48:21.304
  I0904 14:48:21.304839 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename downward-api @ 09/04/25 14:48:21.305
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:48:21.316
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:48:21.318
  STEP: Creating a pod to test downward API volume plugin @ 09/04/25 14:48:21.32
  STEP: Saw pod success @ 09/04/25 14:48:25.388
  I0904 14:48:25.392897 23 output.go:207] Trying to get logs from node ip-172-31-33-202 pod downwardapi-volume-5af04afb-14d4-4473-9c2f-4ae0ee1e7235 container client-container: <nil>
  STEP: delete the pod @ 09/04/25 14:48:25.398
  I0904 14:48:25.416415 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-901" for this suite. @ 09/04/25 14:48:25.419
• [4.121 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1074
  STEP: Creating a kubernetes client @ 09/04/25 14:48:25.425
  I0904 14:48:25.425513 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename resourcequota @ 09/04/25 14:48:25.426
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:48:25.441
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:48:25.443
  STEP: Creating resourceQuota "e2e-rq-status-nqzzg" @ 09/04/25 14:48:25.447
  I0904 14:48:25.456533 23 resource_quota.go:1110] Resource quota "e2e-rq-status-nqzzg" reports spec: hard cpu limit of 500m
  I0904 14:48:25.456548 23 resource_quota.go:1112] Resource quota "e2e-rq-status-nqzzg" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-nqzzg" /status @ 09/04/25 14:48:25.456
  STEP: Confirm /status for "e2e-rq-status-nqzzg" resourceQuota via watch @ 09/04/25 14:48:25.464
  I0904 14:48:25.465673 23 resource_quota.go:1139] observed resourceQuota "e2e-rq-status-nqzzg" in namespace "resourcequota-5026" with hard status: v1.ResourceList(nil)
  I0904 14:48:25.465717 23 resource_quota.go:1142] Found resourceQuota "e2e-rq-status-nqzzg" in namespace "resourcequota-5026" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I0904 14:48:25.465727 23 resource_quota.go:1149] ResourceQuota "e2e-rq-status-nqzzg" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 09/04/25 14:48:25.467
  I0904 14:48:25.473769 23 resource_quota.go:1160] Resource quota "e2e-rq-status-nqzzg" reports spec: hard cpu limit of 1
  I0904 14:48:25.473781 23 resource_quota.go:1161] Resource quota "e2e-rq-status-nqzzg" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-nqzzg" /status @ 09/04/25 14:48:25.473
  STEP: Confirm /status for "e2e-rq-status-nqzzg" resourceQuota via watch @ 09/04/25 14:48:25.479
  I0904 14:48:25.480733 23 resource_quota.go:1183] observed resourceQuota "e2e-rq-status-nqzzg" in namespace "resourcequota-5026" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I0904 14:48:25.480751 23 resource_quota.go:1186] Found resourceQuota "e2e-rq-status-nqzzg" in namespace "resourcequota-5026" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  I0904 14:48:25.480759 23 resource_quota.go:1193] ResourceQuota "e2e-rq-status-nqzzg" /status was patched
  STEP: Get "e2e-rq-status-nqzzg" /status @ 09/04/25 14:48:25.48
  I0904 14:48:25.485133 23 resource_quota.go:1204] Resourcequota "e2e-rq-status-nqzzg" reports status: hard cpu of 1
  I0904 14:48:25.485148 23 resource_quota.go:1206] Resourcequota "e2e-rq-status-nqzzg" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-nqzzg" /status before checking Spec is unchanged @ 09/04/25 14:48:25.487
  I0904 14:48:25.490460 23 resource_quota.go:1226] Resourcequota "e2e-rq-status-nqzzg" reports status: hard cpu of 2
  I0904 14:48:25.490476 23 resource_quota.go:1228] Resourcequota "e2e-rq-status-nqzzg" reports status: hard memory of 2Gi
  I0904 14:48:25.491336 23 resource_quota.go:1240] Found resourceQuota "e2e-rq-status-nqzzg" in namespace "resourcequota-5026" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  I0904 14:48:25.495112 23 resource_quota.go:1271] ResourceQuota "e2e-rq-status-nqzzg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nqzzg", GenerateName:"", Namespace:"resourcequota-5026", SelfLink:"", UID:"478a7e78-ad99-4138-b571-31e3487e382e", ResourceVersion:"9149", Generation:0, CreationTimestamp:time.Date(2025, time.September, 4, 14, 48, 25, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nqzzg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 4, 14, 48, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d95ab8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 4, 14, 48, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d95ae8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 4, 14, 48, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d95b18), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0904 14:48:30.497627 23 resource_quota.go:1271] ResourceQuota "e2e-rq-status-nqzzg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nqzzg", GenerateName:"", Namespace:"resourcequota-5026", SelfLink:"", UID:"478a7e78-ad99-4138-b571-31e3487e382e", ResourceVersion:"9149", Generation:0, CreationTimestamp:time.Date(2025, time.September, 4, 14, 48, 25, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nqzzg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 4, 14, 48, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d95c08), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 4, 14, 48, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d95c38), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 4, 14, 48, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d95c80), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0904 14:48:35.498008 23 resource_quota.go:1271] ResourceQuota "e2e-rq-status-nqzzg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nqzzg", GenerateName:"", Namespace:"resourcequota-5026", SelfLink:"", UID:"478a7e78-ad99-4138-b571-31e3487e382e", ResourceVersion:"9149", Generation:0, CreationTimestamp:time.Date(2025, time.September, 4, 14, 48, 25, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nqzzg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 4, 14, 48, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ca61c8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 4, 14, 48, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ca61f8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 4, 14, 48, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ca6228), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0904 14:48:40.497482 23 resource_quota.go:1271] ResourceQuota "e2e-rq-status-nqzzg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nqzzg", GenerateName:"", Namespace:"resourcequota-5026", SelfLink:"", UID:"478a7e78-ad99-4138-b571-31e3487e382e", ResourceVersion:"9149", Generation:0, CreationTimestamp:time.Date(2025, time.September, 4, 14, 48, 25, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nqzzg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 4, 14, 48, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ca6318), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 4, 14, 48, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ca6348), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 4, 14, 48, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ca6378), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0904 14:48:45.498437 23 resource_quota.go:1271] ResourceQuota "e2e-rq-status-nqzzg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nqzzg", GenerateName:"", Namespace:"resourcequota-5026", SelfLink:"", UID:"478a7e78-ad99-4138-b571-31e3487e382e", ResourceVersion:"9149", Generation:0, CreationTimestamp:time.Date(2025, time.September, 4, 14, 48, 25, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nqzzg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 4, 14, 48, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ca6480), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 4, 14, 48, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ca64c8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 4, 14, 48, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ca64f8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0904 14:48:50.497095 23 resource_quota.go:1271] ResourceQuota "e2e-rq-status-nqzzg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nqzzg", GenerateName:"", Namespace:"resourcequota-5026", SelfLink:"", UID:"478a7e78-ad99-4138-b571-31e3487e382e", ResourceVersion:"9149", Generation:0, CreationTimestamp:time.Date(2025, time.September, 4, 14, 48, 25, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nqzzg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 4, 14, 48, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d95d70), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 4, 14, 48, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d95da0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 4, 14, 48, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d95dd0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0904 14:48:55.498166 23 resource_quota.go:1271] ResourceQuota "e2e-rq-status-nqzzg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nqzzg", GenerateName:"", Namespace:"resourcequota-5026", SelfLink:"", UID:"478a7e78-ad99-4138-b571-31e3487e382e", ResourceVersion:"9149", Generation:0, CreationTimestamp:time.Date(2025, time.September, 4, 14, 48, 25, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nqzzg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 4, 14, 48, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d95ea8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 4, 14, 48, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d95ed8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 4, 14, 48, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d95f08), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0904 14:49:00.498103 23 resource_quota.go:1271] ResourceQuota "e2e-rq-status-nqzzg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nqzzg", GenerateName:"", Namespace:"resourcequota-5026", SelfLink:"", UID:"478a7e78-ad99-4138-b571-31e3487e382e", ResourceVersion:"9149", Generation:0, CreationTimestamp:time.Date(2025, time.September, 4, 14, 48, 25, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nqzzg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 4, 14, 48, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ca6618), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 4, 14, 48, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ca6648), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 4, 14, 48, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ca6678), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0904 14:49:05.496916 23 resource_quota.go:1271] ResourceQuota "e2e-rq-status-nqzzg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nqzzg", GenerateName:"", Namespace:"resourcequota-5026", SelfLink:"", UID:"478a7e78-ad99-4138-b571-31e3487e382e", ResourceVersion:"9149", Generation:0, CreationTimestamp:time.Date(2025, time.September, 4, 14, 48, 25, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nqzzg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 4, 14, 48, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00442c0c0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 4, 14, 48, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00442c108), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 4, 14, 48, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00442c180), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0904 14:49:10.494980 23 resource_quota.go:1271] ResourceQuota "e2e-rq-status-nqzzg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nqzzg", GenerateName:"", Namespace:"resourcequota-5026", SelfLink:"", UID:"478a7e78-ad99-4138-b571-31e3487e382e", ResourceVersion:"9149", Generation:0, CreationTimestamp:time.Date(2025, time.September, 4, 14, 48, 25, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nqzzg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 4, 14, 48, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00442c0c0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 4, 14, 48, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00442c108), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 4, 14, 48, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00442c180), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0904 14:49:15.497768 23 resource_quota.go:1271] ResourceQuota "e2e-rq-status-nqzzg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nqzzg", GenerateName:"", Namespace:"resourcequota-5026", SelfLink:"", UID:"478a7e78-ad99-4138-b571-31e3487e382e", ResourceVersion:"9149", Generation:0, CreationTimestamp:time.Date(2025, time.September, 4, 14, 48, 25, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nqzzg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 4, 14, 48, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ca6078), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 4, 14, 48, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ca60a8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 4, 14, 48, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ca60d8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0904 14:49:20.499067 23 resource_quota.go:1271] ResourceQuota "e2e-rq-status-nqzzg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nqzzg", GenerateName:"", Namespace:"resourcequota-5026", SelfLink:"", UID:"478a7e78-ad99-4138-b571-31e3487e382e", ResourceVersion:"9149", Generation:0, CreationTimestamp:time.Date(2025, time.September, 4, 14, 48, 25, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nqzzg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 4, 14, 48, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00442c2d0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 4, 14, 48, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00442c300), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 4, 14, 48, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00442c348), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0904 14:49:25.498706 23 resource_quota.go:1271] ResourceQuota "e2e-rq-status-nqzzg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nqzzg", GenerateName:"", Namespace:"resourcequota-5026", SelfLink:"", UID:"478a7e78-ad99-4138-b571-31e3487e382e", ResourceVersion:"9149", Generation:0, CreationTimestamp:time.Date(2025, time.September, 4, 14, 48, 25, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nqzzg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 4, 14, 48, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00442c450), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 4, 14, 48, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00442c480), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 4, 14, 48, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00442c4b0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0904 14:49:30.496394 23 resource_quota.go:1271] ResourceQuota "e2e-rq-status-nqzzg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nqzzg", GenerateName:"", Namespace:"resourcequota-5026", SelfLink:"", UID:"478a7e78-ad99-4138-b571-31e3487e382e", ResourceVersion:"9149", Generation:0, CreationTimestamp:time.Date(2025, time.September, 4, 14, 48, 25, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nqzzg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 4, 14, 48, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ca61f8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 4, 14, 48, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ca6228), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 4, 14, 48, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ca6258), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0904 14:49:35.500659 23 resource_quota.go:1271] ResourceQuota "e2e-rq-status-nqzzg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nqzzg", GenerateName:"", Namespace:"resourcequota-5026", SelfLink:"", UID:"478a7e78-ad99-4138-b571-31e3487e382e", ResourceVersion:"9149", Generation:0, CreationTimestamp:time.Date(2025, time.September, 4, 14, 48, 25, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nqzzg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 4, 14, 48, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00442c600), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 4, 14, 48, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00442c630), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 4, 14, 48, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00442c660), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0904 14:49:40.494958 23 resource_quota.go:1271] ResourceQuota "e2e-rq-status-nqzzg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nqzzg", GenerateName:"", Namespace:"resourcequota-5026", SelfLink:"", UID:"478a7e78-ad99-4138-b571-31e3487e382e", ResourceVersion:"9149", Generation:0, CreationTimestamp:time.Date(2025, time.September, 4, 14, 48, 25, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nqzzg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 4, 14, 48, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00442c840), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 4, 14, 48, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00442c870), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 4, 14, 48, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00442c8a0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0904 14:49:45.495120 23 resource_quota.go:1271] ResourceQuota "e2e-rq-status-nqzzg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nqzzg", GenerateName:"", Namespace:"resourcequota-5026", SelfLink:"", UID:"478a7e78-ad99-4138-b571-31e3487e382e", ResourceVersion:"9149", Generation:0, CreationTimestamp:time.Date(2025, time.September, 4, 14, 48, 25, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nqzzg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 4, 14, 48, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ca6348), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 4, 14, 48, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ca6378), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 4, 14, 48, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ca63a8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0904 14:49:50.499553 23 resource_quota.go:1271] ResourceQuota "e2e-rq-status-nqzzg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nqzzg", GenerateName:"", Namespace:"resourcequota-5026", SelfLink:"", UID:"478a7e78-ad99-4138-b571-31e3487e382e", ResourceVersion:"9149", Generation:0, CreationTimestamp:time.Date(2025, time.September, 4, 14, 48, 25, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nqzzg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 4, 14, 48, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ca64c8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 4, 14, 48, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ca64f8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 4, 14, 48, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ca6528), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0904 14:49:55.497622 23 resource_quota.go:1271] ResourceQuota "e2e-rq-status-nqzzg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nqzzg", GenerateName:"", Namespace:"resourcequota-5026", SelfLink:"", UID:"478a7e78-ad99-4138-b571-31e3487e382e", ResourceVersion:"9149", Generation:0, CreationTimestamp:time.Date(2025, time.September, 4, 14, 48, 25, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nqzzg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 4, 14, 48, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ca6618), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 4, 14, 48, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ca6648), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 4, 14, 48, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ca6678), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0904 14:50:00.498250 23 resource_quota.go:1271] ResourceQuota "e2e-rq-status-nqzzg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nqzzg", GenerateName:"", Namespace:"resourcequota-5026", SelfLink:"", UID:"478a7e78-ad99-4138-b571-31e3487e382e", ResourceVersion:"9149", Generation:0, CreationTimestamp:time.Date(2025, time.September, 4, 14, 48, 25, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nqzzg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 4, 14, 48, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ca6780), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 4, 14, 48, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ca67b0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 4, 14, 48, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ca67e0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0904 14:50:05.500056 23 resource_quota.go:1271] ResourceQuota "e2e-rq-status-nqzzg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nqzzg", GenerateName:"", Namespace:"resourcequota-5026", SelfLink:"", UID:"478a7e78-ad99-4138-b571-31e3487e382e", ResourceVersion:"9149", Generation:0, CreationTimestamp:time.Date(2025, time.September, 4, 14, 48, 25, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nqzzg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 4, 14, 48, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ca68e8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 4, 14, 48, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ca6918), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 4, 14, 48, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ca6948), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0904 14:50:10.497484 23 resource_quota.go:1271] ResourceQuota "e2e-rq-status-nqzzg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nqzzg", GenerateName:"", Namespace:"resourcequota-5026", SelfLink:"", UID:"478a7e78-ad99-4138-b571-31e3487e382e", ResourceVersion:"9149", Generation:0, CreationTimestamp:time.Date(2025, time.September, 4, 14, 48, 25, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nqzzg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 4, 14, 48, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00442c9f0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 4, 14, 48, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00442ca20), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 4, 14, 48, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00442ca50), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0904 14:50:15.498248 23 resource_quota.go:1271] ResourceQuota "e2e-rq-status-nqzzg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nqzzg", GenerateName:"", Namespace:"resourcequota-5026", SelfLink:"", UID:"478a7e78-ad99-4138-b571-31e3487e382e", ResourceVersion:"9149", Generation:0, CreationTimestamp:time.Date(2025, time.September, 4, 14, 48, 25, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nqzzg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 4, 14, 48, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ca6a68), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 4, 14, 48, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ca6a98), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 4, 14, 48, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ca6ac8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0904 14:50:20.499807 23 resource_quota.go:1271] ResourceQuota "e2e-rq-status-nqzzg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nqzzg", GenerateName:"", Namespace:"resourcequota-5026", SelfLink:"", UID:"478a7e78-ad99-4138-b571-31e3487e382e", ResourceVersion:"9149", Generation:0, CreationTimestamp:time.Date(2025, time.September, 4, 14, 48, 25, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nqzzg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 4, 14, 48, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ca6bb8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 4, 14, 48, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ca6be8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 4, 14, 48, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ca6c48), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0904 14:50:25.495896 23 resource_quota.go:1271] ResourceQuota "e2e-rq-status-nqzzg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nqzzg", GenerateName:"", Namespace:"resourcequota-5026", SelfLink:"", UID:"478a7e78-ad99-4138-b571-31e3487e382e", ResourceVersion:"9149", Generation:0, CreationTimestamp:time.Date(2025, time.September, 4, 14, 48, 25, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nqzzg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 4, 14, 48, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00442cb70), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 4, 14, 48, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00442cbb8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 4, 14, 48, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00442cc00), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0904 14:50:30.498009 23 resource_quota.go:1271] ResourceQuota "e2e-rq-status-nqzzg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nqzzg", GenerateName:"", Namespace:"resourcequota-5026", SelfLink:"", UID:"478a7e78-ad99-4138-b571-31e3487e382e", ResourceVersion:"9149", Generation:0, CreationTimestamp:time.Date(2025, time.September, 4, 14, 48, 25, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nqzzg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 4, 14, 48, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ca6d68), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 4, 14, 48, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ca6db0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 4, 14, 48, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ca6e10), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0904 14:50:35.500300 23 resource_quota.go:1271] ResourceQuota "e2e-rq-status-nqzzg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nqzzg", GenerateName:"", Namespace:"resourcequota-5026", SelfLink:"", UID:"478a7e78-ad99-4138-b571-31e3487e382e", ResourceVersion:"9149", Generation:0, CreationTimestamp:time.Date(2025, time.September, 4, 14, 48, 25, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nqzzg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 4, 14, 48, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00442cd08), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 4, 14, 48, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00442cd50), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 4, 14, 48, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00442cd80), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0904 14:50:40.498648 23 resource_quota.go:1271] ResourceQuota "e2e-rq-status-nqzzg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nqzzg", GenerateName:"", Namespace:"resourcequota-5026", SelfLink:"", UID:"478a7e78-ad99-4138-b571-31e3487e382e", ResourceVersion:"9149", Generation:0, CreationTimestamp:time.Date(2025, time.September, 4, 14, 48, 25, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nqzzg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 4, 14, 48, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00442ce70), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 4, 14, 48, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00442cea0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 4, 14, 48, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00442ced0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0904 14:50:45.497159 23 resource_quota.go:1271] ResourceQuota "e2e-rq-status-nqzzg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nqzzg", GenerateName:"", Namespace:"resourcequota-5026", SelfLink:"", UID:"478a7e78-ad99-4138-b571-31e3487e382e", ResourceVersion:"9149", Generation:0, CreationTimestamp:time.Date(2025, time.September, 4, 14, 48, 25, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nqzzg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 4, 14, 48, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ca6f60), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 4, 14, 48, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ca6fc0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 4, 14, 48, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ca6ff0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0904 14:50:50.497148 23 resource_quota.go:1271] ResourceQuota "e2e-rq-status-nqzzg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nqzzg", GenerateName:"", Namespace:"resourcequota-5026", SelfLink:"", UID:"478a7e78-ad99-4138-b571-31e3487e382e", ResourceVersion:"9149", Generation:0, CreationTimestamp:time.Date(2025, time.September, 4, 14, 48, 25, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nqzzg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 4, 14, 48, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ca7110), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 4, 14, 48, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ca7158), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 4, 14, 48, 25, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ca7188), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0904 14:50:55.498168 23 resource_quota.go:1268] ResourceQuota "e2e-rq-status-nqzzg" Spec was unchanged and /status reset
  I0904 14:50:55.498295 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5026" for this suite. @ 09/04/25 14:50:55.501
• [150.082 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:129
  STEP: Creating a kubernetes client @ 09/04/25 14:50:55.507
  I0904 14:50:55.507822 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename emptydir @ 09/04/25 14:50:55.508
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:50:55.521
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:50:55.523
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 09/04/25 14:50:55.525
  STEP: Saw pod success @ 09/04/25 14:50:59.543
  I0904 14:50:59.545950 23 output.go:207] Trying to get logs from node ip-172-31-33-202 pod pod-e858930a-509b-4261-93dd-49fa21d3772a container test-container: <nil>
  STEP: delete the pod @ 09/04/25 14:50:59.562
  I0904 14:50:59.579808 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1501" for this suite. @ 09/04/25 14:50:59.584
• [4.084 seconds]
------------------------------
SS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:90
  STEP: Creating a kubernetes client @ 09/04/25 14:50:59.591
  I0904 14:50:59.591399 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename disruption @ 09/04/25 14:50:59.591
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:50:59.601
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:50:59.602
  STEP: Creating a kubernetes client @ 09/04/25 14:50:59.605
  I0904 14:50:59.605694 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename disruption-2 @ 09/04/25 14:50:59.606
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:50:59.62
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:50:59.621
  STEP: Waiting for the pdb to be processed @ 09/04/25 14:50:59.63
  STEP: Waiting for the pdb to be processed @ 09/04/25 14:50:59.637
  STEP: Waiting for the pdb to be processed @ 09/04/25 14:51:01.647
  STEP: listing a collection of PDBs across all namespaces @ 09/04/25 14:51:03.654
  STEP: listing a collection of PDBs in namespace disruption-1744 @ 09/04/25 14:51:03.657
  STEP: deleting a collection of PDBs @ 09/04/25 14:51:03.659
  STEP: Waiting for the PDB collection to be deleted @ 09/04/25 14:51:03.674
  I0904 14:51:03.677049 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-3991" for this suite. @ 09/04/25 14:51:03.68
  I0904 14:51:03.684654 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-1744" for this suite. @ 09/04/25 14:51:03.781
• [4.199 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable as environment variable names with various prefixes [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:253
  STEP: Creating a kubernetes client @ 09/04/25 14:51:03.79
  I0904 14:51:03.790783 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename configmap @ 09/04/25 14:51:03.791
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:51:03.802
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:51:03.804
  STEP: Creating configMap configmap-7028/configmap-test-eed7c5f1-dc1b-4631-a47d-a2b3d722c1c4 @ 09/04/25 14:51:03.806
  STEP: Creating a pod to test consume configMaps @ 09/04/25 14:51:03.81
  STEP: Saw pod success @ 09/04/25 14:51:07.834
  I0904 14:51:07.838392 23 output.go:207] Trying to get logs from node ip-172-31-33-202 pod pod-configmaps-330c3213-d73a-4d2d-a2b4-ce48d5a1acd2 container env-test: <nil>
  STEP: delete the pod @ 09/04/25 14:51:07.848
  I0904 14:51:07.864748 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7028" for this suite. @ 09/04/25 14:51:07.867
• [4.082 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:79
  STEP: Creating a kubernetes client @ 09/04/25 14:51:07.873
  I0904 14:51:07.873268 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename svcaccounts @ 09/04/25 14:51:07.873
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:51:07.885
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:51:07.888
  STEP: reading a file in the container @ 09/04/25 14:51:09.921
  I0904 14:51:09.921729 23 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-5414 pod-service-account-390f09d6-67c4-4637-86c8-34ef473cdeb2 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 09/04/25 14:51:09.997
  I0904 14:51:09.997974 23 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-5414 pod-service-account-390f09d6-67c4-4637-86c8-34ef473cdeb2 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  STEP: reading a file in the container @ 09/04/25 14:51:10.069
  I0904 14:51:10.069817 23 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-5414 pod-service-account-390f09d6-67c4-4637-86c8-34ef473cdeb2 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  I0904 14:51:10.145412 23 service_accounts.go:119] Got root ca configmap in namespace "svcaccounts-5414"
  I0904 14:51:10.147139 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-5414" for this suite. @ 09/04/25 14:51:10.15
• [2.284 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:263
  STEP: Creating a kubernetes client @ 09/04/25 14:51:10.157
  I0904 14:51:10.157547 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename dns @ 09/04/25 14:51:10.157
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:51:10.166
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:51:10.168
  STEP: Creating a test headless service @ 09/04/25 14:51:10.171
  I0904 14:51:10.177794      23 warnings.go:110] "Warning: spec.SessionAffinity is ignored for headless services"
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-9526.svc.cluster.local)" && echo OK > /results/agnhost_hosts@dns-querier-2.dns-test-service-2.dns-9526.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/agnhost_hosts@dns-querier-2;sleep 1; done
   @ 09/04/25 14:51:10.177
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-9526.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-9526.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 09/04/25 14:51:10.177
  STEP: creating a pod to probe DNS @ 09/04/25 14:51:10.177
  STEP: submitting the pod to kubernetes @ 09/04/25 14:51:10.177
  STEP: retrieving the pod @ 09/04/25 14:51:12.198
  STEP: looking for the results for each expected name from probers @ 09/04/25 14:51:12.202
  I0904 14:51:12.221801 23 dns_common.go:546] DNS probes using dns-9526/dns-test-96ed25e9-9409-4f53-85a7-d5008c9f993d succeeded

  STEP: deleting the pod @ 09/04/25 14:51:12.221
  STEP: deleting the test headless service @ 09/04/25 14:51:12.241
  I0904 14:51:12.262319 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-9526" for this suite. @ 09/04/25 14:51:12.272
• [2.123 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:99
  STEP: Creating a kubernetes client @ 09/04/25 14:51:12.28
  I0904 14:51:12.280618 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename projected @ 09/04/25 14:51:12.281
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:51:12.348
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:51:12.35
  STEP: Creating configMap with name projected-configmap-test-volume-map-a704a1d7-1d57-435a-b829-8547f3cdded0 @ 09/04/25 14:51:12.352
  STEP: Creating a pod to test consume configMaps @ 09/04/25 14:51:12.357
  STEP: Saw pod success @ 09/04/25 14:51:16.38
  I0904 14:51:16.385620 23 output.go:207] Trying to get logs from node ip-172-31-33-202 pod pod-projected-configmaps-f242ff1f-4557-49b1-bbc0-3e9a39e62533 container agnhost-container: <nil>
  STEP: delete the pod @ 09/04/25 14:51:16.391
  I0904 14:51:16.412610 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1829" for this suite. @ 09/04/25 14:51:16.415
• [4.143 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:166
  STEP: Creating a kubernetes client @ 09/04/25 14:51:16.423
  I0904 14:51:16.423310 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename field-validation @ 09/04/25 14:51:16.423
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:51:16.437
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:51:16.439
  I0904 14:51:16.441401 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  I0904 14:51:16.450958      23 warnings.go:110] "Warning: unrecognized format \"int32\""
  I0904 14:51:18.971742      23 warnings.go:110] "Warning: unknown field \"alpha\""
  I0904 14:51:18.971760      23 warnings.go:110] "Warning: unknown field \"beta\""
  I0904 14:51:18.971766      23 warnings.go:110] "Warning: unknown field \"delta\""
  I0904 14:51:18.971770      23 warnings.go:110] "Warning: unknown field \"epsilon\""
  I0904 14:51:18.971773      23 warnings.go:110] "Warning: unknown field \"gamma\""
  I0904 14:51:19.518007 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-9688" for this suite. @ 09/04/25 14:51:19.523
• [3.106 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:330
  STEP: Creating a kubernetes client @ 09/04/25 14:51:19.529
  I0904 14:51:19.529377 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename gc @ 09/04/25 14:51:19.529
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:51:19.541
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:51:19.543
  STEP: create the rc @ 09/04/25 14:51:19.545
  I0904 14:51:19.550311      23 warnings.go:110] "Warning: metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]"
  STEP: delete the rc @ 09/04/25 14:51:24.553
  STEP: wait for all pods to be garbage collected @ 09/04/25 14:51:24.563
  STEP: Gathering metrics @ 09/04/25 14:51:29.574
  W0904 14:51:29.577338      23 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0904 14:51:29.577368 23 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0904 14:51:29.577538 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-2063" for this suite. @ 09/04/25 14:51:29.58
• [10.059 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:305
  STEP: Creating a kubernetes client @ 09/04/25 14:51:29.588
  I0904 14:51:29.588696 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename namespaces @ 09/04/25 14:51:29.589
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:51:29.601
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:51:29.603
  STEP: Read namespace status @ 09/04/25 14:51:29.606
  I0904 14:51:29.608052 23 namespace.go:318] Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 09/04/25 14:51:29.608
  I0904 14:51:29.613475 23 namespace.go:338] Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 09/04/25 14:51:29.613
  I0904 14:51:29.623080 23 namespace.go:363] Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  I0904 14:51:29.623181 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-3474" for this suite. @ 09/04/25 14:51:29.681
• [0.101 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:337
  STEP: Creating a kubernetes client @ 09/04/25 14:51:29.689
  I0904 14:51:29.689225 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename resourcequota @ 09/04/25 14:51:29.689
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:51:29.697
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:51:29.699
  STEP: Counting existing ResourceQuota @ 09/04/25 14:51:46.708
  STEP: Creating a ResourceQuota @ 09/04/25 14:51:51.715
  STEP: Ensuring resource quota status is calculated @ 09/04/25 14:51:51.72
  I0904 14:51:53.727475 23 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc0018ef180>: 
          metadata:
            creationTimestamp: "2025-09-04T14:51:51Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-04T14:51:51Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
                  f:used:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-04T14:51:51Z"
            name: test-quota
            namespace: resourcequota-9695
            resourceVersion: "10000"
            uid: 7cfd1829-371d-4284-a9a3-7c54fd00f831
          spec:
            hard:
              configmaps: "2"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
          status:
            hard:
              configmaps: "2"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
            used:
              configmaps: "1"
              count/replicasets.apps: "0"
              cpu: "0"
              ephemeral-storage: "0"
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
              gold.storageclass.storage.k8s.io/requests.storage: "0"
              memory: "0"
              persistentvolumeclaims: "0"
              pods: "0"
              replicationcontrollers: "0"
              requests.example.com/dongle: "0"
              requests.storage: "0"
              resourcequotas: "1"
              secrets: "0"
              services: "0"
              services.loadbalancers: "0"
              services.nodeports: "0"
  STEP: Creating a ConfigMap @ 09/04/25 14:51:53.727
  STEP: Ensuring resource quota status captures configMap creation @ 09/04/25 14:51:53.739
  I0904 14:51:53.744492 23 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc0018ef900>: 
          metadata:
            creationTimestamp: "2025-09-04T14:51:51Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-04T14:51:51Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
                  f:used:
                    .: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-04T14:51:51Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:used:
                    f:configmaps: {}
              manager: kube-apiserver
              operation: Update
              subresource: status
              time: "2025-09-04T14:51:53Z"
            name: test-quota
            namespace: resourcequota-9695
            resourceVersion: "10003"
            uid: 7cfd1829-371d-4284-a9a3-7c54fd00f831
          spec:
            hard:
              configmaps: "2"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
          status:
            hard:
              configmaps: "2"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
            used:
              configmaps: "2"
              count/replicasets.apps: "0"
              cpu: "0"
              ephemeral-storage: "0"
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
              gold.storageclass.storage.k8s.io/requests.storage: "0"
              memory: "0"
              persistentvolumeclaims: "0"
              pods: "0"
              replicationcontrollers: "0"
              requests.example.com/dongle: "0"
              requests.storage: "0"
              resourcequotas: "1"
              secrets: "0"
              services: "0"
              services.loadbalancers: "0"
              services.nodeports: "0"
  STEP: Deleting a ConfigMap @ 09/04/25 14:51:53.744
  STEP: Ensuring resource quota status released usage @ 09/04/25 14:51:53.752
  I0904 14:51:55.761775 23 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc001c2ab40>: 
          metadata:
            creationTimestamp: "2025-09-04T14:51:51Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-04T14:51:51Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
                  f:used:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-04T14:51:53Z"
            name: test-quota
            namespace: resourcequota-9695
            resourceVersion: "10006"
            uid: 7cfd1829-371d-4284-a9a3-7c54fd00f831
          spec:
            hard:
              configmaps: "2"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
          status:
            hard:
              configmaps: "2"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
            used:
              configmaps: "1"
              count/replicasets.apps: "0"
              cpu: "0"
              ephemeral-storage: "0"
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
              gold.storageclass.storage.k8s.io/requests.storage: "0"
              memory: "0"
              persistentvolumeclaims: "0"
              pods: "0"
              replicationcontrollers: "0"
              requests.example.com/dongle: "0"
              requests.storage: "0"
              resourcequotas: "1"
              secrets: "0"
              services: "0"
              services.loadbalancers: "0"
              services.nodeports: "0"
  I0904 14:51:55.762326 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9695" for this suite. @ 09/04/25 14:51:55.765
• [26.082 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:444
  STEP: Creating a kubernetes client @ 09/04/25 14:51:55.771
  I0904 14:51:55.771558 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/04/25 14:51:55.772
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:51:55.786
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:51:55.787
  STEP: set up a multi version CRD @ 09/04/25 14:51:55.789
  I0904 14:51:55.789913 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: mark a version not serverd @ 09/04/25 14:51:58.81
  STEP: check the unserved version gets removed @ 09/04/25 14:51:58.823
  STEP: check the other version is not changed @ 09/04/25 14:51:59.652
  I0904 14:52:02.048920 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-2100" for this suite. @ 09/04/25 14:52:02.054
• [6.288 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:270
  STEP: Creating a kubernetes client @ 09/04/25 14:52:02.059
  I0904 14:52:02.059961 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/04/25 14:52:02.06
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:52:02.072
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:52:02.074
  I0904 14:52:02.076454 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  I0904 14:52:05.144335 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-5115" for this suite. @ 09/04/25 14:52:05.15
• [3.096 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:96
  STEP: Creating a kubernetes client @ 09/04/25 14:52:05.155
  I0904 14:52:05.155706 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename pod-network-test @ 09/04/25 14:52:05.156
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:52:05.168
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:52:05.17
  STEP: Performing setup for networking test in namespace pod-network-test-659 @ 09/04/25 14:52:05.173
  STEP: creating a selector @ 09/04/25 14:52:05.173
  STEP: Creating the service pods in kubernetes @ 09/04/25 14:52:05.173
  I0904 14:52:05.173111 23 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 09/04/25 14:52:19.339
  I0904 14:52:21.359905 23 utils.go:803] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I0904 14:52:21.359939 23 networking.go:42] Breadth first check of 192.168.4.159 on host 172.31.18.79...
  I0904 14:52:21.363981 23 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.109.119:9080/dial?request=hostname&protocol=udp&host=192.168.4.159&port=8081&tries=1'] Namespace:pod-network-test-659 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0904 14:52:21.363998 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0904 14:52:21.364032 23 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/pod-network-test-659/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.109.119%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.4.159%26port%3D8081%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0904 14:52:21.401856 23 utils.go:356] Waiting for responses: map[]
  I0904 14:52:21.401875 23 utils.go:360] reached 192.168.4.159 after 0/1 tries
  I0904 14:52:21.401884 23 networking.go:42] Breadth first check of 192.168.109.118 on host 172.31.33.202...
  I0904 14:52:21.405127 23 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.109.119:9080/dial?request=hostname&protocol=udp&host=192.168.109.118&port=8081&tries=1'] Namespace:pod-network-test-659 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0904 14:52:21.405144 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0904 14:52:21.405176 23 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/pod-network-test-659/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.109.119%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.109.118%26port%3D8081%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0904 14:52:21.438656 23 utils.go:356] Waiting for responses: map[]
  I0904 14:52:21.438681 23 utils.go:360] reached 192.168.109.118 after 0/1 tries
  I0904 14:52:21.438691 23 networking.go:42] Breadth first check of 192.168.186.81 on host 172.31.87.111...
  I0904 14:52:21.443304 23 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.109.119:9080/dial?request=hostname&protocol=udp&host=192.168.186.81&port=8081&tries=1'] Namespace:pod-network-test-659 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0904 14:52:21.443317 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0904 14:52:21.443357 23 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/pod-network-test-659/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.109.119%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.186.81%26port%3D8081%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0904 14:52:21.478122 23 utils.go:356] Waiting for responses: map[]
  I0904 14:52:21.478143 23 utils.go:360] reached 192.168.186.81 after 0/1 tries
  I0904 14:52:21.478153 23 networking.go:53] Going to retry 0 out of 3 pods....
  I0904 14:52:21.478344 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-659" for this suite. @ 09/04/25 14:52:21.481
• [16.333 seconds]
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 09/04/25 14:52:21.488
  I0904 14:52:21.488386 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename projected @ 09/04/25 14:52:21.489
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:52:21.503
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:52:21.505
  STEP: Creating configMap with name configmap-projected-all-test-volume-a66d543e-50b0-43d5-ad2d-cb638422bb22 @ 09/04/25 14:52:21.508
  STEP: Creating secret with name secret-projected-all-test-volume-e6f46b6a-9894-4cd9-bf37-cd7e34b89c9e @ 09/04/25 14:52:21.511
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 09/04/25 14:52:21.515
  STEP: Saw pod success @ 09/04/25 14:52:25.535
  I0904 14:52:25.538958 23 output.go:207] Trying to get logs from node ip-172-31-33-202 pod projected-volume-d617b8b1-9c77-4ec0-9806-828bd8ec7ff8 container projected-all-volume-test: <nil>
  STEP: delete the pod @ 09/04/25 14:52:25.545
  I0904 14:52:25.564930 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4054" for this suite. @ 09/04/25 14:52:25.567
• [4.087 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:400
  STEP: Creating a kubernetes client @ 09/04/25 14:52:25.575
  I0904 14:52:25.575499 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename namespaces @ 09/04/25 14:52:25.575
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:52:25.587
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:52:25.589
  STEP: Creating namespace "e2e-ns-np2rj" @ 09/04/25 14:52:25.59
  I0904 14:52:25.602150 23 namespace.go:411] Namespace "e2e-ns-np2rj-2743" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-np2rj-2743" @ 09/04/25 14:52:25.602
  I0904 14:52:25.608714 23 namespace.go:434] Namespace "e2e-ns-np2rj-2743" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-np2rj-2743" @ 09/04/25 14:52:25.608
  I0904 14:52:25.617805 23 namespace.go:463] Namespace "e2e-ns-np2rj-2743" has []v1.FinalizerName{"kubernetes"}
  I0904 14:52:25.617879 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-993" for this suite. @ 09/04/25 14:52:25.668
  STEP: Destroying namespace "e2e-ns-np2rj-2743" for this suite. @ 09/04/25 14:52:25.676
• [0.106 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:69
  STEP: Creating a kubernetes client @ 09/04/25 14:52:25.682
  I0904 14:52:25.682546 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename endpointslice @ 09/04/25 14:52:25.683
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:52:25.693
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:52:25.695
  I0904 14:52:25.704220      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0904 14:52:25.709395 23 endpointslice.go:1059] Endpoints addresses: [172.31.16.153 172.31.81.110] , ports: [6443]
  I0904 14:52:25.709414 23 endpointslice.go:1089] EndpointSlices addresses: [172.31.16.153 172.31.81.110] , ports: [6443]
  I0904 14:52:25.709471 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-1386" for this suite. @ 09/04/25 14:52:25.769
• [0.091 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:399
  STEP: Creating a kubernetes client @ 09/04/25 14:52:25.774
  I0904 14:52:25.774094 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename webhook @ 09/04/25 14:52:25.774
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:52:25.789
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:52:25.791
  STEP: Setting up server cert @ 09/04/25 14:52:25.809
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/04/25 14:52:26.019
  STEP: Deploying the webhook pod @ 09/04/25 14:52:26.026
  STEP: Wait for the deployment to be ready @ 09/04/25 14:52:26.041
  I0904 14:52:26.047286 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/04/25 14:52:28.059
  STEP: Verifying the service has paired with the endpoint @ 09/04/25 14:52:28.073
  I0904 14:52:29.074108 23 util.go:419] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 09/04/25 14:52:29.08
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/04/25 14:52:29.096
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 09/04/25 14:52:29.103
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/04/25 14:52:29.111
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 09/04/25 14:52:29.12
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/04/25 14:52:29.129
  I0904 14:52:29.175312 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3929" for this suite. @ 09/04/25 14:52:29.178
  STEP: Destroying namespace "webhook-markers-7456" for this suite. @ 09/04/25 14:52:29.187
• [3.421 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:464
  STEP: Creating a kubernetes client @ 09/04/25 14:52:29.195
  I0904 14:52:29.195164 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename security-context-test @ 09/04/25 14:52:29.195
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:52:29.206
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:52:29.209
  I0904 14:52:31.223971 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-4876" for this suite. @ 09/04/25 14:52:31.229
• [2.040 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:195
  STEP: Creating a kubernetes client @ 09/04/25 14:52:31.235
  I0904 14:52:31.235144 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename webhook @ 09/04/25 14:52:31.235
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:52:31.246
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:52:31.248
  STEP: Setting up server cert @ 09/04/25 14:52:31.266
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/04/25 14:52:31.624
  STEP: Deploying the webhook pod @ 09/04/25 14:52:31.628
  STEP: Wait for the deployment to be ready @ 09/04/25 14:52:31.642
  I0904 14:52:31.649752 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/04/25 14:52:33.664
  STEP: Verifying the service has paired with the endpoint @ 09/04/25 14:52:33.676
  I0904 14:52:34.676562 23 util.go:419] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 09/04/25 14:52:34.681
  STEP: create a pod that should be denied by the webhook @ 09/04/25 14:52:34.701
  STEP: create a pod that causes the webhook to hang @ 09/04/25 14:52:34.72
  STEP: create a configmap that should be denied by the webhook @ 09/04/25 14:52:44.728
  STEP: create a configmap that should be admitted by the webhook @ 09/04/25 14:52:44.735
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 09/04/25 14:52:44.744
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 09/04/25 14:52:44.752
  STEP: create a namespace that bypass the webhook @ 09/04/25 14:52:44.756
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 09/04/25 14:52:44.768
  I0904 14:52:44.820337 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7539" for this suite. @ 09/04/25 14:52:44.823
  STEP: Destroying namespace "webhook-markers-5623" for this suite. @ 09/04/25 14:52:44.83
  STEP: Destroying namespace "exempted-namespace-2363" for this suite. @ 09/04/25 14:52:44.838
• [13.609 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:620
  STEP: Creating a kubernetes client @ 09/04/25 14:52:44.844
  I0904 14:52:44.844613 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename field-validation @ 09/04/25 14:52:44.845
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:52:44.855
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:52:44.857
  I0904 14:52:44.859732 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  I0904 14:52:44.866128      23 warnings.go:110] "Warning: unrecognized format \"int32\""
  I0904 14:52:47.386771      23 warnings.go:110] "Warning: unknown field \"alpha\""
  I0904 14:52:47.386790      23 warnings.go:110] "Warning: unknown field \"beta\""
  I0904 14:52:47.386794      23 warnings.go:110] "Warning: unknown field \"delta\""
  I0904 14:52:47.386799      23 warnings.go:110] "Warning: unknown field \"epsilon\""
  I0904 14:52:47.386802      23 warnings.go:110] "Warning: unknown field \"gamma\""
  I0904 14:52:47.921848 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-3710" for this suite. @ 09/04/25 14:52:47.926
• [3.090 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 09/04/25 14:52:47.934
  I0904 14:52:47.934652 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename watch @ 09/04/25 14:52:47.935
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:52:47.945
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:52:47.946
  STEP: creating a watch on configmaps with a certain label @ 09/04/25 14:52:47.949
  STEP: creating a new configmap @ 09/04/25 14:52:47.953
  STEP: modifying the configmap once @ 09/04/25 14:52:47.957
  STEP: changing the label value of the configmap @ 09/04/25 14:52:47.964
  STEP: Expecting to observe a delete notification for the watched object @ 09/04/25 14:52:47.971
  I0904 14:52:47.971608 23 watch.go:426] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-371  c83f4b5c-6fdd-4a51-b9d5-709ac1b505aa 10564 0 2025-09-04 14:52:47 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-09-04 14:52:47 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0904 14:52:47.971708 23 watch.go:426] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-371  c83f4b5c-6fdd-4a51-b9d5-709ac1b505aa 10565 0 2025-09-04 14:52:47 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-09-04 14:52:47 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0904 14:52:47.971751 23 watch.go:426] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-371  c83f4b5c-6fdd-4a51-b9d5-709ac1b505aa 10566 0 2025-09-04 14:52:47 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-09-04 14:52:47 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 09/04/25 14:52:47.971
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 09/04/25 14:52:47.976
  STEP: changing the label value of the configmap back @ 09/04/25 14:52:57.977
  STEP: modifying the configmap a third time @ 09/04/25 14:52:57.989
  STEP: deleting the configmap @ 09/04/25 14:52:57.995
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 09/04/25 14:52:58.001
  I0904 14:52:58.001811 23 watch.go:426] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-371  c83f4b5c-6fdd-4a51-b9d5-709ac1b505aa 10623 0 2025-09-04 14:52:47 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-09-04 14:52:57 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0904 14:52:58.002025 23 watch.go:426] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-371  c83f4b5c-6fdd-4a51-b9d5-709ac1b505aa 10624 0 2025-09-04 14:52:47 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-09-04 14:52:57 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0904 14:52:58.002141 23 watch.go:426] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-371  c83f4b5c-6fdd-4a51-b9d5-709ac1b505aa 10625 0 2025-09-04 14:52:47 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2025-09-04 14:52:57 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0904 14:52:58.002285 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-371" for this suite. @ 09/04/25 14:52:58.005
• [10.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 09/04/25 14:52:58.012
  I0904 14:52:58.012358 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename deployment @ 09/04/25 14:52:58.012
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:52:58.025
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:52:58.027
  I0904 14:52:58.029732 23 deployment.go:1215] Creating deployment "webserver-deployment"
  I0904 14:52:58.033515 23 deployment.go:1219] Waiting for observed generation 1
  I0904 14:53:00.041679 23 deployment.go:1224] Waiting for all required pods to come up
  I0904 14:53:00.047376 23 resource.go:64] Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 09/04/25 14:53:00.047
  I0904 14:53:00.047450 23 deployment.go:1228] Waiting for deployment "webserver-deployment" to complete
  I0904 14:53:00.053814 23 deployment.go:1237] Updating deployment "webserver-deployment" with a non-existent image
  I0904 14:53:00.064615 23 deployment.go:314] Updating deployment webserver-deployment
  I0904 14:53:00.064638 23 deployment.go:1243] Waiting for observed generation 2
  I0904 14:53:02.072027 23 deployment.go:1253] Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  I0904 14:53:02.074343 23 deployment.go:1258] Waiting for the first rollout's replicaset to have .spec.replicas = 8
  I0904 14:53:02.076309 23 deployment.go:1263] Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I0904 14:53:02.084862 23 deployment.go:1277] Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  I0904 14:53:02.084883 23 deployment.go:1282] Waiting for the second rollout's replicaset to have .spec.replicas = 5
  I0904 14:53:02.088685 23 deployment.go:1287] Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I0904 14:53:02.092659 23 deployment.go:1294] Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  I0904 14:53:02.092672 23 deployment.go:1302] Scaling up the deployment "webserver-deployment" from 10 to 30
  I0904 14:53:02.102872 23 deployment.go:314] Updating deployment webserver-deployment
  I0904 14:53:02.102896 23 deployment.go:1308] Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  I0904 14:53:02.128020 23 deployment.go:1316] Verifying that first rollout's replicaset has .spec.replicas = 20
  I0904 14:53:02.158721 23 deployment.go:1322] Verifying that second rollout's replicaset has .spec.replicas = 13
  I0904 14:53:04.165884 23 deployment.go:632] Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3250",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8bf6c1b6-01fe-4263-ac06-3d9c73c51b84",
      ResourceVersion: (string) (len=5) "11184",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892594378,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594382,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594384,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          HostnameOverride: (*string)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 3,
      Replicas: (int32) 33,
      UpdatedReplicas: (int32) 13,
      ReadyReplicas: (int32) 18,
      AvailableReplicas: (int32) 18,
      UnavailableReplicas: (int32) 15,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594382,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594382,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594384,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594378,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=60) "ReplicaSet \"webserver-deployment-76fc67f65c\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0904 14:53:04.171044 23 deployment.go:40] New ReplicaSet "webserver-deployment-76fc67f65c" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-76fc67f65c",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3250",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a9aec87d-8d42-49d1-80fd-73b05b35f45b",
      ResourceVersion: (string) (len=5) "10964",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892594380,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "76fc67f65c"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "8bf6c1b6-01fe-4263-ac06-3d9c73c51b84",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594382,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 38 62 66 36 63 31  62 36 2d 30 31 66 65 2d  |\"8bf6c1b6-01fe-|
              00000120  34 32 36 33 2d 61 63 30  36 2d 33 64 39 63 37 33  |4263-ac06-3d9c73|
              00000130  63 35 31 62 38 34 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |c51b84\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594382,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "76fc67f65c"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "76fc67f65c"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          HostnameOverride: (*string)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 13,
      FullyLabeledReplicas: (int32) 13,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0904 14:53:04.171435 23 deployment.go:45] All old ReplicaSets of Deployment "webserver-deployment":
  I0904 14:53:04.171624 23 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-6bc58496c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3250",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8b93614e-a639-4cab-bf2d-973dca28d832",
      ResourceVersion: (string) (len=5) "11183",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892594378,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "8bf6c1b6-01fe-4263-ac06-3d9c73c51b84",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594382,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 38 62 66 36 63 31  62 36 2d 30 31 66 65 2d  |\"8bf6c1b6-01fe-|
              00000120  34 32 36 33 2d 61 63 30  36 2d 33 64 39 63 37 33  |4263-ac06-3d9c73|
              00000130  63 35 31 62 38 34 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |c51b84\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594384,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          HostnameOverride: (*string)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 20,
      FullyLabeledReplicas: (int32) 20,
      ReadyReplicas: (int32) 18,
      AvailableReplicas: (int32) 18,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0904 14:53:04.182411 23 deployment.go:68] Pod "webserver-deployment-6bc58496c7-2wbnb" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6bc58496c7-2wbnb",
      GenerateName: (string) (len=32) "webserver-deployment-6bc58496c7-",
      Namespace: (string) (len=15) "deployment-3250",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bf60b47d-55ec-41bf-983c-5521a9d012f0",
      ResourceVersion: (string) (len=5) "11080",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892594382,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6bc58496c7",
          UID: (types.UID) (len=36) "8b93614e-a639-4cab-bf2d-973dca28d832",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594382,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 62  39 33 36 31 34 65 2d 61  |d\":\"8b93614e-a|
              00000090  36 33 39 2d 34 63 61 62  2d 62 66 32 64 2d 39 37  |639-4cab-bf2d-97|
              000000a0  33 64 63 61 32 38 64 38  33 32 5c 22 7d 22 3a 7b  |3dca28d832\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594383,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=852) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6f 62 73 65 72 76  |me":{},"f:observ|
              00000080  65 64 47 65 6e 65 72 61  74 69 6f 6e 22 3a 7b 7d  |edGeneration":{}|
              00000090  2c 22 66 3a 73 74 61 74  75 73 22 3a 7b 7d 2c 22  |,"f:status":{},"|
              000000a0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |f:type":{}},"k:{|
              000000b0  5c 22 74 79 70 65 5c 22  3a 5c 22 49 6e 69 74 69  |\"type\":\"Initi|
              000000c0  61 6c 69 7a 65 64 5c 22  7d 22 3a 7b 22 2e 22 3a  |alized\"}":{".":|
              000000d0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000000f0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              00000100  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000110  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000120  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000130  65 22 3a 7b 7d 7d 2c 22  6b 3a 7b 5c 22 74 79 70  |e":{}},"k:{\"typ|
              00000140  65 5c 22 3a 5c 22 50 6f  64 52 65 61 64 79 54 6f  |e\":\"PodReadyTo|
              00000150  53 74 61 72 74 43 6f 6e  74 61 69 6e 65 72 73 5c  |StartContainers\|
              00000160  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 6c  |"}":{".":{},"f:l|
              00000170  61 73 74 50 72 6f 62 65  54 69 6d 65 22 3a 7b 7d  |astProbeTime":{}|
              00000180  2c 22 66 3a 6c 61 73 74  54 72 61 6e 73 69 74 69  |,"f:lastTransiti|
              00000190  6f 6e 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6f 62  |onTime":{},"f:ob|
              000001a0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001b0  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              000001c0  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000001d0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              000001e0  6f 64 53 63 68 65 64 75  6c 65 64 5c 22 7d 22 3a  |odScheduled\"}":|
              000001f0  7b 22 66 3a 6f 62 73 65  72 76 65 64 47 65 6e 65  |{"f:observedGene|
              00000200  72 61 74 69 6f 6e 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |ration":{}},"k:{|
              00000210  5c 22 74 79 70 65 5c 22  3a 5c 22 52 65 61 64 79  |\"type\":\"Ready|
              00000220  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000230  6c 61 73 74 50 72 6f 62  65 54 69 6d 65 22 3a 7b  |lastProbeTime":{|
              00000240  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000250  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6f  |ionTime":{},"f:o|
              00000260  62 73 65 72 76 65 64 47  65 6e 65 72 61 74 69 6f  |bservedGeneratio|
              00000270  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000280  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000290  7d 2c 22 66 3a 63 6f 6e  74 61 69 6e 65 72 53 74  |},"f:containerSt|
              000002a0  61 74 75 73 65 73 22 3a  7b 7d 2c 22 66 3a 68 6f  |atuses":{},"f:ho|
              000002b0  73 74 49 50 22 3a 7b 7d  2c 22 66 3a 68 6f 73 74  |stIP":{},"f:host|
              000002c0  49 50 73 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |IPs":{},"f:obser|
              000002d0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002e0  7d 2c 22 66 3a 70 68 61  73 65 22 3a 7b 7d 2c 22  |},"f:phase":{},"|
              000002f0  66 3a 70 6f 64 49 50 22  3a 7b 7d 2c 22 66 3a 70  |f:podIP":{},"f:p|
              00000300  6f 64 49 50 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |odIPs":{".":{},"|
              00000310  6b 3a 7b 5c 22 69 70 5c  22 3a 5c 22 31 39 32 2e  |k:{\"ip\":\"192.|
              00000320  31 36 38 2e 34 2e 31 36  35 5c 22 7d 22 3a 7b 22  |168.4.165\"}":{"|
              00000330  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000340  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000350  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jn5hw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jn5hw",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-18-79",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594383,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594382,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594383,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594383,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594382,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.18.79",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.18.79"
        }
      },
      PodIP: (string) (len=13) "192.168.4.165",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.4.165"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892594382,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63892594383,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://d19fe94cc458d78068e5bd7b8bacacf12833294edb94e7d303c7dbc7bf326c8b",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-jn5hw",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0904 14:53:04.183454 23 deployment.go:68] Pod "webserver-deployment-6bc58496c7-4ldtk" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6bc58496c7-4ldtk",
      GenerateName: (string) (len=32) "webserver-deployment-6bc58496c7-",
      Namespace: (string) (len=15) "deployment-3250",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8a2cd24f-350c-4ddc-95cd-dc4b8b331f22",
      ResourceVersion: (string) (len=5) "11135",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892594382,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6bc58496c7",
          UID: (types.UID) (len=36) "8b93614e-a639-4cab-bf2d-973dca28d832",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594382,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 62  39 33 36 31 34 65 2d 61  |d\":\"8b93614e-a|
              00000090  36 33 39 2d 34 63 61 62  2d 62 66 32 64 2d 39 37  |639-4cab-bf2d-97|
              000000a0  33 64 63 61 32 38 64 38  33 32 5c 22 7d 22 3a 7b  |3dca28d832\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594383,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=853) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6f 62 73 65 72 76  |me":{},"f:observ|
              00000080  65 64 47 65 6e 65 72 61  74 69 6f 6e 22 3a 7b 7d  |edGeneration":{}|
              00000090  2c 22 66 3a 73 74 61 74  75 73 22 3a 7b 7d 2c 22  |,"f:status":{},"|
              000000a0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |f:type":{}},"k:{|
              000000b0  5c 22 74 79 70 65 5c 22  3a 5c 22 49 6e 69 74 69  |\"type\":\"Initi|
              000000c0  61 6c 69 7a 65 64 5c 22  7d 22 3a 7b 22 2e 22 3a  |alized\"}":{".":|
              000000d0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000000f0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              00000100  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000110  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000120  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000130  65 22 3a 7b 7d 7d 2c 22  6b 3a 7b 5c 22 74 79 70  |e":{}},"k:{\"typ|
              00000140  65 5c 22 3a 5c 22 50 6f  64 52 65 61 64 79 54 6f  |e\":\"PodReadyTo|
              00000150  53 74 61 72 74 43 6f 6e  74 61 69 6e 65 72 73 5c  |StartContainers\|
              00000160  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 6c  |"}":{".":{},"f:l|
              00000170  61 73 74 50 72 6f 62 65  54 69 6d 65 22 3a 7b 7d  |astProbeTime":{}|
              00000180  2c 22 66 3a 6c 61 73 74  54 72 61 6e 73 69 74 69  |,"f:lastTransiti|
              00000190  6f 6e 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6f 62  |onTime":{},"f:ob|
              000001a0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001b0  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              000001c0  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000001d0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              000001e0  6f 64 53 63 68 65 64 75  6c 65 64 5c 22 7d 22 3a  |odScheduled\"}":|
              000001f0  7b 22 66 3a 6f 62 73 65  72 76 65 64 47 65 6e 65  |{"f:observedGene|
              00000200  72 61 74 69 6f 6e 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |ration":{}},"k:{|
              00000210  5c 22 74 79 70 65 5c 22  3a 5c 22 52 65 61 64 79  |\"type\":\"Ready|
              00000220  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000230  6c 61 73 74 50 72 6f 62  65 54 69 6d 65 22 3a 7b  |lastProbeTime":{|
              00000240  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000250  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6f  |ionTime":{},"f:o|
              00000260  62 73 65 72 76 65 64 47  65 6e 65 72 61 74 69 6f  |bservedGeneratio|
              00000270  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000280  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000290  7d 2c 22 66 3a 63 6f 6e  74 61 69 6e 65 72 53 74  |},"f:containerSt|
              000002a0  61 74 75 73 65 73 22 3a  7b 7d 2c 22 66 3a 68 6f  |atuses":{},"f:ho|
              000002b0  73 74 49 50 22 3a 7b 7d  2c 22 66 3a 68 6f 73 74  |stIP":{},"f:host|
              000002c0  49 50 73 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |IPs":{},"f:obser|
              000002d0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002e0  7d 2c 22 66 3a 70 68 61  73 65 22 3a 7b 7d 2c 22  |},"f:phase":{},"|
              000002f0  66 3a 70 6f 64 49 50 22  3a 7b 7d 2c 22 66 3a 70  |f:podIP":{},"f:p|
              00000300  6f 64 49 50 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |odIPs":{".":{},"|
              00000310  6b 3a 7b 5c 22 69 70 5c  22 3a 5c 22 31 39 32 2e  |k:{\"ip\":\"192.|
              00000320  31 36 38 2e 31 38 36 2e  39 30 5c 22 7d 22 3a 7b  |168.186.90\"}":{|
              00000330  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000340  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000350  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7hdmr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7hdmr",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-87-111",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594383,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594382,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594383,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594383,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594382,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.87.111",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.87.111"
        }
      },
      PodIP: (string) (len=14) "192.168.186.90",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.186.90"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892594382,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63892594383,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://33b620e7ec9b3438ade1577b16176f4aa881fa96bc4440cae99534a77a60c15a",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-7hdmr",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0904 14:53:04.184634 23 deployment.go:68] Pod "webserver-deployment-6bc58496c7-b7z5n" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6bc58496c7-b7z5n",
      GenerateName: (string) (len=32) "webserver-deployment-6bc58496c7-",
      Namespace: (string) (len=15) "deployment-3250",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e0d9ec72-a521-4668-9f40-c26e4f915e75",
      ResourceVersion: (string) (len=5) "10776",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892594378,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6bc58496c7",
          UID: (types.UID) (len=36) "8b93614e-a639-4cab-bf2d-973dca28d832",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594378,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 62  39 33 36 31 34 65 2d 61  |d\":\"8b93614e-a|
              00000090  36 33 39 2d 34 63 61 62  2d 62 66 32 64 2d 39 37  |639-4cab-bf2d-97|
              000000a0  33 64 63 61 32 38 64 38  33 32 5c 22 7d 22 3a 7b  |3dca28d832\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594379,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=853) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6f 62 73 65 72 76  |me":{},"f:observ|
              00000080  65 64 47 65 6e 65 72 61  74 69 6f 6e 22 3a 7b 7d  |edGeneration":{}|
              00000090  2c 22 66 3a 73 74 61 74  75 73 22 3a 7b 7d 2c 22  |,"f:status":{},"|
              000000a0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |f:type":{}},"k:{|
              000000b0  5c 22 74 79 70 65 5c 22  3a 5c 22 49 6e 69 74 69  |\"type\":\"Initi|
              000000c0  61 6c 69 7a 65 64 5c 22  7d 22 3a 7b 22 2e 22 3a  |alized\"}":{".":|
              000000d0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000000f0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              00000100  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000110  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000120  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000130  65 22 3a 7b 7d 7d 2c 22  6b 3a 7b 5c 22 74 79 70  |e":{}},"k:{\"typ|
              00000140  65 5c 22 3a 5c 22 50 6f  64 52 65 61 64 79 54 6f  |e\":\"PodReadyTo|
              00000150  53 74 61 72 74 43 6f 6e  74 61 69 6e 65 72 73 5c  |StartContainers\|
              00000160  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 6c  |"}":{".":{},"f:l|
              00000170  61 73 74 50 72 6f 62 65  54 69 6d 65 22 3a 7b 7d  |astProbeTime":{}|
              00000180  2c 22 66 3a 6c 61 73 74  54 72 61 6e 73 69 74 69  |,"f:lastTransiti|
              00000190  6f 6e 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6f 62  |onTime":{},"f:ob|
              000001a0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001b0  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              000001c0  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000001d0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              000001e0  6f 64 53 63 68 65 64 75  6c 65 64 5c 22 7d 22 3a  |odScheduled\"}":|
              000001f0  7b 22 66 3a 6f 62 73 65  72 76 65 64 47 65 6e 65  |{"f:observedGene|
              00000200  72 61 74 69 6f 6e 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |ration":{}},"k:{|
              00000210  5c 22 74 79 70 65 5c 22  3a 5c 22 52 65 61 64 79  |\"type\":\"Ready|
              00000220  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000230  6c 61 73 74 50 72 6f 62  65 54 69 6d 65 22 3a 7b  |lastProbeTime":{|
              00000240  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000250  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6f  |ionTime":{},"f:o|
              00000260  62 73 65 72 76 65 64 47  65 6e 65 72 61 74 69 6f  |bservedGeneratio|
              00000270  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000280  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000290  7d 2c 22 66 3a 63 6f 6e  74 61 69 6e 65 72 53 74  |},"f:containerSt|
              000002a0  61 74 75 73 65 73 22 3a  7b 7d 2c 22 66 3a 68 6f  |atuses":{},"f:ho|
              000002b0  73 74 49 50 22 3a 7b 7d  2c 22 66 3a 68 6f 73 74  |stIP":{},"f:host|
              000002c0  49 50 73 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |IPs":{},"f:obser|
              000002d0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002e0  7d 2c 22 66 3a 70 68 61  73 65 22 3a 7b 7d 2c 22  |},"f:phase":{},"|
              000002f0  66 3a 70 6f 64 49 50 22  3a 7b 7d 2c 22 66 3a 70  |f:podIP":{},"f:p|
              00000300  6f 64 49 50 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |odIPs":{".":{},"|
              00000310  6b 3a 7b 5c 22 69 70 5c  22 3a 5c 22 31 39 32 2e  |k:{\"ip\":\"192.|
              00000320  31 36 38 2e 31 38 36 2e  38 34 5c 22 7d 22 3a 7b  |168.186.84\"}":{|
              00000330  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000340  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000350  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2ks84",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2ks84",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-87-111",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594379,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594378,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594379,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594379,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594378,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.87.111",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.87.111"
        }
      },
      PodIP: (string) (len=14) "192.168.186.84",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.186.84"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892594378,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63892594378,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://3ff126cd85969e885c874ed997860624470bcc636d009b1dfd46407cb36dd013",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-2ks84",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0904 14:53:04.185944 23 deployment.go:68] Pod "webserver-deployment-6bc58496c7-gz4ss" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6bc58496c7-gz4ss",
      GenerateName: (string) (len=32) "webserver-deployment-6bc58496c7-",
      Namespace: (string) (len=15) "deployment-3250",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "88b65927-3457-4318-a564-4d342d560d88",
      ResourceVersion: (string) (len=5) "10763",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892594378,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6bc58496c7",
          UID: (types.UID) (len=36) "8b93614e-a639-4cab-bf2d-973dca28d832",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594378,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 62  39 33 36 31 34 65 2d 61  |d\":\"8b93614e-a|
              00000090  36 33 39 2d 34 63 61 62  2d 62 66 32 64 2d 39 37  |639-4cab-bf2d-97|
              000000a0  33 64 63 61 32 38 64 38  33 32 5c 22 7d 22 3a 7b  |3dca28d832\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594379,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=852) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6f 62 73 65 72 76  |me":{},"f:observ|
              00000080  65 64 47 65 6e 65 72 61  74 69 6f 6e 22 3a 7b 7d  |edGeneration":{}|
              00000090  2c 22 66 3a 73 74 61 74  75 73 22 3a 7b 7d 2c 22  |,"f:status":{},"|
              000000a0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |f:type":{}},"k:{|
              000000b0  5c 22 74 79 70 65 5c 22  3a 5c 22 49 6e 69 74 69  |\"type\":\"Initi|
              000000c0  61 6c 69 7a 65 64 5c 22  7d 22 3a 7b 22 2e 22 3a  |alized\"}":{".":|
              000000d0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000000f0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              00000100  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000110  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000120  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000130  65 22 3a 7b 7d 7d 2c 22  6b 3a 7b 5c 22 74 79 70  |e":{}},"k:{\"typ|
              00000140  65 5c 22 3a 5c 22 50 6f  64 52 65 61 64 79 54 6f  |e\":\"PodReadyTo|
              00000150  53 74 61 72 74 43 6f 6e  74 61 69 6e 65 72 73 5c  |StartContainers\|
              00000160  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 6c  |"}":{".":{},"f:l|
              00000170  61 73 74 50 72 6f 62 65  54 69 6d 65 22 3a 7b 7d  |astProbeTime":{}|
              00000180  2c 22 66 3a 6c 61 73 74  54 72 61 6e 73 69 74 69  |,"f:lastTransiti|
              00000190  6f 6e 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6f 62  |onTime":{},"f:ob|
              000001a0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001b0  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              000001c0  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000001d0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              000001e0  6f 64 53 63 68 65 64 75  6c 65 64 5c 22 7d 22 3a  |odScheduled\"}":|
              000001f0  7b 22 66 3a 6f 62 73 65  72 76 65 64 47 65 6e 65  |{"f:observedGene|
              00000200  72 61 74 69 6f 6e 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |ration":{}},"k:{|
              00000210  5c 22 74 79 70 65 5c 22  3a 5c 22 52 65 61 64 79  |\"type\":\"Ready|
              00000220  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000230  6c 61 73 74 50 72 6f 62  65 54 69 6d 65 22 3a 7b  |lastProbeTime":{|
              00000240  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000250  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6f  |ionTime":{},"f:o|
              00000260  62 73 65 72 76 65 64 47  65 6e 65 72 61 74 69 6f  |bservedGeneratio|
              00000270  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000280  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000290  7d 2c 22 66 3a 63 6f 6e  74 61 69 6e 65 72 53 74  |},"f:containerSt|
              000002a0  61 74 75 73 65 73 22 3a  7b 7d 2c 22 66 3a 68 6f  |atuses":{},"f:ho|
              000002b0  73 74 49 50 22 3a 7b 7d  2c 22 66 3a 68 6f 73 74  |stIP":{},"f:host|
              000002c0  49 50 73 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |IPs":{},"f:obser|
              000002d0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002e0  7d 2c 22 66 3a 70 68 61  73 65 22 3a 7b 7d 2c 22  |},"f:phase":{},"|
              000002f0  66 3a 70 6f 64 49 50 22  3a 7b 7d 2c 22 66 3a 70  |f:podIP":{},"f:p|
              00000300  6f 64 49 50 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |odIPs":{".":{},"|
              00000310  6b 3a 7b 5c 22 69 70 5c  22 3a 5c 22 31 39 32 2e  |k:{\"ip\":\"192.|
              00000320  31 36 38 2e 34 2e 31 36  30 5c 22 7d 22 3a 7b 22  |168.4.160\"}":{"|
              00000330  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000340  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000350  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-75wps",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-75wps",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-18-79",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594379,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594378,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594379,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594379,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594378,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.18.79",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.18.79"
        }
      },
      PodIP: (string) (len=13) "192.168.4.160",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.4.160"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892594378,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63892594378,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://669ffc2a65d3646c5305454c5232380bf826b7b74d411d50f7ce754d2787b519",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-75wps",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0904 14:53:04.188605 23 deployment.go:68] Pod "webserver-deployment-6bc58496c7-jtmft" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6bc58496c7-jtmft",
      GenerateName: (string) (len=32) "webserver-deployment-6bc58496c7-",
      Namespace: (string) (len=15) "deployment-3250",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9a25408c-594e-486a-9ab2-628473bbe71f",
      ResourceVersion: (string) (len=5) "11174",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892594382,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6bc58496c7",
          UID: (types.UID) (len=36) "8b93614e-a639-4cab-bf2d-973dca28d832",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594382,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 62  39 33 36 31 34 65 2d 61  |d\":\"8b93614e-a|
              00000090  36 33 39 2d 34 63 61 62  2d 62 66 32 64 2d 39 37  |639-4cab-bf2d-97|
              000000a0  33 64 63 61 32 38 64 38  33 32 5c 22 7d 22 3a 7b  |3dca28d832\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594384,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=853) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6f 62 73 65 72 76  |me":{},"f:observ|
              00000080  65 64 47 65 6e 65 72 61  74 69 6f 6e 22 3a 7b 7d  |edGeneration":{}|
              00000090  2c 22 66 3a 73 74 61 74  75 73 22 3a 7b 7d 2c 22  |,"f:status":{},"|
              000000a0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |f:type":{}},"k:{|
              000000b0  5c 22 74 79 70 65 5c 22  3a 5c 22 49 6e 69 74 69  |\"type\":\"Initi|
              000000c0  61 6c 69 7a 65 64 5c 22  7d 22 3a 7b 22 2e 22 3a  |alized\"}":{".":|
              000000d0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000000f0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              00000100  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000110  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000120  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000130  65 22 3a 7b 7d 7d 2c 22  6b 3a 7b 5c 22 74 79 70  |e":{}},"k:{\"typ|
              00000140  65 5c 22 3a 5c 22 50 6f  64 52 65 61 64 79 54 6f  |e\":\"PodReadyTo|
              00000150  53 74 61 72 74 43 6f 6e  74 61 69 6e 65 72 73 5c  |StartContainers\|
              00000160  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 6c  |"}":{".":{},"f:l|
              00000170  61 73 74 50 72 6f 62 65  54 69 6d 65 22 3a 7b 7d  |astProbeTime":{}|
              00000180  2c 22 66 3a 6c 61 73 74  54 72 61 6e 73 69 74 69  |,"f:lastTransiti|
              00000190  6f 6e 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6f 62  |onTime":{},"f:ob|
              000001a0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001b0  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              000001c0  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000001d0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              000001e0  6f 64 53 63 68 65 64 75  6c 65 64 5c 22 7d 22 3a  |odScheduled\"}":|
              000001f0  7b 22 66 3a 6f 62 73 65  72 76 65 64 47 65 6e 65  |{"f:observedGene|
              00000200  72 61 74 69 6f 6e 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |ration":{}},"k:{|
              00000210  5c 22 74 79 70 65 5c 22  3a 5c 22 52 65 61 64 79  |\"type\":\"Ready|
              00000220  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000230  6c 61 73 74 50 72 6f 62  65 54 69 6d 65 22 3a 7b  |lastProbeTime":{|
              00000240  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000250  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6f  |ionTime":{},"f:o|
              00000260  62 73 65 72 76 65 64 47  65 6e 65 72 61 74 69 6f  |bservedGeneratio|
              00000270  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000280  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000290  7d 2c 22 66 3a 63 6f 6e  74 61 69 6e 65 72 53 74  |},"f:containerSt|
              000002a0  61 74 75 73 65 73 22 3a  7b 7d 2c 22 66 3a 68 6f  |atuses":{},"f:ho|
              000002b0  73 74 49 50 22 3a 7b 7d  2c 22 66 3a 68 6f 73 74  |stIP":{},"f:host|
              000002c0  49 50 73 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |IPs":{},"f:obser|
              000002d0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002e0  7d 2c 22 66 3a 70 68 61  73 65 22 3a 7b 7d 2c 22  |},"f:phase":{},"|
              000002f0  66 3a 70 6f 64 49 50 22  3a 7b 7d 2c 22 66 3a 70  |f:podIP":{},"f:p|
              00000300  6f 64 49 50 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |odIPs":{".":{},"|
              00000310  6b 3a 7b 5c 22 69 70 5c  22 3a 5c 22 31 39 32 2e  |k:{\"ip\":\"192.|
              00000320  31 36 38 2e 31 30 39 2e  37 32 5c 22 7d 22 3a 7b  |168.109.72\"}":{|
              00000330  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000340  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000350  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-cbnwm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-cbnwm",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-33-202",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594383,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594382,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594383,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594383,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594382,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.33.202",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.33.202"
        }
      },
      PodIP: (string) (len=14) "192.168.109.72",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.109.72"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892594382,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63892594383,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://a7c0619e3096e308a0689cdc42fbe590cc7f3bb61fc5727c94c3da0787a60a48",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-cbnwm",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0904 14:53:04.190294 23 deployment.go:68] Pod "webserver-deployment-6bc58496c7-kgrfh" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6bc58496c7-kgrfh",
      GenerateName: (string) (len=32) "webserver-deployment-6bc58496c7-",
      Namespace: (string) (len=15) "deployment-3250",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1e427487-4994-4a72-a65c-6685b36c3536",
      ResourceVersion: (string) (len=5) "11139",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892594382,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6bc58496c7",
          UID: (types.UID) (len=36) "8b93614e-a639-4cab-bf2d-973dca28d832",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594382,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 62  39 33 36 31 34 65 2d 61  |d\":\"8b93614e-a|
              00000090  36 33 39 2d 34 63 61 62  2d 62 66 32 64 2d 39 37  |639-4cab-bf2d-97|
              000000a0  33 64 63 61 32 38 64 38  33 32 5c 22 7d 22 3a 7b  |3dca28d832\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594383,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=853) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6f 62 73 65 72 76  |me":{},"f:observ|
              00000080  65 64 47 65 6e 65 72 61  74 69 6f 6e 22 3a 7b 7d  |edGeneration":{}|
              00000090  2c 22 66 3a 73 74 61 74  75 73 22 3a 7b 7d 2c 22  |,"f:status":{},"|
              000000a0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |f:type":{}},"k:{|
              000000b0  5c 22 74 79 70 65 5c 22  3a 5c 22 49 6e 69 74 69  |\"type\":\"Initi|
              000000c0  61 6c 69 7a 65 64 5c 22  7d 22 3a 7b 22 2e 22 3a  |alized\"}":{".":|
              000000d0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000000f0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              00000100  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000110  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000120  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000130  65 22 3a 7b 7d 7d 2c 22  6b 3a 7b 5c 22 74 79 70  |e":{}},"k:{\"typ|
              00000140  65 5c 22 3a 5c 22 50 6f  64 52 65 61 64 79 54 6f  |e\":\"PodReadyTo|
              00000150  53 74 61 72 74 43 6f 6e  74 61 69 6e 65 72 73 5c  |StartContainers\|
              00000160  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 6c  |"}":{".":{},"f:l|
              00000170  61 73 74 50 72 6f 62 65  54 69 6d 65 22 3a 7b 7d  |astProbeTime":{}|
              00000180  2c 22 66 3a 6c 61 73 74  54 72 61 6e 73 69 74 69  |,"f:lastTransiti|
              00000190  6f 6e 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6f 62  |onTime":{},"f:ob|
              000001a0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001b0  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              000001c0  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000001d0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              000001e0  6f 64 53 63 68 65 64 75  6c 65 64 5c 22 7d 22 3a  |odScheduled\"}":|
              000001f0  7b 22 66 3a 6f 62 73 65  72 76 65 64 47 65 6e 65  |{"f:observedGene|
              00000200  72 61 74 69 6f 6e 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |ration":{}},"k:{|
              00000210  5c 22 74 79 70 65 5c 22  3a 5c 22 52 65 61 64 79  |\"type\":\"Ready|
              00000220  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000230  6c 61 73 74 50 72 6f 62  65 54 69 6d 65 22 3a 7b  |lastProbeTime":{|
              00000240  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000250  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6f  |ionTime":{},"f:o|
              00000260  62 73 65 72 76 65 64 47  65 6e 65 72 61 74 69 6f  |bservedGeneratio|
              00000270  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000280  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000290  7d 2c 22 66 3a 63 6f 6e  74 61 69 6e 65 72 53 74  |},"f:containerSt|
              000002a0  61 74 75 73 65 73 22 3a  7b 7d 2c 22 66 3a 68 6f  |atuses":{},"f:ho|
              000002b0  73 74 49 50 22 3a 7b 7d  2c 22 66 3a 68 6f 73 74  |stIP":{},"f:host|
              000002c0  49 50 73 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |IPs":{},"f:obser|
              000002d0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002e0  7d 2c 22 66 3a 70 68 61  73 65 22 3a 7b 7d 2c 22  |},"f:phase":{},"|
              000002f0  66 3a 70 6f 64 49 50 22  3a 7b 7d 2c 22 66 3a 70  |f:podIP":{},"f:p|
              00000300  6f 64 49 50 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |odIPs":{".":{},"|
              00000310  6b 3a 7b 5c 22 69 70 5c  22 3a 5c 22 31 39 32 2e  |k:{\"ip\":\"192.|
              00000320  31 36 38 2e 31 38 36 2e  38 37 5c 22 7d 22 3a 7b  |168.186.87\"}":{|
              00000330  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000340  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000350  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-nhsp6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-nhsp6",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-87-111",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594383,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594382,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594383,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594383,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594382,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.87.111",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.87.111"
        }
      },
      PodIP: (string) (len=14) "192.168.186.87",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.186.87"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892594382,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63892594383,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://bd95ba88f5bea95572f2bab5164a111134adcd52250100702467449d8f8251d4",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-nhsp6",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0904 14:53:04.192003 23 deployment.go:68] Pod "webserver-deployment-6bc58496c7-l75gq" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6bc58496c7-l75gq",
      GenerateName: (string) (len=32) "webserver-deployment-6bc58496c7-",
      Namespace: (string) (len=15) "deployment-3250",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "808e97bb-65ba-478d-a702-0f9c0d3c7e25",
      ResourceVersion: (string) (len=5) "11182",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892594382,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6bc58496c7",
          UID: (types.UID) (len=36) "8b93614e-a639-4cab-bf2d-973dca28d832",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594382,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 62  39 33 36 31 34 65 2d 61  |d\":\"8b93614e-a|
              00000090  36 33 39 2d 34 63 61 62  2d 62 66 32 64 2d 39 37  |639-4cab-bf2d-97|
              000000a0  33 64 63 61 32 38 64 38  33 32 5c 22 7d 22 3a 7b  |3dca28d832\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594384,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=852) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6f 62 73 65 72 76  |me":{},"f:observ|
              00000080  65 64 47 65 6e 65 72 61  74 69 6f 6e 22 3a 7b 7d  |edGeneration":{}|
              00000090  2c 22 66 3a 73 74 61 74  75 73 22 3a 7b 7d 2c 22  |,"f:status":{},"|
              000000a0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |f:type":{}},"k:{|
              000000b0  5c 22 74 79 70 65 5c 22  3a 5c 22 49 6e 69 74 69  |\"type\":\"Initi|
              000000c0  61 6c 69 7a 65 64 5c 22  7d 22 3a 7b 22 2e 22 3a  |alized\"}":{".":|
              000000d0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000000f0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              00000100  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000110  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000120  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000130  65 22 3a 7b 7d 7d 2c 22  6b 3a 7b 5c 22 74 79 70  |e":{}},"k:{\"typ|
              00000140  65 5c 22 3a 5c 22 50 6f  64 52 65 61 64 79 54 6f  |e\":\"PodReadyTo|
              00000150  53 74 61 72 74 43 6f 6e  74 61 69 6e 65 72 73 5c  |StartContainers\|
              00000160  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 6c  |"}":{".":{},"f:l|
              00000170  61 73 74 50 72 6f 62 65  54 69 6d 65 22 3a 7b 7d  |astProbeTime":{}|
              00000180  2c 22 66 3a 6c 61 73 74  54 72 61 6e 73 69 74 69  |,"f:lastTransiti|
              00000190  6f 6e 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6f 62  |onTime":{},"f:ob|
              000001a0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001b0  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              000001c0  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000001d0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              000001e0  6f 64 53 63 68 65 64 75  6c 65 64 5c 22 7d 22 3a  |odScheduled\"}":|
              000001f0  7b 22 66 3a 6f 62 73 65  72 76 65 64 47 65 6e 65  |{"f:observedGene|
              00000200  72 61 74 69 6f 6e 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |ration":{}},"k:{|
              00000210  5c 22 74 79 70 65 5c 22  3a 5c 22 52 65 61 64 79  |\"type\":\"Ready|
              00000220  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000230  6c 61 73 74 50 72 6f 62  65 54 69 6d 65 22 3a 7b  |lastProbeTime":{|
              00000240  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000250  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6f  |ionTime":{},"f:o|
              00000260  62 73 65 72 76 65 64 47  65 6e 65 72 61 74 69 6f  |bservedGeneratio|
              00000270  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000280  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000290  7d 2c 22 66 3a 63 6f 6e  74 61 69 6e 65 72 53 74  |},"f:containerSt|
              000002a0  61 74 75 73 65 73 22 3a  7b 7d 2c 22 66 3a 68 6f  |atuses":{},"f:ho|
              000002b0  73 74 49 50 22 3a 7b 7d  2c 22 66 3a 68 6f 73 74  |stIP":{},"f:host|
              000002c0  49 50 73 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |IPs":{},"f:obser|
              000002d0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002e0  7d 2c 22 66 3a 70 68 61  73 65 22 3a 7b 7d 2c 22  |},"f:phase":{},"|
              000002f0  66 3a 70 6f 64 49 50 22  3a 7b 7d 2c 22 66 3a 70  |f:podIP":{},"f:p|
              00000300  6f 64 49 50 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |odIPs":{".":{},"|
              00000310  6b 3a 7b 5c 22 69 70 5c  22 3a 5c 22 31 39 32 2e  |k:{\"ip\":\"192.|
              00000320  31 36 38 2e 34 2e 31 37  30 5c 22 7d 22 3a 7b 22  |168.4.170\"}":{"|
              00000330  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000340  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000350  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mhvg8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mhvg8",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-18-79",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594384,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594382,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594384,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594384,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594382,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.18.79",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.18.79"
        }
      },
      PodIP: (string) (len=13) "192.168.4.170",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.4.170"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892594382,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63892594383,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://4d2ba7ccc56a852d56d06c47edc50515a9a775c451bd86fbe5eb17109c4db114",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-mhvg8",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0904 14:53:04.193051 23 deployment.go:68] Pod "webserver-deployment-6bc58496c7-n952f" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6bc58496c7-n952f",
      GenerateName: (string) (len=32) "webserver-deployment-6bc58496c7-",
      Namespace: (string) (len=15) "deployment-3250",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6bfa0f81-4c7c-4bf8-bd78-aff197408651",
      ResourceVersion: (string) (len=5) "10756",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892594378,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6bc58496c7",
          UID: (types.UID) (len=36) "8b93614e-a639-4cab-bf2d-973dca28d832",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594378,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 62  39 33 36 31 34 65 2d 61  |d\":\"8b93614e-a|
              00000090  36 33 39 2d 34 63 61 62  2d 62 66 32 64 2d 39 37  |639-4cab-bf2d-97|
              000000a0  33 64 63 61 32 38 64 38  33 32 5c 22 7d 22 3a 7b  |3dca28d832\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594378,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=854) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6f 62 73 65 72 76  |me":{},"f:observ|
              00000080  65 64 47 65 6e 65 72 61  74 69 6f 6e 22 3a 7b 7d  |edGeneration":{}|
              00000090  2c 22 66 3a 73 74 61 74  75 73 22 3a 7b 7d 2c 22  |,"f:status":{},"|
              000000a0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |f:type":{}},"k:{|
              000000b0  5c 22 74 79 70 65 5c 22  3a 5c 22 49 6e 69 74 69  |\"type\":\"Initi|
              000000c0  61 6c 69 7a 65 64 5c 22  7d 22 3a 7b 22 2e 22 3a  |alized\"}":{".":|
              000000d0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000000f0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              00000100  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000110  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000120  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000130  65 22 3a 7b 7d 7d 2c 22  6b 3a 7b 5c 22 74 79 70  |e":{}},"k:{\"typ|
              00000140  65 5c 22 3a 5c 22 50 6f  64 52 65 61 64 79 54 6f  |e\":\"PodReadyTo|
              00000150  53 74 61 72 74 43 6f 6e  74 61 69 6e 65 72 73 5c  |StartContainers\|
              00000160  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 6c  |"}":{".":{},"f:l|
              00000170  61 73 74 50 72 6f 62 65  54 69 6d 65 22 3a 7b 7d  |astProbeTime":{}|
              00000180  2c 22 66 3a 6c 61 73 74  54 72 61 6e 73 69 74 69  |,"f:lastTransiti|
              00000190  6f 6e 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6f 62  |onTime":{},"f:ob|
              000001a0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001b0  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              000001c0  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000001d0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              000001e0  6f 64 53 63 68 65 64 75  6c 65 64 5c 22 7d 22 3a  |odScheduled\"}":|
              000001f0  7b 22 66 3a 6f 62 73 65  72 76 65 64 47 65 6e 65  |{"f:observedGene|
              00000200  72 61 74 69 6f 6e 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |ration":{}},"k:{|
              00000210  5c 22 74 79 70 65 5c 22  3a 5c 22 52 65 61 64 79  |\"type\":\"Ready|
              00000220  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000230  6c 61 73 74 50 72 6f 62  65 54 69 6d 65 22 3a 7b  |lastProbeTime":{|
              00000240  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000250  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6f  |ionTime":{},"f:o|
              00000260  62 73 65 72 76 65 64 47  65 6e 65 72 61 74 69 6f  |bservedGeneratio|
              00000270  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000280  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000290  7d 2c 22 66 3a 63 6f 6e  74 61 69 6e 65 72 53 74  |},"f:containerSt|
              000002a0  61 74 75 73 65 73 22 3a  7b 7d 2c 22 66 3a 68 6f  |atuses":{},"f:ho|
              000002b0  73 74 49 50 22 3a 7b 7d  2c 22 66 3a 68 6f 73 74  |stIP":{},"f:host|
              000002c0  49 50 73 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |IPs":{},"f:obser|
              000002d0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002e0  7d 2c 22 66 3a 70 68 61  73 65 22 3a 7b 7d 2c 22  |},"f:phase":{},"|
              000002f0  66 3a 70 6f 64 49 50 22  3a 7b 7d 2c 22 66 3a 70  |f:podIP":{},"f:p|
              00000300  6f 64 49 50 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |odIPs":{".":{},"|
              00000310  6b 3a 7b 5c 22 69 70 5c  22 3a 5c 22 31 39 32 2e  |k:{\"ip\":\"192.|
              00000320  31 36 38 2e 31 30 39 2e  31 32 35 5c 22 7d 22 3a  |168.109.125\"}":|
              00000330  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000340  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000350  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8gr8c",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8gr8c",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-33-202",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594378,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594378,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594378,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594378,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594378,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.33.202",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.33.202"
        }
      },
      PodIP: (string) (len=15) "192.168.109.125",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.109.125"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892594378,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63892594378,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://1a3cae1aeedfc194435b048f526bdc1d79c884aa193ad796cf5cf5ca9e2905f8",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-8gr8c",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0904 14:53:04.194215 23 deployment.go:68] Pod "webserver-deployment-6bc58496c7-nfg7r" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6bc58496c7-nfg7r",
      GenerateName: (string) (len=32) "webserver-deployment-6bc58496c7-",
      Namespace: (string) (len=15) "deployment-3250",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7b4218a1-23a1-472b-936a-a306d514bf79",
      ResourceVersion: (string) (len=5) "11186",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892594382,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6bc58496c7",
          UID: (types.UID) (len=36) "8b93614e-a639-4cab-bf2d-973dca28d832",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594382,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 62  39 33 36 31 34 65 2d 61  |d\":\"8b93614e-a|
              00000090  36 33 39 2d 34 63 61 62  2d 62 66 32 64 2d 39 37  |639-4cab-bf2d-97|
              000000a0  33 64 63 61 32 38 64 38  33 32 5c 22 7d 22 3a 7b  |3dca28d832\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594384,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=852) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6f 62 73 65 72 76  |me":{},"f:observ|
              00000080  65 64 47 65 6e 65 72 61  74 69 6f 6e 22 3a 7b 7d  |edGeneration":{}|
              00000090  2c 22 66 3a 73 74 61 74  75 73 22 3a 7b 7d 2c 22  |,"f:status":{},"|
              000000a0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |f:type":{}},"k:{|
              000000b0  5c 22 74 79 70 65 5c 22  3a 5c 22 49 6e 69 74 69  |\"type\":\"Initi|
              000000c0  61 6c 69 7a 65 64 5c 22  7d 22 3a 7b 22 2e 22 3a  |alized\"}":{".":|
              000000d0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000000f0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              00000100  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000110  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000120  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000130  65 22 3a 7b 7d 7d 2c 22  6b 3a 7b 5c 22 74 79 70  |e":{}},"k:{\"typ|
              00000140  65 5c 22 3a 5c 22 50 6f  64 52 65 61 64 79 54 6f  |e\":\"PodReadyTo|
              00000150  53 74 61 72 74 43 6f 6e  74 61 69 6e 65 72 73 5c  |StartContainers\|
              00000160  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 6c  |"}":{".":{},"f:l|
              00000170  61 73 74 50 72 6f 62 65  54 69 6d 65 22 3a 7b 7d  |astProbeTime":{}|
              00000180  2c 22 66 3a 6c 61 73 74  54 72 61 6e 73 69 74 69  |,"f:lastTransiti|
              00000190  6f 6e 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6f 62  |onTime":{},"f:ob|
              000001a0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001b0  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              000001c0  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000001d0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              000001e0  6f 64 53 63 68 65 64 75  6c 65 64 5c 22 7d 22 3a  |odScheduled\"}":|
              000001f0  7b 22 66 3a 6f 62 73 65  72 76 65 64 47 65 6e 65  |{"f:observedGene|
              00000200  72 61 74 69 6f 6e 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |ration":{}},"k:{|
              00000210  5c 22 74 79 70 65 5c 22  3a 5c 22 52 65 61 64 79  |\"type\":\"Ready|
              00000220  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000230  6c 61 73 74 50 72 6f 62  65 54 69 6d 65 22 3a 7b  |lastProbeTime":{|
              00000240  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000250  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6f  |ionTime":{},"f:o|
              00000260  62 73 65 72 76 65 64 47  65 6e 65 72 61 74 69 6f  |bservedGeneratio|
              00000270  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000280  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000290  7d 2c 22 66 3a 63 6f 6e  74 61 69 6e 65 72 53 74  |},"f:containerSt|
              000002a0  61 74 75 73 65 73 22 3a  7b 7d 2c 22 66 3a 68 6f  |atuses":{},"f:ho|
              000002b0  73 74 49 50 22 3a 7b 7d  2c 22 66 3a 68 6f 73 74  |stIP":{},"f:host|
              000002c0  49 50 73 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |IPs":{},"f:obser|
              000002d0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002e0  7d 2c 22 66 3a 70 68 61  73 65 22 3a 7b 7d 2c 22  |},"f:phase":{},"|
              000002f0  66 3a 70 6f 64 49 50 22  3a 7b 7d 2c 22 66 3a 70  |f:podIP":{},"f:p|
              00000300  6f 64 49 50 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |odIPs":{".":{},"|
              00000310  6b 3a 7b 5c 22 69 70 5c  22 3a 5c 22 31 39 32 2e  |k:{\"ip\":\"192.|
              00000320  31 36 38 2e 34 2e 31 36  39 5c 22 7d 22 3a 7b 22  |168.4.169\"}":{"|
              00000330  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000340  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000350  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mpvn2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mpvn2",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-18-79",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594384,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594382,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594384,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594384,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594382,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.18.79",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.18.79"
        }
      },
      PodIP: (string) (len=13) "192.168.4.169",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.4.169"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892594382,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63892594383,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://4d00ddfcece925714c3e5ea4cda2ae0e35ee47a8ab3dd21b8adbd239e1dcb35e",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-mpvn2",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0904 14:53:04.195211 23 deployment.go:68] Pod "webserver-deployment-6bc58496c7-nlxkb" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6bc58496c7-nlxkb",
      GenerateName: (string) (len=32) "webserver-deployment-6bc58496c7-",
      Namespace: (string) (len=15) "deployment-3250",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a2099396-22a9-4a52-9ebf-7ec57d1592a6",
      ResourceVersion: (string) (len=5) "10974",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892594382,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6bc58496c7",
          UID: (types.UID) (len=36) "8b93614e-a639-4cab-bf2d-973dca28d832",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594382,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 62  39 33 36 31 34 65 2d 61  |d\":\"8b93614e-a|
              00000090  36 33 39 2d 34 63 61 62  2d 62 66 32 64 2d 39 37  |639-4cab-bf2d-97|
              000000a0  33 64 63 61 32 38 64 38  33 32 5c 22 7d 22 3a 7b  |3dca28d832\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594382,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=814) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 6f 62 73 65 72 76 65  |e":{},"f:observe|
              00000090  64 47 65 6e 65 72 61 74  69 6f 6e 22 3a 7b 7d 2c  |dGeneration":{},|
              000000a0  22 66 3a 72 65 61 73 6f  6e 22 3a 7b 7d 2c 22 66  |"f:reason":{},"f|
              000000b0  3a 73 74 61 74 75 73 22  3a 7b 7d 2c 22 66 3a 74  |:status":{},"f:t|
              000000c0  79 70 65 22 3a 7b 7d 7d  2c 22 6b 3a 7b 5c 22 74  |ype":{}},"k:{\"t|
              000000d0  79 70 65 5c 22 3a 5c 22  49 6e 69 74 69 61 6c 69  |ype\":\"Initiali|
              000000e0  7a 65 64 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |zed\"}":{".":{},|
              000000f0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              00000110  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              00000120  66 3a 6f 62 73 65 72 76  65 64 47 65 6e 65 72 61  |f:observedGenera|
              00000130  74 69 6f 6e 22 3a 7b 7d  2c 22 66 3a 73 74 61 74  |tion":{},"f:stat|
              00000140  75 73 22 3a 7b 7d 2c 22  66 3a 74 79 70 65 22 3a  |us":{},"f:type":|
              00000150  7b 7d 7d 2c 22 6b 3a 7b  5c 22 74 79 70 65 5c 22  |{}},"k:{\"type\"|
              00000160  3a 5c 22 50 6f 64 52 65  61 64 79 54 6f 53 74 61  |:\"PodReadyToSta|
              00000170  72 74 43 6f 6e 74 61 69  6e 65 72 73 5c 22 7d 22  |rtContainers\"}"|
              00000180  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000190  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000001a0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |ime":{},"f:obser|
              000001c0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 2c 22 6b 3a  |"f:type":{}},"k:|
              000001f0  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 50 6f 64 53  |{\"type\":\"PodS|
              00000200  63 68 65 64 75 6c 65 64  5c 22 7d 22 3a 7b 22 66  |cheduled\"}":{"f|
              00000210  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000220  69 6f 6e 22 3a 7b 7d 7d  2c 22 6b 3a 7b 5c 22 74  |ion":{}},"k:{\"t|
              00000230  79 70 65 5c 22 3a 5c 22  52 65 61 64 79 5c 22 7d  |ype\":\"Ready\"}|
              00000240  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              00000250  74 50 72 6f 62 65 54 69  6d 65 22 3a 7b 7d 2c 22  |tProbeTime":{},"|
              00000260  66 3a 6c 61 73 74 54 72  61 6e 73 69 74 69 6f 6e  |f:lastTransition|
              00000270  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000280  61 67 65 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |age":{},"f:obser|
              00000290  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002a0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              000002b0  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              000002c0  3a 74 79 70 65 22 3a 7b  7d 7d 7d 2c 22 66 3a 63  |:type":{}}},"f:c|
              000002d0  6f 6e 74 61 69 6e 65 72  53 74 61 74 75 73 65 73  |ontainerStatuses|
              000002e0  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 22 3a  |":{},"f:hostIP":|
              000002f0  7b 7d 2c 22 66 3a 68 6f  73 74 49 50 73 22 3a 7b  |{},"f:hostIPs":{|
              00000300  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000310  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000320  74 61 72 74 54 69 6d 65  22 3a 7b 7d 7d 7d        |tartTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-v5qs8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-v5qs8",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-18-79",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594382,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594382,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594382,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594382,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594382,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.18.79",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.18.79"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892594382,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-v5qs8",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0904 14:53:04.196543 23 deployment.go:68] Pod "webserver-deployment-6bc58496c7-nphb5" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6bc58496c7-nphb5",
      GenerateName: (string) (len=32) "webserver-deployment-6bc58496c7-",
      Namespace: (string) (len=15) "deployment-3250",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d6e7998f-aec8-4fed-8c24-db6f757d893d",
      ResourceVersion: (string) (len=5) "11164",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892594382,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6bc58496c7",
          UID: (types.UID) (len=36) "8b93614e-a639-4cab-bf2d-973dca28d832",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594382,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 62  39 33 36 31 34 65 2d 61  |d\":\"8b93614e-a|
              00000090  36 33 39 2d 34 63 61 62  2d 62 66 32 64 2d 39 37  |639-4cab-bf2d-97|
              000000a0  33 64 63 61 32 38 64 38  33 32 5c 22 7d 22 3a 7b  |3dca28d832\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594384,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=853) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6f 62 73 65 72 76  |me":{},"f:observ|
              00000080  65 64 47 65 6e 65 72 61  74 69 6f 6e 22 3a 7b 7d  |edGeneration":{}|
              00000090  2c 22 66 3a 73 74 61 74  75 73 22 3a 7b 7d 2c 22  |,"f:status":{},"|
              000000a0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |f:type":{}},"k:{|
              000000b0  5c 22 74 79 70 65 5c 22  3a 5c 22 49 6e 69 74 69  |\"type\":\"Initi|
              000000c0  61 6c 69 7a 65 64 5c 22  7d 22 3a 7b 22 2e 22 3a  |alized\"}":{".":|
              000000d0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000000f0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              00000100  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000110  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000120  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000130  65 22 3a 7b 7d 7d 2c 22  6b 3a 7b 5c 22 74 79 70  |e":{}},"k:{\"typ|
              00000140  65 5c 22 3a 5c 22 50 6f  64 52 65 61 64 79 54 6f  |e\":\"PodReadyTo|
              00000150  53 74 61 72 74 43 6f 6e  74 61 69 6e 65 72 73 5c  |StartContainers\|
              00000160  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 6c  |"}":{".":{},"f:l|
              00000170  61 73 74 50 72 6f 62 65  54 69 6d 65 22 3a 7b 7d  |astProbeTime":{}|
              00000180  2c 22 66 3a 6c 61 73 74  54 72 61 6e 73 69 74 69  |,"f:lastTransiti|
              00000190  6f 6e 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6f 62  |onTime":{},"f:ob|
              000001a0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001b0  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              000001c0  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000001d0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              000001e0  6f 64 53 63 68 65 64 75  6c 65 64 5c 22 7d 22 3a  |odScheduled\"}":|
              000001f0  7b 22 66 3a 6f 62 73 65  72 76 65 64 47 65 6e 65  |{"f:observedGene|
              00000200  72 61 74 69 6f 6e 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |ration":{}},"k:{|
              00000210  5c 22 74 79 70 65 5c 22  3a 5c 22 52 65 61 64 79  |\"type\":\"Ready|
              00000220  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000230  6c 61 73 74 50 72 6f 62  65 54 69 6d 65 22 3a 7b  |lastProbeTime":{|
              00000240  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000250  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6f  |ionTime":{},"f:o|
              00000260  62 73 65 72 76 65 64 47  65 6e 65 72 61 74 69 6f  |bservedGeneratio|
              00000270  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000280  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000290  7d 2c 22 66 3a 63 6f 6e  74 61 69 6e 65 72 53 74  |},"f:containerSt|
              000002a0  61 74 75 73 65 73 22 3a  7b 7d 2c 22 66 3a 68 6f  |atuses":{},"f:ho|
              000002b0  73 74 49 50 22 3a 7b 7d  2c 22 66 3a 68 6f 73 74  |stIP":{},"f:host|
              000002c0  49 50 73 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |IPs":{},"f:obser|
              000002d0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002e0  7d 2c 22 66 3a 70 68 61  73 65 22 3a 7b 7d 2c 22  |},"f:phase":{},"|
              000002f0  66 3a 70 6f 64 49 50 22  3a 7b 7d 2c 22 66 3a 70  |f:podIP":{},"f:p|
              00000300  6f 64 49 50 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |odIPs":{".":{},"|
              00000310  6b 3a 7b 5c 22 69 70 5c  22 3a 5c 22 31 39 32 2e  |k:{\"ip\":\"192.|
              00000320  31 36 38 2e 31 30 39 2e  37 31 5c 22 7d 22 3a 7b  |168.109.71\"}":{|
              00000330  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000340  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000350  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-j4hst",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-j4hst",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-33-202",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594383,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594382,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594383,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594383,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594382,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.33.202",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.33.202"
        }
      },
      PodIP: (string) (len=14) "192.168.109.71",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.109.71"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892594382,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63892594383,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://87bef83785ca60c1cb56bd29fc2a7e03fa4745848e24312509bf9d88376edd01",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-j4hst",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0904 14:53:04.197615 23 deployment.go:68] Pod "webserver-deployment-6bc58496c7-pz5xp" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6bc58496c7-pz5xp",
      GenerateName: (string) (len=32) "webserver-deployment-6bc58496c7-",
      Namespace: (string) (len=15) "deployment-3250",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "949efaec-74a0-41d7-8e50-e3a75e35c302",
      ResourceVersion: (string) (len=5) "11146",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892594382,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6bc58496c7",
          UID: (types.UID) (len=36) "8b93614e-a639-4cab-bf2d-973dca28d832",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594382,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 62  39 33 36 31 34 65 2d 61  |d\":\"8b93614e-a|
              00000090  36 33 39 2d 34 63 61 62  2d 62 66 32 64 2d 39 37  |639-4cab-bf2d-97|
              000000a0  33 64 63 61 32 38 64 38  33 32 5c 22 7d 22 3a 7b  |3dca28d832\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594383,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=853) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6f 62 73 65 72 76  |me":{},"f:observ|
              00000080  65 64 47 65 6e 65 72 61  74 69 6f 6e 22 3a 7b 7d  |edGeneration":{}|
              00000090  2c 22 66 3a 73 74 61 74  75 73 22 3a 7b 7d 2c 22  |,"f:status":{},"|
              000000a0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |f:type":{}},"k:{|
              000000b0  5c 22 74 79 70 65 5c 22  3a 5c 22 49 6e 69 74 69  |\"type\":\"Initi|
              000000c0  61 6c 69 7a 65 64 5c 22  7d 22 3a 7b 22 2e 22 3a  |alized\"}":{".":|
              000000d0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000000f0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              00000100  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000110  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000120  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000130  65 22 3a 7b 7d 7d 2c 22  6b 3a 7b 5c 22 74 79 70  |e":{}},"k:{\"typ|
              00000140  65 5c 22 3a 5c 22 50 6f  64 52 65 61 64 79 54 6f  |e\":\"PodReadyTo|
              00000150  53 74 61 72 74 43 6f 6e  74 61 69 6e 65 72 73 5c  |StartContainers\|
              00000160  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 6c  |"}":{".":{},"f:l|
              00000170  61 73 74 50 72 6f 62 65  54 69 6d 65 22 3a 7b 7d  |astProbeTime":{}|
              00000180  2c 22 66 3a 6c 61 73 74  54 72 61 6e 73 69 74 69  |,"f:lastTransiti|
              00000190  6f 6e 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6f 62  |onTime":{},"f:ob|
              000001a0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001b0  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              000001c0  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000001d0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              000001e0  6f 64 53 63 68 65 64 75  6c 65 64 5c 22 7d 22 3a  |odScheduled\"}":|
              000001f0  7b 22 66 3a 6f 62 73 65  72 76 65 64 47 65 6e 65  |{"f:observedGene|
              00000200  72 61 74 69 6f 6e 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |ration":{}},"k:{|
              00000210  5c 22 74 79 70 65 5c 22  3a 5c 22 52 65 61 64 79  |\"type\":\"Ready|
              00000220  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000230  6c 61 73 74 50 72 6f 62  65 54 69 6d 65 22 3a 7b  |lastProbeTime":{|
              00000240  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000250  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6f  |ionTime":{},"f:o|
              00000260  62 73 65 72 76 65 64 47  65 6e 65 72 61 74 69 6f  |bservedGeneratio|
              00000270  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000280  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000290  7d 2c 22 66 3a 63 6f 6e  74 61 69 6e 65 72 53 74  |},"f:containerSt|
              000002a0  61 74 75 73 65 73 22 3a  7b 7d 2c 22 66 3a 68 6f  |atuses":{},"f:ho|
              000002b0  73 74 49 50 22 3a 7b 7d  2c 22 66 3a 68 6f 73 74  |stIP":{},"f:host|
              000002c0  49 50 73 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |IPs":{},"f:obser|
              000002d0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002e0  7d 2c 22 66 3a 70 68 61  73 65 22 3a 7b 7d 2c 22  |},"f:phase":{},"|
              000002f0  66 3a 70 6f 64 49 50 22  3a 7b 7d 2c 22 66 3a 70  |f:podIP":{},"f:p|
              00000300  6f 64 49 50 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |odIPs":{".":{},"|
              00000310  6b 3a 7b 5c 22 69 70 5c  22 3a 5c 22 31 39 32 2e  |k:{\"ip\":\"192.|
              00000320  31 36 38 2e 31 38 36 2e  38 38 5c 22 7d 22 3a 7b  |168.186.88\"}":{|
              00000330  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000340  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000350  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-w8gfl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-w8gfl",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-87-111",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594383,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594382,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594383,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594383,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594382,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.87.111",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.87.111"
        }
      },
      PodIP: (string) (len=14) "192.168.186.88",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.186.88"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892594382,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63892594383,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://a99871050f01fbc3090b822186824bd4f4bd286a07683c784471a25cfefcad41",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-w8gfl",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0904 14:53:04.198628 23 deployment.go:68] Pod "webserver-deployment-6bc58496c7-sx445" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6bc58496c7-sx445",
      GenerateName: (string) (len=32) "webserver-deployment-6bc58496c7-",
      Namespace: (string) (len=15) "deployment-3250",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ab83629e-5d18-40a0-a7b3-133dcd99a10c",
      ResourceVersion: (string) (len=5) "10770",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892594378,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6bc58496c7",
          UID: (types.UID) (len=36) "8b93614e-a639-4cab-bf2d-973dca28d832",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594378,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 62  39 33 36 31 34 65 2d 61  |d\":\"8b93614e-a|
              00000090  36 33 39 2d 34 63 61 62  2d 62 66 32 64 2d 39 37  |639-4cab-bf2d-97|
              000000a0  33 64 63 61 32 38 64 38  33 32 5c 22 7d 22 3a 7b  |3dca28d832\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594379,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=853) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6f 62 73 65 72 76  |me":{},"f:observ|
              00000080  65 64 47 65 6e 65 72 61  74 69 6f 6e 22 3a 7b 7d  |edGeneration":{}|
              00000090  2c 22 66 3a 73 74 61 74  75 73 22 3a 7b 7d 2c 22  |,"f:status":{},"|
              000000a0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |f:type":{}},"k:{|
              000000b0  5c 22 74 79 70 65 5c 22  3a 5c 22 49 6e 69 74 69  |\"type\":\"Initi|
              000000c0  61 6c 69 7a 65 64 5c 22  7d 22 3a 7b 22 2e 22 3a  |alized\"}":{".":|
              000000d0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000000f0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              00000100  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000110  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000120  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000130  65 22 3a 7b 7d 7d 2c 22  6b 3a 7b 5c 22 74 79 70  |e":{}},"k:{\"typ|
              00000140  65 5c 22 3a 5c 22 50 6f  64 52 65 61 64 79 54 6f  |e\":\"PodReadyTo|
              00000150  53 74 61 72 74 43 6f 6e  74 61 69 6e 65 72 73 5c  |StartContainers\|
              00000160  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 6c  |"}":{".":{},"f:l|
              00000170  61 73 74 50 72 6f 62 65  54 69 6d 65 22 3a 7b 7d  |astProbeTime":{}|
              00000180  2c 22 66 3a 6c 61 73 74  54 72 61 6e 73 69 74 69  |,"f:lastTransiti|
              00000190  6f 6e 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6f 62  |onTime":{},"f:ob|
              000001a0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001b0  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              000001c0  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000001d0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              000001e0  6f 64 53 63 68 65 64 75  6c 65 64 5c 22 7d 22 3a  |odScheduled\"}":|
              000001f0  7b 22 66 3a 6f 62 73 65  72 76 65 64 47 65 6e 65  |{"f:observedGene|
              00000200  72 61 74 69 6f 6e 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |ration":{}},"k:{|
              00000210  5c 22 74 79 70 65 5c 22  3a 5c 22 52 65 61 64 79  |\"type\":\"Ready|
              00000220  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000230  6c 61 73 74 50 72 6f 62  65 54 69 6d 65 22 3a 7b  |lastProbeTime":{|
              00000240  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000250  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6f  |ionTime":{},"f:o|
              00000260  62 73 65 72 76 65 64 47  65 6e 65 72 61 74 69 6f  |bservedGeneratio|
              00000270  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000280  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000290  7d 2c 22 66 3a 63 6f 6e  74 61 69 6e 65 72 53 74  |},"f:containerSt|
              000002a0  61 74 75 73 65 73 22 3a  7b 7d 2c 22 66 3a 68 6f  |atuses":{},"f:ho|
              000002b0  73 74 49 50 22 3a 7b 7d  2c 22 66 3a 68 6f 73 74  |stIP":{},"f:host|
              000002c0  49 50 73 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |IPs":{},"f:obser|
              000002d0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002e0  7d 2c 22 66 3a 70 68 61  73 65 22 3a 7b 7d 2c 22  |},"f:phase":{},"|
              000002f0  66 3a 70 6f 64 49 50 22  3a 7b 7d 2c 22 66 3a 70  |f:podIP":{},"f:p|
              00000300  6f 64 49 50 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |odIPs":{".":{},"|
              00000310  6b 3a 7b 5c 22 69 70 5c  22 3a 5c 22 31 39 32 2e  |k:{\"ip\":\"192.|
              00000320  31 36 38 2e 31 38 36 2e  38 32 5c 22 7d 22 3a 7b  |168.186.82\"}":{|
              00000330  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000340  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000350  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-c28cm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-c28cm",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-87-111",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594379,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594378,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594379,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594379,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594378,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.87.111",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.87.111"
        }
      },
      PodIP: (string) (len=14) "192.168.186.82",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.186.82"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892594378,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63892594378,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://0a9e22621d9b8fb3d059044dd8dba2d72b8f04c9ea364f15f6f687af3f675fbc",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-c28cm",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0904 14:53:04.199603 23 deployment.go:68] Pod "webserver-deployment-6bc58496c7-t8z96" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6bc58496c7-t8z96",
      GenerateName: (string) (len=32) "webserver-deployment-6bc58496c7-",
      Namespace: (string) (len=15) "deployment-3250",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fd69ad8a-1d1c-4f44-ad3f-c5192d064fcc",
      ResourceVersion: (string) (len=5) "10760",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892594378,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6bc58496c7",
          UID: (types.UID) (len=36) "8b93614e-a639-4cab-bf2d-973dca28d832",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594378,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 62  39 33 36 31 34 65 2d 61  |d\":\"8b93614e-a|
              00000090  36 33 39 2d 34 63 61 62  2d 62 66 32 64 2d 39 37  |639-4cab-bf2d-97|
              000000a0  33 64 63 61 32 38 64 38  33 32 5c 22 7d 22 3a 7b  |3dca28d832\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594379,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=852) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6f 62 73 65 72 76  |me":{},"f:observ|
              00000080  65 64 47 65 6e 65 72 61  74 69 6f 6e 22 3a 7b 7d  |edGeneration":{}|
              00000090  2c 22 66 3a 73 74 61 74  75 73 22 3a 7b 7d 2c 22  |,"f:status":{},"|
              000000a0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |f:type":{}},"k:{|
              000000b0  5c 22 74 79 70 65 5c 22  3a 5c 22 49 6e 69 74 69  |\"type\":\"Initi|
              000000c0  61 6c 69 7a 65 64 5c 22  7d 22 3a 7b 22 2e 22 3a  |alized\"}":{".":|
              000000d0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000000f0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              00000100  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000110  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000120  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000130  65 22 3a 7b 7d 7d 2c 22  6b 3a 7b 5c 22 74 79 70  |e":{}},"k:{\"typ|
              00000140  65 5c 22 3a 5c 22 50 6f  64 52 65 61 64 79 54 6f  |e\":\"PodReadyTo|
              00000150  53 74 61 72 74 43 6f 6e  74 61 69 6e 65 72 73 5c  |StartContainers\|
              00000160  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 6c  |"}":{".":{},"f:l|
              00000170  61 73 74 50 72 6f 62 65  54 69 6d 65 22 3a 7b 7d  |astProbeTime":{}|
              00000180  2c 22 66 3a 6c 61 73 74  54 72 61 6e 73 69 74 69  |,"f:lastTransiti|
              00000190  6f 6e 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6f 62  |onTime":{},"f:ob|
              000001a0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001b0  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              000001c0  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000001d0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              000001e0  6f 64 53 63 68 65 64 75  6c 65 64 5c 22 7d 22 3a  |odScheduled\"}":|
              000001f0  7b 22 66 3a 6f 62 73 65  72 76 65 64 47 65 6e 65  |{"f:observedGene|
              00000200  72 61 74 69 6f 6e 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |ration":{}},"k:{|
              00000210  5c 22 74 79 70 65 5c 22  3a 5c 22 52 65 61 64 79  |\"type\":\"Ready|
              00000220  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000230  6c 61 73 74 50 72 6f 62  65 54 69 6d 65 22 3a 7b  |lastProbeTime":{|
              00000240  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000250  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6f  |ionTime":{},"f:o|
              00000260  62 73 65 72 76 65 64 47  65 6e 65 72 61 74 69 6f  |bservedGeneratio|
              00000270  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000280  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000290  7d 2c 22 66 3a 63 6f 6e  74 61 69 6e 65 72 53 74  |},"f:containerSt|
              000002a0  61 74 75 73 65 73 22 3a  7b 7d 2c 22 66 3a 68 6f  |atuses":{},"f:ho|
              000002b0  73 74 49 50 22 3a 7b 7d  2c 22 66 3a 68 6f 73 74  |stIP":{},"f:host|
              000002c0  49 50 73 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |IPs":{},"f:obser|
              000002d0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002e0  7d 2c 22 66 3a 70 68 61  73 65 22 3a 7b 7d 2c 22  |},"f:phase":{},"|
              000002f0  66 3a 70 6f 64 49 50 22  3a 7b 7d 2c 22 66 3a 70  |f:podIP":{},"f:p|
              00000300  6f 64 49 50 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |odIPs":{".":{},"|
              00000310  6b 3a 7b 5c 22 69 70 5c  22 3a 5c 22 31 39 32 2e  |k:{\"ip\":\"192.|
              00000320  31 36 38 2e 34 2e 31 36  32 5c 22 7d 22 3a 7b 22  |168.4.162\"}":{"|
              00000330  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000340  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000350  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2xd5z",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2xd5z",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-18-79",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594379,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594378,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594379,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594379,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594378,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.18.79",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.18.79"
        }
      },
      PodIP: (string) (len=13) "192.168.4.162",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.4.162"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892594378,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63892594378,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://718daea2d239df466636d28d3f3e1780624f3c233144a92c1834e05fd171e54e",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-2xd5z",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0904 14:53:04.200603 23 deployment.go:68] Pod "webserver-deployment-6bc58496c7-v9cmt" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6bc58496c7-v9cmt",
      GenerateName: (string) (len=32) "webserver-deployment-6bc58496c7-",
      Namespace: (string) (len=15) "deployment-3250",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e07cab70-9fdc-431f-8595-4fab60d2464f",
      ResourceVersion: (string) (len=5) "11169",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892594382,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6bc58496c7",
          UID: (types.UID) (len=36) "8b93614e-a639-4cab-bf2d-973dca28d832",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594382,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 62  39 33 36 31 34 65 2d 61  |d\":\"8b93614e-a|
              00000090  36 33 39 2d 34 63 61 62  2d 62 66 32 64 2d 39 37  |639-4cab-bf2d-97|
              000000a0  33 64 63 61 32 38 64 38  33 32 5c 22 7d 22 3a 7b  |3dca28d832\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594384,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=853) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6f 62 73 65 72 76  |me":{},"f:observ|
              00000080  65 64 47 65 6e 65 72 61  74 69 6f 6e 22 3a 7b 7d  |edGeneration":{}|
              00000090  2c 22 66 3a 73 74 61 74  75 73 22 3a 7b 7d 2c 22  |,"f:status":{},"|
              000000a0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |f:type":{}},"k:{|
              000000b0  5c 22 74 79 70 65 5c 22  3a 5c 22 49 6e 69 74 69  |\"type\":\"Initi|
              000000c0  61 6c 69 7a 65 64 5c 22  7d 22 3a 7b 22 2e 22 3a  |alized\"}":{".":|
              000000d0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000000f0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              00000100  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000110  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000120  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000130  65 22 3a 7b 7d 7d 2c 22  6b 3a 7b 5c 22 74 79 70  |e":{}},"k:{\"typ|
              00000140  65 5c 22 3a 5c 22 50 6f  64 52 65 61 64 79 54 6f  |e\":\"PodReadyTo|
              00000150  53 74 61 72 74 43 6f 6e  74 61 69 6e 65 72 73 5c  |StartContainers\|
              00000160  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 6c  |"}":{".":{},"f:l|
              00000170  61 73 74 50 72 6f 62 65  54 69 6d 65 22 3a 7b 7d  |astProbeTime":{}|
              00000180  2c 22 66 3a 6c 61 73 74  54 72 61 6e 73 69 74 69  |,"f:lastTransiti|
              00000190  6f 6e 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6f 62  |onTime":{},"f:ob|
              000001a0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001b0  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              000001c0  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000001d0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              000001e0  6f 64 53 63 68 65 64 75  6c 65 64 5c 22 7d 22 3a  |odScheduled\"}":|
              000001f0  7b 22 66 3a 6f 62 73 65  72 76 65 64 47 65 6e 65  |{"f:observedGene|
              00000200  72 61 74 69 6f 6e 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |ration":{}},"k:{|
              00000210  5c 22 74 79 70 65 5c 22  3a 5c 22 52 65 61 64 79  |\"type\":\"Ready|
              00000220  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000230  6c 61 73 74 50 72 6f 62  65 54 69 6d 65 22 3a 7b  |lastProbeTime":{|
              00000240  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000250  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6f  |ionTime":{},"f:o|
              00000260  62 73 65 72 76 65 64 47  65 6e 65 72 61 74 69 6f  |bservedGeneratio|
              00000270  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000280  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000290  7d 2c 22 66 3a 63 6f 6e  74 61 69 6e 65 72 53 74  |},"f:containerSt|
              000002a0  61 74 75 73 65 73 22 3a  7b 7d 2c 22 66 3a 68 6f  |atuses":{},"f:ho|
              000002b0  73 74 49 50 22 3a 7b 7d  2c 22 66 3a 68 6f 73 74  |stIP":{},"f:host|
              000002c0  49 50 73 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |IPs":{},"f:obser|
              000002d0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002e0  7d 2c 22 66 3a 70 68 61  73 65 22 3a 7b 7d 2c 22  |},"f:phase":{},"|
              000002f0  66 3a 70 6f 64 49 50 22  3a 7b 7d 2c 22 66 3a 70  |f:podIP":{},"f:p|
              00000300  6f 64 49 50 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |odIPs":{".":{},"|
              00000310  6b 3a 7b 5c 22 69 70 5c  22 3a 5c 22 31 39 32 2e  |k:{\"ip\":\"192.|
              00000320  31 36 38 2e 31 30 39 2e  36 37 5c 22 7d 22 3a 7b  |168.109.67\"}":{|
              00000330  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000340  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000350  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-kx5qd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-kx5qd",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-33-202",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594383,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594382,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594383,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594383,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594382,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.33.202",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.33.202"
        }
      },
      PodIP: (string) (len=14) "192.168.109.67",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.109.67"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892594382,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63892594383,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://69612e20f168447ede1c4142cbc6b69e19e3d9b4616121c0336378735df42837",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-kx5qd",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0904 14:53:04.201616 23 deployment.go:68] Pod "webserver-deployment-6bc58496c7-w5rhd" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6bc58496c7-w5rhd",
      GenerateName: (string) (len=32) "webserver-deployment-6bc58496c7-",
      Namespace: (string) (len=15) "deployment-3250",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0fedee1c-01a2-4033-bc8a-ae7838de7fe9",
      ResourceVersion: (string) (len=5) "10773",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892594378,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6bc58496c7",
          UID: (types.UID) (len=36) "8b93614e-a639-4cab-bf2d-973dca28d832",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594378,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 62  39 33 36 31 34 65 2d 61  |d\":\"8b93614e-a|
              00000090  36 33 39 2d 34 63 61 62  2d 62 66 32 64 2d 39 37  |639-4cab-bf2d-97|
              000000a0  33 64 63 61 32 38 64 38  33 32 5c 22 7d 22 3a 7b  |3dca28d832\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594379,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=853) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6f 62 73 65 72 76  |me":{},"f:observ|
              00000080  65 64 47 65 6e 65 72 61  74 69 6f 6e 22 3a 7b 7d  |edGeneration":{}|
              00000090  2c 22 66 3a 73 74 61 74  75 73 22 3a 7b 7d 2c 22  |,"f:status":{},"|
              000000a0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |f:type":{}},"k:{|
              000000b0  5c 22 74 79 70 65 5c 22  3a 5c 22 49 6e 69 74 69  |\"type\":\"Initi|
              000000c0  61 6c 69 7a 65 64 5c 22  7d 22 3a 7b 22 2e 22 3a  |alized\"}":{".":|
              000000d0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000000f0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              00000100  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000110  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000120  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000130  65 22 3a 7b 7d 7d 2c 22  6b 3a 7b 5c 22 74 79 70  |e":{}},"k:{\"typ|
              00000140  65 5c 22 3a 5c 22 50 6f  64 52 65 61 64 79 54 6f  |e\":\"PodReadyTo|
              00000150  53 74 61 72 74 43 6f 6e  74 61 69 6e 65 72 73 5c  |StartContainers\|
              00000160  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 6c  |"}":{".":{},"f:l|
              00000170  61 73 74 50 72 6f 62 65  54 69 6d 65 22 3a 7b 7d  |astProbeTime":{}|
              00000180  2c 22 66 3a 6c 61 73 74  54 72 61 6e 73 69 74 69  |,"f:lastTransiti|
              00000190  6f 6e 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6f 62  |onTime":{},"f:ob|
              000001a0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001b0  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              000001c0  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000001d0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              000001e0  6f 64 53 63 68 65 64 75  6c 65 64 5c 22 7d 22 3a  |odScheduled\"}":|
              000001f0  7b 22 66 3a 6f 62 73 65  72 76 65 64 47 65 6e 65  |{"f:observedGene|
              00000200  72 61 74 69 6f 6e 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |ration":{}},"k:{|
              00000210  5c 22 74 79 70 65 5c 22  3a 5c 22 52 65 61 64 79  |\"type\":\"Ready|
              00000220  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000230  6c 61 73 74 50 72 6f 62  65 54 69 6d 65 22 3a 7b  |lastProbeTime":{|
              00000240  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000250  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6f  |ionTime":{},"f:o|
              00000260  62 73 65 72 76 65 64 47  65 6e 65 72 61 74 69 6f  |bservedGeneratio|
              00000270  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000280  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000290  7d 2c 22 66 3a 63 6f 6e  74 61 69 6e 65 72 53 74  |},"f:containerSt|
              000002a0  61 74 75 73 65 73 22 3a  7b 7d 2c 22 66 3a 68 6f  |atuses":{},"f:ho|
              000002b0  73 74 49 50 22 3a 7b 7d  2c 22 66 3a 68 6f 73 74  |stIP":{},"f:host|
              000002c0  49 50 73 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |IPs":{},"f:obser|
              000002d0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002e0  7d 2c 22 66 3a 70 68 61  73 65 22 3a 7b 7d 2c 22  |},"f:phase":{},"|
              000002f0  66 3a 70 6f 64 49 50 22  3a 7b 7d 2c 22 66 3a 70  |f:podIP":{},"f:p|
              00000300  6f 64 49 50 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |odIPs":{".":{},"|
              00000310  6b 3a 7b 5c 22 69 70 5c  22 3a 5c 22 31 39 32 2e  |k:{\"ip\":\"192.|
              00000320  31 36 38 2e 31 38 36 2e  38 33 5c 22 7d 22 3a 7b  |168.186.83\"}":{|
              00000330  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000340  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000350  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9hmn9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9hmn9",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-87-111",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594379,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594378,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594379,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594379,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594378,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.87.111",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.87.111"
        }
      },
      PodIP: (string) (len=14) "192.168.186.83",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.186.83"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892594378,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63892594378,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://2404544e5b05cb14f63d1d85f2e9cb199d81be32206908db24daefd213e49506",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-9hmn9",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0904 14:53:04.202774 23 deployment.go:68] Pod "webserver-deployment-6bc58496c7-wsbnv" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6bc58496c7-wsbnv",
      GenerateName: (string) (len=32) "webserver-deployment-6bc58496c7-",
      Namespace: (string) (len=15) "deployment-3250",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "acbac66c-5b09-4bf4-aedd-79b2e094127f",
      ResourceVersion: (string) (len=5) "10779",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892594378,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6bc58496c7",
          UID: (types.UID) (len=36) "8b93614e-a639-4cab-bf2d-973dca28d832",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594378,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 62  39 33 36 31 34 65 2d 61  |d\":\"8b93614e-a|
              00000090  36 33 39 2d 34 63 61 62  2d 62 66 32 64 2d 39 37  |639-4cab-bf2d-97|
              000000a0  33 64 63 61 32 38 64 38  33 32 5c 22 7d 22 3a 7b  |3dca28d832\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594379,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=854) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6f 62 73 65 72 76  |me":{},"f:observ|
              00000080  65 64 47 65 6e 65 72 61  74 69 6f 6e 22 3a 7b 7d  |edGeneration":{}|
              00000090  2c 22 66 3a 73 74 61 74  75 73 22 3a 7b 7d 2c 22  |,"f:status":{},"|
              000000a0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |f:type":{}},"k:{|
              000000b0  5c 22 74 79 70 65 5c 22  3a 5c 22 49 6e 69 74 69  |\"type\":\"Initi|
              000000c0  61 6c 69 7a 65 64 5c 22  7d 22 3a 7b 22 2e 22 3a  |alized\"}":{".":|
              000000d0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000000f0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              00000100  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000110  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000120  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000130  65 22 3a 7b 7d 7d 2c 22  6b 3a 7b 5c 22 74 79 70  |e":{}},"k:{\"typ|
              00000140  65 5c 22 3a 5c 22 50 6f  64 52 65 61 64 79 54 6f  |e\":\"PodReadyTo|
              00000150  53 74 61 72 74 43 6f 6e  74 61 69 6e 65 72 73 5c  |StartContainers\|
              00000160  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 6c  |"}":{".":{},"f:l|
              00000170  61 73 74 50 72 6f 62 65  54 69 6d 65 22 3a 7b 7d  |astProbeTime":{}|
              00000180  2c 22 66 3a 6c 61 73 74  54 72 61 6e 73 69 74 69  |,"f:lastTransiti|
              00000190  6f 6e 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6f 62  |onTime":{},"f:ob|
              000001a0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001b0  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              000001c0  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000001d0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              000001e0  6f 64 53 63 68 65 64 75  6c 65 64 5c 22 7d 22 3a  |odScheduled\"}":|
              000001f0  7b 22 66 3a 6f 62 73 65  72 76 65 64 47 65 6e 65  |{"f:observedGene|
              00000200  72 61 74 69 6f 6e 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |ration":{}},"k:{|
              00000210  5c 22 74 79 70 65 5c 22  3a 5c 22 52 65 61 64 79  |\"type\":\"Ready|
              00000220  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000230  6c 61 73 74 50 72 6f 62  65 54 69 6d 65 22 3a 7b  |lastProbeTime":{|
              00000240  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000250  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6f  |ionTime":{},"f:o|
              00000260  62 73 65 72 76 65 64 47  65 6e 65 72 61 74 69 6f  |bservedGeneratio|
              00000270  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000280  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000290  7d 2c 22 66 3a 63 6f 6e  74 61 69 6e 65 72 53 74  |},"f:containerSt|
              000002a0  61 74 75 73 65 73 22 3a  7b 7d 2c 22 66 3a 68 6f  |atuses":{},"f:ho|
              000002b0  73 74 49 50 22 3a 7b 7d  2c 22 66 3a 68 6f 73 74  |stIP":{},"f:host|
              000002c0  49 50 73 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |IPs":{},"f:obser|
              000002d0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002e0  7d 2c 22 66 3a 70 68 61  73 65 22 3a 7b 7d 2c 22  |},"f:phase":{},"|
              000002f0  66 3a 70 6f 64 49 50 22  3a 7b 7d 2c 22 66 3a 70  |f:podIP":{},"f:p|
              00000300  6f 64 49 50 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |odIPs":{".":{},"|
              00000310  6b 3a 7b 5c 22 69 70 5c  22 3a 5c 22 31 39 32 2e  |k:{\"ip\":\"192.|
              00000320  31 36 38 2e 31 30 39 2e  31 32 37 5c 22 7d 22 3a  |168.109.127\"}":|
              00000330  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000340  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000350  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bfxnc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bfxnc",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-33-202",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594379,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594378,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594379,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594379,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594378,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.33.202",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.33.202"
        }
      },
      PodIP: (string) (len=15) "192.168.109.127",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.109.127"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892594378,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63892594378,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://0997a9be306e7365ecb4a871d35eb2f95d9516c227acc86def847b7357fb96b4",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-bfxnc",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0904 14:53:04.203783 23 deployment.go:68] Pod "webserver-deployment-6bc58496c7-xgwjf" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6bc58496c7-xgwjf",
      GenerateName: (string) (len=32) "webserver-deployment-6bc58496c7-",
      Namespace: (string) (len=15) "deployment-3250",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "54e86828-f702-4c5e-a32e-7dc367c7cd5f",
      ResourceVersion: (string) (len=5) "11177",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892594382,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6bc58496c7",
          UID: (types.UID) (len=36) "8b93614e-a639-4cab-bf2d-973dca28d832",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594382,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 62  39 33 36 31 34 65 2d 61  |d\":\"8b93614e-a|
              00000090  36 33 39 2d 34 63 61 62  2d 62 66 32 64 2d 39 37  |639-4cab-bf2d-97|
              000000a0  33 64 63 61 32 38 64 38  33 32 5c 22 7d 22 3a 7b  |3dca28d832\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594384,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=853) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6f 62 73 65 72 76  |me":{},"f:observ|
              00000080  65 64 47 65 6e 65 72 61  74 69 6f 6e 22 3a 7b 7d  |edGeneration":{}|
              00000090  2c 22 66 3a 73 74 61 74  75 73 22 3a 7b 7d 2c 22  |,"f:status":{},"|
              000000a0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |f:type":{}},"k:{|
              000000b0  5c 22 74 79 70 65 5c 22  3a 5c 22 49 6e 69 74 69  |\"type\":\"Initi|
              000000c0  61 6c 69 7a 65 64 5c 22  7d 22 3a 7b 22 2e 22 3a  |alized\"}":{".":|
              000000d0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000000f0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              00000100  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000110  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000120  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000130  65 22 3a 7b 7d 7d 2c 22  6b 3a 7b 5c 22 74 79 70  |e":{}},"k:{\"typ|
              00000140  65 5c 22 3a 5c 22 50 6f  64 52 65 61 64 79 54 6f  |e\":\"PodReadyTo|
              00000150  53 74 61 72 74 43 6f 6e  74 61 69 6e 65 72 73 5c  |StartContainers\|
              00000160  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 6c  |"}":{".":{},"f:l|
              00000170  61 73 74 50 72 6f 62 65  54 69 6d 65 22 3a 7b 7d  |astProbeTime":{}|
              00000180  2c 22 66 3a 6c 61 73 74  54 72 61 6e 73 69 74 69  |,"f:lastTransiti|
              00000190  6f 6e 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6f 62  |onTime":{},"f:ob|
              000001a0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001b0  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              000001c0  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000001d0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              000001e0  6f 64 53 63 68 65 64 75  6c 65 64 5c 22 7d 22 3a  |odScheduled\"}":|
              000001f0  7b 22 66 3a 6f 62 73 65  72 76 65 64 47 65 6e 65  |{"f:observedGene|
              00000200  72 61 74 69 6f 6e 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |ration":{}},"k:{|
              00000210  5c 22 74 79 70 65 5c 22  3a 5c 22 52 65 61 64 79  |\"type\":\"Ready|
              00000220  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000230  6c 61 73 74 50 72 6f 62  65 54 69 6d 65 22 3a 7b  |lastProbeTime":{|
              00000240  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000250  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6f  |ionTime":{},"f:o|
              00000260  62 73 65 72 76 65 64 47  65 6e 65 72 61 74 69 6f  |bservedGeneratio|
              00000270  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000280  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000290  7d 2c 22 66 3a 63 6f 6e  74 61 69 6e 65 72 53 74  |},"f:containerSt|
              000002a0  61 74 75 73 65 73 22 3a  7b 7d 2c 22 66 3a 68 6f  |atuses":{},"f:ho|
              000002b0  73 74 49 50 22 3a 7b 7d  2c 22 66 3a 68 6f 73 74  |stIP":{},"f:host|
              000002c0  49 50 73 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |IPs":{},"f:obser|
              000002d0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002e0  7d 2c 22 66 3a 70 68 61  73 65 22 3a 7b 7d 2c 22  |},"f:phase":{},"|
              000002f0  66 3a 70 6f 64 49 50 22  3a 7b 7d 2c 22 66 3a 70  |f:podIP":{},"f:p|
              00000300  6f 64 49 50 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |odIPs":{".":{},"|
              00000310  6b 3a 7b 5c 22 69 70 5c  22 3a 5c 22 31 39 32 2e  |k:{\"ip\":\"192.|
              00000320  31 36 38 2e 31 30 39 2e  37 35 5c 22 7d 22 3a 7b  |168.109.75\"}":{|
              00000330  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000340  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000350  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8cpqh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8cpqh",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-33-202",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594383,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594382,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594383,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594383,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594382,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.33.202",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.33.202"
        }
      },
      PodIP: (string) (len=14) "192.168.109.75",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.109.75"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892594382,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63892594383,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://66ae6ee132b3ffbc4999d6add2ed80be0520342436884bd170c558bca10a9ddc",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-8cpqh",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0904 14:53:04.204791 23 deployment.go:68] Pod "webserver-deployment-6bc58496c7-xjwdx" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6bc58496c7-xjwdx",
      GenerateName: (string) (len=32) "webserver-deployment-6bc58496c7-",
      Namespace: (string) (len=15) "deployment-3250",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ee9a33fa-95e6-4fe6-9963-24401b16f448",
      ResourceVersion: (string) (len=5) "11167",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892594382,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6bc58496c7",
          UID: (types.UID) (len=36) "8b93614e-a639-4cab-bf2d-973dca28d832",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594382,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 62  39 33 36 31 34 65 2d 61  |d\":\"8b93614e-a|
              00000090  36 33 39 2d 34 63 61 62  2d 62 66 32 64 2d 39 37  |639-4cab-bf2d-97|
              000000a0  33 64 63 61 32 38 64 38  33 32 5c 22 7d 22 3a 7b  |3dca28d832\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594384,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=853) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6f 62 73 65 72 76  |me":{},"f:observ|
              00000080  65 64 47 65 6e 65 72 61  74 69 6f 6e 22 3a 7b 7d  |edGeneration":{}|
              00000090  2c 22 66 3a 73 74 61 74  75 73 22 3a 7b 7d 2c 22  |,"f:status":{},"|
              000000a0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |f:type":{}},"k:{|
              000000b0  5c 22 74 79 70 65 5c 22  3a 5c 22 49 6e 69 74 69  |\"type\":\"Initi|
              000000c0  61 6c 69 7a 65 64 5c 22  7d 22 3a 7b 22 2e 22 3a  |alized\"}":{".":|
              000000d0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000000f0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              00000100  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000110  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000120  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000130  65 22 3a 7b 7d 7d 2c 22  6b 3a 7b 5c 22 74 79 70  |e":{}},"k:{\"typ|
              00000140  65 5c 22 3a 5c 22 50 6f  64 52 65 61 64 79 54 6f  |e\":\"PodReadyTo|
              00000150  53 74 61 72 74 43 6f 6e  74 61 69 6e 65 72 73 5c  |StartContainers\|
              00000160  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 6c  |"}":{".":{},"f:l|
              00000170  61 73 74 50 72 6f 62 65  54 69 6d 65 22 3a 7b 7d  |astProbeTime":{}|
              00000180  2c 22 66 3a 6c 61 73 74  54 72 61 6e 73 69 74 69  |,"f:lastTransiti|
              00000190  6f 6e 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6f 62  |onTime":{},"f:ob|
              000001a0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001b0  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              000001c0  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000001d0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              000001e0  6f 64 53 63 68 65 64 75  6c 65 64 5c 22 7d 22 3a  |odScheduled\"}":|
              000001f0  7b 22 66 3a 6f 62 73 65  72 76 65 64 47 65 6e 65  |{"f:observedGene|
              00000200  72 61 74 69 6f 6e 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |ration":{}},"k:{|
              00000210  5c 22 74 79 70 65 5c 22  3a 5c 22 52 65 61 64 79  |\"type\":\"Ready|
              00000220  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000230  6c 61 73 74 50 72 6f 62  65 54 69 6d 65 22 3a 7b  |lastProbeTime":{|
              00000240  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000250  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6f  |ionTime":{},"f:o|
              00000260  62 73 65 72 76 65 64 47  65 6e 65 72 61 74 69 6f  |bservedGeneratio|
              00000270  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000280  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000290  7d 2c 22 66 3a 63 6f 6e  74 61 69 6e 65 72 53 74  |},"f:containerSt|
              000002a0  61 74 75 73 65 73 22 3a  7b 7d 2c 22 66 3a 68 6f  |atuses":{},"f:ho|
              000002b0  73 74 49 50 22 3a 7b 7d  2c 22 66 3a 68 6f 73 74  |stIP":{},"f:host|
              000002c0  49 50 73 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |IPs":{},"f:obser|
              000002d0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002e0  7d 2c 22 66 3a 70 68 61  73 65 22 3a 7b 7d 2c 22  |},"f:phase":{},"|
              000002f0  66 3a 70 6f 64 49 50 22  3a 7b 7d 2c 22 66 3a 70  |f:podIP":{},"f:p|
              00000300  6f 64 49 50 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |odIPs":{".":{},"|
              00000310  6b 3a 7b 5c 22 69 70 5c  22 3a 5c 22 31 39 32 2e  |k:{\"ip\":\"192.|
              00000320  31 36 38 2e 31 30 39 2e  36 39 5c 22 7d 22 3a 7b  |168.109.69\"}":{|
              00000330  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000340  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000350  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-r7jww",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-r7jww",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-33-202",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594383,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594382,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594383,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594383,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594382,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.33.202",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.33.202"
        }
      },
      PodIP: (string) (len=14) "192.168.109.69",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.109.69"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892594382,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63892594383,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://c28470ff015ab34f568913568a689e9e90625934fe6cc7f9699de1062823486b",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-r7jww",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0904 14:53:04.205772 23 deployment.go:68] Pod "webserver-deployment-6bc58496c7-zhc45" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-6bc58496c7-zhc45",
      GenerateName: (string) (len=32) "webserver-deployment-6bc58496c7-",
      Namespace: (string) (len=15) "deployment-3250",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "71bbb50f-6a48-4656-a1d0-d9ef54268ed4",
      ResourceVersion: (string) (len=5) "10765",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892594378,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-6bc58496c7",
          UID: (types.UID) (len=36) "8b93614e-a639-4cab-bf2d-973dca28d832",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594378,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 62  39 33 36 31 34 65 2d 61  |d\":\"8b93614e-a|
              00000090  36 33 39 2d 34 63 61 62  2d 62 66 32 64 2d 39 37  |639-4cab-bf2d-97|
              000000a0  33 64 63 61 32 38 64 38  33 32 5c 22 7d 22 3a 7b  |3dca28d832\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594379,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=852) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6f 62 73 65 72 76  |me":{},"f:observ|
              00000080  65 64 47 65 6e 65 72 61  74 69 6f 6e 22 3a 7b 7d  |edGeneration":{}|
              00000090  2c 22 66 3a 73 74 61 74  75 73 22 3a 7b 7d 2c 22  |,"f:status":{},"|
              000000a0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |f:type":{}},"k:{|
              000000b0  5c 22 74 79 70 65 5c 22  3a 5c 22 49 6e 69 74 69  |\"type\":\"Initi|
              000000c0  61 6c 69 7a 65 64 5c 22  7d 22 3a 7b 22 2e 22 3a  |alized\"}":{".":|
              000000d0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000000f0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              00000100  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000110  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000120  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000130  65 22 3a 7b 7d 7d 2c 22  6b 3a 7b 5c 22 74 79 70  |e":{}},"k:{\"typ|
              00000140  65 5c 22 3a 5c 22 50 6f  64 52 65 61 64 79 54 6f  |e\":\"PodReadyTo|
              00000150  53 74 61 72 74 43 6f 6e  74 61 69 6e 65 72 73 5c  |StartContainers\|
              00000160  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 6c  |"}":{".":{},"f:l|
              00000170  61 73 74 50 72 6f 62 65  54 69 6d 65 22 3a 7b 7d  |astProbeTime":{}|
              00000180  2c 22 66 3a 6c 61 73 74  54 72 61 6e 73 69 74 69  |,"f:lastTransiti|
              00000190  6f 6e 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6f 62  |onTime":{},"f:ob|
              000001a0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001b0  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              000001c0  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000001d0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              000001e0  6f 64 53 63 68 65 64 75  6c 65 64 5c 22 7d 22 3a  |odScheduled\"}":|
              000001f0  7b 22 66 3a 6f 62 73 65  72 76 65 64 47 65 6e 65  |{"f:observedGene|
              00000200  72 61 74 69 6f 6e 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |ration":{}},"k:{|
              00000210  5c 22 74 79 70 65 5c 22  3a 5c 22 52 65 61 64 79  |\"type\":\"Ready|
              00000220  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000230  6c 61 73 74 50 72 6f 62  65 54 69 6d 65 22 3a 7b  |lastProbeTime":{|
              00000240  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000250  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6f  |ionTime":{},"f:o|
              00000260  62 73 65 72 76 65 64 47  65 6e 65 72 61 74 69 6f  |bservedGeneratio|
              00000270  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000280  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000290  7d 2c 22 66 3a 63 6f 6e  74 61 69 6e 65 72 53 74  |},"f:containerSt|
              000002a0  61 74 75 73 65 73 22 3a  7b 7d 2c 22 66 3a 68 6f  |atuses":{},"f:ho|
              000002b0  73 74 49 50 22 3a 7b 7d  2c 22 66 3a 68 6f 73 74  |stIP":{},"f:host|
              000002c0  49 50 73 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |IPs":{},"f:obser|
              000002d0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002e0  7d 2c 22 66 3a 70 68 61  73 65 22 3a 7b 7d 2c 22  |},"f:phase":{},"|
              000002f0  66 3a 70 6f 64 49 50 22  3a 7b 7d 2c 22 66 3a 70  |f:podIP":{},"f:p|
              00000300  6f 64 49 50 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |odIPs":{".":{},"|
              00000310  6b 3a 7b 5c 22 69 70 5c  22 3a 5c 22 31 39 32 2e  |k:{\"ip\":\"192.|
              00000320  31 36 38 2e 34 2e 31 36  31 5c 22 7d 22 3a 7b 22  |168.4.161\"}":{"|
              00000330  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000340  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000350  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jk7cw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jk7cw",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-18-79",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594379,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594378,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594379,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594379,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594378,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.18.79",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.18.79"
        }
      },
      PodIP: (string) (len=13) "192.168.4.161",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.4.161"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892594378,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63892594378,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://a8d1c3006af60b3dc5131c89c114623bc1fa1dbc9a4a2ac80b8005ffbec3e72e",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-jk7cw",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0904 14:53:04.206785 23 deployment.go:68] Pod "webserver-deployment-76fc67f65c-2phg6" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-76fc67f65c-2phg6",
      GenerateName: (string) (len=32) "webserver-deployment-76fc67f65c-",
      Namespace: (string) (len=15) "deployment-3250",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ad1525b3-d0a0-4986-be17-abba526678f9",
      ResourceVersion: (string) (len=5) "11076",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892594382,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "76fc67f65c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-76fc67f65c",
          UID: (types.UID) (len=36) "a9aec87d-8d42-49d1-80fd-73b05b35f45b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594382,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 39  61 65 63 38 37 64 2d 38  |d\":\"a9aec87d-8|
              00000090  64 34 32 2d 34 39 64 31  2d 38 30 66 64 2d 37 33  |d42-49d1-80fd-73|
              000000a0  62 30 35 62 33 35 66 34  35 62 5c 22 7d 22 3a 7b  |b05b35f45b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594383,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=897) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 6f 62 73 65 72 76 65  |e":{},"f:observe|
              00000090  64 47 65 6e 65 72 61 74  69 6f 6e 22 3a 7b 7d 2c  |dGeneration":{},|
              000000a0  22 66 3a 72 65 61 73 6f  6e 22 3a 7b 7d 2c 22 66  |"f:reason":{},"f|
              000000b0  3a 73 74 61 74 75 73 22  3a 7b 7d 2c 22 66 3a 74  |:status":{},"f:t|
              000000c0  79 70 65 22 3a 7b 7d 7d  2c 22 6b 3a 7b 5c 22 74  |ype":{}},"k:{\"t|
              000000d0  79 70 65 5c 22 3a 5c 22  49 6e 69 74 69 61 6c 69  |ype\":\"Initiali|
              000000e0  7a 65 64 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |zed\"}":{".":{},|
              000000f0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              00000110  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              00000120  66 3a 6f 62 73 65 72 76  65 64 47 65 6e 65 72 61  |f:observedGenera|
              00000130  74 69 6f 6e 22 3a 7b 7d  2c 22 66 3a 73 74 61 74  |tion":{},"f:stat|
              00000140  75 73 22 3a 7b 7d 2c 22  66 3a 74 79 70 65 22 3a  |us":{},"f:type":|
              00000150  7b 7d 7d 2c 22 6b 3a 7b  5c 22 74 79 70 65 5c 22  |{}},"k:{\"type\"|
              00000160  3a 5c 22 50 6f 64 52 65  61 64 79 54 6f 53 74 61  |:\"PodReadyToSta|
              00000170  72 74 43 6f 6e 74 61 69  6e 65 72 73 5c 22 7d 22  |rtContainers\"}"|
              00000180  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000190  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000001a0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |ime":{},"f:obser|
              000001c0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 2c 22 6b 3a  |"f:type":{}},"k:|
              000001f0  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 50 6f 64 53  |{\"type\":\"PodS|
              00000200  63 68 65 64 75 6c 65 64  5c 22 7d 22 3a 7b 22 66  |cheduled\"}":{"f|
              00000210  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000220  69 6f 6e 22 3a 7b 7d 7d  2c 22 6b 3a 7b 5c 22 74  |ion":{}},"k:{\"t|
              00000230  79 70 65 5c 22 3a 5c 22  52 65 61 64 79 5c 22 7d  |ype\":\"Ready\"}|
              00000240  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              00000250  74 50 72 6f 62 65 54 69  6d 65 22 3a 7b 7d 2c 22  |tProbeTime":{},"|
              00000260  66 3a 6c 61 73 74 54 72  61 6e 73 69 74 69 6f 6e  |f:lastTransition|
              00000270  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000280  61 67 65 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |age":{},"f:obser|
              00000290  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002a0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              000002b0  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              000002c0  3a 74 79 70 65 22 3a 7b  7d 7d 7d 2c 22 66 3a 63  |:type":{}}},"f:c|
              000002d0  6f 6e 74 61 69 6e 65 72  53 74 61 74 75 73 65 73  |ontainerStatuses|
              000002e0  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 22 3a  |":{},"f:hostIP":|
              000002f0  7b 7d 2c 22 66 3a 68 6f  73 74 49 50 73 22 3a 7b  |{},"f:hostIPs":{|
              00000300  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000310  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 70  |eration":{},"f:p|
              00000320  6f 64 49 50 22 3a 7b 7d  2c 22 66 3a 70 6f 64 49  |odIP":{},"f:podI|
              00000330  50 73 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 6b 3a 7b  |Ps":{".":{},"k:{|
              00000340  5c 22 69 70 5c 22 3a 5c  22 31 39 32 2e 31 36 38  |\"ip\":\"192.168|
              00000350  2e 34 2e 31 36 36 5c 22  7d 22 3a 7b 22 2e 22 3a  |.4.166\"}":{".":|
              00000360  7b 7d 2c 22 66 3a 69 70  22 3a 7b 7d 7d 7d 2c 22  |{},"f:ip":{}}},"|
              00000370  66 3a 73 74 61 72 74 54  69 6d 65 22 3a 7b 7d 7d  |f:startTime":{}}|
              00000380  7d                                                |}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-v8qjm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-v8qjm",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-18-79",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594383,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594382,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594382,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594382,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594382,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.18.79",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.18.79"
        }
      },
      PodIP: (string) (len=13) "192.168.4.166",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.4.166"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892594382,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-v8qjm",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0904 14:53:04.207745 23 deployment.go:68] Pod "webserver-deployment-76fc67f65c-5w57m" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-76fc67f65c-5w57m",
      GenerateName: (string) (len=32) "webserver-deployment-76fc67f65c-",
      Namespace: (string) (len=15) "deployment-3250",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ead16fae-04d3-41a0-bdf2-2da829b171ae",
      ResourceVersion: (string) (len=5) "10887",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892594380,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "76fc67f65c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-76fc67f65c",
          UID: (types.UID) (len=36) "a9aec87d-8d42-49d1-80fd-73b05b35f45b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594380,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 39  61 65 63 38 37 64 2d 38  |d\":\"a9aec87d-8|
              00000090  64 34 32 2d 34 39 64 31  2d 38 30 66 64 2d 37 33  |d42-49d1-80fd-73|
              000000a0  62 30 35 62 33 35 66 34  35 62 5c 22 7d 22 3a 7b  |b05b35f45b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594381,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=898) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 6f 62 73 65 72 76 65  |e":{},"f:observe|
              00000090  64 47 65 6e 65 72 61 74  69 6f 6e 22 3a 7b 7d 2c  |dGeneration":{},|
              000000a0  22 66 3a 72 65 61 73 6f  6e 22 3a 7b 7d 2c 22 66  |"f:reason":{},"f|
              000000b0  3a 73 74 61 74 75 73 22  3a 7b 7d 2c 22 66 3a 74  |:status":{},"f:t|
              000000c0  79 70 65 22 3a 7b 7d 7d  2c 22 6b 3a 7b 5c 22 74  |ype":{}},"k:{\"t|
              000000d0  79 70 65 5c 22 3a 5c 22  49 6e 69 74 69 61 6c 69  |ype\":\"Initiali|
              000000e0  7a 65 64 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |zed\"}":{".":{},|
              000000f0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              00000110  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              00000120  66 3a 6f 62 73 65 72 76  65 64 47 65 6e 65 72 61  |f:observedGenera|
              00000130  74 69 6f 6e 22 3a 7b 7d  2c 22 66 3a 73 74 61 74  |tion":{},"f:stat|
              00000140  75 73 22 3a 7b 7d 2c 22  66 3a 74 79 70 65 22 3a  |us":{},"f:type":|
              00000150  7b 7d 7d 2c 22 6b 3a 7b  5c 22 74 79 70 65 5c 22  |{}},"k:{\"type\"|
              00000160  3a 5c 22 50 6f 64 52 65  61 64 79 54 6f 53 74 61  |:\"PodReadyToSta|
              00000170  72 74 43 6f 6e 74 61 69  6e 65 72 73 5c 22 7d 22  |rtContainers\"}"|
              00000180  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000190  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000001a0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |ime":{},"f:obser|
              000001c0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 2c 22 6b 3a  |"f:type":{}},"k:|
              000001f0  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 50 6f 64 53  |{\"type\":\"PodS|
              00000200  63 68 65 64 75 6c 65 64  5c 22 7d 22 3a 7b 22 66  |cheduled\"}":{"f|
              00000210  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000220  69 6f 6e 22 3a 7b 7d 7d  2c 22 6b 3a 7b 5c 22 74  |ion":{}},"k:{\"t|
              00000230  79 70 65 5c 22 3a 5c 22  52 65 61 64 79 5c 22 7d  |ype\":\"Ready\"}|
              00000240  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              00000250  74 50 72 6f 62 65 54 69  6d 65 22 3a 7b 7d 2c 22  |tProbeTime":{},"|
              00000260  66 3a 6c 61 73 74 54 72  61 6e 73 69 74 69 6f 6e  |f:lastTransition|
              00000270  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000280  61 67 65 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |age":{},"f:obser|
              00000290  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002a0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              000002b0  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              000002c0  3a 74 79 70 65 22 3a 7b  7d 7d 7d 2c 22 66 3a 63  |:type":{}}},"f:c|
              000002d0  6f 6e 74 61 69 6e 65 72  53 74 61 74 75 73 65 73  |ontainerStatuses|
              000002e0  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 22 3a  |":{},"f:hostIP":|
              000002f0  7b 7d 2c 22 66 3a 68 6f  73 74 49 50 73 22 3a 7b  |{},"f:hostIPs":{|
              00000300  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000310  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 70  |eration":{},"f:p|
              00000320  6f 64 49 50 22 3a 7b 7d  2c 22 66 3a 70 6f 64 49  |odIP":{},"f:podI|
              00000330  50 73 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 6b 3a 7b  |Ps":{".":{},"k:{|
              00000340  5c 22 69 70 5c 22 3a 5c  22 31 39 32 2e 31 36 38  |\"ip\":\"192.168|
              00000350  2e 31 38 36 2e 38 35 5c  22 7d 22 3a 7b 22 2e 22  |.186.85\"}":{"."|
              00000360  3a 7b 7d 2c 22 66 3a 69  70 22 3a 7b 7d 7d 7d 2c  |:{},"f:ip":{}}},|
              00000370  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              00000380  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bvv9n",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bvv9n",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-87-111",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594381,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594380,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594380,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594380,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594380,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.87.111",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.87.111"
        }
      },
      PodIP: (string) (len=14) "192.168.186.85",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.186.85"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892594380,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-bvv9n",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0904 14:53:04.208702 23 deployment.go:68] Pod "webserver-deployment-76fc67f65c-66xjv" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-76fc67f65c-66xjv",
      GenerateName: (string) (len=32) "webserver-deployment-76fc67f65c-",
      Namespace: (string) (len=15) "deployment-3250",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b09e5a7a-2bd4-42d7-8066-92e3cb1cbe43",
      ResourceVersion: (string) (len=5) "11149",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892594382,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "76fc67f65c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-76fc67f65c",
          UID: (types.UID) (len=36) "a9aec87d-8d42-49d1-80fd-73b05b35f45b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594382,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 39  61 65 63 38 37 64 2d 38  |d\":\"a9aec87d-8|
              00000090  64 34 32 2d 34 39 64 31  2d 38 30 66 64 2d 37 33  |d42-49d1-80fd-73|
              000000a0  62 30 35 62 33 35 66 34  35 62 5c 22 7d 22 3a 7b  |b05b35f45b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594383,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=898) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 6f 62 73 65 72 76 65  |e":{},"f:observe|
              00000090  64 47 65 6e 65 72 61 74  69 6f 6e 22 3a 7b 7d 2c  |dGeneration":{},|
              000000a0  22 66 3a 72 65 61 73 6f  6e 22 3a 7b 7d 2c 22 66  |"f:reason":{},"f|
              000000b0  3a 73 74 61 74 75 73 22  3a 7b 7d 2c 22 66 3a 74  |:status":{},"f:t|
              000000c0  79 70 65 22 3a 7b 7d 7d  2c 22 6b 3a 7b 5c 22 74  |ype":{}},"k:{\"t|
              000000d0  79 70 65 5c 22 3a 5c 22  49 6e 69 74 69 61 6c 69  |ype\":\"Initiali|
              000000e0  7a 65 64 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |zed\"}":{".":{},|
              000000f0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              00000110  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              00000120  66 3a 6f 62 73 65 72 76  65 64 47 65 6e 65 72 61  |f:observedGenera|
              00000130  74 69 6f 6e 22 3a 7b 7d  2c 22 66 3a 73 74 61 74  |tion":{},"f:stat|
              00000140  75 73 22 3a 7b 7d 2c 22  66 3a 74 79 70 65 22 3a  |us":{},"f:type":|
              00000150  7b 7d 7d 2c 22 6b 3a 7b  5c 22 74 79 70 65 5c 22  |{}},"k:{\"type\"|
              00000160  3a 5c 22 50 6f 64 52 65  61 64 79 54 6f 53 74 61  |:\"PodReadyToSta|
              00000170  72 74 43 6f 6e 74 61 69  6e 65 72 73 5c 22 7d 22  |rtContainers\"}"|
              00000180  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000190  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000001a0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |ime":{},"f:obser|
              000001c0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 2c 22 6b 3a  |"f:type":{}},"k:|
              000001f0  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 50 6f 64 53  |{\"type\":\"PodS|
              00000200  63 68 65 64 75 6c 65 64  5c 22 7d 22 3a 7b 22 66  |cheduled\"}":{"f|
              00000210  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000220  69 6f 6e 22 3a 7b 7d 7d  2c 22 6b 3a 7b 5c 22 74  |ion":{}},"k:{\"t|
              00000230  79 70 65 5c 22 3a 5c 22  52 65 61 64 79 5c 22 7d  |ype\":\"Ready\"}|
              00000240  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              00000250  74 50 72 6f 62 65 54 69  6d 65 22 3a 7b 7d 2c 22  |tProbeTime":{},"|
              00000260  66 3a 6c 61 73 74 54 72  61 6e 73 69 74 69 6f 6e  |f:lastTransition|
              00000270  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000280  61 67 65 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |age":{},"f:obser|
              00000290  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002a0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              000002b0  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              000002c0  3a 74 79 70 65 22 3a 7b  7d 7d 7d 2c 22 66 3a 63  |:type":{}}},"f:c|
              000002d0  6f 6e 74 61 69 6e 65 72  53 74 61 74 75 73 65 73  |ontainerStatuses|
              000002e0  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 22 3a  |":{},"f:hostIP":|
              000002f0  7b 7d 2c 22 66 3a 68 6f  73 74 49 50 73 22 3a 7b  |{},"f:hostIPs":{|
              00000300  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000310  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 70  |eration":{},"f:p|
              00000320  6f 64 49 50 22 3a 7b 7d  2c 22 66 3a 70 6f 64 49  |odIP":{},"f:podI|
              00000330  50 73 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 6b 3a 7b  |Ps":{".":{},"k:{|
              00000340  5c 22 69 70 5c 22 3a 5c  22 31 39 32 2e 31 36 38  |\"ip\":\"192.168|
              00000350  2e 31 38 36 2e 39 31 5c  22 7d 22 3a 7b 22 2e 22  |.186.91\"}":{"."|
              00000360  3a 7b 7d 2c 22 66 3a 69  70 22 3a 7b 7d 7d 7d 2c  |:{},"f:ip":{}}},|
              00000370  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              00000380  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-pk7fb",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-pk7fb",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-87-111",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594383,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594382,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594382,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594382,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594382,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.87.111",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.87.111"
        }
      },
      PodIP: (string) (len=14) "192.168.186.91",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.186.91"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892594382,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-pk7fb",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0904 14:53:04.209672 23 deployment.go:68] Pod "webserver-deployment-76fc67f65c-6t2b8" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-76fc67f65c-6t2b8",
      GenerateName: (string) (len=32) "webserver-deployment-76fc67f65c-",
      Namespace: (string) (len=15) "deployment-3250",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "122392c5-e93d-4ba1-9057-350dfbff2881",
      ResourceVersion: (string) (len=5) "11144",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892594382,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "76fc67f65c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-76fc67f65c",
          UID: (types.UID) (len=36) "a9aec87d-8d42-49d1-80fd-73b05b35f45b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594382,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 39  61 65 63 38 37 64 2d 38  |d\":\"a9aec87d-8|
              00000090  64 34 32 2d 34 39 64 31  2d 38 30 66 64 2d 37 33  |d42-49d1-80fd-73|
              000000a0  62 30 35 62 33 35 66 34  35 62 5c 22 7d 22 3a 7b  |b05b35f45b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594383,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=898) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 6f 62 73 65 72 76 65  |e":{},"f:observe|
              00000090  64 47 65 6e 65 72 61 74  69 6f 6e 22 3a 7b 7d 2c  |dGeneration":{},|
              000000a0  22 66 3a 72 65 61 73 6f  6e 22 3a 7b 7d 2c 22 66  |"f:reason":{},"f|
              000000b0  3a 73 74 61 74 75 73 22  3a 7b 7d 2c 22 66 3a 74  |:status":{},"f:t|
              000000c0  79 70 65 22 3a 7b 7d 7d  2c 22 6b 3a 7b 5c 22 74  |ype":{}},"k:{\"t|
              000000d0  79 70 65 5c 22 3a 5c 22  49 6e 69 74 69 61 6c 69  |ype\":\"Initiali|
              000000e0  7a 65 64 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |zed\"}":{".":{},|
              000000f0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              00000110  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              00000120  66 3a 6f 62 73 65 72 76  65 64 47 65 6e 65 72 61  |f:observedGenera|
              00000130  74 69 6f 6e 22 3a 7b 7d  2c 22 66 3a 73 74 61 74  |tion":{},"f:stat|
              00000140  75 73 22 3a 7b 7d 2c 22  66 3a 74 79 70 65 22 3a  |us":{},"f:type":|
              00000150  7b 7d 7d 2c 22 6b 3a 7b  5c 22 74 79 70 65 5c 22  |{}},"k:{\"type\"|
              00000160  3a 5c 22 50 6f 64 52 65  61 64 79 54 6f 53 74 61  |:\"PodReadyToSta|
              00000170  72 74 43 6f 6e 74 61 69  6e 65 72 73 5c 22 7d 22  |rtContainers\"}"|
              00000180  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000190  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000001a0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |ime":{},"f:obser|
              000001c0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 2c 22 6b 3a  |"f:type":{}},"k:|
              000001f0  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 50 6f 64 53  |{\"type\":\"PodS|
              00000200  63 68 65 64 75 6c 65 64  5c 22 7d 22 3a 7b 22 66  |cheduled\"}":{"f|
              00000210  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000220  69 6f 6e 22 3a 7b 7d 7d  2c 22 6b 3a 7b 5c 22 74  |ion":{}},"k:{\"t|
              00000230  79 70 65 5c 22 3a 5c 22  52 65 61 64 79 5c 22 7d  |ype\":\"Ready\"}|
              00000240  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              00000250  74 50 72 6f 62 65 54 69  6d 65 22 3a 7b 7d 2c 22  |tProbeTime":{},"|
              00000260  66 3a 6c 61 73 74 54 72  61 6e 73 69 74 69 6f 6e  |f:lastTransition|
              00000270  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000280  61 67 65 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |age":{},"f:obser|
              00000290  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002a0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              000002b0  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              000002c0  3a 74 79 70 65 22 3a 7b  7d 7d 7d 2c 22 66 3a 63  |:type":{}}},"f:c|
              000002d0  6f 6e 74 61 69 6e 65 72  53 74 61 74 75 73 65 73  |ontainerStatuses|
              000002e0  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 22 3a  |":{},"f:hostIP":|
              000002f0  7b 7d 2c 22 66 3a 68 6f  73 74 49 50 73 22 3a 7b  |{},"f:hostIPs":{|
              00000300  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000310  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 70  |eration":{},"f:p|
              00000320  6f 64 49 50 22 3a 7b 7d  2c 22 66 3a 70 6f 64 49  |odIP":{},"f:podI|
              00000330  50 73 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 6b 3a 7b  |Ps":{".":{},"k:{|
              00000340  5c 22 69 70 5c 22 3a 5c  22 31 39 32 2e 31 36 38  |\"ip\":\"192.168|
              00000350  2e 31 38 36 2e 38 36 5c  22 7d 22 3a 7b 22 2e 22  |.186.86\"}":{"."|
              00000360  3a 7b 7d 2c 22 66 3a 69  70 22 3a 7b 7d 7d 7d 2c  |:{},"f:ip":{}}},|
              00000370  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              00000380  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-d2n4s",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-d2n4s",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-87-111",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594383,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594382,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594382,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594382,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594382,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.87.111",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.87.111"
        }
      },
      PodIP: (string) (len=14) "192.168.186.86",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.186.86"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892594382,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-d2n4s",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0904 14:53:04.210655 23 deployment.go:68] Pod "webserver-deployment-76fc67f65c-72g4g" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-76fc67f65c-72g4g",
      GenerateName: (string) (len=32) "webserver-deployment-76fc67f65c-",
      Namespace: (string) (len=15) "deployment-3250",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c5120efd-483b-4e8f-b6c5-27b9f09de6ce",
      ResourceVersion: (string) (len=5) "11150",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892594382,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "76fc67f65c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-76fc67f65c",
          UID: (types.UID) (len=36) "a9aec87d-8d42-49d1-80fd-73b05b35f45b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594382,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 39  61 65 63 38 37 64 2d 38  |d\":\"a9aec87d-8|
              00000090  64 34 32 2d 34 39 64 31  2d 38 30 66 64 2d 37 33  |d42-49d1-80fd-73|
              000000a0  62 30 35 62 33 35 66 34  35 62 5c 22 7d 22 3a 7b  |b05b35f45b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594383,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=898) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 6f 62 73 65 72 76 65  |e":{},"f:observe|
              00000090  64 47 65 6e 65 72 61 74  69 6f 6e 22 3a 7b 7d 2c  |dGeneration":{},|
              000000a0  22 66 3a 72 65 61 73 6f  6e 22 3a 7b 7d 2c 22 66  |"f:reason":{},"f|
              000000b0  3a 73 74 61 74 75 73 22  3a 7b 7d 2c 22 66 3a 74  |:status":{},"f:t|
              000000c0  79 70 65 22 3a 7b 7d 7d  2c 22 6b 3a 7b 5c 22 74  |ype":{}},"k:{\"t|
              000000d0  79 70 65 5c 22 3a 5c 22  49 6e 69 74 69 61 6c 69  |ype\":\"Initiali|
              000000e0  7a 65 64 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |zed\"}":{".":{},|
              000000f0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              00000110  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              00000120  66 3a 6f 62 73 65 72 76  65 64 47 65 6e 65 72 61  |f:observedGenera|
              00000130  74 69 6f 6e 22 3a 7b 7d  2c 22 66 3a 73 74 61 74  |tion":{},"f:stat|
              00000140  75 73 22 3a 7b 7d 2c 22  66 3a 74 79 70 65 22 3a  |us":{},"f:type":|
              00000150  7b 7d 7d 2c 22 6b 3a 7b  5c 22 74 79 70 65 5c 22  |{}},"k:{\"type\"|
              00000160  3a 5c 22 50 6f 64 52 65  61 64 79 54 6f 53 74 61  |:\"PodReadyToSta|
              00000170  72 74 43 6f 6e 74 61 69  6e 65 72 73 5c 22 7d 22  |rtContainers\"}"|
              00000180  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000190  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000001a0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |ime":{},"f:obser|
              000001c0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 2c 22 6b 3a  |"f:type":{}},"k:|
              000001f0  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 50 6f 64 53  |{\"type\":\"PodS|
              00000200  63 68 65 64 75 6c 65 64  5c 22 7d 22 3a 7b 22 66  |cheduled\"}":{"f|
              00000210  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000220  69 6f 6e 22 3a 7b 7d 7d  2c 22 6b 3a 7b 5c 22 74  |ion":{}},"k:{\"t|
              00000230  79 70 65 5c 22 3a 5c 22  52 65 61 64 79 5c 22 7d  |ype\":\"Ready\"}|
              00000240  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              00000250  74 50 72 6f 62 65 54 69  6d 65 22 3a 7b 7d 2c 22  |tProbeTime":{},"|
              00000260  66 3a 6c 61 73 74 54 72  61 6e 73 69 74 69 6f 6e  |f:lastTransition|
              00000270  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000280  61 67 65 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |age":{},"f:obser|
              00000290  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002a0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              000002b0  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              000002c0  3a 74 79 70 65 22 3a 7b  7d 7d 7d 2c 22 66 3a 63  |:type":{}}},"f:c|
              000002d0  6f 6e 74 61 69 6e 65 72  53 74 61 74 75 73 65 73  |ontainerStatuses|
              000002e0  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 22 3a  |":{},"f:hostIP":|
              000002f0  7b 7d 2c 22 66 3a 68 6f  73 74 49 50 73 22 3a 7b  |{},"f:hostIPs":{|
              00000300  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000310  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 70  |eration":{},"f:p|
              00000320  6f 64 49 50 22 3a 7b 7d  2c 22 66 3a 70 6f 64 49  |odIP":{},"f:podI|
              00000330  50 73 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 6b 3a 7b  |Ps":{".":{},"k:{|
              00000340  5c 22 69 70 5c 22 3a 5c  22 31 39 32 2e 31 36 38  |\"ip\":\"192.168|
              00000350  2e 31 38 36 2e 38 39 5c  22 7d 22 3a 7b 22 2e 22  |.186.89\"}":{"."|
              00000360  3a 7b 7d 2c 22 66 3a 69  70 22 3a 7b 7d 7d 7d 2c  |:{},"f:ip":{}}},|
              00000370  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              00000380  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rr9gz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rr9gz",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-87-111",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594383,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594382,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594382,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594382,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594382,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.87.111",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.87.111"
        }
      },
      PodIP: (string) (len=14) "192.168.186.89",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.186.89"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892594382,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-rr9gz",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0904 14:53:04.211769 23 deployment.go:68] Pod "webserver-deployment-76fc67f65c-7xr25" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-76fc67f65c-7xr25",
      GenerateName: (string) (len=32) "webserver-deployment-76fc67f65c-",
      Namespace: (string) (len=15) "deployment-3250",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "79f61bba-75a8-41ec-966e-1478bbe30496",
      ResourceVersion: (string) (len=5) "10874",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892594380,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "76fc67f65c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-76fc67f65c",
          UID: (types.UID) (len=36) "a9aec87d-8d42-49d1-80fd-73b05b35f45b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594380,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 39  61 65 63 38 37 64 2d 38  |d\":\"a9aec87d-8|
              00000090  64 34 32 2d 34 39 64 31  2d 38 30 66 64 2d 37 33  |d42-49d1-80fd-73|
              000000a0  62 30 35 62 33 35 66 34  35 62 5c 22 7d 22 3a 7b  |b05b35f45b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594380,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=898) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 6f 62 73 65 72 76 65  |e":{},"f:observe|
              00000090  64 47 65 6e 65 72 61 74  69 6f 6e 22 3a 7b 7d 2c  |dGeneration":{},|
              000000a0  22 66 3a 72 65 61 73 6f  6e 22 3a 7b 7d 2c 22 66  |"f:reason":{},"f|
              000000b0  3a 73 74 61 74 75 73 22  3a 7b 7d 2c 22 66 3a 74  |:status":{},"f:t|
              000000c0  79 70 65 22 3a 7b 7d 7d  2c 22 6b 3a 7b 5c 22 74  |ype":{}},"k:{\"t|
              000000d0  79 70 65 5c 22 3a 5c 22  49 6e 69 74 69 61 6c 69  |ype\":\"Initiali|
              000000e0  7a 65 64 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |zed\"}":{".":{},|
              000000f0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              00000110  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              00000120  66 3a 6f 62 73 65 72 76  65 64 47 65 6e 65 72 61  |f:observedGenera|
              00000130  74 69 6f 6e 22 3a 7b 7d  2c 22 66 3a 73 74 61 74  |tion":{},"f:stat|
              00000140  75 73 22 3a 7b 7d 2c 22  66 3a 74 79 70 65 22 3a  |us":{},"f:type":|
              00000150  7b 7d 7d 2c 22 6b 3a 7b  5c 22 74 79 70 65 5c 22  |{}},"k:{\"type\"|
              00000160  3a 5c 22 50 6f 64 52 65  61 64 79 54 6f 53 74 61  |:\"PodReadyToSta|
              00000170  72 74 43 6f 6e 74 61 69  6e 65 72 73 5c 22 7d 22  |rtContainers\"}"|
              00000180  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000190  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000001a0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |ime":{},"f:obser|
              000001c0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 2c 22 6b 3a  |"f:type":{}},"k:|
              000001f0  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 50 6f 64 53  |{\"type\":\"PodS|
              00000200  63 68 65 64 75 6c 65 64  5c 22 7d 22 3a 7b 22 66  |cheduled\"}":{"f|
              00000210  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000220  69 6f 6e 22 3a 7b 7d 7d  2c 22 6b 3a 7b 5c 22 74  |ion":{}},"k:{\"t|
              00000230  79 70 65 5c 22 3a 5c 22  52 65 61 64 79 5c 22 7d  |ype\":\"Ready\"}|
              00000240  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              00000250  74 50 72 6f 62 65 54 69  6d 65 22 3a 7b 7d 2c 22  |tProbeTime":{},"|
              00000260  66 3a 6c 61 73 74 54 72  61 6e 73 69 74 69 6f 6e  |f:lastTransition|
              00000270  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000280  61 67 65 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |age":{},"f:obser|
              00000290  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002a0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              000002b0  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              000002c0  3a 74 79 70 65 22 3a 7b  7d 7d 7d 2c 22 66 3a 63  |:type":{}}},"f:c|
              000002d0  6f 6e 74 61 69 6e 65 72  53 74 61 74 75 73 65 73  |ontainerStatuses|
              000002e0  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 22 3a  |":{},"f:hostIP":|
              000002f0  7b 7d 2c 22 66 3a 68 6f  73 74 49 50 73 22 3a 7b  |{},"f:hostIPs":{|
              00000300  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000310  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 70  |eration":{},"f:p|
              00000320  6f 64 49 50 22 3a 7b 7d  2c 22 66 3a 70 6f 64 49  |odIP":{},"f:podI|
              00000330  50 73 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 6b 3a 7b  |Ps":{".":{},"k:{|
              00000340  5c 22 69 70 5c 22 3a 5c  22 31 39 32 2e 31 36 38  |\"ip\":\"192.168|
              00000350  2e 31 30 39 2e 36 38 5c  22 7d 22 3a 7b 22 2e 22  |.109.68\"}":{"."|
              00000360  3a 7b 7d 2c 22 66 3a 69  70 22 3a 7b 7d 7d 7d 2c  |:{},"f:ip":{}}},|
              00000370  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              00000380  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-664dz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-664dz",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-33-202",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594380,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594380,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594380,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594380,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594380,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.33.202",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.33.202"
        }
      },
      PodIP: (string) (len=14) "192.168.109.68",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.109.68"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892594380,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-664dz",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0904 14:53:04.212759 23 deployment.go:68] Pod "webserver-deployment-76fc67f65c-c5l28" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-76fc67f65c-c5l28",
      GenerateName: (string) (len=32) "webserver-deployment-76fc67f65c-",
      Namespace: (string) (len=15) "deployment-3250",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8e6abad4-890a-4bf8-b71b-57af6f78cd31",
      ResourceVersion: (string) (len=5) "11173",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892594382,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "76fc67f65c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-76fc67f65c",
          UID: (types.UID) (len=36) "a9aec87d-8d42-49d1-80fd-73b05b35f45b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594382,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 39  61 65 63 38 37 64 2d 38  |d\":\"a9aec87d-8|
              00000090  64 34 32 2d 34 39 64 31  2d 38 30 66 64 2d 37 33  |d42-49d1-80fd-73|
              000000a0  62 30 35 62 33 35 66 34  35 62 5c 22 7d 22 3a 7b  |b05b35f45b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594384,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=898) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 6f 62 73 65 72 76 65  |e":{},"f:observe|
              00000090  64 47 65 6e 65 72 61 74  69 6f 6e 22 3a 7b 7d 2c  |dGeneration":{},|
              000000a0  22 66 3a 72 65 61 73 6f  6e 22 3a 7b 7d 2c 22 66  |"f:reason":{},"f|
              000000b0  3a 73 74 61 74 75 73 22  3a 7b 7d 2c 22 66 3a 74  |:status":{},"f:t|
              000000c0  79 70 65 22 3a 7b 7d 7d  2c 22 6b 3a 7b 5c 22 74  |ype":{}},"k:{\"t|
              000000d0  79 70 65 5c 22 3a 5c 22  49 6e 69 74 69 61 6c 69  |ype\":\"Initiali|
              000000e0  7a 65 64 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |zed\"}":{".":{},|
              000000f0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              00000110  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              00000120  66 3a 6f 62 73 65 72 76  65 64 47 65 6e 65 72 61  |f:observedGenera|
              00000130  74 69 6f 6e 22 3a 7b 7d  2c 22 66 3a 73 74 61 74  |tion":{},"f:stat|
              00000140  75 73 22 3a 7b 7d 2c 22  66 3a 74 79 70 65 22 3a  |us":{},"f:type":|
              00000150  7b 7d 7d 2c 22 6b 3a 7b  5c 22 74 79 70 65 5c 22  |{}},"k:{\"type\"|
              00000160  3a 5c 22 50 6f 64 52 65  61 64 79 54 6f 53 74 61  |:\"PodReadyToSta|
              00000170  72 74 43 6f 6e 74 61 69  6e 65 72 73 5c 22 7d 22  |rtContainers\"}"|
              00000180  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000190  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000001a0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |ime":{},"f:obser|
              000001c0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 2c 22 6b 3a  |"f:type":{}},"k:|
              000001f0  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 50 6f 64 53  |{\"type\":\"PodS|
              00000200  63 68 65 64 75 6c 65 64  5c 22 7d 22 3a 7b 22 66  |cheduled\"}":{"f|
              00000210  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000220  69 6f 6e 22 3a 7b 7d 7d  2c 22 6b 3a 7b 5c 22 74  |ion":{}},"k:{\"t|
              00000230  79 70 65 5c 22 3a 5c 22  52 65 61 64 79 5c 22 7d  |ype\":\"Ready\"}|
              00000240  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              00000250  74 50 72 6f 62 65 54 69  6d 65 22 3a 7b 7d 2c 22  |tProbeTime":{},"|
              00000260  66 3a 6c 61 73 74 54 72  61 6e 73 69 74 69 6f 6e  |f:lastTransition|
              00000270  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000280  61 67 65 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |age":{},"f:obser|
              00000290  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002a0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              000002b0  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              000002c0  3a 74 79 70 65 22 3a 7b  7d 7d 7d 2c 22 66 3a 63  |:type":{}}},"f:c|
              000002d0  6f 6e 74 61 69 6e 65 72  53 74 61 74 75 73 65 73  |ontainerStatuses|
              000002e0  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 22 3a  |":{},"f:hostIP":|
              000002f0  7b 7d 2c 22 66 3a 68 6f  73 74 49 50 73 22 3a 7b  |{},"f:hostIPs":{|
              00000300  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000310  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 70  |eration":{},"f:p|
              00000320  6f 64 49 50 22 3a 7b 7d  2c 22 66 3a 70 6f 64 49  |odIP":{},"f:podI|
              00000330  50 73 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 6b 3a 7b  |Ps":{".":{},"k:{|
              00000340  5c 22 69 70 5c 22 3a 5c  22 31 39 32 2e 31 36 38  |\"ip\":\"192.168|
              00000350  2e 31 30 39 2e 37 30 5c  22 7d 22 3a 7b 22 2e 22  |.109.70\"}":{"."|
              00000360  3a 7b 7d 2c 22 66 3a 69  70 22 3a 7b 7d 7d 7d 2c  |:{},"f:ip":{}}},|
              00000370  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              00000380  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8vgnj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8vgnj",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-33-202",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594383,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594382,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594382,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594382,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594382,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.33.202",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.33.202"
        }
      },
      PodIP: (string) (len=14) "192.168.109.70",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.109.70"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892594382,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-8vgnj",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0904 14:53:04.213741 23 deployment.go:68] Pod "webserver-deployment-76fc67f65c-f8p8c" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-76fc67f65c-f8p8c",
      GenerateName: (string) (len=32) "webserver-deployment-76fc67f65c-",
      Namespace: (string) (len=15) "deployment-3250",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9ad295a0-e20e-4281-8ac6-9dce487120a2",
      ResourceVersion: (string) (len=5) "10881",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892594380,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "76fc67f65c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-76fc67f65c",
          UID: (types.UID) (len=36) "a9aec87d-8d42-49d1-80fd-73b05b35f45b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594380,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 39  61 65 63 38 37 64 2d 38  |d\":\"a9aec87d-8|
              00000090  64 34 32 2d 34 39 64 31  2d 38 30 66 64 2d 37 33  |d42-49d1-80fd-73|
              000000a0  62 30 35 62 33 35 66 34  35 62 5c 22 7d 22 3a 7b  |b05b35f45b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594381,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=897) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 6f 62 73 65 72 76 65  |e":{},"f:observe|
              00000090  64 47 65 6e 65 72 61 74  69 6f 6e 22 3a 7b 7d 2c  |dGeneration":{},|
              000000a0  22 66 3a 72 65 61 73 6f  6e 22 3a 7b 7d 2c 22 66  |"f:reason":{},"f|
              000000b0  3a 73 74 61 74 75 73 22  3a 7b 7d 2c 22 66 3a 74  |:status":{},"f:t|
              000000c0  79 70 65 22 3a 7b 7d 7d  2c 22 6b 3a 7b 5c 22 74  |ype":{}},"k:{\"t|
              000000d0  79 70 65 5c 22 3a 5c 22  49 6e 69 74 69 61 6c 69  |ype\":\"Initiali|
              000000e0  7a 65 64 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |zed\"}":{".":{},|
              000000f0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              00000110  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              00000120  66 3a 6f 62 73 65 72 76  65 64 47 65 6e 65 72 61  |f:observedGenera|
              00000130  74 69 6f 6e 22 3a 7b 7d  2c 22 66 3a 73 74 61 74  |tion":{},"f:stat|
              00000140  75 73 22 3a 7b 7d 2c 22  66 3a 74 79 70 65 22 3a  |us":{},"f:type":|
              00000150  7b 7d 7d 2c 22 6b 3a 7b  5c 22 74 79 70 65 5c 22  |{}},"k:{\"type\"|
              00000160  3a 5c 22 50 6f 64 52 65  61 64 79 54 6f 53 74 61  |:\"PodReadyToSta|
              00000170  72 74 43 6f 6e 74 61 69  6e 65 72 73 5c 22 7d 22  |rtContainers\"}"|
              00000180  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000190  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000001a0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |ime":{},"f:obser|
              000001c0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 2c 22 6b 3a  |"f:type":{}},"k:|
              000001f0  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 50 6f 64 53  |{\"type\":\"PodS|
              00000200  63 68 65 64 75 6c 65 64  5c 22 7d 22 3a 7b 22 66  |cheduled\"}":{"f|
              00000210  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000220  69 6f 6e 22 3a 7b 7d 7d  2c 22 6b 3a 7b 5c 22 74  |ion":{}},"k:{\"t|
              00000230  79 70 65 5c 22 3a 5c 22  52 65 61 64 79 5c 22 7d  |ype\":\"Ready\"}|
              00000240  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              00000250  74 50 72 6f 62 65 54 69  6d 65 22 3a 7b 7d 2c 22  |tProbeTime":{},"|
              00000260  66 3a 6c 61 73 74 54 72  61 6e 73 69 74 69 6f 6e  |f:lastTransition|
              00000270  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000280  61 67 65 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |age":{},"f:obser|
              00000290  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002a0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              000002b0  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              000002c0  3a 74 79 70 65 22 3a 7b  7d 7d 7d 2c 22 66 3a 63  |:type":{}}},"f:c|
              000002d0  6f 6e 74 61 69 6e 65 72  53 74 61 74 75 73 65 73  |ontainerStatuses|
              000002e0  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 22 3a  |":{},"f:hostIP":|
              000002f0  7b 7d 2c 22 66 3a 68 6f  73 74 49 50 73 22 3a 7b  |{},"f:hostIPs":{|
              00000300  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000310  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 70  |eration":{},"f:p|
              00000320  6f 64 49 50 22 3a 7b 7d  2c 22 66 3a 70 6f 64 49  |odIP":{},"f:podI|
              00000330  50 73 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 6b 3a 7b  |Ps":{".":{},"k:{|
              00000340  5c 22 69 70 5c 22 3a 5c  22 31 39 32 2e 31 36 38  |\"ip\":\"192.168|
              00000350  2e 34 2e 31 36 33 5c 22  7d 22 3a 7b 22 2e 22 3a  |.4.163\"}":{".":|
              00000360  7b 7d 2c 22 66 3a 69 70  22 3a 7b 7d 7d 7d 2c 22  |{},"f:ip":{}}},"|
              00000370  66 3a 73 74 61 72 74 54  69 6d 65 22 3a 7b 7d 7d  |f:startTime":{}}|
              00000380  7d                                                |}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ww5sl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ww5sl",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-18-79",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594381,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594380,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594380,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594380,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594380,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.18.79",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.18.79"
        }
      },
      PodIP: (string) (len=13) "192.168.4.163",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.4.163"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892594380,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-ww5sl",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0904 14:53:04.214806 23 deployment.go:68] Pod "webserver-deployment-76fc67f65c-lcldn" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-76fc67f65c-lcldn",
      GenerateName: (string) (len=32) "webserver-deployment-76fc67f65c-",
      Namespace: (string) (len=15) "deployment-3250",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "69ede377-600b-478e-ae89-fed89374f970",
      ResourceVersion: (string) (len=5) "10877",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892594380,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "76fc67f65c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-76fc67f65c",
          UID: (types.UID) (len=36) "a9aec87d-8d42-49d1-80fd-73b05b35f45b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594380,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 39  61 65 63 38 37 64 2d 38  |d\":\"a9aec87d-8|
              00000090  64 34 32 2d 34 39 64 31  2d 38 30 66 64 2d 37 33  |d42-49d1-80fd-73|
              000000a0  62 30 35 62 33 35 66 34  35 62 5c 22 7d 22 3a 7b  |b05b35f45b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594380,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=898) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 6f 62 73 65 72 76 65  |e":{},"f:observe|
              00000090  64 47 65 6e 65 72 61 74  69 6f 6e 22 3a 7b 7d 2c  |dGeneration":{},|
              000000a0  22 66 3a 72 65 61 73 6f  6e 22 3a 7b 7d 2c 22 66  |"f:reason":{},"f|
              000000b0  3a 73 74 61 74 75 73 22  3a 7b 7d 2c 22 66 3a 74  |:status":{},"f:t|
              000000c0  79 70 65 22 3a 7b 7d 7d  2c 22 6b 3a 7b 5c 22 74  |ype":{}},"k:{\"t|
              000000d0  79 70 65 5c 22 3a 5c 22  49 6e 69 74 69 61 6c 69  |ype\":\"Initiali|
              000000e0  7a 65 64 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |zed\"}":{".":{},|
              000000f0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              00000110  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              00000120  66 3a 6f 62 73 65 72 76  65 64 47 65 6e 65 72 61  |f:observedGenera|
              00000130  74 69 6f 6e 22 3a 7b 7d  2c 22 66 3a 73 74 61 74  |tion":{},"f:stat|
              00000140  75 73 22 3a 7b 7d 2c 22  66 3a 74 79 70 65 22 3a  |us":{},"f:type":|
              00000150  7b 7d 7d 2c 22 6b 3a 7b  5c 22 74 79 70 65 5c 22  |{}},"k:{\"type\"|
              00000160  3a 5c 22 50 6f 64 52 65  61 64 79 54 6f 53 74 61  |:\"PodReadyToSta|
              00000170  72 74 43 6f 6e 74 61 69  6e 65 72 73 5c 22 7d 22  |rtContainers\"}"|
              00000180  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000190  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000001a0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |ime":{},"f:obser|
              000001c0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 2c 22 6b 3a  |"f:type":{}},"k:|
              000001f0  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 50 6f 64 53  |{\"type\":\"PodS|
              00000200  63 68 65 64 75 6c 65 64  5c 22 7d 22 3a 7b 22 66  |cheduled\"}":{"f|
              00000210  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000220  69 6f 6e 22 3a 7b 7d 7d  2c 22 6b 3a 7b 5c 22 74  |ion":{}},"k:{\"t|
              00000230  79 70 65 5c 22 3a 5c 22  52 65 61 64 79 5c 22 7d  |ype\":\"Ready\"}|
              00000240  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              00000250  74 50 72 6f 62 65 54 69  6d 65 22 3a 7b 7d 2c 22  |tProbeTime":{},"|
              00000260  66 3a 6c 61 73 74 54 72  61 6e 73 69 74 69 6f 6e  |f:lastTransition|
              00000270  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000280  61 67 65 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |age":{},"f:obser|
              00000290  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002a0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              000002b0  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              000002c0  3a 74 79 70 65 22 3a 7b  7d 7d 7d 2c 22 66 3a 63  |:type":{}}},"f:c|
              000002d0  6f 6e 74 61 69 6e 65 72  53 74 61 74 75 73 65 73  |ontainerStatuses|
              000002e0  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 22 3a  |":{},"f:hostIP":|
              000002f0  7b 7d 2c 22 66 3a 68 6f  73 74 49 50 73 22 3a 7b  |{},"f:hostIPs":{|
              00000300  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000310  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 70  |eration":{},"f:p|
              00000320  6f 64 49 50 22 3a 7b 7d  2c 22 66 3a 70 6f 64 49  |odIP":{},"f:podI|
              00000330  50 73 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 6b 3a 7b  |Ps":{".":{},"k:{|
              00000340  5c 22 69 70 5c 22 3a 5c  22 31 39 32 2e 31 36 38  |\"ip\":\"192.168|
              00000350  2e 31 30 39 2e 36 36 5c  22 7d 22 3a 7b 22 2e 22  |.109.66\"}":{"."|
              00000360  3a 7b 7d 2c 22 66 3a 69  70 22 3a 7b 7d 7d 7d 2c  |:{},"f:ip":{}}},|
              00000370  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              00000380  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zq7ds",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zq7ds",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-33-202",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594380,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594380,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594380,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594380,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594380,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.33.202",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.33.202"
        }
      },
      PodIP: (string) (len=14) "192.168.109.66",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.109.66"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892594380,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-zq7ds",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0904 14:53:04.215761 23 deployment.go:68] Pod "webserver-deployment-76fc67f65c-mdckn" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-76fc67f65c-mdckn",
      GenerateName: (string) (len=32) "webserver-deployment-76fc67f65c-",
      Namespace: (string) (len=15) "deployment-3250",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fb117608-a6df-4200-ab5a-9ed5bf6310e7",
      ResourceVersion: (string) (len=5) "11161",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892594382,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "76fc67f65c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-76fc67f65c",
          UID: (types.UID) (len=36) "a9aec87d-8d42-49d1-80fd-73b05b35f45b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594382,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 39  61 65 63 38 37 64 2d 38  |d\":\"a9aec87d-8|
              00000090  64 34 32 2d 34 39 64 31  2d 38 30 66 64 2d 37 33  |d42-49d1-80fd-73|
              000000a0  62 30 35 62 33 35 66 34  35 62 5c 22 7d 22 3a 7b  |b05b35f45b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594384,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=898) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 6f 62 73 65 72 76 65  |e":{},"f:observe|
              00000090  64 47 65 6e 65 72 61 74  69 6f 6e 22 3a 7b 7d 2c  |dGeneration":{},|
              000000a0  22 66 3a 72 65 61 73 6f  6e 22 3a 7b 7d 2c 22 66  |"f:reason":{},"f|
              000000b0  3a 73 74 61 74 75 73 22  3a 7b 7d 2c 22 66 3a 74  |:status":{},"f:t|
              000000c0  79 70 65 22 3a 7b 7d 7d  2c 22 6b 3a 7b 5c 22 74  |ype":{}},"k:{\"t|
              000000d0  79 70 65 5c 22 3a 5c 22  49 6e 69 74 69 61 6c 69  |ype\":\"Initiali|
              000000e0  7a 65 64 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |zed\"}":{".":{},|
              000000f0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              00000110  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              00000120  66 3a 6f 62 73 65 72 76  65 64 47 65 6e 65 72 61  |f:observedGenera|
              00000130  74 69 6f 6e 22 3a 7b 7d  2c 22 66 3a 73 74 61 74  |tion":{},"f:stat|
              00000140  75 73 22 3a 7b 7d 2c 22  66 3a 74 79 70 65 22 3a  |us":{},"f:type":|
              00000150  7b 7d 7d 2c 22 6b 3a 7b  5c 22 74 79 70 65 5c 22  |{}},"k:{\"type\"|
              00000160  3a 5c 22 50 6f 64 52 65  61 64 79 54 6f 53 74 61  |:\"PodReadyToSta|
              00000170  72 74 43 6f 6e 74 61 69  6e 65 72 73 5c 22 7d 22  |rtContainers\"}"|
              00000180  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000190  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000001a0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |ime":{},"f:obser|
              000001c0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 2c 22 6b 3a  |"f:type":{}},"k:|
              000001f0  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 50 6f 64 53  |{\"type\":\"PodS|
              00000200  63 68 65 64 75 6c 65 64  5c 22 7d 22 3a 7b 22 66  |cheduled\"}":{"f|
              00000210  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000220  69 6f 6e 22 3a 7b 7d 7d  2c 22 6b 3a 7b 5c 22 74  |ion":{}},"k:{\"t|
              00000230  79 70 65 5c 22 3a 5c 22  52 65 61 64 79 5c 22 7d  |ype\":\"Ready\"}|
              00000240  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              00000250  74 50 72 6f 62 65 54 69  6d 65 22 3a 7b 7d 2c 22  |tProbeTime":{},"|
              00000260  66 3a 6c 61 73 74 54 72  61 6e 73 69 74 69 6f 6e  |f:lastTransition|
              00000270  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000280  61 67 65 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |age":{},"f:obser|
              00000290  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002a0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              000002b0  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              000002c0  3a 74 79 70 65 22 3a 7b  7d 7d 7d 2c 22 66 3a 63  |:type":{}}},"f:c|
              000002d0  6f 6e 74 61 69 6e 65 72  53 74 61 74 75 73 65 73  |ontainerStatuses|
              000002e0  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 22 3a  |":{},"f:hostIP":|
              000002f0  7b 7d 2c 22 66 3a 68 6f  73 74 49 50 73 22 3a 7b  |{},"f:hostIPs":{|
              00000300  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000310  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 70  |eration":{},"f:p|
              00000320  6f 64 49 50 22 3a 7b 7d  2c 22 66 3a 70 6f 64 49  |odIP":{},"f:podI|
              00000330  50 73 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 6b 3a 7b  |Ps":{".":{},"k:{|
              00000340  5c 22 69 70 5c 22 3a 5c  22 31 39 32 2e 31 36 38  |\"ip\":\"192.168|
              00000350  2e 31 30 39 2e 37 33 5c  22 7d 22 3a 7b 22 2e 22  |.109.73\"}":{"."|
              00000360  3a 7b 7d 2c 22 66 3a 69  70 22 3a 7b 7d 7d 7d 2c  |:{},"f:ip":{}}},|
              00000370  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              00000380  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-q7fz7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-q7fz7",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-33-202",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594383,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594382,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594382,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594382,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594382,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.33.202",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.33.202"
        }
      },
      PodIP: (string) (len=14) "192.168.109.73",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.109.73"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892594382,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-q7fz7",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0904 14:53:04.216727 23 deployment.go:68] Pod "webserver-deployment-76fc67f65c-qt2fv" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-76fc67f65c-qt2fv",
      GenerateName: (string) (len=32) "webserver-deployment-76fc67f65c-",
      Namespace: (string) (len=15) "deployment-3250",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1bf18693-01df-4255-ad46-9fea484f408b",
      ResourceVersion: (string) (len=5) "10884",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892594380,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "76fc67f65c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-76fc67f65c",
          UID: (types.UID) (len=36) "a9aec87d-8d42-49d1-80fd-73b05b35f45b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594380,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 39  61 65 63 38 37 64 2d 38  |d\":\"a9aec87d-8|
              00000090  64 34 32 2d 34 39 64 31  2d 38 30 66 64 2d 37 33  |d42-49d1-80fd-73|
              000000a0  62 30 35 62 33 35 66 34  35 62 5c 22 7d 22 3a 7b  |b05b35f45b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594381,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=897) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 6f 62 73 65 72 76 65  |e":{},"f:observe|
              00000090  64 47 65 6e 65 72 61 74  69 6f 6e 22 3a 7b 7d 2c  |dGeneration":{},|
              000000a0  22 66 3a 72 65 61 73 6f  6e 22 3a 7b 7d 2c 22 66  |"f:reason":{},"f|
              000000b0  3a 73 74 61 74 75 73 22  3a 7b 7d 2c 22 66 3a 74  |:status":{},"f:t|
              000000c0  79 70 65 22 3a 7b 7d 7d  2c 22 6b 3a 7b 5c 22 74  |ype":{}},"k:{\"t|
              000000d0  79 70 65 5c 22 3a 5c 22  49 6e 69 74 69 61 6c 69  |ype\":\"Initiali|
              000000e0  7a 65 64 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |zed\"}":{".":{},|
              000000f0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              00000110  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              00000120  66 3a 6f 62 73 65 72 76  65 64 47 65 6e 65 72 61  |f:observedGenera|
              00000130  74 69 6f 6e 22 3a 7b 7d  2c 22 66 3a 73 74 61 74  |tion":{},"f:stat|
              00000140  75 73 22 3a 7b 7d 2c 22  66 3a 74 79 70 65 22 3a  |us":{},"f:type":|
              00000150  7b 7d 7d 2c 22 6b 3a 7b  5c 22 74 79 70 65 5c 22  |{}},"k:{\"type\"|
              00000160  3a 5c 22 50 6f 64 52 65  61 64 79 54 6f 53 74 61  |:\"PodReadyToSta|
              00000170  72 74 43 6f 6e 74 61 69  6e 65 72 73 5c 22 7d 22  |rtContainers\"}"|
              00000180  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000190  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000001a0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |ime":{},"f:obser|
              000001c0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 2c 22 6b 3a  |"f:type":{}},"k:|
              000001f0  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 50 6f 64 53  |{\"type\":\"PodS|
              00000200  63 68 65 64 75 6c 65 64  5c 22 7d 22 3a 7b 22 66  |cheduled\"}":{"f|
              00000210  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000220  69 6f 6e 22 3a 7b 7d 7d  2c 22 6b 3a 7b 5c 22 74  |ion":{}},"k:{\"t|
              00000230  79 70 65 5c 22 3a 5c 22  52 65 61 64 79 5c 22 7d  |ype\":\"Ready\"}|
              00000240  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              00000250  74 50 72 6f 62 65 54 69  6d 65 22 3a 7b 7d 2c 22  |tProbeTime":{},"|
              00000260  66 3a 6c 61 73 74 54 72  61 6e 73 69 74 69 6f 6e  |f:lastTransition|
              00000270  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000280  61 67 65 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |age":{},"f:obser|
              00000290  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002a0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              000002b0  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              000002c0  3a 74 79 70 65 22 3a 7b  7d 7d 7d 2c 22 66 3a 63  |:type":{}}},"f:c|
              000002d0  6f 6e 74 61 69 6e 65 72  53 74 61 74 75 73 65 73  |ontainerStatuses|
              000002e0  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 22 3a  |":{},"f:hostIP":|
              000002f0  7b 7d 2c 22 66 3a 68 6f  73 74 49 50 73 22 3a 7b  |{},"f:hostIPs":{|
              00000300  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000310  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 70  |eration":{},"f:p|
              00000320  6f 64 49 50 22 3a 7b 7d  2c 22 66 3a 70 6f 64 49  |odIP":{},"f:podI|
              00000330  50 73 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 6b 3a 7b  |Ps":{".":{},"k:{|
              00000340  5c 22 69 70 5c 22 3a 5c  22 31 39 32 2e 31 36 38  |\"ip\":\"192.168|
              00000350  2e 34 2e 31 36 34 5c 22  7d 22 3a 7b 22 2e 22 3a  |.4.164\"}":{".":|
              00000360  7b 7d 2c 22 66 3a 69 70  22 3a 7b 7d 7d 7d 2c 22  |{},"f:ip":{}}},"|
              00000370  66 3a 73 74 61 72 74 54  69 6d 65 22 3a 7b 7d 7d  |f:startTime":{}}|
              00000380  7d                                                |}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4ff2d",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4ff2d",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-18-79",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594381,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594380,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594380,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594380,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594380,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.18.79",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.18.79"
        }
      },
      PodIP: (string) (len=13) "192.168.4.164",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.4.164"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892594380,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-4ff2d",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0904 14:53:04.217677 23 deployment.go:68] Pod "webserver-deployment-76fc67f65c-wf4bv" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-76fc67f65c-wf4bv",
      GenerateName: (string) (len=32) "webserver-deployment-76fc67f65c-",
      Namespace: (string) (len=15) "deployment-3250",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "df940cce-a7e3-4e57-ac44-6f9cd53db6bc",
      ResourceVersion: (string) (len=5) "11158",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892594382,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "76fc67f65c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-76fc67f65c",
          UID: (types.UID) (len=36) "a9aec87d-8d42-49d1-80fd-73b05b35f45b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594382,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 39  61 65 63 38 37 64 2d 38  |d\":\"a9aec87d-8|
              00000090  64 34 32 2d 34 39 64 31  2d 38 30 66 64 2d 37 33  |d42-49d1-80fd-73|
              000000a0  62 30 35 62 33 35 66 34  35 62 5c 22 7d 22 3a 7b  |b05b35f45b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594383,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=898) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 6f 62 73 65 72 76 65  |e":{},"f:observe|
              00000090  64 47 65 6e 65 72 61 74  69 6f 6e 22 3a 7b 7d 2c  |dGeneration":{},|
              000000a0  22 66 3a 72 65 61 73 6f  6e 22 3a 7b 7d 2c 22 66  |"f:reason":{},"f|
              000000b0  3a 73 74 61 74 75 73 22  3a 7b 7d 2c 22 66 3a 74  |:status":{},"f:t|
              000000c0  79 70 65 22 3a 7b 7d 7d  2c 22 6b 3a 7b 5c 22 74  |ype":{}},"k:{\"t|
              000000d0  79 70 65 5c 22 3a 5c 22  49 6e 69 74 69 61 6c 69  |ype\":\"Initiali|
              000000e0  7a 65 64 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |zed\"}":{".":{},|
              000000f0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              00000110  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              00000120  66 3a 6f 62 73 65 72 76  65 64 47 65 6e 65 72 61  |f:observedGenera|
              00000130  74 69 6f 6e 22 3a 7b 7d  2c 22 66 3a 73 74 61 74  |tion":{},"f:stat|
              00000140  75 73 22 3a 7b 7d 2c 22  66 3a 74 79 70 65 22 3a  |us":{},"f:type":|
              00000150  7b 7d 7d 2c 22 6b 3a 7b  5c 22 74 79 70 65 5c 22  |{}},"k:{\"type\"|
              00000160  3a 5c 22 50 6f 64 52 65  61 64 79 54 6f 53 74 61  |:\"PodReadyToSta|
              00000170  72 74 43 6f 6e 74 61 69  6e 65 72 73 5c 22 7d 22  |rtContainers\"}"|
              00000180  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000190  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000001a0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |ime":{},"f:obser|
              000001c0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 2c 22 6b 3a  |"f:type":{}},"k:|
              000001f0  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 50 6f 64 53  |{\"type\":\"PodS|
              00000200  63 68 65 64 75 6c 65 64  5c 22 7d 22 3a 7b 22 66  |cheduled\"}":{"f|
              00000210  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000220  69 6f 6e 22 3a 7b 7d 7d  2c 22 6b 3a 7b 5c 22 74  |ion":{}},"k:{\"t|
              00000230  79 70 65 5c 22 3a 5c 22  52 65 61 64 79 5c 22 7d  |ype\":\"Ready\"}|
              00000240  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              00000250  74 50 72 6f 62 65 54 69  6d 65 22 3a 7b 7d 2c 22  |tProbeTime":{},"|
              00000260  66 3a 6c 61 73 74 54 72  61 6e 73 69 74 69 6f 6e  |f:lastTransition|
              00000270  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000280  61 67 65 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |age":{},"f:obser|
              00000290  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002a0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              000002b0  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              000002c0  3a 74 79 70 65 22 3a 7b  7d 7d 7d 2c 22 66 3a 63  |:type":{}}},"f:c|
              000002d0  6f 6e 74 61 69 6e 65 72  53 74 61 74 75 73 65 73  |ontainerStatuses|
              000002e0  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 22 3a  |":{},"f:hostIP":|
              000002f0  7b 7d 2c 22 66 3a 68 6f  73 74 49 50 73 22 3a 7b  |{},"f:hostIPs":{|
              00000300  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000310  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 70  |eration":{},"f:p|
              00000320  6f 64 49 50 22 3a 7b 7d  2c 22 66 3a 70 6f 64 49  |odIP":{},"f:podI|
              00000330  50 73 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 6b 3a 7b  |Ps":{".":{},"k:{|
              00000340  5c 22 69 70 5c 22 3a 5c  22 31 39 32 2e 31 36 38  |\"ip\":\"192.168|
              00000350  2e 31 30 39 2e 37 34 5c  22 7d 22 3a 7b 22 2e 22  |.109.74\"}":{"."|
              00000360  3a 7b 7d 2c 22 66 3a 69  70 22 3a 7b 7d 7d 7d 2c  |:{},"f:ip":{}}},|
              00000370  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              00000380  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-m5vhf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-m5vhf",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-33-202",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594383,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594382,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594382,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594382,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594382,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.33.202",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.33.202"
        }
      },
      PodIP: (string) (len=14) "192.168.109.74",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.109.74"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892594382,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-m5vhf",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0904 14:53:04.218638 23 deployment.go:68] Pod "webserver-deployment-76fc67f65c-xzgl9" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-76fc67f65c-xzgl9",
      GenerateName: (string) (len=32) "webserver-deployment-76fc67f65c-",
      Namespace: (string) (len=15) "deployment-3250",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "df5da721-e764-4c38-b7e6-fe32666ea758",
      ResourceVersion: (string) (len=5) "11185",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892594382,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "76fc67f65c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-76fc67f65c",
          UID: (types.UID) (len=36) "a9aec87d-8d42-49d1-80fd-73b05b35f45b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594382,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 39  61 65 63 38 37 64 2d 38  |d\":\"a9aec87d-8|
              00000090  64 34 32 2d 34 39 64 31  2d 38 30 66 64 2d 37 33  |d42-49d1-80fd-73|
              000000a0  62 30 35 62 33 35 66 34  35 62 5c 22 7d 22 3a 7b  |b05b35f45b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594384,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=897) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 6f 62 73 65 72 76 65  |e":{},"f:observe|
              00000090  64 47 65 6e 65 72 61 74  69 6f 6e 22 3a 7b 7d 2c  |dGeneration":{},|
              000000a0  22 66 3a 72 65 61 73 6f  6e 22 3a 7b 7d 2c 22 66  |"f:reason":{},"f|
              000000b0  3a 73 74 61 74 75 73 22  3a 7b 7d 2c 22 66 3a 74  |:status":{},"f:t|
              000000c0  79 70 65 22 3a 7b 7d 7d  2c 22 6b 3a 7b 5c 22 74  |ype":{}},"k:{\"t|
              000000d0  79 70 65 5c 22 3a 5c 22  49 6e 69 74 69 61 6c 69  |ype\":\"Initiali|
              000000e0  7a 65 64 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |zed\"}":{".":{},|
              000000f0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              00000110  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              00000120  66 3a 6f 62 73 65 72 76  65 64 47 65 6e 65 72 61  |f:observedGenera|
              00000130  74 69 6f 6e 22 3a 7b 7d  2c 22 66 3a 73 74 61 74  |tion":{},"f:stat|
              00000140  75 73 22 3a 7b 7d 2c 22  66 3a 74 79 70 65 22 3a  |us":{},"f:type":|
              00000150  7b 7d 7d 2c 22 6b 3a 7b  5c 22 74 79 70 65 5c 22  |{}},"k:{\"type\"|
              00000160  3a 5c 22 50 6f 64 52 65  61 64 79 54 6f 53 74 61  |:\"PodReadyToSta|
              00000170  72 74 43 6f 6e 74 61 69  6e 65 72 73 5c 22 7d 22  |rtContainers\"}"|
              00000180  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000190  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000001a0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |ime":{},"f:obser|
              000001c0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 2c 22 6b 3a  |"f:type":{}},"k:|
              000001f0  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 50 6f 64 53  |{\"type\":\"PodS|
              00000200  63 68 65 64 75 6c 65 64  5c 22 7d 22 3a 7b 22 66  |cheduled\"}":{"f|
              00000210  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000220  69 6f 6e 22 3a 7b 7d 7d  2c 22 6b 3a 7b 5c 22 74  |ion":{}},"k:{\"t|
              00000230  79 70 65 5c 22 3a 5c 22  52 65 61 64 79 5c 22 7d  |ype\":\"Ready\"}|
              00000240  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              00000250  74 50 72 6f 62 65 54 69  6d 65 22 3a 7b 7d 2c 22  |tProbeTime":{},"|
              00000260  66 3a 6c 61 73 74 54 72  61 6e 73 69 74 69 6f 6e  |f:lastTransition|
              00000270  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000280  61 67 65 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |age":{},"f:obser|
              00000290  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002a0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              000002b0  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              000002c0  3a 74 79 70 65 22 3a 7b  7d 7d 7d 2c 22 66 3a 63  |:type":{}}},"f:c|
              000002d0  6f 6e 74 61 69 6e 65 72  53 74 61 74 75 73 65 73  |ontainerStatuses|
              000002e0  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 22 3a  |":{},"f:hostIP":|
              000002f0  7b 7d 2c 22 66 3a 68 6f  73 74 49 50 73 22 3a 7b  |{},"f:hostIPs":{|
              00000300  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000310  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 70  |eration":{},"f:p|
              00000320  6f 64 49 50 22 3a 7b 7d  2c 22 66 3a 70 6f 64 49  |odIP":{},"f:podI|
              00000330  50 73 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 6b 3a 7b  |Ps":{".":{},"k:{|
              00000340  5c 22 69 70 5c 22 3a 5c  22 31 39 32 2e 31 36 38  |\"ip\":\"192.168|
              00000350  2e 34 2e 31 36 38 5c 22  7d 22 3a 7b 22 2e 22 3a  |.4.168\"}":{".":|
              00000360  7b 7d 2c 22 66 3a 69 70  22 3a 7b 7d 7d 7d 2c 22  |{},"f:ip":{}}},"|
              00000370  66 3a 73 74 61 72 74 54  69 6d 65 22 3a 7b 7d 7d  |f:startTime":{}}|
              00000380  7d                                                |}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-dzpr5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-dzpr5",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-18-79",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594384,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594382,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594382,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594382,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594382,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.18.79",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.18.79"
        }
      },
      PodIP: (string) (len=13) "192.168.4.168",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.4.168"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892594382,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-dzpr5",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0904 14:53:04.219470 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-3250" for this suite. @ 09/04/25 14:53:04.223
• [6.219 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:900
  STEP: Creating a kubernetes client @ 09/04/25 14:53:04.232
  I0904 14:53:04.232119 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename pods @ 09/04/25 14:53:04.232
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:53:04.245
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:53:04.247
  STEP: creating a Pod with a static label @ 09/04/25 14:53:04.282
  STEP: watching for Pod to be ready @ 09/04/25 14:53:04.291
  I0904 14:53:04.292833 23 pods.go:947] observed Pod pod-test in namespace pods-8813 in phase Pending with labels: map[test-pod-static:true] & conditions []
  I0904 14:53:04.297946 23 pods.go:947] observed Pod pod-test in namespace pods-8813 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled 0 True 0001-01-01 00:00:00 +0000 UTC 2025-09-04 14:53:04 +0000 UTC  }]
  I0904 14:53:04.310944 23 pods.go:947] observed Pod pod-test in namespace pods-8813 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers 1 False 0001-01-01 00:00:00 +0000 UTC 2025-09-04 14:53:04 +0000 UTC  } {Initialized 1 True 0001-01-01 00:00:00 +0000 UTC 2025-09-04 14:53:04 +0000 UTC  } {Ready 1 False 0001-01-01 00:00:00 +0000 UTC 2025-09-04 14:53:04 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady 1 False 0001-01-01 00:00:00 +0000 UTC 2025-09-04 14:53:04 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled 1 True 0001-01-01 00:00:00 +0000 UTC 2025-09-04 14:53:04 +0000 UTC  }]
  I0904 14:53:05.143772 23 pods.go:950] Found Pod pod-test in namespace pods-8813 in phase Running with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers 1 True 0001-01-01 00:00:00 +0000 UTC 2025-09-04 14:53:05 +0000 UTC  } {Initialized 1 True 0001-01-01 00:00:00 +0000 UTC 2025-09-04 14:53:04 +0000 UTC  } {Ready 1 True 0001-01-01 00:00:00 +0000 UTC 2025-09-04 14:53:05 +0000 UTC  } {ContainersReady 1 True 0001-01-01 00:00:00 +0000 UTC 2025-09-04 14:53:05 +0000 UTC  } {PodScheduled 1 True 0001-01-01 00:00:00 +0000 UTC 2025-09-04 14:53:04 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 09/04/25 14:53:05.147
  STEP: getting the Pod and ensuring that it's patched @ 09/04/25 14:53:05.156
  STEP: replacing the Pod's status Ready condition to False @ 09/04/25 14:53:05.161
  STEP: check the Pod again to ensure its Ready conditions are False @ 09/04/25 14:53:05.17
  STEP: deleting the Pod via a Collection with a LabelSelector @ 09/04/25 14:53:05.17
  STEP: watching for the Pod to be deleted @ 09/04/25 14:53:05.18
  I0904 14:53:05.181854 23 pods.go:1060] observed event type MODIFIED
  I0904 14:53:06.146284 23 pods.go:1060] observed event type MODIFIED
  I0904 14:53:07.147475 23 pods.go:1060] observed event type MODIFIED
  I0904 14:53:07.277569 23 pods.go:1060] observed event type MODIFIED
  I0904 14:53:08.154062 23 pods.go:1060] observed event type MODIFIED
  I0904 14:53:08.164574 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8813" for this suite. @ 09/04/25 14:53:08.169
• [3.944 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 09/04/25 14:53:08.176
  I0904 14:53:08.176048 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename deployment @ 09/04/25 14:53:08.176
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:53:08.186
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:53:08.189
  I0904 14:53:08.191869 23 deployment.go:1664] Creating simple deployment test-new-deployment
  I0904 14:53:08.204222 23 deployment.go:223] deployment "test-new-deployment" doesn't have the required revision set
  STEP: getting scale subresource @ 09/04/25 14:53:10.221
  STEP: updating a scale subresource @ 09/04/25 14:53:10.228
  STEP: verifying the deployment Spec.Replicas was modified @ 09/04/25 14:53:10.237
  STEP: Patch a scale subresource @ 09/04/25 14:53:10.243
  I0904 14:53:10.274293 23 deployment.go:632] Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2272",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7dc3d94c-460f-4a32-b30c-72f1aa68d71e",
      ResourceVersion: (string) (len=5) "11501",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892594388,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594388,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594389,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          HostnameOverride: (*string)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594389,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594389,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594389,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594388,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-6bc58496c7\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0904 14:53:10.287984 23 deployment.go:40] New ReplicaSet "test-new-deployment-6bc58496c7" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-6bc58496c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2272",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "224df8e9-5880-46d4-b9bb-b0e671e264b5",
      ResourceVersion: (string) (len=5) "11514",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892594388,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "4",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "5",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "7dc3d94c-460f-4a32-b30c-72f1aa68d71e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594390,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 37 64 63 33 64 39  34 63 2d 34 36 30 66 2d  |\"7dc3d94c-460f-|
              00000120  34 61 33 32 2d 62 33 30  63 2d 37 32 66 31 61 61  |4a32-b30c-72f1aa|
              00000130  36 38 64 37 31 65 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |68d71e\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594390,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(4),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          HostnameOverride: (*string)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0904 14:53:10.300389 23 deployment.go:68] Pod "test-new-deployment-6bc58496c7-cnjf4" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-6bc58496c7-cnjf4",
      GenerateName: (string) (len=31) "test-new-deployment-6bc58496c7-",
      Namespace: (string) (len=15) "deployment-2272",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fabd1891-627b-4039-b0db-3d6222a3dc76",
      ResourceVersion: (string) (len=5) "11516",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892594390,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-6bc58496c7",
          UID: (types.UID) (len=36) "224df8e9-5880-46d4-b9bb-b0e671e264b5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594390,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 32  34 64 66 38 65 39 2d 35  |d\":\"224df8e9-5|
              00000090  38 38 30 2d 34 36 64 34  2d 62 39 62 62 2d 62 30  |880-46d4-b9bb-b0|
              000000a0  65 36 37 31 65 32 36 34  62 35 5c 22 7d 22 3a 7b  |e671e264b5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-n8rjb",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-n8rjb",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0904 14:53:10.301009 23 deployment.go:68] Pod "test-new-deployment-6bc58496c7-cqhtf" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-6bc58496c7-cqhtf",
      GenerateName: (string) (len=31) "test-new-deployment-6bc58496c7-",
      Namespace: (string) (len=15) "deployment-2272",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b1ff8c52-8641-4f31-be09-06fdad8438dd",
      ResourceVersion: (string) (len=5) "11506",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892594390,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-6bc58496c7",
          UID: (types.UID) (len=36) "224df8e9-5880-46d4-b9bb-b0e671e264b5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594390,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 32  34 64 66 38 65 39 2d 35  |d\":\"224df8e9-5|
              00000090  38 38 30 2d 34 36 64 34  2d 62 39 62 62 2d 62 30  |880-46d4-b9bb-b0|
              000000a0  65 36 37 31 65 32 36 34  62 35 5c 22 7d 22 3a 7b  |e671e264b5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rptzk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rptzk",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-33-202",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594390,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0904 14:53:10.301821 23 deployment.go:68] Pod "test-new-deployment-6bc58496c7-fq66d" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-6bc58496c7-fq66d",
      GenerateName: (string) (len=31) "test-new-deployment-6bc58496c7-",
      Namespace: (string) (len=15) "deployment-2272",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ff02ace2-ebf1-45c6-ba51-12a365ad012a",
      ResourceVersion: (string) (len=5) "11260",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892594388,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6bc58496c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-6bc58496c7",
          UID: (types.UID) (len=36) "224df8e9-5880-46d4-b9bb-b0e671e264b5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594388,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 32  34 64 66 38 65 39 2d 35  |d\":\"224df8e9-5|
              00000090  38 38 30 2d 34 36 64 34  2d 62 39 62 62 2d 62 30  |880-46d4-b9bb-b0|
              000000a0  65 36 37 31 65 32 36 34  62 35 5c 22 7d 22 3a 7b  |e671e264b5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594389,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=852) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6f 62 73 65 72 76  |me":{},"f:observ|
              00000080  65 64 47 65 6e 65 72 61  74 69 6f 6e 22 3a 7b 7d  |edGeneration":{}|
              00000090  2c 22 66 3a 73 74 61 74  75 73 22 3a 7b 7d 2c 22  |,"f:status":{},"|
              000000a0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |f:type":{}},"k:{|
              000000b0  5c 22 74 79 70 65 5c 22  3a 5c 22 49 6e 69 74 69  |\"type\":\"Initi|
              000000c0  61 6c 69 7a 65 64 5c 22  7d 22 3a 7b 22 2e 22 3a  |alized\"}":{".":|
              000000d0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000000f0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              00000100  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000110  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000120  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000130  65 22 3a 7b 7d 7d 2c 22  6b 3a 7b 5c 22 74 79 70  |e":{}},"k:{\"typ|
              00000140  65 5c 22 3a 5c 22 50 6f  64 52 65 61 64 79 54 6f  |e\":\"PodReadyTo|
              00000150  53 74 61 72 74 43 6f 6e  74 61 69 6e 65 72 73 5c  |StartContainers\|
              00000160  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 6c  |"}":{".":{},"f:l|
              00000170  61 73 74 50 72 6f 62 65  54 69 6d 65 22 3a 7b 7d  |astProbeTime":{}|
              00000180  2c 22 66 3a 6c 61 73 74  54 72 61 6e 73 69 74 69  |,"f:lastTransiti|
              00000190  6f 6e 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6f 62  |onTime":{},"f:ob|
              000001a0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001b0  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              000001c0  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000001d0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              000001e0  6f 64 53 63 68 65 64 75  6c 65 64 5c 22 7d 22 3a  |odScheduled\"}":|
              000001f0  7b 22 66 3a 6f 62 73 65  72 76 65 64 47 65 6e 65  |{"f:observedGene|
              00000200  72 61 74 69 6f 6e 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |ration":{}},"k:{|
              00000210  5c 22 74 79 70 65 5c 22  3a 5c 22 52 65 61 64 79  |\"type\":\"Ready|
              00000220  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000230  6c 61 73 74 50 72 6f 62  65 54 69 6d 65 22 3a 7b  |lastProbeTime":{|
              00000240  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000250  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6f  |ionTime":{},"f:o|
              00000260  62 73 65 72 76 65 64 47  65 6e 65 72 61 74 69 6f  |bservedGeneratio|
              00000270  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000280  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000290  7d 2c 22 66 3a 63 6f 6e  74 61 69 6e 65 72 53 74  |},"f:containerSt|
              000002a0  61 74 75 73 65 73 22 3a  7b 7d 2c 22 66 3a 68 6f  |atuses":{},"f:ho|
              000002b0  73 74 49 50 22 3a 7b 7d  2c 22 66 3a 68 6f 73 74  |stIP":{},"f:host|
              000002c0  49 50 73 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |IPs":{},"f:obser|
              000002d0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002e0  7d 2c 22 66 3a 70 68 61  73 65 22 3a 7b 7d 2c 22  |},"f:phase":{},"|
              000002f0  66 3a 70 6f 64 49 50 22  3a 7b 7d 2c 22 66 3a 70  |f:podIP":{},"f:p|
              00000300  6f 64 49 50 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |odIPs":{".":{},"|
              00000310  6b 3a 7b 5c 22 69 70 5c  22 3a 5c 22 31 39 32 2e  |k:{\"ip\":\"192.|
              00000320  31 36 38 2e 34 2e 31 37  32 5c 22 7d 22 3a 7b 22  |168.4.172\"}":{"|
              00000330  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000340  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000350  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5mkmx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5mkmx",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-18-79",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594389,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594388,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594389,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594389,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892594388,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.18.79",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.18.79"
        }
      },
      PodIP: (string) (len=13) "192.168.4.172",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.4.172"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892594388,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63892594388,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://107a33db751c9ae5e61481f2f0a51fe7e0f79e7cae48aa0f4101ffe29ba8ed07",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-5mkmx",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0904 14:53:10.310781 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-2272" for this suite. @ 09/04/25 14:53:10.32
• [2.156 seconds]
------------------------------
S
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1430
  STEP: Creating a kubernetes client @ 09/04/25 14:53:10.332
  I0904 14:53:10.332316 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename services @ 09/04/25 14:53:10.332
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:53:10.346
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:53:10.348
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-1964 @ 09/04/25 14:53:10.354
  STEP: changing the ExternalName service to type=ClusterIP @ 09/04/25 14:53:10.357
  I0904 14:53:10.392404 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  I0904 14:53:12.396832 23 resource.go:344] Creating new exec pod
  I0904 14:53:14.416909 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=services-1964 exec execpod6kmhd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0904 14:53:14.493421 23 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.152.183.196) 80 port [tcp/http] succeeded!\n"
  I0904 14:53:14.493456 23 builder.go:157] stdout: "externalname-service-697885f5b4-bmv2d"
  I0904 14:53:14.493510 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=services-1964 exec execpod6kmhd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.196 80'
  I0904 14:53:14.561904 23 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.196 80\nConnection to 10.152.183.196 80 port [tcp/http] succeeded!\n"
  I0904 14:53:14.561952 23 builder.go:157] stdout: ""
  I0904 14:53:15.493681 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=services-1964 exec execpod6kmhd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.196 80'
  I0904 14:53:15.612172 23 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.196 80\nConnection to 10.152.183.196 80 port [tcp/http] succeeded!\n"
  I0904 14:53:15.612575 23 builder.go:157] stdout: ""
  I0904 14:53:16.493695 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=services-1964 exec execpod6kmhd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.196 80'
  I0904 14:53:16.570060 23 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.196 80\nConnection to 10.152.183.196 80 port [tcp/http] succeeded!\n"
  I0904 14:53:16.570106 23 builder.go:157] stdout: ""
  I0904 14:53:17.493792 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=services-1964 exec execpod6kmhd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.196 80'
  I0904 14:53:17.565160 23 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.196 80\nConnection to 10.152.183.196 80 port [tcp/http] succeeded!\n"
  I0904 14:53:17.565201 23 builder.go:157] stdout: "externalname-service-697885f5b4-2pjbv"
  I0904 14:53:17.565275 23 service.go:1439] Cleaning up the ExternalName to ClusterIP test service
  I0904 14:53:17.584056 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1964" for this suite. @ 09/04/25 14:53:17.586
• [7.261 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:208
  STEP: Creating a kubernetes client @ 09/04/25 14:53:17.593
  I0904 14:53:17.593856 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename endpointslice @ 09/04/25 14:53:17.594
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:53:17.605
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:53:17.607
  STEP: referencing a single matching pod @ 09/04/25 14:53:19.671
  I0904 14:53:19.678469      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: referencing matching pods with named port @ 09/04/25 14:53:19.678
  I0904 14:53:19.683037      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 09/04/25 14:53:19.683
  I0904 14:53:19.689414      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: recreating EndpointSlices after they've been deleted @ 09/04/25 14:53:19.689
  I0904 14:53:19.706366 23 endpointslice.go:952] EndpointSlice for Service endpointslice-8349/example-named-port not found
  I0904 14:53:21.712442      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0904 14:53:21.712628 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-8349" for this suite. @ 09/04/25 14:53:21.715
• [4.127 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:404
  STEP: Creating a kubernetes client @ 09/04/25 14:53:21.721
  I0904 14:53:21.721121 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename resourcequota @ 09/04/25 14:53:21.721
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:53:21.734
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:53:21.735
  STEP: Counting existing ResourceQuota @ 09/04/25 14:53:21.738
  STEP: Creating a ResourceQuota @ 09/04/25 14:53:26.743
  STEP: Ensuring resource quota status is calculated @ 09/04/25 14:53:26.752
  I0904 14:53:28.764818 23 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc0074e9e00>: 
          metadata:
            creationTimestamp: "2025-09-04T14:53:26Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-04T14:53:26Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
                  f:used:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-04T14:53:26Z"
            name: test-quota
            namespace: resourcequota-5735
            resourceVersion: "11985"
            uid: 3740ee04-b71c-43e9-af64-5421eb9e184f
          spec:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
          status:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
            used:
              configmaps: "1"
              count/replicasets.apps: "0"
              cpu: "0"
              ephemeral-storage: "0"
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
              gold.storageclass.storage.k8s.io/requests.storage: "0"
              memory: "0"
              persistentvolumeclaims: "0"
              pods: "0"
              replicationcontrollers: "0"
              requests.example.com/dongle: "0"
              requests.storage: "0"
              resourcequotas: "1"
              secrets: "0"
              services: "0"
              services.loadbalancers: "0"
              services.nodeports: "0"
  STEP: Creating a ReplicationController @ 09/04/25 14:53:28.764
  STEP: Ensuring resource quota status captures replication controller creation @ 09/04/25 14:53:28.778
  I0904 14:53:28.781446 23 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc007584b40>: 
          metadata:
            creationTimestamp: "2025-09-04T14:53:26Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-04T14:53:26Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
                  f:used:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-04T14:53:26Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:used:
                    f:replicationcontrollers: {}
              manager: kube-apiserver
              operation: Update
              subresource: status
              time: "2025-09-04T14:53:28Z"
            name: test-quota
            namespace: resourcequota-5735
            resourceVersion: "12013"
            uid: 3740ee04-b71c-43e9-af64-5421eb9e184f
          spec:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
          status:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
            used:
              configmaps: "1"
              count/replicasets.apps: "0"
              cpu: "0"
              ephemeral-storage: "0"
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
              gold.storageclass.storage.k8s.io/requests.storage: "0"
              memory: "0"
              persistentvolumeclaims: "0"
              pods: "0"
              replicationcontrollers: "1"
              requests.example.com/dongle: "0"
              requests.storage: "0"
              resourcequotas: "1"
              secrets: "0"
              services: "0"
              services.loadbalancers: "0"
              services.nodeports: "0"
  STEP: Deleting a ReplicationController @ 09/04/25 14:53:28.781
  STEP: Ensuring resource quota status released usage @ 09/04/25 14:53:28.786
  I0904 14:53:30.793232 23 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc0075857c0>: 
          metadata:
            creationTimestamp: "2025-09-04T14:53:26Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-04T14:53:26Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
                  f:used:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-04T14:53:28Z"
            name: test-quota
            namespace: resourcequota-5735
            resourceVersion: "12017"
            uid: 3740ee04-b71c-43e9-af64-5421eb9e184f
          spec:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
          status:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
            used:
              configmaps: "1"
              count/replicasets.apps: "0"
              cpu: "0"
              ephemeral-storage: "0"
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
              gold.storageclass.storage.k8s.io/requests.storage: "0"
              memory: "0"
              persistentvolumeclaims: "0"
              pods: "0"
              replicationcontrollers: "0"
              requests.example.com/dongle: "0"
              requests.storage: "0"
              resourcequotas: "1"
              secrets: "0"
              services: "0"
              services.loadbalancers: "0"
              services.nodeports: "0"
  I0904 14:53:30.793552 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5735" for this suite. @ 09/04/25 14:53:30.796
• [9.082 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:90
  STEP: Creating a kubernetes client @ 09/04/25 14:53:30.803
  I0904 14:53:30.803723 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename containers @ 09/04/25 14:53:30.804
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:53:30.815
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:53:30.817
  STEP: Creating a pod to test override all @ 09/04/25 14:53:30.819
  STEP: Saw pod success @ 09/04/25 14:53:34.84
  I0904 14:53:34.842686 23 output.go:207] Trying to get logs from node ip-172-31-33-202 pod client-containers-8e53402b-0b06-4a2b-8b15-3f6de5e46631 container agnhost-container: <nil>
  STEP: delete the pod @ 09/04/25 14:53:34.849
  I0904 14:53:34.866735 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-560" for this suite. @ 09/04/25 14:53:34.869
• [4.074 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 09/04/25 14:53:34.877
  I0904 14:53:34.877542 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename subpath @ 09/04/25 14:53:34.878
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:53:34.888
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:53:34.891
  STEP: Setting up data @ 09/04/25 14:53:34.894
  STEP: Creating pod pod-subpath-test-secret-t92b @ 09/04/25 14:53:34.903
  STEP: Creating a pod to test atomic-volume-subpath @ 09/04/25 14:53:34.904
  STEP: Saw pod success @ 09/04/25 14:53:58.973
  I0904 14:53:58.975555 23 output.go:207] Trying to get logs from node ip-172-31-33-202 pod pod-subpath-test-secret-t92b container test-container-subpath-secret-t92b: <nil>
  STEP: delete the pod @ 09/04/25 14:53:58.982
  STEP: Deleting pod pod-subpath-test-secret-t92b @ 09/04/25 14:53:59.003
  I0904 14:53:59.003169 23 delete.go:78] Deleting pod "pod-subpath-test-secret-t92b" in namespace "subpath-8131"
  I0904 14:53:59.008243 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-8131" for this suite. @ 09/04/25 14:53:59.013
• [24.143 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_watch.go:52
  STEP: Creating a kubernetes client @ 09/04/25 14:53:59.02
  I0904 14:53:59.020526 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename crd-watch @ 09/04/25 14:53:59.021
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:53:59.032
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:53:59.033
  I0904 14:53:59.036415 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Creating first CR  @ 09/04/25 14:54:01.569
  I0904 14:54:01.573686 23 watch.go:426] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-09-04T14:54:01Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-09-04T14:54:01Z]] name:name1 resourceVersion:12187 uid:3d9c8db7-cd40-4888-97cc-4b7ca6bc21e4] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Creating second CR @ 09/04/25 14:54:11.574
  I0904 14:54:11.579736 23 watch.go:426] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-09-04T14:54:11Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-09-04T14:54:11Z]] name:name2 resourceVersion:12218 uid:cd0711f4-bcd4-4733-8338-5b8efc76e487] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying first CR @ 09/04/25 14:54:21.579
  I0904 14:54:21.587351 23 watch.go:426] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-09-04T14:54:01Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-09-04T14:54:21Z]] name:name1 resourceVersion:12240 uid:3d9c8db7-cd40-4888-97cc-4b7ca6bc21e4] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying second CR @ 09/04/25 14:54:31.588
  I0904 14:54:31.593888 23 watch.go:426] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-09-04T14:54:11Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-09-04T14:54:31Z]] name:name2 resourceVersion:12261 uid:cd0711f4-bcd4-4733-8338-5b8efc76e487] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting first CR @ 09/04/25 14:54:41.594
  I0904 14:54:41.603869 23 watch.go:426] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-09-04T14:54:01Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-09-04T14:54:21Z]] name:name1 resourceVersion:12283 uid:3d9c8db7-cd40-4888-97cc-4b7ca6bc21e4] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting second CR @ 09/04/25 14:54:51.604
  I0904 14:54:51.612793 23 watch.go:426] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2025-09-04T14:54:11Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2025-09-04T14:54:31Z]] name:name2 resourceVersion:12305 uid:cd0711f4-bcd4-4733-8338-5b8efc76e487] num:map[num1:9223372036854775807 num2:1000000]]}
  I0904 14:55:02.124296 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-1895" for this suite. @ 09/04/25 14:55:02.128
• [63.114 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:108
  STEP: Creating a kubernetes client @ 09/04/25 14:55:02.135
  I0904 14:55:02.135022 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename container-probe @ 09/04/25 14:55:02.135
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:55:02.147
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:55:02.149
  I0904 14:56:02.168084 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-3602" for this suite. @ 09/04/25 14:56:02.171
• [60.043 seconds]
------------------------------
S
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:124
  STEP: Creating a kubernetes client @ 09/04/25 14:56:02.178
  I0904 14:56:02.178188 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename configmap @ 09/04/25 14:56:02.178
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:56:02.19
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:56:02.192
  STEP: Creating configMap with name configmap-test-upd-4a57df9b-1263-4ec2-955e-c04d4b42b43e @ 09/04/25 14:56:02.272
  STEP: Creating the pod @ 09/04/25 14:56:02.278
  STEP: Updating configmap configmap-test-upd-4a57df9b-1263-4ec2-955e-c04d4b42b43e @ 09/04/25 14:56:04.313
  STEP: waiting to observe update in volume @ 09/04/25 14:56:04.317
  I0904 14:57:08.585136 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7772" for this suite. @ 09/04/25 14:57:08.588
• [66.420 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update validating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:708
  STEP: Creating a kubernetes client @ 09/04/25 14:57:08.598
  I0904 14:57:08.598615 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename webhook @ 09/04/25 14:57:08.599
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:57:08.611
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:57:08.613
  STEP: Setting up server cert @ 09/04/25 14:57:08.63
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/04/25 14:57:08.735
  STEP: Deploying the webhook pod @ 09/04/25 14:57:08.742
  STEP: Wait for the deployment to be ready @ 09/04/25 14:57:08.756
  I0904 14:57:08.766982 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/04/25 14:57:10.776
  STEP: Verifying the service has paired with the endpoint @ 09/04/25 14:57:10.788
  I0904 14:57:11.788880 23 util.go:419] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 09/04/25 14:57:11.795
  STEP: verifying the validating webhook match conditions @ 09/04/25 14:57:11.804
  STEP: updating the validating webhook match conditions @ 09/04/25 14:57:11.806
  STEP: verifying the validating webhook match conditions @ 09/04/25 14:57:11.818
  I0904 14:57:11.862952 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6099" for this suite. @ 09/04/25 14:57:11.867
  STEP: Destroying namespace "webhook-markers-7161" for this suite. @ 09/04/25 14:57:11.876
• [3.286 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:826
  STEP: Creating a kubernetes client @ 09/04/25 14:57:11.884
  I0904 14:57:11.884992 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename gc @ 09/04/25 14:57:11.885
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:57:11.896
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:57:11.897
  I0904 14:57:11.929605 23 garbage_collector.go:848] pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"fe8cd105-4029-4b20-9197-9193fc9f7295", Controller:(*bool)(0xc002ea83de), BlockOwnerDeletion:(*bool)(0xc002ea83df)}}
  I0904 14:57:11.935714 23 garbage_collector.go:852] pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"0135d02b-4125-41c2-b84d-6ab2e0471a52", Controller:(*bool)(0xc002ea859e), BlockOwnerDeletion:(*bool)(0xc002ea859f)}}
  I0904 14:57:11.943654 23 garbage_collector.go:856] pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"d22a2476-474f-4e46-8c86-d146ec1e5b12", Controller:(*bool)(0xc002ea8766), BlockOwnerDeletion:(*bool)(0xc002ea8767)}}
  I0904 14:57:16.989573 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-4678" for this suite. @ 09/04/25 14:57:16.993
• [5.113 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceFieldSelectors [Privileged:ClusterAdmin] CustomResourceFieldSelectors MUST list and watch custom resources matching the field selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_selectable_fields.go:124
  STEP: Creating a kubernetes client @ 09/04/25 14:57:16.998
  I0904 14:57:16.998451 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename crd-selectable-fields @ 09/04/25 14:57:16.998
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:57:17.01
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:57:17.012
  STEP: Setting up server cert @ 09/04/25 14:57:17.014
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 09/04/25 14:57:17.304
  STEP: Deploying the custom resource conversion webhook pod @ 09/04/25 14:57:17.308
  STEP: Wait for the deployment to be ready @ 09/04/25 14:57:17.32
  I0904 14:57:17.329230 23 deployment.go:223] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/04/25 14:57:19.337
  STEP: Verifying the service has paired with the endpoint @ 09/04/25 14:57:19.352
  I0904 14:57:20.353046 23 util.go:419] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  STEP: Creating a custom resource definition with selectable fields @ 09/04/25 14:57:20.357
  I0904 14:57:20.357647 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Creating a custom resource conversion webhook @ 09/04/25 14:57:20.871
  STEP: Watching with field selectors @ 09/04/25 14:57:22.914
  STEP: Registering informers with field selectors @ 09/04/25 14:57:22.923
  STEP: Creating custom resources @ 09/04/25 14:57:22.923
  STEP: Listing v2 custom resources with field selector host=host1 @ 09/04/25 14:57:22.946
  STEP: Listing v2 custom resources with field selector host=host1,port=80 @ 09/04/25 14:57:22.949
  STEP: Listing v1 custom resources with field selector hostPort=host1:80 @ 09/04/25 14:57:22.951
  STEP: Listing v1 custom resources with field selector hostPort=host1:8080 @ 09/04/25 14:57:22.953
  STEP: Waiting for watch events to contain v2 custom resources for field selector host=host1 @ 09/04/25 14:57:22.955
  STEP: Waiting for watch events to contain v2 custom resources for field selector host=host1,port=80 @ 09/04/25 14:57:22.96
  STEP: Waiting for watch events to contain v1 custom resources for field selector hostPort=host1:80 @ 09/04/25 14:57:22.96
  STEP: Waiting for informer events to contain v2 custom resources for field selector host=host1 @ 09/04/25 14:57:22.96
  STEP: Waiting for informer events to contain v2 custom resources for field selector host=host1,port=80 @ 09/04/25 14:57:22.96
  STEP: Deleting one custom resources to ensure that deletions are observed @ 09/04/25 14:57:22.96
  STEP: Updating one custom resources to ensure that deletions are observed @ 09/04/25 14:57:22.972
  STEP: Listing v2 custom resources after updates and deletes for field selector host=host1 @ 09/04/25 14:57:22.986
  STEP: Listing v2 custom resources after updates and deletes for field selector host=host1,port=80 @ 09/04/25 14:57:22.988
  STEP: Waiting for v2 watch events after updates and deletes for field selector host=host1 @ 09/04/25 14:57:22.993
  STEP: Waiting for v2 watch events after updates and deletes for field selector host=host1,port=80 @ 09/04/25 14:57:22.998
  STEP: Waiting for v1 watch events after updates and deletes for field selector hostPort=host1:80 @ 09/04/25 14:57:22.998
  STEP: Waiting for v2 informer events after updates and deletes for field selector host=host1 @ 09/04/25 14:57:22.998
  STEP: Waiting for v2 informer events after updates and deletes for field selector host=host1,port=80 @ 09/04/25 14:57:22.998
  I0904 14:57:23.548447 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-selectable-fields-5522" for this suite. @ 09/04/25 14:57:23.553
• [6.561 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 09/04/25 14:57:23.559
  I0904 14:57:23.559662 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename watch @ 09/04/25 14:57:23.56
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:57:23.571
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:57:23.572
  STEP: creating a watch on configmaps with label A @ 09/04/25 14:57:23.574
  STEP: creating a watch on configmaps with label B @ 09/04/25 14:57:23.577
  STEP: creating a watch on configmaps with label A or B @ 09/04/25 14:57:23.579
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 09/04/25 14:57:23.583
  I0904 14:57:23.587652 23 watch.go:426] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7739  b2af10cf-3ac2-4f36-955c-6360fbb0249f 12896 0 2025-09-04 14:57:23 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-09-04 14:57:23 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0904 14:57:23.587734 23 watch.go:426] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7739  b2af10cf-3ac2-4f36-955c-6360fbb0249f 12896 0 2025-09-04 14:57:23 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-09-04 14:57:23 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 09/04/25 14:57:23.587
  I0904 14:57:23.595123 23 watch.go:426] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7739  b2af10cf-3ac2-4f36-955c-6360fbb0249f 12897 0 2025-09-04 14:57:23 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-09-04 14:57:23 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0904 14:57:23.595173 23 watch.go:426] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7739  b2af10cf-3ac2-4f36-955c-6360fbb0249f 12897 0 2025-09-04 14:57:23 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-09-04 14:57:23 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 09/04/25 14:57:23.595
  I0904 14:57:23.603474 23 watch.go:426] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7739  b2af10cf-3ac2-4f36-955c-6360fbb0249f 12898 0 2025-09-04 14:57:23 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-09-04 14:57:23 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0904 14:57:23.603533 23 watch.go:426] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7739  b2af10cf-3ac2-4f36-955c-6360fbb0249f 12898 0 2025-09-04 14:57:23 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-09-04 14:57:23 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 09/04/25 14:57:23.603
  I0904 14:57:23.610091 23 watch.go:426] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7739  b2af10cf-3ac2-4f36-955c-6360fbb0249f 12899 0 2025-09-04 14:57:23 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-09-04 14:57:23 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0904 14:57:23.610118 23 watch.go:426] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-7739  b2af10cf-3ac2-4f36-955c-6360fbb0249f 12899 0 2025-09-04 14:57:23 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2025-09-04 14:57:23 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 09/04/25 14:57:23.61
  I0904 14:57:23.614347 23 watch.go:426] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-7739  00bc44de-f538-46bb-8d9b-452ac4fc20c6 12900 0 2025-09-04 14:57:23 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-09-04 14:57:23 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0904 14:57:23.614395 23 watch.go:426] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-7739  00bc44de-f538-46bb-8d9b-452ac4fc20c6 12900 0 2025-09-04 14:57:23 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-09-04 14:57:23 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 09/04/25 14:57:33.615
  I0904 14:57:33.622755 23 watch.go:426] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-7739  00bc44de-f538-46bb-8d9b-452ac4fc20c6 12936 0 2025-09-04 14:57:23 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-09-04 14:57:23 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0904 14:57:33.622792 23 watch.go:426] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-7739  00bc44de-f538-46bb-8d9b-452ac4fc20c6 12936 0 2025-09-04 14:57:23 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2025-09-04 14:57:23 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0904 14:57:43.624749 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-7739" for this suite. @ 09/04/25 14:57:43.629
• [20.076 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] ServiceCIDR and IPAddress API should support ServiceCIDR API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_cidrs.go:163
  STEP: Creating a kubernetes client @ 09/04/25 14:57:43.636
  I0904 14:57:43.636177 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename servicecidr @ 09/04/25 14:57:43.636
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:57:43.647
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:57:43.649
  STEP: getting @ 09/04/25 14:57:43.652
  STEP: getting /status @ 09/04/25 14:57:43.655
  STEP: listing @ 09/04/25 14:57:43.657
  STEP: watching @ 09/04/25 14:57:43.661
  I0904 14:57:43.663851 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "servicecidr-4394" for this suite. @ 09/04/25 14:57:43.729
• [0.100 seconds]
------------------------------
SSSSSS
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/logs.go:167
  STEP: Creating a kubernetes client @ 09/04/25 14:57:43.736
  I0904 14:57:43.736564 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename kubectl-logs @ 09/04/25 14:57:43.736
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:57:43.745
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:57:43.747
  STEP: creating a pod @ 09/04/25 14:57:43.749
  I0904 14:57:43.749988 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=kubectl-logs-9356 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.56 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  I0904 14:57:43.792728 23 builder.go:156] stderr: ""
  I0904 14:57:43.792749 23 builder.go:157] stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 09/04/25 14:57:43.792
  I0904 14:57:43.792819 23 resource.go:396] Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  I0904 14:57:45.803125 23 resource.go:418] Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 09/04/25 14:57:45.803
  I0904 14:57:45.803217 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=kubectl-logs-9356 logs logs-generator logs-generator'
  I0904 14:57:45.853189 23 builder.go:156] stderr: ""
  I0904 14:57:45.853253 23 builder.go:157] stdout: "I0904 14:57:44.339752       1 logs_generator.go:76] 0 PUT /api/v1/namespaces/ns/pods/dbjn 339\nI0904 14:57:44.539858       1 logs_generator.go:76] 1 POST /api/v1/namespaces/default/pods/2mw7 342\nI0904 14:57:44.740431       1 logs_generator.go:76] 2 GET /api/v1/namespaces/default/pods/g85t 557\nI0904 14:57:44.940722       1 logs_generator.go:76] 3 GET /api/v1/namespaces/ns/pods/9tb 285\nI0904 14:57:45.139966       1 logs_generator.go:76] 4 PUT /api/v1/namespaces/ns/pods/j6wf 564\nI0904 14:57:45.340304       1 logs_generator.go:76] 5 PUT /api/v1/namespaces/kube-system/pods/xmr5 243\nI0904 14:57:45.540685       1 logs_generator.go:76] 6 GET /api/v1/namespaces/kube-system/pods/jdgs 582\nI0904 14:57:45.739855       1 logs_generator.go:76] 7 POST /api/v1/namespaces/ns/pods/92d 483\n"
  STEP: limiting log lines @ 09/04/25 14:57:45.853
  I0904 14:57:45.853340 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=kubectl-logs-9356 logs logs-generator logs-generator --tail=1'
  I0904 14:57:45.896161 23 builder.go:156] stderr: ""
  I0904 14:57:45.896194 23 builder.go:157] stdout: "I0904 14:57:45.739855       1 logs_generator.go:76] 7 POST /api/v1/namespaces/ns/pods/92d 483\n"
  I0904 14:57:45.896219 23 logs.go:180] got output "I0904 14:57:45.739855       1 logs_generator.go:76] 7 POST /api/v1/namespaces/ns/pods/92d 483\n"
  STEP: limiting log bytes @ 09/04/25 14:57:45.896
  I0904 14:57:45.896279 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=kubectl-logs-9356 logs logs-generator logs-generator --limit-bytes=1'
  I0904 14:57:45.943620 23 builder.go:156] stderr: ""
  I0904 14:57:45.943647 23 builder.go:157] stdout: "I"
  I0904 14:57:45.943673 23 logs.go:186] got output "I"
  STEP: exposing timestamps @ 09/04/25 14:57:45.943
  I0904 14:57:45.943805 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=kubectl-logs-9356 logs logs-generator logs-generator --tail=1 --timestamps'
  I0904 14:57:45.984867 23 builder.go:156] stderr: ""
  I0904 14:57:45.985017 23 builder.go:157] stdout: "2025-09-04T14:57:45.940304986Z I0904 14:57:45.940232       1 logs_generator.go:76] 8 POST /api/v1/namespaces/default/pods/tsg 520\n"
  I0904 14:57:45.985102 23 logs.go:192] got output "2025-09-04T14:57:45.940304986Z I0904 14:57:45.940232       1 logs_generator.go:76] 8 POST /api/v1/namespaces/default/pods/tsg 520\n"
  STEP: restricting to a time range @ 09/04/25 14:57:45.985
  I0904 14:57:48.485679 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=kubectl-logs-9356 logs logs-generator logs-generator --since=1s'
  I0904 14:57:48.531151 23 builder.go:156] stderr: ""
  I0904 14:57:48.531210 23 builder.go:157] stdout: "I0904 14:57:47.540708       1 logs_generator.go:76] 16 POST /api/v1/namespaces/default/pods/t78t 231\nI0904 14:57:47.739957       1 logs_generator.go:76] 17 GET /api/v1/namespaces/default/pods/985j 597\nI0904 14:57:47.940262       1 logs_generator.go:76] 18 GET /api/v1/namespaces/default/pods/x5m 574\nI0904 14:57:48.140581       1 logs_generator.go:76] 19 GET /api/v1/namespaces/default/pods/bxd 500\nI0904 14:57:48.339875       1 logs_generator.go:76] 20 GET /api/v1/namespaces/default/pods/9qw 271\n"
  I0904 14:57:48.531291 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=kubectl-logs-9356 logs logs-generator logs-generator --since=24h'
  I0904 14:57:48.577694 23 builder.go:156] stderr: ""
  I0904 14:57:48.577738 23 builder.go:157] stdout: "I0904 14:57:44.339752       1 logs_generator.go:76] 0 PUT /api/v1/namespaces/ns/pods/dbjn 339\nI0904 14:57:44.539858       1 logs_generator.go:76] 1 POST /api/v1/namespaces/default/pods/2mw7 342\nI0904 14:57:44.740431       1 logs_generator.go:76] 2 GET /api/v1/namespaces/default/pods/g85t 557\nI0904 14:57:44.940722       1 logs_generator.go:76] 3 GET /api/v1/namespaces/ns/pods/9tb 285\nI0904 14:57:45.139966       1 logs_generator.go:76] 4 PUT /api/v1/namespaces/ns/pods/j6wf 564\nI0904 14:57:45.340304       1 logs_generator.go:76] 5 PUT /api/v1/namespaces/kube-system/pods/xmr5 243\nI0904 14:57:45.540685       1 logs_generator.go:76] 6 GET /api/v1/namespaces/kube-system/pods/jdgs 582\nI0904 14:57:45.739855       1 logs_generator.go:76] 7 POST /api/v1/namespaces/ns/pods/92d 483\nI0904 14:57:45.940232       1 logs_generator.go:76] 8 POST /api/v1/namespaces/default/pods/tsg 520\nI0904 14:57:46.140564       1 logs_generator.go:76] 9 GET /api/v1/namespaces/ns/pods/z7d 350\nI0904 14:57:46.339834       1 logs_generator.go:76] 10 GET /api/v1/namespaces/kube-system/pods/mxg 431\nI0904 14:57:46.540179       1 logs_generator.go:76] 11 PUT /api/v1/namespaces/default/pods/98b 527\nI0904 14:57:46.740486       1 logs_generator.go:76] 12 PUT /api/v1/namespaces/kube-system/pods/dvj 240\nI0904 14:57:46.939784       1 logs_generator.go:76] 13 POST /api/v1/namespaces/kube-system/pods/xn6 540\nI0904 14:57:47.140098       1 logs_generator.go:76] 14 POST /api/v1/namespaces/default/pods/pp4 373\nI0904 14:57:47.340433       1 logs_generator.go:76] 15 PUT /api/v1/namespaces/default/pods/dvh 539\nI0904 14:57:47.540708       1 logs_generator.go:76] 16 POST /api/v1/namespaces/default/pods/t78t 231\nI0904 14:57:47.739957       1 logs_generator.go:76] 17 GET /api/v1/namespaces/default/pods/985j 597\nI0904 14:57:47.940262       1 logs_generator.go:76] 18 GET /api/v1/namespaces/default/pods/x5m 574\nI0904 14:57:48.140581       1 logs_generator.go:76] 19 GET /api/v1/namespaces/default/pods/bxd 500\nI0904 14:57:48.339875       1 logs_generator.go:76] 20 GET /api/v1/namespaces/default/pods/9qw 271\nI0904 14:57:48.540191       1 logs_generator.go:76] 21 PUT /api/v1/namespaces/kube-system/pods/tls8 335\n"
  I0904 14:57:48.577815 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=kubectl-logs-9356 delete pod logs-generator'
  I0904 14:57:49.557293 23 builder.go:156] stderr: ""
  I0904 14:57:49.557333 23 builder.go:157] stdout: "pod \"logs-generator\" deleted from kubectl-logs-9356 namespace\n"
  I0904 14:57:49.557489 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-9356" for this suite. @ 09/04/25 14:57:49.56
• [5.831 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 09/04/25 14:57:49.568
  I0904 14:57:49.568086 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename daemonsets @ 09/04/25 14:57:49.568
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:57:49.576
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:57:49.578
  I0904 14:57:49.670682 23 daemon_set.go:388] Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/04/25 14:57:49.676
  I0904 14:57:49.762003 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-16-153 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0904 14:57:49.762034 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-81-110 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0904 14:57:49.764896 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0904 14:57:49.764920 23 fixtures.go:131] Node ip-172-31-18-79 is running 0 daemon pod, expected 1
  I0904 14:57:50.680466 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-16-153 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0904 14:57:50.680513 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-81-110 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0904 14:57:50.684405 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0904 14:57:50.684430 23 fixtures.go:131] Node ip-172-31-18-79 is running 0 daemon pod, expected 1
  I0904 14:57:51.679851 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-16-153 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0904 14:57:51.679896 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-81-110 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0904 14:57:51.682048 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0904 14:57:51.682068 23 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Update daemon pods image. @ 09/04/25 14:57:51.69
  STEP: Check that daemon pods images are updated. @ 09/04/25 14:57:51.78
  I0904 14:57:51.785223 23 daemon_set.go:1193] Wrong image for pod: daemon-set-bpl74. Expected: registry.k8s.io/e2e-test-images/agnhost:2.56, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0904 14:57:51.785243 23 daemon_set.go:1193] Wrong image for pod: daemon-set-trfrh. Expected: registry.k8s.io/e2e-test-images/agnhost:2.56, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0904 14:57:51.788114 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-16-153 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0904 14:57:51.788141 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-81-110 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0904 14:57:52.787932 23 daemon_set.go:1198] Pod daemon-set-4fjnd is not available
  I0904 14:57:52.787959 23 daemon_set.go:1193] Wrong image for pod: daemon-set-trfrh. Expected: registry.k8s.io/e2e-test-images/agnhost:2.56, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0904 14:57:52.797017 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-16-153 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0904 14:57:52.797048 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-81-110 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0904 14:57:53.790795 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-16-153 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0904 14:57:53.790831 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-81-110 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0904 14:57:54.784307 23 daemon_set.go:1198] Pod daemon-set-j5c9c is not available
  I0904 14:57:54.787006 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-16-153 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0904 14:57:54.787036 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-81-110 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Check that daemon pods are still running on every node of the cluster. @ 09/04/25 14:57:54.787
  I0904 14:57:54.789359 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-16-153 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0904 14:57:54.789395 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-81-110 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0904 14:57:54.791997 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0904 14:57:54.792010 23 fixtures.go:131] Node ip-172-31-87-111 is running 0 daemon pod, expected 1
  I0904 14:57:55.794005 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-16-153 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0904 14:57:55.794060 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-81-110 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0904 14:57:55.797969 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0904 14:57:55.797988 23 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 09/04/25 14:57:55.813
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-4676, will wait for the garbage collector to delete the pods @ 09/04/25 14:57:55.813
  I0904 14:57:55.875273 23 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 7.893713ms
  I0904 14:57:55.975774 23 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.495998ms
  I0904 14:57:57.183163 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0904 14:57:57.183199 23 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0904 14:57:57.187848 23 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"13199"},"items":null}

  I0904 14:57:57.190763 23 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"13199"},"items":null}

  I0904 14:57:57.204785 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-4676" for this suite. @ 09/04/25 14:57:57.207
• [7.649 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:155
  STEP: Creating a kubernetes client @ 09/04/25 14:57:57.217
  I0904 14:57:57.217566 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename replicaset @ 09/04/25 14:57:57.218
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:57:57.227
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:57:57.231
  I0904 14:57:57.257607 23 resource.go:64] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/04/25 14:57:57.257
  STEP: Scaling up "test-rs" replicaset @ 09/04/25 14:57:59.268
  I0904 14:57:59.279898 23 replicaset.go:44] Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 09/04/25 14:57:59.279
  I0904 14:57:59.289279 23 replica_set.go:544] observed ReplicaSet test-rs in namespace replicaset-1452 with ReadyReplicas 1, AvailableReplicas 1
  I0904 14:57:59.300669 23 replica_set.go:544] observed ReplicaSet test-rs in namespace replicaset-1452 with ReadyReplicas 1, AvailableReplicas 1
  I0904 14:57:59.314708 23 replica_set.go:544] observed ReplicaSet test-rs in namespace replicaset-1452 with ReadyReplicas 1, AvailableReplicas 1
  I0904 14:57:59.321803 23 replica_set.go:544] observed ReplicaSet test-rs in namespace replicaset-1452 with ReadyReplicas 1, AvailableReplicas 1
  I0904 14:58:00.158852 23 replica_set.go:544] observed ReplicaSet test-rs in namespace replicaset-1452 with ReadyReplicas 2, AvailableReplicas 2
  I0904 14:58:00.724871 23 replica_set.go:547] observed Replicaset test-rs in namespace replicaset-1452 with ReadyReplicas 3 found true
  I0904 14:58:00.725104 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-1452" for this suite. @ 09/04/25 14:58:00.73
• [3.522 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should execute all indexes despite some failing when using backoffLimitPerIndex [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:605
  STEP: Creating a kubernetes client @ 09/04/25 14:58:00.74
  I0904 14:58:00.740875 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename job @ 09/04/25 14:58:00.741
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:58:00.753
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:58:00.755
  STEP: Creating an indexed job with backoffLimit per index and failing pods @ 09/04/25 14:58:00.757
  STEP: Awaiting for the job to fail as there are failed indexes @ 09/04/25 14:58:00.761
  STEP: Verifying the Job status fields to ensure all indexes were executed @ 09/04/25 14:58:20.815
  I0904 14:58:20.817892 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-6968" for this suite. @ 09/04/25 14:58:20.822
• [20.091 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 09/04/25 14:58:20.831
  I0904 14:58:20.831620 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename pods @ 09/04/25 14:58:20.832
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:58:20.844
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:58:20.846
  STEP: creating the pod @ 09/04/25 14:58:20.848
  STEP: submitting the pod to kubernetes @ 09/04/25 14:58:20.848
  STEP: verifying the pod is in kubernetes @ 09/04/25 14:58:22.866
  STEP: updating the pod @ 09/04/25 14:58:22.87
  I0904 14:58:23.384809 23 pod_client.go:186] Successfully updated pod "pod-update-d91f7a81-0845-45a0-aa47-be46a31580c6"
  STEP: verifying the updated pod is in kubernetes @ 09/04/25 14:58:23.389
  I0904 14:58:23.395176 23 pods.go:391] Pod update OK
  I0904 14:58:23.395334 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3945" for this suite. @ 09/04/25 14:58:23.398
• [2.574 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:47
  STEP: Creating a kubernetes client @ 09/04/25 14:58:23.405
  I0904 14:58:23.405736 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename projected @ 09/04/25 14:58:23.406
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:58:23.417
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:58:23.42
  STEP: Creating configMap with name projected-configmap-test-volume-f96717e8-6571-4983-88c6-23e7cde29259 @ 09/04/25 14:58:23.422
  STEP: Creating a pod to test consume configMaps @ 09/04/25 14:58:23.427
  STEP: Saw pod success @ 09/04/25 14:58:27.443
  I0904 14:58:27.446211 23 output.go:207] Trying to get logs from node ip-172-31-18-79 pod pod-projected-configmaps-b3b31ebd-139c-4705-a61a-ddde2d8ee78f container agnhost-container: <nil>
  STEP: delete the pod @ 09/04/25 14:58:27.453
  I0904 14:58:27.469150 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9423" for this suite. @ 09/04/25 14:58:27.473
• [4.072 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1082
  STEP: Creating a kubernetes client @ 09/04/25 14:58:27.478
  I0904 14:58:27.478047 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename kubectl @ 09/04/25 14:58:27.478
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:58:27.489
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:58:27.492
  STEP: create deployment with httpd image @ 09/04/25 14:58:27.494
  I0904 14:58:27.494670 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=kubectl-4041 create -f -'
  I0904 14:58:27.550811 23 builder.go:156] stderr: ""
  I0904 14:58:27.550833 23 builder.go:157] stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 09/04/25 14:58:27.55
  I0904 14:58:27.550882 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=kubectl-4041 diff -f -'
  I0904 14:58:31.787217 23 builder.go:145] rc: 1
  I0904 14:58:31.787300 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=kubectl-4041 delete -f -'
  I0904 14:58:31.826083 23 builder.go:156] stderr: ""
  I0904 14:58:31.826119 23 builder.go:157] stdout: "deployment.apps \"httpd-deployment\" deleted from kubectl-4041 namespace\n"
  I0904 14:58:31.826279 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4041" for this suite. @ 09/04/25 14:58:31.829
• [4.356 seconds]
------------------------------
SSSS
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 09/04/25 14:58:31.834
  I0904 14:58:31.834245 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename endpointslicemirroring @ 09/04/25 14:58:31.834
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:58:31.847
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:58:31.849
  STEP: mirroring a new custom Endpoint @ 09/04/25 14:58:31.862
  I0904 14:58:31.869164      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0904 14:58:31.873148 23 endpointslicemirroring.go:96] Waiting for at least 1 EndpointSlice to exist, got 0
  STEP: mirroring an update to a custom Endpoint @ 09/04/25 14:58:33.878
  I0904 14:58:33.884789      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: mirroring deletion of a custom Endpoint @ 09/04/25 14:58:33.89
  I0904 14:58:33.897928      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0904 14:58:33.903297 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-9403" for this suite. @ 09/04/25 14:58:33.906
• [2.076 seconds]
------------------------------
SS
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:49
  STEP: Creating a kubernetes client @ 09/04/25 14:58:33.91
  I0904 14:58:33.910371 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename downward-api @ 09/04/25 14:58:33.91
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:58:33.925
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:58:33.927
  STEP: Creating a pod to test downward api env vars @ 09/04/25 14:58:33.929
  STEP: Saw pod success @ 09/04/25 14:58:35.949
  I0904 14:58:35.955175 23 output.go:207] Trying to get logs from node ip-172-31-33-202 pod downward-api-b39f9308-25d5-4f33-b36e-2d81207acb93 container dapi-container: <nil>
  STEP: delete the pod @ 09/04/25 14:58:35.963
  I0904 14:58:35.985117 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2417" for this suite. @ 09/04/25 14:58:35.987
• [2.085 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:259
  STEP: Creating a kubernetes client @ 09/04/25 14:58:35.995
  I0904 14:58:35.995229 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename aggregateddiscovery @ 09/04/25 14:58:35.995
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:58:36.007
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:58:36.009
  I0904 14:58:36.014071 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-548" for this suite. @ 09/04/25 14:58:36.089
• [0.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve a basic endpoint from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:740
  STEP: Creating a kubernetes client @ 09/04/25 14:58:36.097
  I0904 14:58:36.097195 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename services @ 09/04/25 14:58:36.097
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:58:36.109
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:58:36.111
  STEP: creating service endpoint-test2 in namespace services-408 @ 09/04/25 14:58:36.114
  I0904 14:58:36.122675 23 wait.go:65] Waiting for amount of service services-408/endpoint-test2 endpoints to be 0
  I0904 14:58:36.127735 23 wait.go:68] Waiting for at least 1 EndpointSlice to exist
  STEP: creating first endpoint pod for service @ 09/04/25 14:58:37.126
  STEP: Creating pod pod1 in namespace services-408 @ 09/04/25 14:58:37.126
  I0904 14:58:39.144842 23 wait.go:96] Waiting for service services-408/endpoint-test2 to have endpoints pointing to [pod1]
  STEP: Checking if the Service forwards traffic to pod1 @ 09/04/25 14:58:39.15
  I0904 14:58:39.150182 23 resource.go:344] Creating new exec pod
  I0904 14:58:41.164172 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=services-408 exec execpodm7nv4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0904 14:58:41.242519 23 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 (10.152.183.17) 80 port [tcp/http] succeeded!\n"
  I0904 14:58:41.242567 23 builder.go:157] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0904 14:58:41.242647 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=services-408 exec execpodm7nv4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.17 80'
  I0904 14:58:41.302409 23 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.17 80\nConnection to 10.152.183.17 80 port [tcp/http] succeeded!\n"
  I0904 14:58:41.302443 23 builder.go:157] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: creating second endpoint pod for service @ 09/04/25 14:58:41.302
  STEP: Creating pod pod2 in namespace services-408 @ 09/04/25 14:58:41.302
  I0904 14:58:43.322807 23 wait.go:96] Waiting for service services-408/endpoint-test2 to have endpoints pointing to [pod1 pod2]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 09/04/25 14:58:43.328
  I0904 14:58:43.331363 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=services-408 exec execpodm7nv4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0904 14:58:43.402959 23 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 (10.152.183.17) 80 port [tcp/http] succeeded!\n"
  I0904 14:58:43.402986 23 builder.go:157] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0904 14:58:43.403033 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=services-408 exec execpodm7nv4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.17 80'
  I0904 14:58:43.472654 23 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.17 80\nConnection to 10.152.183.17 80 port [tcp/http] succeeded!\n"
  I0904 14:58:43.472678 23 builder.go:157] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: deleting first endpoint pod @ 09/04/25 14:58:43.472
  STEP: Deleting pod pod1 in namespace services-408 @ 09/04/25 14:58:43.472
  I0904 14:58:43.490093 23 wait.go:96] Waiting for service services-408/endpoint-test2 to have endpoints pointing to [pod2]
  STEP: Checking if the Service forwards traffic to pod2 @ 09/04/25 14:58:43.497
  I0904 14:58:43.499803 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=services-408 exec execpodm7nv4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0904 14:58:43.558578 23 builder.go:145] rc: 1
  I0904 14:58:43.558639 23 jig.go:896] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=services-408 exec execpodm7nv4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 endpoint-test2 80
  nc: connect to endpoint-test2 (10.152.183.17) port 80 (tcp) failed: Connection refused
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0904 14:58:44.500687 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=services-408 exec execpodm7nv4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0904 14:58:44.569255 23 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 (10.152.183.17) 80 port [tcp/http] succeeded!\n"
  I0904 14:58:44.569295 23 builder.go:157] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0904 14:58:44.569356 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=services-408 exec execpodm7nv4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.17 80'
  I0904 14:58:44.635437 23 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.17 80\nConnection to 10.152.183.17 80 port [tcp/http] succeeded!\n"
  I0904 14:58:44.635470 23 builder.go:157] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: deleting second endpoint pod @ 09/04/25 14:58:44.635
  STEP: Deleting pod pod2 in namespace services-408 @ 09/04/25 14:58:44.635
  I0904 14:58:44.650192 23 wait.go:65] Waiting for amount of service services-408/endpoint-test2 endpoints to be 0
  I0904 14:58:44.653513 23 wait.go:83] Unexpected number of Endpoints on Slices, got 1, expected 0
  I0904 14:58:45.675800 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-408" for this suite. @ 09/04/25 14:58:45.679
• [9.587 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:109
  STEP: Creating a kubernetes client @ 09/04/25 14:58:45.683
  I0904 14:58:45.683883 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename emptydir @ 09/04/25 14:58:45.684
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:58:45.696
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:58:45.698
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 09/04/25 14:58:45.7
  STEP: Saw pod success @ 09/04/25 14:58:49.721
  I0904 14:58:49.727987 23 output.go:207] Trying to get logs from node ip-172-31-33-202 pod pod-8a392276-086f-4199-83bb-abfaa9bb8292 container test-container: <nil>
  STEP: delete the pod @ 09/04/25 14:58:49.738
  I0904 14:58:49.754353 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5701" for this suite. @ 09/04/25 14:58:49.757
• [4.082 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:189
  STEP: Creating a kubernetes client @ 09/04/25 14:58:49.766
  I0904 14:58:49.766827 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename var-expansion @ 09/04/25 14:58:49.767
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:58:49.787
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:58:49.79
  I0904 14:58:51.816630 23 delete.go:78] Deleting pod "var-expansion-7fae3c51-e68e-45a3-9e15-469be54c7cd5" in namespace "var-expansion-542"
  I0904 14:58:51.826456 23 delete.go:86] Wait up to 5m0s for pod "var-expansion-7fae3c51-e68e-45a3-9e15-469be54c7cd5" to be fully deleted
  I0904 14:58:53.834132 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-542" for this suite. @ 09/04/25 14:58:53.837
• [4.080 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should patch a pod status [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:1086
  STEP: Creating a kubernetes client @ 09/04/25 14:58:53.846
  I0904 14:58:53.846823 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename pods @ 09/04/25 14:58:53.847
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:58:53.859
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:58:53.861
  STEP: Create a pod @ 09/04/25 14:58:53.863
  STEP: patching /status @ 09/04/25 14:58:55.884
  I0904 14:58:55.892574 23 pods.go:1123] Status Message: "Patched by e2e test" and Reason: "E2E"
  I0904 14:58:55.892709 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9370" for this suite. @ 09/04/25 14:58:55.897
• [2.055 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIStorageCapacity should support CSIStorageCapacities API operations [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csistoragecapacity.go:50
  STEP: Creating a kubernetes client @ 09/04/25 14:58:55.902
  I0904 14:58:55.902515 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename csistoragecapacity @ 09/04/25 14:58:55.902
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:58:55.914
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:58:55.917
  STEP: getting /apis @ 09/04/25 14:58:55.919
  STEP: getting /apis/storage.k8s.io @ 09/04/25 14:58:55.921
  STEP: getting /apis/storage.k8s.io/v1 @ 09/04/25 14:58:55.922
  STEP: creating @ 09/04/25 14:58:55.923
  STEP: watching @ 09/04/25 14:58:55.94
  I0904 14:58:55.940325 23 csistoragecapacity.go:143] starting watch
  STEP: getting @ 09/04/25 14:58:55.949
  STEP: listing in namespace @ 09/04/25 14:58:55.952
  STEP: listing across namespaces @ 09/04/25 14:58:55.954
  STEP: patching @ 09/04/25 14:58:55.958
  STEP: updating @ 09/04/25 14:58:55.962
  I0904 14:58:55.966194 23 csistoragecapacity.go:181] waiting for watch events with expected annotations in namespace
  I0904 14:58:55.966246 23 csistoragecapacity.go:181] waiting for watch events with expected annotations across namespace
  STEP: deleting @ 09/04/25 14:58:55.966
  STEP: deleting a collection @ 09/04/25 14:58:55.978
  I0904 14:58:55.992841 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-1613" for this suite. @ 09/04/25 14:58:55.997
• [0.101 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:155
  STEP: Creating a kubernetes client @ 09/04/25 14:58:56.004
  I0904 14:58:56.004055 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/04/25 14:58:56.004
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:58:56.015
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:58:56.017
  I0904 14:58:56.020010 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 09/04/25 14:58:57.231
  I0904 14:58:57.231232 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=crd-publish-openapi-5235 --namespace=crd-publish-openapi-5235 create -f -'
  I0904 14:58:59.289215 23 builder.go:156] stderr: ""
  I0904 14:58:59.289255 23 builder.go:157] stdout: "e2e-test-crd-publish-openapi-5235-4879-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I0904 14:58:59.289322 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=crd-publish-openapi-5235 --namespace=crd-publish-openapi-5235 delete e2e-test-crd-publish-openapi-5235-4879-crds test-cr'
  I0904 14:58:59.331751 23 builder.go:156] stderr: ""
  I0904 14:58:59.331786 23 builder.go:157] stdout: "e2e-test-crd-publish-openapi-5235-4879-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted from crd-publish-openapi-5235 namespace\n"
  I0904 14:58:59.331840 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=crd-publish-openapi-5235 --namespace=crd-publish-openapi-5235 apply -f -'
  I0904 14:58:59.373788 23 builder.go:156] stderr: ""
  I0904 14:58:59.373818 23 builder.go:157] stdout: "e2e-test-crd-publish-openapi-5235-4879-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I0904 14:58:59.373847 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=crd-publish-openapi-5235 --namespace=crd-publish-openapi-5235 delete e2e-test-crd-publish-openapi-5235-4879-crds test-cr'
  I0904 14:58:59.413509 23 builder.go:156] stderr: ""
  I0904 14:58:59.413531 23 builder.go:157] stdout: "e2e-test-crd-publish-openapi-5235-4879-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted from crd-publish-openapi-5235 namespace\n"
  STEP: kubectl explain works to explain CR without validation schema @ 09/04/25 14:58:59.413
  I0904 14:58:59.413604 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=crd-publish-openapi-5235 explain e2e-test-crd-publish-openapi-5235-4879-crds'
  I0904 14:58:59.446399 23 builder.go:156] stderr: ""
  I0904 14:58:59.446428 23 builder.go:157] stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-5235-4879-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  I0904 14:59:00.794638 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5235" for this suite. @ 09/04/25 14:59:00.8
• [4.805 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:85
  STEP: Creating a kubernetes client @ 09/04/25 14:59:00.808
  I0904 14:59:00.808903 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename pod-network-test @ 09/04/25 14:59:00.809
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:59:00.817
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:59:00.819
  STEP: Performing setup for networking test in namespace pod-network-test-7782 @ 09/04/25 14:59:00.821
  STEP: creating a selector @ 09/04/25 14:59:00.821
  STEP: Creating the service pods in kubernetes @ 09/04/25 14:59:00.821
  I0904 14:59:00.821821 23 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 09/04/25 14:59:14.983
  I0904 14:59:16.999330 23 utils.go:803] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I0904 14:59:16.999359 23 networking.go:42] Breadth first check of 192.168.4.182 on host 172.31.18.79...
  I0904 14:59:17.003610 23 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.109.102:9080/dial?request=hostname&protocol=http&host=192.168.4.182&port=8083&tries=1'] Namespace:pod-network-test-7782 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0904 14:59:17.003632 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0904 14:59:17.003671 23 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/pod-network-test-7782/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.109.102%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.4.182%26port%3D8083%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0904 14:59:17.044886 23 utils.go:356] Waiting for responses: map[]
  I0904 14:59:17.044902 23 utils.go:360] reached 192.168.4.182 after 0/1 tries
  I0904 14:59:17.044909 23 networking.go:42] Breadth first check of 192.168.109.101 on host 172.31.33.202...
  I0904 14:59:17.047555 23 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.109.102:9080/dial?request=hostname&protocol=http&host=192.168.109.101&port=8083&tries=1'] Namespace:pod-network-test-7782 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0904 14:59:17.047570 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0904 14:59:17.047621 23 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/pod-network-test-7782/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.109.102%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.109.101%26port%3D8083%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0904 14:59:17.083058 23 utils.go:356] Waiting for responses: map[]
  I0904 14:59:17.083084 23 utils.go:360] reached 192.168.109.101 after 0/1 tries
  I0904 14:59:17.083091 23 networking.go:42] Breadth first check of 192.168.186.95 on host 172.31.87.111...
  I0904 14:59:17.088328 23 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.109.102:9080/dial?request=hostname&protocol=http&host=192.168.186.95&port=8083&tries=1'] Namespace:pod-network-test-7782 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0904 14:59:17.088341 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0904 14:59:17.088370 23 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/pod-network-test-7782/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.109.102%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.186.95%26port%3D8083%26tries%3D1%27&container=webserver&stderr=true&stdout=true)
  I0904 14:59:17.125551 23 utils.go:356] Waiting for responses: map[]
  I0904 14:59:17.125567 23 utils.go:360] reached 192.168.186.95 after 0/1 tries
  I0904 14:59:17.125573 23 networking.go:53] Going to retry 0 out of 3 pods....
  I0904 14:59:17.125690 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-7782" for this suite. @ 09/04/25 14:59:17.131
• [16.328 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:95
  STEP: Creating a kubernetes client @ 09/04/25 14:59:17.137
  I0904 14:59:17.137486 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename downward-api @ 09/04/25 14:59:17.137
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:59:17.149
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:59:17.152
  STEP: Creating a pod to test downward api env vars @ 09/04/25 14:59:17.154
  STEP: Saw pod success @ 09/04/25 14:59:19.171
  I0904 14:59:19.174225 23 output.go:207] Trying to get logs from node ip-172-31-18-79 pod downward-api-34f4aff9-1e4c-43c6-80e2-c2103307a8f3 container dapi-container: <nil>
  STEP: delete the pod @ 09/04/25 14:59:19.179
  I0904 14:59:19.196274 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1182" for this suite. @ 09/04/25 14:59:19.198
• [2.067 seconds]
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:157
  STEP: Creating a kubernetes client @ 09/04/25 14:59:19.204
  I0904 14:59:19.204671 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 09/04/25 14:59:19.205
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:59:19.218
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:59:19.22
  STEP: create the container to handle the HTTPGet hook request. @ 09/04/25 14:59:19.299
  STEP: create the pod with lifecycle hook @ 09/04/25 14:59:21.316
  STEP: delete the pod with lifecycle hook @ 09/04/25 14:59:23.336
  STEP: check prestop hook @ 09/04/25 14:59:27.354
  I0904 14:59:27.360353 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-5352" for this suite. @ 09/04/25 14:59:27.365
• [8.171 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:351
  STEP: Creating a kubernetes client @ 09/04/25 14:59:27.375
  I0904 14:59:27.375814 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename disruption @ 09/04/25 14:59:27.376
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:59:27.395
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:59:27.398
  STEP: Creating a pdb that targets all three pods in a test replica set @ 09/04/25 14:59:27.402
  STEP: Waiting for the pdb to be processed @ 09/04/25 14:59:27.411
  STEP: First trying to evict a pod which shouldn't be evictable @ 09/04/25 14:59:27.433
  STEP: Waiting for all pods to be running @ 09/04/25 14:59:27.433
  I0904 14:59:27.437717 23 disruption.go:680] pods: 0 < 3
  STEP: locating a running pod @ 09/04/25 14:59:29.441
  STEP: Updating the pdb to allow a pod to be evicted @ 09/04/25 14:59:29.45
  STEP: Waiting for the pdb to be processed @ 09/04/25 14:59:29.46
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 09/04/25 14:59:31.466
  STEP: Waiting for all pods to be running @ 09/04/25 14:59:31.466
  STEP: Waiting for the pdb to observed all healthy pods @ 09/04/25 14:59:31.471
  STEP: Patching the pdb to disallow a pod to be evicted @ 09/04/25 14:59:31.496
  STEP: Waiting for the pdb to be processed @ 09/04/25 14:59:31.518
  STEP: Waiting for all pods to be running @ 09/04/25 14:59:33.526
  STEP: locating a running pod @ 09/04/25 14:59:33.531
  STEP: Deleting the pdb to allow a pod to be evicted @ 09/04/25 14:59:33.54
  STEP: Waiting for the pdb to be deleted @ 09/04/25 14:59:33.547
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 09/04/25 14:59:33.549
  STEP: Waiting for all pods to be running @ 09/04/25 14:59:33.549
  I0904 14:59:33.649741 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2930" for this suite. @ 09/04/25 14:59:33.653
• [6.284 seconds]
------------------------------
SSS
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:47
  STEP: Creating a kubernetes client @ 09/04/25 14:59:33.66
  I0904 14:59:33.660282 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename secrets @ 09/04/25 14:59:33.66
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:59:33.678
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:59:33.681
  STEP: Creating secret with name secret-test-50c000b7-e417-429f-ac1f-5ff99080fe02 @ 09/04/25 14:59:33.683
  STEP: Creating a pod to test consume secrets @ 09/04/25 14:59:33.69
  STEP: Saw pod success @ 09/04/25 14:59:37.71
  I0904 14:59:37.715296 23 output.go:207] Trying to get logs from node ip-172-31-33-202 pod pod-secrets-36599400-51ed-440a-98b9-12f62bd5fc37 container secret-env-test: <nil>
  STEP: delete the pod @ 09/04/25 14:59:37.721
  I0904 14:59:37.739445 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6953" for this suite. @ 09/04/25 14:59:37.743
• [4.093 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:262
  STEP: Creating a kubernetes client @ 09/04/25 14:59:37.753
  I0904 14:59:37.753484 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename projected @ 09/04/25 14:59:37.754
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:59:37.765
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:59:37.767
  STEP: Creating a pod to test downward API volume plugin @ 09/04/25 14:59:37.769
  STEP: Saw pod success @ 09/04/25 14:59:41.787
  I0904 14:59:41.789502 23 output.go:207] Trying to get logs from node ip-172-31-33-202 pod downwardapi-volume-d8b0932c-c017-49dd-979f-5f15be6c8a4c container client-container: <nil>
  STEP: delete the pod @ 09/04/25 14:59:41.796
  I0904 14:59:41.810845 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3850" for this suite. @ 09/04/25 14:59:41.815
• [4.070 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:139
  STEP: Creating a kubernetes client @ 09/04/25 14:59:41.824
  I0904 14:59:41.824142 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename crd-webhook @ 09/04/25 14:59:41.824
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:59:41.833
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:59:41.835
  STEP: Setting up server cert @ 09/04/25 14:59:41.837
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 09/04/25 14:59:42.205
  STEP: Deploying the custom resource conversion webhook pod @ 09/04/25 14:59:42.212
  STEP: Wait for the deployment to be ready @ 09/04/25 14:59:42.224
  I0904 14:59:42.233332 23 deployment.go:223] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/04/25 14:59:44.244
  STEP: Verifying the service has paired with the endpoint @ 09/04/25 14:59:44.256
  I0904 14:59:45.256127 23 util.go:419] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0904 14:59:45.261107 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Creating a v1 custom resource @ 09/04/25 14:59:47.814
  STEP: v2 custom resource should be converted @ 09/04/25 14:59:47.82
  I0904 14:59:48.377571 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-9324" for this suite. @ 09/04/25 14:59:48.38
• [6.567 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:436
  STEP: Creating a kubernetes client @ 09/04/25 14:59:48.391
  I0904 14:59:48.391280 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename dns @ 09/04/25 14:59:48.391
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:59:48.403
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:59:48.405
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 09/04/25 14:59:48.407
  I0904 14:59:48.413831 23 dns.go:448] Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-6165  a4626b40-24b4-4fda-a166-3024a1ea1fe0 14672 1 2025-09-04 14:59:48 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2025-09-04 14:59:48 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-jnf6l,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},ClusterTrustBundle:nil,PodCertificate:nil,},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,ClusterTrustBundle:nil,PodCertificate:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,ClusterTrustBundle:nil,PodCertificate:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,Image:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.56,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-jnf6l,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,AppArmorProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,RestartPolicyRules:[]ContainerRestartRule{},},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,AppArmorProfile:nil,SupplementalGroupsPolicy:nil,SELinuxChangePolicy:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},Resources:nil,HostnameOverride:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},ObservedGeneration:0,ExtendedResourceClaimStatus:nil,},}
  STEP: Verifying customized DNS suffix list is configured on pod... @ 09/04/25 14:59:50.42
  I0904 14:59:50.420987 23 exec_util.go:63] ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-6165 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0904 14:59:50.421002 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0904 14:59:50.421032 23 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/dns-6165/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&stderr=true&stdout=true)
  STEP: Verifying customized DNS server is configured on pod... @ 09/04/25 14:59:50.467
  I0904 14:59:50.467199 23 exec_util.go:63] ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-6165 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0904 14:59:50.467210 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0904 14:59:50.467241 23 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/dns-6165/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&stderr=true&stdout=true)
  I0904 14:59:50.505190 23 dns.go:450] Deleting pod test-dns-nameservers...
  I0904 14:59:50.521800 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-6165" for this suite. @ 09/04/25 14:59:50.526
• [2.143 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] Job with successPolicy should succeeded when all indexes succeeded [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:484
  STEP: Creating a kubernetes client @ 09/04/25 14:59:50.534
  I0904 14:59:50.534134 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename job @ 09/04/25 14:59:50.534
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:59:50.546
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:59:50.549
  STEP: Creating an indexed job with successPolicy @ 09/04/25 14:59:50.551
  STEP: Awaiting for the job to have the interim SuccessCriteriaMet with SuccessPolicy reason condition @ 09/04/25 14:59:50.558
  STEP: Ensure that the job reaches completions @ 09/04/25 14:59:54.569
  STEP: Verifying that the job status to ensure correct final state @ 09/04/25 14:59:54.574
  I0904 14:59:54.578210 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-236" for this suite. @ 09/04/25 14:59:54.581
• [4.052 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:173
  STEP: Creating a kubernetes client @ 09/04/25 14:59:54.586
  I0904 14:59:54.586958 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 09/04/25 14:59:54.587
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 14:59:54.598
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 14:59:54.6
  STEP: create the container to handle the HTTPGet hook request. @ 09/04/25 14:59:54.682
  STEP: create the pod with lifecycle hook @ 09/04/25 14:59:56.705
  STEP: check poststart hook @ 09/04/25 14:59:58.727
  STEP: delete the pod with lifecycle hook @ 09/04/25 14:59:58.74
  I0904 15:00:00.757554 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-791" for this suite. @ 09/04/25 15:00:00.76
• [6.180 seconds]
------------------------------
SS
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:194
  STEP: Creating a kubernetes client @ 09/04/25 15:00:00.767
  I0904 15:00:00.767373 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename downward-api @ 09/04/25 15:00:00.767
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:00:00.781
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:00:00.783
  STEP: Creating a pod to test downward API volume plugin @ 09/04/25 15:00:00.785
  STEP: Saw pod success @ 09/04/25 15:00:04.811
  I0904 15:00:04.813973 23 output.go:207] Trying to get logs from node ip-172-31-33-202 pod downwardapi-volume-b8cad24e-8a42-4de7-9e6d-2c76646ea221 container client-container: <nil>
  STEP: delete the pod @ 09/04/25 15:00:04.819
  I0904 15:00:04.836961 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9255" for this suite. @ 09/04/25 15:00:04.841
• [4.082 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:89
  STEP: Creating a kubernetes client @ 09/04/25 15:00:04.849
  I0904 15:00:04.849581 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename emptydir @ 09/04/25 15:00:04.85
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:00:04.859
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:00:04.861
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 09/04/25 15:00:04.863
  STEP: Saw pod success @ 09/04/25 15:00:08.884
  I0904 15:00:08.888572 23 output.go:207] Trying to get logs from node ip-172-31-33-202 pod pod-1a2b2e9c-c113-4fc7-b752-091c0ce7542b container test-container: <nil>
  STEP: delete the pod @ 09/04/25 15:00:08.894
  I0904 15:00:08.911612 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1671" for this suite. @ 09/04/25 15:00:08.914
• [4.073 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 09/04/25 15:00:08.922
  I0904 15:00:08.922435 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename watch @ 09/04/25 15:00:08.922
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:00:08.931
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:00:08.933
  STEP: getting a starting resourceVersion @ 09/04/25 15:00:08.935
  STEP: starting a background goroutine to produce watch events @ 09/04/25 15:00:08.941
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 09/04/25 15:00:08.941
  I0904 15:00:11.731247 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-1257" for this suite. @ 09/04/25 15:00:11.777
• [2.911 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:298
  STEP: Creating a kubernetes client @ 09/04/25 15:00:11.833
  I0904 15:00:11.833167 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename downward-api @ 09/04/25 15:00:11.833
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:00:11.844
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:00:11.846
  STEP: Creating a pod to test downward api env vars @ 09/04/25 15:00:11.848
  STEP: Saw pod success @ 09/04/25 15:00:15.87
  I0904 15:00:15.873563 23 output.go:207] Trying to get logs from node ip-172-31-33-202 pod downward-api-379687b9-4967-4a5d-92be-cf813def4e1e container dapi-container: <nil>
  STEP: delete the pod @ 09/04/25 15:00:15.881
  I0904 15:00:15.897284 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9330" for this suite. @ 09/04/25 15:00:15.902
• [4.078 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1469
  STEP: Creating a kubernetes client @ 09/04/25 15:00:15.913
  I0904 15:00:15.913336 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename services @ 09/04/25 15:00:15.913
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:00:15.923
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:00:15.925
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-3507 @ 09/04/25 15:00:15.928
  STEP: changing the ExternalName service to type=NodePort @ 09/04/25 15:00:15.932
  I0904 15:00:15.972168 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  I0904 15:00:17.976701 23 resource.go:344] Creating new exec pod
  I0904 15:00:19.999966 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=services-3507 exec execpod9954g -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0904 15:00:20.095961 23 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service (10.152.183.174) 80 port [tcp/http] succeeded!\n"
  I0904 15:00:20.096003 23 builder.go:157] stdout: "externalname-service-b76f96bdc-4pbts"
  I0904 15:00:20.096056 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=services-3507 exec execpod9954g -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.174 80'
  I0904 15:00:20.180282 23 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.174 80\nConnection to 10.152.183.174 80 port [tcp/http] succeeded!\n"
  I0904 15:00:20.180324 23 builder.go:157] stdout: "externalname-service-b76f96bdc-4pbts"
  I0904 15:00:20.180437 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=services-3507 exec execpod9954g -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.18.79 32304'
  I0904 15:00:20.267128 23 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.18.79 32304\nConnection to 172.31.18.79 32304 port [tcp/*] succeeded!\n"
  I0904 15:00:20.267160 23 builder.go:157] stdout: ""
  I0904 15:00:21.181250 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=services-3507 exec execpod9954g -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.18.79 32304'
  I0904 15:00:21.265327 23 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.18.79 32304\nConnection to 172.31.18.79 32304 port [tcp/*] succeeded!\n"
  I0904 15:00:21.265365 23 builder.go:157] stdout: "externalname-service-b76f96bdc-bdlb5"
  I0904 15:00:21.265464 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=services-3507 exec execpod9954g -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.87.111 32304'
  I0904 15:00:21.344185 23 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.87.111 32304\nConnection to 172.31.87.111 32304 port [tcp/*] succeeded!\n"
  I0904 15:00:21.344223 23 builder.go:157] stdout: "externalname-service-b76f96bdc-bdlb5"
  I0904 15:00:21.344343 23 service.go:1478] Cleaning up the ExternalName to NodePort test service
  I0904 15:00:21.372977 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3507" for this suite. @ 09/04/25 15:00:21.376
• [5.472 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 09/04/25 15:00:21.385
  I0904 15:00:21.385568 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename daemonsets @ 09/04/25 15:00:21.386
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:00:21.397
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:00:21.399
  I0904 15:00:21.488385 23 daemon_set.go:208] Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 09/04/25 15:00:21.492
  I0904 15:00:21.496830 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0904 15:00:21.496851 23 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 09/04/25 15:00:21.496
  I0904 15:00:21.597074 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0904 15:00:21.597106 23 fixtures.go:131] Node ip-172-31-33-202 is running 0 daemon pod, expected 1
  I0904 15:00:22.594131 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0904 15:00:22.594159 23 fixtures.go:131] Node ip-172-31-33-202 is running 0 daemon pod, expected 1
  I0904 15:00:23.595283 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0904 15:00:23.595311 23 fixtures.go:136] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 09/04/25 15:00:23.597
  I0904 15:00:23.623090 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0904 15:00:23.623111 23 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 09/04/25 15:00:23.623
  I0904 15:00:23.696505 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0904 15:00:23.696523 23 fixtures.go:131] Node ip-172-31-33-202 is running 0 daemon pod, expected 1
  I0904 15:00:24.641042 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0904 15:00:24.641075 23 fixtures.go:131] Node ip-172-31-33-202 is running 0 daemon pod, expected 1
  I0904 15:00:25.640749 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0904 15:00:25.640780 23 fixtures.go:136] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 09/04/25 15:00:25.647
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-9532, will wait for the garbage collector to delete the pods @ 09/04/25 15:00:25.647
  I0904 15:00:25.707200 23 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 7.358537ms
  I0904 15:00:25.808048 23 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.845232ms
  I0904 15:00:26.913307 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0904 15:00:26.913348 23 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0904 15:00:26.992366 23 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"15315"},"items":null}

  I0904 15:00:26.996421 23 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"15315"},"items":null}

  I0904 15:00:27.018570 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-9532" for this suite. @ 09/04/25 15:00:27.102
• [5.725 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:851
  STEP: Creating a kubernetes client @ 09/04/25 15:00:27.111
  I0904 15:00:27.111174 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename daemonsets @ 09/04/25 15:00:27.111
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:00:27.124
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:00:27.126
  STEP: Creating simple DaemonSet "daemon-set" @ 09/04/25 15:00:27.213
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/04/25 15:00:27.217
  I0904 15:00:27.303518 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-16-153 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0904 15:00:27.303605 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-81-110 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0904 15:00:27.314778 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0904 15:00:27.314862 23 fixtures.go:131] Node ip-172-31-18-79 is running 0 daemon pod, expected 1
  I0904 15:00:28.224168 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-16-153 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0904 15:00:28.224210 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-81-110 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0904 15:00:28.227991 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0904 15:00:28.228009 23 fixtures.go:131] Node ip-172-31-18-79 is running 0 daemon pod, expected 1
  I0904 15:00:29.223521 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-16-153 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0904 15:00:29.223567 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-81-110 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0904 15:00:29.227397 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0904 15:00:29.227416 23 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: listing all DaemonSets @ 09/04/25 15:00:29.229
  STEP: DeleteCollection of the DaemonSets @ 09/04/25 15:00:29.232
  STEP: Verify that ReplicaSets have been deleted @ 09/04/25 15:00:29.241
  I0904 15:00:29.259112 23 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"15383"},"items":null}

  I0904 15:00:29.263195 23 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"15386"},"items":[{"metadata":{"name":"daemon-set-44tqc","generateName":"daemon-set-","namespace":"daemonsets-6592","uid":"f70a9c11-24d0-4cea-ae61-70b827901337","resourceVersion":"15386","generation":2,"creationTimestamp":"2025-09-04T15:00:27Z","deletionTimestamp":"2025-09-04T15:00:59Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"7777b7654c","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"71f86250-cdc7-4368-abc0-d6de95b037e8","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2025-09-04T15:00:27Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"71f86250-cdc7-4368-abc0-d6de95b037e8\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2025-09-04T15:00:28Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:observedGeneration":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:observedGeneration":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:observedGeneration":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodScheduled\"}":{"f:observedGeneration":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:observedGeneration":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:observedGeneration":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.4.188\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-pg5qn","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-pg5qn","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-18-79","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-18-79"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"observedGeneration":1,"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","observedGeneration":1,"status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-04T15:00:28Z"},{"type":"Initialized","observedGeneration":1,"status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-04T15:00:27Z"},{"type":"Ready","observedGeneration":1,"status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-04T15:00:28Z"},{"type":"ContainersReady","observedGeneration":1,"status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-04T15:00:28Z"},{"type":"PodScheduled","observedGeneration":1,"status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-04T15:00:27Z"}],"hostIP":"172.31.18.79","hostIPs":[{"ip":"172.31.18.79"}],"podIP":"192.168.4.188","podIPs":[{"ip":"192.168.4.188"}],"startTime":"2025-09-04T15:00:27Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2025-09-04T15:00:28Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://95b28b8fb8d5e5549764d03d215b67ba76494bd776f6172df70a92ba26e6830e","started":true,"resources":{},"volumeMounts":[{"name":"kube-api-access-pg5qn","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-lkzlh","generateName":"daemon-set-","namespace":"daemonsets-6592","uid":"f6bff31d-e79c-4b80-ad92-fb58a2ca78cf","resourceVersion":"15385","generation":2,"creationTimestamp":"2025-09-04T15:00:27Z","deletionTimestamp":"2025-09-04T15:00:59Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"7777b7654c","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"71f86250-cdc7-4368-abc0-d6de95b037e8","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2025-09-04T15:00:27Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"71f86250-cdc7-4368-abc0-d6de95b037e8\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2025-09-04T15:00:28Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:observedGeneration":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:observedGeneration":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:observedGeneration":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodScheduled\"}":{"f:observedGeneration":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:observedGeneration":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:observedGeneration":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.186.99\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-jgnvp","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-jgnvp","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-87-111","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-87-111"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"observedGeneration":1,"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","observedGeneration":1,"status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-04T15:00:28Z"},{"type":"Initialized","observedGeneration":1,"status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-04T15:00:27Z"},{"type":"Ready","observedGeneration":1,"status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-04T15:00:28Z"},{"type":"ContainersReady","observedGeneration":1,"status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-04T15:00:28Z"},{"type":"PodScheduled","observedGeneration":1,"status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-04T15:00:27Z"}],"hostIP":"172.31.87.111","hostIPs":[{"ip":"172.31.87.111"}],"podIP":"192.168.186.99","podIPs":[{"ip":"192.168.186.99"}],"startTime":"2025-09-04T15:00:27Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2025-09-04T15:00:27Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://a3cc6079a8d409cd56df48c0f90ea3344b111bc444347099bb2acefa0ad647dc","started":true,"resources":{},"volumeMounts":[{"name":"kube-api-access-jgnvp","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-pl8zd","generateName":"daemon-set-","namespace":"daemonsets-6592","uid":"af0c4a89-22ff-4b3b-9557-618605643280","resourceVersion":"15383","generation":2,"creationTimestamp":"2025-09-04T15:00:27Z","deletionTimestamp":"2025-09-04T15:00:59Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"7777b7654c","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"71f86250-cdc7-4368-abc0-d6de95b037e8","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2025-09-04T15:00:27Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"71f86250-cdc7-4368-abc0-d6de95b037e8\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2025-09-04T15:00:27Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:observedGeneration":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:observedGeneration":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:observedGeneration":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodScheduled\"}":{"f:observedGeneration":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:observedGeneration":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:observedGeneration":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.109.120\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-vktgs","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-vktgs","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-33-202","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-33-202"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"observedGeneration":1,"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","observedGeneration":1,"status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-04T15:00:27Z"},{"type":"Initialized","observedGeneration":1,"status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-04T15:00:27Z"},{"type":"Ready","observedGeneration":1,"status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-04T15:00:27Z"},{"type":"ContainersReady","observedGeneration":1,"status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-04T15:00:27Z"},{"type":"PodScheduled","observedGeneration":1,"status":"True","lastProbeTime":null,"lastTransitionTime":"2025-09-04T15:00:27Z"}],"hostIP":"172.31.33.202","hostIPs":[{"ip":"172.31.33.202"}],"podIP":"192.168.109.120","podIPs":[{"ip":"192.168.109.120"}],"startTime":"2025-09-04T15:00:27Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2025-09-04T15:00:27Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://7bd1f6e9fb5218002db3316e123f98c6fda6227b08d9d9f9b94a2c4c252f671e","started":true,"resources":{},"volumeMounts":[{"name":"kube-api-access-vktgs","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}}]}

  I0904 15:00:29.333398 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-6592" for this suite. @ 09/04/25 15:00:29.337
• [2.232 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery endpoint Accept headers [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:151
  STEP: Creating a kubernetes client @ 09/04/25 15:00:29.342
  I0904 15:00:29.342932 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename aggregateddiscovery @ 09/04/25 15:00:29.343
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:00:29.354
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:00:29.356
  I0904 15:00:29.361479 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-7522" for this suite. @ 09/04/25 15:00:29.424
• [0.086 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 09/04/25 15:00:29.429
  I0904 15:00:29.429268 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename projected @ 09/04/25 15:00:29.429
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:00:29.441
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:00:29.444
  STEP: Creating secret with name s-test-opt-del-6f7862d7-f52a-4bb8-8374-3a6ddc8a2bd4 @ 09/04/25 15:00:29.524
  STEP: Creating secret with name s-test-opt-upd-19fb050a-41b3-4232-acf3-2530e31b3394 @ 09/04/25 15:00:29.53
  STEP: Creating the pod @ 09/04/25 15:00:29.534
  STEP: Deleting secret s-test-opt-del-6f7862d7-f52a-4bb8-8374-3a6ddc8a2bd4 @ 09/04/25 15:00:31.574
  STEP: Updating secret s-test-opt-upd-19fb050a-41b3-4232-acf3-2530e31b3394 @ 09/04/25 15:00:31.581
  STEP: Creating secret with name s-test-opt-create-11bc4647-5b4c-4f92-b838-9b48cda4fcfd @ 09/04/25 15:00:31.584
  STEP: waiting to observe update in volume @ 09/04/25 15:00:31.59
  I0904 15:01:56.007450 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6580" for this suite. @ 09/04/25 15:01:56.013
• [86.589 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 09/04/25 15:01:56.018
  I0904 15:01:56.018115 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename daemonsets @ 09/04/25 15:01:56.018
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:01:56.033
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:01:56.035
  STEP: Creating a simple DaemonSet "daemon-set" @ 09/04/25 15:01:56.124
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/04/25 15:01:56.13
  I0904 15:01:56.213982 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-16-153 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0904 15:01:56.214023 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-81-110 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0904 15:01:56.219732 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0904 15:01:56.219755 23 fixtures.go:131] Node ip-172-31-18-79 is running 0 daemon pod, expected 1
  I0904 15:01:57.137793 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-16-153 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0904 15:01:57.137832 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-81-110 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0904 15:01:57.141958 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0904 15:01:57.141979 23 fixtures.go:131] Node ip-172-31-87-111 is running 0 daemon pod, expected 1
  I0904 15:01:58.135374 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-16-153 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0904 15:01:58.135414 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-81-110 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0904 15:01:58.141462 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0904 15:01:58.141482 23 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 09/04/25 15:01:58.145
  I0904 15:01:58.238773 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-16-153 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0904 15:01:58.238817 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-81-110 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0904 15:01:58.241726 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0904 15:01:58.241741 23 fixtures.go:131] Node ip-172-31-87-111 is running 0 daemon pod, expected 1
  I0904 15:01:59.161924 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-16-153 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0904 15:01:59.161979 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-81-110 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0904 15:01:59.167121 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0904 15:01:59.167146 23 fixtures.go:131] Node ip-172-31-87-111 is running 0 daemon pod, expected 1
  I0904 15:02:00.159544 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-16-153 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0904 15:02:00.159581 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-81-110 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0904 15:02:00.162945 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0904 15:02:00.162964 23 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 09/04/25 15:02:00.162
  STEP: Deleting DaemonSet "daemon-set" @ 09/04/25 15:02:00.17
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-1830, will wait for the garbage collector to delete the pods @ 09/04/25 15:02:00.17
  I0904 15:02:00.230715 23 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 8.19042ms
  I0904 15:02:00.330930 23 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.21379ms
  I0904 15:02:01.635242 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0904 15:02:01.635272 23 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0904 15:02:01.639026 23 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"15786"},"items":null}

  I0904 15:02:01.644375 23 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"15786"},"items":null}

  I0904 15:02:01.657123 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-1830" for this suite. @ 09/04/25 15:02:01.661
• [5.648 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:167
  STEP: Creating a kubernetes client @ 09/04/25 15:02:01.666
  I0904 15:02:01.666384 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename disruption @ 09/04/25 15:02:01.666
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:02:01.678
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:02:01.681
  STEP: Waiting for the pdb to be processed @ 09/04/25 15:02:01.687
  STEP: Updating PodDisruptionBudget status @ 09/04/25 15:02:03.691
  STEP: Waiting for all pods to be running @ 09/04/25 15:02:03.7
  I0904 15:02:03.703120 23 disruption.go:691] running pods: 0 < 1
  STEP: locating a running pod @ 09/04/25 15:02:05.709
  STEP: Waiting for the pdb to be processed @ 09/04/25 15:02:05.717
  STEP: Patching PodDisruptionBudget status @ 09/04/25 15:02:05.726
  STEP: Waiting for the pdb to be processed @ 09/04/25 15:02:05.735
  I0904 15:02:05.737680 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-4505" for this suite. @ 09/04/25 15:02:05.74
• [4.079 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should run through the lifecycle of a PV and a PVC [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:429
  STEP: Creating a kubernetes client @ 09/04/25 15:02:05.745
  I0904 15:02:05.745392 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename pv @ 09/04/25 15:02:05.745
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:02:05.757
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:02:05.759
  STEP: Creating initial PV and PVC @ 09/04/25 15:02:05.761
  I0904 15:02:05.761882 23 pv.go:394] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-6202" @ 09/04/25 15:02:05.773
  STEP: Listing PVCs in namespace "pv-6202" @ 09/04/25 15:02:05.779
  STEP: Patching the PV "pv-6202-db6hz" @ 09/04/25 15:02:05.782
  STEP: Patching the PVC "pvc-wtm2t" @ 09/04/25 15:02:05.79
  STEP: Getting PV "pv-6202-db6hz" @ 09/04/25 15:02:05.797
  STEP: Getting PVC "pvc-wtm2t" @ 09/04/25 15:02:05.802
  STEP: Deleting PVC "pvc-wtm2t" @ 09/04/25 15:02:05.807
  STEP: Confirm deletion of PVC "pvc-wtm2t" @ 09/04/25 15:02:05.815
  STEP: Deleting PV "pv-6202-db6hz" @ 09/04/25 15:02:07.828
  STEP: Confirm deletion of PV "pv-6202-db6hz" @ 09/04/25 15:02:07.838
  STEP: Recreating another PV & PVC @ 09/04/25 15:02:09.846
  I0904 15:02:09.846735 23 pv.go:394] Creating a PV followed by a PVC
  STEP: Updating the PV "pv-6202-xwpn2" @ 09/04/25 15:02:09.86
  STEP: Updating the PVC "pvc-vblsx" @ 09/04/25 15:02:09.89
  STEP: Listing PVCs in all namespaces with the labelSelector: "pvc-vblsx=updated" @ 09/04/25 15:02:09.898
  STEP: Deleting PVC "pvc-vblsx" via DeleteCollection @ 09/04/25 15:02:09.901
  STEP: Confirm deletion of PVC "pvc-vblsx" @ 09/04/25 15:02:09.91
  STEP: Deleting PV "pv-6202-xwpn2" via DeleteCollection @ 09/04/25 15:02:11.919
  STEP: Confirm deletion of PV "pv-6202-xwpn2" @ 09/04/25 15:02:11.931
  I0904 15:02:13.940567 23 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I0904 15:02:13.940617 23 pv.go:205] Deleting PersistentVolumeClaim "pvc-vblsx"
  I0904 15:02:13.943538 23 pv.go:193] Deleting PersistentVolume "pv-6202-xwpn2"
  I0904 15:02:13.946245 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-6202" for this suite. @ 09/04/25 15:02:13.951
• [8.212 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:547
  STEP: Creating a kubernetes client @ 09/04/25 15:02:13.957
  I0904 15:02:13.957238 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename gc @ 09/04/25 15:02:13.957
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:02:13.969
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:02:13.971
  STEP: create the deployment @ 09/04/25 15:02:13.974
  I0904 15:02:13.980989      23 warnings.go:110] "Warning: metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]"
  STEP: Wait for the Deployment to create new ReplicaSet @ 09/04/25 15:02:13.981
  STEP: delete the deployment @ 09/04/25 15:02:14.49
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 09/04/25 15:02:14.499
  STEP: Gathering metrics @ 09/04/25 15:02:15.023
  W0904 15:02:15.026684      23 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0904 15:02:15.026714 23 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0904 15:02:15.026910 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-6667" for this suite. @ 09/04/25 15:02:15.029
• [1.080 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:172
  STEP: Creating a kubernetes client @ 09/04/25 15:02:15.037
  I0904 15:02:15.037583 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename discovery @ 09/04/25 15:02:15.038
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:02:15.049
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:02:15.052
  STEP: Setting up server cert @ 09/04/25 15:02:15.055
  STEP: Requesting APIResourceList from "/api/v1" @ 09/04/25 15:02:15.333
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 09/04/25 15:02:15.335
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 09/04/25 15:02:15.336
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 09/04/25 15:02:15.337
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 09/04/25 15:02:15.338
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 09/04/25 15:02:15.339
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 09/04/25 15:02:15.34
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 09/04/25 15:02:15.34
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 09/04/25 15:02:15.341
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 09/04/25 15:02:15.342
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 09/04/25 15:02:15.343
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 09/04/25 15:02:15.344
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 09/04/25 15:02:15.344
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 09/04/25 15:02:15.345
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 09/04/25 15:02:15.346
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 09/04/25 15:02:15.347
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 09/04/25 15:02:15.348
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 09/04/25 15:02:15.349
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 09/04/25 15:02:15.35
  I0904 15:02:15.351283 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-2745" for this suite. @ 09/04/25 15:02:15.355
• [0.325 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:222
  STEP: Creating a kubernetes client @ 09/04/25 15:02:15.362
  I0904 15:02:15.362353 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename projected @ 09/04/25 15:02:15.362
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:02:15.373
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:02:15.376
  STEP: Creating a pod to test downward API volume plugin @ 09/04/25 15:02:15.378
  STEP: Saw pod success @ 09/04/25 15:02:17.396
  I0904 15:02:17.399789 23 output.go:207] Trying to get logs from node ip-172-31-33-202 pod downwardapi-volume-f9e11ef4-7ad6-47cf-a1df-23cdd5b810fc container client-container: <nil>
  STEP: delete the pod @ 09/04/25 15:02:17.406
  I0904 15:02:17.427825 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2202" for this suite. @ 09/04/25 15:02:17.43
• [2.075 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:184
  STEP: Creating a kubernetes client @ 09/04/25 15:02:17.437
  I0904 15:02:17.437444 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename kubelet-test @ 09/04/25 15:02:17.437
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:02:17.448
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:02:17.45
  I0904 15:02:19.479416 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-2185" for this suite. @ 09/04/25 15:02:19.484
• [2.054 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:307
  STEP: Creating a kubernetes client @ 09/04/25 15:02:19.492
  I0904 15:02:19.492024 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename dns @ 09/04/25 15:02:19.492
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:02:19.504
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:02:19.506
  STEP: Creating a test headless service @ 09/04/25 15:02:19.508
  I0904 15:02:19.514228      23 warnings.go:110] "Warning: spec.SessionAffinity is ignored for headless services"
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-3357.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-querier-2.dns-test-service-2.dns-3357.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-3357.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-querier-2.dns-test-service-2.dns-3357.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-3357.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service-2.dns-3357.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-3357.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service-2.dns-3357.svc.cluster.local;sleep 1; done
   @ 09/04/25 15:02:19.514
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-3357.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-3357.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-3357.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-3357.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-3357.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-3357.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-3357.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-3357.svc.cluster.local;sleep 1; done
   @ 09/04/25 15:02:19.514
  STEP: creating a pod to probe DNS @ 09/04/25 15:02:19.514
  STEP: submitting the pod to kubernetes @ 09/04/25 15:02:19.514
  STEP: retrieving the pod @ 09/04/25 15:02:21.533
  STEP: looking for the results for each expected name from probers @ 09/04/25 15:02:21.54
  I0904 15:02:21.547729 23 dns_common.go:495] Unable to read agnhost_udp@dns-querier-2.dns-test-service-2.dns-3357.svc.cluster.local from pod dns-3357/dns-test-120c0b3d-f712-4907-b3b1-64ef43e26bab: the server could not find the requested resource (get pods dns-test-120c0b3d-f712-4907-b3b1-64ef43e26bab)
  I0904 15:02:21.554509 23 dns_common.go:495] Unable to read agnhost_tcp@dns-querier-2.dns-test-service-2.dns-3357.svc.cluster.local from pod dns-3357/dns-test-120c0b3d-f712-4907-b3b1-64ef43e26bab: the server could not find the requested resource (get pods dns-test-120c0b3d-f712-4907-b3b1-64ef43e26bab)
  I0904 15:02:21.562887 23 dns_common.go:495] Unable to read agnhost_udp@dns-test-service-2.dns-3357.svc.cluster.local from pod dns-3357/dns-test-120c0b3d-f712-4907-b3b1-64ef43e26bab: the server could not find the requested resource (get pods dns-test-120c0b3d-f712-4907-b3b1-64ef43e26bab)
  I0904 15:02:21.567013 23 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service-2.dns-3357.svc.cluster.local from pod dns-3357/dns-test-120c0b3d-f712-4907-b3b1-64ef43e26bab: the server could not find the requested resource (get pods dns-test-120c0b3d-f712-4907-b3b1-64ef43e26bab)
  I0904 15:02:21.573747 23 dns_common.go:495] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-3357.svc.cluster.local from pod dns-3357/dns-test-120c0b3d-f712-4907-b3b1-64ef43e26bab: the server could not find the requested resource (get pods dns-test-120c0b3d-f712-4907-b3b1-64ef43e26bab)
  I0904 15:02:21.579545 23 dns_common.go:495] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-3357.svc.cluster.local from pod dns-3357/dns-test-120c0b3d-f712-4907-b3b1-64ef43e26bab: the server could not find the requested resource (get pods dns-test-120c0b3d-f712-4907-b3b1-64ef43e26bab)
  I0904 15:02:21.587398 23 dns_common.go:495] Unable to read jessie_udp@dns-test-service-2.dns-3357.svc.cluster.local from pod dns-3357/dns-test-120c0b3d-f712-4907-b3b1-64ef43e26bab: the server could not find the requested resource (get pods dns-test-120c0b3d-f712-4907-b3b1-64ef43e26bab)
  I0904 15:02:21.595868 23 dns_common.go:495] Unable to read jessie_tcp@dns-test-service-2.dns-3357.svc.cluster.local from pod dns-3357/dns-test-120c0b3d-f712-4907-b3b1-64ef43e26bab: the server could not find the requested resource (get pods dns-test-120c0b3d-f712-4907-b3b1-64ef43e26bab)
  I0904 15:02:21.595896 23 dns_common.go:506] Lookups using dns-3357/dns-test-120c0b3d-f712-4907-b3b1-64ef43e26bab failed for: [agnhost_udp@dns-querier-2.dns-test-service-2.dns-3357.svc.cluster.local agnhost_tcp@dns-querier-2.dns-test-service-2.dns-3357.svc.cluster.local agnhost_udp@dns-test-service-2.dns-3357.svc.cluster.local agnhost_tcp@dns-test-service-2.dns-3357.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-3357.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-3357.svc.cluster.local jessie_udp@dns-test-service-2.dns-3357.svc.cluster.local jessie_tcp@dns-test-service-2.dns-3357.svc.cluster.local]

  I0904 15:02:21.610796 23 dns_common.go:514] Pod client logs for webserver: 
  I0904 15:02:21.617523 23 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0904 15:02:21.622845 23 dns_common.go:514] Pod client logs for jessie-querier: 
  I0904 15:02:26.570095 23 dns_common.go:546] DNS probes using dns-3357/dns-test-120c0b3d-f712-4907-b3b1-64ef43e26bab succeeded

  STEP: deleting the pod @ 09/04/25 15:02:26.57
  STEP: deleting the test headless service @ 09/04/25 15:02:26.59
  I0904 15:02:26.607179 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-3357" for this suite. @ 09/04/25 15:02:26.613
• [7.128 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 09/04/25 15:02:26.619
  I0904 15:02:26.619721 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename daemonsets @ 09/04/25 15:02:26.62
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:02:26.631
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:02:26.633
  I0904 15:02:26.727647 23 daemon_set.go:447] Create a RollingUpdate DaemonSet
  I0904 15:02:26.735655 23 daemon_set.go:454] Check that daemon pods launch on every node of the cluster
  I0904 15:02:26.814661 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-16-153 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0904 15:02:26.814696 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-81-110 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0904 15:02:26.819250 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0904 15:02:26.819263 23 fixtures.go:131] Node ip-172-31-18-79 is running 0 daemon pod, expected 1
  I0904 15:02:27.741645 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-16-153 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0904 15:02:27.741794 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-81-110 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0904 15:02:27.748199 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0904 15:02:27.748262 23 fixtures.go:131] Node ip-172-31-18-79 is running 0 daemon pod, expected 1
  I0904 15:02:28.742102 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-16-153 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0904 15:02:28.742155 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-81-110 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0904 15:02:28.746567 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0904 15:02:28.746631 23 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  I0904 15:02:28.746641 23 daemon_set.go:458] Update the DaemonSet to trigger a rollout
  I0904 15:02:28.756896 23 daemon_set.go:102] Updating DaemonSet daemon-set
  I0904 15:02:29.776524 23 daemon_set.go:493] Roll back the DaemonSet before rollout is complete
  I0904 15:02:29.792476 23 daemon_set.go:102] Updating DaemonSet daemon-set
  I0904 15:02:29.792508 23 daemon_set.go:499] Make sure DaemonSet rollback is complete
  I0904 15:02:29.874804 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-16-153 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0904 15:02:29.874857 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-81-110 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0904 15:02:30.803649 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-16-153 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0904 15:02:30.803687 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-81-110 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0904 15:02:31.796934 23 daemon_set.go:1198] Pod daemon-set-kw8mb is not available
  I0904 15:02:31.801146 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-16-153 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0904 15:02:31.801180 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-81-110 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Deleting DaemonSet "daemon-set" @ 09/04/25 15:02:31.831
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-2655, will wait for the garbage collector to delete the pods @ 09/04/25 15:02:31.831
  I0904 15:02:31.890725 23 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 5.024808ms
  I0904 15:02:31.991548 23 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.817305ms
  I0904 15:02:33.295169 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0904 15:02:33.295201 23 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0904 15:02:33.300563 23 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"16325"},"items":null}

  I0904 15:02:33.304803 23 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"16325"},"items":null}

  I0904 15:02:33.315616 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-2655" for this suite. @ 09/04/25 15:02:33.319
• [6.706 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should allow expressions to refer variables. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:221
  STEP: Creating a kubernetes client @ 09/04/25 15:02:33.326
  I0904 15:02:33.326253 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename validating-admission-policy @ 09/04/25 15:02:33.326
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:02:33.34
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:02:33.342
  STEP: creating a policy with variables @ 09/04/25 15:02:33.349
  STEP: waiting until the marker is denied @ 09/04/25 15:02:33.386
  STEP: testing a replicated Deployment to be allowed @ 09/04/25 15:02:33.595
  STEP: testing a non-replicated ReplicaSet not to be denied @ 09/04/25 15:02:33.608
  I0904 15:02:33.678302 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-8006" for this suite. @ 09/04/25 15:02:33.682
• [0.364 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 09/04/25 15:02:33.69
  I0904 15:02:33.690165 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename init-container @ 09/04/25 15:02:33.69
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:02:33.703
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:02:33.705
  STEP: creating the pod @ 09/04/25 15:02:33.707
  I0904 15:02:33.707761 23 init_container.go:213] PodSpec: initContainers in spec.initContainers
  I0904 15:02:38.347621 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-498" for this suite. @ 09/04/25 15:02:38.35
• [4.667 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should support a Service with multiple endpoint IPs specified in multiple EndpointSlices [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:648
  STEP: Creating a kubernetes client @ 09/04/25 15:02:38.357
  I0904 15:02:38.357305 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename endpointslice @ 09/04/25 15:02:38.357
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:02:38.37
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:02:38.372
  STEP: creating @ 09/04/25 15:02:42.419
  STEP: Creating a pause pods that will try to connect to the webserver @ 09/04/25 15:02:42.444
  I0904 15:02:44.470466 23 util.go:162] Waiting up to 2m0s to get response from 10.152.183.139:80
  I0904 15:02:44.470542 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=endpointslice-4951 exec pause-pod-0 -- /bin/sh -x -c curl -q -s --max-time 30 10.152.183.139:80/hostname'
  I0904 15:02:44.542834 23 builder.go:156] stderr: "+ curl -q -s --max-time 30 10.152.183.139:80/hostname\n"
  I0904 15:02:44.542868 23 builder.go:157] stdout: "pod1-handle-http-request"
  I0904 15:02:44.542886 23 util.go:162] Waiting up to 2m0s to get response from 10.152.183.139:81
  I0904 15:02:44.542918 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=endpointslice-4951 exec pause-pod-0 -- /bin/sh -x -c curl -q -s --max-time 30 10.152.183.139:81/hostname'
  I0904 15:02:44.618893 23 builder.go:156] stderr: "+ curl -q -s --max-time 30 10.152.183.139:81/hostname\n"
  I0904 15:02:44.618926 23 builder.go:157] stdout: "pod2-handle-http-request"
  I0904 15:02:44.619129 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-4951" for this suite. @ 09/04/25 15:02:44.622
• [6.272 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:245
  STEP: Creating a kubernetes client @ 09/04/25 15:02:44.629
  I0904 15:02:44.629609 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename namespaces @ 09/04/25 15:02:44.63
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:02:44.64
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:02:44.642
  STEP: Creating a test namespace @ 09/04/25 15:02:44.644
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:02:44.657
  STEP: Creating a pod in the namespace @ 09/04/25 15:02:44.659
  STEP: Waiting for the pod to have running status @ 09/04/25 15:02:44.668
  STEP: Deleting the namespace @ 09/04/25 15:02:46.679
  STEP: Waiting for the namespace to be removed. @ 09/04/25 15:02:46.686
  STEP: Recreating the namespace @ 09/04/25 15:02:57.69
  STEP: Verifying there are no pods in the namespace @ 09/04/25 15:02:57.705
  I0904 15:02:57.708470 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-500" for this suite. @ 09/04/25 15:02:57.713
  STEP: Destroying namespace "nsdeletetest-672" for this suite. @ 09/04/25 15:02:57.719
  I0904 15:02:57.723569 23 framework.go:370] Namespace nsdeletetest-672 was already deleted
  STEP: Destroying namespace "nsdeletetest-6254" for this suite. @ 09/04/25 15:02:57.723
• [13.099 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2252
  STEP: Creating a kubernetes client @ 09/04/25 15:02:57.728
  I0904 15:02:57.728663 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename services @ 09/04/25 15:02:57.729
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:02:57.741
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:02:57.743
  STEP: creating service in namespace services-3607 @ 09/04/25 15:02:57.744
  STEP: creating service affinity-clusterip-transition in namespace services-3607 @ 09/04/25 15:02:57.745
  I0904 15:02:57.766317 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  I0904 15:02:59.785387 23 resource.go:344] Creating new exec pod
  I0904 15:03:01.799722 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=services-3607 exec execpod-affinitychqc6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  I0904 15:03:01.884858 23 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition (10.152.183.115) 80 port [tcp/http] succeeded!\n"
  I0904 15:03:01.884898 23 builder.go:157] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0904 15:03:01.885022 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=services-3607 exec execpod-affinitychqc6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.115 80'
  I0904 15:03:01.971232 23 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.115 80\nConnection to 10.152.183.115 80 port [tcp/http] succeeded!\n"
  I0904 15:03:01.971275 23 builder.go:157] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0904 15:03:01.979015 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=services-3607 exec execpod-affinitychqc6 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.115:80/ ; done'
  I0904 15:03:02.155398 23 builder.go:156] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.115:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.115:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.115:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.115:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.115:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.115:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.115:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.115:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.115:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.115:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.115:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.115:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.115:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.115:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.115:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.115:80/\n"
  I0904 15:03:02.155480 23 builder.go:157] stdout: "\naffinity-clusterip-transition-66686d5d57-848h6\naffinity-clusterip-transition-66686d5d57-848h6\naffinity-clusterip-transition-66686d5d57-nv225\naffinity-clusterip-transition-66686d5d57-nv225\naffinity-clusterip-transition-66686d5d57-848h6\naffinity-clusterip-transition-66686d5d57-nv225\naffinity-clusterip-transition-66686d5d57-848h6\naffinity-clusterip-transition-66686d5d57-pkr7p\naffinity-clusterip-transition-66686d5d57-848h6\naffinity-clusterip-transition-66686d5d57-pkr7p\naffinity-clusterip-transition-66686d5d57-nv225\naffinity-clusterip-transition-66686d5d57-nv225\naffinity-clusterip-transition-66686d5d57-nv225\naffinity-clusterip-transition-66686d5d57-pkr7p\naffinity-clusterip-transition-66686d5d57-nv225\naffinity-clusterip-transition-66686d5d57-848h6"
  I0904 15:03:02.155490 23 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-848h6
  I0904 15:03:02.155497 23 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-848h6
  I0904 15:03:02.155502 23 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-nv225
  I0904 15:03:02.155507 23 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-nv225
  I0904 15:03:02.155512 23 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-848h6
  I0904 15:03:02.155516 23 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-nv225
  I0904 15:03:02.155521 23 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-848h6
  I0904 15:03:02.155525 23 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-pkr7p
  I0904 15:03:02.155529 23 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-848h6
  I0904 15:03:02.155534 23 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-pkr7p
  I0904 15:03:02.155538 23 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-nv225
  I0904 15:03:02.155542 23 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-nv225
  I0904 15:03:02.155547 23 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-nv225
  I0904 15:03:02.155551 23 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-pkr7p
  I0904 15:03:02.155560 23 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-nv225
  I0904 15:03:02.155565 23 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-848h6
  I0904 15:03:02.165178 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=services-3607 exec execpod-affinitychqc6 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.115:80/ ; done'
  I0904 15:03:02.322415 23 builder.go:156] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.115:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.115:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.115:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.115:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.115:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.115:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.115:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.115:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.115:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.115:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.115:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.115:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.115:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.115:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.115:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.115:80/\n"
  I0904 15:03:02.322625 23 builder.go:157] stdout: "\naffinity-clusterip-transition-66686d5d57-pkr7p\naffinity-clusterip-transition-66686d5d57-pkr7p\naffinity-clusterip-transition-66686d5d57-848h6\naffinity-clusterip-transition-66686d5d57-pkr7p\naffinity-clusterip-transition-66686d5d57-nv225\naffinity-clusterip-transition-66686d5d57-pkr7p\naffinity-clusterip-transition-66686d5d57-nv225\naffinity-clusterip-transition-66686d5d57-nv225\naffinity-clusterip-transition-66686d5d57-848h6\naffinity-clusterip-transition-66686d5d57-848h6\naffinity-clusterip-transition-66686d5d57-nv225\naffinity-clusterip-transition-66686d5d57-848h6\naffinity-clusterip-transition-66686d5d57-848h6\naffinity-clusterip-transition-66686d5d57-pkr7p\naffinity-clusterip-transition-66686d5d57-pkr7p\naffinity-clusterip-transition-66686d5d57-pkr7p"
  I0904 15:03:02.322674 23 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-pkr7p
  I0904 15:03:02.322701 23 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-pkr7p
  I0904 15:03:02.322743 23 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-848h6
  I0904 15:03:02.322768 23 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-pkr7p
  I0904 15:03:02.322790 23 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-nv225
  I0904 15:03:02.322832 23 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-pkr7p
  I0904 15:03:02.322855 23 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-nv225
  I0904 15:03:02.322880 23 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-nv225
  I0904 15:03:02.322930 23 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-848h6
  I0904 15:03:02.322953 23 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-848h6
  I0904 15:03:02.322966 23 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-nv225
  I0904 15:03:02.322971 23 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-848h6
  I0904 15:03:02.323022 23 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-848h6
  I0904 15:03:02.323028 23 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-pkr7p
  I0904 15:03:02.323033 23 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-pkr7p
  I0904 15:03:02.323037 23 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-pkr7p
  I0904 15:03:32.323462 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=services-3607 exec execpod-affinitychqc6 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.115:80/ ; done'
  I0904 15:03:32.459422 23 builder.go:156] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.115:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.115:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.115:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.115:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.115:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.115:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.115:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.115:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.115:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.115:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.115:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.115:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.115:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.115:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.115:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.115:80/\n"
  I0904 15:03:32.459470 23 builder.go:157] stdout: "\naffinity-clusterip-transition-66686d5d57-nv225\naffinity-clusterip-transition-66686d5d57-nv225\naffinity-clusterip-transition-66686d5d57-nv225\naffinity-clusterip-transition-66686d5d57-nv225\naffinity-clusterip-transition-66686d5d57-nv225\naffinity-clusterip-transition-66686d5d57-nv225\naffinity-clusterip-transition-66686d5d57-nv225\naffinity-clusterip-transition-66686d5d57-nv225\naffinity-clusterip-transition-66686d5d57-nv225\naffinity-clusterip-transition-66686d5d57-nv225\naffinity-clusterip-transition-66686d5d57-nv225\naffinity-clusterip-transition-66686d5d57-nv225\naffinity-clusterip-transition-66686d5d57-nv225\naffinity-clusterip-transition-66686d5d57-nv225\naffinity-clusterip-transition-66686d5d57-nv225\naffinity-clusterip-transition-66686d5d57-nv225"
  I0904 15:03:32.459484 23 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-nv225
  I0904 15:03:32.459490 23 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-nv225
  I0904 15:03:32.459495 23 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-nv225
  I0904 15:03:32.459499 23 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-nv225
  I0904 15:03:32.459504 23 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-nv225
  I0904 15:03:32.459508 23 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-nv225
  I0904 15:03:32.459512 23 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-nv225
  I0904 15:03:32.459516 23 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-nv225
  I0904 15:03:32.459521 23 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-nv225
  I0904 15:03:32.459526 23 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-nv225
  I0904 15:03:32.459530 23 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-nv225
  I0904 15:03:32.459541 23 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-nv225
  I0904 15:03:32.459549 23 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-nv225
  I0904 15:03:32.459553 23 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-nv225
  I0904 15:03:32.459557 23 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-nv225
  I0904 15:03:32.459563 23 service.go:225] Received response from host: affinity-clusterip-transition-66686d5d57-nv225
  I0904 15:03:32.459658 23 service.go:4469] Cleaning up the exec pod
  I0904 15:03:32.504144 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3607" for this suite. @ 09/04/25 15:03:32.511
• [34.799 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:85
  STEP: Creating a kubernetes client @ 09/04/25 15:03:32.527
  I0904 15:03:32.527820 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename projected @ 09/04/25 15:03:32.528
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:03:32.538
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:03:32.54
  STEP: Creating a pod to test downward API volume plugin @ 09/04/25 15:03:32.542
  STEP: Saw pod success @ 09/04/25 15:03:34.563
  I0904 15:03:34.566008 23 output.go:207] Trying to get logs from node ip-172-31-33-202 pod downwardapi-volume-97941d1c-b74d-49b6-9e05-d6287d520e6d container client-container: <nil>
  STEP: delete the pod @ 09/04/25 15:03:34.579
  I0904 15:03:34.599137 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1101" for this suite. @ 09/04/25 15:03:34.602
• [2.081 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3247
  STEP: Creating a kubernetes client @ 09/04/25 15:03:34.609
  I0904 15:03:34.609514 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename services @ 09/04/25 15:03:34.61
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:03:34.62
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:03:34.623
  I0904 15:03:34.656267      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: creating an Endpoint @ 09/04/25 15:03:34.656
  I0904 15:03:34.664382      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: waiting for available Endpoint @ 09/04/25 15:03:34.664
  I0904 15:03:34.665635      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: listing all Endpoints @ 09/04/25 15:03:34.665
  I0904 15:03:34.668249      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: updating the Endpoint @ 09/04/25 15:03:34.668
  I0904 15:03:34.674852      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0904 15:03:34.676300      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: fetching the Endpoint @ 09/04/25 15:03:34.676
  I0904 15:03:34.680863      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: patching the Endpoint @ 09/04/25 15:03:34.68
  I0904 15:03:34.687286      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0904 15:03:34.688696      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: fetching the Endpoint @ 09/04/25 15:03:34.688
  I0904 15:03:34.690760      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: deleting the Endpoint by Collection @ 09/04/25 15:03:34.69
  I0904 15:03:34.700631      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: waiting for Endpoint deletion @ 09/04/25 15:03:34.7
  I0904 15:03:34.701612      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  STEP: fetching the Endpoint @ 09/04/25 15:03:34.701
  I0904 15:03:34.703793      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0904 15:03:34.703880 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5329" for this suite. @ 09/04/25 15:03:34.706
• [0.104 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:208
  STEP: Creating a kubernetes client @ 09/04/25 15:03:34.713
  I0904 15:03:34.713272 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename downward-api @ 09/04/25 15:03:34.713
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:03:34.724
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:03:34.726
  STEP: Creating a pod to test downward API volume plugin @ 09/04/25 15:03:34.728
  STEP: Saw pod success @ 09/04/25 15:03:38.751
  I0904 15:03:38.755431 23 output.go:207] Trying to get logs from node ip-172-31-33-202 pod downwardapi-volume-0e7b003a-35c2-4803-8077-1adf5818542c container client-container: <nil>
  STEP: delete the pod @ 09/04/25 15:03:38.762
  I0904 15:03:38.780879 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2425" for this suite. @ 09/04/25 15:03:38.783
• [4.079 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:110
  STEP: Creating a kubernetes client @ 09/04/25 15:03:38.792
  I0904 15:03:38.792217 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename kubelet-test @ 09/04/25 15:03:38.792
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:03:38.802
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:03:38.803
  I0904 15:03:42.819731 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-1424" for this suite. @ 09/04/25 15:03:42.824
• [4.040 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:166
  STEP: Creating a kubernetes client @ 09/04/25 15:03:42.832
  I0904 15:03:42.832423 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename replicaset @ 09/04/25 15:03:42.832
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:03:42.847
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:03:42.849
  STEP: Create a ReplicaSet @ 09/04/25 15:03:42.852
  STEP: Verify that the required pods have come up @ 09/04/25 15:03:42.857
  I0904 15:03:42.863491 23 resource.go:64] Pod name sample-pod: Found 0 pods out of 3
  I0904 15:03:47.868386 23 resource.go:64] Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 09/04/25 15:03:47.868
  I0904 15:03:47.870678 23 replica_set.go:588] Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 TerminatingReplicas:<nil> ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 09/04/25 15:03:47.87
  STEP: DeleteCollection of the ReplicaSets @ 09/04/25 15:03:47.874
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 09/04/25 15:03:47.881
  I0904 15:03:47.885365 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-1051" for this suite. @ 09/04/25 15:03:47.893
• [5.075 seconds]
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:209
  STEP: Creating a kubernetes client @ 09/04/25 15:03:47.907
  I0904 15:03:47.907827 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename emptydir @ 09/04/25 15:03:47.908
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:03:47.92
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:03:47.921
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 09/04/25 15:03:47.924
  STEP: Saw pod success @ 09/04/25 15:03:51.947
  I0904 15:03:51.951292 23 output.go:207] Trying to get logs from node ip-172-31-33-202 pod pod-911087ca-a1c5-4741-8e88-370123cbfddc container test-container: <nil>
  STEP: delete the pod @ 09/04/25 15:03:51.956
  I0904 15:03:51.975381 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5426" for this suite. @ 09/04/25 15:03:51.979
• [4.078 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicy API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:411
  STEP: Creating a kubernetes client @ 09/04/25 15:03:51.986
  I0904 15:03:51.986274 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename validating-admission-policy @ 09/04/25 15:03:51.986
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:03:51.997
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:03:51.999
  STEP: getting /apis @ 09/04/25 15:03:52.009
  STEP: getting /apis/admissionregistration.k8s.io @ 09/04/25 15:03:52.012
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 09/04/25 15:03:52.012
  STEP: creating @ 09/04/25 15:03:52.013
  STEP: getting @ 09/04/25 15:03:52.045
  STEP: listing @ 09/04/25 15:03:52.052
  STEP: watching @ 09/04/25 15:03:52.056
  I0904 15:03:52.056373 23 validatingadmissionpolicy.go:528] starting watch
  STEP: patching @ 09/04/25 15:03:52.057
  STEP: updating @ 09/04/25 15:03:52.063
  I0904 15:03:52.073084 23 validatingadmissionpolicy.go:557] waiting for watch events with expected annotations
  STEP: getting /status @ 09/04/25 15:03:52.073
  STEP: patching /status @ 09/04/25 15:03:52.078
  STEP: updating /status @ 09/04/25 15:03:52.086
  STEP: deleting @ 09/04/25 15:03:52.099
  STEP: deleting a collection @ 09/04/25 15:03:52.112
  I0904 15:03:52.129846 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-9159" for this suite. @ 09/04/25 15:03:52.132
• [0.151 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:677
  STEP: Creating a kubernetes client @ 09/04/25 15:03:52.137
  I0904 15:03:52.137739 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename svcaccounts @ 09/04/25 15:03:52.138
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:03:52.148
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:03:52.151
  STEP: creating a ServiceAccount @ 09/04/25 15:03:52.153
  STEP: watching for the ServiceAccount to be added @ 09/04/25 15:03:52.162
  STEP: patching the ServiceAccount @ 09/04/25 15:03:52.165
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 09/04/25 15:03:52.171
  STEP: deleting the ServiceAccount @ 09/04/25 15:03:52.173
  I0904 15:03:52.185537 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-3743" for this suite. @ 09/04/25 15:03:52.233
• [0.103 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:269
  STEP: Creating a kubernetes client @ 09/04/25 15:03:52.24
  I0904 15:03:52.241007 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename webhook @ 09/04/25 15:03:52.241
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:03:52.253
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:03:52.255
  STEP: Setting up server cert @ 09/04/25 15:03:52.275
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/04/25 15:03:52.541
  STEP: Deploying the webhook pod @ 09/04/25 15:03:52.549
  STEP: Wait for the deployment to be ready @ 09/04/25 15:03:52.559
  I0904 15:03:52.568928 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/04/25 15:03:54.582
  STEP: Verifying the service has paired with the endpoint @ 09/04/25 15:03:54.591
  I0904 15:03:55.592036 23 util.go:419] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 09/04/25 15:03:55.598
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 09/04/25 15:03:55.612
  STEP: Creating a dummy validating-webhook-configuration object @ 09/04/25 15:03:55.626
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 09/04/25 15:03:55.635
  STEP: Creating a dummy mutating-webhook-configuration object @ 09/04/25 15:03:55.639
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 09/04/25 15:03:55.648
  I0904 15:03:55.704063 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8448" for this suite. @ 09/04/25 15:03:55.708
  STEP: Destroying namespace "webhook-markers-4535" for this suite. @ 09/04/25 15:03:55.712
• [3.480 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:278
  STEP: Creating a kubernetes client @ 09/04/25 15:03:55.72
  I0904 15:03:55.720805 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/04/25 15:03:55.721
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:03:55.732
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:03:55.734
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 09/04/25 15:03:55.736
  I0904 15:03:55.736822 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  I0904 15:03:56.940855 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  I0904 15:04:01.870101 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-1618" for this suite. @ 09/04/25 15:04:01.875
• [6.161 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should patch a secret [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:155
  STEP: Creating a kubernetes client @ 09/04/25 15:04:01.881
  I0904 15:04:01.881889 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename secrets @ 09/04/25 15:04:01.882
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:04:01.892
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:04:01.894
  STEP: creating a secret @ 09/04/25 15:04:01.896
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 09/04/25 15:04:01.903
  STEP: patching the secret @ 09/04/25 15:04:01.905
  STEP: deleting the secret using a LabelSelector @ 09/04/25 15:04:01.913
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 09/04/25 15:04:01.92
  I0904 15:04:01.922114 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5286" for this suite. @ 09/04/25 15:04:01.975
• [0.100 seconds]
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:130
  STEP: Creating a kubernetes client @ 09/04/25 15:04:01.982
  I0904 15:04:01.982041 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename dns @ 09/04/25 15:04:01.982
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:04:01.993
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:04:01.995
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-4580.svc.cluster.local)" && echo OK > /results/agnhost_hosts@dns-querier-1.dns-test-service.dns-4580.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/agnhost_hosts@dns-querier-1;sleep 1; done
   @ 09/04/25 15:04:01.996
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-4580.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-4580.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 09/04/25 15:04:01.996
  STEP: creating a pod to probe /etc/hosts @ 09/04/25 15:04:01.996
  STEP: submitting the pod to kubernetes @ 09/04/25 15:04:01.996
  STEP: retrieving the pod @ 09/04/25 15:04:06.018
  STEP: looking for the results for each expected name from probers @ 09/04/25 15:04:06.023
  I0904 15:04:06.042110 23 dns_common.go:546] DNS probes using dns-4580/dns-test-2e11be8c-0a85-4437-97b1-fe0b58dcf4c5 succeeded

  STEP: deleting the pod @ 09/04/25 15:04:06.042
  I0904 15:04:06.054089 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-4580" for this suite. @ 09/04/25 15:04:06.057
• [4.081 seconds]
------------------------------
SS
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 09/04/25 15:04:06.063
  I0904 15:04:06.063551 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename subjectreview @ 09/04/25 15:04:06.064
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:04:06.073
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:04:06.075
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-9784" @ 09/04/25 15:04:06.077
  I0904 15:04:06.082165 23 subjectreviews.go:66] saUsername: "system:serviceaccount:subjectreview-9784:e2e"
  I0904 15:04:06.082186 23 subjectreviews.go:69] saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-9784"}
  I0904 15:04:06.082192 23 subjectreviews.go:71] saUID: "9176901d-e8ef-493f-b5e5-391a5a5873a3"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-9784:e2e" @ 09/04/25 15:04:06.082
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-9784:e2e" @ 09/04/25 15:04:06.082
  I0904 15:04:06.083396 23 subjectreviews.go:102] sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-9784:e2e" api 'list' configmaps in "subjectreview-9784" namespace @ 09/04/25 15:04:06.083
  I0904 15:04:06.084222 23 subjectreviews.go:121] SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-9784:e2e" @ 09/04/25 15:04:06.084
  I0904 15:04:06.085228 23 subjectreviews.go:144] lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  I0904 15:04:06.085238 23 subjectreviews.go:150] LocalSubjectAccessReview has been verified
  I0904 15:04:06.085309 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-9784" for this suite. @ 09/04/25 15:04:06.157
• [0.104 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3222
  STEP: Creating a kubernetes client @ 09/04/25 15:04:06.167
  I0904 15:04:06.167309 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename services @ 09/04/25 15:04:06.167
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:04:06.177
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:04:06.178
  STEP: fetching services @ 09/04/25 15:04:06.18
  I0904 15:04:06.184846 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3728" for this suite. @ 09/04/25 15:04:06.258
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 09/04/25 15:04:06.267
  I0904 15:04:06.267774 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename cronjob @ 09/04/25 15:04:06.268
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:04:06.279
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:04:06.281
  STEP: Creating a cronjob @ 09/04/25 15:04:06.282
  STEP: Ensuring more than one job is running at a time @ 09/04/25 15:04:06.29
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 09/04/25 15:06:00.296
  STEP: Removing cronjob @ 09/04/25 15:06:00.301
  I0904 15:06:00.306702 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-4885" for this suite. @ 09/04/25 15:06:00.312
• [114.051 seconds]
------------------------------
SS
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1791
  STEP: Creating a kubernetes client @ 09/04/25 15:06:00.319
  I0904 15:06:00.319145 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename kubectl @ 09/04/25 15:06:00.319
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:06:00.336
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:06:00.338
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 09/04/25 15:06:00.34
  I0904 15:06:00.340474 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=kubectl-4579 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  I0904 15:06:00.404336 23 builder.go:156] stderr: ""
  I0904 15:06:00.404367 23 builder.go:157] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 09/04/25 15:06:00.404
  I0904 15:06:00.408671 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=kubectl-4579 delete pods e2e-test-httpd-pod'
  I0904 15:06:01.523016 23 builder.go:156] stderr: ""
  I0904 15:06:01.523082 23 builder.go:157] stdout: "pod \"e2e-test-httpd-pod\" deleted from kubectl-4579 namespace\n"
  I0904 15:06:01.523314 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4579" for this suite. @ 09/04/25 15:06:01.528
• [1.220 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:89
  STEP: Creating a kubernetes client @ 09/04/25 15:06:01.539
  I0904 15:06:01.539126 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename projected @ 09/04/25 15:06:01.539
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:06:01.55
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:06:01.553
  STEP: Creating configMap with name projected-configmap-test-volume-map-f65877a1-de12-446f-874f-a318ac40df58 @ 09/04/25 15:06:01.554
  STEP: Creating a pod to test consume configMaps @ 09/04/25 15:06:01.56
  STEP: Saw pod success @ 09/04/25 15:06:05.576
  I0904 15:06:05.579079 23 output.go:207] Trying to get logs from node ip-172-31-33-202 pod pod-projected-configmaps-5e91691d-8bd3-4def-bc9d-171e5824cc42 container agnhost-container: <nil>
  STEP: delete the pod @ 09/04/25 15:06:05.591
  I0904 15:06:05.609881 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8815" for this suite. @ 09/04/25 15:06:05.615
• [4.084 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:115
  STEP: Creating a kubernetes client @ 09/04/25 15:06:05.623
  I0904 15:06:05.623830 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename field-validation @ 09/04/25 15:06:05.624
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:06:05.636
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:06:05.638
  STEP: apply creating a deployment @ 09/04/25 15:06:05.639
  I0904 15:06:05.652751 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-7671" for this suite. @ 09/04/25 15:06:05.716
• [0.104 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:1047
  STEP: Creating a kubernetes client @ 09/04/25 15:06:05.727
  I0904 15:06:05.727636 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename statefulset @ 09/04/25 15:06:05.728
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:06:05.737
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:06:05.738
  STEP: Creating service test in namespace statefulset-3192 @ 09/04/25 15:06:05.74
  I0904 15:06:05.747244      23 warnings.go:110] "Warning: spec.SessionAffinity is ignored for headless services"
  STEP: Creating statefulset ss in namespace statefulset-3192 @ 09/04/25 15:06:05.752
  I0904 15:06:05.760476 23 wait.go:44] Found 0 stateful pods, waiting for 1
  I0904 15:06:15.764399 23 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 09/04/25 15:06:15.769
  STEP: Getting /status @ 09/04/25 15:06:15.778
  I0904 15:06:15.781183 23 statefulset.go:1083] StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 09/04/25 15:06:15.781
  I0904 15:06:15.791160 23 statefulset.go:1103] updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 09/04/25 15:06:15.791
  I0904 15:06:15.792146 23 statefulset.go:1131] Observed &StatefulSet event: ADDED
  I0904 15:06:15.792183 23 statefulset.go:1124] Found Statefulset ss in namespace statefulset-3192 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0904 15:06:15.792192 23 statefulset.go:1135] Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 09/04/25 15:06:15.792
  I0904 15:06:15.792213 23 statefulset.go:1139] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0904 15:06:15.797752 23 statefulset.go:1143] Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 09/04/25 15:06:15.797
  I0904 15:06:15.798825 23 statefulset.go:1168] Observed &StatefulSet event: ADDED
  I0904 15:06:15.798940 23 statefulset.go:136] Deleting all statefulset in ns statefulset-3192
  I0904 15:06:15.800717 23 rest.go:153] Scaling statefulset ss to 0
  I0904 15:06:25.819753 23 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0904 15:06:25.822230 23 rest.go:91] Deleting statefulset ss
  I0904 15:06:25.838795 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-3192" for this suite. @ 09/04/25 15:06:25.843
• [20.125 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:639
  STEP: Creating a kubernetes client @ 09/04/25 15:06:25.852
  I0904 15:06:25.853006 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename webhook @ 09/04/25 15:06:25.853
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:06:25.865
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:06:25.867
  STEP: Setting up server cert @ 09/04/25 15:06:25.882
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/04/25 15:06:25.997
  STEP: Deploying the webhook pod @ 09/04/25 15:06:26.004
  STEP: Wait for the deployment to be ready @ 09/04/25 15:06:26.017
  I0904 15:06:26.021758 23 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 09/04/25 15:06:28.034
  STEP: Verifying the service has paired with the endpoint @ 09/04/25 15:06:28.042
  I0904 15:06:29.043087 23 util.go:419] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 09/04/25 15:06:29.112
  STEP: Creating a configMap that should be mutated @ 09/04/25 15:06:29.124
  STEP: Deleting the collection of validation webhooks @ 09/04/25 15:06:29.153
  STEP: Creating a configMap that should not be mutated @ 09/04/25 15:06:29.206
  I0904 15:06:29.250234 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-883" for this suite. @ 09/04/25 15:06:29.256
  STEP: Destroying namespace "webhook-markers-6332" for this suite. @ 09/04/25 15:06:29.263
• [3.418 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:798
  STEP: Creating a kubernetes client @ 09/04/25 15:06:29.27
  I0904 15:06:29.270770 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename job @ 09/04/25 15:06:29.271
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:06:29.28
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:06:29.282
  STEP: Creating a job @ 09/04/25 15:06:29.284
  STEP: Ensuring job reaches completions @ 09/04/25 15:06:29.294
  I0904 15:06:39.325988 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-5526" for this suite. @ 09/04/25 15:06:39.329
• [10.068 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should delete a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:888
  STEP: Creating a kubernetes client @ 09/04/25 15:06:39.339
  I0904 15:06:39.339479 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename job @ 09/04/25 15:06:39.34
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:06:39.35
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:06:39.352
  STEP: Creating a job @ 09/04/25 15:06:39.353
  STEP: Ensuring active pods == parallelism @ 09/04/25 15:06:39.358
  STEP: delete a job @ 09/04/25 15:06:41.366
  STEP: deleting Job.batch foo in namespace job-7522, will wait for the garbage collector to delete the pods @ 09/04/25 15:06:41.366
  I0904 15:06:41.427531 23 resources.go:139] Deleting Job.batch foo took: 5.315573ms
  I0904 15:06:41.528408 23 resources.go:163] Terminating Job.batch foo pods took: 100.872967ms
  STEP: Ensuring job was deleted @ 09/04/25 15:06:42.628
  I0904 15:06:42.633715 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-7522" for this suite. @ 09/04/25 15:06:42.637
• [3.302 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Serial] [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:647
  STEP: Creating a kubernetes client @ 09/04/25 15:06:42.641
  I0904 15:06:42.641540 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename gc @ 09/04/25 15:06:42.642
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:06:42.653
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:06:42.654
  STEP: create the rc @ 09/04/25 15:06:42.738
  I0904 15:06:42.744499      23 warnings.go:110] "Warning: metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]"
  STEP: delete the rc @ 09/04/25 15:06:48.749
  STEP: wait for the rc to be deleted @ 09/04/25 15:06:48.757
  I0904 15:06:49.767389 23 garbage_collector.go:678] 81 pods remaining
  I0904 15:06:49.767416 23 garbage_collector.go:685] 81 pods has nil DeletionTimestamp
  I0904 15:06:49.767420 23 garbage_collector.go:686] 
  I0904 15:06:50.768672 23 garbage_collector.go:678] 71 pods remaining
  I0904 15:06:50.768705 23 garbage_collector.go:685] 70 pods has nil DeletionTimestamp
  I0904 15:06:50.768711 23 garbage_collector.go:686] 
  I0904 15:06:51.768552 23 garbage_collector.go:678] 61 pods remaining
  I0904 15:06:51.768603 23 garbage_collector.go:685] 61 pods has nil DeletionTimestamp
  I0904 15:06:51.768609 23 garbage_collector.go:686] 
  I0904 15:06:52.768811 23 garbage_collector.go:678] 41 pods remaining
  I0904 15:06:52.768923 23 garbage_collector.go:685] 41 pods has nil DeletionTimestamp
  I0904 15:06:52.768929 23 garbage_collector.go:686] 
  I0904 15:06:53.767782 23 garbage_collector.go:678] 31 pods remaining
  I0904 15:06:53.767811 23 garbage_collector.go:685] 30 pods has nil DeletionTimestamp
  I0904 15:06:53.767816 23 garbage_collector.go:686] 
  I0904 15:06:54.765887 23 garbage_collector.go:678] 21 pods remaining
  I0904 15:06:54.765910 23 garbage_collector.go:685] 21 pods has nil DeletionTimestamp
  I0904 15:06:54.765914 23 garbage_collector.go:686] 
  STEP: Gathering metrics @ 09/04/25 15:06:55.763
  W0904 15:06:55.769288      23 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0904 15:06:55.769320 23 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0904 15:06:55.769438 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-3653" for this suite. @ 09/04/25 15:06:55.777
• [13.143 seconds]
------------------------------
SSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:978
  STEP: Creating a kubernetes client @ 09/04/25 15:06:55.784
  I0904 15:06:55.784433 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename statefulset @ 09/04/25 15:06:55.784
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:06:55.794
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:06:55.796
  STEP: Creating service test in namespace statefulset-7902 @ 09/04/25 15:06:55.798
  I0904 15:06:55.805638      23 warnings.go:110] "Warning: spec.SessionAffinity is ignored for headless services"
  I0904 15:06:55.831813 23 wait.go:54] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Pending - Ready=false
  I0904 15:07:05.825519 23 wait.go:54] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 09/04/25 15:07:05.83
  I0904 15:07:05.851361 23 wait.go:54] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0904 15:07:05.851387 23 wait.go:54] Waiting for pod test-ss-1 to enter Running - Ready=true, currently Pending - Ready=false
  I0904 15:07:15.851819 23 wait.go:54] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0904 15:07:15.851850 23 wait.go:54] Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 09/04/25 15:07:15.857
  STEP: Delete all of the StatefulSets @ 09/04/25 15:07:15.859
  STEP: Verify that StatefulSets have been deleted @ 09/04/25 15:07:15.867
  I0904 15:07:15.872033 23 statefulset.go:136] Deleting all statefulset in ns statefulset-7902
  I0904 15:07:15.884746 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-7902" for this suite. @ 09/04/25 15:07:15.897
• [20.127 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] Service endpoints latency should not be very high [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_latency.go:60
  STEP: Creating a kubernetes client @ 09/04/25 15:07:15.911
  I0904 15:07:15.911991 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename svc-latency @ 09/04/25 15:07:15.912
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:07:15.925
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:07:15.927
  I0904 15:07:15.928932 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  I0904 15:07:15.939253 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  I0904 15:07:18.053885 23 service_latency.go:356] Created: latency-svc-vkbjx
  I0904 15:07:18.062207 23 service_latency.go:363] Got endpoints: latency-svc-vkbjx [18.828296ms]
  I0904 15:07:18.074773 23 service_latency.go:356] Created: latency-svc-qg7j5
  I0904 15:07:18.081534 23 service_latency.go:356] Created: latency-svc-nxlrx
  I0904 15:07:18.082347 23 service_latency.go:363] Got endpoints: latency-svc-qg7j5 [20.073088ms]
  I0904 15:07:18.085167 23 service_latency.go:356] Created: latency-svc-pgtfs
  I0904 15:07:18.091783 23 service_latency.go:363] Got endpoints: latency-svc-nxlrx [29.35362ms]
  I0904 15:07:18.094798 23 service_latency.go:363] Got endpoints: latency-svc-pgtfs [32.347332ms]
  I0904 15:07:18.095154 23 service_latency.go:356] Created: latency-svc-llfrz
  I0904 15:07:18.101461 23 service_latency.go:356] Created: latency-svc-rsslj
  I0904 15:07:18.103416 23 service_latency.go:363] Got endpoints: latency-svc-llfrz [41.028809ms]
  I0904 15:07:18.106169 23 service_latency.go:356] Created: latency-svc-ttrf8
  I0904 15:07:18.110848 23 service_latency.go:363] Got endpoints: latency-svc-rsslj [48.372107ms]
  I0904 15:07:18.113552 23 service_latency.go:363] Got endpoints: latency-svc-ttrf8 [51.028981ms]
  I0904 15:07:18.115648 23 service_latency.go:356] Created: latency-svc-w4lb9
  I0904 15:07:18.121149 23 service_latency.go:363] Got endpoints: latency-svc-w4lb9 [58.598253ms]
  I0904 15:07:18.123722 23 service_latency.go:356] Created: latency-svc-kp4g4
  I0904 15:07:18.129219 23 service_latency.go:356] Created: latency-svc-d9pkn
  I0904 15:07:18.133501 23 service_latency.go:363] Got endpoints: latency-svc-kp4g4 [70.926823ms]
  I0904 15:07:18.136535 23 service_latency.go:356] Created: latency-svc-vv658
  I0904 15:07:18.138327 23 service_latency.go:363] Got endpoints: latency-svc-d9pkn [75.827472ms]
  I0904 15:07:18.142534 23 service_latency.go:363] Got endpoints: latency-svc-vv658 [79.924983ms]
  I0904 15:07:18.144030 23 service_latency.go:356] Created: latency-svc-6nvkx
  I0904 15:07:18.148046 23 service_latency.go:356] Created: latency-svc-xc6zm
  I0904 15:07:18.153155 23 service_latency.go:363] Got endpoints: latency-svc-6nvkx [90.523653ms]
  I0904 15:07:18.156047 23 service_latency.go:363] Got endpoints: latency-svc-xc6zm [93.401296ms]
  I0904 15:07:18.158192 23 service_latency.go:356] Created: latency-svc-wn7x7
  I0904 15:07:18.163946 23 service_latency.go:356] Created: latency-svc-xmvtr
  I0904 15:07:18.164384 23 service_latency.go:363] Got endpoints: latency-svc-wn7x7 [101.719989ms]
  I0904 15:07:18.169135 23 service_latency.go:356] Created: latency-svc-rk9td
  I0904 15:07:18.172326 23 service_latency.go:363] Got endpoints: latency-svc-xmvtr [109.631825ms]
  I0904 15:07:18.176246 23 service_latency.go:363] Got endpoints: latency-svc-rk9td [113.566882ms]
  I0904 15:07:18.179466 23 service_latency.go:356] Created: latency-svc-99bfn
  I0904 15:07:18.184139 23 service_latency.go:363] Got endpoints: latency-svc-99bfn [101.773818ms]
  I0904 15:07:18.185999 23 service_latency.go:356] Created: latency-svc-6cvpr
  I0904 15:07:18.190407 23 service_latency.go:356] Created: latency-svc-477nc
  I0904 15:07:18.194048 23 service_latency.go:363] Got endpoints: latency-svc-6cvpr [102.243582ms]
  I0904 15:07:18.199481 23 service_latency.go:356] Created: latency-svc-6hrqt
  I0904 15:07:18.201125 23 service_latency.go:363] Got endpoints: latency-svc-477nc [106.302647ms]
  I0904 15:07:18.205847 23 service_latency.go:363] Got endpoints: latency-svc-6hrqt [102.4072ms]
  I0904 15:07:18.207491 23 service_latency.go:356] Created: latency-svc-4rpgh
  I0904 15:07:18.210938 23 service_latency.go:356] Created: latency-svc-cs7mk
  I0904 15:07:18.219014 23 service_latency.go:363] Got endpoints: latency-svc-cs7mk [105.430027ms]
  I0904 15:07:18.219160 23 service_latency.go:363] Got endpoints: latency-svc-4rpgh [108.293119ms]
  I0904 15:07:18.223865 23 service_latency.go:356] Created: latency-svc-64767
  I0904 15:07:18.229431 23 service_latency.go:363] Got endpoints: latency-svc-64767 [108.259715ms]
  I0904 15:07:18.230737 23 service_latency.go:356] Created: latency-svc-hxpd9
  I0904 15:07:18.234043 23 service_latency.go:356] Created: latency-svc-8bgrv
  I0904 15:07:18.240037 23 service_latency.go:363] Got endpoints: latency-svc-hxpd9 [106.508891ms]
  I0904 15:07:18.243837 23 service_latency.go:363] Got endpoints: latency-svc-8bgrv [105.495838ms]
  I0904 15:07:18.244312 23 service_latency.go:356] Created: latency-svc-xv2vj
  I0904 15:07:18.249242 23 service_latency.go:363] Got endpoints: latency-svc-xv2vj [106.68311ms]
  I0904 15:07:18.250949 23 service_latency.go:356] Created: latency-svc-w267h
  I0904 15:07:18.254845 23 service_latency.go:356] Created: latency-svc-9s2hp
  I0904 15:07:18.258491 23 service_latency.go:363] Got endpoints: latency-svc-w267h [105.252798ms]
  I0904 15:07:18.263356 23 service_latency.go:363] Got endpoints: latency-svc-9s2hp [107.285469ms]
  I0904 15:07:18.264491 23 service_latency.go:356] Created: latency-svc-fgthk
  I0904 15:07:18.270484 23 service_latency.go:363] Got endpoints: latency-svc-fgthk [106.07937ms]
  I0904 15:07:18.272225 23 service_latency.go:356] Created: latency-svc-9nzml
  I0904 15:07:18.277086 23 service_latency.go:356] Created: latency-svc-2q5tt
  I0904 15:07:18.280158 23 service_latency.go:363] Got endpoints: latency-svc-9nzml [107.814203ms]
  I0904 15:07:18.284464 23 service_latency.go:363] Got endpoints: latency-svc-2q5tt [108.192295ms]
  I0904 15:07:18.285744 23 service_latency.go:356] Created: latency-svc-bg8jw
  I0904 15:07:18.292928 23 service_latency.go:363] Got endpoints: latency-svc-bg8jw [108.771047ms]
  I0904 15:07:18.294080 23 service_latency.go:356] Created: latency-svc-v4znz
  I0904 15:07:18.300240 23 service_latency.go:356] Created: latency-svc-rtwbr
  I0904 15:07:18.302708 23 service_latency.go:363] Got endpoints: latency-svc-v4znz [108.643479ms]
  I0904 15:07:18.305116 23 service_latency.go:356] Created: latency-svc-v5mpq
  I0904 15:07:18.310568 23 service_latency.go:363] Got endpoints: latency-svc-rtwbr [109.42452ms]
  I0904 15:07:18.311678 23 service_latency.go:363] Got endpoints: latency-svc-v5mpq [105.809761ms]
  I0904 15:07:18.314259 23 service_latency.go:356] Created: latency-svc-7qf7q
  I0904 15:07:18.317712 23 service_latency.go:356] Created: latency-svc-6xk5t
  I0904 15:07:18.326718 23 service_latency.go:356] Created: latency-svc-jnmxj
  I0904 15:07:18.331247 23 service_latency.go:356] Created: latency-svc-2wgwx
  I0904 15:07:18.336121 23 service_latency.go:356] Created: latency-svc-phxxk
  I0904 15:07:18.343225 23 service_latency.go:356] Created: latency-svc-nl65l
  I0904 15:07:18.347286 23 service_latency.go:356] Created: latency-svc-8zvn4
  I0904 15:07:18.350832 23 service_latency.go:356] Created: latency-svc-p2267
  I0904 15:07:18.357312 23 service_latency.go:356] Created: latency-svc-ds8pp
  I0904 15:07:18.362279 23 service_latency.go:363] Got endpoints: latency-svc-7qf7q [143.240206ms]
  I0904 15:07:18.366863 23 service_latency.go:356] Created: latency-svc-gds2n
  I0904 15:07:18.369576 23 service_latency.go:356] Created: latency-svc-wwfr6
  I0904 15:07:18.378416 23 service_latency.go:356] Created: latency-svc-fxqlp
  I0904 15:07:18.382703 23 service_latency.go:356] Created: latency-svc-6t5mc
  I0904 15:07:18.387723 23 service_latency.go:356] Created: latency-svc-gr87z
  I0904 15:07:18.394581 23 service_latency.go:356] Created: latency-svc-dcgr8
  I0904 15:07:18.399139 23 service_latency.go:356] Created: latency-svc-qlptf
  I0904 15:07:18.410775 23 service_latency.go:363] Got endpoints: latency-svc-6xk5t [191.598021ms]
  I0904 15:07:18.419510 23 service_latency.go:356] Created: latency-svc-rz25j
  I0904 15:07:18.460805 23 service_latency.go:363] Got endpoints: latency-svc-jnmxj [231.351906ms]
  I0904 15:07:18.470264 23 service_latency.go:356] Created: latency-svc-q78bx
  I0904 15:07:18.512476 23 service_latency.go:363] Got endpoints: latency-svc-2wgwx [272.416004ms]
  I0904 15:07:18.521304 23 service_latency.go:356] Created: latency-svc-sgkbw
  I0904 15:07:18.562117 23 service_latency.go:363] Got endpoints: latency-svc-phxxk [318.256148ms]
  I0904 15:07:18.568814 23 service_latency.go:356] Created: latency-svc-jj7d8
  I0904 15:07:18.612095 23 service_latency.go:363] Got endpoints: latency-svc-nl65l [362.830114ms]
  I0904 15:07:18.619810 23 service_latency.go:356] Created: latency-svc-fx2vq
  I0904 15:07:18.663639 23 service_latency.go:363] Got endpoints: latency-svc-8zvn4 [405.123905ms]
  I0904 15:07:18.673516 23 service_latency.go:356] Created: latency-svc-hqbhj
  I0904 15:07:18.713201 23 service_latency.go:363] Got endpoints: latency-svc-p2267 [449.814325ms]
  I0904 15:07:18.720676 23 service_latency.go:356] Created: latency-svc-h5rzl
  I0904 15:07:18.765978 23 service_latency.go:363] Got endpoints: latency-svc-ds8pp [495.466893ms]
  I0904 15:07:18.774404 23 service_latency.go:356] Created: latency-svc-cp2xl
  I0904 15:07:18.818344 23 service_latency.go:363] Got endpoints: latency-svc-gds2n [538.164653ms]
  I0904 15:07:18.827131 23 service_latency.go:356] Created: latency-svc-24zff
  I0904 15:07:18.862681 23 service_latency.go:363] Got endpoints: latency-svc-wwfr6 [578.194627ms]
  I0904 15:07:18.869970 23 service_latency.go:356] Created: latency-svc-w94rg
  I0904 15:07:18.910756 23 service_latency.go:363] Got endpoints: latency-svc-fxqlp [617.803662ms]
  I0904 15:07:18.920831 23 service_latency.go:356] Created: latency-svc-gsxvg
  I0904 15:07:18.963270 23 service_latency.go:363] Got endpoints: latency-svc-6t5mc [660.539674ms]
  I0904 15:07:18.974364 23 service_latency.go:356] Created: latency-svc-srs5q
  I0904 15:07:19.012814 23 service_latency.go:363] Got endpoints: latency-svc-gr87z [702.223682ms]
  I0904 15:07:19.020038 23 service_latency.go:356] Created: latency-svc-rcqww
  I0904 15:07:19.063090 23 service_latency.go:363] Got endpoints: latency-svc-dcgr8 [751.370536ms]
  I0904 15:07:19.071515 23 service_latency.go:356] Created: latency-svc-6qdjd
  I0904 15:07:19.113522 23 service_latency.go:363] Got endpoints: latency-svc-qlptf [751.216713ms]
  I0904 15:07:19.122500 23 service_latency.go:356] Created: latency-svc-6mwlv
  I0904 15:07:19.163522 23 service_latency.go:363] Got endpoints: latency-svc-rz25j [752.719922ms]
  I0904 15:07:19.170241 23 service_latency.go:356] Created: latency-svc-tw2j4
  I0904 15:07:19.212678 23 service_latency.go:363] Got endpoints: latency-svc-q78bx [751.839451ms]
  I0904 15:07:19.222051 23 service_latency.go:356] Created: latency-svc-pdhhf
  I0904 15:07:19.262304 23 service_latency.go:363] Got endpoints: latency-svc-sgkbw [749.800055ms]
  I0904 15:07:19.271263 23 service_latency.go:356] Created: latency-svc-mndk2
  I0904 15:07:19.312873 23 service_latency.go:363] Got endpoints: latency-svc-jj7d8 [750.731442ms]
  I0904 15:07:19.321849 23 service_latency.go:356] Created: latency-svc-gfws4
  I0904 15:07:19.364226 23 service_latency.go:363] Got endpoints: latency-svc-fx2vq [752.10148ms]
  I0904 15:07:19.373976 23 service_latency.go:356] Created: latency-svc-lbcwz
  I0904 15:07:19.410824 23 service_latency.go:363] Got endpoints: latency-svc-hqbhj [747.154716ms]
  I0904 15:07:19.422986 23 service_latency.go:356] Created: latency-svc-299s9
  I0904 15:07:19.461297 23 service_latency.go:363] Got endpoints: latency-svc-h5rzl [748.064606ms]
  I0904 15:07:19.470960 23 service_latency.go:356] Created: latency-svc-t866k
  I0904 15:07:19.511393 23 service_latency.go:363] Got endpoints: latency-svc-cp2xl [745.38712ms]
  I0904 15:07:19.521866 23 service_latency.go:356] Created: latency-svc-s2whv
  I0904 15:07:19.561912 23 service_latency.go:363] Got endpoints: latency-svc-24zff [743.536954ms]
  I0904 15:07:19.572490 23 service_latency.go:356] Created: latency-svc-w5n4z
  I0904 15:07:19.611276 23 service_latency.go:363] Got endpoints: latency-svc-w94rg [748.480839ms]
  I0904 15:07:19.618824 23 service_latency.go:356] Created: latency-svc-gkfdw
  I0904 15:07:19.661239 23 service_latency.go:363] Got endpoints: latency-svc-gsxvg [750.31916ms]
  I0904 15:07:19.670273 23 service_latency.go:356] Created: latency-svc-dxltg
  I0904 15:07:19.713868 23 service_latency.go:363] Got endpoints: latency-svc-srs5q [750.543135ms]
  I0904 15:07:19.722855 23 service_latency.go:356] Created: latency-svc-88826
  I0904 15:07:19.762817 23 service_latency.go:363] Got endpoints: latency-svc-rcqww [749.962313ms]
  I0904 15:07:19.770244 23 service_latency.go:356] Created: latency-svc-rjfgj
  I0904 15:07:19.812660 23 service_latency.go:363] Got endpoints: latency-svc-6qdjd [749.534334ms]
  I0904 15:07:19.820666 23 service_latency.go:356] Created: latency-svc-vbl4w
  I0904 15:07:19.864464 23 service_latency.go:363] Got endpoints: latency-svc-6mwlv [750.909866ms]
  I0904 15:07:19.874107 23 service_latency.go:356] Created: latency-svc-rz2sx
  I0904 15:07:19.912028 23 service_latency.go:363] Got endpoints: latency-svc-tw2j4 [748.464252ms]
  I0904 15:07:19.919025 23 service_latency.go:356] Created: latency-svc-652z6
  I0904 15:07:19.964237 23 service_latency.go:363] Got endpoints: latency-svc-pdhhf [751.516947ms]
  I0904 15:07:19.972659 23 service_latency.go:356] Created: latency-svc-khz2d
  I0904 15:07:20.013109 23 service_latency.go:363] Got endpoints: latency-svc-mndk2 [750.771763ms]
  I0904 15:07:20.023323 23 service_latency.go:356] Created: latency-svc-9j6kk
  I0904 15:07:20.062674 23 service_latency.go:363] Got endpoints: latency-svc-gfws4 [749.77159ms]
  I0904 15:07:20.070211 23 service_latency.go:356] Created: latency-svc-nncfd
  I0904 15:07:20.112577 23 service_latency.go:363] Got endpoints: latency-svc-lbcwz [748.303248ms]
  I0904 15:07:20.122037 23 service_latency.go:356] Created: latency-svc-59jgq
  I0904 15:07:20.164195 23 service_latency.go:363] Got endpoints: latency-svc-299s9 [753.335396ms]
  I0904 15:07:20.174800 23 service_latency.go:356] Created: latency-svc-pc7kv
  I0904 15:07:20.212997 23 service_latency.go:363] Got endpoints: latency-svc-t866k [751.665468ms]
  I0904 15:07:20.222193 23 service_latency.go:356] Created: latency-svc-5k9ft
  I0904 15:07:20.262789 23 service_latency.go:363] Got endpoints: latency-svc-s2whv [751.366847ms]
  I0904 15:07:20.272181 23 service_latency.go:356] Created: latency-svc-g4xcz
  I0904 15:07:20.312691 23 service_latency.go:363] Got endpoints: latency-svc-w5n4z [750.710871ms]
  I0904 15:07:20.323487 23 service_latency.go:356] Created: latency-svc-dh5mw
  I0904 15:07:20.361443 23 service_latency.go:363] Got endpoints: latency-svc-gkfdw [750.135707ms]
  I0904 15:07:20.371247 23 service_latency.go:356] Created: latency-svc-f24zm
  I0904 15:07:20.411215 23 service_latency.go:363] Got endpoints: latency-svc-dxltg [749.926745ms]
  I0904 15:07:20.422327 23 service_latency.go:356] Created: latency-svc-6hd6j
  I0904 15:07:20.460918 23 service_latency.go:363] Got endpoints: latency-svc-88826 [747.016927ms]
  I0904 15:07:20.473418 23 service_latency.go:356] Created: latency-svc-5mkfk
  I0904 15:07:20.511756 23 service_latency.go:363] Got endpoints: latency-svc-rjfgj [748.904447ms]
  I0904 15:07:20.519252 23 service_latency.go:356] Created: latency-svc-tw8nl
  I0904 15:07:20.562978 23 service_latency.go:363] Got endpoints: latency-svc-vbl4w [750.279683ms]
  I0904 15:07:20.571708 23 service_latency.go:356] Created: latency-svc-tx5sh
  I0904 15:07:20.613099 23 service_latency.go:363] Got endpoints: latency-svc-rz2sx [748.591054ms]
  I0904 15:07:20.624560 23 service_latency.go:356] Created: latency-svc-vfs5d
  I0904 15:07:20.662215 23 service_latency.go:363] Got endpoints: latency-svc-652z6 [750.160683ms]
  I0904 15:07:20.671750 23 service_latency.go:356] Created: latency-svc-snp67
  I0904 15:07:20.710704 23 service_latency.go:363] Got endpoints: latency-svc-khz2d [746.440426ms]
  I0904 15:07:20.721505 23 service_latency.go:356] Created: latency-svc-s9s2c
  I0904 15:07:20.761317 23 service_latency.go:363] Got endpoints: latency-svc-9j6kk [748.172903ms]
  I0904 15:07:20.774027 23 service_latency.go:356] Created: latency-svc-j4tr4
  I0904 15:07:20.811051 23 service_latency.go:363] Got endpoints: latency-svc-nncfd [748.342468ms]
  I0904 15:07:20.822424 23 service_latency.go:356] Created: latency-svc-2wcbg
  I0904 15:07:20.861066 23 service_latency.go:363] Got endpoints: latency-svc-59jgq [748.439374ms]
  I0904 15:07:20.871478 23 service_latency.go:356] Created: latency-svc-rg658
  I0904 15:07:20.913367 23 service_latency.go:363] Got endpoints: latency-svc-pc7kv [749.142403ms]
  I0904 15:07:20.923562 23 service_latency.go:356] Created: latency-svc-5qrts
  I0904 15:07:20.960003 23 service_latency.go:363] Got endpoints: latency-svc-5k9ft [746.972643ms]
  I0904 15:07:20.968782 23 service_latency.go:356] Created: latency-svc-9bv94
  I0904 15:07:21.012258 23 service_latency.go:363] Got endpoints: latency-svc-g4xcz [749.424385ms]
  I0904 15:07:21.023120 23 service_latency.go:356] Created: latency-svc-kxrvb
  I0904 15:07:21.059916 23 service_latency.go:363] Got endpoints: latency-svc-dh5mw [747.184241ms]
  I0904 15:07:21.070509 23 service_latency.go:356] Created: latency-svc-mc9h7
  I0904 15:07:21.112112 23 service_latency.go:363] Got endpoints: latency-svc-f24zm [750.629346ms]
  I0904 15:07:21.120195 23 service_latency.go:356] Created: latency-svc-d96tw
  I0904 15:07:21.162956 23 service_latency.go:363] Got endpoints: latency-svc-6hd6j [751.594375ms]
  I0904 15:07:21.171354 23 service_latency.go:356] Created: latency-svc-nfbw6
  I0904 15:07:21.213080 23 service_latency.go:363] Got endpoints: latency-svc-5mkfk [752.121426ms]
  I0904 15:07:21.223429 23 service_latency.go:356] Created: latency-svc-v9k4d
  I0904 15:07:21.262914 23 service_latency.go:363] Got endpoints: latency-svc-tw8nl [751.126351ms]
  I0904 15:07:21.271143 23 service_latency.go:356] Created: latency-svc-6p45t
  I0904 15:07:21.310627 23 service_latency.go:363] Got endpoints: latency-svc-tx5sh [747.613216ms]
  I0904 15:07:21.320877 23 service_latency.go:356] Created: latency-svc-d9wkd
  I0904 15:07:21.360397 23 service_latency.go:363] Got endpoints: latency-svc-vfs5d [747.188533ms]
  I0904 15:07:21.372912 23 service_latency.go:356] Created: latency-svc-jtw7w
  I0904 15:07:21.411083 23 service_latency.go:363] Got endpoints: latency-svc-snp67 [748.840428ms]
  I0904 15:07:21.420015 23 service_latency.go:356] Created: latency-svc-rgb9k
  I0904 15:07:21.461742 23 service_latency.go:363] Got endpoints: latency-svc-s9s2c [751.004116ms]
  I0904 15:07:21.471636 23 service_latency.go:356] Created: latency-svc-hfprq
  I0904 15:07:21.510852 23 service_latency.go:363] Got endpoints: latency-svc-j4tr4 [749.50684ms]
  I0904 15:07:21.520774 23 service_latency.go:356] Created: latency-svc-5bcfk
  I0904 15:07:21.563152 23 service_latency.go:363] Got endpoints: latency-svc-2wcbg [752.064025ms]
  I0904 15:07:21.569679 23 service_latency.go:356] Created: latency-svc-8dlcs
  I0904 15:07:21.613739 23 service_latency.go:363] Got endpoints: latency-svc-rg658 [752.635529ms]
  I0904 15:07:21.622424 23 service_latency.go:356] Created: latency-svc-jjlx4
  I0904 15:07:21.662489 23 service_latency.go:363] Got endpoints: latency-svc-5qrts [749.094196ms]
  I0904 15:07:21.671440 23 service_latency.go:356] Created: latency-svc-pfczx
  I0904 15:07:21.712841 23 service_latency.go:363] Got endpoints: latency-svc-9bv94 [752.790713ms]
  I0904 15:07:21.723342 23 service_latency.go:356] Created: latency-svc-kp6kl
  I0904 15:07:21.764109 23 service_latency.go:363] Got endpoints: latency-svc-kxrvb [751.808523ms]
  I0904 15:07:21.773987 23 service_latency.go:356] Created: latency-svc-2tm8k
  I0904 15:07:21.812058 23 service_latency.go:363] Got endpoints: latency-svc-mc9h7 [752.110889ms]
  I0904 15:07:21.822231 23 service_latency.go:356] Created: latency-svc-6kv4z
  I0904 15:07:21.863645 23 service_latency.go:363] Got endpoints: latency-svc-d96tw [751.366186ms]
  I0904 15:07:21.873748 23 service_latency.go:356] Created: latency-svc-8jxwt
  I0904 15:07:21.913191 23 service_latency.go:363] Got endpoints: latency-svc-nfbw6 [750.201381ms]
  I0904 15:07:21.923006 23 service_latency.go:356] Created: latency-svc-pwq67
  I0904 15:07:21.960471 23 service_latency.go:363] Got endpoints: latency-svc-v9k4d [747.350338ms]
  I0904 15:07:21.971543 23 service_latency.go:356] Created: latency-svc-b56ql
  I0904 15:07:22.013197 23 service_latency.go:363] Got endpoints: latency-svc-6p45t [750.251675ms]
  I0904 15:07:22.021232 23 service_latency.go:356] Created: latency-svc-7d97d
  I0904 15:07:22.062702 23 service_latency.go:363] Got endpoints: latency-svc-d9wkd [752.04453ms]
  I0904 15:07:22.071180 23 service_latency.go:356] Created: latency-svc-95mvx
  I0904 15:07:22.111647 23 service_latency.go:363] Got endpoints: latency-svc-jtw7w [751.219647ms]
  I0904 15:07:22.121025 23 service_latency.go:356] Created: latency-svc-tlq6n
  I0904 15:07:22.162771 23 service_latency.go:363] Got endpoints: latency-svc-rgb9k [751.655683ms]
  I0904 15:07:22.172652 23 service_latency.go:356] Created: latency-svc-9csgr
  I0904 15:07:22.213254 23 service_latency.go:363] Got endpoints: latency-svc-hfprq [751.479605ms]
  I0904 15:07:22.222644 23 service_latency.go:356] Created: latency-svc-p62kp
  I0904 15:07:22.263160 23 service_latency.go:363] Got endpoints: latency-svc-5bcfk [752.282519ms]
  I0904 15:07:22.273770 23 service_latency.go:356] Created: latency-svc-tvmz8
  I0904 15:07:22.312901 23 service_latency.go:363] Got endpoints: latency-svc-8dlcs [749.725351ms]
  I0904 15:07:22.322424 23 service_latency.go:356] Created: latency-svc-j4kvn
  I0904 15:07:22.361238 23 service_latency.go:363] Got endpoints: latency-svc-jjlx4 [747.462353ms]
  I0904 15:07:22.372289 23 service_latency.go:356] Created: latency-svc-jp6h4
  I0904 15:07:22.410752 23 service_latency.go:363] Got endpoints: latency-svc-pfczx [748.229618ms]
  I0904 15:07:22.423640 23 service_latency.go:356] Created: latency-svc-zsghr
  I0904 15:07:22.460864 23 service_latency.go:363] Got endpoints: latency-svc-kp6kl [747.990029ms]
  I0904 15:07:22.471293 23 service_latency.go:356] Created: latency-svc-mjxdr
  I0904 15:07:22.511976 23 service_latency.go:363] Got endpoints: latency-svc-2tm8k [747.83541ms]
  I0904 15:07:22.523965 23 service_latency.go:356] Created: latency-svc-gqhwm
  I0904 15:07:22.560378 23 service_latency.go:363] Got endpoints: latency-svc-6kv4z [748.155396ms]
  I0904 15:07:22.572363 23 service_latency.go:356] Created: latency-svc-9lgbt
  I0904 15:07:22.613326 23 service_latency.go:363] Got endpoints: latency-svc-8jxwt [749.654728ms]
  I0904 15:07:22.620692 23 service_latency.go:356] Created: latency-svc-7j2xc
  I0904 15:07:22.663503 23 service_latency.go:363] Got endpoints: latency-svc-pwq67 [750.27756ms]
  I0904 15:07:22.672161 23 service_latency.go:356] Created: latency-svc-mwpn2
  I0904 15:07:22.712047 23 service_latency.go:363] Got endpoints: latency-svc-b56ql [751.545419ms]
  I0904 15:07:22.721895 23 service_latency.go:356] Created: latency-svc-nxdm9
  I0904 15:07:22.763348 23 service_latency.go:363] Got endpoints: latency-svc-7d97d [750.121106ms]
  I0904 15:07:22.771029 23 service_latency.go:356] Created: latency-svc-tf9cb
  I0904 15:07:22.812668 23 service_latency.go:363] Got endpoints: latency-svc-95mvx [749.932849ms]
  I0904 15:07:22.821626 23 service_latency.go:356] Created: latency-svc-fzpqx
  I0904 15:07:22.863819 23 service_latency.go:363] Got endpoints: latency-svc-tlq6n [752.124475ms]
  I0904 15:07:22.874384 23 service_latency.go:356] Created: latency-svc-tftn7
  I0904 15:07:22.913181 23 service_latency.go:363] Got endpoints: latency-svc-9csgr [750.380113ms]
  I0904 15:07:22.923113 23 service_latency.go:356] Created: latency-svc-hm9vh
  I0904 15:07:22.960495 23 service_latency.go:363] Got endpoints: latency-svc-p62kp [747.168521ms]
  I0904 15:07:22.971479 23 service_latency.go:356] Created: latency-svc-8c2sx
  I0904 15:07:23.009872 23 service_latency.go:363] Got endpoints: latency-svc-tvmz8 [746.614366ms]
  I0904 15:07:23.022054 23 service_latency.go:356] Created: latency-svc-c5zt2
  I0904 15:07:23.061474 23 service_latency.go:363] Got endpoints: latency-svc-j4kvn [748.434688ms]
  I0904 15:07:23.070466 23 service_latency.go:356] Created: latency-svc-v6xhv
  I0904 15:07:23.111143 23 service_latency.go:363] Got endpoints: latency-svc-jp6h4 [749.872638ms]
  I0904 15:07:23.122032 23 service_latency.go:356] Created: latency-svc-mc8lh
  I0904 15:07:23.163005 23 service_latency.go:363] Got endpoints: latency-svc-zsghr [752.220336ms]
  I0904 15:07:23.173997 23 service_latency.go:356] Created: latency-svc-czkkw
  I0904 15:07:23.214162 23 service_latency.go:363] Got endpoints: latency-svc-mjxdr [753.268803ms]
  I0904 15:07:23.222552 23 service_latency.go:356] Created: latency-svc-gbpjk
  I0904 15:07:23.263341 23 service_latency.go:363] Got endpoints: latency-svc-gqhwm [751.200727ms]
  I0904 15:07:23.274906 23 service_latency.go:356] Created: latency-svc-nwx2m
  I0904 15:07:23.311770 23 service_latency.go:363] Got endpoints: latency-svc-9lgbt [751.141041ms]
  I0904 15:07:23.323449 23 service_latency.go:356] Created: latency-svc-hfh7h
  I0904 15:07:23.363837 23 service_latency.go:363] Got endpoints: latency-svc-7j2xc [750.482548ms]
  I0904 15:07:23.370776 23 service_latency.go:356] Created: latency-svc-kx8cp
  I0904 15:07:23.414792 23 service_latency.go:363] Got endpoints: latency-svc-mwpn2 [751.256192ms]
  I0904 15:07:23.424454 23 service_latency.go:356] Created: latency-svc-xxk9c
  I0904 15:07:23.462691 23 service_latency.go:363] Got endpoints: latency-svc-nxdm9 [750.60685ms]
  I0904 15:07:23.472708 23 service_latency.go:356] Created: latency-svc-9j7jm
  I0904 15:07:23.514332 23 service_latency.go:363] Got endpoints: latency-svc-tf9cb [750.943809ms]
  I0904 15:07:23.522289 23 service_latency.go:356] Created: latency-svc-gvp8d
  I0904 15:07:23.565389 23 service_latency.go:363] Got endpoints: latency-svc-fzpqx [752.629214ms]
  I0904 15:07:23.574921 23 service_latency.go:356] Created: latency-svc-6xsdm
  I0904 15:07:23.614191 23 service_latency.go:363] Got endpoints: latency-svc-tftn7 [750.340515ms]
  I0904 15:07:23.626730 23 service_latency.go:356] Created: latency-svc-2fnsg
  I0904 15:07:23.661100 23 service_latency.go:363] Got endpoints: latency-svc-hm9vh [747.596194ms]
  I0904 15:07:23.670102 23 service_latency.go:356] Created: latency-svc-lkbnq
  I0904 15:07:23.710812 23 service_latency.go:363] Got endpoints: latency-svc-8c2sx [750.289525ms]
  I0904 15:07:23.721428 23 service_latency.go:356] Created: latency-svc-lmxft
  I0904 15:07:23.760714 23 service_latency.go:363] Got endpoints: latency-svc-c5zt2 [750.809455ms]
  I0904 15:07:23.772220 23 service_latency.go:356] Created: latency-svc-55slg
  I0904 15:07:23.813000 23 service_latency.go:363] Got endpoints: latency-svc-v6xhv [751.488471ms]
  I0904 15:07:23.822465 23 service_latency.go:356] Created: latency-svc-cvrlc
  I0904 15:07:23.861290 23 service_latency.go:363] Got endpoints: latency-svc-mc8lh [750.114051ms]
  I0904 15:07:23.871970 23 service_latency.go:356] Created: latency-svc-vnpnv
  I0904 15:07:23.911795 23 service_latency.go:363] Got endpoints: latency-svc-czkkw [748.759832ms]
  I0904 15:07:23.921386 23 service_latency.go:356] Created: latency-svc-r9hk9
  I0904 15:07:23.964246 23 service_latency.go:363] Got endpoints: latency-svc-gbpjk [750.051024ms]
  I0904 15:07:23.971584 23 service_latency.go:356] Created: latency-svc-g8knt
  I0904 15:07:24.014459 23 service_latency.go:363] Got endpoints: latency-svc-nwx2m [751.063161ms]
  I0904 15:07:24.022746 23 service_latency.go:356] Created: latency-svc-jrkt8
  I0904 15:07:24.063474 23 service_latency.go:363] Got endpoints: latency-svc-hfh7h [751.423881ms]
  I0904 15:07:24.072787 23 service_latency.go:356] Created: latency-svc-ftqtf
  I0904 15:07:24.114988 23 service_latency.go:363] Got endpoints: latency-svc-kx8cp [751.110664ms]
  I0904 15:07:24.122312 23 service_latency.go:356] Created: latency-svc-wfpjx
  I0904 15:07:24.163392 23 service_latency.go:363] Got endpoints: latency-svc-xxk9c [748.174364ms]
  I0904 15:07:24.172270 23 service_latency.go:356] Created: latency-svc-89ltx
  I0904 15:07:24.213015 23 service_latency.go:363] Got endpoints: latency-svc-9j7jm [750.044222ms]
  I0904 15:07:24.222771 23 service_latency.go:356] Created: latency-svc-znvwt
  I0904 15:07:24.263499 23 service_latency.go:363] Got endpoints: latency-svc-gvp8d [749.058944ms]
  I0904 15:07:24.272280 23 service_latency.go:356] Created: latency-svc-2mjnd
  I0904 15:07:24.313203 23 service_latency.go:363] Got endpoints: latency-svc-6xsdm [747.681513ms]
  I0904 15:07:24.322555 23 service_latency.go:356] Created: latency-svc-l67jc
  I0904 15:07:24.360703 23 service_latency.go:363] Got endpoints: latency-svc-2fnsg [745.666405ms]
  I0904 15:07:24.373693 23 service_latency.go:356] Created: latency-svc-jqxp8
  I0904 15:07:24.411058 23 service_latency.go:363] Got endpoints: latency-svc-lkbnq [749.934634ms]
  I0904 15:07:24.420703 23 service_latency.go:356] Created: latency-svc-ntc5p
  I0904 15:07:24.461476 23 service_latency.go:363] Got endpoints: latency-svc-lmxft [750.623198ms]
  I0904 15:07:24.471667 23 service_latency.go:356] Created: latency-svc-v2cz8
  I0904 15:07:24.510488 23 service_latency.go:363] Got endpoints: latency-svc-55slg [749.747757ms]
  I0904 15:07:24.521597 23 service_latency.go:356] Created: latency-svc-qrg49
  I0904 15:07:24.562365 23 service_latency.go:363] Got endpoints: latency-svc-cvrlc [749.322278ms]
  I0904 15:07:24.569426 23 service_latency.go:356] Created: latency-svc-8pdp5
  I0904 15:07:24.612484 23 service_latency.go:363] Got endpoints: latency-svc-vnpnv [750.795563ms]
  I0904 15:07:24.621769 23 service_latency.go:356] Created: latency-svc-7lgvn
  I0904 15:07:24.661818 23 service_latency.go:363] Got endpoints: latency-svc-r9hk9 [749.994259ms]
  I0904 15:07:24.672320 23 service_latency.go:356] Created: latency-svc-hvw49
  I0904 15:07:24.714895 23 service_latency.go:363] Got endpoints: latency-svc-g8knt [750.501324ms]
  I0904 15:07:24.721969 23 service_latency.go:356] Created: latency-svc-bw26l
  I0904 15:07:24.763120 23 service_latency.go:363] Got endpoints: latency-svc-jrkt8 [748.628389ms]
  I0904 15:07:24.771486 23 service_latency.go:356] Created: latency-svc-v2nb6
  I0904 15:07:24.812319 23 service_latency.go:363] Got endpoints: latency-svc-ftqtf [748.818677ms]
  I0904 15:07:24.821403 23 service_latency.go:356] Created: latency-svc-wmd9z
  I0904 15:07:24.863269 23 service_latency.go:363] Got endpoints: latency-svc-wfpjx [748.012909ms]
  I0904 15:07:24.873004 23 service_latency.go:356] Created: latency-svc-2lbrc
  I0904 15:07:24.912945 23 service_latency.go:363] Got endpoints: latency-svc-89ltx [749.317615ms]
  I0904 15:07:24.922392 23 service_latency.go:356] Created: latency-svc-v4fbx
  I0904 15:07:24.961014 23 service_latency.go:363] Got endpoints: latency-svc-znvwt [747.946515ms]
  I0904 15:07:24.974365 23 service_latency.go:356] Created: latency-svc-jn4tv
  I0904 15:07:25.013088 23 service_latency.go:363] Got endpoints: latency-svc-2mjnd [749.556769ms]
  I0904 15:07:25.025272 23 service_latency.go:356] Created: latency-svc-qdtnz
  I0904 15:07:25.061826 23 service_latency.go:363] Got endpoints: latency-svc-l67jc [748.384069ms]
  I0904 15:07:25.073032 23 service_latency.go:356] Created: latency-svc-29z4k
  I0904 15:07:25.111193 23 service_latency.go:363] Got endpoints: latency-svc-jqxp8 [750.440338ms]
  I0904 15:07:25.123875 23 service_latency.go:356] Created: latency-svc-5xhdt
  I0904 15:07:25.161907 23 service_latency.go:363] Got endpoints: latency-svc-ntc5p [750.718863ms]
  I0904 15:07:25.170103 23 service_latency.go:356] Created: latency-svc-sx9sh
  I0904 15:07:25.214409 23 service_latency.go:363] Got endpoints: latency-svc-v2cz8 [752.901319ms]
  I0904 15:07:25.223981 23 service_latency.go:356] Created: latency-svc-z74z2
  I0904 15:07:25.262960 23 service_latency.go:363] Got endpoints: latency-svc-qrg49 [752.429203ms]
  I0904 15:07:25.274536 23 service_latency.go:356] Created: latency-svc-zqqrr
  I0904 15:07:25.314691 23 service_latency.go:363] Got endpoints: latency-svc-8pdp5 [752.181563ms]
  I0904 15:07:25.321695 23 service_latency.go:356] Created: latency-svc-v92c5
  I0904 15:07:25.363040 23 service_latency.go:363] Got endpoints: latency-svc-7lgvn [750.526709ms]
  I0904 15:07:25.371399 23 service_latency.go:356] Created: latency-svc-7jtkd
  I0904 15:07:25.411941 23 service_latency.go:363] Got endpoints: latency-svc-hvw49 [749.922924ms]
  I0904 15:07:25.421203 23 service_latency.go:356] Created: latency-svc-cskn8
  I0904 15:07:25.463328 23 service_latency.go:363] Got endpoints: latency-svc-bw26l [748.245942ms]
  I0904 15:07:25.471385 23 service_latency.go:356] Created: latency-svc-gwsx4
  I0904 15:07:25.513358 23 service_latency.go:363] Got endpoints: latency-svc-v2nb6 [750.206621ms]
  I0904 15:07:25.523819 23 service_latency.go:356] Created: latency-svc-b2bg2
  I0904 15:07:25.562709 23 service_latency.go:363] Got endpoints: latency-svc-wmd9z [750.367269ms]
  I0904 15:07:25.572489 23 service_latency.go:356] Created: latency-svc-qv6gp
  I0904 15:07:25.613565 23 service_latency.go:363] Got endpoints: latency-svc-2lbrc [750.023179ms]
  I0904 15:07:25.623382 23 service_latency.go:356] Created: latency-svc-p8njn
  I0904 15:07:25.660824 23 service_latency.go:363] Got endpoints: latency-svc-v4fbx [747.719747ms]
  I0904 15:07:25.671816 23 service_latency.go:356] Created: latency-svc-85nnv
  I0904 15:07:25.710031 23 service_latency.go:363] Got endpoints: latency-svc-jn4tv [748.941512ms]
  I0904 15:07:25.721947 23 service_latency.go:356] Created: latency-svc-jkr2q
  I0904 15:07:25.763449 23 service_latency.go:363] Got endpoints: latency-svc-qdtnz [750.323558ms]
  I0904 15:07:25.772464 23 service_latency.go:356] Created: latency-svc-nc827
  I0904 15:07:25.812055 23 service_latency.go:363] Got endpoints: latency-svc-29z4k [749.935871ms]
  I0904 15:07:25.821062 23 service_latency.go:356] Created: latency-svc-btmbf
  I0904 15:07:25.862224 23 service_latency.go:363] Got endpoints: latency-svc-5xhdt [750.992078ms]
  I0904 15:07:25.872769 23 service_latency.go:356] Created: latency-svc-xws5d
  I0904 15:07:25.911498 23 service_latency.go:363] Got endpoints: latency-svc-sx9sh [749.542726ms]
  I0904 15:07:25.963190 23 service_latency.go:363] Got endpoints: latency-svc-z74z2 [748.74847ms]
  I0904 15:07:26.012612 23 service_latency.go:363] Got endpoints: latency-svc-zqqrr [749.592291ms]
  I0904 15:07:26.063521 23 service_latency.go:363] Got endpoints: latency-svc-v92c5 [748.797404ms]
  I0904 15:07:26.114173 23 service_latency.go:363] Got endpoints: latency-svc-7jtkd [751.106103ms]
  I0904 15:07:26.160762 23 service_latency.go:363] Got endpoints: latency-svc-cskn8 [748.79048ms]
  I0904 15:07:26.213490 23 service_latency.go:363] Got endpoints: latency-svc-gwsx4 [750.024893ms]
  I0904 15:07:26.260936 23 service_latency.go:363] Got endpoints: latency-svc-b2bg2 [747.543741ms]
  I0904 15:07:26.314906 23 service_latency.go:363] Got endpoints: latency-svc-qv6gp [752.117197ms]
  I0904 15:07:26.361008 23 service_latency.go:363] Got endpoints: latency-svc-p8njn [747.375429ms]
  I0904 15:07:26.413288 23 service_latency.go:363] Got endpoints: latency-svc-85nnv [752.384338ms]
  I0904 15:07:26.462864 23 service_latency.go:363] Got endpoints: latency-svc-jkr2q [752.793968ms]
  I0904 15:07:26.511568 23 service_latency.go:363] Got endpoints: latency-svc-nc827 [748.088012ms]
  I0904 15:07:26.563197 23 service_latency.go:363] Got endpoints: latency-svc-btmbf [751.112132ms]
  I0904 15:07:26.611336 23 service_latency.go:363] Got endpoints: latency-svc-xws5d [749.080322ms]
  I0904 15:07:26.611486 23 service_latency.go:115] Latencies: [20.073088ms 29.35362ms 32.347332ms 41.028809ms 48.372107ms 51.028981ms 58.598253ms 70.926823ms 75.827472ms 79.924983ms 90.523653ms 93.401296ms 101.719989ms 101.773818ms 102.243582ms 102.4072ms 105.252798ms 105.430027ms 105.495838ms 105.809761ms 106.07937ms 106.302647ms 106.508891ms 106.68311ms 107.285469ms 107.814203ms 108.192295ms 108.259715ms 108.293119ms 108.643479ms 108.771047ms 109.42452ms 109.631825ms 113.566882ms 143.240206ms 191.598021ms 231.351906ms 272.416004ms 318.256148ms 362.830114ms 405.123905ms 449.814325ms 495.466893ms 538.164653ms 578.194627ms 617.803662ms 660.539674ms 702.223682ms 743.536954ms 745.38712ms 745.666405ms 746.440426ms 746.614366ms 746.972643ms 747.016927ms 747.154716ms 747.168521ms 747.184241ms 747.188533ms 747.350338ms 747.375429ms 747.462353ms 747.543741ms 747.596194ms 747.613216ms 747.681513ms 747.719747ms 747.83541ms 747.946515ms 747.990029ms 748.012909ms 748.064606ms 748.088012ms 748.155396ms 748.172903ms 748.174364ms 748.229618ms 748.245942ms 748.303248ms 748.342468ms 748.384069ms 748.434688ms 748.439374ms 748.464252ms 748.480839ms 748.591054ms 748.628389ms 748.74847ms 748.759832ms 748.79048ms 748.797404ms 748.818677ms 748.840428ms 748.904447ms 748.941512ms 749.058944ms 749.080322ms 749.094196ms 749.142403ms 749.317615ms 749.322278ms 749.424385ms 749.50684ms 749.534334ms 749.542726ms 749.556769ms 749.592291ms 749.654728ms 749.725351ms 749.747757ms 749.77159ms 749.800055ms 749.872638ms 749.922924ms 749.926745ms 749.932849ms 749.934634ms 749.935871ms 749.962313ms 749.994259ms 750.023179ms 750.024893ms 750.044222ms 750.051024ms 750.114051ms 750.121106ms 750.135707ms 750.160683ms 750.201381ms 750.206621ms 750.251675ms 750.27756ms 750.279683ms 750.289525ms 750.31916ms 750.323558ms 750.340515ms 750.367269ms 750.380113ms 750.440338ms 750.482548ms 750.501324ms 750.526709ms 750.543135ms 750.60685ms 750.623198ms 750.629346ms 750.710871ms 750.718863ms 750.731442ms 750.771763ms 750.795563ms 750.809455ms 750.909866ms 750.943809ms 750.992078ms 751.004116ms 751.063161ms 751.106103ms 751.110664ms 751.112132ms 751.126351ms 751.141041ms 751.200727ms 751.216713ms 751.219647ms 751.256192ms 751.366186ms 751.366847ms 751.370536ms 751.423881ms 751.479605ms 751.488471ms 751.516947ms 751.545419ms 751.594375ms 751.655683ms 751.665468ms 751.808523ms 751.839451ms 752.04453ms 752.064025ms 752.10148ms 752.110889ms 752.117197ms 752.121426ms 752.124475ms 752.181563ms 752.220336ms 752.282519ms 752.384338ms 752.429203ms 752.629214ms 752.635529ms 752.719922ms 752.790713ms 752.793968ms 752.901319ms 753.268803ms 753.335396ms]
  I0904 15:07:26.611502 23 service_latency.go:119] 50 %ile: 749.322278ms
  I0904 15:07:26.611708 23 service_latency.go:120] 90 %ile: 752.04453ms
  I0904 15:07:26.611718 23 service_latency.go:121] 99 %ile: 753.268803ms
  I0904 15:07:26.611722 23 service_latency.go:122] Total sample count: 200
  I0904 15:07:26.611886 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-6495" for this suite. @ 09/04/25 15:07:26.618
• [10.714 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] Job should allow to use the pod failure policy on exit code to fail the job early [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:109
  STEP: Creating a kubernetes client @ 09/04/25 15:07:26.625
  I0904 15:07:26.626009 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename job @ 09/04/25 15:07:26.626
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:07:26.64
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:07:26.642
  STEP: Looking for a node to schedule job pod @ 09/04/25 15:07:26.643
  STEP: Creating a job @ 09/04/25 15:07:26.718
  STEP: Ensuring job fails @ 09/04/25 15:07:26.726
  I0904 15:07:32.739980 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-7315" for this suite. @ 09/04/25 15:07:32.743
• [6.125 seconds]
------------------------------
SS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:149
  STEP: Creating a kubernetes client @ 09/04/25 15:07:32.75
  I0904 15:07:32.751016 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename emptydir @ 09/04/25 15:07:32.751
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:07:32.764
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:07:32.767
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 09/04/25 15:07:32.769
  STEP: Saw pod success @ 09/04/25 15:07:36.787
  I0904 15:07:36.792459 23 output.go:207] Trying to get logs from node ip-172-31-33-202 pod pod-99eea650-9911-4a00-9c40-f0ad48c927f3 container test-container: <nil>
  STEP: delete the pod @ 09/04/25 15:07:36.805
  I0904 15:07:36.818984 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6504" for this suite. @ 09/04/25 15:07:36.822
• [4.078 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1893
  STEP: Creating a kubernetes client @ 09/04/25 15:07:36.829
  I0904 15:07:36.829354 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename kubectl @ 09/04/25 15:07:36.829
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:07:36.844
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:07:36.846
  STEP: Starting the proxy @ 09/04/25 15:07:36.848
  I0904 15:07:36.848673 23 util.go:542] Asynchronously running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=kubectl-7224 proxy --unix-socket=/tmp/kubectl-proxy-unix2707159111/test'
  STEP: retrieving proxy /api/ output @ 09/04/25 15:07:36.876
  I0904 15:07:36.877192 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7224" for this suite. @ 09/04/25 15:07:36.923
• [0.104 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1158
  STEP: Creating a kubernetes client @ 09/04/25 15:07:36.933
  I0904 15:07:36.933151 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename job @ 09/04/25 15:07:36.933
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:07:36.948
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:07:36.95
  STEP: Creating a suspended job @ 09/04/25 15:07:36.955
  STEP: Patching the Job @ 09/04/25 15:07:36.961
  STEP: Watching for Job to be patched @ 09/04/25 15:07:36.977
  I0904 15:07:36.978702 23 job.go:1410] Event ADDED observed for Job e2e-k7dw9 in namespace job-4164 with labels: map[e2e-job-label:e2e-k7dw9] and annotations: map[]
  I0904 15:07:36.978719 23 job.go:1410] Event MODIFIED observed for Job e2e-k7dw9 in namespace job-4164 with labels: map[e2e-job-label:e2e-k7dw9] and annotations: map[]
  I0904 15:07:36.978728 23 job.go:1413] Event MODIFIED found for Job e2e-k7dw9 in namespace job-4164 with labels: map[e2e-job-label:e2e-k7dw9 e2e-k7dw9:patched] and annotations: map[]
  STEP: Updating the job @ 09/04/25 15:07:36.978
  STEP: Watching for Job to be updated @ 09/04/25 15:07:36.987
  I0904 15:07:36.988260 23 job.go:1413] Event MODIFIED found for Job e2e-k7dw9 in namespace job-4164 with labels: map[e2e-job-label:e2e-k7dw9 e2e-k7dw9:patched] and annotations: map[updated:true]
  I0904 15:07:36.988289 23 job.go:1236] Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 09/04/25 15:07:36.988
  I0904 15:07:36.991099 23 job.go:1243] Job: e2e-k7dw9 as labels: map[e2e-job-label:e2e-k7dw9 e2e-k7dw9:patched]
  STEP: Waiting for job to complete @ 09/04/25 15:07:36.991
  STEP: Delete a job collection with a labelselector @ 09/04/25 15:07:45.016
  STEP: Watching for Job to be deleted @ 09/04/25 15:07:45.024
  I0904 15:07:45.025817 23 job.go:1410] Event MODIFIED observed for Job e2e-k7dw9 in namespace job-4164 with labels: map[e2e-job-label:e2e-k7dw9 e2e-k7dw9:patched] and annotations: map[updated:true]
  I0904 15:07:45.025841 23 job.go:1410] Event MODIFIED observed for Job e2e-k7dw9 in namespace job-4164 with labels: map[e2e-job-label:e2e-k7dw9 e2e-k7dw9:patched] and annotations: map[updated:true]
  I0904 15:07:45.025851 23 job.go:1410] Event MODIFIED observed for Job e2e-k7dw9 in namespace job-4164 with labels: map[e2e-job-label:e2e-k7dw9 e2e-k7dw9:patched] and annotations: map[updated:true]
  I0904 15:07:45.025939 23 job.go:1410] Event MODIFIED observed for Job e2e-k7dw9 in namespace job-4164 with labels: map[e2e-job-label:e2e-k7dw9 e2e-k7dw9:patched] and annotations: map[updated:true]
  I0904 15:07:45.025974 23 job.go:1410] Event MODIFIED observed for Job e2e-k7dw9 in namespace job-4164 with labels: map[e2e-job-label:e2e-k7dw9 e2e-k7dw9:patched] and annotations: map[updated:true]
  I0904 15:07:45.025983 23 job.go:1410] Event MODIFIED observed for Job e2e-k7dw9 in namespace job-4164 with labels: map[e2e-job-label:e2e-k7dw9 e2e-k7dw9:patched] and annotations: map[updated:true]
  I0904 15:07:45.026044 23 job.go:1410] Event MODIFIED observed for Job e2e-k7dw9 in namespace job-4164 with labels: map[e2e-job-label:e2e-k7dw9 e2e-k7dw9:patched] and annotations: map[updated:true]
  I0904 15:07:45.026098 23 job.go:1413] Event DELETED found for Job e2e-k7dw9 in namespace job-4164 with labels: map[e2e-job-label:e2e-k7dw9 e2e-k7dw9:patched] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 09/04/25 15:07:45.026
  I0904 15:07:45.028397 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-4164" for this suite. @ 09/04/25 15:07:45.035
• [8.118 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] VolumeAttachment Conformance should run through the lifecycle of a VolumeAttachment [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/volume_attachment.go:59
  STEP: Creating a kubernetes client @ 09/04/25 15:07:45.051
  I0904 15:07:45.051378 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename volumeattachment @ 09/04/25 15:07:45.051
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:07:45.063
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:07:45.065
  STEP: Create VolumeAttachment "va-e2e-fcjn8" on node "ip-172-31-33-202" @ 09/04/25 15:07:45.136
  STEP: Get VolumeAttachment "va-e2e-fcjn8" on node "ip-172-31-33-202" @ 09/04/25 15:07:45.142
  STEP: Patch VolumeAttachment "va-e2e-fcjn8" on node "ip-172-31-33-202" @ 09/04/25 15:07:45.145
  STEP: List VolumeAttachments with "va-e2e-fcjn8=patched" label @ 09/04/25 15:07:45.149
  STEP: Delete VolumeAttachment "va-e2e-fcjn8" on node "ip-172-31-33-202" @ 09/04/25 15:07:45.153
  STEP: Confirm deletion of VolumeAttachment "va-e2e-fcjn8" on node "ip-172-31-33-202" @ 09/04/25 15:07:45.157
  STEP: Create VolumeAttachment "va-e2e-7zwxm" on node "ip-172-31-87-111" @ 09/04/25 15:07:45.236
  STEP: Update the VolumeAttachment "va-e2e-7zwxm" on node "ip-172-31-87-111" with label "va-e2e=updated" @ 09/04/25 15:07:45.242
  STEP: Create VolumeAttachment "va-e2e-c7wmc" on node "ip-172-31-81-110" @ 09/04/25 15:07:45.336
  STEP: Update the VolumeAttachment "va-e2e-c7wmc" on node "ip-172-31-81-110" with label "va-e2e=updated" @ 09/04/25 15:07:45.34
  STEP: DeleteCollection of VolumeAttachments with "va-e2e=updated" label @ 09/04/25 15:07:45.348
  STEP: Confirm deleteCollection of VolumeAttachments with "va-e2e=updated" label @ 09/04/25 15:07:45.358
  I0904 15:07:45.362305 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "volumeattachment-9019" for this suite. @ 09/04/25 15:07:45.436
• [0.394 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:76
  STEP: Creating a kubernetes client @ 09/04/25 15:07:45.445
  I0904 15:07:45.445735 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename containers @ 09/04/25 15:07:45.446
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:07:45.456
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:07:45.458
  STEP: Creating a pod to test override command @ 09/04/25 15:07:45.46
  STEP: Saw pod success @ 09/04/25 15:07:49.478
  I0904 15:07:49.481619 23 output.go:207] Trying to get logs from node ip-172-31-33-202 pod client-containers-b23541ed-35ad-4be7-9625-573654f2cac4 container agnhost-container: <nil>
  STEP: delete the pod @ 09/04/25 15:07:49.491
  I0904 15:07:49.506824 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-7253" for this suite. @ 09/04/25 15:07:49.512
• [4.074 seconds]
------------------------------
SS
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:423
  STEP: Creating a kubernetes client @ 09/04/25 15:07:49.519
  I0904 15:07:49.519457 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename configmap @ 09/04/25 15:07:49.519
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:07:49.53
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:07:49.532
  STEP: Creating configMap with name configmap-test-volume-49383050-f10e-4c14-9bb0-5605644926c8 @ 09/04/25 15:07:49.533
  STEP: Creating a pod to test consume configMaps @ 09/04/25 15:07:49.538
  STEP: Saw pod success @ 09/04/25 15:07:51.555
  I0904 15:07:51.558563 23 output.go:207] Trying to get logs from node ip-172-31-33-202 pod pod-configmaps-0a5e7d38-48cd-4046-9a30-902008efb1f7 container configmap-volume-test: <nil>
  STEP: delete the pod @ 09/04/25 15:07:51.564
  I0904 15:07:51.580639 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9804" for this suite. @ 09/04/25 15:07:51.585
• [2.071 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:125
  STEP: Creating a kubernetes client @ 09/04/25 15:07:51.593
  I0904 15:07:51.593205 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename sysctl @ 09/04/25 15:07:51.593
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:07:51.606
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:07:51.608
  STEP: Creating a pod with one valid and two invalid sysctls @ 09/04/25 15:07:51.61
  I0904 15:07:51.614324 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-8527" for this suite. @ 09/04/25 15:07:51.687
• [0.100 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 09/04/25 15:07:51.693
  I0904 15:07:51.693383 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename tables @ 09/04/25 15:07:51.693
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:07:51.707
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:07:51.709
  I0904 15:07:51.712623 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-3085" for this suite. @ 09/04/25 15:07:51.787
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:160
  STEP: Creating a kubernetes client @ 09/04/25 15:07:51.793
  I0904 15:07:51.793176 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename runtimeclass @ 09/04/25 15:07:51.793
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:07:51.804
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:07:51.806
  STEP: Deleting RuntimeClass runtimeclass-9207-delete-me @ 09/04/25 15:07:51.812
  STEP: Waiting for the RuntimeClass to disappear @ 09/04/25 15:07:51.819
  I0904 15:07:51.825876 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-9207" for this suite. @ 09/04/25 15:07:51.888
• [0.102 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:170
  STEP: Creating a kubernetes client @ 09/04/25 15:07:51.895
  I0904 15:07:51.895319 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename configmap @ 09/04/25 15:07:51.895
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:07:51.906
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:07:51.907
  STEP: creating a ConfigMap @ 09/04/25 15:07:51.91
  STEP: fetching the ConfigMap @ 09/04/25 15:07:51.913
  STEP: patching the ConfigMap @ 09/04/25 15:07:51.918
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 09/04/25 15:07:51.922
  STEP: deleting the ConfigMap by collection with a label selector @ 09/04/25 15:07:51.925
  STEP: listing all ConfigMaps in test namespace @ 09/04/25 15:07:51.932
  I0904 15:07:51.936137 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5093" for this suite. @ 09/04/25 15:07:51.989
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:770
  STEP: Creating a kubernetes client @ 09/04/25 15:07:51.996
  I0904 15:07:51.996662 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename svcaccounts @ 09/04/25 15:07:51.997
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:07:52.01
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:07:52.012
  I0904 15:07:52.016245 23 service_accounts.go:782] Got root ca configmap in namespace "svcaccounts-2501"
  I0904 15:07:52.022547 23 service_accounts.go:785] Deleted root ca configmap in namespace "svcaccounts-2501"
  STEP: waiting for a new root ca configmap created @ 09/04/25 15:07:52.523
  I0904 15:07:52.527136 23 service_accounts.go:799] Recreated root ca configmap in namespace "svcaccounts-2501"
  I0904 15:07:52.531571 23 service_accounts.go:810] Updated root ca configmap in namespace "svcaccounts-2501"
  STEP: waiting for the root ca configmap reconciled @ 09/04/25 15:07:53.032
  I0904 15:07:53.038234 23 service_accounts.go:828] Reconciled root ca configmap in namespace "svcaccounts-2501"
  I0904 15:07:53.038377 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-2501" for this suite. @ 09/04/25 15:07:53.042
• [1.051 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:47
  STEP: Creating a kubernetes client @ 09/04/25 15:07:53.048
  I0904 15:07:53.048386 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename configmap @ 09/04/25 15:07:53.048
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:07:53.06
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:07:53.061
  STEP: Creating configMap with name configmap-test-volume-1b671d03-be06-498e-849a-1ce15fb9628b @ 09/04/25 15:07:53.063
  STEP: Creating a pod to test consume configMaps @ 09/04/25 15:07:53.068
  STEP: Saw pod success @ 09/04/25 15:07:57.09
  I0904 15:07:57.093063 23 output.go:207] Trying to get logs from node ip-172-31-33-202 pod pod-configmaps-bcb1609c-bdd5-45ab-bd59-a31298c01b1b container agnhost-container: <nil>
  STEP: delete the pod @ 09/04/25 15:07:57.099
  I0904 15:07:57.117881 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9585" for this suite. @ 09/04/25 15:07:57.121
• [4.079 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Serial] [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:722
  STEP: Creating a kubernetes client @ 09/04/25 15:07:57.127
  I0904 15:07:57.127445 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename gc @ 09/04/25 15:07:57.127
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:07:57.139
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:07:57.14
  STEP: create the rc1 @ 09/04/25 15:07:57.222
  STEP: create the rc2 @ 09/04/25 15:07:57.227
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 09/04/25 15:08:03.239
  STEP: delete the rc simpletest-rc-to-be-deleted @ 09/04/25 15:08:03.649
  STEP: wait for the rc to be deleted @ 09/04/25 15:08:03.655
  I0904 15:08:08.668808 23 garbage_collector.go:770] 70 pods remaining
  I0904 15:08:08.668838 23 garbage_collector.go:777] 70 pods has nil DeletionTimestamp
  I0904 15:08:08.668843 23 garbage_collector.go:778] 
  STEP: Gathering metrics @ 09/04/25 15:08:13.664
  W0904 15:08:13.666847      23 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0904 15:08:13.666876 23 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0904 15:08:13.666920 23 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-25fvn" in namespace "gc-1651"
  I0904 15:08:13.687877 23 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-29sb2" in namespace "gc-1651"
  I0904 15:08:13.704204 23 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-2t4c7" in namespace "gc-1651"
  I0904 15:08:13.722272 23 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-2xzjx" in namespace "gc-1651"
  I0904 15:08:13.735397 23 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-47qjf" in namespace "gc-1651"
  I0904 15:08:13.752159 23 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-4ms5n" in namespace "gc-1651"
  I0904 15:08:13.765287 23 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-4x4tq" in namespace "gc-1651"
  I0904 15:08:13.776680 23 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-52fzp" in namespace "gc-1651"
  I0904 15:08:13.788059 23 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-5bs88" in namespace "gc-1651"
  I0904 15:08:13.799575 23 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-5chvm" in namespace "gc-1651"
  I0904 15:08:13.813550 23 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-5cjsv" in namespace "gc-1651"
  I0904 15:08:13.835981 23 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-5g66k" in namespace "gc-1651"
  I0904 15:08:13.851911 23 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-5nkgm" in namespace "gc-1651"
  I0904 15:08:13.882432 23 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-5qw8d" in namespace "gc-1651"
  I0904 15:08:13.904236 23 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-5vhh4" in namespace "gc-1651"
  I0904 15:08:13.928712 23 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-6gpv4" in namespace "gc-1651"
  I0904 15:08:13.962581 23 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-6h7bf" in namespace "gc-1651"
  I0904 15:08:14.016678 23 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-77k9l" in namespace "gc-1651"
  I0904 15:08:14.034034 23 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-7k9fv" in namespace "gc-1651"
  I0904 15:08:14.046402 23 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-7whdt" in namespace "gc-1651"
  I0904 15:08:14.062018 23 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-87c66" in namespace "gc-1651"
  I0904 15:08:14.073890 23 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-8gdr9" in namespace "gc-1651"
  I0904 15:08:14.086857 23 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-9s6kb" in namespace "gc-1651"
  I0904 15:08:14.108358 23 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-b2gdx" in namespace "gc-1651"
  I0904 15:08:14.119007 23 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-bpxwr" in namespace "gc-1651"
  I0904 15:08:14.135743 23 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-bz78x" in namespace "gc-1651"
  I0904 15:08:14.148831 23 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-bz9vz" in namespace "gc-1651"
  I0904 15:08:14.166100 23 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-cfpr4" in namespace "gc-1651"
  I0904 15:08:14.178157 23 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-cj22n" in namespace "gc-1651"
  I0904 15:08:14.198236 23 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-cmlpp" in namespace "gc-1651"
  I0904 15:08:14.211582 23 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-dqdpr" in namespace "gc-1651"
  I0904 15:08:14.223777 23 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-dsrfj" in namespace "gc-1651"
  I0904 15:08:14.236925 23 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-f68jq" in namespace "gc-1651"
  I0904 15:08:14.258306 23 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-fkslx" in namespace "gc-1651"
  I0904 15:08:14.278928 23 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-ftqx7" in namespace "gc-1651"
  I0904 15:08:14.296639 23 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-g8dpt" in namespace "gc-1651"
  I0904 15:08:14.315420 23 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-gr86h" in namespace "gc-1651"
  I0904 15:08:14.326338 23 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-hcjjr" in namespace "gc-1651"
  I0904 15:08:14.338025 23 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-hjpms" in namespace "gc-1651"
  I0904 15:08:14.400757 23 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-hmjms" in namespace "gc-1651"
  I0904 15:08:14.467489 23 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-hwj7r" in namespace "gc-1651"
  I0904 15:08:14.496039 23 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-jvbsb" in namespace "gc-1651"
  I0904 15:08:14.507192 23 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-jvzwb" in namespace "gc-1651"
  I0904 15:08:14.524201 23 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-kbjjm" in namespace "gc-1651"
  I0904 15:08:14.544627 23 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-kbxnd" in namespace "gc-1651"
  I0904 15:08:14.571865 23 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-kk7gc" in namespace "gc-1651"
  I0904 15:08:14.592441 23 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-lc6rx" in namespace "gc-1651"
  I0904 15:08:14.612122 23 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-lhsdg" in namespace "gc-1651"
  I0904 15:08:14.632681 23 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-lhzch" in namespace "gc-1651"
  I0904 15:08:14.647727 23 delete.go:111] Deleting pod "simpletest-rc-to-be-deleted-lrzwl" in namespace "gc-1651"
  I0904 15:08:14.663978 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-1651" for this suite. @ 09/04/25 15:08:14.697
• [17.592 seconds]
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:199
  STEP: Creating a kubernetes client @ 09/04/25 15:08:14.719
  I0904 15:08:14.719139 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename emptydir @ 09/04/25 15:08:14.719
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:08:14.731
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:08:14.734
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 09/04/25 15:08:14.735
  STEP: Saw pod success @ 09/04/25 15:08:18.757
  I0904 15:08:18.761731 23 output.go:207] Trying to get logs from node ip-172-31-33-202 pod pod-faafd1b1-aef1-4125-8480-c2d6a0dfede2 container test-container: <nil>
  STEP: delete the pod @ 09/04/25 15:08:18.768
  I0904 15:08:18.783560 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9667" for this suite. @ 09/04/25 15:08:18.787
• [4.075 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:177
  STEP: Creating a kubernetes client @ 09/04/25 15:08:18.794
  I0904 15:08:18.794290 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename replicaset @ 09/04/25 15:08:18.794
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:08:18.806
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:08:18.808
  STEP: Create a Replicaset @ 09/04/25 15:08:18.817
  STEP: Verify that the required pods have come up. @ 09/04/25 15:08:18.821
  I0904 15:08:18.826007 23 resource.go:64] Pod name sample-pod: Found 0 pods out of 1
  I0904 15:08:23.830882 23 resource.go:64] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/04/25 15:08:23.83
  STEP: Getting /status @ 09/04/25 15:08:23.83
  I0904 15:08:23.833035 23 replica_set.go:649] Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 09/04/25 15:08:23.833
  I0904 15:08:23.841612 23 replica_set.go:669] updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 09/04/25 15:08:23.841
  I0904 15:08:23.842802 23 replica_set.go:695] Observed &ReplicaSet event: ADDED
  I0904 15:08:23.842851 23 replica_set.go:695] Observed &ReplicaSet event: MODIFIED
  I0904 15:08:23.842963 23 replica_set.go:695] Observed &ReplicaSet event: MODIFIED
  I0904 15:08:23.843084 23 replica_set.go:695] Observed &ReplicaSet event: MODIFIED
  I0904 15:08:23.843133 23 replica_set.go:688] Found replicaset test-rs in namespace replicaset-3555 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0904 15:08:23.843148 23 replica_set.go:699] Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 09/04/25 15:08:23.843
  I0904 15:08:23.843169 23 replica_set.go:703] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0904 15:08:23.848891 23 replica_set.go:707] Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 09/04/25 15:08:23.848
  I0904 15:08:23.849809 23 replica_set.go:731] Observed &ReplicaSet event: ADDED
  I0904 15:08:23.849860 23 replica_set.go:731] Observed &ReplicaSet event: MODIFIED
  I0904 15:08:23.849898 23 replica_set.go:731] Observed &ReplicaSet event: MODIFIED
  I0904 15:08:23.850102 23 replica_set.go:731] Observed &ReplicaSet event: MODIFIED
  I0904 15:08:23.850125 23 replica_set.go:727] Observed replicaset test-rs in namespace replicaset-3555 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0904 15:08:23.850201 23 replica_set.go:731] Observed &ReplicaSet event: MODIFIED
  I0904 15:08:23.850219 23 replica_set.go:724] Found replicaset test-rs in namespace replicaset-3555 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  I0904 15:08:23.850298 23 replica_set.go:735] Replicaset test-rs has a patched status
  I0904 15:08:23.850424 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-3555" for this suite. @ 09/04/25 15:08:23.856
• [5.067 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:115
  STEP: Creating a kubernetes client @ 09/04/25 15:08:23.861
  I0904 15:08:23.861770 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename webhook @ 09/04/25 15:08:23.862
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:08:23.872
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:08:23.874
  STEP: Setting up server cert @ 09/04/25 15:08:23.896
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/04/25 15:08:24.1
  STEP: Deploying the webhook pod @ 09/04/25 15:08:24.106
  STEP: Wait for the deployment to be ready @ 09/04/25 15:08:24.12
  I0904 15:08:24.127627 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/04/25 15:08:26.139
  STEP: Verifying the service has paired with the endpoint @ 09/04/25 15:08:26.149
  I0904 15:08:27.150498 23 util.go:419] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 09/04/25 15:08:27.155
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 09/04/25 15:08:27.156
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 09/04/25 15:08:27.156
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 09/04/25 15:08:27.156
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 09/04/25 15:08:27.157
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 09/04/25 15:08:27.157
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 09/04/25 15:08:27.158
  I0904 15:08:27.194172 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3360" for this suite. @ 09/04/25 15:08:27.198
  STEP: Destroying namespace "webhook-markers-4106" for this suite. @ 09/04/25 15:08:27.205
• [3.348 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should mark indexes as failed when the FailIndex action is matched in podFailurePolicy [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:726
  STEP: Creating a kubernetes client @ 09/04/25 15:08:27.211
  I0904 15:08:27.211867 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename job @ 09/04/25 15:08:27.212
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:08:27.224
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:08:27.226
  STEP: Creating an indexed job with failing pods matching the FailIndex action @ 09/04/25 15:08:27.228
  STEP: Awaiting for the job to fail as all indexes are failed @ 09/04/25 15:08:27.236
  STEP: Verifying the Job status fields to ensure the upper indexes didn't execute @ 09/04/25 15:08:31.247
  I0904 15:08:31.250578 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-9693" for this suite. @ 09/04/25 15:08:31.254
• [4.050 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregator.go:99
  STEP: Creating a kubernetes client @ 09/04/25 15:08:31.262
  I0904 15:08:31.262050 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename aggregator @ 09/04/25 15:08:31.262
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:08:31.274
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:08:31.276
  I0904 15:08:31.278652 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Registering the sample API server. @ 09/04/25 15:08:31.279
  I0904 15:08:31.608782 23 helpers.go:191] Found ClusterRoles; assuming RBAC is enabled.
  I0904 15:08:31.641153 23 deployment.go:223] deployment "sample-apiserver-deployment" doesn't have the required revision set
  I0904 15:08:33.678816 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 4, 15, 8, 31, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 4, 15, 8, 31, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 4, 15, 8, 31, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 4, 15, 8, 31, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5bc889656b\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0904 15:08:35.683471 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 4, 15, 8, 31, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 4, 15, 8, 31, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 4, 15, 8, 31, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 4, 15, 8, 31, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5bc889656b\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0904 15:08:37.682812 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 4, 15, 8, 31, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 4, 15, 8, 31, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 4, 15, 8, 31, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 4, 15, 8, 31, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5bc889656b\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0904 15:08:39.686390 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 4, 15, 8, 31, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 4, 15, 8, 31, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 4, 15, 8, 31, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 4, 15, 8, 31, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5bc889656b\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0904 15:08:41.683606 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 4, 15, 8, 31, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 4, 15, 8, 31, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 4, 15, 8, 31, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 4, 15, 8, 31, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5bc889656b\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0904 15:08:43.682067 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 4, 15, 8, 31, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 4, 15, 8, 31, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 4, 15, 8, 31, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 4, 15, 8, 31, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5bc889656b\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0904 15:08:45.685478 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 4, 15, 8, 31, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 4, 15, 8, 31, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 4, 15, 8, 31, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 4, 15, 8, 31, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5bc889656b\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0904 15:08:47.682753 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 4, 15, 8, 31, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 4, 15, 8, 31, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 4, 15, 8, 31, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 4, 15, 8, 31, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5bc889656b\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0904 15:08:49.681813 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 4, 15, 8, 31, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 4, 15, 8, 31, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 4, 15, 8, 31, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 4, 15, 8, 31, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5bc889656b\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0904 15:08:51.684289 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2025, time.September, 4, 15, 8, 31, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 4, 15, 8, 31, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2025, time.September, 4, 15, 8, 31, 0, time.Local), LastTransitionTime:time.Date(2025, time.September, 4, 15, 8, 31, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5bc889656b\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0904 15:08:53.806269 23 aggregator.go:756] Waited 117.29386ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 09/04/25 15:08:53.837
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 09/04/25 15:08:53.84
  STEP: List APIServices @ 09/04/25 15:08:53.846
  I0904 15:08:53.850370 23 aggregator.go:557] Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 09/04/25 15:08:53.85
  I0904 15:08:53.860688 23 aggregator.go:582] APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 09/04/25 15:08:53.86
  I0904 15:08:53.870465 23 aggregator.go:608] updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2025, time.September, 4, 15, 8, 53, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 09/04/25 15:08:53.87
  I0904 15:08:53.871933 23 aggregator.go:626] Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2025-09-04 15:08:53 +0000 UTC Passed all checks passed}
  I0904 15:08:53.871948 23 aggregator.go:622] Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0904 15:08:53.871955 23 aggregator.go:632] Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 09/04/25 15:08:53.871
  I0904 15:08:53.881246 23 aggregator.go:648] Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete flunders resource "dynamic-flunder-206111842" @ 09/04/25 15:08:53.881
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 09/04/25 15:08:53.891
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 09/04/25 15:08:53.898
  STEP: Patch APIService Status @ 09/04/25 15:08:53.9
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 09/04/25 15:08:53.907
  I0904 15:08:53.910246 23 aggregator.go:726] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2025-09-04 15:08:53 +0000 UTC Passed all checks passed}
  I0904 15:08:53.910263 23 aggregator.go:726] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0904 15:08:53.910274 23 aggregator.go:722] Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  I0904 15:08:53.910283 23 aggregator.go:732] Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "v1alpha1.wardle.example.com=updated" @ 09/04/25 15:08:53.91
  STEP: Confirm that the generated APIService has been deleted @ 09/04/25 15:08:53.917
  I0904 15:08:53.917233 23 aggregator.go:793] Requesting list of APIServices to confirm quantity
  I0904 15:08:53.918608 23 aggregator.go:803] Found 0 APIService with label "v1alpha1.wardle.example.com=updated"
  I0904 15:08:53.918621 23 aggregator.go:745] APIService v1alpha1.wardle.example.com has been deleted.
  I0904 15:08:54.003288 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-8620" for this suite. @ 09/04/25 15:08:54.008
• [22.756 seconds]
------------------------------
SSSSSS
------------------------------
[sig-auth] ServiceAccounts should create a serviceAccountToken and ensure a successful TokenReview [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:877
  STEP: Creating a kubernetes client @ 09/04/25 15:08:54.017
  I0904 15:08:54.017677 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename svcaccounts @ 09/04/25 15:08:54.018
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:08:54.028
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:08:54.029
  STEP: Creating a Serviceaccount "e2e-sa-wkt9q" in namespace "svcaccounts-9543" @ 09/04/25 15:08:54.03
  STEP: Creating a ServiceaccountToken "e2e-sa-wkt9q" in namespace "svcaccounts-9543" @ 09/04/25 15:08:54.037
  STEP: Creating a TokenReview for "e2e-sa-wkt9q" in namespace "svcaccounts-9543" @ 09/04/25 15:08:54.04
  I0904 15:08:54.041634 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-9543" for this suite. @ 09/04/25 15:08:54.109
• [0.099 seconds]
------------------------------
SSS
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:114
  STEP: Creating a kubernetes client @ 09/04/25 15:08:54.116
  I0904 15:08:54.116367 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename replication-controller @ 09/04/25 15:08:54.116
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:08:54.126
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:08:54.127
  STEP: creating a ReplicationController @ 09/04/25 15:08:54.131
  STEP: waiting for RC to be added @ 09/04/25 15:08:54.137
  STEP: waiting for available Replicas @ 09/04/25 15:08:54.137
  STEP: patching ReplicationController @ 09/04/25 15:08:55.259
  STEP: waiting for RC to be modified @ 09/04/25 15:08:55.266
  STEP: patching ReplicationController status @ 09/04/25 15:08:55.266
  STEP: waiting for RC to be modified @ 09/04/25 15:08:55.272
  STEP: waiting for available Replicas @ 09/04/25 15:08:55.272
  STEP: fetching ReplicationController status @ 09/04/25 15:08:55.278
  STEP: patching ReplicationController scale @ 09/04/25 15:08:55.28
  STEP: waiting for RC to be modified @ 09/04/25 15:08:55.286
  STEP: waiting for ReplicationController's scale to be the max amount @ 09/04/25 15:08:55.286
  STEP: fetching ReplicationController; ensuring that it's patched @ 09/04/25 15:08:56.786
  STEP: updating ReplicationController status @ 09/04/25 15:08:56.788
  STEP: waiting for RC to be modified @ 09/04/25 15:08:56.794
  STEP: listing all ReplicationControllers @ 09/04/25 15:08:56.794
  STEP: checking that ReplicationController has expected values @ 09/04/25 15:08:56.799
  STEP: deleting ReplicationControllers by collection @ 09/04/25 15:08:56.8
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 09/04/25 15:08:56.808
  I0904 15:08:56.853977 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0904 15:08:56.854035      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-8882" for this suite. @ 09/04/25 15:08:56.857
• [2.750 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:528
  STEP: Creating a kubernetes client @ 09/04/25 15:08:56.866
  I0904 15:08:56.866302 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename container-probe @ 09/04/25 15:08:56.866
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:08:56.878
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:08:56.88
  STEP: Creating pod test-grpc-b9bb3e62-4199-4412-b196-8aef162ee8a1 in namespace container-probe-5297 @ 09/04/25 15:08:56.881
  E0904 15:08:57.854203      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:08:58.854264      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/04/25 15:08:58.9
  I0904 15:08:58.904934 23 container_probe.go:1749] Initial restart count of pod test-grpc-b9bb3e62-4199-4412-b196-8aef162ee8a1 is 0
  I0904 15:08:58.908018 23 container_probe.go:1759] Get pod test-grpc-b9bb3e62-4199-4412-b196-8aef162ee8a1 in namespace container-probe-5297
  E0904 15:08:59.854741      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:09:00.854837      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:09:00.912067 23 container_probe.go:1759] Get pod test-grpc-b9bb3e62-4199-4412-b196-8aef162ee8a1 in namespace container-probe-5297
  E0904 15:09:01.854938      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:09:02.855001      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:09:02.916561 23 container_probe.go:1759] Get pod test-grpc-b9bb3e62-4199-4412-b196-8aef162ee8a1 in namespace container-probe-5297
  E0904 15:09:03.855814      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:09:04.855928      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:09:04.920354 23 container_probe.go:1759] Get pod test-grpc-b9bb3e62-4199-4412-b196-8aef162ee8a1 in namespace container-probe-5297
  E0904 15:09:05.856016      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:09:06.856198      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:09:06.926491 23 container_probe.go:1759] Get pod test-grpc-b9bb3e62-4199-4412-b196-8aef162ee8a1 in namespace container-probe-5297
  E0904 15:09:07.856295      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:09:08.856366      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:09:08.930842 23 container_probe.go:1759] Get pod test-grpc-b9bb3e62-4199-4412-b196-8aef162ee8a1 in namespace container-probe-5297
  E0904 15:09:09.856741      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:09:10.856849      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:09:10.936260 23 container_probe.go:1759] Get pod test-grpc-b9bb3e62-4199-4412-b196-8aef162ee8a1 in namespace container-probe-5297
  E0904 15:09:11.857006      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:09:12.857074      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:09:12.940944 23 container_probe.go:1759] Get pod test-grpc-b9bb3e62-4199-4412-b196-8aef162ee8a1 in namespace container-probe-5297
  E0904 15:09:13.857912      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:09:14.858817      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:09:14.945108 23 container_probe.go:1759] Get pod test-grpc-b9bb3e62-4199-4412-b196-8aef162ee8a1 in namespace container-probe-5297
  E0904 15:09:15.858962      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:09:16.859045      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:09:16.951476 23 container_probe.go:1759] Get pod test-grpc-b9bb3e62-4199-4412-b196-8aef162ee8a1 in namespace container-probe-5297
  E0904 15:09:17.859224      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:09:18.859332      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:09:18.955972 23 container_probe.go:1759] Get pod test-grpc-b9bb3e62-4199-4412-b196-8aef162ee8a1 in namespace container-probe-5297
  E0904 15:09:19.859747      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:09:20.859857      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:09:20.959355 23 container_probe.go:1759] Get pod test-grpc-b9bb3e62-4199-4412-b196-8aef162ee8a1 in namespace container-probe-5297
  E0904 15:09:21.859969      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:09:22.860038      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:09:22.965086 23 container_probe.go:1759] Get pod test-grpc-b9bb3e62-4199-4412-b196-8aef162ee8a1 in namespace container-probe-5297
  E0904 15:09:23.861144      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:09:24.861268      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:09:24.969504 23 container_probe.go:1759] Get pod test-grpc-b9bb3e62-4199-4412-b196-8aef162ee8a1 in namespace container-probe-5297
  E0904 15:09:25.861461      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:09:26.861620      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:09:26.975299 23 container_probe.go:1759] Get pod test-grpc-b9bb3e62-4199-4412-b196-8aef162ee8a1 in namespace container-probe-5297
  E0904 15:09:27.862099      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:09:28.862220      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:09:28.980269 23 container_probe.go:1759] Get pod test-grpc-b9bb3e62-4199-4412-b196-8aef162ee8a1 in namespace container-probe-5297
  E0904 15:09:29.863270      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:09:30.864155      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:09:30.984491 23 container_probe.go:1759] Get pod test-grpc-b9bb3e62-4199-4412-b196-8aef162ee8a1 in namespace container-probe-5297
  E0904 15:09:31.865153      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:09:32.865231      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:09:32.990847 23 container_probe.go:1759] Get pod test-grpc-b9bb3e62-4199-4412-b196-8aef162ee8a1 in namespace container-probe-5297
  E0904 15:09:33.865746      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:09:34.865813      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:09:34.994969 23 container_probe.go:1759] Get pod test-grpc-b9bb3e62-4199-4412-b196-8aef162ee8a1 in namespace container-probe-5297
  E0904 15:09:35.866806      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:09:36.866897      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:09:36.998838 23 container_probe.go:1759] Get pod test-grpc-b9bb3e62-4199-4412-b196-8aef162ee8a1 in namespace container-probe-5297
  E0904 15:09:37.867743      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:09:38.867826      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:09:39.003795 23 container_probe.go:1759] Get pod test-grpc-b9bb3e62-4199-4412-b196-8aef162ee8a1 in namespace container-probe-5297
  E0904 15:09:39.868614      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:09:40.868765      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:09:41.008383 23 container_probe.go:1759] Get pod test-grpc-b9bb3e62-4199-4412-b196-8aef162ee8a1 in namespace container-probe-5297
  E0904 15:09:41.868864      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:09:42.869792      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:09:43.011804 23 container_probe.go:1759] Get pod test-grpc-b9bb3e62-4199-4412-b196-8aef162ee8a1 in namespace container-probe-5297
  E0904 15:09:43.870823      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:09:44.870904      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:09:45.017792 23 container_probe.go:1759] Get pod test-grpc-b9bb3e62-4199-4412-b196-8aef162ee8a1 in namespace container-probe-5297
  E0904 15:09:45.871724      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:09:46.871750      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:09:47.021859 23 container_probe.go:1759] Get pod test-grpc-b9bb3e62-4199-4412-b196-8aef162ee8a1 in namespace container-probe-5297
  E0904 15:09:47.872818      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:09:48.872920      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:09:49.027459 23 container_probe.go:1759] Get pod test-grpc-b9bb3e62-4199-4412-b196-8aef162ee8a1 in namespace container-probe-5297
  E0904 15:09:49.873268      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:09:50.873476      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:09:51.031058 23 container_probe.go:1759] Get pod test-grpc-b9bb3e62-4199-4412-b196-8aef162ee8a1 in namespace container-probe-5297
  E0904 15:09:51.874096      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:09:52.875056      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:09:53.037106 23 container_probe.go:1759] Get pod test-grpc-b9bb3e62-4199-4412-b196-8aef162ee8a1 in namespace container-probe-5297
  E0904 15:09:53.875746      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:09:54.875824      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:09:55.040799 23 container_probe.go:1759] Get pod test-grpc-b9bb3e62-4199-4412-b196-8aef162ee8a1 in namespace container-probe-5297
  E0904 15:09:55.876696      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:09:56.876746      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:09:57.046757 23 container_probe.go:1759] Get pod test-grpc-b9bb3e62-4199-4412-b196-8aef162ee8a1 in namespace container-probe-5297
  E0904 15:09:57.876871      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:09:58.876983      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:09:59.050916 23 container_probe.go:1759] Get pod test-grpc-b9bb3e62-4199-4412-b196-8aef162ee8a1 in namespace container-probe-5297
  E0904 15:09:59.877798      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:10:00.877933      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:10:01.053988 23 container_probe.go:1759] Get pod test-grpc-b9bb3e62-4199-4412-b196-8aef162ee8a1 in namespace container-probe-5297
  E0904 15:10:01.878997      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:10:02.879140      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:10:03.059995 23 container_probe.go:1759] Get pod test-grpc-b9bb3e62-4199-4412-b196-8aef162ee8a1 in namespace container-probe-5297
  E0904 15:10:03.879288      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:10:04.879394      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:10:05.064020 23 container_probe.go:1759] Get pod test-grpc-b9bb3e62-4199-4412-b196-8aef162ee8a1 in namespace container-probe-5297
  E0904 15:10:05.879582      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:10:06.880175      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:10:07.069970 23 container_probe.go:1759] Get pod test-grpc-b9bb3e62-4199-4412-b196-8aef162ee8a1 in namespace container-probe-5297
  E0904 15:10:07.880859      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:10:08.881086      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:10:09.074074 23 container_probe.go:1759] Get pod test-grpc-b9bb3e62-4199-4412-b196-8aef162ee8a1 in namespace container-probe-5297
  E0904 15:10:09.881242      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:10:10.881342      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:10:11.077738 23 container_probe.go:1759] Get pod test-grpc-b9bb3e62-4199-4412-b196-8aef162ee8a1 in namespace container-probe-5297
  E0904 15:10:11.881503      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:10:12.881808      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:10:13.083403 23 container_probe.go:1759] Get pod test-grpc-b9bb3e62-4199-4412-b196-8aef162ee8a1 in namespace container-probe-5297
  E0904 15:10:13.881899      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:10:14.881995      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:10:15.088080 23 container_probe.go:1759] Get pod test-grpc-b9bb3e62-4199-4412-b196-8aef162ee8a1 in namespace container-probe-5297
  E0904 15:10:15.882808      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:10:16.883096      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:10:17.092426 23 container_probe.go:1759] Get pod test-grpc-b9bb3e62-4199-4412-b196-8aef162ee8a1 in namespace container-probe-5297
  E0904 15:10:17.883075      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:10:18.883129      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:10:19.099298 23 container_probe.go:1759] Get pod test-grpc-b9bb3e62-4199-4412-b196-8aef162ee8a1 in namespace container-probe-5297
  E0904 15:10:19.884169      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:10:20.884408      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:10:21.103583 23 container_probe.go:1759] Get pod test-grpc-b9bb3e62-4199-4412-b196-8aef162ee8a1 in namespace container-probe-5297
  E0904 15:10:21.885221      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:10:22.885324      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:10:23.108170 23 container_probe.go:1759] Get pod test-grpc-b9bb3e62-4199-4412-b196-8aef162ee8a1 in namespace container-probe-5297
  E0904 15:10:23.885739      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:10:24.885818      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:10:25.114442 23 container_probe.go:1759] Get pod test-grpc-b9bb3e62-4199-4412-b196-8aef162ee8a1 in namespace container-probe-5297
  E0904 15:10:25.885946      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:10:26.886061      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:10:27.117955 23 container_probe.go:1759] Get pod test-grpc-b9bb3e62-4199-4412-b196-8aef162ee8a1 in namespace container-probe-5297
  E0904 15:10:27.886745      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:10:28.886936      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:10:29.124110 23 container_probe.go:1759] Get pod test-grpc-b9bb3e62-4199-4412-b196-8aef162ee8a1 in namespace container-probe-5297
  E0904 15:10:29.887975      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:10:30.888056      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:10:31.128071 23 container_probe.go:1759] Get pod test-grpc-b9bb3e62-4199-4412-b196-8aef162ee8a1 in namespace container-probe-5297
  E0904 15:10:31.888394      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:10:32.888351      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:10:33.131888 23 container_probe.go:1759] Get pod test-grpc-b9bb3e62-4199-4412-b196-8aef162ee8a1 in namespace container-probe-5297
  E0904 15:10:33.888392      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:10:34.888620      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:10:35.139052 23 container_probe.go:1759] Get pod test-grpc-b9bb3e62-4199-4412-b196-8aef162ee8a1 in namespace container-probe-5297
  E0904 15:10:35.888720      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:10:36.888946      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:10:37.142783 23 container_probe.go:1759] Get pod test-grpc-b9bb3e62-4199-4412-b196-8aef162ee8a1 in namespace container-probe-5297
  E0904 15:10:37.889599      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:10:38.889796      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:10:39.146206 23 container_probe.go:1759] Get pod test-grpc-b9bb3e62-4199-4412-b196-8aef162ee8a1 in namespace container-probe-5297
  E0904 15:10:39.889918      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:10:40.890133      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:10:41.151853 23 container_probe.go:1759] Get pod test-grpc-b9bb3e62-4199-4412-b196-8aef162ee8a1 in namespace container-probe-5297
  E0904 15:10:41.890777      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:10:42.890940      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:10:43.155089 23 container_probe.go:1759] Get pod test-grpc-b9bb3e62-4199-4412-b196-8aef162ee8a1 in namespace container-probe-5297
  E0904 15:10:43.891998      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:10:44.892187      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:10:45.157838 23 container_probe.go:1759] Get pod test-grpc-b9bb3e62-4199-4412-b196-8aef162ee8a1 in namespace container-probe-5297
  E0904 15:10:45.892288      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:10:46.893264      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:10:47.162273 23 container_probe.go:1759] Get pod test-grpc-b9bb3e62-4199-4412-b196-8aef162ee8a1 in namespace container-probe-5297
  E0904 15:10:47.894182      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:10:48.894274      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:10:49.165138 23 container_probe.go:1759] Get pod test-grpc-b9bb3e62-4199-4412-b196-8aef162ee8a1 in namespace container-probe-5297
  E0904 15:10:49.894704      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:10:50.895789      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:10:51.171510 23 container_probe.go:1759] Get pod test-grpc-b9bb3e62-4199-4412-b196-8aef162ee8a1 in namespace container-probe-5297
  E0904 15:10:51.895884      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:10:52.896052      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:10:53.174985 23 container_probe.go:1759] Get pod test-grpc-b9bb3e62-4199-4412-b196-8aef162ee8a1 in namespace container-probe-5297
  E0904 15:10:53.896714      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:10:54.896811      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:10:55.180499 23 container_probe.go:1759] Get pod test-grpc-b9bb3e62-4199-4412-b196-8aef162ee8a1 in namespace container-probe-5297
  E0904 15:10:55.897317      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:10:56.898259      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:10:57.185900 23 container_probe.go:1759] Get pod test-grpc-b9bb3e62-4199-4412-b196-8aef162ee8a1 in namespace container-probe-5297
  E0904 15:10:57.898675      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:10:58.898860      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:10:59.189277 23 container_probe.go:1759] Get pod test-grpc-b9bb3e62-4199-4412-b196-8aef162ee8a1 in namespace container-probe-5297
  E0904 15:10:59.899011      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:11:00.899210      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:11:01.195318 23 container_probe.go:1759] Get pod test-grpc-b9bb3e62-4199-4412-b196-8aef162ee8a1 in namespace container-probe-5297
  E0904 15:11:01.900128      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:11:02.900310      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:11:03.199032 23 container_probe.go:1759] Get pod test-grpc-b9bb3e62-4199-4412-b196-8aef162ee8a1 in namespace container-probe-5297
  E0904 15:11:03.900767      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:11:04.900946      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:11:05.202658 23 container_probe.go:1759] Get pod test-grpc-b9bb3e62-4199-4412-b196-8aef162ee8a1 in namespace container-probe-5297
  E0904 15:11:05.901084      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:11:06.901215      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:11:07.206990 23 container_probe.go:1759] Get pod test-grpc-b9bb3e62-4199-4412-b196-8aef162ee8a1 in namespace container-probe-5297
  E0904 15:11:07.901328      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:11:08.901509      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:11:09.210746 23 container_probe.go:1759] Get pod test-grpc-b9bb3e62-4199-4412-b196-8aef162ee8a1 in namespace container-probe-5297
  E0904 15:11:09.902569      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:11:10.902728      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:11:11.216795 23 container_probe.go:1759] Get pod test-grpc-b9bb3e62-4199-4412-b196-8aef162ee8a1 in namespace container-probe-5297
  E0904 15:11:11.903687      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:11:12.903739      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:11:13.220660 23 container_probe.go:1759] Get pod test-grpc-b9bb3e62-4199-4412-b196-8aef162ee8a1 in namespace container-probe-5297
  E0904 15:11:13.904805      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:11:14.905832      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:11:15.223907 23 container_probe.go:1759] Get pod test-grpc-b9bb3e62-4199-4412-b196-8aef162ee8a1 in namespace container-probe-5297
  E0904 15:11:15.906706      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:11:16.906802      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:11:17.230098 23 container_probe.go:1759] Get pod test-grpc-b9bb3e62-4199-4412-b196-8aef162ee8a1 in namespace container-probe-5297
  E0904 15:11:17.907784      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:11:18.907877      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:11:19.234468 23 container_probe.go:1759] Get pod test-grpc-b9bb3e62-4199-4412-b196-8aef162ee8a1 in namespace container-probe-5297
  E0904 15:11:19.908781      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:11:20.909797      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:11:21.238148 23 container_probe.go:1759] Get pod test-grpc-b9bb3e62-4199-4412-b196-8aef162ee8a1 in namespace container-probe-5297
  E0904 15:11:21.910785      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:11:22.910980      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:11:23.243940 23 container_probe.go:1759] Get pod test-grpc-b9bb3e62-4199-4412-b196-8aef162ee8a1 in namespace container-probe-5297
  E0904 15:11:23.911710      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:11:24.911901      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:11:25.247648 23 container_probe.go:1759] Get pod test-grpc-b9bb3e62-4199-4412-b196-8aef162ee8a1 in namespace container-probe-5297
  E0904 15:11:25.912380      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:11:26.913326      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:11:27.254888 23 container_probe.go:1759] Get pod test-grpc-b9bb3e62-4199-4412-b196-8aef162ee8a1 in namespace container-probe-5297
  E0904 15:11:27.913538      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:11:28.914221      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:11:29.259788 23 container_probe.go:1759] Get pod test-grpc-b9bb3e62-4199-4412-b196-8aef162ee8a1 in namespace container-probe-5297
  E0904 15:11:29.915097      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:11:30.915190      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:11:31.263639 23 container_probe.go:1759] Get pod test-grpc-b9bb3e62-4199-4412-b196-8aef162ee8a1 in namespace container-probe-5297
  E0904 15:11:31.916209      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:11:32.916794      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:11:33.267743 23 container_probe.go:1759] Get pod test-grpc-b9bb3e62-4199-4412-b196-8aef162ee8a1 in namespace container-probe-5297
  E0904 15:11:33.916878      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:11:34.917797      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:11:35.271011 23 container_probe.go:1759] Get pod test-grpc-b9bb3e62-4199-4412-b196-8aef162ee8a1 in namespace container-probe-5297
  E0904 15:11:35.918786      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:11:36.918949      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:11:37.277103 23 container_probe.go:1759] Get pod test-grpc-b9bb3e62-4199-4412-b196-8aef162ee8a1 in namespace container-probe-5297
  E0904 15:11:37.919845      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:11:38.920030      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:11:39.281085 23 container_probe.go:1759] Get pod test-grpc-b9bb3e62-4199-4412-b196-8aef162ee8a1 in namespace container-probe-5297
  E0904 15:11:39.920788      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:11:40.920985      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:11:41.284286 23 container_probe.go:1759] Get pod test-grpc-b9bb3e62-4199-4412-b196-8aef162ee8a1 in namespace container-probe-5297
  E0904 15:11:41.921091      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:11:42.921270      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:11:43.290302 23 container_probe.go:1759] Get pod test-grpc-b9bb3e62-4199-4412-b196-8aef162ee8a1 in namespace container-probe-5297
  E0904 15:11:43.922069      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:11:44.922184      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:11:45.294654 23 container_probe.go:1759] Get pod test-grpc-b9bb3e62-4199-4412-b196-8aef162ee8a1 in namespace container-probe-5297
  E0904 15:11:45.922343      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:11:46.923283      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:11:47.301488 23 container_probe.go:1759] Get pod test-grpc-b9bb3e62-4199-4412-b196-8aef162ee8a1 in namespace container-probe-5297
  E0904 15:11:47.924216      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:11:48.924804      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:11:49.306320 23 container_probe.go:1759] Get pod test-grpc-b9bb3e62-4199-4412-b196-8aef162ee8a1 in namespace container-probe-5297
  E0904 15:11:49.925790      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:11:50.926786      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:11:51.310177 23 container_probe.go:1759] Get pod test-grpc-b9bb3e62-4199-4412-b196-8aef162ee8a1 in namespace container-probe-5297
  E0904 15:11:51.926883      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:11:52.926985      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:11:53.316201 23 container_probe.go:1759] Get pod test-grpc-b9bb3e62-4199-4412-b196-8aef162ee8a1 in namespace container-probe-5297
  E0904 15:11:53.927781      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:11:54.927971      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:11:55.320428 23 container_probe.go:1759] Get pod test-grpc-b9bb3e62-4199-4412-b196-8aef162ee8a1 in namespace container-probe-5297
  E0904 15:11:55.928116      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:11:56.928216      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:11:57.323647 23 container_probe.go:1759] Get pod test-grpc-b9bb3e62-4199-4412-b196-8aef162ee8a1 in namespace container-probe-5297
  E0904 15:11:57.928282      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:11:58.928369      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:11:59.330655 23 container_probe.go:1759] Get pod test-grpc-b9bb3e62-4199-4412-b196-8aef162ee8a1 in namespace container-probe-5297
  E0904 15:11:59.928779      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:12:00.928961      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:12:01.335497 23 container_probe.go:1759] Get pod test-grpc-b9bb3e62-4199-4412-b196-8aef162ee8a1 in namespace container-probe-5297
  E0904 15:12:01.929155      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:12:02.929332      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:12:03.338866 23 container_probe.go:1759] Get pod test-grpc-b9bb3e62-4199-4412-b196-8aef162ee8a1 in namespace container-probe-5297
  E0904 15:12:03.929476      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:12:04.929697      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:12:05.344702 23 container_probe.go:1759] Get pod test-grpc-b9bb3e62-4199-4412-b196-8aef162ee8a1 in namespace container-probe-5297
  E0904 15:12:05.930332      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:12:06.931292      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:12:07.350694 23 container_probe.go:1759] Get pod test-grpc-b9bb3e62-4199-4412-b196-8aef162ee8a1 in namespace container-probe-5297
  E0904 15:12:07.931365      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:12:08.931838      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:12:09.355092 23 container_probe.go:1759] Get pod test-grpc-b9bb3e62-4199-4412-b196-8aef162ee8a1 in namespace container-probe-5297
  E0904 15:12:09.932783      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:12:10.932901      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:12:11.357229 23 container_probe.go:1759] Get pod test-grpc-b9bb3e62-4199-4412-b196-8aef162ee8a1 in namespace container-probe-5297
  E0904 15:12:11.932964      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:12:12.933021      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:12:13.362933 23 container_probe.go:1759] Get pod test-grpc-b9bb3e62-4199-4412-b196-8aef162ee8a1 in namespace container-probe-5297
  E0904 15:12:13.933483      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:12:14.933681      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:12:15.367938 23 container_probe.go:1759] Get pod test-grpc-b9bb3e62-4199-4412-b196-8aef162ee8a1 in namespace container-probe-5297
  E0904 15:12:15.934669      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:12:16.935349      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:12:17.371241 23 container_probe.go:1759] Get pod test-grpc-b9bb3e62-4199-4412-b196-8aef162ee8a1 in namespace container-probe-5297
  E0904 15:12:17.935881      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:12:18.936788      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:12:19.377827 23 container_probe.go:1759] Get pod test-grpc-b9bb3e62-4199-4412-b196-8aef162ee8a1 in namespace container-probe-5297
  E0904 15:12:19.936883      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:12:20.937046      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:12:21.382831 23 container_probe.go:1759] Get pod test-grpc-b9bb3e62-4199-4412-b196-8aef162ee8a1 in namespace container-probe-5297
  E0904 15:12:21.937168      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:12:22.937359      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:12:23.387075 23 container_probe.go:1759] Get pod test-grpc-b9bb3e62-4199-4412-b196-8aef162ee8a1 in namespace container-probe-5297
  E0904 15:12:23.937457      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:12:24.937783      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:12:25.392465 23 container_probe.go:1759] Get pod test-grpc-b9bb3e62-4199-4412-b196-8aef162ee8a1 in namespace container-probe-5297
  E0904 15:12:25.938026      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:12:26.938126      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:12:27.395981 23 container_probe.go:1759] Get pod test-grpc-b9bb3e62-4199-4412-b196-8aef162ee8a1 in namespace container-probe-5297
  E0904 15:12:27.938647      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:12:28.938846      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:12:29.401698 23 container_probe.go:1759] Get pod test-grpc-b9bb3e62-4199-4412-b196-8aef162ee8a1 in namespace container-probe-5297
  E0904 15:12:29.938965      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:12:30.939160      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:12:31.407016 23 container_probe.go:1759] Get pod test-grpc-b9bb3e62-4199-4412-b196-8aef162ee8a1 in namespace container-probe-5297
  E0904 15:12:31.939443      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:12:32.939703      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:12:33.411144 23 container_probe.go:1759] Get pod test-grpc-b9bb3e62-4199-4412-b196-8aef162ee8a1 in namespace container-probe-5297
  E0904 15:12:33.939756      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:12:34.939959      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:12:35.417323 23 container_probe.go:1759] Get pod test-grpc-b9bb3e62-4199-4412-b196-8aef162ee8a1 in namespace container-probe-5297
  E0904 15:12:35.940829      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:12:36.941004      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:12:37.423251 23 container_probe.go:1759] Get pod test-grpc-b9bb3e62-4199-4412-b196-8aef162ee8a1 in namespace container-probe-5297
  E0904 15:12:37.941955      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:12:38.942150      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:12:39.426817 23 container_probe.go:1759] Get pod test-grpc-b9bb3e62-4199-4412-b196-8aef162ee8a1 in namespace container-probe-5297
  E0904 15:12:39.942270      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:12:40.942465      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:12:41.432072 23 container_probe.go:1759] Get pod test-grpc-b9bb3e62-4199-4412-b196-8aef162ee8a1 in namespace container-probe-5297
  E0904 15:12:41.942713      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:12:42.942899      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:12:43.435017 23 container_probe.go:1759] Get pod test-grpc-b9bb3e62-4199-4412-b196-8aef162ee8a1 in namespace container-probe-5297
  E0904 15:12:43.943659      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:12:44.943747      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:12:45.440407 23 container_probe.go:1759] Get pod test-grpc-b9bb3e62-4199-4412-b196-8aef162ee8a1 in namespace container-probe-5297
  E0904 15:12:45.944527      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:12:46.945282      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:12:47.443643 23 container_probe.go:1759] Get pod test-grpc-b9bb3e62-4199-4412-b196-8aef162ee8a1 in namespace container-probe-5297
  E0904 15:12:47.945790      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:12:48.945902      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:12:49.450235 23 container_probe.go:1759] Get pod test-grpc-b9bb3e62-4199-4412-b196-8aef162ee8a1 in namespace container-probe-5297
  E0904 15:12:49.946778      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:12:50.947785      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:12:51.454480 23 container_probe.go:1759] Get pod test-grpc-b9bb3e62-4199-4412-b196-8aef162ee8a1 in namespace container-probe-5297
  E0904 15:12:51.947879      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:12:52.948056      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:12:53.457856 23 container_probe.go:1759] Get pod test-grpc-b9bb3e62-4199-4412-b196-8aef162ee8a1 in namespace container-probe-5297
  E0904 15:12:53.948195      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:12:54.948385      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:12:55.464349 23 container_probe.go:1759] Get pod test-grpc-b9bb3e62-4199-4412-b196-8aef162ee8a1 in namespace container-probe-5297
  E0904 15:12:55.948484      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:12:56.949255      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:12:57.468449 23 container_probe.go:1759] Get pod test-grpc-b9bb3e62-4199-4412-b196-8aef162ee8a1 in namespace container-probe-5297
  E0904 15:12:57.950045      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:12:58.950226      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 09/04/25 15:12:59.468
  I0904 15:12:59.482630 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-5297" for this suite. @ 09/04/25 15:12:59.487
• [242.629 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:370
  STEP: Creating a kubernetes client @ 09/04/25 15:12:59.495
  I0904 15:12:59.495837 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename kubectl @ 09/04/25 15:12:59.496
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:12:59.507
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:12:59.509
  STEP: creating a replication controller @ 09/04/25 15:12:59.51
  I0904 15:12:59.510998 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=kubectl-8721 create -f -'
  I0904 15:12:59.655109 23 builder.go:156] stderr: ""
  I0904 15:12:59.655146 23 builder.go:157] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 09/04/25 15:12:59.655
  I0904 15:12:59.655218 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=kubectl-8721 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0904 15:12:59.693115 23 builder.go:156] stderr: ""
  I0904 15:12:59.693145 23 builder.go:157] stdout: "update-demo-nautilus-njgp4 update-demo-nautilus-w8hkw "
  I0904 15:12:59.693197 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=kubectl-8721 get pods update-demo-nautilus-njgp4 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0904 15:12:59.728736 23 builder.go:156] stderr: ""
  I0904 15:12:59.728761 23 builder.go:157] stdout: ""
  I0904 15:12:59.728771 23 kubectl.go:2537] update-demo-nautilus-njgp4 is created but not running
  E0904 15:12:59.951203      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:13:00.951439      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:13:01.952320      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:13:02.952430      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:13:03.952576      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:13:04.728922 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=kubectl-8721 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0904 15:13:04.770509 23 builder.go:156] stderr: ""
  I0904 15:13:04.770542 23 builder.go:157] stdout: "update-demo-nautilus-njgp4 update-demo-nautilus-w8hkw "
  I0904 15:13:04.770634 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=kubectl-8721 get pods update-demo-nautilus-njgp4 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0904 15:13:04.804457 23 builder.go:156] stderr: ""
  I0904 15:13:04.804492 23 builder.go:157] stdout: "true"
  I0904 15:13:04.804526 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=kubectl-8721 get pods update-demo-nautilus-njgp4 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0904 15:13:04.837040 23 builder.go:156] stderr: ""
  I0904 15:13:04.837065 23 builder.go:157] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0904 15:13:04.837075 23 kubectl.go:2428] validating pod update-demo-nautilus-njgp4
  I0904 15:13:04.841878 23 kubectl.go:2448] got data: {
    "image": "nautilus.jpg"
  }

  I0904 15:13:04.841932 23 kubectl.go:2453] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0904 15:13:04.841942 23 kubectl.go:2555] update-demo-nautilus-njgp4 is verified up and running
  I0904 15:13:04.841972 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=kubectl-8721 get pods update-demo-nautilus-w8hkw -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0904 15:13:04.878483 23 builder.go:156] stderr: ""
  I0904 15:13:04.878501 23 builder.go:157] stdout: "true"
  I0904 15:13:04.878625 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=kubectl-8721 get pods update-demo-nautilus-w8hkw -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0904 15:13:04.912842 23 builder.go:156] stderr: ""
  I0904 15:13:04.912865 23 builder.go:157] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0904 15:13:04.912876 23 kubectl.go:2428] validating pod update-demo-nautilus-w8hkw
  I0904 15:13:04.917462 23 kubectl.go:2448] got data: {
    "image": "nautilus.jpg"
  }

  I0904 15:13:04.917509 23 kubectl.go:2453] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0904 15:13:04.917519 23 kubectl.go:2555] update-demo-nautilus-w8hkw is verified up and running
  STEP: scaling down the replication controller @ 09/04/25 15:13:04.917
  I0904 15:13:04.918150 23 kubectl.go:339] scanned /root for discovery docs: <nil>
  I0904 15:13:04.918172 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=kubectl-8721 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  E0904 15:13:04.953421      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:13:05.953554      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:13:05.966843 23 builder.go:156] stderr: ""
  I0904 15:13:05.966868 23 builder.go:157] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 09/04/25 15:13:05.966
  I0904 15:13:05.966942 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=kubectl-8721 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0904 15:13:06.009303 23 builder.go:156] stderr: ""
  I0904 15:13:06.009331 23 builder.go:157] stdout: "update-demo-nautilus-njgp4 update-demo-nautilus-w8hkw "
  STEP: Replicas for name=update-demo: expected=1 actual=2 @ 09/04/25 15:13:06.009
  E0904 15:13:06.954507      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:13:07.954729      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:13:08.954751      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:13:09.954832      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:13:10.954905      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:13:11.010054 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=kubectl-8721 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0904 15:13:11.050307 23 builder.go:156] stderr: ""
  I0904 15:13:11.050348 23 builder.go:157] stdout: "update-demo-nautilus-w8hkw "
  I0904 15:13:11.050383 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=kubectl-8721 get pods update-demo-nautilus-w8hkw -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0904 15:13:11.087520 23 builder.go:156] stderr: ""
  I0904 15:13:11.087545 23 builder.go:157] stdout: "true"
  I0904 15:13:11.087576 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=kubectl-8721 get pods update-demo-nautilus-w8hkw -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0904 15:13:11.122199 23 builder.go:156] stderr: ""
  I0904 15:13:11.122222 23 builder.go:157] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0904 15:13:11.122242 23 kubectl.go:2428] validating pod update-demo-nautilus-w8hkw
  I0904 15:13:11.126571 23 kubectl.go:2448] got data: {
    "image": "nautilus.jpg"
  }

  I0904 15:13:11.126629 23 kubectl.go:2453] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0904 15:13:11.126638 23 kubectl.go:2555] update-demo-nautilus-w8hkw is verified up and running
  STEP: scaling up the replication controller @ 09/04/25 15:13:11.126
  I0904 15:13:11.127236 23 kubectl.go:339] scanned /root for discovery docs: <nil>
  I0904 15:13:11.127258 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=kubectl-8721 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  E0904 15:13:11.955005      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:13:12.173890 23 builder.go:156] stderr: ""
  I0904 15:13:12.173938 23 builder.go:157] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 09/04/25 15:13:12.173
  I0904 15:13:12.174017 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=kubectl-8721 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0904 15:13:12.214993 23 builder.go:156] stderr: ""
  I0904 15:13:12.215019 23 builder.go:157] stdout: "update-demo-nautilus-b6czd update-demo-nautilus-w8hkw "
  I0904 15:13:12.215049 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=kubectl-8721 get pods update-demo-nautilus-b6czd -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0904 15:13:12.248694 23 builder.go:156] stderr: ""
  I0904 15:13:12.248719 23 builder.go:157] stdout: "true"
  I0904 15:13:12.248748 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=kubectl-8721 get pods update-demo-nautilus-b6czd -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0904 15:13:12.284952 23 builder.go:156] stderr: ""
  I0904 15:13:12.285004 23 builder.go:157] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0904 15:13:12.285013 23 kubectl.go:2428] validating pod update-demo-nautilus-b6czd
  I0904 15:13:12.288571 23 kubectl.go:2448] got data: {
    "image": "nautilus.jpg"
  }

  I0904 15:13:12.288625 23 kubectl.go:2453] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0904 15:13:12.288633 23 kubectl.go:2555] update-demo-nautilus-b6czd is verified up and running
  I0904 15:13:12.288658 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=kubectl-8721 get pods update-demo-nautilus-w8hkw -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0904 15:13:12.324533 23 builder.go:156] stderr: ""
  I0904 15:13:12.324552 23 builder.go:157] stdout: "true"
  I0904 15:13:12.324620 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=kubectl-8721 get pods update-demo-nautilus-w8hkw -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0904 15:13:12.356233 23 builder.go:156] stderr: ""
  I0904 15:13:12.356255 23 builder.go:157] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0904 15:13:12.356263 23 kubectl.go:2428] validating pod update-demo-nautilus-w8hkw
  I0904 15:13:12.362385 23 kubectl.go:2448] got data: {
    "image": "nautilus.jpg"
  }

  I0904 15:13:12.362417 23 kubectl.go:2453] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0904 15:13:12.362426 23 kubectl.go:2555] update-demo-nautilus-w8hkw is verified up and running
  STEP: using delete to clean up resources @ 09/04/25 15:13:12.362
  I0904 15:13:12.362495 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=kubectl-8721 delete --grace-period=0 --force -f -'
  I0904 15:13:12.402216 23 builder.go:156] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0904 15:13:12.402285 23 builder.go:157] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted from kubectl-8721 namespace\n"
  I0904 15:13:12.402353 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=kubectl-8721 get rc,svc -l name=update-demo --no-headers'
  I0904 15:13:12.438823 23 builder.go:156] stderr: "No resources found in kubectl-8721 namespace.\n"
  I0904 15:13:12.438879 23 builder.go:157] stdout: ""
  I0904 15:13:12.438942 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=kubectl-8721 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0904 15:13:12.471560 23 builder.go:156] stderr: ""
  I0904 15:13:12.471641 23 builder.go:157] stdout: ""
  I0904 15:13:12.471813 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8721" for this suite. @ 09/04/25 15:13:12.475
• [12.987 seconds]
------------------------------
SS
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1725
  STEP: Creating a kubernetes client @ 09/04/25 15:13:12.483
  I0904 15:13:12.483319 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename kubectl @ 09/04/25 15:13:12.483
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:13:12.496
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:13:12.498
  STEP: creating Agnhost RC @ 09/04/25 15:13:12.499
  I0904 15:13:12.499893 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=kubectl-1987 create -f -'
  I0904 15:13:12.568336 23 builder.go:156] stderr: ""
  I0904 15:13:12.568358 23 builder.go:157] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 09/04/25 15:13:12.568
  E0904 15:13:12.955816      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:13:13.575328 23 framework.go:697] Selector matched 1 pods for map[app:agnhost]
  I0904 15:13:13.575351 23 framework.go:738] Found 0 / 1
  E0904 15:13:13.956781      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:13:14.573630 23 framework.go:697] Selector matched 1 pods for map[app:agnhost]
  I0904 15:13:14.573669 23 framework.go:738] Found 1 / 1
  I0904 15:13:14.573680 23 framework.go:747] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 09/04/25 15:13:14.573
  I0904 15:13:14.576282 23 framework.go:697] Selector matched 1 pods for map[app:agnhost]
  I0904 15:13:14.576299 23 framework.go:770] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0904 15:13:14.576346 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=kubectl-1987 patch pod agnhost-primary-x8hw5 -p {"metadata":{"annotations":{"x":"y"}}}'
  I0904 15:13:14.622956 23 builder.go:156] stderr: ""
  I0904 15:13:14.622990 23 builder.go:157] stdout: "pod/agnhost-primary-x8hw5 patched\n"
  STEP: checking annotations @ 09/04/25 15:13:14.623
  I0904 15:13:14.627806 23 framework.go:697] Selector matched 1 pods for map[app:agnhost]
  I0904 15:13:14.627825 23 framework.go:770] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0904 15:13:14.627952 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1987" for this suite. @ 09/04/25 15:13:14.633
• [2.157 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:110
  STEP: Creating a kubernetes client @ 09/04/25 15:13:14.64
  I0904 15:13:14.640986 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename resourcequota @ 09/04/25 15:13:14.641
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:13:14.652
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:13:14.654
  STEP: Counting existing ResourceQuota @ 09/04/25 15:13:14.655
  E0904 15:13:14.957353      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:13:15.958239      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:13:16.959160      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:13:17.959739      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:13:18.960693      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 09/04/25 15:13:19.662
  STEP: Ensuring resource quota status is calculated @ 09/04/25 15:13:19.667
  E0904 15:13:19.961497      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:13:20.961634      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:13:21.676282 23 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc0028eb7c0>: 
          metadata:
            creationTimestamp: "2025-09-04T15:13:19Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-04T15:13:19Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
                  f:used:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-04T15:13:19Z"
            name: test-quota
            namespace: resourcequota-8053
            resourceVersion: "26946"
            uid: 0d1842cb-0c66-4310-a08d-ee07b1c3d6cd
          spec:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
          status:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
            used:
              configmaps: "1"
              count/replicasets.apps: "0"
              cpu: "0"
              ephemeral-storage: "0"
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
              gold.storageclass.storage.k8s.io/requests.storage: "0"
              memory: "0"
              persistentvolumeclaims: "0"
              pods: "0"
              replicationcontrollers: "0"
              requests.example.com/dongle: "0"
              requests.storage: "0"
              resourcequotas: "1"
              secrets: "0"
              services: "0"
              services.loadbalancers: "0"
              services.nodeports: "0"
  STEP: Creating a Service @ 09/04/25 15:13:21.676
  STEP: Creating a NodePort Service @ 09/04/25 15:13:21.689
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 09/04/25 15:13:21.715
  STEP: Ensuring resource quota status captures service creation @ 09/04/25 15:13:21.733
  I0904 15:13:21.736472 23 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc001becb40>: 
          metadata:
            creationTimestamp: "2025-09-04T15:13:19Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-04T15:13:19Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
                  f:used:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services.loadbalancers: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-04T15:13:19Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:used:
                    f:services: {}
                    f:services.nodeports: {}
              manager: kube-apiserver
              operation: Update
              subresource: status
              time: "2025-09-04T15:13:21Z"
            name: test-quota
            namespace: resourcequota-8053
            resourceVersion: "26963"
            uid: 0d1842cb-0c66-4310-a08d-ee07b1c3d6cd
          spec:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
          status:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
            used:
              configmaps: "1"
              count/replicasets.apps: "0"
              cpu: "0"
              ephemeral-storage: "0"
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
              gold.storageclass.storage.k8s.io/requests.storage: "0"
              memory: "0"
              persistentvolumeclaims: "0"
              pods: "0"
              replicationcontrollers: "0"
              requests.example.com/dongle: "0"
              requests.storage: "0"
              resourcequotas: "1"
              secrets: "0"
              services: "2"
              services.loadbalancers: "0"
              services.nodeports: "1"
  STEP: Deleting Services @ 09/04/25 15:13:21.736
  STEP: Ensuring resource quota status released usage @ 09/04/25 15:13:21.773
  I0904 15:13:21.776111 23 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc0016d6000>: 
          metadata:
            creationTimestamp: "2025-09-04T15:13:19Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-04T15:13:19Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
                  f:used:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-04T15:13:21Z"
            name: test-quota
            namespace: resourcequota-8053
            resourceVersion: "26973"
            uid: 0d1842cb-0c66-4310-a08d-ee07b1c3d6cd
          spec:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
          status:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
            used:
              configmaps: "1"
              count/replicasets.apps: "0"
              cpu: "0"
              ephemeral-storage: "0"
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
              gold.storageclass.storage.k8s.io/requests.storage: "0"
              memory: "0"
              persistentvolumeclaims: "0"
              pods: "0"
              replicationcontrollers: "0"
              requests.example.com/dongle: "0"
              requests.storage: "0"
              resourcequotas: "1"
              secrets: "0"
              services: "0"
              services.loadbalancers: "0"
              services.nodeports: "0"
  I0904 15:13:21.776396 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8053" for this suite. @ 09/04/25 15:13:21.779
• [7.146 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 09/04/25 15:13:21.787
  I0904 15:13:21.787330 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename init-container @ 09/04/25 15:13:21.787
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:13:21.797
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:13:21.799
  STEP: creating the pod @ 09/04/25 15:13:21.8
  I0904 15:13:21.800921 23 init_container.go:374] PodSpec: initContainers in spec.initContainers
  E0904 15:13:21.961969      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:13:22.962112      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:13:23.962919      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:13:24.963115      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:13:25.963321      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:13:26.963434      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:13:27.963510      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:13:28.963720      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:13:29.963788      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:13:30.963971      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:13:31.964043      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:13:32.964140      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:13:33.964921      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:13:34.965849      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:13:35.965958      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:13:36.966055      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:13:37.966783      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:13:38.967652      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:13:39.967719      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:13:40.967826      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:13:41.967985      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:13:42.968115      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:13:43.968308      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:13:44.968572      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:13:45.968809      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:13:46.968969      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:13:47.969149      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:13:48.969366      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:13:49.969542      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:13:50.969745      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:13:51.969832      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:13:52.969971      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:13:53.970113      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:13:54.970800      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:13:55.970960      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:13:56.971082      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:13:57.971191      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:13:58.971350      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:13:59.971443      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:14:00.971616      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:14:01.971977      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:14:02.972132      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:14:03.972227      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:14:04.972457      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:14:05.972553      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:14:06.973353      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:14:07.745964 23 init_container.go:432] init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-ea09e432-aeba-445c-b765-9174a41ab3b9", GenerateName:"", Namespace:"init-container-6311", SelfLink:"", UID:"5ba72db6-5d43-4da9-90c7-64fbabadb064", ResourceVersion:"27124", Generation:1, CreationTimestamp:time.Date(2025, time.September, 4, 15, 13, 21, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"800915256"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 4, 15, 13, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ed6cd8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2025, time.September, 4, 15, 14, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ed6d08), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-mxfp2", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc00527c7a0), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil), Image:(*v1.ImageVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.37.0-1", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), RestartPolicyRules:[]v1.ContainerRestartRule(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-mxfp2", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.37.0-1", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), RestartPolicyRules:[]v1.ContainerRestartRule(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-mxfp2", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.10.1", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), RestartPolicyRules:[]v1.ContainerRestartRule(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-mxfp2", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc0042e99b8), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"ip-172-31-33-202", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc00361b320), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc0042e9a40)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc0042e9a60)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc0042e9a68), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc0042e9a6c), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc0011518b0), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil), Resources:(*v1.ResourceRequirements)(nil), HostnameOverride:(*string)(nil)}, Status:v1.PodStatus{ObservedGeneration:1, Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"PodReadyToStartContainers", ObservedGeneration:1, Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.September, 4, 15, 13, 22, 0, time.Local), Reason:"", Message:""}, v1.PodCondition{Type:"Initialized", ObservedGeneration:1, Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.September, 4, 15, 13, 21, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", ObservedGeneration:1, Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.September, 4, 15, 13, 21, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", ObservedGeneration:1, Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.September, 4, 15, 13, 21, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", ObservedGeneration:1, Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2025, time.September, 4, 15, 13, 21, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"172.31.33.202", HostIPs:[]v1.HostIP{v1.HostIP{IP:"172.31.33.202"}}, PodIP:"192.168.109.97", PodIPs:[]v1.PodIP{v1.PodIP{IP:"192.168.109.97"}}, StartTime:time.Date(2025, time.September, 4, 15, 13, 21, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc00032c070)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc00032c0e0)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.37.0-1", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:0ffbe172f8d245c83f285c6992b452c53d085661e03ddfd3b484332026e6c8bb", ContainerID:"containerd://cb93a2f45e158329d4445664805faca62ab04cb66f818031bfa64d73165b6bd7", Started:(*bool)(0xc0042e9b1a), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(0xc0047ff770), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-mxfp2", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc001151910)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil), StopSignal:(*v1.Signal)(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc00527c800), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.37.0-1", ImageID:"", ContainerID:"", Started:(*bool)(0xc0042e9b2d), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-mxfp2", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc001151920)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil), StopSignal:(*v1.Signal)(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc00527c7e0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.10.1", ImageID:"", ContainerID:"", Started:(*bool)(0xc0042e9ae4), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-mxfp2", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc0011518c0)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil), StopSignal:(*v1.Signal)(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil), ExtendedResourceClaimStatus:(*v1.PodExtendedResourceClaimStatus)(nil)}}
  I0904 15:14:07.746099 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-6311" for this suite. @ 09/04/25 15:14:07.751
• [45.971 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/controller_revision.go:126
  STEP: Creating a kubernetes client @ 09/04/25 15:14:07.758
  I0904 15:14:07.758267 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename controllerrevisions @ 09/04/25 15:14:07.758
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:14:07.77
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:14:07.771
  STEP: Creating DaemonSet "e2e-sbmf4-daemon-set" @ 09/04/25 15:14:07.86
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/04/25 15:14:07.865
  I0904 15:14:07.952608 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-16-153 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0904 15:14:07.952651 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-81-110 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0904 15:14:07.954284 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-sbmf4-daemon-set: 0
  I0904 15:14:07.954302 23 fixtures.go:131] Node ip-172-31-18-79 is running 0 daemon pod, expected 1
  E0904 15:14:07.973336      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:14:08.871393 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-16-153 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0904 15:14:08.871439 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-81-110 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0904 15:14:08.873813 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-sbmf4-daemon-set: 1
  I0904 15:14:08.873835 23 fixtures.go:131] Node ip-172-31-18-79 is running 0 daemon pod, expected 1
  E0904 15:14:08.974066      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:14:09.871260 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-16-153 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0904 15:14:09.871307 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-81-110 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0904 15:14:09.873898 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-sbmf4-daemon-set: 3
  I0904 15:14:09.873914 23 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset e2e-sbmf4-daemon-set
  STEP: Confirm DaemonSet "e2e-sbmf4-daemon-set" successfully created with "daemonset-name=e2e-sbmf4-daemon-set" label @ 09/04/25 15:14:09.876
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-sbmf4-daemon-set" @ 09/04/25 15:14:09.882
  I0904 15:14:09.884549 23 controller_revision.go:162] Located ControllerRevision: "e2e-sbmf4-daemon-set-64fb5f87dc"
  STEP: Patching ControllerRevision "e2e-sbmf4-daemon-set-64fb5f87dc" @ 09/04/25 15:14:09.885
  I0904 15:14:09.893764 23 controller_revision.go:173] e2e-sbmf4-daemon-set-64fb5f87dc has been patched
  STEP: Create a new ControllerRevision @ 09/04/25 15:14:09.893
  I0904 15:14:09.897539 23 controller_revision.go:191] Created ControllerRevision: e2e-sbmf4-daemon-set-69f98b69b7
  STEP: Confirm that there are two ControllerRevisions @ 09/04/25 15:14:09.897
  I0904 15:14:09.897577 23 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0904 15:14:09.899081 23 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-sbmf4-daemon-set-64fb5f87dc" @ 09/04/25 15:14:09.899
  STEP: Confirm that there is only one ControllerRevision @ 09/04/25 15:14:09.905
  I0904 15:14:09.905611 23 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0904 15:14:09.907058 23 controller_revision.go:265] Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-sbmf4-daemon-set-69f98b69b7" @ 09/04/25 15:14:09.91
  I0904 15:14:09.917909 23 controller_revision.go:220] e2e-sbmf4-daemon-set-69f98b69b7 has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 09/04/25 15:14:09.917
  I0904 15:14:09.923804      23 warnings.go:110] "Warning: unknown field \"updateStrategy\""
  STEP: Confirm that there are two ControllerRevisions @ 09/04/25 15:14:09.923
  I0904 15:14:09.923871 23 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0904 15:14:09.949436 23 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-sbmf4-daemon-set-69f98b69b7=updated" @ 09/04/25 15:14:09.949
  STEP: Confirm that there is only one ControllerRevision @ 09/04/25 15:14:09.96
  I0904 15:14:09.960684 23 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  E0904 15:14:09.974815      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:14:09.984946 23 controller_revision.go:265] Found 1 ControllerRevisions
  I0904 15:14:09.986634 23 controller_revision.go:246] ControllerRevision "e2e-sbmf4-daemon-set-c9996cb94" has revision 3
  STEP: Deleting DaemonSet "e2e-sbmf4-daemon-set" @ 09/04/25 15:14:09.988
  STEP: deleting DaemonSet.extensions e2e-sbmf4-daemon-set in namespace controllerrevisions-6288, will wait for the garbage collector to delete the pods @ 09/04/25 15:14:09.988
  I0904 15:14:10.048797 23 resources.go:139] Deleting DaemonSet.extensions e2e-sbmf4-daemon-set took: 5.021666ms
  I0904 15:14:10.148899 23 resources.go:163] Terminating DaemonSet.extensions e2e-sbmf4-daemon-set pods took: 100.083659ms
  E0904 15:14:10.975215      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:14:11.352373 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset e2e-sbmf4-daemon-set: 0
  I0904 15:14:11.352408 23 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset e2e-sbmf4-daemon-set
  I0904 15:14:11.356444 23 controller_revision.go:73] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"27218"},"items":null}

  I0904 15:14:11.360211 23 controller_revision.go:78] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"27218"},"items":null}

  I0904 15:14:11.374200 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-6288" for this suite. @ 09/04/25 15:14:11.376
• [3.626 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:246
  STEP: Creating a kubernetes client @ 09/04/25 15:14:11.384
  I0904 15:14:11.384506 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename webhook @ 09/04/25 15:14:11.384
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:14:11.395
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:14:11.397
  STEP: Setting up server cert @ 09/04/25 15:14:11.415
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/04/25 15:14:11.625
  STEP: Deploying the webhook pod @ 09/04/25 15:14:11.629
  STEP: Wait for the deployment to be ready @ 09/04/25 15:14:11.64
  I0904 15:14:11.648518 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0904 15:14:11.975796      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:14:12.975861      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/04/25 15:14:13.659
  STEP: Verifying the service has paired with the endpoint @ 09/04/25 15:14:13.671
  E0904 15:14:13.976787      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:14:14.671528 23 util.go:419] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 09/04/25 15:14:14.676
  STEP: create a configmap that should be updated by the webhook @ 09/04/25 15:14:14.693
  I0904 15:14:14.746205 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4851" for this suite. @ 09/04/25 15:14:14.749
  STEP: Destroying namespace "webhook-markers-8511" for this suite. @ 09/04/25 15:14:14.755
• [3.376 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:192
  STEP: Creating a kubernetes client @ 09/04/25 15:14:14.76
  I0904 15:14:14.760466 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename container-runtime @ 09/04/25 15:14:14.76
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:14:14.77
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:14:14.772
  STEP: create the container @ 09/04/25 15:14:14.773
  I0904 15:14:14.784564      23 warnings.go:110] "Warning: metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]"
  STEP: wait for the container to reach Succeeded @ 09/04/25 15:14:14.784
  E0904 15:14:14.977392      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:14:15.977561      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:14:16.977961      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: get the container status @ 09/04/25 15:14:17.802
  STEP: the container should be terminated @ 09/04/25 15:14:17.804
  STEP: the termination message should be set @ 09/04/25 15:14:17.804
  I0904 15:14:17.804580 23 runtime.go:164] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 09/04/25 15:14:17.804
  I0904 15:14:17.822725 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-2411" for this suite. @ 09/04/25 15:14:17.828
• [3.074 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:287
  STEP: Creating a kubernetes client @ 09/04/25 15:14:17.834
  I0904 15:14:17.834758 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename field-validation @ 09/04/25 15:14:17.835
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:14:17.845
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:14:17.847
  I0904 15:14:17.849256 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  E0904 15:14:17.978029      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:14:18.978815      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:14:19.978894      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:14:20.910733 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-7546" for this suite. @ 09/04/25 15:14:20.914
• [3.087 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Node Lifecycle should run through the lifecycle of a node [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/node_lifecycle.go:51
  STEP: Creating a kubernetes client @ 09/04/25 15:14:20.922
  I0904 15:14:20.922269 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename fake-node @ 09/04/25 15:14:20.922
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:14:20.932
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:14:20.934
  STEP: Create "e2e-fake-node-gdl5d" @ 09/04/25 15:14:20.935
  STEP: Getting "e2e-fake-node-gdl5d" @ 09/04/25 15:14:20.941
  STEP: Patching "e2e-fake-node-gdl5d" @ 09/04/25 15:14:20.945
  STEP: Listing nodes with LabelSelector "e2e-fake-node-gdl5d=patched" @ 09/04/25 15:14:20.949
  STEP: Updating "e2e-fake-node-gdl5d" @ 09/04/25 15:14:20.95
  E0904 15:14:20.978880      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Delete "e2e-fake-node-gdl5d" @ 09/04/25 15:14:20.98
  STEP: Confirm deletion of "e2e-fake-node-gdl5d" @ 09/04/25 15:14:20.984
  I0904 15:14:20.988347 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "fake-node-7365" for this suite. @ 09/04/25 15:14:20.991
• [0.075 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:250
  STEP: Creating a kubernetes client @ 09/04/25 15:14:20.997
  I0904 15:14:20.997906 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename downward-api @ 09/04/25 15:14:20.998
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:14:21.007
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:14:21.009
  STEP: Creating a pod to test downward API volume plugin @ 09/04/25 15:14:21.011
  E0904 15:14:21.979030      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:14:22.979102      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/25 15:14:23.029
  I0904 15:14:23.031695 23 output.go:207] Trying to get logs from node ip-172-31-33-202 pod downwardapi-volume-ce4c2ab6-7492-4641-b5bc-d45e7245674c container client-container: <nil>
  STEP: delete the pod @ 09/04/25 15:14:23.044
  I0904 15:14:23.059086 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2550" for this suite. @ 09/04/25 15:14:23.064
• [2.074 seconds]
------------------------------
SSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:108
  STEP: Creating a kubernetes client @ 09/04/25 15:14:23.071
  I0904 15:14:23.071539 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename runtimeclass @ 09/04/25 15:14:23.072
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:14:23.081
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:14:23.083
  E0904 15:14:23.979236      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:14:24.979342      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:14:25.110670 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-8413" for this suite. @ 09/04/25 15:14:25.114
• [2.049 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should validate against a Deployment [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:77
  STEP: Creating a kubernetes client @ 09/04/25 15:14:25.12
  I0904 15:14:25.120513 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename validating-admission-policy @ 09/04/25 15:14:25.12
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:14:25.13
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:14:25.132
  STEP: creating the policy @ 09/04/25 15:14:25.14
  STEP: waiting until the marker is denied @ 09/04/25 15:14:25.155
  STEP: testing a replicated Deployment to be allowed @ 09/04/25 15:14:25.76
  STEP: testing a non-replicated ReplicaSet not to be denied @ 09/04/25 15:14:25.773
  I0904 15:14:25.825757 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-470" for this suite. @ 09/04/25 15:14:25.835
• [0.725 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:62
  STEP: Creating a kubernetes client @ 09/04/25 15:14:25.845
  I0904 15:14:25.845610 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename field-validation @ 09/04/25 15:14:25.846
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:14:25.856
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:14:25.858
  STEP: apply creating a deployment @ 09/04/25 15:14:25.859
  I0904 15:14:25.868705 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-745" for this suite. @ 09/04/25 15:14:25.936
• [0.098 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:135
  STEP: Creating a kubernetes client @ 09/04/25 15:14:25.944
  I0904 15:14:25.944175 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename security-context @ 09/04/25 15:14:25.944
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:14:25.953
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:14:25.955
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 09/04/25 15:14:25.957
  E0904 15:14:25.979912      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:14:26.980763      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:14:27.980795      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:14:28.981892      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/25 15:14:29.98
  E0904 15:14:29.981819      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:14:29.983043 23 output.go:207] Trying to get logs from node ip-172-31-18-79 pod security-context-7b9b2741-4250-4ae5-b803-f375903f8acb container test-container: <nil>
  STEP: delete the pod @ 09/04/25 15:14:29.999
  I0904 15:14:30.015875 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-3730" for this suite. @ 09/04/25 15:14:30.021
• [4.085 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 09/04/25 15:14:30.029
  I0904 15:14:30.029536 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename projected @ 09/04/25 15:14:30.03
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:14:30.04
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:14:30.042
  STEP: Creating projection with secret that has name projected-secret-test-map-9f170b18-5bf1-48b2-8d72-7bb41ceecf0b @ 09/04/25 15:14:30.043
  STEP: Creating a pod to test consume secrets @ 09/04/25 15:14:30.047
  E0904 15:14:30.982039      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:14:31.982443      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/25 15:14:32.064
  I0904 15:14:32.066772 23 output.go:207] Trying to get logs from node ip-172-31-33-202 pod pod-projected-secrets-fd609e4c-2772-4ed7-8dc1-d8a47f0c0b00 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/04/25 15:14:32.071
  I0904 15:14:32.089686 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4136" for this suite. @ 09/04/25 15:14:32.092
• [2.070 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:99
  STEP: Creating a kubernetes client @ 09/04/25 15:14:32.099
  I0904 15:14:32.100012 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename configmap @ 09/04/25 15:14:32.1
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:14:32.111
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:14:32.113
  STEP: Creating configMap with name configmap-test-volume-map-07f52e0c-fc38-49e1-bb88-9b5093c65d14 @ 09/04/25 15:14:32.114
  STEP: Creating a pod to test consume configMaps @ 09/04/25 15:14:32.118
  E0904 15:14:32.982629      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:14:33.982731      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/25 15:14:34.136
  I0904 15:14:34.138378 23 output.go:207] Trying to get logs from node ip-172-31-33-202 pod pod-configmaps-0db90fac-958e-419d-90d3-3147b856dd8b container agnhost-container: <nil>
  STEP: delete the pod @ 09/04/25 15:14:34.147
  I0904 15:14:34.164120 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-922" for this suite. @ 09/04/25 15:14:34.17
• [2.079 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should return chunks of results for list calls [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:83
  STEP: Creating a kubernetes client @ 09/04/25 15:14:34.179
  I0904 15:14:34.179236 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename chunking @ 09/04/25 15:14:34.179
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:14:34.19
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:14:34.191
  STEP: creating a large number of resources @ 09/04/25 15:14:34.193
  E0904 15:14:34.983723      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:14:35.983949      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:14:36.984902      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:14:37.985395      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:14:38.985828      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:14:39.985854      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:14:40.986625      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:14:41.987162      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:14:42.987815      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:14:43.988302      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:14:44.989327      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:14:45.989403      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:14:46.989997      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:14:47.991022      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:14:48.991772      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:14:49.992445      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:14:50.992854      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving those results in paged fashion several times @ 09/04/25 15:14:51.885
  I0904 15:14:51.932731 23 chunking.go:98] Retrieved 17/17 results with rv 28260 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgyNjAsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMTZcdTAwMDAifQ
  I0904 15:14:51.981148 23 chunking.go:98] Retrieved 17/17 results with rv 28260 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgyNjAsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzNcdTAwMDAifQ
  E0904 15:14:51.993228      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:14:52.031320 23 chunking.go:98] Retrieved 17/17 results with rv 28260 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgyNjAsInN0YXJ0IjoiL3RlbXBsYXRlLTAwNTBcdTAwMDAifQ
  I0904 15:14:52.080694 23 chunking.go:98] Retrieved 17/17 results with rv 28260 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgyNjAsInN0YXJ0IjoiL3RlbXBsYXRlLTAwNjdcdTAwMDAifQ
  I0904 15:14:52.131106 23 chunking.go:98] Retrieved 17/17 results with rv 28260 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgyNjAsInN0YXJ0IjoiL3RlbXBsYXRlLTAwODRcdTAwMDAifQ
  I0904 15:14:52.181527 23 chunking.go:98] Retrieved 17/17 results with rv 28260 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgyNjAsInN0YXJ0IjoiL3RlbXBsYXRlLTAxMDFcdTAwMDAifQ
  I0904 15:14:52.230810 23 chunking.go:98] Retrieved 17/17 results with rv 28260 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgyNjAsInN0YXJ0IjoiL3RlbXBsYXRlLTAxMThcdTAwMDAifQ
  I0904 15:14:52.281012 23 chunking.go:98] Retrieved 17/17 results with rv 28260 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgyNjAsInN0YXJ0IjoiL3RlbXBsYXRlLTAxMzVcdTAwMDAifQ
  I0904 15:14:52.331116 23 chunking.go:98] Retrieved 17/17 results with rv 28260 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgyNjAsInN0YXJ0IjoiL3RlbXBsYXRlLTAxNTJcdTAwMDAifQ
  I0904 15:14:52.381410 23 chunking.go:98] Retrieved 17/17 results with rv 28260 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgyNjAsInN0YXJ0IjoiL3RlbXBsYXRlLTAxNjlcdTAwMDAifQ
  I0904 15:14:52.430568 23 chunking.go:98] Retrieved 17/17 results with rv 28260 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgyNjAsInN0YXJ0IjoiL3RlbXBsYXRlLTAxODZcdTAwMDAifQ
  I0904 15:14:52.480857 23 chunking.go:98] Retrieved 17/17 results with rv 28260 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgyNjAsInN0YXJ0IjoiL3RlbXBsYXRlLTAyMDNcdTAwMDAifQ
  I0904 15:14:52.531027 23 chunking.go:98] Retrieved 17/17 results with rv 28260 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgyNjAsInN0YXJ0IjoiL3RlbXBsYXRlLTAyMjBcdTAwMDAifQ
  I0904 15:14:52.581121 23 chunking.go:98] Retrieved 17/17 results with rv 28260 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgyNjAsInN0YXJ0IjoiL3RlbXBsYXRlLTAyMzdcdTAwMDAifQ
  I0904 15:14:52.631443 23 chunking.go:98] Retrieved 17/17 results with rv 28260 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgyNjAsInN0YXJ0IjoiL3RlbXBsYXRlLTAyNTRcdTAwMDAifQ
  I0904 15:14:52.680763 23 chunking.go:98] Retrieved 17/17 results with rv 28260 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgyNjAsInN0YXJ0IjoiL3RlbXBsYXRlLTAyNzFcdTAwMDAifQ
  I0904 15:14:52.731068 23 chunking.go:98] Retrieved 17/17 results with rv 28260 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgyNjAsInN0YXJ0IjoiL3RlbXBsYXRlLTAyODhcdTAwMDAifQ
  I0904 15:14:52.781340 23 chunking.go:98] Retrieved 17/17 results with rv 28260 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgyNjAsInN0YXJ0IjoiL3RlbXBsYXRlLTAzMDVcdTAwMDAifQ
  I0904 15:14:52.830840 23 chunking.go:98] Retrieved 17/17 results with rv 28260 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgyNjAsInN0YXJ0IjoiL3RlbXBsYXRlLTAzMjJcdTAwMDAifQ
  I0904 15:14:52.881021 23 chunking.go:98] Retrieved 17/17 results with rv 28260 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgyNjAsInN0YXJ0IjoiL3RlbXBsYXRlLTAzMzlcdTAwMDAifQ
  I0904 15:14:52.931163 23 chunking.go:98] Retrieved 17/17 results with rv 28260 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgyNjAsInN0YXJ0IjoiL3RlbXBsYXRlLTAzNTZcdTAwMDAifQ
  I0904 15:14:52.981484 23 chunking.go:98] Retrieved 17/17 results with rv 28260 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgyNjAsInN0YXJ0IjoiL3RlbXBsYXRlLTAzNzNcdTAwMDAifQ
  E0904 15:14:52.993655      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:14:53.030571 23 chunking.go:98] Retrieved 17/17 results with rv 28260 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgyNjAsInN0YXJ0IjoiL3RlbXBsYXRlLTAzOTBcdTAwMDAifQ
  I0904 15:14:53.080641 23 chunking.go:98] Retrieved 9/17 results with rv 28260 and continue 
  I0904 15:14:53.132770 23 chunking.go:98] Retrieved 17/17 results with rv 28261 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgyNjEsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMTZcdTAwMDAifQ
  I0904 15:14:53.181184 23 chunking.go:98] Retrieved 17/17 results with rv 28261 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgyNjEsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzNcdTAwMDAifQ
  I0904 15:14:53.231337 23 chunking.go:98] Retrieved 17/17 results with rv 28261 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgyNjEsInN0YXJ0IjoiL3RlbXBsYXRlLTAwNTBcdTAwMDAifQ
  I0904 15:14:53.280622 23 chunking.go:98] Retrieved 17/17 results with rv 28261 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgyNjEsInN0YXJ0IjoiL3RlbXBsYXRlLTAwNjdcdTAwMDAifQ
  I0904 15:14:53.330883 23 chunking.go:98] Retrieved 17/17 results with rv 28261 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgyNjEsInN0YXJ0IjoiL3RlbXBsYXRlLTAwODRcdTAwMDAifQ
  I0904 15:14:53.381034 23 chunking.go:98] Retrieved 17/17 results with rv 28261 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgyNjEsInN0YXJ0IjoiL3RlbXBsYXRlLTAxMDFcdTAwMDAifQ
  I0904 15:14:53.431488 23 chunking.go:98] Retrieved 17/17 results with rv 28261 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgyNjEsInN0YXJ0IjoiL3RlbXBsYXRlLTAxMThcdTAwMDAifQ
  I0904 15:14:53.480789 23 chunking.go:98] Retrieved 17/17 results with rv 28261 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgyNjEsInN0YXJ0IjoiL3RlbXBsYXRlLTAxMzVcdTAwMDAifQ
  I0904 15:14:53.531055 23 chunking.go:98] Retrieved 17/17 results with rv 28261 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgyNjEsInN0YXJ0IjoiL3RlbXBsYXRlLTAxNTJcdTAwMDAifQ
  I0904 15:14:53.581222 23 chunking.go:98] Retrieved 17/17 results with rv 28261 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgyNjEsInN0YXJ0IjoiL3RlbXBsYXRlLTAxNjlcdTAwMDAifQ
  I0904 15:14:53.631566 23 chunking.go:98] Retrieved 17/17 results with rv 28261 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgyNjEsInN0YXJ0IjoiL3RlbXBsYXRlLTAxODZcdTAwMDAifQ
  I0904 15:14:53.680842 23 chunking.go:98] Retrieved 17/17 results with rv 28261 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgyNjEsInN0YXJ0IjoiL3RlbXBsYXRlLTAyMDNcdTAwMDAifQ
  I0904 15:14:53.731056 23 chunking.go:98] Retrieved 17/17 results with rv 28261 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgyNjEsInN0YXJ0IjoiL3RlbXBsYXRlLTAyMjBcdTAwMDAifQ
  I0904 15:14:53.781114 23 chunking.go:98] Retrieved 17/17 results with rv 28261 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgyNjEsInN0YXJ0IjoiL3RlbXBsYXRlLTAyMzdcdTAwMDAifQ
  I0904 15:14:53.831412 23 chunking.go:98] Retrieved 17/17 results with rv 28261 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgyNjEsInN0YXJ0IjoiL3RlbXBsYXRlLTAyNTRcdTAwMDAifQ
  I0904 15:14:53.880653 23 chunking.go:98] Retrieved 17/17 results with rv 28261 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgyNjEsInN0YXJ0IjoiL3RlbXBsYXRlLTAyNzFcdTAwMDAifQ
  I0904 15:14:53.930856 23 chunking.go:98] Retrieved 17/17 results with rv 28261 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgyNjEsInN0YXJ0IjoiL3RlbXBsYXRlLTAyODhcdTAwMDAifQ
  I0904 15:14:53.980945 23 chunking.go:98] Retrieved 17/17 results with rv 28261 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgyNjEsInN0YXJ0IjoiL3RlbXBsYXRlLTAzMDVcdTAwMDAifQ
  E0904 15:14:53.994095      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:14:54.031483 23 chunking.go:98] Retrieved 17/17 results with rv 28261 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgyNjEsInN0YXJ0IjoiL3RlbXBsYXRlLTAzMjJcdTAwMDAifQ
  I0904 15:14:54.081027 23 chunking.go:98] Retrieved 17/17 results with rv 28261 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgyNjEsInN0YXJ0IjoiL3RlbXBsYXRlLTAzMzlcdTAwMDAifQ
  I0904 15:14:54.131351 23 chunking.go:98] Retrieved 17/17 results with rv 28261 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgyNjEsInN0YXJ0IjoiL3RlbXBsYXRlLTAzNTZcdTAwMDAifQ
  I0904 15:14:54.181170 23 chunking.go:98] Retrieved 17/17 results with rv 28261 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgyNjEsInN0YXJ0IjoiL3RlbXBsYXRlLTAzNzNcdTAwMDAifQ
  I0904 15:14:54.231840 23 chunking.go:98] Retrieved 17/17 results with rv 28261 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgyNjEsInN0YXJ0IjoiL3RlbXBsYXRlLTAzOTBcdTAwMDAifQ
  I0904 15:14:54.281116 23 chunking.go:98] Retrieved 9/17 results with rv 28261 and continue 
  I0904 15:14:54.336125 23 chunking.go:98] Retrieved 17/17 results with rv 28263 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgyNjMsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMTZcdTAwMDAifQ
  I0904 15:14:54.381540 23 chunking.go:98] Retrieved 17/17 results with rv 28263 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgyNjMsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzNcdTAwMDAifQ
  I0904 15:14:54.431339 23 chunking.go:98] Retrieved 17/17 results with rv 28263 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgyNjMsInN0YXJ0IjoiL3RlbXBsYXRlLTAwNTBcdTAwMDAifQ
  I0904 15:14:54.480634 23 chunking.go:98] Retrieved 17/17 results with rv 28263 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgyNjMsInN0YXJ0IjoiL3RlbXBsYXRlLTAwNjdcdTAwMDAifQ
  I0904 15:14:54.530912 23 chunking.go:98] Retrieved 17/17 results with rv 28263 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgyNjMsInN0YXJ0IjoiL3RlbXBsYXRlLTAwODRcdTAwMDAifQ
  I0904 15:14:54.581196 23 chunking.go:98] Retrieved 17/17 results with rv 28263 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgyNjMsInN0YXJ0IjoiL3RlbXBsYXRlLTAxMDFcdTAwMDAifQ
  I0904 15:14:54.631495 23 chunking.go:98] Retrieved 17/17 results with rv 28263 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgyNjMsInN0YXJ0IjoiL3RlbXBsYXRlLTAxMThcdTAwMDAifQ
  I0904 15:14:54.680687 23 chunking.go:98] Retrieved 17/17 results with rv 28263 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgyNjMsInN0YXJ0IjoiL3RlbXBsYXRlLTAxMzVcdTAwMDAifQ
  I0904 15:14:54.730998 23 chunking.go:98] Retrieved 17/17 results with rv 28263 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgyNjMsInN0YXJ0IjoiL3RlbXBsYXRlLTAxNTJcdTAwMDAifQ
  I0904 15:14:54.781397 23 chunking.go:98] Retrieved 17/17 results with rv 28263 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgyNjMsInN0YXJ0IjoiL3RlbXBsYXRlLTAxNjlcdTAwMDAifQ
  I0904 15:14:54.830706 23 chunking.go:98] Retrieved 17/17 results with rv 28263 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgyNjMsInN0YXJ0IjoiL3RlbXBsYXRlLTAxODZcdTAwMDAifQ
  I0904 15:14:54.881158 23 chunking.go:98] Retrieved 17/17 results with rv 28263 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgyNjMsInN0YXJ0IjoiL3RlbXBsYXRlLTAyMDNcdTAwMDAifQ
  I0904 15:14:54.931532 23 chunking.go:98] Retrieved 17/17 results with rv 28263 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgyNjMsInN0YXJ0IjoiL3RlbXBsYXRlLTAyMjBcdTAwMDAifQ
  I0904 15:14:54.980708 23 chunking.go:98] Retrieved 17/17 results with rv 28263 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgyNjMsInN0YXJ0IjoiL3RlbXBsYXRlLTAyMzdcdTAwMDAifQ
  E0904 15:14:54.994754      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:14:55.030812 23 chunking.go:98] Retrieved 17/17 results with rv 28263 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgyNjMsInN0YXJ0IjoiL3RlbXBsYXRlLTAyNTRcdTAwMDAifQ
  I0904 15:14:55.080945 23 chunking.go:98] Retrieved 17/17 results with rv 28263 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgyNjMsInN0YXJ0IjoiL3RlbXBsYXRlLTAyNzFcdTAwMDAifQ
  I0904 15:14:55.131044 23 chunking.go:98] Retrieved 17/17 results with rv 28263 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgyNjMsInN0YXJ0IjoiL3RlbXBsYXRlLTAyODhcdTAwMDAifQ
  I0904 15:14:55.181262 23 chunking.go:98] Retrieved 17/17 results with rv 28263 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgyNjMsInN0YXJ0IjoiL3RlbXBsYXRlLTAzMDVcdTAwMDAifQ
  I0904 15:14:55.231522 23 chunking.go:98] Retrieved 17/17 results with rv 28263 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgyNjMsInN0YXJ0IjoiL3RlbXBsYXRlLTAzMjJcdTAwMDAifQ
  I0904 15:14:55.280837 23 chunking.go:98] Retrieved 17/17 results with rv 28263 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgyNjMsInN0YXJ0IjoiL3RlbXBsYXRlLTAzMzlcdTAwMDAifQ
  I0904 15:14:55.331116 23 chunking.go:98] Retrieved 17/17 results with rv 28263 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgyNjMsInN0YXJ0IjoiL3RlbXBsYXRlLTAzNTZcdTAwMDAifQ
  I0904 15:14:55.381291 23 chunking.go:98] Retrieved 17/17 results with rv 28263 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgyNjMsInN0YXJ0IjoiL3RlbXBsYXRlLTAzNzNcdTAwMDAifQ
  I0904 15:14:55.431487 23 chunking.go:98] Retrieved 17/17 results with rv 28263 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjgyNjMsInN0YXJ0IjoiL3RlbXBsYXRlLTAzOTBcdTAwMDAifQ
  I0904 15:14:55.480680 23 chunking.go:98] Retrieved 9/17 results with rv 28263 and continue 
  STEP: retrieving those results all at once @ 09/04/25 15:14:55.48
  I0904 15:14:55.536893 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-9067" for this suite. @ 09/04/25 15:14:55.583
• [21.460 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:491
  STEP: Creating a kubernetes client @ 09/04/25 15:14:55.639
  I0904 15:14:55.639180 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename webhook @ 09/04/25 15:14:55.639
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:14:55.649
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:14:55.651
  STEP: Setting up server cert @ 09/04/25 15:14:55.67
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/04/25 15:14:55.819
  STEP: Deploying the webhook pod @ 09/04/25 15:14:55.826
  STEP: Wait for the deployment to be ready @ 09/04/25 15:14:55.837
  I0904 15:14:55.842753 23 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0904 15:14:55.995094      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:14:56.995805      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/04/25 15:14:57.855
  STEP: Verifying the service has paired with the endpoint @ 09/04/25 15:14:57.866
  E0904 15:14:57.996116      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:14:58.866962 23 util.go:419] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 09/04/25 15:14:58.872
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 09/04/25 15:14:58.889
  STEP: Creating a configMap that should not be mutated @ 09/04/25 15:14:58.897
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 09/04/25 15:14:58.907
  STEP: Creating a configMap that should be mutated @ 09/04/25 15:14:58.913
  I0904 15:14:58.972452 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2360" for this suite. @ 09/04/25 15:14:58.977
  STEP: Destroying namespace "webhook-markers-6020" for this suite. @ 09/04/25 15:14:58.986
• [3.354 seconds]
------------------------------
SS
------------------------------
[sig-apps] Job with successPolicy succeededIndexes rule should succeeded even when some indexes remain pending [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:524
  STEP: Creating a kubernetes client @ 09/04/25 15:14:58.992
  I0904 15:14:58.992973 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename job @ 09/04/25 15:14:58.993
  E0904 15:14:58.996844      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:14:59.003
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:14:59.004
  STEP: Creating an indexed job with successPolicy succeededIndexes rule @ 09/04/25 15:14:59.006
  STEP: Awaiting for the job to have the interim SuccessCriteriaMet with SuccessPolicy reason condition @ 09/04/25 15:14:59.012
  E0904 15:14:59.996964      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:15:00.997822      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:15:01.997934      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:15:02.997992      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensure that the job reaches completions @ 09/04/25 15:15:03.026
  STEP: Verifying that the only appropriately index succeeded @ 09/04/25 15:15:03.031
  I0904 15:15:03.035112 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-2694" for this suite. @ 09/04/25 15:15:03.041
• [4.055 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:284
  STEP: Creating a kubernetes client @ 09/04/25 15:15:03.048
  I0904 15:15:03.048728 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename taint-single-pod @ 09/04/25 15:15:03.049
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:15:03.058
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:15:03.06
  I0904 15:15:03.061880 23 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0904 15:15:03.998168      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:15:04.998222      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:15:05.998380      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:15:06.999315      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:15:07.999735      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:15:08.999890      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:15:10.000078      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:15:11.000314      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:15:12.000379      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:15:13.000581      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:15:14.000741      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:15:15.000961      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:15:16.001105      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:15:17.001850      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:15:18.002004      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:15:19.002068      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:15:20.002191      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:15:21.002399      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:15:22.003359      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:15:23.003465      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:15:24.004418      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:15:25.005101      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:15:26.005705      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:15:27.006786      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:15:28.007774      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:15:29.008798      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:15:30.009007      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:15:31.009175      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:15:32.009241      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:15:33.009419      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:15:34.010258      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:15:35.010407      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:15:36.010536      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:15:37.011331      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:15:38.011463      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:15:39.011712      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:15:40.011796      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:15:41.012214      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:15:42.012315      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:15:43.012800      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:15:44.012935      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:15:45.013141      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:15:46.013548      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:15:47.013662      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:15:48.014470      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:15:49.014860      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:15:50.014954      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:15:51.015792      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:15:52.016259      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:15:53.016433      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:15:54.016718      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:15:55.017790      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:15:56.018186      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:15:57.018285      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:15:58.018398      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:15:59.018790      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:16:00.018879      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:16:01.018975      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:16:02.019252      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:16:03.019447      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:16:03.062576 23 util.go:390] Waiting for terminating namespaces to be deleted...
  I0904 15:16:03.069315 23 taints.go:144] Starting informer...
  STEP: Starting pod... @ 09/04/25 15:16:03.069
  I0904 15:16:03.279581 23 taints.go:294] Pod is running on ip-172-31-33-202. Tainting Node
  STEP: Trying to apply a taint on the Node @ 09/04/25 15:16:03.279
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 09/04/25 15:16:03.29
  STEP: Waiting short time to make sure Pod is queued for deletion @ 09/04/25 15:16:03.293
  I0904 15:16:03.293095 23 taints.go:313] Pod wasn't evicted. Proceeding
  I0904 15:16:03.293109 23 taints.go:320] Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 09/04/25 15:16:03.301
  STEP: Waiting some time to make sure that toleration time passed. @ 09/04/25 15:16:03.318
  E0904 15:16:04.020051      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:16:05.020165      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:16:06.020272      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:16:07.020407      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:16:08.020525      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:16:09.020724      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:16:10.020945      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:16:11.021814      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:16:12.021876      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:16:13.021996      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:16:14.022814      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:16:15.022983      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:16:16.023100      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:16:17.023981      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:16:18.024159      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:16:19.024346      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:16:20.024794      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:16:21.024887      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:16:22.024984      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:16:23.025079      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:16:24.025795      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:16:25.025971      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:16:26.026787      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:16:27.027561      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:16:28.027933      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:16:29.027862      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:16:30.028123      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:16:31.028226      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:16:32.028306      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:16:33.028839      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:16:34.029397      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:16:35.029541      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:16:36.029723      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:16:37.029860      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:16:38.030078      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:16:39.030145      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:16:40.030333      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:16:41.030791      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:16:42.030924      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:16:43.031130      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:16:44.031311      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:16:45.031497      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:16:46.031709      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:16:47.031879      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:16:48.032054      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:16:49.032212      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:16:50.032399      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:16:51.032795      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:16:52.032965      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:16:53.033939      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:16:54.034019      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:16:55.034355      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:16:56.034447      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:16:57.034533      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:16:58.034855      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:16:59.034951      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:17:00.035945      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:17:01.036043      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:17:02.036784      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:17:03.036923      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:17:04.037732      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:17:05.037878      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:17:06.038066      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:17:07.038183      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:17:08.038294      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:17:09.038413      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:17:10.038605      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:17:11.038842      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:17:12.038941      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:17:13.039253      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:17:14.039395      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:17:15.039465      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:17:16.039695      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:17:17.040469      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:17:18.040622      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:17:18.318689 23 taints.go:329] Pod wasn't evicted. Test successful
  I0904 15:17:18.318843 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-5640" for this suite. @ 09/04/25 15:17:18.323
• [135.282 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 09/04/25 15:17:18.33
  I0904 15:17:18.330714 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename secrets @ 09/04/25 15:17:18.331
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:17:18.343
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:17:18.344
  STEP: Creating secret with name secret-test-5634c31d-cad3-4627-bf91-5bc6ea043885 @ 09/04/25 15:17:18.346
  STEP: Creating a pod to test consume secrets @ 09/04/25 15:17:18.353
  E0904 15:17:19.040713      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:17:20.040806      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/25 15:17:20.37
  I0904 15:17:20.373750 23 output.go:207] Trying to get logs from node ip-172-31-33-202 pod pod-secrets-5e664717-d58b-42f7-98fc-70bd16eedc25 container secret-volume-test: <nil>
  STEP: delete the pod @ 09/04/25 15:17:20.385
  I0904 15:17:20.403239 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5428" for this suite. @ 09/04/25 15:17:20.407
• [2.083 seconds]
------------------------------
[sig-node] PreStop should call prestop when killing a pod [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 09/04/25 15:17:20.413
  I0904 15:17:20.413751 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename prestop @ 09/04/25 15:17:20.414
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:17:20.424
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:17:20.425
  STEP: Creating server pod server in namespace prestop-1261 @ 09/04/25 15:17:20.427
  STEP: Waiting for pods to come up. @ 09/04/25 15:17:20.435
  E0904 15:17:21.040943      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:17:22.041031      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating tester pod tester in namespace prestop-1261 @ 09/04/25 15:17:22.446
  E0904 15:17:23.042102      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:17:24.042844      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting pre-stop pod @ 09/04/25 15:17:24.457
  E0904 15:17:25.043293      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:17:26.043388      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:17:27.043467      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:17:28.043711      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:17:29.043763      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:17:29.475518 23 pre_stop.go:140] Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  STEP: Deleting the server pod @ 09/04/25 15:17:29.475
  I0904 15:17:29.487733 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "prestop-1261" for this suite. @ 09/04/25 15:17:29.491
• [9.082 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 09/04/25 15:17:29.496
  I0904 15:17:29.496152 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename secrets @ 09/04/25 15:17:29.496
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:17:29.509
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:17:29.511
  STEP: Creating secret with name secret-test-4dee3fb1-b289-4506-9e71-12aefcd175f9 @ 09/04/25 15:17:29.528
  STEP: Creating a pod to test consume secrets @ 09/04/25 15:17:29.531
  E0904 15:17:30.044524      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:17:31.045063      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:17:32.045810      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:17:33.045911      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/25 15:17:33.55
  I0904 15:17:33.551994 23 output.go:207] Trying to get logs from node ip-172-31-33-202 pod pod-secrets-9324511d-0e16-43a8-852a-f1fa8c1a2c8c container secret-volume-test: <nil>
  STEP: delete the pod @ 09/04/25 15:17:33.561
  I0904 15:17:33.576218 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6101" for this suite. @ 09/04/25 15:17:33.58
  STEP: Destroying namespace "secret-namespace-6752" for this suite. @ 09/04/25 15:17:33.587
• [4.097 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:311
  STEP: Creating a kubernetes client @ 09/04/25 15:17:33.593
  I0904 15:17:33.593268 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/04/25 15:17:33.593
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:17:33.603
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:17:33.605
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 09/04/25 15:17:33.606
  I0904 15:17:33.607187 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  E0904 15:17:34.046621      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:17:35.047207      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:17:36.047649      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:17:37.047841      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:17:38.048157      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 09/04/25 15:17:38.481
  I0904 15:17:38.481837 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  E0904 15:17:39.048991      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:17:39.749110 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  E0904 15:17:40.049109      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:17:41.049575      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:17:42.050691      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:17:43.051519      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:17:44.052098      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:17:44.640663 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5138" for this suite. @ 09/04/25 15:17:44.646
• [11.060 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 09/04/25 15:17:44.653
  I0904 15:17:44.653660 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename subpath @ 09/04/25 15:17:44.654
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:17:44.666
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:17:44.668
  STEP: Setting up data @ 09/04/25 15:17:44.67
  STEP: Creating pod pod-subpath-test-configmap-j7l9 @ 09/04/25 15:17:44.68
  STEP: Creating a pod to test atomic-volume-subpath @ 09/04/25 15:17:44.68
  E0904 15:17:45.052237      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:17:46.052891      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:17:47.053010      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:17:48.053935      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:17:49.054681      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:17:50.054751      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:17:51.054844      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:17:52.054916      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:17:53.055037      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:17:54.055797      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:17:55.056235      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:17:56.056386      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:17:57.057232      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:17:58.057783      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:17:59.058515      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:18:00.058622      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:18:01.058772      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:18:02.058886      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:18:03.059091      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:18:04.059205      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:18:05.059757      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:18:06.060288      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:18:07.060430      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:18:08.061185      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/25 15:18:08.763
  I0904 15:18:08.765960 23 output.go:207] Trying to get logs from node ip-172-31-33-202 pod pod-subpath-test-configmap-j7l9 container test-container-subpath-configmap-j7l9: <nil>
  STEP: delete the pod @ 09/04/25 15:18:08.78
  STEP: Deleting pod pod-subpath-test-configmap-j7l9 @ 09/04/25 15:18:08.796
  I0904 15:18:08.796935 23 delete.go:78] Deleting pod "pod-subpath-test-configmap-j7l9" in namespace "subpath-9913"
  I0904 15:18:08.803473 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-9913" for this suite. @ 09/04/25 15:18:08.807
• [24.160 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:124
  STEP: Creating a kubernetes client @ 09/04/25 15:18:08.813
  I0904 15:18:08.813954 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename projected @ 09/04/25 15:18:08.814
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:18:08.827
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:18:08.829
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-8043348a-2a4e-48f3-a698-704e6c44683f @ 09/04/25 15:18:08.908
  STEP: Creating the pod @ 09/04/25 15:18:08.912
  E0904 15:18:09.061534      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:18:10.061930      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Updating configmap projected-configmap-test-upd-8043348a-2a4e-48f3-a698-704e6c44683f @ 09/04/25 15:18:10.937
  STEP: waiting to observe update in volume @ 09/04/25 15:18:10.943
  E0904 15:18:11.061983      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:18:12.062818      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:18:13.063235      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:18:14.063664      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:18:15.064145      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:18:16.064327      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:18:17.065370      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:18:18.065787      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:18:19.065979      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:18:20.066109      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:18:21.066686      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:18:22.066826      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:18:23.066881      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:18:24.067813      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:18:25.068520      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:18:26.068720      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:18:27.069263      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:18:28.069816      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:18:29.070799      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:18:30.070949      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:18:31.071461      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:18:32.072557      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:18:33.073042      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:18:34.073257      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:18:35.073828      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:18:36.074704      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:18:37.075369      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:18:38.075525      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:18:39.076496      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:18:40.076731      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:18:41.076806      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:18:42.076919      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:18:43.076993      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:18:44.077143      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:18:45.077218      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:18:46.077963      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:18:47.078091      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:18:48.078209      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:18:49.078280      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:18:50.079173      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:18:51.079384      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:18:52.080317      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:18:53.080516      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:18:54.080757      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:18:55.080857      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:18:56.080992      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:18:57.081137      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:18:58.081218      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:18:59.081395      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:19:00.081511      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:19:01.081667      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:19:02.081781      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:19:03.081904      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:19:04.082087      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:19:05.082192      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:19:06.082649      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:19:07.082643      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:19:08.082837      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:19:09.082912      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:19:10.083979      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:19:11.084829      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:19:12.085784      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:19:13.086799      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:19:14.086907      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:19:15.086984      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:19:16.088056      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:19:17.088174      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:19:18.088310      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:19:19.088476      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:19:20.088609      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:19:21.088814      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:19:22.088951      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:19:23.089049      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:19:24.089214      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:19:25.089428      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:19:26.089625      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:19:27.089725      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:19:28.090743      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:19:29.090869      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:19:30.091029      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:19:31.091241      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:19:32.091356      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:19:33.091511      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:19:33.328941 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5088" for this suite. @ 09/04/25 15:19:33.332
• [84.525 seconds]
------------------------------
SS
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2267
  STEP: Creating a kubernetes client @ 09/04/25 15:19:33.339
  I0904 15:19:33.339170 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename services @ 09/04/25 15:19:33.339
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:19:33.352
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:19:33.354
  STEP: creating service in namespace services-4802 @ 09/04/25 15:19:33.356
  STEP: creating service affinity-nodeport in namespace services-4802 @ 09/04/25 15:19:33.356
  I0904 15:19:33.384808 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0904 15:19:34.091658      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:19:35.091785      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:19:35.412837 23 resource.go:344] Creating new exec pod
  E0904 15:19:36.091889      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:19:37.092015      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:19:37.432693 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=services-4802 exec execpod-affinity4sj4f -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  I0904 15:19:37.516981 23 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport 80\nConnection to affinity-nodeport (10.152.183.176) 80 port [tcp/http] succeeded!\n"
  I0904 15:19:37.517029 23 builder.go:157] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0904 15:19:37.517077 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=services-4802 exec execpod-affinity4sj4f -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.176 80'
  I0904 15:19:37.590749 23 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.176 80\nConnection to 10.152.183.176 80 port [tcp/http] succeeded!\n"
  I0904 15:19:37.590793 23 builder.go:157] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0904 15:19:37.590844 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=services-4802 exec execpod-affinity4sj4f -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.87.111 31432'
  I0904 15:19:37.670635 23 builder.go:156] stderr: "+ + nc -v -t -w 2 172.31.87.111 31432\necho hostName\nConnection to 172.31.87.111 31432 port [tcp/*] succeeded!\n"
  I0904 15:19:37.670673 23 builder.go:157] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0904 15:19:37.670746 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=services-4802 exec execpod-affinity4sj4f -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.18.79 31432'
  I0904 15:19:37.748133 23 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.18.79 31432\nConnection to 172.31.18.79 31432 port [tcp/*] succeeded!\n"
  I0904 15:19:37.748167 23 builder.go:157] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0904 15:19:37.748227 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=services-4802 exec execpod-affinity4sj4f -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://172.31.18.79:31432/ ; done'
  I0904 15:19:37.922438 23 builder.go:156] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.18.79:31432/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.18.79:31432/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.18.79:31432/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.18.79:31432/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.18.79:31432/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.18.79:31432/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.18.79:31432/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.18.79:31432/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.18.79:31432/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.18.79:31432/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.18.79:31432/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.18.79:31432/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.18.79:31432/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.18.79:31432/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.18.79:31432/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.18.79:31432/\n"
  I0904 15:19:37.922478 23 builder.go:157] stdout: "\naffinity-nodeport-65758f6cfc-sjp5n\naffinity-nodeport-65758f6cfc-sjp5n\naffinity-nodeport-65758f6cfc-sjp5n\naffinity-nodeport-65758f6cfc-sjp5n\naffinity-nodeport-65758f6cfc-sjp5n\naffinity-nodeport-65758f6cfc-sjp5n\naffinity-nodeport-65758f6cfc-sjp5n\naffinity-nodeport-65758f6cfc-sjp5n\naffinity-nodeport-65758f6cfc-sjp5n\naffinity-nodeport-65758f6cfc-sjp5n\naffinity-nodeport-65758f6cfc-sjp5n\naffinity-nodeport-65758f6cfc-sjp5n\naffinity-nodeport-65758f6cfc-sjp5n\naffinity-nodeport-65758f6cfc-sjp5n\naffinity-nodeport-65758f6cfc-sjp5n\naffinity-nodeport-65758f6cfc-sjp5n"
  I0904 15:19:37.922489 23 service.go:225] Received response from host: affinity-nodeport-65758f6cfc-sjp5n
  I0904 15:19:37.922495 23 service.go:225] Received response from host: affinity-nodeport-65758f6cfc-sjp5n
  I0904 15:19:37.922505 23 service.go:225] Received response from host: affinity-nodeport-65758f6cfc-sjp5n
  I0904 15:19:37.922512 23 service.go:225] Received response from host: affinity-nodeport-65758f6cfc-sjp5n
  I0904 15:19:37.922517 23 service.go:225] Received response from host: affinity-nodeport-65758f6cfc-sjp5n
  I0904 15:19:37.922521 23 service.go:225] Received response from host: affinity-nodeport-65758f6cfc-sjp5n
  I0904 15:19:37.922525 23 service.go:225] Received response from host: affinity-nodeport-65758f6cfc-sjp5n
  I0904 15:19:37.922529 23 service.go:225] Received response from host: affinity-nodeport-65758f6cfc-sjp5n
  I0904 15:19:37.922535 23 service.go:225] Received response from host: affinity-nodeport-65758f6cfc-sjp5n
  I0904 15:19:37.922542 23 service.go:225] Received response from host: affinity-nodeport-65758f6cfc-sjp5n
  I0904 15:19:37.922548 23 service.go:225] Received response from host: affinity-nodeport-65758f6cfc-sjp5n
  I0904 15:19:37.922552 23 service.go:225] Received response from host: affinity-nodeport-65758f6cfc-sjp5n
  I0904 15:19:37.922556 23 service.go:225] Received response from host: affinity-nodeport-65758f6cfc-sjp5n
  I0904 15:19:37.922560 23 service.go:225] Received response from host: affinity-nodeport-65758f6cfc-sjp5n
  I0904 15:19:37.922564 23 service.go:225] Received response from host: affinity-nodeport-65758f6cfc-sjp5n
  I0904 15:19:37.922569 23 service.go:225] Received response from host: affinity-nodeport-65758f6cfc-sjp5n
  I0904 15:19:37.922645 23 service.go:4469] Cleaning up the exec pod
  I0904 15:19:37.973308 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4802" for this suite. @ 09/04/25 15:19:37.978
• [4.655 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:123
  STEP: Creating a kubernetes client @ 09/04/25 15:19:37.994
  I0904 15:19:37.994481 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename podtemplate @ 09/04/25 15:19:37.994
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:19:38.007
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:19:38.009
  STEP: Create set of pod templates @ 09/04/25 15:19:38.011
  I0904 15:19:38.018782 23 podtemplates.go:143] created test-podtemplate-1
  I0904 15:19:38.022526 23 podtemplates.go:143] created test-podtemplate-2
  I0904 15:19:38.026056 23 podtemplates.go:143] created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 09/04/25 15:19:38.026
  STEP: delete collection of pod templates @ 09/04/25 15:19:38.03
  I0904 15:19:38.030058 23 podtemplates.go:158] requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 09/04/25 15:19:38.047
  I0904 15:19:38.047331 23 podtemplates.go:219] requesting list of pod templates to confirm quantity
  I0904 15:19:38.050214 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-2482" for this suite. @ 09/04/25 15:19:38.078
• [0.092 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:248
  STEP: Creating a kubernetes client @ 09/04/25 15:19:38.086
  I0904 15:19:38.086211 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename downward-api @ 09/04/25 15:19:38.086
  E0904 15:19:38.092531      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:19:38.098
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:19:38.1
  STEP: Creating a pod to test downward api env vars @ 09/04/25 15:19:38.101
  E0904 15:19:39.092736      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:19:40.092753      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/25 15:19:40.125
  I0904 15:19:40.127743 23 output.go:207] Trying to get logs from node ip-172-31-18-79 pod downward-api-ae03d010-71d1-433d-8d46-5b4cbffcfb82 container dapi-container: <nil>
  STEP: delete the pod @ 09/04/25 15:19:40.144
  I0904 15:19:40.160030 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-421" for this suite. @ 09/04/25 15:19:40.162
• [2.082 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:918
  STEP: Creating a kubernetes client @ 09/04/25 15:19:40.168
  I0904 15:19:40.168761 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename statefulset @ 09/04/25 15:19:40.169
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:19:40.181
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:19:40.183
  STEP: Creating service test in namespace statefulset-3908 @ 09/04/25 15:19:40.184
  I0904 15:19:40.191002      23 warnings.go:110] "Warning: spec.SessionAffinity is ignored for headless services"
  STEP: Creating statefulset ss in namespace statefulset-3908 @ 09/04/25 15:19:40.191
  I0904 15:19:40.201996 23 wait.go:44] Found 0 stateful pods, waiting for 1
  E0904 15:19:41.092854      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:19:42.092945      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:19:43.093077      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:19:44.094122      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:19:45.094326      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:19:46.094308      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:19:47.094319      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:19:48.094812      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:19:49.094893      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:19:50.095795      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:19:50.203811 23 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 09/04/25 15:19:50.211
  STEP: updating a scale subresource @ 09/04/25 15:19:50.213
  STEP: verifying the statefulset Spec.Replicas was modified @ 09/04/25 15:19:50.217
  STEP: Patch a scale subresource @ 09/04/25 15:19:50.222
  STEP: verifying the statefulset Spec.Replicas was modified @ 09/04/25 15:19:50.228
  I0904 15:19:50.234306 23 statefulset.go:136] Deleting all statefulset in ns statefulset-3908
  I0904 15:19:50.238940 23 rest.go:153] Scaling statefulset ss to 0
  E0904 15:19:51.095928      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:19:52.095985      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:19:53.096823      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:19:54.096896      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:19:55.097015      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:19:56.097081      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:19:57.097235      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:19:58.097363      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:19:59.097506      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:20:00.097565      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:20:00.255574 23 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0904 15:20:00.258254 23 rest.go:91] Deleting statefulset ss
  I0904 15:20:00.275031 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-3908" for this suite. @ 09/04/25 15:20:00.278
• [20.117 seconds]
------------------------------
SSS
------------------------------
[sig-storage] CSINodes CSI Conformance should run through the lifecycle of a csinode [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_node.go:54
  STEP: Creating a kubernetes client @ 09/04/25 15:20:00.285
  I0904 15:20:00.285918 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename csinodes @ 09/04/25 15:20:00.286
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:20:00.301
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:20:00.303
  STEP: Creating initial csiNode "e2e-csinode-dbnxr" @ 09/04/25 15:20:00.304
  STEP: Getting initial csiNode "e2e-csinode-dbnxr" @ 09/04/25 15:20:00.308
  STEP: Patching initial csiNode: "e2e-csinode-dbnxr" @ 09/04/25 15:20:00.31
  STEP: Listing csiNodes with LabelSelector "e2e-csinode-dbnxr=patched" @ 09/04/25 15:20:00.316
  STEP: Delete initial csiNode: "e2e-csinode-dbnxr" @ 09/04/25 15:20:00.318
  STEP: Confirm deletion of csiNode "e2e-csinode-dbnxr" @ 09/04/25 15:20:00.325
  STEP: Creating replacement csiNode "e2e-csinode-fvj49" @ 09/04/25 15:20:00.327
  STEP: Getting replacement csiNode "e2e-csinode-fvj49" @ 09/04/25 15:20:00.332
  STEP: Updating replacement csiNode "e2e-csinode-fvj49" @ 09/04/25 15:20:00.336
  STEP: DeleteCollection of CSINodes with "e2e-csinode-fvj49=updated" label @ 09/04/25 15:20:00.342
  STEP: Confirm deletion of replacement csiNode with LabelSelector "e2e-csinode-fvj49=updated" @ 09/04/25 15:20:00.35
  I0904 15:20:00.354396 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csinodes-6454" for this suite. @ 09/04/25 15:20:00.379
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet_etc_hosts.go:65
  STEP: Creating a kubernetes client @ 09/04/25 15:20:00.385
  I0904 15:20:00.385917 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 09/04/25 15:20:00.386
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:20:00.398
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:20:00.4
  STEP: Setting up the test @ 09/04/25 15:20:00.402
  STEP: Creating hostNetwork=false pod @ 09/04/25 15:20:00.402
  E0904 15:20:01.097727      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:20:02.097913      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating hostNetwork=true pod @ 09/04/25 15:20:02.424
  E0904 15:20:03.098116      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:20:04.098248      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Running the test @ 09/04/25 15:20:04.443
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 09/04/25 15:20:04.443
  I0904 15:20:04.443867 23 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-7134 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0904 15:20:04.443883 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0904 15:20:04.443912 23 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7134/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&stderr=true&stdout=true)
  I0904 15:20:04.477236 23 exec_util.go:112] Exec stderr: ""
  I0904 15:20:04.477284 23 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-7134 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0904 15:20:04.477291 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0904 15:20:04.477371 23 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7134/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&stderr=true&stdout=true)
  I0904 15:20:04.511478 23 exec_util.go:112] Exec stderr: ""
  I0904 15:20:04.511524 23 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-7134 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0904 15:20:04.511533 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0904 15:20:04.511604 23 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7134/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&stderr=true&stdout=true)
  I0904 15:20:04.542968 23 exec_util.go:112] Exec stderr: ""
  I0904 15:20:04.542992 23 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-7134 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0904 15:20:04.542998 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0904 15:20:04.543029 23 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7134/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&stderr=true&stdout=true)
  I0904 15:20:04.570435 23 exec_util.go:112] Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 09/04/25 15:20:04.57
  I0904 15:20:04.570486 23 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-7134 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0904 15:20:04.570494 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0904 15:20:04.570533 23 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7134/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&stderr=true&stdout=true)
  I0904 15:20:04.600970 23 exec_util.go:112] Exec stderr: ""
  I0904 15:20:04.600994 23 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-7134 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0904 15:20:04.601001 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0904 15:20:04.601032 23 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7134/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&stderr=true&stdout=true)
  I0904 15:20:04.629410 23 exec_util.go:112] Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 09/04/25 15:20:04.629
  I0904 15:20:04.629450 23 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-7134 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0904 15:20:04.629456 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0904 15:20:04.629487 23 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7134/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&stderr=true&stdout=true)
  I0904 15:20:04.665582 23 exec_util.go:112] Exec stderr: ""
  I0904 15:20:04.665646 23 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-7134 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0904 15:20:04.665695 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0904 15:20:04.665776 23 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7134/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&stderr=true&stdout=true)
  I0904 15:20:04.691941 23 exec_util.go:112] Exec stderr: ""
  I0904 15:20:04.691971 23 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-7134 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0904 15:20:04.691978 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0904 15:20:04.692019 23 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7134/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&stderr=true&stdout=true)
  I0904 15:20:04.722249 23 exec_util.go:112] Exec stderr: ""
  I0904 15:20:04.722269 23 exec_util.go:63] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-7134 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0904 15:20:04.722275 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0904 15:20:04.722304 23 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7134/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&stderr=true&stdout=true)
  I0904 15:20:04.742454 23 exec_util.go:112] Exec stderr: ""
  I0904 15:20:04.742573 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-7134" for this suite. @ 09/04/25 15:20:04.748
• [4.369 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:109
  STEP: Creating a kubernetes client @ 09/04/25 15:20:04.755
  I0904 15:20:04.755541 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename configmap @ 09/04/25 15:20:04.755
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:20:04.766
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:20:04.769
  STEP: Creating configMap with name configmap-test-volume-map-c886c7e8-b071-4069-915e-803466f2a215 @ 09/04/25 15:20:04.771
  STEP: Creating a pod to test consume configMaps @ 09/04/25 15:20:04.775
  E0904 15:20:05.098311      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:20:06.098514      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:20:07.098735      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:20:08.098855      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/25 15:20:08.801
  I0904 15:20:08.804372 23 output.go:207] Trying to get logs from node ip-172-31-18-79 pod pod-configmaps-e4200ad9-95a9-4ae5-9c16-c7119dfcff2b container agnhost-container: <nil>
  STEP: delete the pod @ 09/04/25 15:20:08.808
  I0904 15:20:08.827136 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9145" for this suite. @ 09/04/25 15:20:08.831
• [4.083 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should terminate job execution when the number of failed indexes exceeds maxFailedIndexes [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:639
  STEP: Creating a kubernetes client @ 09/04/25 15:20:08.839
  I0904 15:20:08.839066 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename job @ 09/04/25 15:20:08.839
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:20:08.851
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:20:08.853
  STEP: Creating an indexed job with backoffLimit per index and maxFailedIndexes @ 09/04/25 15:20:08.855
  STEP: Awaiting for the job to fail as the number of max failed indexes is exceeded @ 09/04/25 15:20:08.861
  E0904 15:20:09.099886      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:20:10.100093      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:20:11.100343      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:20:12.100443      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Verifying the Job status fields to ensure early termination of the job @ 09/04/25 15:20:12.872
  I0904 15:20:12.875622 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-3261" for this suite. @ 09/04/25 15:20:12.878
• [4.049 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 09/04/25 15:20:12.888
  I0904 15:20:12.888460 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename deployment @ 09/04/25 15:20:12.888
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:20:12.9
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:20:12.902
  I0904 15:20:12.905143 23 deployment.go:754] Creating replica set "test-rolling-update-controller" (going to be adopted)
  I0904 15:20:12.915311 23 resource.go:64] Pod name sample-pod: Found 0 pods out of 1
  E0904 15:20:13.100554      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:20:14.100701      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:20:15.100901      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:20:16.101103      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:20:17.101797      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:20:17.919734 23 resource.go:64] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/04/25 15:20:17.919
  I0904 15:20:17.919807 23 deployment.go:769] Creating deployment "test-rolling-update-deployment"
  I0904 15:20:17.925327 23 deployment.go:775] Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  I0904 15:20:17.929641 23 deployment.go:223] new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  E0904 15:20:18.101932      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:20:19.102039      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:20:19.938829 23 deployment.go:779] Ensuring status for deployment "test-rolling-update-deployment" is the expected
  I0904 15:20:19.943539 23 deployment.go:784] Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  I0904 15:20:19.952357 23 deployment.go:632] Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-914",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5cee14d2-b255-42ad-baed-a9e5f2409abc",
      ResourceVersion: (string) (len=5) "30313",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892596017,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892596017,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892596018,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.56",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          HostnameOverride: (*string)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892596017,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892596017,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892596018,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892596017,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=83) "ReplicaSet \"test-rolling-update-deployment-5bd98b4894\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0904 15:20:19.954907 23 deployment.go:40] New ReplicaSet "test-rolling-update-deployment-5bd98b4894" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rolling-update-deployment-5bd98b4894",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-914",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f68fea32-dcea-4fdd-9da9-437a4bbdcda4",
      ResourceVersion: (string) (len=5) "30303",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892596017,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5bd98b4894"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "5cee14d2-b255-42ad-baed-a9e5f2409abc",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892596017,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 35 63 65 65 31 34  64 32 2d 62 32 35 35 2d  |\"5cee14d2-b255-|
              00000120  34 32 61 64 2d 62 61 65  64 2d 61 39 65 35 66 32  |42ad-baed-a9e5f2|
              00000130  34 30 39 61 62 63 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |409abc\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892596018,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5bd98b4894"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "5bd98b4894",
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.56",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          HostnameOverride: (*string)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0904 15:20:19.955294 23 deployment.go:45] All old ReplicaSets of Deployment "test-rolling-update-deployment":
  I0904 15:20:19.955520 23 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-914",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "84b72766-9f38-4b35-b633-8a206c6d3ce6",
      ResourceVersion: (string) (len=5) "30312",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892596012,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "5cee14d2-b255-42ad-baed-a9e5f2409abc",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892596012,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892596018,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 35 63 65 65 31 34 64  |"uid\":\"5cee14d|
              000000b0  32 2d 62 32 35 35 2d 34  32 61 64 2d 62 61 65 64  |2-b255-42ad-baed|
              000000c0  2d 61 39 65 35 66 32 34  30 39 61 62 63 5c 22 7d  |-a9e5f2409abc\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892596018,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          HostnameOverride: (*string)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0904 15:20:19.960401 23 deployment.go:68] Pod "test-rolling-update-deployment-5bd98b4894-l7rrr" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=47) "test-rolling-update-deployment-5bd98b4894-l7rrr",
      GenerateName: (string) (len=42) "test-rolling-update-deployment-5bd98b4894-",
      Namespace: (string) (len=14) "deployment-914",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6ab1aae5-177b-4457-82db-cf2af6a4007e",
      ResourceVersion: (string) (len=5) "30302",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892596017,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5bd98b4894"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=41) "test-rolling-update-deployment-5bd98b4894",
          UID: (types.UID) (len=36) "f68fea32-dcea-4fdd-9da9-437a4bbdcda4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892596017,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 36  38 66 65 61 33 32 2d 64  |d\":\"f68fea32-d|
              00000090  63 65 61 2d 34 66 64 64  2d 39 64 61 39 2d 34 33  |cea-4fdd-9da9-43|
              000000a0  37 61 34 62 62 64 63 64  61 34 5c 22 7d 22 3a 7b  |7a4bbdcda4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892596018,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=852) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6f 62 73 65 72 76  |me":{},"f:observ|
              00000080  65 64 47 65 6e 65 72 61  74 69 6f 6e 22 3a 7b 7d  |edGeneration":{}|
              00000090  2c 22 66 3a 73 74 61 74  75 73 22 3a 7b 7d 2c 22  |,"f:status":{},"|
              000000a0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |f:type":{}},"k:{|
              000000b0  5c 22 74 79 70 65 5c 22  3a 5c 22 49 6e 69 74 69  |\"type\":\"Initi|
              000000c0  61 6c 69 7a 65 64 5c 22  7d 22 3a 7b 22 2e 22 3a  |alized\"}":{".":|
              000000d0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000000f0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              00000100  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000110  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000120  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000130  65 22 3a 7b 7d 7d 2c 22  6b 3a 7b 5c 22 74 79 70  |e":{}},"k:{\"typ|
              00000140  65 5c 22 3a 5c 22 50 6f  64 52 65 61 64 79 54 6f  |e\":\"PodReadyTo|
              00000150  53 74 61 72 74 43 6f 6e  74 61 69 6e 65 72 73 5c  |StartContainers\|
              00000160  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 6c  |"}":{".":{},"f:l|
              00000170  61 73 74 50 72 6f 62 65  54 69 6d 65 22 3a 7b 7d  |astProbeTime":{}|
              00000180  2c 22 66 3a 6c 61 73 74  54 72 61 6e 73 69 74 69  |,"f:lastTransiti|
              00000190  6f 6e 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6f 62  |onTime":{},"f:ob|
              000001a0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001b0  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              000001c0  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000001d0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              000001e0  6f 64 53 63 68 65 64 75  6c 65 64 5c 22 7d 22 3a  |odScheduled\"}":|
              000001f0  7b 22 66 3a 6f 62 73 65  72 76 65 64 47 65 6e 65  |{"f:observedGene|
              00000200  72 61 74 69 6f 6e 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |ration":{}},"k:{|
              00000210  5c 22 74 79 70 65 5c 22  3a 5c 22 52 65 61 64 79  |\"type\":\"Ready|
              00000220  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000230  6c 61 73 74 50 72 6f 62  65 54 69 6d 65 22 3a 7b  |lastProbeTime":{|
              00000240  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000250  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6f  |ionTime":{},"f:o|
              00000260  62 73 65 72 76 65 64 47  65 6e 65 72 61 74 69 6f  |bservedGeneratio|
              00000270  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000280  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000290  7d 2c 22 66 3a 63 6f 6e  74 61 69 6e 65 72 53 74  |},"f:containerSt|
              000002a0  61 74 75 73 65 73 22 3a  7b 7d 2c 22 66 3a 68 6f  |atuses":{},"f:ho|
              000002b0  73 74 49 50 22 3a 7b 7d  2c 22 66 3a 68 6f 73 74  |stIP":{},"f:host|
              000002c0  49 50 73 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |IPs":{},"f:obser|
              000002d0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002e0  7d 2c 22 66 3a 70 68 61  73 65 22 3a 7b 7d 2c 22  |},"f:phase":{},"|
              000002f0  66 3a 70 6f 64 49 50 22  3a 7b 7d 2c 22 66 3a 70  |f:podIP":{},"f:p|
              00000300  6f 64 49 50 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |odIPs":{".":{},"|
              00000310  6b 3a 7b 5c 22 69 70 5c  22 3a 5c 22 31 39 32 2e  |k:{\"ip\":\"192.|
              00000320  31 36 38 2e 34 2e 31 35  37 5c 22 7d 22 3a 7b 22  |168.4.157\"}":{"|
              00000330  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000340  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000350  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-728h2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.56",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-728h2",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-18-79",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892596018,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892596017,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892596018,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892596018,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892596017,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.18.79",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.18.79"
        }
      },
      PodIP: (string) (len=13) "192.168.4.157",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.4.157"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892596017,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63892596018,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.56",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:352a050380078cb2a1c246357a0dfa2fcf243ee416b92ff28b44a01d1b4b0294",
          ContainerID: (string) (len=77) "containerd://0a77acec197de5d62b65ec0ef5ea837a6f6aab5038e3fdbfa97b1a54f45a802d",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-728h2",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0904 15:20:19.961328 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-914" for this suite. @ 09/04/25 15:20:19.966
• [7.084 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:155
  STEP: Creating a kubernetes client @ 09/04/25 15:20:19.972
  I0904 15:20:19.972227 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename var-expansion @ 09/04/25 15:20:19.972
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:20:19.987
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:20:19.989
  E0904 15:20:20.102516      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:20:21.102734      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:20:22.007517 23 delete.go:78] Deleting pod "var-expansion-7ea96124-bd4f-442f-932f-567539635250" in namespace "var-expansion-3031"
  I0904 15:20:22.017068 23 delete.go:86] Wait up to 5m0s for pod "var-expansion-7ea96124-bd4f-442f-932f-567539635250" to be fully deleted
  E0904 15:20:22.103020      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:20:23.103202      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:20:24.024663 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-3031" for this suite. @ 09/04/25 15:20:24.027
• [4.061 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:139
  STEP: Creating a kubernetes client @ 09/04/25 15:20:24.033
  I0904 15:20:24.033076 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename emptydir @ 09/04/25 15:20:24.033
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:20:24.045
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:20:24.047
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 09/04/25 15:20:24.049
  E0904 15:20:24.103905      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:20:25.104925      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:20:26.105618      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:20:27.105817      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/25 15:20:28.076
  I0904 15:20:28.081721 23 output.go:207] Trying to get logs from node ip-172-31-33-202 pod pod-47c59374-818b-4469-833d-25fb1703436d container test-container: <nil>
  STEP: delete the pod @ 09/04/25 15:20:28.087
  E0904 15:20:28.105762      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:20:28.106789 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8322" for this suite. @ 09/04/25 15:20:28.112
• [4.084 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicyBinding API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:678
  STEP: Creating a kubernetes client @ 09/04/25 15:20:28.117
  I0904 15:20:28.117773 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename validating-admission-policy @ 09/04/25 15:20:28.118
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:20:28.13
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:20:28.132
  STEP: getting /apis @ 09/04/25 15:20:28.138
  STEP: getting /apis/admissionregistration.k8s.io @ 09/04/25 15:20:28.141
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 09/04/25 15:20:28.141
  STEP: creating @ 09/04/25 15:20:28.142
  STEP: getting @ 09/04/25 15:20:28.153
  STEP: listing @ 09/04/25 15:20:28.155
  STEP: watching @ 09/04/25 15:20:28.159
  I0904 15:20:28.159455 23 validatingadmissionpolicy.go:773] starting watch
  STEP: patching @ 09/04/25 15:20:28.16
  STEP: updating @ 09/04/25 15:20:28.166
  I0904 15:20:28.175101 23 validatingadmissionpolicy.go:801] waiting for watch events with expected annotations
  STEP: deleting @ 09/04/25 15:20:28.175
  STEP: deleting a collection @ 09/04/25 15:20:28.184
  I0904 15:20:28.200867 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-9649" for this suite. @ 09/04/25 15:20:28.213
• [0.103 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:69
  STEP: Creating a kubernetes client @ 09/04/25 15:20:28.22
  I0904 15:20:28.220952 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename emptydir-wrapper @ 09/04/25 15:20:28.221
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:20:28.232
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:20:28.234
  E0904 15:20:29.106794      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:20:30.106910      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Cleaning up the secret @ 09/04/25 15:20:30.266
  STEP: Cleaning up the configmap @ 09/04/25 15:20:30.273
  STEP: Cleaning up the pod @ 09/04/25 15:20:30.28
  I0904 15:20:30.295507 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-856" for this suite. @ 09/04/25 15:20:30.298
• [2.083 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:69
  STEP: Creating a kubernetes client @ 09/04/25 15:20:30.304
  I0904 15:20:30.304379 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename projected @ 09/04/25 15:20:30.304
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:20:30.317
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:20:30.319
  STEP: Creating a pod to test downward API volume plugin @ 09/04/25 15:20:30.321
  E0904 15:20:31.107892      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:20:32.107988      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:20:33.108100      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:20:34.108183      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/25 15:20:34.342
  I0904 15:20:34.345656 23 output.go:207] Trying to get logs from node ip-172-31-33-202 pod downwardapi-volume-39f87e9b-6d19-471e-a181-75f9ed278764 container client-container: <nil>
  STEP: delete the pod @ 09/04/25 15:20:34.353
  I0904 15:20:34.372401 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6723" for this suite. @ 09/04/25 15:20:34.375
• [4.077 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:135
  STEP: Creating a kubernetes client @ 09/04/25 15:20:34.381
  I0904 15:20:34.381753 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename kubelet-test @ 09/04/25 15:20:34.382
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:20:34.394
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:20:34.396
  I0904 15:20:34.426000 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-7375" for this suite. @ 09/04/25 15:20:34.476
• [0.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 09/04/25 15:20:34.483
  I0904 15:20:34.483755 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename pods @ 09/04/25 15:20:34.484
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:20:34.495
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:20:34.497
  I0904 15:20:34.499869 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: creating the pod @ 09/04/25 15:20:34.5
  STEP: submitting the pod to kubernetes @ 09/04/25 15:20:34.5
  E0904 15:20:35.108325      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:20:36.108518      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:20:36.571435 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9826" for this suite. @ 09/04/25 15:20:36.575
• [2.099 seconds]
------------------------------
SSS
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 09/04/25 15:20:36.582
  I0904 15:20:36.582639 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename hostport @ 09/04/25 15:20:36.583
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:20:36.593
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:20:36.595
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 09/04/25 15:20:36.675
  E0904 15:20:37.109198      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:20:38.109396      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 172.31.18.79 on the node which pod1 resides and expect scheduled @ 09/04/25 15:20:38.691
  E0904 15:20:39.109751      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:20:40.109835      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:20:41.110011      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:20:42.110098      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:20:43.110751      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:20:44.110948      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:20:45.111103      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:20:46.111196      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:20:47.111358      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:20:48.111430      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:20:49.112493      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:20:50.112655      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 172.31.18.79 but use UDP protocol on the node which pod2 resides @ 09/04/25 15:20:50.731
  E0904 15:20:51.112863      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:20:52.113060      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:20:53.113215      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:20:54.113814      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 09/04/25 15:20:54.763
  I0904 15:20:54.763440 23 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 172.31.18.79 http://127.0.0.1:54323/hostname] Namespace:hostport-917 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0904 15:20:54.763454 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0904 15:20:54.763483 23 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/hostport-917/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+172.31.18.79+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.18.79, port: 54323 @ 09/04/25 15:20:54.796
  I0904 15:20:54.796053 23 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://172.31.18.79:54323/hostname] Namespace:hostport-917 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0904 15:20:54.796064 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0904 15:20:54.796122 23 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/hostport-917/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F172.31.18.79%3A54323%2Fhostname&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.18.79, port: 54323 UDP @ 09/04/25 15:20:54.83
  I0904 15:20:54.830992 23 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 172.31.18.79 54323] Namespace:hostport-917 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0904 15:20:54.831003 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0904 15:20:54.831035 23 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/hostport-917/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+172.31.18.79+54323&container=e2e-host-exec&stderr=true&stdout=true)
  E0904 15:20:55.114356      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:20:56.114461      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:20:57.114528      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:20:58.114650      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:20:59.114742      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:20:59.869865 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-917" for this suite. @ 09/04/25 15:20:59.872
• [23.297 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Serial] [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:388
  STEP: Creating a kubernetes client @ 09/04/25 15:20:59.879
  I0904 15:20:59.879688 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename gc @ 09/04/25 15:20:59.88
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:20:59.892
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:20:59.894
  STEP: create the rc @ 09/04/25 15:20:59.898
  I0904 15:20:59.903509      23 warnings.go:110] "Warning: metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]"
  E0904 15:21:00.115813      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:21:01.115979      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:21:02.470371      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:21:03.308264      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:21:04.312914      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:21:05.316997      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: delete the rc @ 09/04/25 15:21:05.911
  STEP: wait for the rc to be deleted @ 09/04/25 15:21:05.919
  E0904 15:21:06.314332      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:21:07.315093      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:21:08.315215      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:21:09.315811      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:21:10.316777      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 09/04/25 15:21:10.925
  E0904 15:21:11.317377      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:21:12.317436      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:21:13.317562      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:21:14.317738      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:21:15.317846      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:21:16.318802      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:21:17.318883      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:21:18.318976      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:21:19.319796      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:21:20.319993      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:21:21.320776      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:21:22.320948      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:21:23.321136      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:21:24.321341      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:21:25.321529      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:21:26.321774      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:21:27.321946      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:21:28.322790      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:21:29.322969      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:21:30.323105      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:21:31.323188      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:21:32.323289      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:21:33.323474      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:21:34.323578      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:21:35.323738      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:21:36.323839      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:21:37.323895      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:21:38.324625      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:21:39.324707      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:21:40.324813      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 09/04/25 15:21:40.934
  W0904 15:21:40.938662      23 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0904 15:21:40.938688 23 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0904 15:21:40.938755 23 delete.go:111] Deleting pod "simpletest.rc-22sfd" in namespace "gc-5680"
  I0904 15:21:40.950506 23 delete.go:111] Deleting pod "simpletest.rc-2ll4n" in namespace "gc-5680"
  I0904 15:21:40.967361 23 delete.go:111] Deleting pod "simpletest.rc-2m8f2" in namespace "gc-5680"
  I0904 15:21:40.980850 23 delete.go:111] Deleting pod "simpletest.rc-2xq6x" in namespace "gc-5680"
  I0904 15:21:40.996291 23 delete.go:111] Deleting pod "simpletest.rc-4kv5f" in namespace "gc-5680"
  I0904 15:21:41.011996 23 delete.go:111] Deleting pod "simpletest.rc-4mbnt" in namespace "gc-5680"
  I0904 15:21:41.032829 23 delete.go:111] Deleting pod "simpletest.rc-4wclm" in namespace "gc-5680"
  I0904 15:21:41.047212 23 delete.go:111] Deleting pod "simpletest.rc-598n4" in namespace "gc-5680"
  I0904 15:21:41.061761 23 delete.go:111] Deleting pod "simpletest.rc-5hnx9" in namespace "gc-5680"
  I0904 15:21:41.075731 23 delete.go:111] Deleting pod "simpletest.rc-5s5ph" in namespace "gc-5680"
  I0904 15:21:41.091527 23 delete.go:111] Deleting pod "simpletest.rc-5vrcd" in namespace "gc-5680"
  I0904 15:21:41.111564 23 delete.go:111] Deleting pod "simpletest.rc-6czbk" in namespace "gc-5680"
  I0904 15:21:41.127406 23 delete.go:111] Deleting pod "simpletest.rc-6l7bg" in namespace "gc-5680"
  I0904 15:21:41.144649 23 delete.go:111] Deleting pod "simpletest.rc-6vbjj" in namespace "gc-5680"
  I0904 15:21:41.161401 23 delete.go:111] Deleting pod "simpletest.rc-6xwq2" in namespace "gc-5680"
  I0904 15:21:41.173791 23 delete.go:111] Deleting pod "simpletest.rc-7kfxr" in namespace "gc-5680"
  I0904 15:21:41.184100 23 delete.go:111] Deleting pod "simpletest.rc-7kk5x" in namespace "gc-5680"
  I0904 15:21:41.194063 23 delete.go:111] Deleting pod "simpletest.rc-7pvjd" in namespace "gc-5680"
  I0904 15:21:41.208730 23 delete.go:111] Deleting pod "simpletest.rc-7v9cb" in namespace "gc-5680"
  I0904 15:21:41.221459 23 delete.go:111] Deleting pod "simpletest.rc-84kpg" in namespace "gc-5680"
  I0904 15:21:41.236819 23 delete.go:111] Deleting pod "simpletest.rc-87ddz" in namespace "gc-5680"
  I0904 15:21:41.252651 23 delete.go:111] Deleting pod "simpletest.rc-89z9l" in namespace "gc-5680"
  I0904 15:21:41.263911 23 delete.go:111] Deleting pod "simpletest.rc-8g2h4" in namespace "gc-5680"
  I0904 15:21:41.283776 23 delete.go:111] Deleting pod "simpletest.rc-8t78c" in namespace "gc-5680"
  I0904 15:21:41.315375 23 delete.go:111] Deleting pod "simpletest.rc-8xv9f" in namespace "gc-5680"
  E0904 15:21:41.325416      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:21:41.343412 23 delete.go:111] Deleting pod "simpletest.rc-96s6t" in namespace "gc-5680"
  I0904 15:21:41.356376 23 delete.go:111] Deleting pod "simpletest.rc-9fhcp" in namespace "gc-5680"
  I0904 15:21:41.370252 23 delete.go:111] Deleting pod "simpletest.rc-9g9bj" in namespace "gc-5680"
  I0904 15:21:41.390044 23 delete.go:111] Deleting pod "simpletest.rc-9gpmx" in namespace "gc-5680"
  I0904 15:21:41.407285 23 delete.go:111] Deleting pod "simpletest.rc-9lxhc" in namespace "gc-5680"
  I0904 15:21:41.423487 23 delete.go:111] Deleting pod "simpletest.rc-9rrs9" in namespace "gc-5680"
  I0904 15:21:41.434303 23 delete.go:111] Deleting pod "simpletest.rc-b7xlg" in namespace "gc-5680"
  I0904 15:21:41.447321 23 delete.go:111] Deleting pod "simpletest.rc-bdc9d" in namespace "gc-5680"
  I0904 15:21:41.470816 23 delete.go:111] Deleting pod "simpletest.rc-bm2n7" in namespace "gc-5680"
  I0904 15:21:41.486997 23 delete.go:111] Deleting pod "simpletest.rc-ccmwv" in namespace "gc-5680"
  I0904 15:21:41.501375 23 delete.go:111] Deleting pod "simpletest.rc-cdm44" in namespace "gc-5680"
  I0904 15:21:41.518174 23 delete.go:111] Deleting pod "simpletest.rc-cj9p7" in namespace "gc-5680"
  I0904 15:21:41.533494 23 delete.go:111] Deleting pod "simpletest.rc-ckflc" in namespace "gc-5680"
  I0904 15:21:41.547393 23 delete.go:111] Deleting pod "simpletest.rc-dpnwv" in namespace "gc-5680"
  I0904 15:21:41.566209 23 delete.go:111] Deleting pod "simpletest.rc-f4dxj" in namespace "gc-5680"
  I0904 15:21:41.581434 23 delete.go:111] Deleting pod "simpletest.rc-fhzbh" in namespace "gc-5680"
  I0904 15:21:41.592174 23 delete.go:111] Deleting pod "simpletest.rc-fvh4j" in namespace "gc-5680"
  I0904 15:21:41.658626 23 delete.go:111] Deleting pod "simpletest.rc-fxhr2" in namespace "gc-5680"
  I0904 15:21:41.673748 23 delete.go:111] Deleting pod "simpletest.rc-glxjh" in namespace "gc-5680"
  I0904 15:21:41.690374 23 delete.go:111] Deleting pod "simpletest.rc-gmq4v" in namespace "gc-5680"
  I0904 15:21:41.707721 23 delete.go:111] Deleting pod "simpletest.rc-gqbkw" in namespace "gc-5680"
  I0904 15:21:41.725890 23 delete.go:111] Deleting pod "simpletest.rc-gt62v" in namespace "gc-5680"
  I0904 15:21:41.743435 23 delete.go:111] Deleting pod "simpletest.rc-gtsb5" in namespace "gc-5680"
  I0904 15:21:41.760764 23 delete.go:111] Deleting pod "simpletest.rc-h5rql" in namespace "gc-5680"
  I0904 15:21:41.780453 23 delete.go:111] Deleting pod "simpletest.rc-h9h2w" in namespace "gc-5680"
  I0904 15:21:41.797528 23 delete.go:111] Deleting pod "simpletest.rc-hhf42" in namespace "gc-5680"
  I0904 15:21:41.812271 23 delete.go:111] Deleting pod "simpletest.rc-hrnbk" in namespace "gc-5680"
  I0904 15:21:41.824019 23 delete.go:111] Deleting pod "simpletest.rc-jgh4w" in namespace "gc-5680"
  I0904 15:21:41.837065 23 delete.go:111] Deleting pod "simpletest.rc-jhkgg" in namespace "gc-5680"
  I0904 15:21:41.854676 23 delete.go:111] Deleting pod "simpletest.rc-jrrnt" in namespace "gc-5680"
  I0904 15:21:41.874402 23 delete.go:111] Deleting pod "simpletest.rc-jsb9h" in namespace "gc-5680"
  I0904 15:21:41.887721 23 delete.go:111] Deleting pod "simpletest.rc-jz8jm" in namespace "gc-5680"
  I0904 15:21:41.899216 23 delete.go:111] Deleting pod "simpletest.rc-k5br5" in namespace "gc-5680"
  I0904 15:21:41.915783 23 delete.go:111] Deleting pod "simpletest.rc-kh8wl" in namespace "gc-5680"
  I0904 15:21:41.931166 23 delete.go:111] Deleting pod "simpletest.rc-kj8sb" in namespace "gc-5680"
  I0904 15:21:41.941941 23 delete.go:111] Deleting pod "simpletest.rc-kkgv4" in namespace "gc-5680"
  I0904 15:21:41.959246 23 delete.go:111] Deleting pod "simpletest.rc-knpqc" in namespace "gc-5680"
  I0904 15:21:42.006794 23 delete.go:111] Deleting pod "simpletest.rc-ksqhz" in namespace "gc-5680"
  I0904 15:21:42.027500 23 delete.go:111] Deleting pod "simpletest.rc-lv464" in namespace "gc-5680"
  I0904 15:21:42.078152 23 delete.go:111] Deleting pod "simpletest.rc-lzfmn" in namespace "gc-5680"
  I0904 15:21:42.141082 23 delete.go:111] Deleting pod "simpletest.rc-m5fkl" in namespace "gc-5680"
  I0904 15:21:42.163631 23 delete.go:111] Deleting pod "simpletest.rc-m7j22" in namespace "gc-5680"
  I0904 15:21:42.281653 23 delete.go:111] Deleting pod "simpletest.rc-mvm5d" in namespace "gc-5680"
  E0904 15:21:42.326324      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:21:42.350253 23 delete.go:111] Deleting pod "simpletest.rc-ncdz6" in namespace "gc-5680"
  I0904 15:21:42.368836 23 delete.go:111] Deleting pod "simpletest.rc-nsd84" in namespace "gc-5680"
  I0904 15:21:42.476421 23 delete.go:111] Deleting pod "simpletest.rc-psv4c" in namespace "gc-5680"
  I0904 15:21:42.522915 23 delete.go:111] Deleting pod "simpletest.rc-q4hz2" in namespace "gc-5680"
  I0904 15:21:42.574908 23 delete.go:111] Deleting pod "simpletest.rc-qjd2p" in namespace "gc-5680"
  I0904 15:21:42.588731 23 delete.go:111] Deleting pod "simpletest.rc-qmhz5" in namespace "gc-5680"
  I0904 15:21:42.613301 23 delete.go:111] Deleting pod "simpletest.rc-r4pnb" in namespace "gc-5680"
  I0904 15:21:42.629329 23 delete.go:111] Deleting pod "simpletest.rc-rhntj" in namespace "gc-5680"
  I0904 15:21:42.644567 23 delete.go:111] Deleting pod "simpletest.rc-sg9js" in namespace "gc-5680"
  I0904 15:21:42.672061 23 delete.go:111] Deleting pod "simpletest.rc-t29vz" in namespace "gc-5680"
  I0904 15:21:42.703473 23 delete.go:111] Deleting pod "simpletest.rc-tj5j6" in namespace "gc-5680"
  I0904 15:21:42.721405 23 delete.go:111] Deleting pod "simpletest.rc-tk76v" in namespace "gc-5680"
  I0904 15:21:42.744054 23 delete.go:111] Deleting pod "simpletest.rc-tmmn2" in namespace "gc-5680"
  I0904 15:21:42.758900 23 delete.go:111] Deleting pod "simpletest.rc-tqdmg" in namespace "gc-5680"
  I0904 15:21:42.775692 23 delete.go:111] Deleting pod "simpletest.rc-tsxg7" in namespace "gc-5680"
  I0904 15:21:42.794721 23 delete.go:111] Deleting pod "simpletest.rc-v6jm4" in namespace "gc-5680"
  I0904 15:21:42.811433 23 delete.go:111] Deleting pod "simpletest.rc-vp5np" in namespace "gc-5680"
  I0904 15:21:42.826447 23 delete.go:111] Deleting pod "simpletest.rc-w985j" in namespace "gc-5680"
  I0904 15:21:42.838215 23 delete.go:111] Deleting pod "simpletest.rc-wpt65" in namespace "gc-5680"
  I0904 15:21:42.888018 23 delete.go:111] Deleting pod "simpletest.rc-wpwbn" in namespace "gc-5680"
  I0904 15:21:42.943149 23 delete.go:111] Deleting pod "simpletest.rc-x594x" in namespace "gc-5680"
  I0904 15:21:43.035428 23 delete.go:111] Deleting pod "simpletest.rc-x6jt2" in namespace "gc-5680"
  I0904 15:21:43.053138 23 delete.go:111] Deleting pod "simpletest.rc-xg5nn" in namespace "gc-5680"
  I0904 15:21:43.158499 23 delete.go:111] Deleting pod "simpletest.rc-xhql6" in namespace "gc-5680"
  I0904 15:21:43.287840 23 delete.go:111] Deleting pod "simpletest.rc-xjczq" in namespace "gc-5680"
  I0904 15:21:43.351251 23 delete.go:111] Deleting pod "simpletest.rc-z4bbr" in namespace "gc-5680"
  E0904 15:21:43.363182      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:21:43.390387 23 delete.go:111] Deleting pod "simpletest.rc-z7nhp" in namespace "gc-5680"
  I0904 15:21:43.402973 23 delete.go:111] Deleting pod "simpletest.rc-z8vb9" in namespace "gc-5680"
  I0904 15:21:43.416062 23 delete.go:111] Deleting pod "simpletest.rc-zbqhk" in namespace "gc-5680"
  I0904 15:21:43.437999 23 delete.go:111] Deleting pod "simpletest.rc-zbt95" in namespace "gc-5680"
  I0904 15:21:43.460911 23 delete.go:111] Deleting pod "simpletest.rc-zldkq" in namespace "gc-5680"
  I0904 15:21:43.497120 23 delete.go:111] Deleting pod "simpletest.rc-zrcxm" in namespace "gc-5680"
  I0904 15:21:43.538470 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-5680" for this suite. @ 09/04/25 15:21:43.579
• [43.758 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1507
  STEP: Creating a kubernetes client @ 09/04/25 15:21:43.637
  I0904 15:21:43.637501 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename services @ 09/04/25 15:21:43.638
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:21:43.731
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:21:43.753
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-9223 @ 09/04/25 15:21:43.782
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 09/04/25 15:21:43.798
  STEP: creating service externalsvc in namespace services-9223 @ 09/04/25 15:21:43.798
  I0904 15:21:43.838352 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0904 15:21:44.346794      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:21:45.346867      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: changing the ClusterIP service to type=ExternalName @ 09/04/25 15:21:45.853
  I0904 15:21:45.865353 23 resource.go:344] Creating new exec pod
  E0904 15:21:46.347496      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:21:47.347623      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:21:47.878533 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=services-9223 exec execpodnllwb -- /bin/sh -x -c nslookup clusterip-service.services-9223.svc.cluster.local'
  I0904 15:21:47.962903 23 builder.go:156] stderr: "+ nslookup clusterip-service.services-9223.svc.cluster.local\n"
  I0904 15:21:47.962940 23 builder.go:157] stdout: ";; Got recursion not available from 10.152.183.138\n;; Got recursion not available from 10.152.183.138\n;; Got recursion not available from 10.152.183.138\n;; Got recursion not available from 10.152.183.138\nServer:\t\t10.152.183.138\nAddress:\t10.152.183.138#53\n\nclusterip-service.services-9223.svc.cluster.local\tcanonical name = externalsvc.services-9223.svc.cluster.local.\nName:\texternalsvc.services-9223.svc.cluster.local\nAddress: 10.152.183.28\n;; Got recursion not available from 10.152.183.138\n\n"
  I0904 15:21:47.992179 23 service.go:1516] Cleaning up the ClusterIP to ExternalName test service
  I0904 15:21:48.007120 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9223" for this suite. @ 09/04/25 15:21:48.012
• [4.381 seconds]
------------------------------
S
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:54
  STEP: Creating a kubernetes client @ 09/04/25 15:21:48.018
  I0904 15:21:48.018130 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename podtemplate @ 09/04/25 15:21:48.018
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:21:48.031
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:21:48.032
  I0904 15:21:48.062141 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-6210" for this suite. @ 09/04/25 15:21:48.113
• [0.102 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 09/04/25 15:21:48.12
  I0904 15:21:48.120167 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename deployment @ 09/04/25 15:21:48.12
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:21:48.134
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:21:48.135
  STEP: creating a Deployment @ 09/04/25 15:21:48.141
  STEP: waiting for Deployment to be created @ 09/04/25 15:21:48.145
  STEP: waiting for all Replicas to be Ready @ 09/04/25 15:21:48.149
  I0904 15:21:48.150704 23 deployment.go:246] observed Deployment test-deployment in namespace deployment-3969 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0904 15:21:48.150716 23 deployment.go:248] observed Deployment test-deployment in namespace deployment-3969 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0904 15:21:48.163980 23 deployment.go:246] observed Deployment test-deployment in namespace deployment-3969 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0904 15:21:48.163992 23 deployment.go:248] observed Deployment test-deployment in namespace deployment-3969 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0904 15:21:48.177062 23 deployment.go:246] observed Deployment test-deployment in namespace deployment-3969 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0904 15:21:48.177082 23 deployment.go:248] observed Deployment test-deployment in namespace deployment-3969 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0904 15:21:48.200760 23 deployment.go:246] observed Deployment test-deployment in namespace deployment-3969 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0904 15:21:48.200778 23 deployment.go:248] observed Deployment test-deployment in namespace deployment-3969 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  E0904 15:21:48.348022      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:21:49.169866 23 deployment.go:246] observed Deployment test-deployment in namespace deployment-3969 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I0904 15:21:49.169898 23 deployment.go:248] observed Deployment test-deployment in namespace deployment-3969 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  E0904 15:21:49.348161      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:21:49.369495 23 deployment.go:248] observed Deployment test-deployment in namespace deployment-3969 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 09/04/25 15:21:49.369
  I0904 15:21:49.379608 23 deployment.go:290] observed event type ADDED
  STEP: waiting for Replicas to scale @ 09/04/25 15:21:49.379
  I0904 15:21:49.380693 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-3969 with ReadyReplicas 0
  I0904 15:21:49.380707 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-3969 with ReadyReplicas 0
  I0904 15:21:49.380715 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-3969 with ReadyReplicas 0
  I0904 15:21:49.380720 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-3969 with ReadyReplicas 0
  I0904 15:21:49.380726 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-3969 with ReadyReplicas 0
  I0904 15:21:49.380731 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-3969 with ReadyReplicas 0
  I0904 15:21:49.380813 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-3969 with ReadyReplicas 0
  I0904 15:21:49.380821 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-3969 with ReadyReplicas 0
  I0904 15:21:49.380888 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-3969 with ReadyReplicas 1
  I0904 15:21:49.380894 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-3969 with ReadyReplicas 1
  I0904 15:21:49.380901 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-3969 with ReadyReplicas 2
  I0904 15:21:49.380905 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-3969 with ReadyReplicas 2
  I0904 15:21:49.380966 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-3969 with ReadyReplicas 2
  I0904 15:21:49.380974 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-3969 with ReadyReplicas 2
  I0904 15:21:49.392680 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-3969 with ReadyReplicas 2
  I0904 15:21:49.392707 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-3969 with ReadyReplicas 2
  I0904 15:21:49.414243 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-3969 with ReadyReplicas 2
  I0904 15:21:49.414261 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-3969 with ReadyReplicas 2
  I0904 15:21:49.430843 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-3969 with ReadyReplicas 1
  I0904 15:21:49.430860 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-3969 with ReadyReplicas 1
  I0904 15:21:49.443764 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-3969 with ReadyReplicas 1
  I0904 15:21:49.443779 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-3969 with ReadyReplicas 1
  E0904 15:21:50.348754      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:21:50.382185 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-3969 with ReadyReplicas 2
  I0904 15:21:50.382209 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-3969 with ReadyReplicas 2
  I0904 15:21:50.413111 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-3969 with ReadyReplicas 1
  STEP: listing Deployments @ 09/04/25 15:21:50.413
  I0904 15:21:50.416967 23 deployment.go:327] Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 09/04/25 15:21:50.417
  I0904 15:21:50.426684 23 deployment.go:360] observed Deployment test-deployment in namespace deployment-3969 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 09/04/25 15:21:50.426
  I0904 15:21:50.437495 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-3969 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0904 15:21:50.441782 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-3969 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0904 15:21:50.463800 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-3969 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0904 15:21:50.479377 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-3969 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0904 15:21:50.499393 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-3969 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0904 15:21:51.200858 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-3969 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  E0904 15:21:51.349193      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:21:51.392019 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-3969 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  I0904 15:21:51.423041 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-3969 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0904 15:21:51.428467 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-3969 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0904 15:21:52.194071 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-3969 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 09/04/25 15:21:52.222
  STEP: fetching the DeploymentStatus @ 09/04/25 15:21:52.229
  I0904 15:21:52.237745 23 deployment.go:448] observed Deployment test-deployment in namespace deployment-3969 with ReadyReplicas 1
  I0904 15:21:52.237772 23 deployment.go:448] observed Deployment test-deployment in namespace deployment-3969 with ReadyReplicas 1
  I0904 15:21:52.237779 23 deployment.go:448] observed Deployment test-deployment in namespace deployment-3969 with ReadyReplicas 1
  I0904 15:21:52.237834 23 deployment.go:448] observed Deployment test-deployment in namespace deployment-3969 with ReadyReplicas 1
  I0904 15:21:52.237842 23 deployment.go:448] observed Deployment test-deployment in namespace deployment-3969 with ReadyReplicas 1
  I0904 15:21:52.237849 23 deployment.go:448] observed Deployment test-deployment in namespace deployment-3969 with ReadyReplicas 2
  I0904 15:21:52.237898 23 deployment.go:448] observed Deployment test-deployment in namespace deployment-3969 with ReadyReplicas 3
  I0904 15:21:52.237906 23 deployment.go:448] observed Deployment test-deployment in namespace deployment-3969 with ReadyReplicas 2
  I0904 15:21:52.237913 23 deployment.go:448] observed Deployment test-deployment in namespace deployment-3969 with ReadyReplicas 2
  I0904 15:21:52.237964 23 deployment.go:448] observed Deployment test-deployment in namespace deployment-3969 with ReadyReplicas 3
  STEP: deleting the Deployment @ 09/04/25 15:21:52.237
  I0904 15:21:52.246383 23 deployment.go:474] observed event type MODIFIED
  I0904 15:21:52.246456 23 deployment.go:474] observed event type MODIFIED
  I0904 15:21:52.246463 23 deployment.go:474] observed event type MODIFIED
  I0904 15:21:52.246550 23 deployment.go:474] observed event type MODIFIED
  I0904 15:21:52.246804 23 deployment.go:474] observed event type MODIFIED
  I0904 15:21:52.246827 23 deployment.go:474] observed event type MODIFIED
  I0904 15:21:52.246992 23 deployment.go:474] observed event type MODIFIED
  I0904 15:21:52.247002 23 deployment.go:474] observed event type MODIFIED
  I0904 15:21:52.247120 23 deployment.go:474] observed event type MODIFIED
  I0904 15:21:52.247126 23 deployment.go:474] observed event type MODIFIED
  I0904 15:21:52.247206 23 deployment.go:474] observed event type MODIFIED
  I0904 15:21:52.247212 23 deployment.go:474] observed event type MODIFIED
  I0904 15:21:52.247218 23 deployment.go:474] observed event type MODIFIED
  I0904 15:21:52.249688 23 deployment.go:649] Log out all the ReplicaSets if there is no deployment created
  I0904 15:21:52.254450 23 deployment.go:656] ReplicaSet "test-deployment-57dd84db4f":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-57dd84db4f",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3969",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a39fc23c-4a2c-47e5-8209-d6b1225dc5f8",
      ResourceVersion: (string) (len=5) "33500",
      Generation: (int64) 4,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892596109,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "57dd84db4f",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "14e37049-c971-462a-85bc-eaa2fa68bc83",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892596112,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 31 34 65 33  37 30 34 39 2d 63 39 37  |":\"14e37049-c97|
              00000130  31 2d 34 36 32 61 2d 38  35 62 63 2d 65 61 61 32  |1-462a-85bc-eaa2|
              00000140  66 61 36 38 62 63 38 33  5c 22 7d 22 3a 7b 7d 7d  |fa68bc83\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892596112,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=22) "test-deployment-static": (string) (len=4) "true",
          (string) (len=17) "pod-template-hash": (string) (len=10) "57dd84db4f"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "57dd84db4f",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=28) "registry.k8s.io/pause:3.10.1",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(2),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          HostnameOverride: (*string)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 4,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I0904 15:21:52.262230 23 deployment.go:668] pod: "test-deployment-57dd84db4f-dqksl":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-57dd84db4f-dqksl",
      GenerateName: (string) (len=27) "test-deployment-57dd84db4f-",
      Namespace: (string) (len=15) "deployment-3969",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "49eaf0a9-bfe1-4e73-8f86-17cda1e2418a",
      ResourceVersion: (string) (len=5) "33499",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892596110,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892596114,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "57dd84db4f",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-57dd84db4f",
          UID: (types.UID) (len=36) "a39fc23c-4a2c-47e5-8209-d6b1225dc5f8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892596110,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  61 33 39 66 63 32 33 63  |uid\":\"a39fc23c|
              000000a0  2d 34 61 32 63 2d 34 37  65 35 2d 38 32 30 39 2d  |-4a2c-47e5-8209-|
              000000b0  64 36 62 31 32 32 35 64  63 35 66 38 5c 22 7d 22  |d6b1225dc5f8\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892596112,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=852) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6f 62 73 65 72 76  |me":{},"f:observ|
              00000080  65 64 47 65 6e 65 72 61  74 69 6f 6e 22 3a 7b 7d  |edGeneration":{}|
              00000090  2c 22 66 3a 73 74 61 74  75 73 22 3a 7b 7d 2c 22  |,"f:status":{},"|
              000000a0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |f:type":{}},"k:{|
              000000b0  5c 22 74 79 70 65 5c 22  3a 5c 22 49 6e 69 74 69  |\"type\":\"Initi|
              000000c0  61 6c 69 7a 65 64 5c 22  7d 22 3a 7b 22 2e 22 3a  |alized\"}":{".":|
              000000d0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000000f0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              00000100  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000110  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000120  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000130  65 22 3a 7b 7d 7d 2c 22  6b 3a 7b 5c 22 74 79 70  |e":{}},"k:{\"typ|
              00000140  65 5c 22 3a 5c 22 50 6f  64 52 65 61 64 79 54 6f  |e\":\"PodReadyTo|
              00000150  53 74 61 72 74 43 6f 6e  74 61 69 6e 65 72 73 5c  |StartContainers\|
              00000160  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 6c  |"}":{".":{},"f:l|
              00000170  61 73 74 50 72 6f 62 65  54 69 6d 65 22 3a 7b 7d  |astProbeTime":{}|
              00000180  2c 22 66 3a 6c 61 73 74  54 72 61 6e 73 69 74 69  |,"f:lastTransiti|
              00000190  6f 6e 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6f 62  |onTime":{},"f:ob|
              000001a0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001b0  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              000001c0  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000001d0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              000001e0  6f 64 53 63 68 65 64 75  6c 65 64 5c 22 7d 22 3a  |odScheduled\"}":|
              000001f0  7b 22 66 3a 6f 62 73 65  72 76 65 64 47 65 6e 65  |{"f:observedGene|
              00000200  72 61 74 69 6f 6e 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |ration":{}},"k:{|
              00000210  5c 22 74 79 70 65 5c 22  3a 5c 22 52 65 61 64 79  |\"type\":\"Ready|
              00000220  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000230  6c 61 73 74 50 72 6f 62  65 54 69 6d 65 22 3a 7b  |lastProbeTime":{|
              00000240  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000250  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6f  |ionTime":{},"f:o|
              00000260  62 73 65 72 76 65 64 47  65 6e 65 72 61 74 69 6f  |bservedGeneratio|
              00000270  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000280  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000290  7d 2c 22 66 3a 63 6f 6e  74 61 69 6e 65 72 53 74  |},"f:containerSt|
              000002a0  61 74 75 73 65 73 22 3a  7b 7d 2c 22 66 3a 68 6f  |atuses":{},"f:ho|
              000002b0  73 74 49 50 22 3a 7b 7d  2c 22 66 3a 68 6f 73 74  |stIP":{},"f:host|
              000002c0  49 50 73 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |IPs":{},"f:obser|
              000002d0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002e0  7d 2c 22 66 3a 70 68 61  73 65 22 3a 7b 7d 2c 22  |},"f:phase":{},"|
              000002f0  66 3a 70 6f 64 49 50 22  3a 7b 7d 2c 22 66 3a 70  |f:podIP":{},"f:p|
              00000300  6f 64 49 50 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |odIPs":{".":{},"|
              00000310  6b 3a 7b 5c 22 69 70 5c  22 3a 5c 22 31 39 32 2e  |k:{\"ip\":\"192.|
              00000320  31 36 38 2e 34 2e 31 37  37 5c 22 7d 22 3a 7b 22  |168.4.177\"}":{"|
              00000330  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000340  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000350  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rqp85",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=28) "registry.k8s.io/pause:3.10.1",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rqp85",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-18-79",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 2,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 2,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892596111,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 2,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892596110,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 2,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892596111,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 2,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892596111,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 2,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892596110,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.18.79",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.18.79"
        }
      },
      PodIP: (string) (len=13) "192.168.4.177",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.4.177"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892596110,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63892596110,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=28) "registry.k8s.io/pause:3.10.1",
          ImageID: (string) (len=93) "registry.k8s.io/pause@sha256:278fb9dbcca9518083ad1e11276933a2e96f23de604a3a08cc3c80002767d24c",
          ContainerID: (string) (len=77) "containerd://b88af1ecd5e99b791ec790107a2df380f2c962593f18748a61cb161916d2fb59",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-rqp85",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }


  I0904 15:21:52.264739 23 deployment.go:668] pod: "test-deployment-57dd84db4f-rkls8":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-57dd84db4f-rkls8",
      GenerateName: (string) (len=27) "test-deployment-57dd84db4f-",
      Namespace: (string) (len=15) "deployment-3969",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c5168791-5e6a-4ba4-b239-68d538bad008",
      ResourceVersion: (string) (len=5) "33393",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892596109,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892596113,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "57dd84db4f",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-57dd84db4f",
          UID: (types.UID) (len=36) "a39fc23c-4a2c-47e5-8209-d6b1225dc5f8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892596109,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  61 33 39 66 63 32 33 63  |uid\":\"a39fc23c|
              000000a0  2d 34 61 32 63 2d 34 37  65 35 2d 38 32 30 39 2d  |-4a2c-47e5-8209-|
              000000b0  64 36 62 31 32 32 35 64  63 35 66 38 5c 22 7d 22  |d6b1225dc5f8\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892596111,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=895) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6f 62 73 65 72 76  |me":{},"f:observ|
              00000080  65 64 47 65 6e 65 72 61  74 69 6f 6e 22 3a 7b 7d  |edGeneration":{}|
              00000090  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              000000a0  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000000b0  74 79 70 65 22 3a 7b 7d  7d 2c 22 6b 3a 7b 5c 22  |type":{}},"k:{\"|
              000000c0  74 79 70 65 5c 22 3a 5c  22 49 6e 69 74 69 61 6c  |type\":\"Initial|
              000000d0  69 7a 65 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ized\"}":{".":{}|
              000000e0  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              000000f0  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000100  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000110  22 66 3a 6f 62 73 65 72  76 65 64 47 65 6e 65 72  |"f:observedGener|
              00000120  61 74 69 6f 6e 22 3a 7b  7d 2c 22 66 3a 72 65 61  |ation":{},"f:rea|
              00000130  73 6f 6e 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |son":{},"f:statu|
              00000140  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000150  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000160  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000170  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000180  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000190  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              000001a0  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              000001b0  6d 65 22 3a 7b 7d 2c 22  66 3a 6f 62 73 65 72 76  |me":{},"f:observ|
              000001c0  65 64 47 65 6e 65 72 61  74 69 6f 6e 22 3a 7b 7d  |edGeneration":{}|
              000001d0  2c 22 66 3a 73 74 61 74  75 73 22 3a 7b 7d 2c 22  |,"f:status":{},"|
              000001e0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |f:type":{}},"k:{|
              000001f0  5c 22 74 79 70 65 5c 22  3a 5c 22 50 6f 64 53 63  |\"type\":\"PodSc|
              00000200  68 65 64 75 6c 65 64 5c  22 7d 22 3a 7b 22 66 3a  |heduled\"}":{"f:|
              00000210  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000220  6f 6e 22 3a 7b 7d 7d 2c  22 6b 3a 7b 5c 22 74 79  |on":{}},"k:{\"ty|
              00000230  70 65 5c 22 3a 5c 22 52  65 61 64 79 5c 22 7d 22  |pe\":\"Ready\"}"|
              00000240  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000250  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              00000260  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              00000270  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |ime":{},"f:obser|
              00000280  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              00000290  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              000002a0  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              000002b0  3a 74 79 70 65 22 3a 7b  7d 7d 7d 2c 22 66 3a 63  |:type":{}}},"f:c|
              000002c0  6f 6e 74 61 69 6e 65 72  53 74 61 74 75 73 65 73  |ontainerStatuses|
              000002d0  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 22 3a  |":{},"f:hostIP":|
              000002e0  7b 7d 2c 22 66 3a 68 6f  73 74 49 50 73 22 3a 7b  |{},"f:hostIPs":{|
              000002f0  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000300  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 70  |eration":{},"f:p|
              00000310  68 61 73 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 49  |hase":{},"f:podI|
              00000320  50 22 3a 7b 7d 2c 22 66  3a 70 6f 64 49 50 73 22  |P":{},"f:podIPs"|
              00000330  3a 7b 22 2e 22 3a 7b 7d  2c 22 6b 3a 7b 5c 22 69  |:{".":{},"k:{\"i|
              00000340  70 5c 22 3a 5c 22 31 39  32 2e 31 36 38 2e 31 30  |p\":\"192.168.10|
              00000350  39 2e 38 38 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |9.88\"}":{".":{}|
              00000360  2c 22 66 3a 69 70 22 3a  7b 7d 7d 7d 2c 22 66 3a  |,"f:ip":{}}},"f:|
              00000370  73 74 61 72 74 54 69 6d  65 22 3a 7b 7d 7d 7d     |startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4fwqx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=28) "registry.k8s.io/pause:3.10.1",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4fwqx",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-33-202",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 2,
      Phase: (v1.PodPhase) (len=9) "Succeeded",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 2,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892596111,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 2,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892596109,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=12) "PodCompleted",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 2,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892596111,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=12) "PodCompleted",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 2,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892596111,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=12) "PodCompleted",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 2,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892596109,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.33.202",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.33.202"
        }
      },
      PodIP: (string) (len=14) "192.168.109.88",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.109.88"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892596109,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)({
              ExitCode: (int32) 0,
              Signal: (int32) 0,
              Reason: (string) (len=9) "Completed",
              Message: (string) "",
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63892596109,
                  loc: (*time.Location)(<already shown>)
                }
              },
              FinishedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63892596111,
                  loc: (*time.Location)(<already shown>)
                }
              },
              ContainerID: (string) (len=77) "containerd://b76bf55c34fefd1092858ee05f18d1d4bcb2a95c7a9d677428442cff26a53c4d"
            })
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=28) "registry.k8s.io/pause:3.10.1",
          ImageID: (string) (len=93) "registry.k8s.io/pause@sha256:278fb9dbcca9518083ad1e11276933a2e96f23de604a3a08cc3c80002767d24c",
          ContainerID: (string) (len=77) "containerd://b76bf55c34fefd1092858ee05f18d1d4bcb2a95c7a9d677428442cff26a53c4d",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-4fwqx",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }


  I0904 15:21:52.267055 23 deployment.go:656] ReplicaSet "test-deployment-79f49755d9":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-79f49755d9",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3969",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e6530137-d9b1-4f43-a604-0aa2898fb667",
      ResourceVersion: (string) (len=5) "33152",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892596108,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "79f49755d9",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "14e37049-c971-462a-85bc-eaa2fa68bc83",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892596110,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 31 34 65 33  37 30 34 39 2d 63 39 37  |":\"14e37049-c97|
              00000130  31 2d 34 36 32 61 2d 38  35 62 63 2d 65 61 61 32  |1-462a-85bc-eaa2|
              00000140  66 61 36 38 62 63 38 33  5c 22 7d 22 3a 7b 7d 7d  |fa68bc83\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892596110,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "79f49755d9",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "79f49755d9",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.56",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          HostnameOverride: (*string)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I0904 15:21:52.273350 23 deployment.go:656] ReplicaSet "test-deployment-8577666474":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-8577666474",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3969",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "167b4220-0bfa-4705-b44d-ad1132ced1a0",
      ResourceVersion: (string) (len=5) "33491",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892596110,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "8577666474",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "3",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "14e37049-c971-462a-85bc-eaa2fa68bc83",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892596111,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 31 34 65 33  37 30 34 39 2d 63 39 37  |":\"14e37049-c97|
              00000130  31 2d 34 36 32 61 2d 38  35 62 63 2d 65 61 61 32  |1-462a-85bc-eaa2|
              00000140  66 61 36 38 62 63 38 33  5c 22 7d 22 3a 7b 7d 7d  |fa68bc83\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892596112,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "8577666474",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=22) "test-deployment-static": (string) (len=4) "true",
            (string) (len=17) "pod-template-hash": (string) (len=10) "8577666474"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          HostnameOverride: (*string)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 2,
      AvailableReplicas: (int32) 2,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I0904 15:21:52.277762 23 deployment.go:668] pod: "test-deployment-8577666474-gpm59":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-8577666474-gpm59",
      GenerateName: (string) (len=27) "test-deployment-8577666474-",
      Namespace: (string) (len=15) "deployment-3969",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1279d127-6c7e-45c9-9211-23428c710d40",
      ResourceVersion: (string) (len=5) "33508",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892596111,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892596113,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(1),
      Labels: (map[string]string) (len=2) {
        (string) (len=22) "test-deployment-static": (string) (len=4) "true",
        (string) (len=17) "pod-template-hash": (string) (len=10) "8577666474"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-8577666474",
          UID: (types.UID) (len=36) "167b4220-0bfa-4705-b44d-ad1132ced1a0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892596111,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  31 36 37 62 34 32 32 30  |uid\":\"167b4220|
              000000a0  2d 30 62 66 61 2d 34 37  30 35 2d 62 34 34 64 2d  |-0bfa-4705-b44d-|
              000000b0  61 64 31 31 33 32 63 65  64 31 61 30 5c 22 7d 22  |ad1132ced1a0\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892596112,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=852) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6f 62 73 65 72 76  |me":{},"f:observ|
              00000080  65 64 47 65 6e 65 72 61  74 69 6f 6e 22 3a 7b 7d  |edGeneration":{}|
              00000090  2c 22 66 3a 73 74 61 74  75 73 22 3a 7b 7d 2c 22  |,"f:status":{},"|
              000000a0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |f:type":{}},"k:{|
              000000b0  5c 22 74 79 70 65 5c 22  3a 5c 22 49 6e 69 74 69  |\"type\":\"Initi|
              000000c0  61 6c 69 7a 65 64 5c 22  7d 22 3a 7b 22 2e 22 3a  |alized\"}":{".":|
              000000d0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000000f0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              00000100  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000110  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000120  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000130  65 22 3a 7b 7d 7d 2c 22  6b 3a 7b 5c 22 74 79 70  |e":{}},"k:{\"typ|
              00000140  65 5c 22 3a 5c 22 50 6f  64 52 65 61 64 79 54 6f  |e\":\"PodReadyTo|
              00000150  53 74 61 72 74 43 6f 6e  74 61 69 6e 65 72 73 5c  |StartContainers\|
              00000160  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 6c  |"}":{".":{},"f:l|
              00000170  61 73 74 50 72 6f 62 65  54 69 6d 65 22 3a 7b 7d  |astProbeTime":{}|
              00000180  2c 22 66 3a 6c 61 73 74  54 72 61 6e 73 69 74 69  |,"f:lastTransiti|
              00000190  6f 6e 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6f 62  |onTime":{},"f:ob|
              000001a0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001b0  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              000001c0  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000001d0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              000001e0  6f 64 53 63 68 65 64 75  6c 65 64 5c 22 7d 22 3a  |odScheduled\"}":|
              000001f0  7b 22 66 3a 6f 62 73 65  72 76 65 64 47 65 6e 65  |{"f:observedGene|
              00000200  72 61 74 69 6f 6e 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |ration":{}},"k:{|
              00000210  5c 22 74 79 70 65 5c 22  3a 5c 22 52 65 61 64 79  |\"type\":\"Ready|
              00000220  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000230  6c 61 73 74 50 72 6f 62  65 54 69 6d 65 22 3a 7b  |lastProbeTime":{|
              00000240  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000250  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6f  |ionTime":{},"f:o|
              00000260  62 73 65 72 76 65 64 47  65 6e 65 72 61 74 69 6f  |bservedGeneratio|
              00000270  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000280  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000290  7d 2c 22 66 3a 63 6f 6e  74 61 69 6e 65 72 53 74  |},"f:containerSt|
              000002a0  61 74 75 73 65 73 22 3a  7b 7d 2c 22 66 3a 68 6f  |atuses":{},"f:ho|
              000002b0  73 74 49 50 22 3a 7b 7d  2c 22 66 3a 68 6f 73 74  |stIP":{},"f:host|
              000002c0  49 50 73 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |IPs":{},"f:obser|
              000002d0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002e0  7d 2c 22 66 3a 70 68 61  73 65 22 3a 7b 7d 2c 22  |},"f:phase":{},"|
              000002f0  66 3a 70 6f 64 49 50 22  3a 7b 7d 2c 22 66 3a 70  |f:podIP":{},"f:p|
              00000300  6f 64 49 50 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |odIPs":{".":{},"|
              00000310  6b 3a 7b 5c 22 69 70 5c  22 3a 5c 22 31 39 32 2e  |k:{\"ip\":\"192.|
              00000320  31 36 38 2e 34 2e 31 33  33 5c 22 7d 22 3a 7b 22  |168.4.133\"}":{"|
              00000330  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000340  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000350  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wfkcw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wfkcw",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-18-79",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892596112,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892596111,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892596112,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892596112,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892596111,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.18.79",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.18.79"
        }
      },
      PodIP: (string) (len=13) "192.168.4.133",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.4.133"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892596111,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63892596111,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://8b72efc604e06ac773a383a1552c8eb4c9a01093680e36148d25b08dcb822633",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-wfkcw",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }


  I0904 15:21:52.278769 23 deployment.go:668] pod: "test-deployment-8577666474-jm7m8":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-8577666474-jm7m8",
      GenerateName: (string) (len=27) "test-deployment-8577666474-",
      Namespace: (string) (len=15) "deployment-3969",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "07c8b559-2a28-41b3-8c6b-57ae4980e5d6",
      ResourceVersion: (string) (len=5) "33509",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892596110,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892596113,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(1),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "8577666474",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-8577666474",
          UID: (types.UID) (len=36) "167b4220-0bfa-4705-b44d-ad1132ced1a0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892596110,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  31 36 37 62 34 32 32 30  |uid\":\"167b4220|
              000000a0  2d 30 62 66 61 2d 34 37  30 35 2d 62 34 34 64 2d  |-0bfa-4705-b44d-|
              000000b0  61 64 31 31 33 32 63 65  64 31 61 30 5c 22 7d 22  |ad1132ced1a0\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892596111,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=853) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6f 62 73 65 72 76  |me":{},"f:observ|
              00000080  65 64 47 65 6e 65 72 61  74 69 6f 6e 22 3a 7b 7d  |edGeneration":{}|
              00000090  2c 22 66 3a 73 74 61 74  75 73 22 3a 7b 7d 2c 22  |,"f:status":{},"|
              000000a0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |f:type":{}},"k:{|
              000000b0  5c 22 74 79 70 65 5c 22  3a 5c 22 49 6e 69 74 69  |\"type\":\"Initi|
              000000c0  61 6c 69 7a 65 64 5c 22  7d 22 3a 7b 22 2e 22 3a  |alized\"}":{".":|
              000000d0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000000f0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              00000100  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000110  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000120  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000130  65 22 3a 7b 7d 7d 2c 22  6b 3a 7b 5c 22 74 79 70  |e":{}},"k:{\"typ|
              00000140  65 5c 22 3a 5c 22 50 6f  64 52 65 61 64 79 54 6f  |e\":\"PodReadyTo|
              00000150  53 74 61 72 74 43 6f 6e  74 61 69 6e 65 72 73 5c  |StartContainers\|
              00000160  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 6c  |"}":{".":{},"f:l|
              00000170  61 73 74 50 72 6f 62 65  54 69 6d 65 22 3a 7b 7d  |astProbeTime":{}|
              00000180  2c 22 66 3a 6c 61 73 74  54 72 61 6e 73 69 74 69  |,"f:lastTransiti|
              00000190  6f 6e 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6f 62  |onTime":{},"f:ob|
              000001a0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001b0  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              000001c0  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000001d0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              000001e0  6f 64 53 63 68 65 64 75  6c 65 64 5c 22 7d 22 3a  |odScheduled\"}":|
              000001f0  7b 22 66 3a 6f 62 73 65  72 76 65 64 47 65 6e 65  |{"f:observedGene|
              00000200  72 61 74 69 6f 6e 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |ration":{}},"k:{|
              00000210  5c 22 74 79 70 65 5c 22  3a 5c 22 52 65 61 64 79  |\"type\":\"Ready|
              00000220  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000230  6c 61 73 74 50 72 6f 62  65 54 69 6d 65 22 3a 7b  |lastProbeTime":{|
              00000240  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000250  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6f  |ionTime":{},"f:o|
              00000260  62 73 65 72 76 65 64 47  65 6e 65 72 61 74 69 6f  |bservedGeneratio|
              00000270  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000280  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000290  7d 2c 22 66 3a 63 6f 6e  74 61 69 6e 65 72 53 74  |},"f:containerSt|
              000002a0  61 74 75 73 65 73 22 3a  7b 7d 2c 22 66 3a 68 6f  |atuses":{},"f:ho|
              000002b0  73 74 49 50 22 3a 7b 7d  2c 22 66 3a 68 6f 73 74  |stIP":{},"f:host|
              000002c0  49 50 73 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |IPs":{},"f:obser|
              000002d0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002e0  7d 2c 22 66 3a 70 68 61  73 65 22 3a 7b 7d 2c 22  |},"f:phase":{},"|
              000002f0  66 3a 70 6f 64 49 50 22  3a 7b 7d 2c 22 66 3a 70  |f:podIP":{},"f:p|
              00000300  6f 64 49 50 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |odIPs":{".":{},"|
              00000310  6b 3a 7b 5c 22 69 70 5c  22 3a 5c 22 31 39 32 2e  |k:{\"ip\":\"192.|
              00000320  31 36 38 2e 31 30 39 2e  39 37 5c 22 7d 22 3a 7b  |168.109.97\"}":{|
              00000330  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000340  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000350  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fcpcp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fcpcp",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-33-202",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892596111,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892596110,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892596111,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892596111,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892596110,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.33.202",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.33.202"
        }
      },
      PodIP: (string) (len=14) "192.168.109.97",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.109.97"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892596110,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63892596111,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://f0abdc8919f8afc30c689d27e7e8ebc219fee05b56012909928097262345bd54",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-fcpcp",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }


  I0904 15:21:52.284845 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-3969" for this suite. @ 09/04/25 15:21:52.289
• [4.180 seconds]
------------------------------
S
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:131
  STEP: Creating a kubernetes client @ 09/04/25 15:21:52.3
  I0904 15:21:52.300134 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename downward-api @ 09/04/25 15:21:52.3
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:21:52.313
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:21:52.316
  STEP: Creating the pod @ 09/04/25 15:21:52.318
  E0904 15:21:52.349336      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:21:53.349515      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:21:54.349900      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:21:54.858638 23 pod_client.go:186] Successfully updated pod "labelsupdateb6d7a853-f656-4b04-a78c-3a982dab8f6a"
  E0904 15:21:55.350945      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:21:56.351189      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:21:57.352010      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:21:58.352109      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:21:58.880420 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1236" for this suite. @ 09/04/25 15:21:58.884
• [6.591 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:327
  STEP: Creating a kubernetes client @ 09/04/25 15:21:58.89
  I0904 15:21:58.890953 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename statefulset @ 09/04/25 15:21:58.891
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:21:58.903
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:21:58.905
  STEP: Creating service test in namespace statefulset-9377 @ 09/04/25 15:21:58.907
  I0904 15:21:58.911529      23 warnings.go:110] "Warning: spec.SessionAffinity is ignored for headless services"
  STEP: Creating a new StatefulSet @ 09/04/25 15:21:58.911
  I0904 15:21:58.925200 23 wait.go:44] Found 0 stateful pods, waiting for 3
  E0904 15:21:59.352880      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:22:00.353804      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:22:01.353909      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:22:02.354791      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:22:03.354915      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:22:04.354997      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:22:05.355101      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:22:06.355790      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:22:07.355891      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:22:08.355989      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:22:08.925671 23 wait.go:54] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0904 15:22:08.925705 23 wait.go:54] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0904 15:22:08.925711 23 wait.go:54] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  I0904 15:22:08.936792 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=statefulset-9377 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0904 15:22:09.023188 23 builder.go:156] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0904 15:22:09.023228 23 builder.go:157] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0904 15:22:09.023237 23 statefulset.go:2447] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E0904 15:22:09.356828      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:22:10.357007      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:22:11.357188      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:22:12.357303      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:22:13.357419      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:22:14.357499      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:22:15.357628      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:22:16.357738      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:22:17.357937      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:22:18.358049      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 09/04/25 15:22:19.031
  I0904 15:22:19.042711 23 statefulset.go:2504] Updating stateful set ss2
  STEP: Creating a new revision @ 09/04/25 15:22:19.042
  E0904 15:22:19.358141      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:22:20.358813      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:22:21.358885      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:22:22.359053      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:22:23.359203      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:22:24.359255      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:22:25.359371      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:22:26.359480      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:22:27.359626      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:22:28.359770      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Updating Pods in reverse ordinal order @ 09/04/25 15:22:29.052
  I0904 15:22:29.055612 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=statefulset-9377 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0904 15:22:29.131374 23 builder.go:156] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0904 15:22:29.131441 23 builder.go:157] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0904 15:22:29.131453 23 statefulset.go:2471] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E0904 15:22:29.360926      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:22:30.360887      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:22:31.360977      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:22:32.361941      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:22:33.362016      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:22:34.362313      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:22:35.362435      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:22:36.362614      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:22:37.362647      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:22:38.362848      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:22:39.247868 23 wait.go:158] Waiting for StatefulSet statefulset-9377/ss2 to complete update
  E0904 15:22:39.362998      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:22:40.363872      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:22:41.363904      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:22:42.364032      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:22:43.364897      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:22:44.364983      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:22:45.365091      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:22:46.365780      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:22:47.365889      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:22:48.366800      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Rolling back to a previous revision @ 09/04/25 15:22:49.156
  I0904 15:22:49.156807 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=statefulset-9377 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0904 15:22:49.233555 23 builder.go:156] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0904 15:22:49.233612 23 builder.go:157] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0904 15:22:49.233622 23 statefulset.go:2447] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E0904 15:22:49.367155      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:22:50.367808      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:22:51.367909      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:22:52.368122      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:22:53.368265      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:22:54.368411      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:22:55.368519      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:22:56.368648      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:22:57.368817      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:22:58.368895      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:22:59.262846 23 statefulset.go:2504] Updating stateful set ss2
  E0904 15:22:59.369040      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:23:00.369238      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:23:01.369908      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:23:02.369973      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:23:03.370055      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:23:04.370194      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:23:05.370308      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:23:06.370425      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:23:07.370616      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:23:08.370756      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Rolling back update in reverse ordinal order @ 09/04/25 15:23:09.271
  I0904 15:23:09.273747 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=statefulset-9377 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0904 15:23:09.347450 23 builder.go:156] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0904 15:23:09.347482 23 builder.go:157] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0904 15:23:09.347490 23 statefulset.go:2471] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E0904 15:23:09.371423      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:23:10.371630      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:23:11.371755      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:23:12.371858      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:23:13.372081      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:23:14.372368      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:23:15.372387      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:23:16.372631      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:23:17.372731      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:23:18.372942      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:23:19.365034 23 statefulset.go:136] Deleting all statefulset in ns statefulset-9377
  I0904 15:23:19.368102 23 rest.go:153] Scaling statefulset ss2 to 0
  E0904 15:23:19.373319      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:23:20.373761      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:23:21.373845      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:23:22.373971      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:23:23.374054      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:23:24.374271      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:23:25.374431      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:23:26.375326      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:23:27.375399      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:23:28.375494      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:23:29.375779      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:23:29.386089 23 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0904 15:23:29.388328 23 rest.go:91] Deleting statefulset ss2
  I0904 15:23:29.407122 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-9377" for this suite. @ 09/04/25 15:23:29.412
• [90.526 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2230
  STEP: Creating a kubernetes client @ 09/04/25 15:23:29.417
  I0904 15:23:29.417501 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename services @ 09/04/25 15:23:29.418
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:23:29.43
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:23:29.431
  STEP: creating service in namespace services-9161 @ 09/04/25 15:23:29.434
  STEP: creating service affinity-clusterip in namespace services-9161 @ 09/04/25 15:23:29.434
  I0904 15:23:29.456332 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0904 15:23:30.376279      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:23:31.376349      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:23:31.476110 23 resource.go:344] Creating new exec pod
  E0904 15:23:32.376742      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:23:33.376817      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:23:33.498179 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=services-9161 exec execpod-affinityzlbj8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  I0904 15:23:33.572946 23 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip 80\nConnection to affinity-clusterip (10.152.183.176) 80 port [tcp/http] succeeded!\n"
  I0904 15:23:33.572980 23 builder.go:157] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0904 15:23:33.573038 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=services-9161 exec execpod-affinityzlbj8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.176 80'
  I0904 15:23:33.645226 23 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.176 80\nConnection to 10.152.183.176 80 port [tcp/http] succeeded!\n"
  I0904 15:23:33.645262 23 builder.go:157] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0904 15:23:33.645307 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=services-9161 exec execpod-affinityzlbj8 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.176:80/ ; done'
  I0904 15:23:33.811502 23 builder.go:156] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.176:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.176:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.176:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.176:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.176:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.176:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.176:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.176:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.176:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.176:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.176:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.176:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.176:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.176:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.176:80/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://10.152.183.176:80/\n"
  I0904 15:23:33.811751 23 builder.go:157] stdout: "\naffinity-clusterip-5d4d4bb77f-9h6kv\naffinity-clusterip-5d4d4bb77f-9h6kv\naffinity-clusterip-5d4d4bb77f-9h6kv\naffinity-clusterip-5d4d4bb77f-9h6kv\naffinity-clusterip-5d4d4bb77f-9h6kv\naffinity-clusterip-5d4d4bb77f-9h6kv\naffinity-clusterip-5d4d4bb77f-9h6kv\naffinity-clusterip-5d4d4bb77f-9h6kv\naffinity-clusterip-5d4d4bb77f-9h6kv\naffinity-clusterip-5d4d4bb77f-9h6kv\naffinity-clusterip-5d4d4bb77f-9h6kv\naffinity-clusterip-5d4d4bb77f-9h6kv\naffinity-clusterip-5d4d4bb77f-9h6kv\naffinity-clusterip-5d4d4bb77f-9h6kv\naffinity-clusterip-5d4d4bb77f-9h6kv\naffinity-clusterip-5d4d4bb77f-9h6kv"
  I0904 15:23:33.811805 23 service.go:225] Received response from host: affinity-clusterip-5d4d4bb77f-9h6kv
  I0904 15:23:33.811951 23 service.go:225] Received response from host: affinity-clusterip-5d4d4bb77f-9h6kv
  I0904 15:23:33.812028 23 service.go:225] Received response from host: affinity-clusterip-5d4d4bb77f-9h6kv
  I0904 15:23:33.812047 23 service.go:225] Received response from host: affinity-clusterip-5d4d4bb77f-9h6kv
  I0904 15:23:33.812053 23 service.go:225] Received response from host: affinity-clusterip-5d4d4bb77f-9h6kv
  I0904 15:23:33.812061 23 service.go:225] Received response from host: affinity-clusterip-5d4d4bb77f-9h6kv
  I0904 15:23:33.812120 23 service.go:225] Received response from host: affinity-clusterip-5d4d4bb77f-9h6kv
  I0904 15:23:33.812126 23 service.go:225] Received response from host: affinity-clusterip-5d4d4bb77f-9h6kv
  I0904 15:23:33.812132 23 service.go:225] Received response from host: affinity-clusterip-5d4d4bb77f-9h6kv
  I0904 15:23:33.812137 23 service.go:225] Received response from host: affinity-clusterip-5d4d4bb77f-9h6kv
  I0904 15:23:33.812141 23 service.go:225] Received response from host: affinity-clusterip-5d4d4bb77f-9h6kv
  I0904 15:23:33.812223 23 service.go:225] Received response from host: affinity-clusterip-5d4d4bb77f-9h6kv
  I0904 15:23:33.812228 23 service.go:225] Received response from host: affinity-clusterip-5d4d4bb77f-9h6kv
  I0904 15:23:33.812233 23 service.go:225] Received response from host: affinity-clusterip-5d4d4bb77f-9h6kv
  I0904 15:23:33.812237 23 service.go:225] Received response from host: affinity-clusterip-5d4d4bb77f-9h6kv
  I0904 15:23:33.812242 23 service.go:225] Received response from host: affinity-clusterip-5d4d4bb77f-9h6kv
  I0904 15:23:33.812460 23 service.go:4469] Cleaning up the exec pod
  I0904 15:23:33.868531 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9161" for this suite. @ 09/04/25 15:23:33.874
• [4.467 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:170
  STEP: Creating a kubernetes client @ 09/04/25 15:23:33.885
  I0904 15:23:33.885043 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename resourcequota @ 09/04/25 15:23:33.885
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:23:33.893
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:23:33.895
  STEP: Discovering how many secrets are in namespace by default @ 09/04/25 15:23:33.9
  E0904 15:23:34.376890      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:23:35.377009      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:23:36.377806      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:23:37.377947      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:23:38.378081      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 09/04/25 15:23:38.902
  E0904 15:23:39.378394      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:23:40.378497      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:23:41.379325      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:23:42.379382      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:23:43.379411      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 09/04/25 15:23:43.907
  STEP: Ensuring resource quota status is calculated @ 09/04/25 15:23:43.913
  E0904 15:23:44.380083      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:23:45.380356      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:23:45.926331 23 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc002370000>: 
          metadata:
            creationTimestamp: "2025-09-04T15:23:43Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-04T15:23:43Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
                  f:used:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-04T15:23:43Z"
            name: test-quota
            namespace: resourcequota-8705
            resourceVersion: "34504"
            uid: 6c15b3b8-798e-4951-a254-c1a78224f9bf
          spec:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "1"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
          status:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "1"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
            used:
              configmaps: "1"
              count/replicasets.apps: "0"
              cpu: "0"
              ephemeral-storage: "0"
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
              gold.storageclass.storage.k8s.io/requests.storage: "0"
              memory: "0"
              persistentvolumeclaims: "0"
              pods: "0"
              replicationcontrollers: "0"
              requests.example.com/dongle: "0"
              requests.storage: "0"
              resourcequotas: "1"
              secrets: "0"
              services: "0"
              services.loadbalancers: "0"
              services.nodeports: "0"
  STEP: Creating a Secret @ 09/04/25 15:23:45.926
  STEP: Ensuring resource quota status captures secret creation @ 09/04/25 15:23:45.941
  I0904 15:23:45.945146 23 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc002f4c500>: 
          metadata:
            creationTimestamp: "2025-09-04T15:23:43Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-04T15:23:43Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
                  f:used:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-04T15:23:43Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:used:
                    f:secrets: {}
              manager: kube-apiserver
              operation: Update
              subresource: status
              time: "2025-09-04T15:23:45Z"
            name: test-quota
            namespace: resourcequota-8705
            resourceVersion: "34508"
            uid: 6c15b3b8-798e-4951-a254-c1a78224f9bf
          spec:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "1"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
          status:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "1"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
            used:
              configmaps: "1"
              count/replicasets.apps: "0"
              cpu: "0"
              ephemeral-storage: "0"
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
              gold.storageclass.storage.k8s.io/requests.storage: "0"
              memory: "0"
              persistentvolumeclaims: "0"
              pods: "0"
              replicationcontrollers: "0"
              requests.example.com/dongle: "0"
              requests.storage: "0"
              resourcequotas: "1"
              secrets: "1"
              services: "0"
              services.loadbalancers: "0"
              services.nodeports: "0"
  STEP: Deleting a secret @ 09/04/25 15:23:45.945
  STEP: Ensuring resource quota status released usage @ 09/04/25 15:23:45.95
  E0904 15:23:46.380921      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:23:47.381115      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:23:47.956756 23 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc002370500>: 
          metadata:
            creationTimestamp: "2025-09-04T15:23:43Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-04T15:23:43Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
                  f:used:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-04T15:23:45Z"
            name: test-quota
            namespace: resourcequota-8705
            resourceVersion: "34511"
            uid: 6c15b3b8-798e-4951-a254-c1a78224f9bf
          spec:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "1"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
          status:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "1"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
            used:
              configmaps: "1"
              count/replicasets.apps: "0"
              cpu: "0"
              ephemeral-storage: "0"
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
              gold.storageclass.storage.k8s.io/requests.storage: "0"
              memory: "0"
              persistentvolumeclaims: "0"
              pods: "0"
              replicationcontrollers: "0"
              requests.example.com/dongle: "0"
              requests.storage: "0"
              resourcequotas: "1"
              secrets: "0"
              services: "0"
              services.loadbalancers: "0"
              services.nodeports: "0"
  I0904 15:23:47.956999 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8705" for this suite. @ 09/04/25 15:23:47.96
• [14.082 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:215
  STEP: Creating a kubernetes client @ 09/04/25 15:23:47.967
  I0904 15:23:47.967577 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename container-probe @ 09/04/25 15:23:47.968
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:23:47.981
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:23:47.984
  STEP: Creating pod test-webserver-b06b56aa-e904-4a5a-a479-b426ada90629 in namespace container-probe-1526 @ 09/04/25 15:23:47.986
  E0904 15:23:48.381695      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:23:49.381896      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/04/25 15:23:50.007
  I0904 15:23:50.010715 23 container_probe.go:1749] Initial restart count of pod test-webserver-b06b56aa-e904-4a5a-a479-b426ada90629 is 0
  I0904 15:23:50.013068 23 container_probe.go:1759] Get pod test-webserver-b06b56aa-e904-4a5a-a479-b426ada90629 in namespace container-probe-1526
  E0904 15:23:50.382618      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:23:51.383327      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:23:52.018025 23 container_probe.go:1759] Get pod test-webserver-b06b56aa-e904-4a5a-a479-b426ada90629 in namespace container-probe-1526
  E0904 15:23:52.383426      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:23:53.383526      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:23:54.022238 23 container_probe.go:1759] Get pod test-webserver-b06b56aa-e904-4a5a-a479-b426ada90629 in namespace container-probe-1526
  E0904 15:23:54.383671      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:23:55.384278      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:23:56.028484 23 container_probe.go:1759] Get pod test-webserver-b06b56aa-e904-4a5a-a479-b426ada90629 in namespace container-probe-1526
  E0904 15:23:56.384966      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:23:57.385815      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:23:58.033171 23 container_probe.go:1759] Get pod test-webserver-b06b56aa-e904-4a5a-a479-b426ada90629 in namespace container-probe-1526
  E0904 15:23:58.386570      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:23:59.386711      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:24:00.039500 23 container_probe.go:1759] Get pod test-webserver-b06b56aa-e904-4a5a-a479-b426ada90629 in namespace container-probe-1526
  E0904 15:24:00.386888      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:24:01.386954      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:24:02.045505 23 container_probe.go:1759] Get pod test-webserver-b06b56aa-e904-4a5a-a479-b426ada90629 in namespace container-probe-1526
  E0904 15:24:02.387801      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:24:03.387881      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:24:04.050499 23 container_probe.go:1759] Get pod test-webserver-b06b56aa-e904-4a5a-a479-b426ada90629 in namespace container-probe-1526
  E0904 15:24:04.388805      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:24:05.389792      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:24:06.054548 23 container_probe.go:1759] Get pod test-webserver-b06b56aa-e904-4a5a-a479-b426ada90629 in namespace container-probe-1526
  E0904 15:24:06.390817      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:24:07.390978      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:24:08.057850 23 container_probe.go:1759] Get pod test-webserver-b06b56aa-e904-4a5a-a479-b426ada90629 in namespace container-probe-1526
  E0904 15:24:08.391249      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:24:09.391382      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:24:10.064319 23 container_probe.go:1759] Get pod test-webserver-b06b56aa-e904-4a5a-a479-b426ada90629 in namespace container-probe-1526
  E0904 15:24:10.391712      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:24:11.391748      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:24:12.067535 23 container_probe.go:1759] Get pod test-webserver-b06b56aa-e904-4a5a-a479-b426ada90629 in namespace container-probe-1526
  E0904 15:24:12.392816      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:24:13.392906      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:24:14.072602 23 container_probe.go:1759] Get pod test-webserver-b06b56aa-e904-4a5a-a479-b426ada90629 in namespace container-probe-1526
  E0904 15:24:14.393809      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:24:15.394312      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:24:16.078890 23 container_probe.go:1759] Get pod test-webserver-b06b56aa-e904-4a5a-a479-b426ada90629 in namespace container-probe-1526
  E0904 15:24:16.395261      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:24:17.395816      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:24:18.082694 23 container_probe.go:1759] Get pod test-webserver-b06b56aa-e904-4a5a-a479-b426ada90629 in namespace container-probe-1526
  E0904 15:24:18.396809      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:24:19.396924      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:24:20.089643 23 container_probe.go:1759] Get pod test-webserver-b06b56aa-e904-4a5a-a479-b426ada90629 in namespace container-probe-1526
  E0904 15:24:20.397793      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:24:21.398014      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:24:22.093611 23 container_probe.go:1759] Get pod test-webserver-b06b56aa-e904-4a5a-a479-b426ada90629 in namespace container-probe-1526
  E0904 15:24:22.398810      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:24:23.398920      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:24:24.100527 23 container_probe.go:1759] Get pod test-webserver-b06b56aa-e904-4a5a-a479-b426ada90629 in namespace container-probe-1526
  E0904 15:24:24.399999      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:24:25.400131      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:24:26.104811 23 container_probe.go:1759] Get pod test-webserver-b06b56aa-e904-4a5a-a479-b426ada90629 in namespace container-probe-1526
  E0904 15:24:26.400197      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:24:27.400446      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:24:28.109889 23 container_probe.go:1759] Get pod test-webserver-b06b56aa-e904-4a5a-a479-b426ada90629 in namespace container-probe-1526
  E0904 15:24:28.401316      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:24:29.401426      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:24:30.113923 23 container_probe.go:1759] Get pod test-webserver-b06b56aa-e904-4a5a-a479-b426ada90629 in namespace container-probe-1526
  E0904 15:24:30.402366      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:24:31.402603      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:24:32.118254 23 container_probe.go:1759] Get pod test-webserver-b06b56aa-e904-4a5a-a479-b426ada90629 in namespace container-probe-1526
  E0904 15:24:32.402658      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:24:33.402777      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:24:34.123957 23 container_probe.go:1759] Get pod test-webserver-b06b56aa-e904-4a5a-a479-b426ada90629 in namespace container-probe-1526
  E0904 15:24:34.403373      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:24:35.403450      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:24:36.128582 23 container_probe.go:1759] Get pod test-webserver-b06b56aa-e904-4a5a-a479-b426ada90629 in namespace container-probe-1526
  E0904 15:24:36.403983      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:24:37.404091      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:24:38.135208 23 container_probe.go:1759] Get pod test-webserver-b06b56aa-e904-4a5a-a479-b426ada90629 in namespace container-probe-1526
  E0904 15:24:38.404607      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:24:39.404757      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:24:40.139324 23 container_probe.go:1759] Get pod test-webserver-b06b56aa-e904-4a5a-a479-b426ada90629 in namespace container-probe-1526
  E0904 15:24:40.405572      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:24:41.405747      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:24:42.145556 23 container_probe.go:1759] Get pod test-webserver-b06b56aa-e904-4a5a-a479-b426ada90629 in namespace container-probe-1526
  E0904 15:24:42.406813      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:24:43.406889      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:24:44.150486 23 container_probe.go:1759] Get pod test-webserver-b06b56aa-e904-4a5a-a479-b426ada90629 in namespace container-probe-1526
  E0904 15:24:44.407867      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:24:45.408009      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:24:46.154725 23 container_probe.go:1759] Get pod test-webserver-b06b56aa-e904-4a5a-a479-b426ada90629 in namespace container-probe-1526
  E0904 15:24:46.408012      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:24:47.408110      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:24:48.159671 23 container_probe.go:1759] Get pod test-webserver-b06b56aa-e904-4a5a-a479-b426ada90629 in namespace container-probe-1526
  E0904 15:24:48.409097      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:24:49.409286      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:24:50.163969 23 container_probe.go:1759] Get pod test-webserver-b06b56aa-e904-4a5a-a479-b426ada90629 in namespace container-probe-1526
  E0904 15:24:50.410322      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:24:51.410458      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:24:52.168162 23 container_probe.go:1759] Get pod test-webserver-b06b56aa-e904-4a5a-a479-b426ada90629 in namespace container-probe-1526
  E0904 15:24:52.411469      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:24:53.411644      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:24:54.172200 23 container_probe.go:1759] Get pod test-webserver-b06b56aa-e904-4a5a-a479-b426ada90629 in namespace container-probe-1526
  E0904 15:24:54.412579      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:24:55.412823      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:24:56.178263 23 container_probe.go:1759] Get pod test-webserver-b06b56aa-e904-4a5a-a479-b426ada90629 in namespace container-probe-1526
  E0904 15:24:56.413604      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:24:57.413719      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:24:58.183940 23 container_probe.go:1759] Get pod test-webserver-b06b56aa-e904-4a5a-a479-b426ada90629 in namespace container-probe-1526
  E0904 15:24:58.414264      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:24:59.415120      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:25:00.191151 23 container_probe.go:1759] Get pod test-webserver-b06b56aa-e904-4a5a-a479-b426ada90629 in namespace container-probe-1526
  E0904 15:25:00.415492      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:25:01.415829      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:25:02.197173 23 container_probe.go:1759] Get pod test-webserver-b06b56aa-e904-4a5a-a479-b426ada90629 in namespace container-probe-1526
  E0904 15:25:02.416546      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:25:03.416715      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:25:04.201465 23 container_probe.go:1759] Get pod test-webserver-b06b56aa-e904-4a5a-a479-b426ada90629 in namespace container-probe-1526
  E0904 15:25:04.417780      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:25:05.417967      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:25:06.207525 23 container_probe.go:1759] Get pod test-webserver-b06b56aa-e904-4a5a-a479-b426ada90629 in namespace container-probe-1526
  E0904 15:25:06.418803      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:25:07.418892      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:25:08.211062 23 container_probe.go:1759] Get pod test-webserver-b06b56aa-e904-4a5a-a479-b426ada90629 in namespace container-probe-1526
  E0904 15:25:08.419319      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:25:09.419434      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:25:10.216238 23 container_probe.go:1759] Get pod test-webserver-b06b56aa-e904-4a5a-a479-b426ada90629 in namespace container-probe-1526
  E0904 15:25:10.419507      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:25:11.419750      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:25:12.222480 23 container_probe.go:1759] Get pod test-webserver-b06b56aa-e904-4a5a-a479-b426ada90629 in namespace container-probe-1526
  E0904 15:25:12.419761      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:25:13.419866      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:25:14.227768 23 container_probe.go:1759] Get pod test-webserver-b06b56aa-e904-4a5a-a479-b426ada90629 in namespace container-probe-1526
  E0904 15:25:14.420025      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:25:15.420121      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:25:16.231980 23 container_probe.go:1759] Get pod test-webserver-b06b56aa-e904-4a5a-a479-b426ada90629 in namespace container-probe-1526
  E0904 15:25:16.420206      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:25:17.420800      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:25:18.236848 23 container_probe.go:1759] Get pod test-webserver-b06b56aa-e904-4a5a-a479-b426ada90629 in namespace container-probe-1526
  E0904 15:25:18.421114      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:25:19.421301      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:25:20.241035 23 container_probe.go:1759] Get pod test-webserver-b06b56aa-e904-4a5a-a479-b426ada90629 in namespace container-probe-1526
  E0904 15:25:20.422279      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:25:21.422833      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:25:22.245469 23 container_probe.go:1759] Get pod test-webserver-b06b56aa-e904-4a5a-a479-b426ada90629 in namespace container-probe-1526
  E0904 15:25:22.423826      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:25:23.423883      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:25:24.249735 23 container_probe.go:1759] Get pod test-webserver-b06b56aa-e904-4a5a-a479-b426ada90629 in namespace container-probe-1526
  E0904 15:25:24.423968      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:25:25.424046      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:25:26.253832 23 container_probe.go:1759] Get pod test-webserver-b06b56aa-e904-4a5a-a479-b426ada90629 in namespace container-probe-1526
  E0904 15:25:26.425115      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:25:27.425212      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:25:28.258214 23 container_probe.go:1759] Get pod test-webserver-b06b56aa-e904-4a5a-a479-b426ada90629 in namespace container-probe-1526
  E0904 15:25:28.425400      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:25:29.425802      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:25:30.261988 23 container_probe.go:1759] Get pod test-webserver-b06b56aa-e904-4a5a-a479-b426ada90629 in namespace container-probe-1526
  E0904 15:25:30.426217      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:25:31.426325      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:25:32.266702 23 container_probe.go:1759] Get pod test-webserver-b06b56aa-e904-4a5a-a479-b426ada90629 in namespace container-probe-1526
  E0904 15:25:32.426799      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:25:33.426885      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:25:34.271555 23 container_probe.go:1759] Get pod test-webserver-b06b56aa-e904-4a5a-a479-b426ada90629 in namespace container-probe-1526
  E0904 15:25:34.427804      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:25:35.427891      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:25:36.275480 23 container_probe.go:1759] Get pod test-webserver-b06b56aa-e904-4a5a-a479-b426ada90629 in namespace container-probe-1526
  E0904 15:25:36.428722      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:25:37.428849      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:25:38.278906 23 container_probe.go:1759] Get pod test-webserver-b06b56aa-e904-4a5a-a479-b426ada90629 in namespace container-probe-1526
  E0904 15:25:38.429201      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:25:39.429435      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:25:40.282758 23 container_probe.go:1759] Get pod test-webserver-b06b56aa-e904-4a5a-a479-b426ada90629 in namespace container-probe-1526
  E0904 15:25:40.430050      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:25:41.430181      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:25:42.287203 23 container_probe.go:1759] Get pod test-webserver-b06b56aa-e904-4a5a-a479-b426ada90629 in namespace container-probe-1526
  E0904 15:25:42.430491      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:25:43.430618      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:25:44.292982 23 container_probe.go:1759] Get pod test-webserver-b06b56aa-e904-4a5a-a479-b426ada90629 in namespace container-probe-1526
  E0904 15:25:44.431242      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:25:45.431530      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:25:46.297398 23 container_probe.go:1759] Get pod test-webserver-b06b56aa-e904-4a5a-a479-b426ada90629 in namespace container-probe-1526
  E0904 15:25:46.431731      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:25:47.431913      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:25:48.303518 23 container_probe.go:1759] Get pod test-webserver-b06b56aa-e904-4a5a-a479-b426ada90629 in namespace container-probe-1526
  E0904 15:25:48.432800      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:25:49.432893      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:25:50.308022 23 container_probe.go:1759] Get pod test-webserver-b06b56aa-e904-4a5a-a479-b426ada90629 in namespace container-probe-1526
  E0904 15:25:50.433319      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:25:51.433462      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:25:52.312437 23 container_probe.go:1759] Get pod test-webserver-b06b56aa-e904-4a5a-a479-b426ada90629 in namespace container-probe-1526
  E0904 15:25:52.433572      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:25:53.433741      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:25:54.316199 23 container_probe.go:1759] Get pod test-webserver-b06b56aa-e904-4a5a-a479-b426ada90629 in namespace container-probe-1526
  E0904 15:25:54.434404      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:25:55.434547      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:25:56.321537 23 container_probe.go:1759] Get pod test-webserver-b06b56aa-e904-4a5a-a479-b426ada90629 in namespace container-probe-1526
  E0904 15:25:56.434696      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:25:57.434817      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:25:58.325795 23 container_probe.go:1759] Get pod test-webserver-b06b56aa-e904-4a5a-a479-b426ada90629 in namespace container-probe-1526
  E0904 15:25:58.434922      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:25:59.435785      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:26:00.333018 23 container_probe.go:1759] Get pod test-webserver-b06b56aa-e904-4a5a-a479-b426ada90629 in namespace container-probe-1526
  E0904 15:26:00.436181      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:26:01.436300      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:26:02.340207 23 container_probe.go:1759] Get pod test-webserver-b06b56aa-e904-4a5a-a479-b426ada90629 in namespace container-probe-1526
  E0904 15:26:02.437347      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:26:03.437492      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:26:04.344530 23 container_probe.go:1759] Get pod test-webserver-b06b56aa-e904-4a5a-a479-b426ada90629 in namespace container-probe-1526
  E0904 15:26:04.437766      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:26:05.437935      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:26:06.347291 23 container_probe.go:1759] Get pod test-webserver-b06b56aa-e904-4a5a-a479-b426ada90629 in namespace container-probe-1526
  E0904 15:26:06.438517      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:26:07.438672      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:26:08.351202 23 container_probe.go:1759] Get pod test-webserver-b06b56aa-e904-4a5a-a479-b426ada90629 in namespace container-probe-1526
  E0904 15:26:08.439327      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:26:09.439483      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:26:10.356611 23 container_probe.go:1759] Get pod test-webserver-b06b56aa-e904-4a5a-a479-b426ada90629 in namespace container-probe-1526
  E0904 15:26:10.439830      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:26:11.440016      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:26:12.364269 23 container_probe.go:1759] Get pod test-webserver-b06b56aa-e904-4a5a-a479-b426ada90629 in namespace container-probe-1526
  E0904 15:26:12.440467      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:26:13.440658      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:26:14.368324 23 container_probe.go:1759] Get pod test-webserver-b06b56aa-e904-4a5a-a479-b426ada90629 in namespace container-probe-1526
  E0904 15:26:14.441434      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:26:15.441615      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:26:16.372381 23 container_probe.go:1759] Get pod test-webserver-b06b56aa-e904-4a5a-a479-b426ada90629 in namespace container-probe-1526
  E0904 15:26:16.442541      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:26:17.442772      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:26:18.376523 23 container_probe.go:1759] Get pod test-webserver-b06b56aa-e904-4a5a-a479-b426ada90629 in namespace container-probe-1526
  E0904 15:26:18.443687      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:26:19.444472      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:26:20.381100 23 container_probe.go:1759] Get pod test-webserver-b06b56aa-e904-4a5a-a479-b426ada90629 in namespace container-probe-1526
  E0904 15:26:20.445255      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:26:21.445789      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:26:22.385609 23 container_probe.go:1759] Get pod test-webserver-b06b56aa-e904-4a5a-a479-b426ada90629 in namespace container-probe-1526
  E0904 15:26:22.446676      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:26:23.446728      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:26:24.390447 23 container_probe.go:1759] Get pod test-webserver-b06b56aa-e904-4a5a-a479-b426ada90629 in namespace container-probe-1526
  E0904 15:26:24.447577      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:26:25.447701      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:26:26.394130 23 container_probe.go:1759] Get pod test-webserver-b06b56aa-e904-4a5a-a479-b426ada90629 in namespace container-probe-1526
  E0904 15:26:26.448280      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:26:27.448409      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:26:28.399239 23 container_probe.go:1759] Get pod test-webserver-b06b56aa-e904-4a5a-a479-b426ada90629 in namespace container-probe-1526
  E0904 15:26:28.449328      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:26:29.449492      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:26:30.405380 23 container_probe.go:1759] Get pod test-webserver-b06b56aa-e904-4a5a-a479-b426ada90629 in namespace container-probe-1526
  E0904 15:26:30.449552      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:26:31.449741      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:26:32.409443 23 container_probe.go:1759] Get pod test-webserver-b06b56aa-e904-4a5a-a479-b426ada90629 in namespace container-probe-1526
  E0904 15:26:32.450535      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:26:33.450735      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:26:34.414059 23 container_probe.go:1759] Get pod test-webserver-b06b56aa-e904-4a5a-a479-b426ada90629 in namespace container-probe-1526
  E0904 15:26:34.451218      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:26:35.451424      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:26:36.417534 23 container_probe.go:1759] Get pod test-webserver-b06b56aa-e904-4a5a-a479-b426ada90629 in namespace container-probe-1526
  E0904 15:26:36.451707      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:26:37.451836      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:26:38.422322 23 container_probe.go:1759] Get pod test-webserver-b06b56aa-e904-4a5a-a479-b426ada90629 in namespace container-probe-1526
  E0904 15:26:38.452487      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:26:39.452690      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:26:40.427302 23 container_probe.go:1759] Get pod test-webserver-b06b56aa-e904-4a5a-a479-b426ada90629 in namespace container-probe-1526
  E0904 15:26:40.453429      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:26:41.453956      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:26:42.431518 23 container_probe.go:1759] Get pod test-webserver-b06b56aa-e904-4a5a-a479-b426ada90629 in namespace container-probe-1526
  E0904 15:26:42.454655      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:26:43.454732      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:26:44.437859 23 container_probe.go:1759] Get pod test-webserver-b06b56aa-e904-4a5a-a479-b426ada90629 in namespace container-probe-1526
  E0904 15:26:44.454898      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:26:45.455019      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:26:46.442413 23 container_probe.go:1759] Get pod test-webserver-b06b56aa-e904-4a5a-a479-b426ada90629 in namespace container-probe-1526
  E0904 15:26:46.455495      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:26:47.455798      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:26:48.446700 23 container_probe.go:1759] Get pod test-webserver-b06b56aa-e904-4a5a-a479-b426ada90629 in namespace container-probe-1526
  E0904 15:26:48.456802      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:26:49.456946      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:26:50.451675 23 container_probe.go:1759] Get pod test-webserver-b06b56aa-e904-4a5a-a479-b426ada90629 in namespace container-probe-1526
  E0904 15:26:50.457721      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:26:51.457881      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:26:52.455533 23 container_probe.go:1759] Get pod test-webserver-b06b56aa-e904-4a5a-a479-b426ada90629 in namespace container-probe-1526
  E0904 15:26:52.458664      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:26:53.458831      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:26:54.458832      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:26:54.459108 23 container_probe.go:1759] Get pod test-webserver-b06b56aa-e904-4a5a-a479-b426ada90629 in namespace container-probe-1526
  E0904 15:26:55.458940      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:26:56.459122      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:26:56.464701 23 container_probe.go:1759] Get pod test-webserver-b06b56aa-e904-4a5a-a479-b426ada90629 in namespace container-probe-1526
  E0904 15:26:57.459218      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:26:58.459434      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:26:58.469151 23 container_probe.go:1759] Get pod test-webserver-b06b56aa-e904-4a5a-a479-b426ada90629 in namespace container-probe-1526
  E0904 15:26:59.459762      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:27:00.459889      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:27:00.475878 23 container_probe.go:1759] Get pod test-webserver-b06b56aa-e904-4a5a-a479-b426ada90629 in namespace container-probe-1526
  E0904 15:27:01.460046      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:27:02.460147      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:27:02.481868 23 container_probe.go:1759] Get pod test-webserver-b06b56aa-e904-4a5a-a479-b426ada90629 in namespace container-probe-1526
  E0904 15:27:03.460278      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:27:04.460492      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:27:04.486798 23 container_probe.go:1759] Get pod test-webserver-b06b56aa-e904-4a5a-a479-b426ada90629 in namespace container-probe-1526
  E0904 15:27:05.460640      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:27:06.460837      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:27:06.491358 23 container_probe.go:1759] Get pod test-webserver-b06b56aa-e904-4a5a-a479-b426ada90629 in namespace container-probe-1526
  E0904 15:27:07.460927      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:27:08.461111      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:27:08.496181 23 container_probe.go:1759] Get pod test-webserver-b06b56aa-e904-4a5a-a479-b426ada90629 in namespace container-probe-1526
  E0904 15:27:09.461207      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:27:10.461786      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:27:10.502666 23 container_probe.go:1759] Get pod test-webserver-b06b56aa-e904-4a5a-a479-b426ada90629 in namespace container-probe-1526
  E0904 15:27:11.461948      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:27:12.462085      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:27:12.507572 23 container_probe.go:1759] Get pod test-webserver-b06b56aa-e904-4a5a-a479-b426ada90629 in namespace container-probe-1526
  E0904 15:27:13.462180      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:27:14.462830      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:27:14.511738 23 container_probe.go:1759] Get pod test-webserver-b06b56aa-e904-4a5a-a479-b426ada90629 in namespace container-probe-1526
  E0904 15:27:15.463719      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:27:16.464806      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:27:16.515970 23 container_probe.go:1759] Get pod test-webserver-b06b56aa-e904-4a5a-a479-b426ada90629 in namespace container-probe-1526
  E0904 15:27:17.465794      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:27:18.466776      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:27:18.521257 23 container_probe.go:1759] Get pod test-webserver-b06b56aa-e904-4a5a-a479-b426ada90629 in namespace container-probe-1526
  E0904 15:27:19.467155      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:27:20.467906      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:27:20.528277 23 container_probe.go:1759] Get pod test-webserver-b06b56aa-e904-4a5a-a479-b426ada90629 in namespace container-probe-1526
  E0904 15:27:21.468787      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:27:22.468898      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:27:22.532845 23 container_probe.go:1759] Get pod test-webserver-b06b56aa-e904-4a5a-a479-b426ada90629 in namespace container-probe-1526
  E0904 15:27:23.468986      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:27:24.469164      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:27:24.536992 23 container_probe.go:1759] Get pod test-webserver-b06b56aa-e904-4a5a-a479-b426ada90629 in namespace container-probe-1526
  E0904 15:27:25.469255      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:27:26.469782      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:27:26.541868 23 container_probe.go:1759] Get pod test-webserver-b06b56aa-e904-4a5a-a479-b426ada90629 in namespace container-probe-1526
  E0904 15:27:27.469869      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:27:28.470125      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:27:28.546916 23 container_probe.go:1759] Get pod test-webserver-b06b56aa-e904-4a5a-a479-b426ada90629 in namespace container-probe-1526
  E0904 15:27:29.470750      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:27:30.470854      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:27:30.551407 23 container_probe.go:1759] Get pod test-webserver-b06b56aa-e904-4a5a-a479-b426ada90629 in namespace container-probe-1526
  E0904 15:27:31.471064      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:27:32.471143      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:27:32.557638 23 container_probe.go:1759] Get pod test-webserver-b06b56aa-e904-4a5a-a479-b426ada90629 in namespace container-probe-1526
  E0904 15:27:33.471571      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:27:34.471749      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:27:34.561931 23 container_probe.go:1759] Get pod test-webserver-b06b56aa-e904-4a5a-a479-b426ada90629 in namespace container-probe-1526
  E0904 15:27:35.471852      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:27:36.471957      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:27:36.565724 23 container_probe.go:1759] Get pod test-webserver-b06b56aa-e904-4a5a-a479-b426ada90629 in namespace container-probe-1526
  E0904 15:27:37.472108      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:27:38.472240      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:27:38.570603 23 container_probe.go:1759] Get pod test-webserver-b06b56aa-e904-4a5a-a479-b426ada90629 in namespace container-probe-1526
  E0904 15:27:39.472375      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:27:40.472465      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:27:40.575091 23 container_probe.go:1759] Get pod test-webserver-b06b56aa-e904-4a5a-a479-b426ada90629 in namespace container-probe-1526
  E0904 15:27:41.472770      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:27:42.472841      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:27:42.579892 23 container_probe.go:1759] Get pod test-webserver-b06b56aa-e904-4a5a-a479-b426ada90629 in namespace container-probe-1526
  E0904 15:27:43.472916      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:27:44.473130      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:27:44.586052 23 container_probe.go:1759] Get pod test-webserver-b06b56aa-e904-4a5a-a479-b426ada90629 in namespace container-probe-1526
  E0904 15:27:45.473390      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:27:46.473631      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:27:46.590805 23 container_probe.go:1759] Get pod test-webserver-b06b56aa-e904-4a5a-a479-b426ada90629 in namespace container-probe-1526
  E0904 15:27:47.473707      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:27:48.473813      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:27:48.596544 23 container_probe.go:1759] Get pod test-webserver-b06b56aa-e904-4a5a-a479-b426ada90629 in namespace container-probe-1526
  E0904 15:27:49.473947      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:27:50.474028      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 09/04/25 15:27:50.597
  I0904 15:27:50.612876 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-1526" for this suite. @ 09/04/25 15:27:50.615
• [242.658 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:170
  STEP: Creating a kubernetes client @ 09/04/25 15:27:50.625
  I0904 15:27:50.625970 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename security-context @ 09/04/25 15:27:50.626
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:27:50.648
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:27:50.65
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 09/04/25 15:27:50.652
  E0904 15:27:51.474877      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:27:52.474986      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:27:53.475069      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:27:54.475147      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/25 15:27:54.677
  I0904 15:27:54.679898 23 output.go:207] Trying to get logs from node ip-172-31-33-202 pod security-context-d6dd34b3-3249-4865-967f-4da66e1e267e container test-container: <nil>
  STEP: delete the pod @ 09/04/25 15:27:54.695
  I0904 15:27:54.712204 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-2840" for this suite. @ 09/04/25 15:27:54.716
• [4.097 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 09/04/25 15:27:54.723
  I0904 15:27:54.723266 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename secrets @ 09/04/25 15:27:54.723
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:27:54.734
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:27:54.736
  STEP: Creating secret with name secret-test-02d838e5-994e-4d65-948c-b90d2be36a17 @ 09/04/25 15:27:54.738
  STEP: Creating a pod to test consume secrets @ 09/04/25 15:27:54.743
  E0904 15:27:55.475813      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:27:56.475879      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:27:57.476736      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:27:58.476890      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/25 15:27:58.765
  I0904 15:27:58.767891 23 output.go:207] Trying to get logs from node ip-172-31-33-202 pod pod-secrets-d03a3dfd-878a-4a9b-b86d-6ffec5dbb2c6 container secret-volume-test: <nil>
  STEP: delete the pod @ 09/04/25 15:27:58.775
  I0904 15:27:58.791252 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6200" for this suite. @ 09/04/25 15:27:58.793
• [4.077 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should provide secure master service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:730
  STEP: Creating a kubernetes client @ 09/04/25 15:27:58.8
  I0904 15:27:58.800577 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename services @ 09/04/25 15:27:58.801
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:27:58.811
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:27:58.813
  I0904 15:27:58.821528 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4333" for this suite. @ 09/04/25 15:27:58.895
• [0.105 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support PriorityLevelConfiguration API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:514
  STEP: Creating a kubernetes client @ 09/04/25 15:27:58.909
  I0904 15:27:58.909244 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename apf @ 09/04/25 15:27:58.909
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:27:58.922
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:27:58.924
  STEP: getting /apis @ 09/04/25 15:27:58.926
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 09/04/25 15:27:58.929
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 09/04/25 15:27:58.93
  STEP: creating @ 09/04/25 15:27:58.93
  STEP: getting @ 09/04/25 15:27:58.944
  STEP: listing @ 09/04/25 15:27:58.946
  STEP: watching @ 09/04/25 15:27:58.95
  I0904 15:27:58.950834 23 flowcontrol.go:620] starting watch
  STEP: patching @ 09/04/25 15:27:58.951
  STEP: updating @ 09/04/25 15:27:58.956
  I0904 15:27:58.963642 23 flowcontrol.go:648] waiting for watch events with expected annotations
  STEP: getting /status @ 09/04/25 15:27:58.963
  STEP: patching /status @ 09/04/25 15:27:58.965
  STEP: updating /status @ 09/04/25 15:27:58.969
  STEP: deleting @ 09/04/25 15:27:58.98
  STEP: deleting a collection @ 09/04/25 15:27:58.994
  I0904 15:27:59.015574 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-6730" for this suite. @ 09/04/25 15:27:59.019
• [0.117 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:168
  STEP: Creating a kubernetes client @ 09/04/25 15:27:59.027
  I0904 15:27:59.027032 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename cronjob @ 09/04/25 15:27:59.027
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:27:59.041
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:27:59.043
  STEP: Creating a ReplaceConcurrent cronjob @ 09/04/25 15:27:59.044
  STEP: Ensuring a job is scheduled @ 09/04/25 15:27:59.05
  E0904 15:27:59.477472      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:28:00.477532      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 09/04/25 15:28:01.056
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 09/04/25 15:28:01.059
  STEP: Ensuring the job is replaced with a new one @ 09/04/25 15:28:01.062
  E0904 15:28:01.477816      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:28:02.477909      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:28:03.478749      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:28:04.478877      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:28:05.478995      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:28:06.479119      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:28:07.479742      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:28:08.479955      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:28:09.480076      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:28:10.480219      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:28:11.480305      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:28:12.480418      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:28:13.481387      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:28:14.481565      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:28:15.481760      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:28:16.481874      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:28:17.482903      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:28:18.482998      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:28:19.483814      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:28:20.483938      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:28:21.484342      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:28:22.485208      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:28:23.485795      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:28:24.485874      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:28:25.486791      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:28:26.486866      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:28:27.487439      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:28:28.487798      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:28:29.487901      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:28:30.488045      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:28:31.490617      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:28:32.488437      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:28:33.488578      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:28:34.488812      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:28:35.489414      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:28:36.489532      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:28:37.489686      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:28:38.489795      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:28:39.489896      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:28:40.490041      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:28:41.490794      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:28:42.490904      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:28:43.491030      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:28:44.491104      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:28:45.491818      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:28:46.492018      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:28:47.492163      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:28:48.492218      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:28:49.492402      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:28:50.492508      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:28:51.492802      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:28:52.492814      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:28:53.493497      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:28:54.494199      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:28:55.494289      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:28:56.494378      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:28:57.494486      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:28:58.494546      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:28:59.495638      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:29:00.495729      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Removing cronjob @ 09/04/25 15:29:01.068
  I0904 15:29:01.073531 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-9931" for this suite. @ 09/04/25 15:29:01.076
• [62.054 seconds]
------------------------------
SSSS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1758
  STEP: Creating a kubernetes client @ 09/04/25 15:29:01.081
  I0904 15:29:01.081520 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename kubectl @ 09/04/25 15:29:01.082
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:29:01.101
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:29:01.103
  I0904 15:29:01.105078 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=kubectl-8727 version'
  I0904 15:29:01.137079 23 builder.go:156] stderr: ""
  I0904 15:29:01.137099 23 builder.go:157] stdout: "Client Version: v1.34.0\nKustomize Version: v5.7.1\nServer Version: v1.34.0\n"
  I0904 15:29:01.137257 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8727" for this suite. @ 09/04/25 15:29:01.178
• [0.104 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 09/04/25 15:29:01.185
  I0904 15:29:01.185890 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename pods @ 09/04/25 15:29:01.186
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:29:01.196
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:29:01.198
  I0904 15:29:01.201090 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: creating the pod @ 09/04/25 15:29:01.201
  STEP: submitting the pod to kubernetes @ 09/04/25 15:29:01.201
  E0904 15:29:01.496605      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:29:02.496735      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: waiting for the container to be running @ 09/04/25 15:29:03.219
  I0904 15:29:03.235424 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8884" for this suite. @ 09/04/25 15:29:03.238
• [2.060 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:174
  STEP: Creating a kubernetes client @ 09/04/25 15:29:03.246
  I0904 15:29:03.246247 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename projected @ 09/04/25 15:29:03.246
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:29:03.26
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:29:03.262
  STEP: Creating configMap with name cm-test-opt-del-08f53655-3ddc-486c-b34b-b0496ebdc83e @ 09/04/25 15:29:03.339
  STEP: Creating configMap with name cm-test-opt-upd-337ec4c6-2f96-4433-b983-3f0f06a0857b @ 09/04/25 15:29:03.346
  STEP: Creating the pod @ 09/04/25 15:29:03.35
  E0904 15:29:03.497008      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:29:04.497185      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-08f53655-3ddc-486c-b34b-b0496ebdc83e @ 09/04/25 15:29:05.399
  STEP: Updating configmap cm-test-opt-upd-337ec4c6-2f96-4433-b983-3f0f06a0857b @ 09/04/25 15:29:05.406
  STEP: Creating configMap with name cm-test-opt-create-648f57aa-8b71-453a-87a5-7fa26e02a41e @ 09/04/25 15:29:05.41
  STEP: waiting to observe update in volume @ 09/04/25 15:29:05.414
  E0904 15:29:05.497846      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:29:06.498058      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:29:07.499056      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:29:08.499150      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:29:09.500123      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:29:10.500862      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:29:11.500899      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:29:12.501077      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:29:13.501689      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:29:14.502298      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:29:15.502395      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:29:16.502639      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:29:17.503525      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:29:18.503669      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:29:19.503915      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:29:20.504007      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:29:21.504474      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:29:22.504744      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:29:23.505671      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:29:24.505819      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:29:25.505932      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:29:26.506086      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:29:27.506161      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:29:28.506275      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:29:29.506343      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:29:30.506742      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:29:31.506884      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:29:32.507720      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:29:33.507912      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:29:34.508043      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:29:35.508244      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:29:36.508412      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:29:37.508457      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:29:38.508815      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:29:39.509024      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:29:40.509113      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:29:41.509210      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:29:42.509379      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:29:43.509574      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:29:44.509679      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:29:45.509913      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:29:46.509875      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:29:47.509964      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:29:48.510546      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:29:49.510802      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:29:50.511028      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:29:51.511825      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:29:52.512704      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:29:53.512801      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:29:54.513835      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:29:55.513946      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:29:56.513970      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:29:57.514067      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:29:58.514801      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:29:59.514923      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:30:00.515993      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:30:01.516184      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:30:02.516819      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:30:03.516897      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:30:04.517795      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:30:05.517974      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:30:06.518287      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:30:07.519326      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:30:08.519458      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:30:09.519525      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:30:10.519817      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:30:11.519867      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:30:12.520347      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:30:13.520530      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:30:14.520654      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:30:15.520783      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:30:16.521711      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:30:17.521891      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:30:18.522667      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:30:19.522791      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:30:20.523748      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:30:21.523846      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:30:22.524010      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:30:23.524977      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:30:24.525796      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:30:25.525913      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:30:26.526003      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:30:27.526808      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:30:27.813313 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7084" for this suite. @ 09/04/25 15:30:27.816
• [84.576 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:179
  STEP: Creating a kubernetes client @ 09/04/25 15:30:27.822
  I0904 15:30:27.822886 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename emptydir @ 09/04/25 15:30:27.823
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:30:27.837
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:30:27.839
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 09/04/25 15:30:27.84
  E0904 15:30:28.526896      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:30:29.527008      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:30:30.527218      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:30:31.527254      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/25 15:30:31.87
  I0904 15:30:31.874981 23 output.go:207] Trying to get logs from node ip-172-31-18-79 pod pod-32553ac3-b5b3-4632-a30c-ac2ad1ec5a7e container test-container: <nil>
  STEP: delete the pod @ 09/04/25 15:30:31.886
  I0904 15:30:31.902069 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-651" for this suite. @ 09/04/25 15:30:31.906
• [4.090 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 09/04/25 15:30:31.913
  I0904 15:30:31.913359 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 09/04/25 15:30:31.913
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:30:31.922
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:30:31.924
  STEP: creating a target pod @ 09/04/25 15:30:31.926
  E0904 15:30:32.528139      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:30:33.528269      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 09/04/25 15:30:33.948
  E0904 15:30:34.529282      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:30:35.529505      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: verifying the pod's generation is 2 @ 09/04/25 15:30:35.967
  STEP: checking pod container endpoints @ 09/04/25 15:30:35.97
  I0904 15:30:35.970769 23 exec_util.go:63] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-7459 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0904 15:30:35.970785 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0904 15:30:35.970819 23 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/ephemeral-containers-test-7459/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&stderr=true&stdout=true)
  I0904 15:30:36.006978 23 exec_util.go:112] Exec stderr: ""
  I0904 15:30:36.014121 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-7459" for this suite. @ 09/04/25 15:30:36.018
• [4.112 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:175
  STEP: Creating a kubernetes client @ 09/04/25 15:30:36.025
  I0904 15:30:36.025747 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename configmap @ 09/04/25 15:30:36.026
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:30:36.037
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:30:36.039
  STEP: Creating configMap with name configmap-test-upd-d8f96981-869a-4ff0-8b24-83d08ce7cb75 @ 09/04/25 15:30:36.119
  STEP: Creating the pod @ 09/04/25 15:30:36.126
  E0904 15:30:36.530520      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:30:37.530667      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for pod with text data @ 09/04/25 15:30:38.14
  STEP: Waiting for pod with binary data @ 09/04/25 15:30:38.146
  I0904 15:30:38.153855 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2406" for this suite. @ 09/04/25 15:30:38.156
• [2.137 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:838
  STEP: Creating a kubernetes client @ 09/04/25 15:30:38.162
  I0904 15:30:38.162761 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename svcaccounts @ 09/04/25 15:30:38.163
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:30:38.177
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:30:38.18
  STEP: Creating ServiceAccount "e2e-sa-xw47r"  @ 09/04/25 15:30:38.183
  I0904 15:30:38.189978 23 service_accounts.go:853] AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-xw47r"  @ 09/04/25 15:30:38.189
  I0904 15:30:38.198119 23 service_accounts.go:867] AutomountServiceAccountToken: true
  I0904 15:30:38.198215 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-7155" for this suite. @ 09/04/25 15:30:38.258
• [0.104 seconds]
------------------------------
SS
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:199
  STEP: Creating a kubernetes client @ 09/04/25 15:30:38.266
  I0904 15:30:38.266940 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename container-probe @ 09/04/25 15:30:38.267
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:30:38.276
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:30:38.278
  STEP: Creating pod liveness-4c1dd793-8305-41b1-a3b8-85fec347c56a in namespace container-probe-8108 @ 09/04/25 15:30:38.28
  E0904 15:30:38.531622      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:30:39.531829      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/04/25 15:30:40.294
  I0904 15:30:40.299839 23 container_probe.go:1749] Initial restart count of pod liveness-4c1dd793-8305-41b1-a3b8-85fec347c56a is 0
  I0904 15:30:40.302946 23 container_probe.go:1759] Get pod liveness-4c1dd793-8305-41b1-a3b8-85fec347c56a in namespace container-probe-8108
  E0904 15:30:40.532738      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:30:41.532789      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:30:42.306970 23 container_probe.go:1759] Get pod liveness-4c1dd793-8305-41b1-a3b8-85fec347c56a in namespace container-probe-8108
  E0904 15:30:42.533386      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:30:43.533479      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:30:44.311269 23 container_probe.go:1759] Get pod liveness-4c1dd793-8305-41b1-a3b8-85fec347c56a in namespace container-probe-8108
  E0904 15:30:44.534574      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:30:45.534759      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:30:46.315608 23 container_probe.go:1759] Get pod liveness-4c1dd793-8305-41b1-a3b8-85fec347c56a in namespace container-probe-8108
  E0904 15:30:46.535026      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:30:47.535810      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:30:48.322616 23 container_probe.go:1759] Get pod liveness-4c1dd793-8305-41b1-a3b8-85fec347c56a in namespace container-probe-8108
  E0904 15:30:48.536783      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:30:49.537782      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:30:50.327267 23 container_probe.go:1759] Get pod liveness-4c1dd793-8305-41b1-a3b8-85fec347c56a in namespace container-probe-8108
  E0904 15:30:50.538637      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:30:51.538918      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:30:52.332251 23 container_probe.go:1759] Get pod liveness-4c1dd793-8305-41b1-a3b8-85fec347c56a in namespace container-probe-8108
  E0904 15:30:52.539599      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:30:53.539806      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:30:54.336527 23 container_probe.go:1759] Get pod liveness-4c1dd793-8305-41b1-a3b8-85fec347c56a in namespace container-probe-8108
  E0904 15:30:54.540814      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:30:55.540940      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:30:56.341045 23 container_probe.go:1759] Get pod liveness-4c1dd793-8305-41b1-a3b8-85fec347c56a in namespace container-probe-8108
  E0904 15:30:56.541567      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:30:57.541752      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:30:58.345022 23 container_probe.go:1759] Get pod liveness-4c1dd793-8305-41b1-a3b8-85fec347c56a in namespace container-probe-8108
  E0904 15:30:58.542336      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:30:59.542459      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:31:00.351613 23 container_probe.go:1759] Get pod liveness-4c1dd793-8305-41b1-a3b8-85fec347c56a in namespace container-probe-8108
  I0904 15:31:00.351649 23 container_probe.go:1763] Restart count of pod container-probe-8108/liveness-4c1dd793-8305-41b1-a3b8-85fec347c56a is now 1 (20.051785362s elapsed)
  E0904 15:31:00.542841      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:31:01.542954      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:31:02.356633 23 container_probe.go:1759] Get pod liveness-4c1dd793-8305-41b1-a3b8-85fec347c56a in namespace container-probe-8108
  E0904 15:31:02.543871      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:31:03.544057      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:31:04.360899 23 container_probe.go:1759] Get pod liveness-4c1dd793-8305-41b1-a3b8-85fec347c56a in namespace container-probe-8108
  E0904 15:31:04.544103      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:31:05.544911      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:31:06.367062 23 container_probe.go:1759] Get pod liveness-4c1dd793-8305-41b1-a3b8-85fec347c56a in namespace container-probe-8108
  E0904 15:31:06.545451      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:31:07.545601      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:31:08.373782 23 container_probe.go:1759] Get pod liveness-4c1dd793-8305-41b1-a3b8-85fec347c56a in namespace container-probe-8108
  E0904 15:31:08.546053      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:31:09.546805      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:31:10.378034 23 container_probe.go:1759] Get pod liveness-4c1dd793-8305-41b1-a3b8-85fec347c56a in namespace container-probe-8108
  E0904 15:31:10.547523      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:31:11.547897      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:31:12.382535 23 container_probe.go:1759] Get pod liveness-4c1dd793-8305-41b1-a3b8-85fec347c56a in namespace container-probe-8108
  E0904 15:31:12.548781      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:31:13.548982      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:31:14.386296 23 container_probe.go:1759] Get pod liveness-4c1dd793-8305-41b1-a3b8-85fec347c56a in namespace container-probe-8108
  E0904 15:31:14.549538      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:31:15.549758      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:31:16.392436 23 container_probe.go:1759] Get pod liveness-4c1dd793-8305-41b1-a3b8-85fec347c56a in namespace container-probe-8108
  E0904 15:31:16.550786      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:31:17.550986      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:31:18.396008 23 container_probe.go:1759] Get pod liveness-4c1dd793-8305-41b1-a3b8-85fec347c56a in namespace container-probe-8108
  E0904 15:31:18.551335      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:31:19.551426      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:31:20.401057 23 container_probe.go:1759] Get pod liveness-4c1dd793-8305-41b1-a3b8-85fec347c56a in namespace container-probe-8108
  I0904 15:31:20.401095 23 container_probe.go:1763] Restart count of pod container-probe-8108/liveness-4c1dd793-8305-41b1-a3b8-85fec347c56a is now 2 (40.101231092s elapsed)
  E0904 15:31:20.552297      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:31:21.552978      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:31:22.407176 23 container_probe.go:1759] Get pod liveness-4c1dd793-8305-41b1-a3b8-85fec347c56a in namespace container-probe-8108
  E0904 15:31:22.553365      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:31:23.553481      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:31:24.411207 23 container_probe.go:1759] Get pod liveness-4c1dd793-8305-41b1-a3b8-85fec347c56a in namespace container-probe-8108
  E0904 15:31:24.554476      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:31:25.554578      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:31:26.417461 23 container_probe.go:1759] Get pod liveness-4c1dd793-8305-41b1-a3b8-85fec347c56a in namespace container-probe-8108
  E0904 15:31:26.554782      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:31:27.555790      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:31:28.421731 23 container_probe.go:1759] Get pod liveness-4c1dd793-8305-41b1-a3b8-85fec347c56a in namespace container-probe-8108
  E0904 15:31:28.555883      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:31:29.556810      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:31:30.428673 23 container_probe.go:1759] Get pod liveness-4c1dd793-8305-41b1-a3b8-85fec347c56a in namespace container-probe-8108
  E0904 15:31:30.557801      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:31:31.557898      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:31:32.434761 23 container_probe.go:1759] Get pod liveness-4c1dd793-8305-41b1-a3b8-85fec347c56a in namespace container-probe-8108
  E0904 15:31:32.557977      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:31:33.558808      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:31:34.440075 23 container_probe.go:1759] Get pod liveness-4c1dd793-8305-41b1-a3b8-85fec347c56a in namespace container-probe-8108
  E0904 15:31:34.559339      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:31:35.559409      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:31:36.446553 23 container_probe.go:1759] Get pod liveness-4c1dd793-8305-41b1-a3b8-85fec347c56a in namespace container-probe-8108
  E0904 15:31:36.559914      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:31:37.560026      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:31:38.450859 23 container_probe.go:1759] Get pod liveness-4c1dd793-8305-41b1-a3b8-85fec347c56a in namespace container-probe-8108
  E0904 15:31:38.560962      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:31:39.561103      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:31:40.454862 23 container_probe.go:1759] Get pod liveness-4c1dd793-8305-41b1-a3b8-85fec347c56a in namespace container-probe-8108
  I0904 15:31:40.454901 23 container_probe.go:1763] Restart count of pod container-probe-8108/liveness-4c1dd793-8305-41b1-a3b8-85fec347c56a is now 3 (1m0.15503754s elapsed)
  E0904 15:31:40.562057      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:31:41.562967      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:31:42.461204 23 container_probe.go:1759] Get pod liveness-4c1dd793-8305-41b1-a3b8-85fec347c56a in namespace container-probe-8108
  E0904 15:31:42.563438      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:31:43.563605      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:31:44.465312 23 container_probe.go:1759] Get pod liveness-4c1dd793-8305-41b1-a3b8-85fec347c56a in namespace container-probe-8108
  E0904 15:31:44.564480      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:31:45.564817      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:31:46.471146 23 container_probe.go:1759] Get pod liveness-4c1dd793-8305-41b1-a3b8-85fec347c56a in namespace container-probe-8108
  E0904 15:31:46.565410      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:31:47.565505      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:31:48.477340 23 container_probe.go:1759] Get pod liveness-4c1dd793-8305-41b1-a3b8-85fec347c56a in namespace container-probe-8108
  E0904 15:31:48.566480      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:31:49.566784      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:31:50.482247 23 container_probe.go:1759] Get pod liveness-4c1dd793-8305-41b1-a3b8-85fec347c56a in namespace container-probe-8108
  E0904 15:31:50.567434      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:31:51.568257      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:31:52.487403 23 container_probe.go:1759] Get pod liveness-4c1dd793-8305-41b1-a3b8-85fec347c56a in namespace container-probe-8108
  E0904 15:31:52.568537      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:31:53.568725      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:31:54.491682 23 container_probe.go:1759] Get pod liveness-4c1dd793-8305-41b1-a3b8-85fec347c56a in namespace container-probe-8108
  E0904 15:31:54.568774      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:31:55.569798      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:31:56.498614 23 container_probe.go:1759] Get pod liveness-4c1dd793-8305-41b1-a3b8-85fec347c56a in namespace container-probe-8108
  E0904 15:31:56.569823      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:31:57.570002      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:31:58.502196 23 container_probe.go:1759] Get pod liveness-4c1dd793-8305-41b1-a3b8-85fec347c56a in namespace container-probe-8108
  E0904 15:31:58.570341      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:31:59.570494      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:32:00.506188 23 container_probe.go:1759] Get pod liveness-4c1dd793-8305-41b1-a3b8-85fec347c56a in namespace container-probe-8108
  I0904 15:32:00.506219 23 container_probe.go:1763] Restart count of pod container-probe-8108/liveness-4c1dd793-8305-41b1-a3b8-85fec347c56a is now 4 (1m20.20635578s elapsed)
  E0904 15:32:00.571385      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:32:01.571951      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:32:02.513001 23 container_probe.go:1759] Get pod liveness-4c1dd793-8305-41b1-a3b8-85fec347c56a in namespace container-probe-8108
  E0904 15:32:02.572170      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:32:03.572345      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:32:04.517051 23 container_probe.go:1759] Get pod liveness-4c1dd793-8305-41b1-a3b8-85fec347c56a in namespace container-probe-8108
  E0904 15:32:04.573187      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:32:05.573320      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:32:06.523667 23 container_probe.go:1759] Get pod liveness-4c1dd793-8305-41b1-a3b8-85fec347c56a in namespace container-probe-8108
  E0904 15:32:06.573981      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:32:07.575005      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:32:08.528053 23 container_probe.go:1759] Get pod liveness-4c1dd793-8305-41b1-a3b8-85fec347c56a in namespace container-probe-8108
  E0904 15:32:08.575124      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:32:09.575243      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:32:10.535929 23 container_probe.go:1759] Get pod liveness-4c1dd793-8305-41b1-a3b8-85fec347c56a in namespace container-probe-8108
  E0904 15:32:10.576014      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:32:11.576877      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:32:12.542507 23 container_probe.go:1759] Get pod liveness-4c1dd793-8305-41b1-a3b8-85fec347c56a in namespace container-probe-8108
  E0904 15:32:12.577655      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:32:13.577791      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:32:14.546273 23 container_probe.go:1759] Get pod liveness-4c1dd793-8305-41b1-a3b8-85fec347c56a in namespace container-probe-8108
  E0904 15:32:14.578398      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:32:15.578794      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:32:16.550621 23 container_probe.go:1759] Get pod liveness-4c1dd793-8305-41b1-a3b8-85fec347c56a in namespace container-probe-8108
  E0904 15:32:16.579680      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:32:17.579826      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:32:18.554425 23 container_probe.go:1759] Get pod liveness-4c1dd793-8305-41b1-a3b8-85fec347c56a in namespace container-probe-8108
  E0904 15:32:18.580610      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:32:19.580781      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:32:20.557620 23 container_probe.go:1759] Get pod liveness-4c1dd793-8305-41b1-a3b8-85fec347c56a in namespace container-probe-8108
  E0904 15:32:20.581783      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:32:21.581848      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:32:22.561527 23 container_probe.go:1759] Get pod liveness-4c1dd793-8305-41b1-a3b8-85fec347c56a in namespace container-probe-8108
  E0904 15:32:22.582668      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:32:23.582855      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:32:24.565630 23 container_probe.go:1759] Get pod liveness-4c1dd793-8305-41b1-a3b8-85fec347c56a in namespace container-probe-8108
  E0904 15:32:24.583681      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:32:25.583808      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:32:26.571718 23 container_probe.go:1759] Get pod liveness-4c1dd793-8305-41b1-a3b8-85fec347c56a in namespace container-probe-8108
  E0904 15:32:26.584747      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:32:27.584869      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:32:28.578193 23 container_probe.go:1759] Get pod liveness-4c1dd793-8305-41b1-a3b8-85fec347c56a in namespace container-probe-8108
  E0904 15:32:28.585252      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:32:29.585385      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:32:30.582356 23 container_probe.go:1759] Get pod liveness-4c1dd793-8305-41b1-a3b8-85fec347c56a in namespace container-probe-8108
  E0904 15:32:30.585419      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:32:31.585877      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:32:32.586064      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:32:32.586489 23 container_probe.go:1759] Get pod liveness-4c1dd793-8305-41b1-a3b8-85fec347c56a in namespace container-probe-8108
  E0904 15:32:33.586780      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:32:34.586790      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:32:34.590457 23 container_probe.go:1759] Get pod liveness-4c1dd793-8305-41b1-a3b8-85fec347c56a in namespace container-probe-8108
  E0904 15:32:35.587169      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:32:36.587865      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:32:36.594850 23 container_probe.go:1759] Get pod liveness-4c1dd793-8305-41b1-a3b8-85fec347c56a in namespace container-probe-8108
  E0904 15:32:37.588868      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:32:38.589318      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:32:38.599670 23 container_probe.go:1759] Get pod liveness-4c1dd793-8305-41b1-a3b8-85fec347c56a in namespace container-probe-8108
  E0904 15:32:39.589678      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:32:40.589745      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:32:40.603433 23 container_probe.go:1759] Get pod liveness-4c1dd793-8305-41b1-a3b8-85fec347c56a in namespace container-probe-8108
  E0904 15:32:41.589985      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:32:42.590095      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:32:42.608174 23 container_probe.go:1759] Get pod liveness-4c1dd793-8305-41b1-a3b8-85fec347c56a in namespace container-probe-8108
  E0904 15:32:43.590244      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:32:44.590334      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:32:44.612673 23 container_probe.go:1759] Get pod liveness-4c1dd793-8305-41b1-a3b8-85fec347c56a in namespace container-probe-8108
  E0904 15:32:45.590431      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:32:46.590536      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:32:46.617411 23 container_probe.go:1759] Get pod liveness-4c1dd793-8305-41b1-a3b8-85fec347c56a in namespace container-probe-8108
  E0904 15:32:47.591466      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:32:48.591617      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:32:48.621470 23 container_probe.go:1759] Get pod liveness-4c1dd793-8305-41b1-a3b8-85fec347c56a in namespace container-probe-8108
  E0904 15:32:49.592500      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:32:50.592724      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:32:50.625455 23 container_probe.go:1759] Get pod liveness-4c1dd793-8305-41b1-a3b8-85fec347c56a in namespace container-probe-8108
  E0904 15:32:51.592976      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:32:52.593015      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:32:52.630017 23 container_probe.go:1759] Get pod liveness-4c1dd793-8305-41b1-a3b8-85fec347c56a in namespace container-probe-8108
  E0904 15:32:53.593773      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:32:54.593927      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:32:54.636862 23 container_probe.go:1759] Get pod liveness-4c1dd793-8305-41b1-a3b8-85fec347c56a in namespace container-probe-8108
  E0904 15:32:55.594751      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:32:56.594821      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:32:56.641827 23 container_probe.go:1759] Get pod liveness-4c1dd793-8305-41b1-a3b8-85fec347c56a in namespace container-probe-8108
  E0904 15:32:57.595741      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:32:58.595813      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:32:58.646318 23 container_probe.go:1759] Get pod liveness-4c1dd793-8305-41b1-a3b8-85fec347c56a in namespace container-probe-8108
  E0904 15:32:59.596318      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:33:00.596825      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:33:00.652317 23 container_probe.go:1759] Get pod liveness-4c1dd793-8305-41b1-a3b8-85fec347c56a in namespace container-probe-8108
  E0904 15:33:01.597069      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:33:02.597140      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:33:02.658229 23 container_probe.go:1759] Get pod liveness-4c1dd793-8305-41b1-a3b8-85fec347c56a in namespace container-probe-8108
  E0904 15:33:03.597807      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:33:04.597912      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:33:04.662572 23 container_probe.go:1759] Get pod liveness-4c1dd793-8305-41b1-a3b8-85fec347c56a in namespace container-probe-8108
  I0904 15:33:04.662622 23 container_probe.go:1763] Restart count of pod container-probe-8108/liveness-4c1dd793-8305-41b1-a3b8-85fec347c56a is now 5 (2m24.362759034s elapsed)
  STEP: deleting the pod @ 09/04/25 15:33:04.662
  I0904 15:33:04.679647 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-8108" for this suite. @ 09/04/25 15:33:04.684
• [146.425 seconds]
------------------------------
SSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:468
  STEP: Creating a kubernetes client @ 09/04/25 15:33:04.692
  I0904 15:33:04.692325 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename sched-pred @ 09/04/25 15:33:04.692
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:33:04.701
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:33:04.703
  I0904 15:33:04.705443 23 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0904 15:33:04.795965 23 util.go:390] Waiting for terminating namespaces to be deleted...
  I0904 15:33:04.799770 23 predicates.go:120] 
  Logging pods the apiserver thinks is on node ip-172-31-18-79 before test
  I0904 15:33:04.806142 23 predicates.go:958] nginx-ingress-controller-kubernetes-worker-th9mz from ingress-nginx-kubernetes-worker started at 2025-09-04 14:25:59 +0000 UTC (1 container statuses recorded)
  I0904 15:33:04.806296 23 predicates.go:960] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0904 15:33:04.806445 23 predicates.go:958] calico-node-hnfqw from kube-system started at 2025-09-04 14:35:51 +0000 UTC (1 container statuses recorded)
  I0904 15:33:04.806530 23 predicates.go:960] 	Container calico-node ready: true, restart count 0
  I0904 15:33:04.806630 23 predicates.go:958] sonobuoy-e2e-job-9fbf261a650c4889 from sonobuoy started at 2025-09-04 14:37:48 +0000 UTC (2 container statuses recorded)
  I0904 15:33:04.806751 23 predicates.go:960] 	Container e2e ready: true, restart count 0
  I0904 15:33:04.806758 23 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0904 15:33:04.806764 23 predicates.go:958] sonobuoy-systemd-logs-daemon-set-56e1dcee030f40d6-xkq28 from sonobuoy started at 2025-09-04 14:37:48 +0000 UTC (2 container statuses recorded)
  I0904 15:33:04.806767 23 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0904 15:33:04.806773 23 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  I0904 15:33:04.806777 23 predicates.go:120] 
  Logging pods the apiserver thinks is on node ip-172-31-33-202 before test
  I0904 15:33:04.809737 23 predicates.go:958] nginx-ingress-controller-kubernetes-worker-wqsrn from ingress-nginx-kubernetes-worker started at 2025-09-04 15:16:14 +0000 UTC (1 container statuses recorded)
  I0904 15:33:04.809756 23 predicates.go:960] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0904 15:33:04.809763 23 predicates.go:958] calico-node-q8qbr from kube-system started at 2025-09-04 14:33:35 +0000 UTC (1 container statuses recorded)
  I0904 15:33:04.809770 23 predicates.go:960] 	Container calico-node ready: true, restart count 0
  I0904 15:33:04.809775 23 predicates.go:958] sonobuoy from sonobuoy started at 2025-09-04 14:37:46 +0000 UTC (1 container statuses recorded)
  I0904 15:33:04.809778 23 predicates.go:960] 	Container kube-sonobuoy ready: true, restart count 0
  I0904 15:33:04.809782 23 predicates.go:958] sonobuoy-systemd-logs-daemon-set-56e1dcee030f40d6-sq6h5 from sonobuoy started at 2025-09-04 14:37:48 +0000 UTC (2 container statuses recorded)
  I0904 15:33:04.809786 23 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0904 15:33:04.809790 23 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  I0904 15:33:04.809794 23 predicates.go:120] 
  Logging pods the apiserver thinks is on node ip-172-31-87-111 before test
  I0904 15:33:04.815811 23 predicates.go:958] nginx-ingress-controller-kubernetes-worker-thhq5 from ingress-nginx-kubernetes-worker started at 2025-09-04 14:21:14 +0000 UTC (1 container statuses recorded)
  I0904 15:33:04.815934 23 predicates.go:960] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0904 15:33:04.815994 23 predicates.go:958] calico-node-z98vv from kube-system started at 2025-09-04 14:34:13 +0000 UTC (1 container statuses recorded)
  I0904 15:33:04.816054 23 predicates.go:960] 	Container calico-node ready: true, restart count 0
  I0904 15:33:04.816150 23 predicates.go:958] coredns-6bb7467dc9-q25dk from kube-system started at 2025-09-04 14:21:14 +0000 UTC (1 container statuses recorded)
  I0904 15:33:04.816181 23 predicates.go:960] 	Container coredns ready: true, restart count 0
  I0904 15:33:04.816251 23 predicates.go:958] kube-state-metrics-67d58dfcdd-wb9tq from kube-system started at 2025-09-04 14:21:14 +0000 UTC (1 container statuses recorded)
  I0904 15:33:04.816288 23 predicates.go:960] 	Container kube-state-metrics ready: true, restart count 2
  I0904 15:33:04.816328 23 predicates.go:958] metrics-server-v0.7.2-847d5645c8-dxxpg from kube-system started at 2025-09-04 14:21:14 +0000 UTC (2 container statuses recorded)
  I0904 15:33:04.816332 23 predicates.go:960] 	Container metrics-server ready: true, restart count 0
  I0904 15:33:04.816336 23 predicates.go:960] 	Container metrics-server-nanny ready: true, restart count 0
  I0904 15:33:04.816341 23 predicates.go:958] dashboard-metrics-scraper-55dc6fc9df-bxgsr from kubernetes-dashboard started at 2025-09-04 14:21:14 +0000 UTC (1 container statuses recorded)
  I0904 15:33:04.816345 23 predicates.go:960] 	Container dashboard-metrics-scraper ready: true, restart count 0
  I0904 15:33:04.816349 23 predicates.go:958] kubernetes-dashboard-847cf64d65-kmws8 from kubernetes-dashboard started at 2025-09-04 14:21:14 +0000 UTC (1 container statuses recorded)
  I0904 15:33:04.816434 23 predicates.go:960] 	Container kubernetes-dashboard ready: true, restart count 3
  I0904 15:33:04.816441 23 predicates.go:958] sonobuoy-systemd-logs-daemon-set-56e1dcee030f40d6-zthcb from sonobuoy started at 2025-09-04 14:37:48 +0000 UTC (2 container statuses recorded)
  I0904 15:33:04.816445 23 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0904 15:33:04.816449 23 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 09/04/25 15:33:04.816
  E0904 15:33:05.598137      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:33:06.598185      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 09/04/25 15:33:06.837
  STEP: Trying to apply a random label on the found node. @ 09/04/25 15:33:06.85
  STEP: verifying the node has the label kubernetes.io/e2e-24d96d49-e6bd-4d88-a32a-0e2e0ecdd6b7 42 @ 09/04/25 15:33:06.86
  STEP: Trying to relaunch the pod, now with labels. @ 09/04/25 15:33:06.864
  E0904 15:33:07.599237      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:33:08.599801      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-24d96d49-e6bd-4d88-a32a-0e2e0ecdd6b7 off the node ip-172-31-33-202 @ 09/04/25 15:33:08.886
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-24d96d49-e6bd-4d88-a32a-0e2e0ecdd6b7 @ 09/04/25 15:33:08.897
  I0904 15:33:08.900457 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-4307" for this suite. @ 09/04/25 15:33:08.905
• [4.221 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:76
  STEP: Creating a kubernetes client @ 09/04/25 15:33:08.914
  I0904 15:33:08.914260 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename var-expansion @ 09/04/25 15:33:08.915
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:33:08.927
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:33:08.929
  STEP: Creating a pod to test substitution in container's command @ 09/04/25 15:33:08.932
  E0904 15:33:09.600664      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:33:10.600771      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:33:11.600823      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:33:12.601050      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/25 15:33:12.954
  I0904 15:33:12.957206 23 output.go:207] Trying to get logs from node ip-172-31-18-79 pod var-expansion-2bac8981-dd59-4d13-8eb1-a11f2f238221 container dapi-container: <nil>
  STEP: delete the pod @ 09/04/25 15:33:12.967
  I0904 15:33:12.982535 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-2690" for this suite. @ 09/04/25 15:33:12.985
• [4.075 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:311
  STEP: Creating a kubernetes client @ 09/04/25 15:33:12.989
  I0904 15:33:12.989644 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename webhook @ 09/04/25 15:33:12.99
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:33:13.002
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:33:13.004
  STEP: Setting up server cert @ 09/04/25 15:33:13.02
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/04/25 15:33:13.278
  STEP: Deploying the webhook pod @ 09/04/25 15:33:13.286
  STEP: Wait for the deployment to be ready @ 09/04/25 15:33:13.3
  I0904 15:33:13.305049 23 deployment.go:223] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0904 15:33:13.601579      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:33:14.601798      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/04/25 15:33:15.314
  STEP: Verifying the service has paired with the endpoint @ 09/04/25 15:33:15.323
  E0904 15:33:15.602842      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:33:16.323965 23 util.go:419] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0904 15:33:16.328952 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  E0904 15:33:16.603468      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-7098-2945-crds.webhook.example.com via the AdmissionRegistration API @ 09/04/25 15:33:16.837
  STEP: Creating a custom resource while v1 is storage version @ 09/04/25 15:33:16.851
  E0904 15:33:17.604457      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:33:18.604529      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Patching Custom Resource Definition to set v2 as storage @ 09/04/25 15:33:18.877
  STEP: Patching the custom resource while v2 is storage version @ 09/04/25 15:33:18.889
  I0904 15:33:19.474521 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7098" for this suite. @ 09/04/25 15:33:19.48
  STEP: Destroying namespace "webhook-markers-400" for this suite. @ 09/04/25 15:33:19.49
• [6.507 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:58
  STEP: Creating a kubernetes client @ 09/04/25 15:33:19.497
  I0904 15:33:19.497118 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename events @ 09/04/25 15:33:19.497
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:33:19.509
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:33:19.511
  STEP: creating a test event @ 09/04/25 15:33:19.513
  STEP: listing all events in all namespaces @ 09/04/25 15:33:19.521
  STEP: patching the test event @ 09/04/25 15:33:19.525
  STEP: fetching the test event @ 09/04/25 15:33:19.532
  STEP: updating the test event @ 09/04/25 15:33:19.534
  STEP: getting the test event @ 09/04/25 15:33:19.544
  STEP: deleting the test event @ 09/04/25 15:33:19.546
  STEP: listing all events in all namespaces @ 09/04/25 15:33:19.553
  I0904 15:33:19.560560 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-5623" for this suite. @ 09/04/25 15:33:19.58
• [0.090 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1294
  STEP: Creating a kubernetes client @ 09/04/25 15:33:19.587
  I0904 15:33:19.587428 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename services @ 09/04/25 15:33:19.587
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:33:19.6
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:33:19.602
  STEP: creating service nodeport-test with type=NodePort in namespace services-6401 @ 09/04/25 15:33:19.604
  E0904 15:33:19.604479      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:33:19.632869 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0904 15:33:20.604719      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:33:21.604847      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:33:21.637871 23 resource.go:344] Creating new exec pod
  E0904 15:33:22.604915      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:33:23.605012      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:33:23.659822 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=services-6401 exec execpoddwd9w -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  I0904 15:33:23.735946 23 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test (10.152.183.144) 80 port [tcp/http] succeeded!\n"
  I0904 15:33:23.735975 23 builder.go:157] stdout: ""
  E0904 15:33:24.605747      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:33:24.660864 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=services-6401 exec execpoddwd9w -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  I0904 15:33:24.731102 23 builder.go:156] stderr: "+ + nc -v -t -w 2 nodeport-test 80\necho hostName\nConnection to nodeport-test (10.152.183.144) 80 port [tcp/http] succeeded!\n"
  I0904 15:33:24.731135 23 builder.go:157] stdout: ""
  E0904 15:33:25.605887      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:33:25.659934 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=services-6401 exec execpoddwd9w -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  I0904 15:33:25.740920 23 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test (10.152.183.144) 80 port [tcp/http] succeeded!\n"
  I0904 15:33:25.740960 23 builder.go:157] stdout: "nodeport-test-8566f7dbcc-z4pk9"
  I0904 15:33:25.741047 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=services-6401 exec execpoddwd9w -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.144 80'
  I0904 15:33:25.811824 23 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.144 80\nConnection to 10.152.183.144 80 port [tcp/http] succeeded!\n"
  I0904 15:33:25.811862 23 builder.go:157] stdout: ""
  E0904 15:33:26.606899      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:33:26.742096 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=services-6401 exec execpoddwd9w -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.144 80'
  I0904 15:33:26.813076 23 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.144 80\nConnection to 10.152.183.144 80 port [tcp/http] succeeded!\n"
  I0904 15:33:26.813119 23 builder.go:157] stdout: "nodeport-test-8566f7dbcc-gzq95"
  I0904 15:33:26.813195 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=services-6401 exec execpoddwd9w -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.33.202 30580'
  I0904 15:33:26.892783 23 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.33.202 30580\nConnection to 172.31.33.202 30580 port [tcp/*] succeeded!\n"
  I0904 15:33:26.892807 23 builder.go:157] stdout: ""
  E0904 15:33:27.606962      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:33:27.814278 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=services-6401 exec execpoddwd9w -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.33.202 30580'
  I0904 15:33:27.886147 23 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.33.202 30580\nConnection to 172.31.33.202 30580 port [tcp/*] succeeded!\n"
  I0904 15:33:27.886180 23 builder.go:157] stdout: ""
  E0904 15:33:28.607796      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:33:28.814124 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=services-6401 exec execpoddwd9w -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.33.202 30580'
  I0904 15:33:28.885351 23 builder.go:156] stderr: "+ + echo hostName\nnc -v -t -w 2 172.31.33.202 30580\nConnection to 172.31.33.202 30580 port [tcp/*] succeeded!\n"
  I0904 15:33:28.885429 23 builder.go:157] stdout: ""
  E0904 15:33:29.608803      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:33:29.814130 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=services-6401 exec execpoddwd9w -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.33.202 30580'
  I0904 15:33:29.891073 23 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.33.202 30580\nConnection to 172.31.33.202 30580 port [tcp/*] succeeded!\n"
  I0904 15:33:29.891116 23 builder.go:157] stdout: "nodeport-test-8566f7dbcc-z4pk9"
  I0904 15:33:29.891180 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=services-6401 exec execpoddwd9w -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.87.111 30580'
  I0904 15:33:29.977341 23 builder.go:156] stderr: "+ nc -v -t -w 2 172.31.87.111 30580\n+ echo hostName\nConnection to 172.31.87.111 30580 port [tcp/*] succeeded!\n"
  I0904 15:33:29.977389 23 builder.go:157] stdout: ""
  E0904 15:33:30.609815      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:33:30.892167 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=services-6401 exec execpoddwd9w -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.87.111 30580'
  I0904 15:33:30.966055 23 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.87.111 30580\nConnection to 172.31.87.111 30580 port [tcp/*] succeeded!\n"
  I0904 15:33:30.966090 23 builder.go:157] stdout: "nodeport-test-8566f7dbcc-z4pk9"
  I0904 15:33:30.966230 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6401" for this suite. @ 09/04/25 15:33:30.969
• [11.387 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:184
  STEP: Creating a kubernetes client @ 09/04/25 15:33:30.974
  I0904 15:33:30.974910 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename container-probe @ 09/04/25 15:33:30.975
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:33:30.987
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:33:30.989
  STEP: Creating pod liveness-62c9ae39-b06e-4c3c-a29a-4d67da72ec14 in namespace container-probe-4461 @ 09/04/25 15:33:30.991
  E0904 15:33:31.609968      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:33:32.610071      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/04/25 15:33:33.009
  I0904 15:33:33.011981 23 container_probe.go:1749] Initial restart count of pod liveness-62c9ae39-b06e-4c3c-a29a-4d67da72ec14 is 0
  I0904 15:33:33.014356 23 container_probe.go:1759] Get pod liveness-62c9ae39-b06e-4c3c-a29a-4d67da72ec14 in namespace container-probe-4461
  E0904 15:33:33.611108      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:33:34.611347      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:33:35.018823 23 container_probe.go:1759] Get pod liveness-62c9ae39-b06e-4c3c-a29a-4d67da72ec14 in namespace container-probe-4461
  E0904 15:33:35.611476      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:33:36.612298      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:33:37.023344 23 container_probe.go:1759] Get pod liveness-62c9ae39-b06e-4c3c-a29a-4d67da72ec14 in namespace container-probe-4461
  E0904 15:33:37.613060      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:33:38.613141      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:33:39.027556 23 container_probe.go:1759] Get pod liveness-62c9ae39-b06e-4c3c-a29a-4d67da72ec14 in namespace container-probe-4461
  E0904 15:33:39.614242      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:33:40.614825      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:33:41.033907 23 container_probe.go:1759] Get pod liveness-62c9ae39-b06e-4c3c-a29a-4d67da72ec14 in namespace container-probe-4461
  E0904 15:33:41.615658      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:33:42.615720      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:33:43.039980 23 container_probe.go:1759] Get pod liveness-62c9ae39-b06e-4c3c-a29a-4d67da72ec14 in namespace container-probe-4461
  E0904 15:33:43.616608      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:33:44.616757      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:33:45.043767 23 container_probe.go:1759] Get pod liveness-62c9ae39-b06e-4c3c-a29a-4d67da72ec14 in namespace container-probe-4461
  E0904 15:33:45.617002      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:33:46.616897      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:33:47.048818 23 container_probe.go:1759] Get pod liveness-62c9ae39-b06e-4c3c-a29a-4d67da72ec14 in namespace container-probe-4461
  E0904 15:33:47.617411      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:33:48.617635      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:33:49.052304 23 container_probe.go:1759] Get pod liveness-62c9ae39-b06e-4c3c-a29a-4d67da72ec14 in namespace container-probe-4461
  E0904 15:33:49.617914      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:33:50.618869      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:33:51.056506 23 container_probe.go:1759] Get pod liveness-62c9ae39-b06e-4c3c-a29a-4d67da72ec14 in namespace container-probe-4461
  E0904 15:33:51.619937      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:33:52.620038      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:33:53.061120 23 container_probe.go:1759] Get pod liveness-62c9ae39-b06e-4c3c-a29a-4d67da72ec14 in namespace container-probe-4461
  E0904 15:33:53.620783      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:33:54.620990      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:33:55.066825 23 container_probe.go:1759] Get pod liveness-62c9ae39-b06e-4c3c-a29a-4d67da72ec14 in namespace container-probe-4461
  E0904 15:33:55.621105      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:33:56.621998      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:33:57.070631 23 container_probe.go:1759] Get pod liveness-62c9ae39-b06e-4c3c-a29a-4d67da72ec14 in namespace container-probe-4461
  E0904 15:33:57.622119      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:33:58.622344      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:33:59.074157 23 container_probe.go:1759] Get pod liveness-62c9ae39-b06e-4c3c-a29a-4d67da72ec14 in namespace container-probe-4461
  E0904 15:33:59.622717      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:34:00.622926      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:34:01.080165 23 container_probe.go:1759] Get pod liveness-62c9ae39-b06e-4c3c-a29a-4d67da72ec14 in namespace container-probe-4461
  E0904 15:34:01.623893      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:34:02.623988      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:34:03.083751 23 container_probe.go:1759] Get pod liveness-62c9ae39-b06e-4c3c-a29a-4d67da72ec14 in namespace container-probe-4461
  E0904 15:34:03.624036      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:34:04.624110      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:34:05.088646 23 container_probe.go:1759] Get pod liveness-62c9ae39-b06e-4c3c-a29a-4d67da72ec14 in namespace container-probe-4461
  E0904 15:34:05.624197      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:34:06.624929      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:34:07.093256 23 container_probe.go:1759] Get pod liveness-62c9ae39-b06e-4c3c-a29a-4d67da72ec14 in namespace container-probe-4461
  E0904 15:34:07.625783      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:34:08.626785      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:34:09.098275 23 container_probe.go:1759] Get pod liveness-62c9ae39-b06e-4c3c-a29a-4d67da72ec14 in namespace container-probe-4461
  E0904 15:34:09.626819      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:34:10.627784      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:34:11.102903 23 container_probe.go:1759] Get pod liveness-62c9ae39-b06e-4c3c-a29a-4d67da72ec14 in namespace container-probe-4461
  E0904 15:34:11.628678      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:34:12.628839      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:34:13.107289 23 container_probe.go:1759] Get pod liveness-62c9ae39-b06e-4c3c-a29a-4d67da72ec14 in namespace container-probe-4461
  E0904 15:34:13.629806      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:34:14.630011      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:34:15.111081 23 container_probe.go:1759] Get pod liveness-62c9ae39-b06e-4c3c-a29a-4d67da72ec14 in namespace container-probe-4461
  E0904 15:34:15.630801      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:34:16.630937      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:34:17.115332 23 container_probe.go:1759] Get pod liveness-62c9ae39-b06e-4c3c-a29a-4d67da72ec14 in namespace container-probe-4461
  E0904 15:34:17.630969      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:34:18.631138      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:34:19.119224 23 container_probe.go:1759] Get pod liveness-62c9ae39-b06e-4c3c-a29a-4d67da72ec14 in namespace container-probe-4461
  E0904 15:34:19.631891      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:34:20.632087      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:34:21.122915 23 container_probe.go:1759] Get pod liveness-62c9ae39-b06e-4c3c-a29a-4d67da72ec14 in namespace container-probe-4461
  E0904 15:34:21.632725      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:34:22.632937      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:34:23.126819 23 container_probe.go:1759] Get pod liveness-62c9ae39-b06e-4c3c-a29a-4d67da72ec14 in namespace container-probe-4461
  E0904 15:34:23.633098      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:34:24.633301      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:34:25.133470 23 container_probe.go:1759] Get pod liveness-62c9ae39-b06e-4c3c-a29a-4d67da72ec14 in namespace container-probe-4461
  E0904 15:34:25.634005      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:34:26.634112      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:34:27.136723 23 container_probe.go:1759] Get pod liveness-62c9ae39-b06e-4c3c-a29a-4d67da72ec14 in namespace container-probe-4461
  E0904 15:34:27.634210      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:34:28.634295      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:34:29.143306 23 container_probe.go:1759] Get pod liveness-62c9ae39-b06e-4c3c-a29a-4d67da72ec14 in namespace container-probe-4461
  E0904 15:34:29.634736      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:34:30.635794      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:34:31.148095 23 container_probe.go:1759] Get pod liveness-62c9ae39-b06e-4c3c-a29a-4d67da72ec14 in namespace container-probe-4461
  E0904 15:34:31.636734      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:34:32.636801      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:34:33.152386 23 container_probe.go:1759] Get pod liveness-62c9ae39-b06e-4c3c-a29a-4d67da72ec14 in namespace container-probe-4461
  E0904 15:34:33.637798      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:34:34.637885      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:34:35.157691 23 container_probe.go:1759] Get pod liveness-62c9ae39-b06e-4c3c-a29a-4d67da72ec14 in namespace container-probe-4461
  E0904 15:34:35.638000      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:34:36.638077      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:34:37.164244 23 container_probe.go:1759] Get pod liveness-62c9ae39-b06e-4c3c-a29a-4d67da72ec14 in namespace container-probe-4461
  E0904 15:34:37.638822      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:34:38.638936      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:34:39.169117 23 container_probe.go:1759] Get pod liveness-62c9ae39-b06e-4c3c-a29a-4d67da72ec14 in namespace container-probe-4461
  E0904 15:34:39.639657      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:34:40.639791      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:34:41.172849 23 container_probe.go:1759] Get pod liveness-62c9ae39-b06e-4c3c-a29a-4d67da72ec14 in namespace container-probe-4461
  E0904 15:34:41.640536      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:34:42.640681      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:34:43.178388 23 container_probe.go:1759] Get pod liveness-62c9ae39-b06e-4c3c-a29a-4d67da72ec14 in namespace container-probe-4461
  E0904 15:34:43.641270      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:34:44.641384      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:34:45.184129 23 container_probe.go:1759] Get pod liveness-62c9ae39-b06e-4c3c-a29a-4d67da72ec14 in namespace container-probe-4461
  E0904 15:34:45.641617      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:34:46.642088      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:34:47.189931 23 container_probe.go:1759] Get pod liveness-62c9ae39-b06e-4c3c-a29a-4d67da72ec14 in namespace container-probe-4461
  E0904 15:34:47.642436      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:34:48.642516      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:34:49.194051 23 container_probe.go:1759] Get pod liveness-62c9ae39-b06e-4c3c-a29a-4d67da72ec14 in namespace container-probe-4461
  E0904 15:34:49.643629      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:34:50.643772      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:34:51.200112 23 container_probe.go:1759] Get pod liveness-62c9ae39-b06e-4c3c-a29a-4d67da72ec14 in namespace container-probe-4461
  E0904 15:34:51.644719      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:34:52.645792      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:34:53.203852 23 container_probe.go:1759] Get pod liveness-62c9ae39-b06e-4c3c-a29a-4d67da72ec14 in namespace container-probe-4461
  E0904 15:34:53.646444      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:34:54.646690      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:34:55.209919 23 container_probe.go:1759] Get pod liveness-62c9ae39-b06e-4c3c-a29a-4d67da72ec14 in namespace container-probe-4461
  E0904 15:34:55.647369      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:34:56.647945      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:34:57.213655 23 container_probe.go:1759] Get pod liveness-62c9ae39-b06e-4c3c-a29a-4d67da72ec14 in namespace container-probe-4461
  E0904 15:34:57.648105      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:34:58.648320      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:34:59.219698 23 container_probe.go:1759] Get pod liveness-62c9ae39-b06e-4c3c-a29a-4d67da72ec14 in namespace container-probe-4461
  E0904 15:34:59.649267      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:35:00.649469      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:35:01.225433 23 container_probe.go:1759] Get pod liveness-62c9ae39-b06e-4c3c-a29a-4d67da72ec14 in namespace container-probe-4461
  E0904 15:35:01.649977      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:35:02.650139      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:35:03.231050 23 container_probe.go:1759] Get pod liveness-62c9ae39-b06e-4c3c-a29a-4d67da72ec14 in namespace container-probe-4461
  E0904 15:35:03.650244      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:35:04.650341      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:35:05.235745 23 container_probe.go:1759] Get pod liveness-62c9ae39-b06e-4c3c-a29a-4d67da72ec14 in namespace container-probe-4461
  E0904 15:35:05.651290      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:35:06.651420      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:35:07.240150 23 container_probe.go:1759] Get pod liveness-62c9ae39-b06e-4c3c-a29a-4d67da72ec14 in namespace container-probe-4461
  E0904 15:35:07.651553      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:35:08.651668      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:35:09.244743 23 container_probe.go:1759] Get pod liveness-62c9ae39-b06e-4c3c-a29a-4d67da72ec14 in namespace container-probe-4461
  E0904 15:35:09.652275      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:35:10.652473      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:35:11.251961 23 container_probe.go:1759] Get pod liveness-62c9ae39-b06e-4c3c-a29a-4d67da72ec14 in namespace container-probe-4461
  E0904 15:35:11.652517      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:35:12.652674      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:35:13.256807 23 container_probe.go:1759] Get pod liveness-62c9ae39-b06e-4c3c-a29a-4d67da72ec14 in namespace container-probe-4461
  E0904 15:35:13.653358      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:35:14.653558      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:35:15.261272 23 container_probe.go:1759] Get pod liveness-62c9ae39-b06e-4c3c-a29a-4d67da72ec14 in namespace container-probe-4461
  E0904 15:35:15.653676      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:35:16.654069      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:35:17.265426 23 container_probe.go:1759] Get pod liveness-62c9ae39-b06e-4c3c-a29a-4d67da72ec14 in namespace container-probe-4461
  E0904 15:35:17.654803      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:35:18.654886      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:35:19.270556 23 container_probe.go:1759] Get pod liveness-62c9ae39-b06e-4c3c-a29a-4d67da72ec14 in namespace container-probe-4461
  E0904 15:35:19.655814      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:35:20.655936      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:35:21.274815 23 container_probe.go:1759] Get pod liveness-62c9ae39-b06e-4c3c-a29a-4d67da72ec14 in namespace container-probe-4461
  E0904 15:35:21.656322      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:35:22.656797      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:35:23.278070 23 container_probe.go:1759] Get pod liveness-62c9ae39-b06e-4c3c-a29a-4d67da72ec14 in namespace container-probe-4461
  E0904 15:35:23.657484      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:35:24.657583      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:35:25.283871 23 container_probe.go:1759] Get pod liveness-62c9ae39-b06e-4c3c-a29a-4d67da72ec14 in namespace container-probe-4461
  E0904 15:35:25.658339      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:35:26.658426      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:35:27.289685 23 container_probe.go:1759] Get pod liveness-62c9ae39-b06e-4c3c-a29a-4d67da72ec14 in namespace container-probe-4461
  E0904 15:35:27.658815      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:35:28.659817      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:35:29.295767 23 container_probe.go:1759] Get pod liveness-62c9ae39-b06e-4c3c-a29a-4d67da72ec14 in namespace container-probe-4461
  E0904 15:35:29.659953      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:35:30.660064      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:35:31.300230 23 container_probe.go:1759] Get pod liveness-62c9ae39-b06e-4c3c-a29a-4d67da72ec14 in namespace container-probe-4461
  E0904 15:35:31.660830      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:35:32.660992      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:35:33.304153 23 container_probe.go:1759] Get pod liveness-62c9ae39-b06e-4c3c-a29a-4d67da72ec14 in namespace container-probe-4461
  E0904 15:35:33.661613      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:35:34.661760      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:35:35.310552 23 container_probe.go:1759] Get pod liveness-62c9ae39-b06e-4c3c-a29a-4d67da72ec14 in namespace container-probe-4461
  E0904 15:35:35.661953      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:35:36.663034      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:35:37.314805 23 container_probe.go:1759] Get pod liveness-62c9ae39-b06e-4c3c-a29a-4d67da72ec14 in namespace container-probe-4461
  E0904 15:35:37.663539      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:35:38.663747      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:35:39.319232 23 container_probe.go:1759] Get pod liveness-62c9ae39-b06e-4c3c-a29a-4d67da72ec14 in namespace container-probe-4461
  E0904 15:35:39.664701      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:35:40.664748      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:35:41.324823 23 container_probe.go:1759] Get pod liveness-62c9ae39-b06e-4c3c-a29a-4d67da72ec14 in namespace container-probe-4461
  E0904 15:35:41.665390      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:35:42.665485      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:35:43.330082 23 container_probe.go:1759] Get pod liveness-62c9ae39-b06e-4c3c-a29a-4d67da72ec14 in namespace container-probe-4461
  E0904 15:35:43.665509      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:35:44.665816      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:35:45.334240 23 container_probe.go:1759] Get pod liveness-62c9ae39-b06e-4c3c-a29a-4d67da72ec14 in namespace container-probe-4461
  E0904 15:35:45.666042      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:35:46.666393      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:35:47.338693 23 container_probe.go:1759] Get pod liveness-62c9ae39-b06e-4c3c-a29a-4d67da72ec14 in namespace container-probe-4461
  E0904 15:35:47.666770      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:35:48.666872      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:35:49.342909 23 container_probe.go:1759] Get pod liveness-62c9ae39-b06e-4c3c-a29a-4d67da72ec14 in namespace container-probe-4461
  E0904 15:35:49.667372      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:35:50.667461      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:35:51.346706 23 container_probe.go:1759] Get pod liveness-62c9ae39-b06e-4c3c-a29a-4d67da72ec14 in namespace container-probe-4461
  E0904 15:35:51.668021      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:35:52.668194      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:35:53.351261 23 container_probe.go:1759] Get pod liveness-62c9ae39-b06e-4c3c-a29a-4d67da72ec14 in namespace container-probe-4461
  E0904 15:35:53.668693      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:35:54.668803      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:35:55.356469 23 container_probe.go:1759] Get pod liveness-62c9ae39-b06e-4c3c-a29a-4d67da72ec14 in namespace container-probe-4461
  E0904 15:35:55.668889      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:35:56.668965      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:35:57.360487 23 container_probe.go:1759] Get pod liveness-62c9ae39-b06e-4c3c-a29a-4d67da72ec14 in namespace container-probe-4461
  E0904 15:35:57.669878      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:35:58.670066      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:35:59.366099 23 container_probe.go:1759] Get pod liveness-62c9ae39-b06e-4c3c-a29a-4d67da72ec14 in namespace container-probe-4461
  E0904 15:35:59.670538      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:36:00.670731      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:36:01.369923 23 container_probe.go:1759] Get pod liveness-62c9ae39-b06e-4c3c-a29a-4d67da72ec14 in namespace container-probe-4461
  E0904 15:36:01.671435      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:36:02.671568      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:36:03.373557 23 container_probe.go:1759] Get pod liveness-62c9ae39-b06e-4c3c-a29a-4d67da72ec14 in namespace container-probe-4461
  E0904 15:36:03.671863      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:36:04.672043      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:36:05.377435 23 container_probe.go:1759] Get pod liveness-62c9ae39-b06e-4c3c-a29a-4d67da72ec14 in namespace container-probe-4461
  E0904 15:36:05.672828      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:36:06.672928      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:36:07.381221 23 container_probe.go:1759] Get pod liveness-62c9ae39-b06e-4c3c-a29a-4d67da72ec14 in namespace container-probe-4461
  E0904 15:36:07.673656      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:36:08.673815      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:36:09.387025 23 container_probe.go:1759] Get pod liveness-62c9ae39-b06e-4c3c-a29a-4d67da72ec14 in namespace container-probe-4461
  E0904 15:36:09.674280      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:36:10.674368      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:36:11.391176 23 container_probe.go:1759] Get pod liveness-62c9ae39-b06e-4c3c-a29a-4d67da72ec14 in namespace container-probe-4461
  E0904 15:36:11.674683      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:36:12.674778      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:36:13.395144 23 container_probe.go:1759] Get pod liveness-62c9ae39-b06e-4c3c-a29a-4d67da72ec14 in namespace container-probe-4461
  E0904 15:36:13.675394      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:36:14.675790      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:36:15.399051 23 container_probe.go:1759] Get pod liveness-62c9ae39-b06e-4c3c-a29a-4d67da72ec14 in namespace container-probe-4461
  E0904 15:36:15.676407      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:36:16.676965      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:36:17.403309 23 container_probe.go:1759] Get pod liveness-62c9ae39-b06e-4c3c-a29a-4d67da72ec14 in namespace container-probe-4461
  E0904 15:36:17.677695      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:36:18.677788      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:36:19.407178 23 container_probe.go:1759] Get pod liveness-62c9ae39-b06e-4c3c-a29a-4d67da72ec14 in namespace container-probe-4461
  E0904 15:36:19.678577      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:36:20.678726      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:36:21.413271 23 container_probe.go:1759] Get pod liveness-62c9ae39-b06e-4c3c-a29a-4d67da72ec14 in namespace container-probe-4461
  E0904 15:36:21.679713      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:36:22.679841      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:36:23.417998 23 container_probe.go:1759] Get pod liveness-62c9ae39-b06e-4c3c-a29a-4d67da72ec14 in namespace container-probe-4461
  E0904 15:36:23.680346      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:36:24.680478      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:36:25.422552 23 container_probe.go:1759] Get pod liveness-62c9ae39-b06e-4c3c-a29a-4d67da72ec14 in namespace container-probe-4461
  E0904 15:36:25.680971      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:36:26.682000      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:36:27.429037 23 container_probe.go:1759] Get pod liveness-62c9ae39-b06e-4c3c-a29a-4d67da72ec14 in namespace container-probe-4461
  E0904 15:36:27.682349      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:36:28.682536      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:36:29.432978 23 container_probe.go:1759] Get pod liveness-62c9ae39-b06e-4c3c-a29a-4d67da72ec14 in namespace container-probe-4461
  E0904 15:36:29.683333      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:36:30.683789      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:36:31.437146 23 container_probe.go:1759] Get pod liveness-62c9ae39-b06e-4c3c-a29a-4d67da72ec14 in namespace container-probe-4461
  E0904 15:36:31.684571      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:36:32.684718      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:36:33.440626 23 container_probe.go:1759] Get pod liveness-62c9ae39-b06e-4c3c-a29a-4d67da72ec14 in namespace container-probe-4461
  E0904 15:36:33.685774      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:36:34.686790      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:36:35.445082 23 container_probe.go:1759] Get pod liveness-62c9ae39-b06e-4c3c-a29a-4d67da72ec14 in namespace container-probe-4461
  E0904 15:36:35.687459      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:36:36.687963      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:36:37.450129 23 container_probe.go:1759] Get pod liveness-62c9ae39-b06e-4c3c-a29a-4d67da72ec14 in namespace container-probe-4461
  E0904 15:36:37.688436      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:36:38.688639      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:36:39.453229 23 container_probe.go:1759] Get pod liveness-62c9ae39-b06e-4c3c-a29a-4d67da72ec14 in namespace container-probe-4461
  E0904 15:36:39.689633      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:36:40.689816      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:36:41.457163 23 container_probe.go:1759] Get pod liveness-62c9ae39-b06e-4c3c-a29a-4d67da72ec14 in namespace container-probe-4461
  E0904 15:36:41.690652      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:36:42.690763      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:36:43.461156 23 container_probe.go:1759] Get pod liveness-62c9ae39-b06e-4c3c-a29a-4d67da72ec14 in namespace container-probe-4461
  E0904 15:36:43.691537      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:36:44.691739      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:36:45.464951 23 container_probe.go:1759] Get pod liveness-62c9ae39-b06e-4c3c-a29a-4d67da72ec14 in namespace container-probe-4461
  E0904 15:36:45.692256      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:36:46.692993      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:36:47.469449 23 container_probe.go:1759] Get pod liveness-62c9ae39-b06e-4c3c-a29a-4d67da72ec14 in namespace container-probe-4461
  E0904 15:36:47.693853      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:36:48.693951      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:36:49.474974 23 container_probe.go:1759] Get pod liveness-62c9ae39-b06e-4c3c-a29a-4d67da72ec14 in namespace container-probe-4461
  E0904 15:36:49.694245      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:36:50.694377      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:36:51.479583 23 container_probe.go:1759] Get pod liveness-62c9ae39-b06e-4c3c-a29a-4d67da72ec14 in namespace container-probe-4461
  E0904 15:36:51.695158      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:36:52.695274      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:36:53.484771 23 container_probe.go:1759] Get pod liveness-62c9ae39-b06e-4c3c-a29a-4d67da72ec14 in namespace container-probe-4461
  E0904 15:36:53.696117      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:36:54.696235      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:36:55.489072 23 container_probe.go:1759] Get pod liveness-62c9ae39-b06e-4c3c-a29a-4d67da72ec14 in namespace container-probe-4461
  E0904 15:36:55.696284      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:36:56.696992      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:36:57.495264 23 container_probe.go:1759] Get pod liveness-62c9ae39-b06e-4c3c-a29a-4d67da72ec14 in namespace container-probe-4461
  E0904 15:36:57.697577      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:36:58.697713      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:36:59.498377 23 container_probe.go:1759] Get pod liveness-62c9ae39-b06e-4c3c-a29a-4d67da72ec14 in namespace container-probe-4461
  E0904 15:36:59.698789      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:37:00.698975      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:37:01.502946 23 container_probe.go:1759] Get pod liveness-62c9ae39-b06e-4c3c-a29a-4d67da72ec14 in namespace container-probe-4461
  E0904 15:37:01.699662      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:37:02.699765      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:37:03.506527 23 container_probe.go:1759] Get pod liveness-62c9ae39-b06e-4c3c-a29a-4d67da72ec14 in namespace container-probe-4461
  E0904 15:37:03.700798      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:37:04.700950      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:37:05.512492 23 container_probe.go:1759] Get pod liveness-62c9ae39-b06e-4c3c-a29a-4d67da72ec14 in namespace container-probe-4461
  E0904 15:37:05.701838      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:37:06.701968      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:37:07.518499 23 container_probe.go:1759] Get pod liveness-62c9ae39-b06e-4c3c-a29a-4d67da72ec14 in namespace container-probe-4461
  E0904 15:37:07.702775      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:37:08.702891      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:37:09.522362 23 container_probe.go:1759] Get pod liveness-62c9ae39-b06e-4c3c-a29a-4d67da72ec14 in namespace container-probe-4461
  E0904 15:37:09.703709      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:37:10.703796      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:37:11.526115 23 container_probe.go:1759] Get pod liveness-62c9ae39-b06e-4c3c-a29a-4d67da72ec14 in namespace container-probe-4461
  E0904 15:37:11.704492      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:37:12.705004      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:37:13.532440 23 container_probe.go:1759] Get pod liveness-62c9ae39-b06e-4c3c-a29a-4d67da72ec14 in namespace container-probe-4461
  E0904 15:37:13.705632      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:37:14.705732      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:37:15.535729 23 container_probe.go:1759] Get pod liveness-62c9ae39-b06e-4c3c-a29a-4d67da72ec14 in namespace container-probe-4461
  E0904 15:37:15.705796      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:37:16.705912      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:37:17.542081 23 container_probe.go:1759] Get pod liveness-62c9ae39-b06e-4c3c-a29a-4d67da72ec14 in namespace container-probe-4461
  E0904 15:37:17.706141      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:37:18.706778      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:37:19.547963 23 container_probe.go:1759] Get pod liveness-62c9ae39-b06e-4c3c-a29a-4d67da72ec14 in namespace container-probe-4461
  E0904 15:37:19.707214      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:37:20.707780      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:37:21.552349 23 container_probe.go:1759] Get pod liveness-62c9ae39-b06e-4c3c-a29a-4d67da72ec14 in namespace container-probe-4461
  E0904 15:37:21.708557      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:37:22.708699      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:37:23.555548 23 container_probe.go:1759] Get pod liveness-62c9ae39-b06e-4c3c-a29a-4d67da72ec14 in namespace container-probe-4461
  E0904 15:37:23.708706      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:37:24.708872      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:37:25.558902 23 container_probe.go:1759] Get pod liveness-62c9ae39-b06e-4c3c-a29a-4d67da72ec14 in namespace container-probe-4461
  E0904 15:37:25.709160      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:37:26.710088      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:37:27.562881 23 container_probe.go:1759] Get pod liveness-62c9ae39-b06e-4c3c-a29a-4d67da72ec14 in namespace container-probe-4461
  E0904 15:37:27.710129      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:37:28.710347      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:37:29.566719 23 container_probe.go:1759] Get pod liveness-62c9ae39-b06e-4c3c-a29a-4d67da72ec14 in namespace container-probe-4461
  E0904 15:37:29.711014      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:37:30.711196      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:37:31.572851 23 container_probe.go:1759] Get pod liveness-62c9ae39-b06e-4c3c-a29a-4d67da72ec14 in namespace container-probe-4461
  E0904 15:37:31.712120      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:37:32.712299      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 09/04/25 15:37:33.573
  I0904 15:37:33.587142 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-4461" for this suite. @ 09/04/25 15:37:33.595
• [242.627 seconds]
------------------------------
SSSS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:253
  STEP: Creating a kubernetes client @ 09/04/25 15:37:33.603
  I0904 15:37:33.603065 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename limitrange @ 09/04/25 15:37:33.603
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:37:33.614
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:37:33.616
  STEP: Creating LimitRange "e2e-limitrange-b5k4q" in namespace "limitrange-562" @ 09/04/25 15:37:33.619
  STEP: Creating another limitRange in another namespace @ 09/04/25 15:37:33.623
  I0904 15:37:33.633326 23 limit_range.go:299] Namespace "e2e-limitrange-b5k4q-6944" created
  I0904 15:37:33.633342 23 limit_range.go:300] Creating LimitRange "e2e-limitrange-b5k4q" in namespace "e2e-limitrange-b5k4q-6944"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-b5k4q" @ 09/04/25 15:37:33.638
  I0904 15:37:33.644915 23 limit_range.go:309] Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-b5k4q" in "limitrange-562" namespace @ 09/04/25 15:37:33.644
  I0904 15:37:33.649626 23 limit_range.go:335] LimitRange "e2e-limitrange-b5k4q" has been patched
  STEP: Delete LimitRange "e2e-limitrange-b5k4q" by Collection with labelSelector: "e2e-limitrange-b5k4q=patched" @ 09/04/25 15:37:33.649
  STEP: Confirm that the limitRange "e2e-limitrange-b5k4q" has been deleted @ 09/04/25 15:37:33.657
  I0904 15:37:33.657027 23 limit_range.go:443] Requesting list of LimitRange to confirm quantity
  I0904 15:37:33.659025 23 limit_range.go:453] Found 0 LimitRange with label "e2e-limitrange-b5k4q=patched"
  I0904 15:37:33.659047 23 limit_range.go:344] LimitRange "e2e-limitrange-b5k4q" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-b5k4q" @ 09/04/25 15:37:33.659
  I0904 15:37:33.662806 23 limit_range.go:350] Found 1 limitRange
  I0904 15:37:33.662906 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-562" for this suite. @ 09/04/25 15:37:33.696
  STEP: Destroying namespace "e2e-limitrange-b5k4q-6944" for this suite. @ 09/04/25 15:37:33.701
• [0.107 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:111
  STEP: Creating a kubernetes client @ 09/04/25 15:37:33.71
  I0904 15:37:33.710115 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename disruption @ 09/04/25 15:37:33.71
  E0904 15:37:33.713067      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:37:33.722
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:37:33.724
  STEP: creating the pdb @ 09/04/25 15:37:33.726
  STEP: Waiting for the pdb to be processed @ 09/04/25 15:37:33.732
  E0904 15:37:34.713230      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:37:35.713359      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: updating the pdb @ 09/04/25 15:37:35.736
  STEP: Waiting for the pdb to be processed @ 09/04/25 15:37:35.746
  E0904 15:37:36.714090      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:37:37.714167      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: patching the pdb @ 09/04/25 15:37:37.753
  STEP: Waiting for the pdb to be processed @ 09/04/25 15:37:37.762
  STEP: Waiting for the pdb to be deleted @ 09/04/25 15:37:37.773
  I0904 15:37:37.775324 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-1341" for this suite. @ 09/04/25 15:37:37.778
• [4.076 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:238
  STEP: Creating a kubernetes client @ 09/04/25 15:37:37.786
  I0904 15:37:37.786081 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/04/25 15:37:37.786
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:37:37.798
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:37:37.8
  I0904 15:37:37.802718 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  E0904 15:37:38.714737      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 09/04/25 15:37:39.043
  I0904 15:37:39.043760 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=crd-publish-openapi-9834 --namespace=crd-publish-openapi-9834 create -f -'
  I0904 15:37:39.098853 23 builder.go:156] stderr: ""
  I0904 15:37:39.098879 23 builder.go:157] stdout: "e2e-test-crd-publish-openapi-9834-9953-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I0904 15:37:39.098909 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=crd-publish-openapi-9834 --namespace=crd-publish-openapi-9834 delete e2e-test-crd-publish-openapi-9834-9953-crds test-cr'
  I0904 15:37:39.146278 23 builder.go:156] stderr: ""
  I0904 15:37:39.146309 23 builder.go:157] stdout: "e2e-test-crd-publish-openapi-9834-9953-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted from crd-publish-openapi-9834 namespace\n"
  I0904 15:37:39.146431 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=crd-publish-openapi-9834 --namespace=crd-publish-openapi-9834 apply -f -'
  I0904 15:37:39.187902 23 builder.go:156] stderr: ""
  I0904 15:37:39.187922 23 builder.go:157] stdout: "e2e-test-crd-publish-openapi-9834-9953-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I0904 15:37:39.187965 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=crd-publish-openapi-9834 --namespace=crd-publish-openapi-9834 delete e2e-test-crd-publish-openapi-9834-9953-crds test-cr'
  I0904 15:37:39.225814 23 builder.go:156] stderr: ""
  I0904 15:37:39.225840 23 builder.go:157] stdout: "e2e-test-crd-publish-openapi-9834-9953-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted from crd-publish-openapi-9834 namespace\n"
  STEP: kubectl explain works to explain CR @ 09/04/25 15:37:39.225
  I0904 15:37:39.225909 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=crd-publish-openapi-9834 explain e2e-test-crd-publish-openapi-9834-9953-crds'
  I0904 15:37:39.259695 23 builder.go:156] stderr: ""
  I0904 15:37:39.259723 23 builder.go:157] stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-9834-9953-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E0904 15:37:39.714820      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:37:40.528888 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-9834" for this suite. @ 09/04/25 15:37:40.534
• [2.755 seconds]
------------------------------
SS
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:144
  STEP: Creating a kubernetes client @ 09/04/25 15:37:40.541
  I0904 15:37:40.541307 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename disruption @ 09/04/25 15:37:40.541
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:37:40.551
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:37:40.553
  STEP: Waiting for the pdb to be processed @ 09/04/25 15:37:40.561
  E0904 15:37:40.715751      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:37:41.716803      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for all pods to be running @ 09/04/25 15:37:42.589
  I0904 15:37:42.591736 23 disruption.go:691] running pods: 0 < 3
  E0904 15:37:42.716914      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:37:43.717794      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:37:44.595029 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-5295" for this suite. @ 09/04/25 15:37:44.6
• [4.067 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:460
  STEP: Creating a kubernetes client @ 09/04/25 15:37:44.608
  I0904 15:37:44.608057 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename resourcequota @ 09/04/25 15:37:44.608
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:37:44.618
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:37:44.62
  STEP: Counting existing ResourceQuota @ 09/04/25 15:37:44.621
  E0904 15:37:44.718657      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:37:45.719308      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:37:46.720286      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:37:47.721059      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:37:48.721449      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 09/04/25 15:37:49.624
  STEP: Ensuring resource quota status is calculated @ 09/04/25 15:37:49.633
  I0904 15:37:49.642256 23 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc005297cc0>: 
          metadata:
            creationTimestamp: "2025-09-04T15:37:49Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-04T15:37:49Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
                  f:used:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-04T15:37:49Z"
            name: test-quota
            namespace: resourcequota-5771
            resourceVersion: "37314"
            uid: 27ff76e1-cfa2-4701-b85c-4ce06e78f70d
          spec:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
          status:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
            used:
              configmaps: "1"
              count/replicasets.apps: "0"
              cpu: "0"
              ephemeral-storage: "0"
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
              gold.storageclass.storage.k8s.io/requests.storage: "0"
              memory: "0"
              persistentvolumeclaims: "0"
              pods: "0"
              replicationcontrollers: "0"
              requests.example.com/dongle: "0"
              requests.storage: "0"
              resourcequotas: "1"
              secrets: "0"
              services: "0"
              services.loadbalancers: "0"
              services.nodeports: "0"
  STEP: Creating a ReplicaSet @ 09/04/25 15:37:49.642
  STEP: Ensuring resource quota status captures replicaset creation @ 09/04/25 15:37:49.658
  I0904 15:37:49.670464 23 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc0051c88c0>: 
          metadata:
            creationTimestamp: "2025-09-04T15:37:49Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-04T15:37:49Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:used:
                    f:count/replicasets.apps: {}
              manager: kube-apiserver
              operation: Update
              subresource: status
              time: "2025-09-04T15:37:49Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
                  f:used:
                    .: {}
                    f:configmaps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-04T15:37:49Z"
            name: test-quota
            namespace: resourcequota-5771
            resourceVersion: "37317"
            uid: 27ff76e1-cfa2-4701-b85c-4ce06e78f70d
          spec:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
          status:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
            used:
              configmaps: "1"
              count/replicasets.apps: "1"
              cpu: "0"
              ephemeral-storage: "0"
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
              gold.storageclass.storage.k8s.io/requests.storage: "0"
              memory: "0"
              persistentvolumeclaims: "0"
              pods: "0"
              replicationcontrollers: "0"
              requests.example.com/dongle: "0"
              requests.storage: "0"
              resourcequotas: "1"
              secrets: "0"
              services: "0"
              services.loadbalancers: "0"
              services.nodeports: "0"
  STEP: Deleting a ReplicaSet @ 09/04/25 15:37:49.67
  STEP: Ensuring resource quota status released usage @ 09/04/25 15:37:49.677
  E0904 15:37:49.722481      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:37:50.722636      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:37:51.683381 23 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc0051c9540>: 
          metadata:
            creationTimestamp: "2025-09-04T15:37:49Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-04T15:37:49Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
                  f:used:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-04T15:37:49Z"
            name: test-quota
            namespace: resourcequota-5771
            resourceVersion: "37326"
            uid: 27ff76e1-cfa2-4701-b85c-4ce06e78f70d
          spec:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
          status:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
            used:
              configmaps: "1"
              count/replicasets.apps: "0"
              cpu: "0"
              ephemeral-storage: "0"
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
              gold.storageclass.storage.k8s.io/requests.storage: "0"
              memory: "0"
              persistentvolumeclaims: "0"
              pods: "0"
              replicationcontrollers: "0"
              requests.example.com/dongle: "0"
              requests.storage: "0"
              resourcequotas: "1"
              secrets: "0"
              services: "0"
              services.loadbalancers: "0"
              services.nodeports: "0"
  I0904 15:37:51.683691 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5771" for this suite. @ 09/04/25 15:37:51.687
• [7.085 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support FlowSchema API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:270
  STEP: Creating a kubernetes client @ 09/04/25 15:37:51.692
  I0904 15:37:51.692926 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename apf @ 09/04/25 15:37:51.693
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:37:51.706
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:37:51.708
  STEP: getting /apis @ 09/04/25 15:37:51.71
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 09/04/25 15:37:51.712
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 09/04/25 15:37:51.712
  STEP: creating @ 09/04/25 15:37:51.713
  E0904 15:37:51.723300      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: getting @ 09/04/25 15:37:51.728
  STEP: listing @ 09/04/25 15:37:51.732
  STEP: watching @ 09/04/25 15:37:51.735
  I0904 15:37:51.735202 23 flowcontrol.go:394] starting watch
  STEP: patching @ 09/04/25 15:37:51.736
  STEP: updating @ 09/04/25 15:37:51.744
  I0904 15:37:51.750084 23 flowcontrol.go:422] waiting for watch events with expected annotations
  STEP: getting /status @ 09/04/25 15:37:51.75
  STEP: patching /status @ 09/04/25 15:37:51.754
  STEP: updating /status @ 09/04/25 15:37:51.758
  STEP: deleting @ 09/04/25 15:37:51.769
  STEP: deleting a collection @ 09/04/25 15:37:51.78
  I0904 15:37:51.803423 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-9928" for this suite. @ 09/04/25 15:37:51.808
• [0.120 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:112
  STEP: Creating a kubernetes client @ 09/04/25 15:37:51.813
  I0904 15:37:51.813305 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename replicaset @ 09/04/25 15:37:51.813
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:37:51.825
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:37:51.827
  I0904 15:37:51.828535 23 replica_set.go:192] Creating ReplicaSet my-hostname-basic-e1f6526f-e4b5-4855-aa26-5c8aeeaca8d2
  I0904 15:37:51.835999 23 resource.go:64] Pod name my-hostname-basic-e1f6526f-e4b5-4855-aa26-5c8aeeaca8d2: Found 0 pods out of 1
  E0904 15:37:52.723752      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:37:53.723846      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:37:54.723970      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:37:55.724738      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:37:56.724803      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:37:56.842966 23 resource.go:64] Pod name my-hostname-basic-e1f6526f-e4b5-4855-aa26-5c8aeeaca8d2: Found 1 pods out of 1
  I0904 15:37:56.842994 23 replica_set.go:205] Ensuring a pod for ReplicaSet "my-hostname-basic-e1f6526f-e4b5-4855-aa26-5c8aeeaca8d2" is running
  I0904 15:37:56.846822 23 replica_set.go:221] Pod "my-hostname-basic-e1f6526f-e4b5-4855-aa26-5c8aeeaca8d2-wwghs" is running (conditions: [{Type:PodReadyToStartContainers ObservedGeneration:1 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-09-04 15:37:52 +0000 UTC Reason: Message:} {Type:Initialized ObservedGeneration:1 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-09-04 15:37:51 +0000 UTC Reason: Message:} {Type:Ready ObservedGeneration:1 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-09-04 15:37:52 +0000 UTC Reason: Message:} {Type:ContainersReady ObservedGeneration:1 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-09-04 15:37:52 +0000 UTC Reason: Message:} {Type:PodScheduled ObservedGeneration:1 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-09-04 15:37:51 +0000 UTC Reason: Message:}])
  I0904 15:37:56.846843 23 replica_set.go:229] Trying to dial the pod
  STEP: trying to dial each unique pod @ 09/04/25 15:37:56.846
  I0904 15:37:56.952162 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-4392" for this suite. @ 09/04/25 15:37:56.956
• [5.148 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:241
  STEP: Creating a kubernetes client @ 09/04/25 15:37:56.961
  I0904 15:37:56.961504 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename resourcequota @ 09/04/25 15:37:56.962
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:37:56.973
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:37:56.975
  STEP: Counting existing ResourceQuota @ 09/04/25 15:37:56.976
  E0904 15:37:57.725807      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:37:58.726673      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:37:59.726823      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:38:00.726916      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:38:01.726952      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 09/04/25 15:38:01.982
  STEP: Ensuring resource quota status is calculated @ 09/04/25 15:38:01.986
  E0904 15:38:02.727395      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:38:03.728404      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:38:04.000138 23 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc0056a8500>: 
          metadata:
            creationTimestamp: "2025-09-04T15:38:01Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-04T15:38:01Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
                  f:used:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-04T15:38:01Z"
            name: test-quota
            namespace: resourcequota-7989
            resourceVersion: "37457"
            uid: 6564310e-7fc7-4242-b76f-c41acb976fd6
          spec:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
          status:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
            used:
              configmaps: "1"
              count/replicasets.apps: "0"
              cpu: "0"
              ephemeral-storage: "0"
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
              gold.storageclass.storage.k8s.io/requests.storage: "0"
              memory: "0"
              persistentvolumeclaims: "0"
              pods: "0"
              replicationcontrollers: "0"
              requests.example.com/dongle: "0"
              requests.storage: "0"
              resourcequotas: "1"
              secrets: "0"
              services: "0"
              services.loadbalancers: "0"
              services.nodeports: "0"
  STEP: Creating a Pod that fits quota @ 09/04/25 15:38:04
  STEP: Ensuring ResourceQuota status captures the pod usage @ 09/04/25 15:38:04.012
  I0904 15:38:04.017124 23 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc0057937c0>: 
          metadata:
            creationTimestamp: "2025-09-04T15:38:01Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-04T15:38:01Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
                  f:used:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:persistentvolumeclaims: {}
                    f:replicationcontrollers: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-04T15:38:01Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:used:
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:memory: {}
                    f:pods: {}
                    f:requests.example.com/dongle: {}
              manager: kube-apiserver
              operation: Update
              subresource: status
              time: "2025-09-04T15:38:04Z"
            name: test-quota
            namespace: resourcequota-7989
            resourceVersion: "37473"
            uid: 6564310e-7fc7-4242-b76f-c41acb976fd6
          spec:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
          status:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
            used:
              configmaps: "1"
              count/replicasets.apps: "0"
              cpu: 500m
              ephemeral-storage: 30Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
              gold.storageclass.storage.k8s.io/requests.storage: "0"
              memory: 252Mi
              persistentvolumeclaims: "0"
              pods: "1"
              replicationcontrollers: "0"
              requests.example.com/dongle: "2"
              requests.storage: "0"
              resourcequotas: "1"
              secrets: "0"
              services: "0"
              services.loadbalancers: "0"
              services.nodeports: "0"
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 09/04/25 15:38:04.017
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 09/04/25 15:38:04.018
  STEP: Ensuring a pod cannot update its resource requirements @ 09/04/25 15:38:04.02
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 09/04/25 15:38:04.026
  I0904 15:38:04.029368 23 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc005793e00>: 
          metadata:
            creationTimestamp: "2025-09-04T15:38:01Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-04T15:38:01Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
                  f:used:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:persistentvolumeclaims: {}
                    f:replicationcontrollers: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-04T15:38:01Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:used:
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:memory: {}
                    f:pods: {}
                    f:requests.example.com/dongle: {}
              manager: kube-apiserver
              operation: Update
              subresource: status
              time: "2025-09-04T15:38:04Z"
            name: test-quota
            namespace: resourcequota-7989
            resourceVersion: "37473"
            uid: 6564310e-7fc7-4242-b76f-c41acb976fd6
          spec:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
          status:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
            used:
              configmaps: "1"
              count/replicasets.apps: "0"
              cpu: 500m
              ephemeral-storage: 30Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
              gold.storageclass.storage.k8s.io/requests.storage: "0"
              memory: 252Mi
              persistentvolumeclaims: "0"
              pods: "1"
              replicationcontrollers: "0"
              requests.example.com/dongle: "2"
              requests.storage: "0"
              resourcequotas: "1"
              secrets: "0"
              services: "0"
              services.loadbalancers: "0"
              services.nodeports: "0"
  STEP: Deleting the pod @ 09/04/25 15:38:04.029
  STEP: Ensuring resource quota status released the pod usage @ 09/04/25 15:38:04.047
  I0904 15:38:04.049149 23 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc0057d8a00>: 
          metadata:
            creationTimestamp: "2025-09-04T15:38:01Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-04T15:38:01Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
                  f:used:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-04T15:38:04Z"
            name: test-quota
            namespace: resourcequota-7989
            resourceVersion: "37478"
            uid: 6564310e-7fc7-4242-b76f-c41acb976fd6
          spec:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
          status:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
            used:
              configmaps: "1"
              count/replicasets.apps: "0"
              cpu: "0"
              ephemeral-storage: "0"
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
              gold.storageclass.storage.k8s.io/requests.storage: "0"
              memory: "0"
              persistentvolumeclaims: "0"
              pods: "0"
              replicationcontrollers: "0"
              requests.example.com/dongle: "0"
              requests.storage: "0"
              resourcequotas: "1"
              secrets: "0"
              services: "0"
              services.loadbalancers: "0"
              services.nodeports: "0"
  I0904 15:38:04.049571 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7989" for this suite. @ 09/04/25 15:38:04.054
• [7.098 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should support continue listing from the last key if the original version has been compacted away, though the list is inconsistent [Slow] [Conformance] [sig-api-machinery, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:144
  STEP: Creating a kubernetes client @ 09/04/25 15:38:04.059
  I0904 15:38:04.059820 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename chunking @ 09/04/25 15:38:04.06
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:38:04.071
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:38:04.072
  STEP: creating a large number of resources @ 09/04/25 15:38:04.074
  E0904 15:38:04.728706      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:38:05.729746      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:38:06.730493      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:38:07.731082      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:38:08.731743      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:38:09.732252      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:38:10.732663      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:38:11.733105      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:38:12.733240      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:38:13.733912      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:38:14.734311      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:38:15.734822      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:38:16.735765      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:38:17.736274      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:38:18.736738      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:38:19.736830      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:38:20.736962      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:38:21.737757      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the first page @ 09/04/25 15:38:21.763
  I0904 15:38:21.815611 23 chunking.go:163] Retrieved 40/40 results with rv 37934 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc5MzQsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ
  STEP: retrieving the second page until the token expires @ 09/04/25 15:38:21.815
  E0904 15:38:22.738795      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:38:23.738940      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:38:24.739014      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:38:25.739162      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:38:26.739257      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:38:27.739403      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:38:28.739543      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:38:29.739782      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:38:30.740001      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:38:31.741056      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:38:32.741227      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:38:33.741430      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:38:34.741658      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:38:35.741857      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:38:36.742050      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:38:37.742243      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:38:38.742446      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:38:39.742662      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:38:40.742849      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:38:41.742997      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:38:41.817820 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc5MzQsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0904 15:38:42.743748      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:38:43.743855      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:38:44.743895      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:38:45.744792      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:38:46.745337      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:38:47.745439      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:38:48.745784      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:38:49.746784      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:38:50.747791      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:38:51.747885      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:38:52.748066      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:38:53.748791      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:38:54.748991      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:38:55.749800      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:38:56.749902      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:38:57.750107      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:38:58.750309      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:38:59.750527      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:39:00.750714      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:39:01.750819      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:39:01.817509 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc5MzQsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0904 15:39:02.750955      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:39:03.751158      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:39:04.751350      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:39:05.751793      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:39:06.751929      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:39:07.752131      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:39:08.752793      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:39:09.752986      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:39:10.753179      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:39:11.754030      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:39:12.754203      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:39:13.754788      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:39:14.754852      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:39:15.755787      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:39:16.755898      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:39:17.756822      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:39:18.757792      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:39:19.758803      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:39:20.759794      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:39:21.759988      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:39:21.817981 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc5MzQsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0904 15:39:22.760099      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:39:23.760287      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:39:24.760470      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:39:25.760664      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:39:26.760779      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:39:27.760960      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:39:28.761148      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:39:29.761354      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:39:30.761492      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:39:31.762109      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:39:32.762210      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:39:33.762406      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:39:34.762634      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:39:35.762844      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:39:36.763009      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:39:37.763881      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:39:38.763985      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:39:39.764181      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:39:40.764852      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:39:41.765789      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:39:41.817639 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc5MzQsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0904 15:39:42.766554      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:39:43.766716      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:39:44.766740      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:39:45.766939      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:39:46.767036      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:39:47.767795      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:39:48.767968      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:39:49.768147      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:39:50.768349      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:39:51.769100      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:39:52.769222      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:39:53.769781      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:39:54.770790      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:39:55.770958      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:39:56.771014      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:39:57.771793      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:39:58.772811      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:39:59.773830      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:40:00.774867      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:40:01.775144      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:40:01.817967 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc5MzQsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0904 15:40:02.775894      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:40:03.776779      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:40:04.777040      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:40:05.777108      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:40:06.777096      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:40:07.777776      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:40:08.777866      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:40:09.778060      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:40:10.778324      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:40:11.779093      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:40:12.779226      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:40:13.779428      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:40:14.779642      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:40:15.779844      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:40:16.779964      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:40:17.780156      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:40:18.780291      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:40:19.780916      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:40:20.781112      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:40:21.782114      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:40:21.817972 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc5MzQsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0904 15:40:22.782233      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:40:23.782430      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:40:24.782674      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:40:25.782866      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:40:26.782988      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:40:27.783178      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:40:28.783351      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:40:29.784117      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:40:30.784208      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:40:31.784878      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:40:32.784961      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:40:33.785788      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:40:34.786782      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:40:35.787782      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:40:36.787903      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:40:37.788829      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:40:38.788980      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:40:39.789176      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:40:40.789360      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:40:41.790095      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:40:41.818068 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc5MzQsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0904 15:40:42.791057      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:40:43.791258      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:40:44.791434      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:40:45.791675      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:40:46.792177      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:40:47.792276      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:40:48.792784      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:40:49.792948      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:40:50.793137      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:40:51.794124      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:40:52.795147      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:40:53.795238      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:40:54.795796      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:40:55.796783      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:40:56.796882      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:40:57.796975      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:40:58.797792      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:40:59.797975      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:41:00.798151      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:41:01.799099      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:41:01.818016 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc5MzQsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0904 15:41:02.799733      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:41:03.799858      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:41:04.800033      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:41:05.800245      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:41:06.801084      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:41:07.801273      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:41:08.801461      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:41:09.801780      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:41:10.802802      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:41:11.802903      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:41:12.803010      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:41:13.804033      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:41:14.804136      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:41:15.804314      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:41:16.805104      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:41:17.805788      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:41:18.805918      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:41:19.806004      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:41:20.806791      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:41:21.807782      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:41:21.817769 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc5MzQsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0904 15:41:22.807907      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:41:23.807990      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:41:24.808093      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:41:25.808171      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:41:26.808280      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:41:27.808352      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:41:28.808465      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:41:29.808630      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:41:30.808788      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:41:31.808865      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:41:32.809783      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:41:33.809879      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:41:34.810063      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:41:35.810241      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:41:36.811131      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:41:37.811312      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:41:38.811499      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:41:39.811801      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:41:40.812045      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:41:41.812099      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:41:41.818103 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc5MzQsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0904 15:41:42.812942      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:41:43.813088      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:41:44.813191      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:41:45.813372      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:41:46.814195      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:41:47.814300      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:41:48.814698      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:41:49.814795      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:41:50.815799      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:41:51.815882      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:41:52.816788      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:41:53.816877      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:41:54.817788      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:41:55.818791      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:41:56.818899      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:41:57.819796      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:41:58.819961      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:41:59.820790      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:42:00.820947      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:42:01.817812 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc5MzQsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0904 15:42:01.821851      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:42:02.822779      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:42:03.822962      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:42:04.823304      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:42:05.823483      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:42:06.824337      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:42:07.824506      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:42:08.824688      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:42:09.824723      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:42:10.825794      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:42:11.825904      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:42:12.826779      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:42:13.827781      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:42:14.827940      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:42:15.828783      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:42:16.828920      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:42:17.829104      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:42:18.829293      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:42:19.829473      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:42:20.829782      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:42:21.817401 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc5MzQsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0904 15:42:21.830536      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:42:22.830730      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:42:23.830918      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:42:24.831104      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:42:25.831782      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:42:26.831934      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:42:27.832118      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:42:28.832298      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:42:29.832489      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:42:30.832649      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:42:31.833369      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:42:32.834316      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:42:33.834407      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:42:34.834485      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:42:35.835065      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:42:36.835145      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:42:37.835788      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:42:38.835952      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:42:39.836112      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:42:40.836789      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:42:41.817332 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc5MzQsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0904 15:42:41.837305      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:42:42.837458      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:42:43.837779      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:42:44.837971      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:42:45.838154      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:42:46.839159      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:42:47.839327      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:42:48.839512      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:42:49.839669      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:42:50.839846      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:42:51.839998      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:42:52.840195      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:42:53.840364      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:42:54.840538      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:42:55.840770      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:42:56.840879      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:42:57.841060      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:42:58.841278      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:42:59.841931      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:43:00.842120      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:43:01.817905 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc5MzQsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0904 15:43:01.842985      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:43:02.843130      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:43:03.843326      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:43:04.843532      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:43:05.843667      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:43:06.843739      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:43:07.844772      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:43:08.844872      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:43:09.845791      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:43:10.846804      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:43:11.846853      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:43:12.847012      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:43:13.847125      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:43:14.847868      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:43:15.847975      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:43:16.848082      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:43:17.848218      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:43:18.848310      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:43:19.848431      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:43:20.848735      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:43:21.818656 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc5MzQsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0904 15:43:21.849608      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:43:22.849881      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:43:23.849872      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:43:24.850806      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:43:25.850894      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:43:26.851062      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:43:27.851232      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:43:28.851784      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:43:29.851946      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:43:30.852801      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:43:31.852907      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:43:32.853781      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:43:33.853964      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:43:34.854053      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:43:35.854796      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:43:36.854895      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:43:37.855790      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:43:38.856792      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:43:39.857784      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:43:40.857979      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:43:41.817799 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc5MzQsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0904 15:43:41.858857      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:43:42.859050      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:43:43.859797      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:43:44.860790      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:43:45.860955      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:43:46.861110      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:43:47.861788      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:43:48.861978      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:43:49.862198      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:43:50.862376      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:43:51.863282      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:43:52.863391      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:43:53.864096      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:43:54.864198      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:43:55.864379      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:43:56.865407      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:43:57.865786      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:43:58.866784      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:43:59.867799      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:44:00.867851      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:44:01.817692 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc5MzQsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0904 15:44:01.868766      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:44:02.869777      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:44:03.869976      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:44:04.870311      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:44:05.870466      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:44:06.871223      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:44:07.871330      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:44:08.871785      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:44:09.871962      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:44:10.872168      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:44:11.873201      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:44:12.873303      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:44:13.873796      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:44:14.874791      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:44:15.875800      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:44:16.876784      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:44:17.876953      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:44:18.877778      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:44:19.877970      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:44:20.878172      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:44:21.817758 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc5MzQsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0904 15:44:21.878835      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:44:22.879022      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:44:23.879230      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:44:24.879419      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:44:25.879638      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:44:26.879743      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:44:27.880308      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:44:28.880521      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:44:29.880742      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:44:30.880921      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:44:31.881969      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:44:32.882132      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:44:33.882345      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:44:34.882527      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:44:35.882785      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:44:36.882901      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:44:37.883719      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:44:38.883831      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:44:39.884788      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:44:40.885791      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:44:41.817610 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc5MzQsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0904 15:44:41.886672      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:44:42.886844      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:44:43.886938      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:44:44.887783      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:44:45.887965      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:44:46.888677      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:44:47.888864      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:44:48.889062      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:44:49.889230      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:44:50.889434      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:44:51.890226      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:44:52.890359      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:44:53.890561      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:44:54.890790      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:44:55.890980      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:44:56.891169      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:44:57.891368      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:44:58.891576      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:44:59.891788      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:45:00.891976      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:45:01.817763 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzc5MzQsInN0YXJ0IjoiL3RlbXBsYXRlLTAwMzlcdTAwMDAifQ has not expired yet
  E0904 15:45:01.892850      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:45:02.893040      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:45:03.893168      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:45:04.893792      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:45:05.893978      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:45:06.894120      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:45:07.895032      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:45:08.895130      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:45:09.895781      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:45:10.896787      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:45:11.897788      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:45:12.898821      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:45:13.898994      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:45:14.899166      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:45:15.899351      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:45:16.900226      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:45:17.900409      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:45:18.900629      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:45:19.900850      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:45:20.901801      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:45:21.820157 23 chunking.go:177] got error The provided continue parameter is too old to display a consistent list result. You can start a new list without the continue parameter, or use the continue token in this response to retrieve the remainder of the results. Continuing with the provided token results in an inconsistent list - objects that were created, modified, or deleted between the time the first chunk was returned and now may show up in the list.
  I0904 15:45:21.820190 23 chunking.go:186] Retrieved inconsistent continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6LTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page again with the token received with the error message @ 09/04/25 15:45:21.82
  STEP: retrieving all remaining pages @ 09/04/25 15:45:21.825
  I0904 15:45:21.828079 23 chunking.go:221] Retrieved 40/40 results with rv 38791 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg3OTEsInN0YXJ0IjoidGVtcGxhdGUtMDExOVx1MDAwMCJ9
  I0904 15:45:21.830179 23 chunking.go:221] Retrieved 40/40 results with rv 38791 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg3OTEsInN0YXJ0IjoidGVtcGxhdGUtMDE1OVx1MDAwMCJ9
  I0904 15:45:21.834884 23 chunking.go:221] Retrieved 40/40 results with rv 38791 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg3OTEsInN0YXJ0IjoidGVtcGxhdGUtMDE5OVx1MDAwMCJ9
  I0904 15:45:21.838084 23 chunking.go:221] Retrieved 40/40 results with rv 38791 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg3OTEsInN0YXJ0IjoidGVtcGxhdGUtMDIzOVx1MDAwMCJ9
  I0904 15:45:21.840168 23 chunking.go:221] Retrieved 40/40 results with rv 38791 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg3OTEsInN0YXJ0IjoidGVtcGxhdGUtMDI3OVx1MDAwMCJ9
  I0904 15:45:21.844401 23 chunking.go:221] Retrieved 40/40 results with rv 38791 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg3OTEsInN0YXJ0IjoidGVtcGxhdGUtMDMxOVx1MDAwMCJ9
  I0904 15:45:21.847910 23 chunking.go:221] Retrieved 40/40 results with rv 38791 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Mzg3OTEsInN0YXJ0IjoidGVtcGxhdGUtMDM1OVx1MDAwMCJ9
  I0904 15:45:21.849917 23 chunking.go:221] Retrieved 40/40 results with rv 38791 and continue 
  I0904 15:45:21.850032 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-5394" for this suite. @ 09/04/25 15:45:21.855
• [437.802 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] StorageClasses CSI Conformance should run through the lifecycle of a StorageClass [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/storageclass.go:53
  STEP: Creating a kubernetes client @ 09/04/25 15:45:21.862
  I0904 15:45:21.862087 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename csi-storageclass @ 09/04/25 15:45:21.862
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:45:21.874
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:45:21.875
  STEP: Creating a StorageClass @ 09/04/25 15:45:21.877
  STEP: Get StorageClass "e2e-t8ghw" @ 09/04/25 15:45:21.884
  STEP: Patching the StorageClass "e2e-t8ghw" @ 09/04/25 15:45:21.886
  STEP: Delete StorageClass "e2e-t8ghw" @ 09/04/25 15:45:21.892
  STEP: Confirm deletion of StorageClass "e2e-t8ghw" @ 09/04/25 15:45:21.898
  STEP: Create a replacement StorageClass @ 09/04/25 15:45:21.9
  E0904 15:45:21.902623      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Updating StorageClass "e2e-v2-rknpn" @ 09/04/25 15:45:21.905
  STEP: Listing all StorageClass with the labelSelector: "e2e-v2-rknpn=updated" @ 09/04/25 15:45:21.911
  STEP: Deleting StorageClass "e2e-v2-rknpn" via DeleteCollection @ 09/04/25 15:45:21.915
  STEP: Confirm deletion of StorageClass "e2e-v2-rknpn" @ 09/04/25 15:45:21.922
  I0904 15:45:21.924381 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csi-storageclass-4114" for this suite. @ 09/04/25 15:45:21.955
• [0.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:57
  STEP: Creating a kubernetes client @ 09/04/25 15:45:21.964
  I0904 15:45:21.964309 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename configmap @ 09/04/25 15:45:21.964
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:45:21.973
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:45:21.974
  STEP: Creating configMap with name configmap-test-volume-3ee470bc-0822-4ae1-9af4-94212713e6df @ 09/04/25 15:45:21.976
  STEP: Creating a pod to test consume configMaps @ 09/04/25 15:45:21.981
  E0904 15:45:22.902730      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:45:23.902917      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:45:24.903759      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:45:25.904234      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/25 15:45:25.998
  I0904 15:45:26.000628 23 output.go:207] Trying to get logs from node ip-172-31-33-202 pod pod-configmaps-df6ea73a-1df9-44ba-a016-815057196407 container agnhost-container: <nil>
  STEP: delete the pod @ 09/04/25 15:45:26.017
  I0904 15:45:26.032559 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7605" for this suite. @ 09/04/25 15:45:26.038
• [4.080 seconds]
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:305
  STEP: Creating a kubernetes client @ 09/04/25 15:45:26.044
  I0904 15:45:26.044491 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename svcaccounts @ 09/04/25 15:45:26.044
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:45:26.055
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:45:26.057
  STEP: Creating a pod to test service account token:  @ 09/04/25 15:45:26.059
  E0904 15:45:26.904967      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:45:27.905088      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:45:28.905189      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:45:29.905261      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/25 15:45:30.084
  I0904 15:45:30.087221 23 output.go:207] Trying to get logs from node ip-172-31-33-202 pod test-pod-3ddd414e-bb82-47c5-8feb-0b6b8a4ce444 container agnhost-container: <nil>
  STEP: delete the pod @ 09/04/25 15:45:30.092
  I0904 15:45:30.108311 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-7984" for this suite. @ 09/04/25 15:45:30.111
• [4.072 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:413
  STEP: Creating a kubernetes client @ 09/04/25 15:45:30.116
  I0904 15:45:30.116851 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename kubectl @ 09/04/25 15:45:30.117
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:45:30.127
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:45:30.129
  STEP: creating all guestbook components @ 09/04/25 15:45:30.131
  I0904 15:45:30.131493 23 kubectl.go:419] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  I0904 15:45:30.131575 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=kubectl-15 create -f -'
  I0904 15:45:30.212332 23 builder.go:156] stderr: ""
  I0904 15:45:30.212378 23 builder.go:157] stdout: "service/agnhost-replica created\n"
  I0904 15:45:30.212411 23 kubectl.go:419] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  I0904 15:45:30.212678 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=kubectl-15 create -f -'
  I0904 15:45:30.291215 23 builder.go:156] stderr: ""
  I0904 15:45:30.291236 23 builder.go:157] stdout: "service/agnhost-primary created\n"
  I0904 15:45:30.291276 23 kubectl.go:419] apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  I0904 15:45:30.291410 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=kubectl-15 create -f -'
  I0904 15:45:30.364010 23 builder.go:156] stderr: ""
  I0904 15:45:30.364031 23 builder.go:157] stdout: "service/frontend created\n"
  I0904 15:45:30.364078 23 kubectl.go:419] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.56
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  I0904 15:45:30.364149 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=kubectl-15 create -f -'
  I0904 15:45:30.413891 23 builder.go:156] stderr: ""
  I0904 15:45:30.413910 23 builder.go:157] stdout: "deployment.apps/frontend created\n"
  I0904 15:45:30.413965 23 kubectl.go:419] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.56
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I0904 15:45:30.414041 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=kubectl-15 create -f -'
  I0904 15:45:30.471194 23 builder.go:156] stderr: ""
  I0904 15:45:30.471216 23 builder.go:157] stdout: "deployment.apps/agnhost-primary created\n"
  I0904 15:45:30.471256 23 kubectl.go:419] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.56
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I0904 15:45:30.471309 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=kubectl-15 create -f -'
  I0904 15:45:30.529882 23 builder.go:156] stderr: ""
  I0904 15:45:30.529907 23 builder.go:157] stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 09/04/25 15:45:30.529
  I0904 15:45:30.530116 23 kubectl.go:2307] Waiting for all frontend pods to be Running.
  E0904 15:45:30.906051      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:45:31.906503      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:45:32.906601      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:45:33.906819      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:45:34.906989      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:45:35.581799 23 kubectl.go:2311] Waiting for frontend to serve content.
  I0904 15:45:35.589237 23 kubectl.go:2316] Trying to add a new entry to the guestbook.
  I0904 15:45:35.604234 23 kubectl.go:2321] Verifying that added entry can be retrieved.
  STEP: using delete to clean up resources @ 09/04/25 15:45:35.615
  I0904 15:45:35.615560 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=kubectl-15 delete --grace-period=0 --force -f -'
  I0904 15:45:35.672166 23 builder.go:156] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0904 15:45:35.672202 23 builder.go:157] stdout: "service \"agnhost-replica\" force deleted from kubectl-15 namespace\n"
  STEP: using delete to clean up resources @ 09/04/25 15:45:35.672
  I0904 15:45:35.672374 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=kubectl-15 delete --grace-period=0 --force -f -'
  I0904 15:45:35.719062 23 builder.go:156] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0904 15:45:35.719088 23 builder.go:157] stdout: "service \"agnhost-primary\" force deleted from kubectl-15 namespace\n"
  STEP: using delete to clean up resources @ 09/04/25 15:45:35.719
  I0904 15:45:35.719262 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=kubectl-15 delete --grace-period=0 --force -f -'
  I0904 15:45:35.767664 23 builder.go:156] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0904 15:45:35.767693 23 builder.go:157] stdout: "service \"frontend\" force deleted from kubectl-15 namespace\n"
  STEP: using delete to clean up resources @ 09/04/25 15:45:35.767
  I0904 15:45:35.767809 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=kubectl-15 delete --grace-period=0 --force -f -'
  I0904 15:45:35.804761 23 builder.go:156] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0904 15:45:35.804790 23 builder.go:157] stdout: "deployment.apps \"frontend\" force deleted from kubectl-15 namespace\n"
  STEP: using delete to clean up resources @ 09/04/25 15:45:35.804
  I0904 15:45:35.804890 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=kubectl-15 delete --grace-period=0 --force -f -'
  I0904 15:45:35.851477 23 builder.go:156] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0904 15:45:35.851517 23 builder.go:157] stdout: "deployment.apps \"agnhost-primary\" force deleted from kubectl-15 namespace\n"
  STEP: using delete to clean up resources @ 09/04/25 15:45:35.851
  I0904 15:45:35.851650 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=kubectl-15 delete --grace-period=0 --force -f -'
  I0904 15:45:35.906992 23 builder.go:156] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0904 15:45:35.907109 23 builder.go:157] stdout: "deployment.apps \"agnhost-replica\" force deleted from kubectl-15 namespace\n"
  E0904 15:45:35.907287      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:45:35.907430 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-15" for this suite. @ 09/04/25 15:45:35.913
• [5.807 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:125
  STEP: Creating a kubernetes client @ 09/04/25 15:45:35.923
  I0904 15:45:35.923768 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename pod-network-test @ 09/04/25 15:45:35.924
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:45:35.946
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:45:35.958
  STEP: Performing setup for networking test in namespace pod-network-test-6263 @ 09/04/25 15:45:35.994
  STEP: creating a selector @ 09/04/25 15:45:35.995
  STEP: Creating the service pods in kubernetes @ 09/04/25 15:45:35.995
  I0904 15:45:35.995664 23 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0904 15:45:36.907226      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:45:37.907314      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:45:38.907422      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:45:39.907508      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:45:40.907634      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:45:41.907724      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:45:42.907829      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:45:43.908025      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:45:44.908152      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:45:45.908241      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:45:46.908811      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:45:47.908941      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:45:48.909107      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:45:49.909200      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 09/04/25 15:45:50.092
  E0904 15:45:50.910231      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:45:51.911231      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:45:52.119014 23 utils.go:803] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I0904 15:45:52.119048 23 utils.go:496] Going to poll 192.168.4.142 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  I0904 15:45:52.123064 23 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.4.142 8081 | grep -v '^\s*$'] Namespace:pod-network-test-6263 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0904 15:45:52.123079 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0904 15:45:52.123111 23 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/pod-network-test-6263/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.4.142+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  E0904 15:45:52.911261      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:45:53.164517 23 utils.go:513] Found all 1 expected endpoints: [netserver-0]
  I0904 15:45:53.164548 23 utils.go:496] Going to poll 192.168.109.96 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  I0904 15:45:53.168054 23 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.109.96 8081 | grep -v '^\s*$'] Namespace:pod-network-test-6263 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0904 15:45:53.168071 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0904 15:45:53.168103 23 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/pod-network-test-6263/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.109.96+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  E0904 15:45:53.911881      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:45:54.209277 23 utils.go:513] Found all 1 expected endpoints: [netserver-1]
  I0904 15:45:54.209308 23 utils.go:496] Going to poll 192.168.186.82 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  I0904 15:45:54.212259 23 exec_util.go:63] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.186.82 8081 | grep -v '^\s*$'] Namespace:pod-network-test-6263 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0904 15:45:54.212276 23 exec_util.go:68] ExecWithOptions: Clientset creation
  I0904 15:45:54.212315 23 exec_util.go:84] ExecWithOptions: execute(https://10.152.183.1:443/api/v1/namespaces/pod-network-test-6263/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.186.82+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&stderr=true&stdout=true)
  E0904 15:45:54.912518      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:45:55.248632 23 utils.go:513] Found all 1 expected endpoints: [netserver-2]
  I0904 15:45:55.248752 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-6263" for this suite. @ 09/04/25 15:45:55.255
• [19.341 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:254
  STEP: Creating a kubernetes client @ 09/04/25 15:45:55.264
  I0904 15:45:55.264841 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename namespaces @ 09/04/25 15:45:55.265
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:45:55.275
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:45:55.277
  STEP: Creating a test namespace @ 09/04/25 15:45:55.279
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:45:55.291
  STEP: Creating a service in the namespace @ 09/04/25 15:45:55.293
  STEP: Deleting the namespace @ 09/04/25 15:45:55.302
  STEP: Waiting for the namespace to be removed. @ 09/04/25 15:45:55.31
  E0904 15:45:55.913325      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:45:56.913678      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:45:57.914086      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:45:58.914261      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:45:59.914739      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:46:00.915821      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 09/04/25 15:46:01.313
  STEP: Verifying there is no service in the namespace @ 09/04/25 15:46:01.325
  I0904 15:46:01.328164 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-8250" for this suite. @ 09/04/25 15:46:01.332
  STEP: Destroying namespace "nsdeletetest-3107" for this suite. @ 09/04/25 15:46:01.337
  I0904 15:46:01.341307 23 framework.go:370] Namespace nsdeletetest-3107 was already deleted
  STEP: Destroying namespace "nsdeletetest-9809" for this suite. @ 09/04/25 15:46:01.341
• [6.080 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:393
  STEP: Creating a kubernetes client @ 09/04/25 15:46:01.345
  I0904 15:46:01.345316 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/04/25 15:46:01.345
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:46:01.355
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:46:01.356
  STEP: set up a multi version CRD @ 09/04/25 15:46:01.358
  I0904 15:46:01.358636 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  E0904 15:46:01.916753      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:46:02.917564      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:46:03.917776      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: rename a version @ 09/04/25 15:46:04.435
  STEP: check the new version name is served @ 09/04/25 15:46:04.446
  E0904 15:46:04.917919      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: check the old version name is removed @ 09/04/25 15:46:05.231
  STEP: check the other version is not changed @ 09/04/25 15:46:05.837
  E0904 15:46:05.918735      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:46:06.918811      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:46:07.919704      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:46:08.324571 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-3226" for this suite. @ 09/04/25 15:46:08.332
• [6.995 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:706
  STEP: Creating a kubernetes client @ 09/04/25 15:46:08.339
  I0904 15:46:08.339983 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename sched-pred @ 09/04/25 15:46:08.34
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:46:08.351
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:46:08.352
  I0904 15:46:08.354072 23 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0904 15:46:08.435801 23 util.go:390] Waiting for terminating namespaces to be deleted...
  I0904 15:46:08.438479 23 predicates.go:120] 
  Logging pods the apiserver thinks is on node ip-172-31-18-79 before test
  I0904 15:46:08.443706 23 predicates.go:958] nginx-ingress-controller-kubernetes-worker-th9mz from ingress-nginx-kubernetes-worker started at 2025-09-04 14:25:59 +0000 UTC (1 container statuses recorded)
  I0904 15:46:08.443721 23 predicates.go:960] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0904 15:46:08.443727 23 predicates.go:958] calico-node-hnfqw from kube-system started at 2025-09-04 14:35:51 +0000 UTC (1 container statuses recorded)
  I0904 15:46:08.443731 23 predicates.go:960] 	Container calico-node ready: true, restart count 0
  I0904 15:46:08.443741 23 predicates.go:958] sonobuoy-e2e-job-9fbf261a650c4889 from sonobuoy started at 2025-09-04 14:37:48 +0000 UTC (2 container statuses recorded)
  I0904 15:46:08.443747 23 predicates.go:960] 	Container e2e ready: true, restart count 0
  I0904 15:46:08.443751 23 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0904 15:46:08.443755 23 predicates.go:958] sonobuoy-systemd-logs-daemon-set-56e1dcee030f40d6-xkq28 from sonobuoy started at 2025-09-04 14:37:48 +0000 UTC (2 container statuses recorded)
  I0904 15:46:08.443759 23 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0904 15:46:08.443763 23 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  I0904 15:46:08.443767 23 predicates.go:120] 
  Logging pods the apiserver thinks is on node ip-172-31-33-202 before test
  I0904 15:46:08.446157 23 predicates.go:958] nginx-ingress-controller-kubernetes-worker-wqsrn from ingress-nginx-kubernetes-worker started at 2025-09-04 15:16:14 +0000 UTC (1 container statuses recorded)
  I0904 15:46:08.446169 23 predicates.go:960] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0904 15:46:08.446174 23 predicates.go:958] calico-node-q8qbr from kube-system started at 2025-09-04 14:33:35 +0000 UTC (1 container statuses recorded)
  I0904 15:46:08.446188 23 predicates.go:960] 	Container calico-node ready: true, restart count 0
  I0904 15:46:08.446192 23 predicates.go:958] sonobuoy from sonobuoy started at 2025-09-04 14:37:46 +0000 UTC (1 container statuses recorded)
  I0904 15:46:08.446196 23 predicates.go:960] 	Container kube-sonobuoy ready: true, restart count 0
  I0904 15:46:08.446201 23 predicates.go:958] sonobuoy-systemd-logs-daemon-set-56e1dcee030f40d6-sq6h5 from sonobuoy started at 2025-09-04 14:37:48 +0000 UTC (2 container statuses recorded)
  I0904 15:46:08.446205 23 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0904 15:46:08.446209 23 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  I0904 15:46:08.446213 23 predicates.go:120] 
  Logging pods the apiserver thinks is on node ip-172-31-87-111 before test
  I0904 15:46:08.448006 23 predicates.go:958] nginx-ingress-controller-kubernetes-worker-thhq5 from ingress-nginx-kubernetes-worker started at 2025-09-04 14:21:14 +0000 UTC (1 container statuses recorded)
  I0904 15:46:08.448019 23 predicates.go:960] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0904 15:46:08.448024 23 predicates.go:958] calico-node-z98vv from kube-system started at 2025-09-04 14:34:13 +0000 UTC (1 container statuses recorded)
  I0904 15:46:08.448027 23 predicates.go:960] 	Container calico-node ready: true, restart count 0
  I0904 15:46:08.448032 23 predicates.go:958] coredns-6bb7467dc9-q25dk from kube-system started at 2025-09-04 14:21:14 +0000 UTC (1 container statuses recorded)
  I0904 15:46:08.448035 23 predicates.go:960] 	Container coredns ready: true, restart count 0
  I0904 15:46:08.448040 23 predicates.go:958] kube-state-metrics-67d58dfcdd-wb9tq from kube-system started at 2025-09-04 14:21:14 +0000 UTC (1 container statuses recorded)
  I0904 15:46:08.448044 23 predicates.go:960] 	Container kube-state-metrics ready: true, restart count 2
  I0904 15:46:08.448048 23 predicates.go:958] metrics-server-v0.7.2-847d5645c8-dxxpg from kube-system started at 2025-09-04 14:21:14 +0000 UTC (2 container statuses recorded)
  I0904 15:46:08.448052 23 predicates.go:960] 	Container metrics-server ready: true, restart count 0
  I0904 15:46:08.448055 23 predicates.go:960] 	Container metrics-server-nanny ready: true, restart count 0
  I0904 15:46:08.448059 23 predicates.go:958] dashboard-metrics-scraper-55dc6fc9df-bxgsr from kubernetes-dashboard started at 2025-09-04 14:21:14 +0000 UTC (1 container statuses recorded)
  I0904 15:46:08.448079 23 predicates.go:960] 	Container dashboard-metrics-scraper ready: true, restart count 0
  I0904 15:46:08.448084 23 predicates.go:958] kubernetes-dashboard-847cf64d65-kmws8 from kubernetes-dashboard started at 2025-09-04 14:21:14 +0000 UTC (1 container statuses recorded)
  I0904 15:46:08.448088 23 predicates.go:960] 	Container kubernetes-dashboard ready: true, restart count 3
  I0904 15:46:08.448092 23 predicates.go:958] sonobuoy-systemd-logs-daemon-set-56e1dcee030f40d6-zthcb from sonobuoy started at 2025-09-04 14:37:48 +0000 UTC (2 container statuses recorded)
  I0904 15:46:08.448096 23 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0904 15:46:08.448100 23 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 09/04/25 15:46:08.448
  E0904 15:46:08.920692      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:46:09.920783      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 09/04/25 15:46:10.468
  STEP: Trying to apply a random label on the found node. @ 09/04/25 15:46:10.486
  STEP: verifying the node has the label kubernetes.io/e2e-cf9553e0-67f4-4b2f-bb8b-972bd484e063 95 @ 09/04/25 15:46:10.493
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 09/04/25 15:46:10.495
  E0904 15:46:10.920875      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:46:11.921013      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 172.31.33.202 on the node which pod4 resides and expect not scheduled @ 09/04/25 15:46:12.508
  E0904 15:46:12.921512      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:46:13.921748      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:46:14.921828      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:46:15.921966      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:46:16.922758      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:46:17.922821      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:46:18.923034      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:46:19.923819      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:46:20.924446      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:46:21.925002      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:46:22.925803      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:46:23.925878      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:46:24.926016      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:46:25.926815      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:46:26.927484      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:46:27.927623      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:46:28.927752      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:46:29.927838      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:46:30.928455      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:46:31.929290      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:46:32.930291      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:46:33.931189      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:46:34.931354      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:46:35.932113      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:46:36.932192      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:46:37.932714      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:46:38.933673      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:46:39.933757      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:46:40.934790      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:46:41.934891      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:46:42.935786      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:46:43.935887      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:46:44.936554      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:46:45.936712      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:46:46.937803      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:46:47.937894      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:46:48.938452      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:46:49.938654      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:46:50.938766      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:46:51.939789      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:46:52.940428      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:46:53.940545      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:46:54.940617      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:46:55.940733      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:46:56.941277      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:46:57.941422      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:46:58.941526      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:46:59.941725      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:47:00.942426      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:47:01.943257      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:47:02.943811      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:47:03.944000      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:47:04.944114      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:47:05.944216      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:47:06.944304      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:47:07.944478      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:47:08.945367      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:47:09.945799      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:47:10.946438      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:47:11.947247      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:47:12.947334      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:47:13.947501      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:47:14.947601      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:47:15.947787      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:47:16.948348      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:47:17.948475      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:47:18.948683      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:47:19.948868      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:47:20.949680      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:47:21.950318      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:47:22.950792      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:47:23.950984      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:47:24.951134      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:47:25.951351      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:47:26.951975      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:47:27.952174      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:47:28.952480      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:47:29.952692      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:47:30.953501      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:47:31.954320      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:47:32.954486      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:47:33.954858      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:47:34.955068      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:47:35.955793      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:47:36.956575      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:47:37.956722      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:47:38.957393      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:47:39.957573      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:47:40.958189      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:47:41.958223      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:47:42.958457      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:47:43.958670      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:47:44.959366      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:47:45.959501      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:47:46.960267      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:47:47.960458      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:47:48.961083      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:47:49.961240      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:47:50.961380      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:47:51.962303      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:47:52.962369      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:47:53.962511      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:47:54.963200      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:47:55.963719      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:47:56.963914      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:47:57.964028      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:47:58.964800      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:47:59.965778      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:48:00.966768      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:48:01.967781      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:48:02.968628      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:48:03.968804      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:48:04.969627      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:48:05.969829      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:48:06.969965      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:48:07.970154      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:48:08.970862      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:48:09.971266      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:48:10.971431      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:48:11.972317      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:48:12.972887      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:48:13.973712      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:48:14.974616      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:48:15.974728      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:48:16.974795      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:48:17.974888      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:48:18.975023      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:48:19.975791      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:48:20.976302      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:48:21.977263      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:48:22.977346      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:48:23.977789      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:48:24.978222      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:48:25.978309      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:48:26.979304      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:48:27.979491      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:48:28.980282      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:48:29.980371      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:48:30.981104      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:48:31.981866      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:48:32.982789      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:48:33.982885      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:48:34.983301      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:48:35.984107      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:48:36.984166      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:48:37.984865      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:48:38.985171      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:48:39.985255      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:48:40.985330      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:48:41.986265      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:48:42.986275      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:48:43.986783      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:48:44.987322      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:48:45.987823      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:48:46.988669      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:48:47.988737      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:48:48.988856      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:48:49.989791      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:48:50.990498      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:48:51.990861      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:48:52.991870      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:48:53.992044      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:48:54.992373      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:48:55.992507      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:48:56.992966      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:48:57.993097      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:48:58.993808      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:48:59.994782      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:49:00.994964      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:49:01.995789      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:49:02.996068      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:49:03.996202      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:49:04.996258      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:49:05.996783      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:49:06.997000      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:49:07.997139      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:49:08.997412      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:49:09.997579      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:49:10.998083      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:49:11.998199      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:49:12.998260      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:49:13.998418      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:49:14.998840      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:49:15.999015      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:49:16.999293      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:49:17.999457      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:49:19.000282      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:49:20.000456      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:49:21.001049      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:49:22.002017      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:49:23.002322      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:49:24.002483      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:49:25.003179      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:49:26.003783      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:49:27.004479      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:49:28.004627      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:49:29.005433      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:49:30.005555      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:49:31.006018      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:49:32.006136      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:49:33.006900      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:49:34.007784      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:49:35.008120      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:49:36.008255      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:49:37.009107      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:49:38.009282      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:49:39.009655      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:49:40.009840      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:49:41.009887      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:49:42.010058      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:49:43.010958      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:49:44.011144      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:49:45.011929      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:49:46.012103      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:49:47.013069      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:49:48.013789      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:49:49.013828      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:49:50.013959      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:49:51.014742      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:49:52.015788      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:49:53.016488      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:49:54.016782      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:49:55.017329      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:49:56.017524      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:49:57.018427      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:49:58.018640      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:49:59.018838      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:50:00.019010      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:50:01.019031      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:50:02.019213      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:50:03.019404      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:50:04.019522      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:50:05.019793      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:50:06.020763      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:50:07.020849      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:50:08.021028      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:50:09.021316      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:50:10.021179      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:50:11.021255      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:50:12.021295      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:50:13.021479      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:50:14.021641      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:50:15.021819      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:50:16.021952      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:50:17.022120      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:50:18.022706      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:50:19.022824      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:50:20.022927      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:50:21.023108      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:50:22.023219      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:50:23.024135      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:50:24.024991      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:50:25.025085      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:50:26.025182      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:50:27.025276      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:50:28.025704      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:50:29.025800      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:50:30.025922      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:50:31.026798      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:50:32.026828      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:50:33.026990      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:50:34.027078      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:50:35.027171      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:50:36.027668      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:50:37.028207      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:50:38.028722      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:50:39.028910      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:50:40.029002      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:50:41.029604      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:50:42.030350      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:50:43.030455      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:50:44.030615      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:50:45.030789      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:50:46.030921      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:50:47.031059      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:50:48.031193      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:50:49.031385      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:50:50.032127      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:50:51.032334      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:50:52.033373      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:50:53.033490      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:50:54.033610      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:50:55.033787      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:50:56.034649      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:50:57.034727      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:50:58.035775      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:50:59.035872      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:51:00.036838      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:51:01.037785      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:51:02.037858      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:51:03.038795      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:51:04.039070      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:51:05.039191      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:51:06.039323      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:51:07.040402      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:51:08.040898      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:51:09.041099      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:51:10.041792      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:51:11.042789      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:51:12.043305      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-cf9553e0-67f4-4b2f-bb8b-972bd484e063 off the node ip-172-31-33-202 @ 09/04/25 15:51:12.515
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-cf9553e0-67f4-4b2f-bb8b-972bd484e063 @ 09/04/25 15:51:12.525
  I0904 15:51:12.531387 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-4780" for this suite. @ 09/04/25 15:51:12.537
• [304.202 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:297
  STEP: Creating a kubernetes client @ 09/04/25 15:51:12.542
  I0904 15:51:12.542294 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename webhook @ 09/04/25 15:51:12.542
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:51:12.554
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:51:12.556
  STEP: Setting up server cert @ 09/04/25 15:51:12.574
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/04/25 15:51:12.917
  STEP: Deploying the webhook pod @ 09/04/25 15:51:12.921
  STEP: Wait for the deployment to be ready @ 09/04/25 15:51:12.931
  I0904 15:51:12.940034 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0904 15:51:13.044224      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:51:14.045032      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/04/25 15:51:14.949
  STEP: Verifying the service has paired with the endpoint @ 09/04/25 15:51:14.958
  E0904 15:51:15.045406      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:51:15.958317 23 util.go:419] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 09/04/25 15:51:15.963
  STEP: Creating a custom resource definition that should be denied by the webhook @ 09/04/25 15:51:15.977
  I0904 15:51:15.977132 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  I0904 15:51:16.024142 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5086" for this suite. @ 09/04/25 15:51:16.031
  STEP: Destroying namespace "webhook-markers-6655" for this suite. @ 09/04/25 15:51:16.038
• [3.502 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 09/04/25 15:51:16.044
  I0904 15:51:16.044382 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename projected @ 09/04/25 15:51:16.044
  E0904 15:51:16.046212      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:51:16.056
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:51:16.058
  STEP: Creating secret with name projected-secret-test-d6f544c1-efcf-42ee-9d48-71d9743b070f @ 09/04/25 15:51:16.06
  STEP: Creating a pod to test consume secrets @ 09/04/25 15:51:16.065
  E0904 15:51:17.046810      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:51:18.046879      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/25 15:51:18.084
  I0904 15:51:18.086238 23 output.go:207] Trying to get logs from node ip-172-31-18-79 pod pod-projected-secrets-b162586c-72f3-4944-a882-de5cd3ff89a5 container secret-volume-test: <nil>
  STEP: delete the pod @ 09/04/25 15:51:18.098
  I0904 15:51:18.113851 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8205" for this suite. @ 09/04/25 15:51:18.116
• [2.081 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:352
  STEP: Creating a kubernetes client @ 09/04/25 15:51:18.125
  I0904 15:51:18.125697 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename dns @ 09/04/25 15:51:18.126
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:51:18.132
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:51:18.134
  STEP: Creating a test externalName service @ 09/04/25 15:51:18.136
  STEP: Running these commands on agnhost: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-6569.svc.cluster.local CNAME > /results/agnhost_udp@dns-test-service-3.dns-6569.svc.cluster.local; sleep 1; done
   @ 09/04/25 15:51:18.141
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-6569.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-6569.svc.cluster.local; sleep 1; done
   @ 09/04/25 15:51:18.141
  STEP: creating a pod to probe DNS @ 09/04/25 15:51:18.141
  STEP: submitting the pod to kubernetes @ 09/04/25 15:51:18.141
  E0904 15:51:19.047012      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:51:20.047112      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/04/25 15:51:20.161
  STEP: looking for the results for each expected name from probers @ 09/04/25 15:51:20.162
  I0904 15:51:20.174022 23 dns_common.go:571] DNS probes using dns-test-b3e2c161-ae20-4ce0-8080-ad57b78d55b3 succeeded

  STEP: changing the externalName to bar.example.com @ 09/04/25 15:51:20.174
  STEP: Running these commands on agnhost: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-6569.svc.cluster.local CNAME > /results/agnhost_udp@dns-test-service-3.dns-6569.svc.cluster.local; sleep 1; done
   @ 09/04/25 15:51:20.181
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-6569.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-6569.svc.cluster.local; sleep 1; done
   @ 09/04/25 15:51:20.181
  STEP: creating a second pod to probe DNS @ 09/04/25 15:51:20.181
  STEP: submitting the pod to kubernetes @ 09/04/25 15:51:20.181
  E0904 15:51:21.047739      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:51:22.047841      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/04/25 15:51:22.194
  STEP: looking for the results for each expected name from probers @ 09/04/25 15:51:22.199
  I0904 15:51:22.202426 23 dns_common.go:499] File agnhost_udp@dns-test-service-3.dns-6569.svc.cluster.local from pod  dns-6569/dns-test-3a4c0371-a3f2-4b80-ae02-f00d66691c7c contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0904 15:51:22.205141 23 dns_common.go:499] File jessie_udp@dns-test-service-3.dns-6569.svc.cluster.local from pod  dns-6569/dns-test-3a4c0371-a3f2-4b80-ae02-f00d66691c7c contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0904 15:51:22.205174 23 dns_common.go:506] Lookups using dns-6569/dns-test-3a4c0371-a3f2-4b80-ae02-f00d66691c7c failed for: [agnhost_udp@dns-test-service-3.dns-6569.svc.cluster.local jessie_udp@dns-test-service-3.dns-6569.svc.cluster.local]

  I0904 15:51:22.212882 23 dns_common.go:514] Pod client logs for webserver: 
  I0904 15:51:22.218159 23 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0904 15:51:22.220762 23 dns_common.go:514] Pod client logs for jessie-querier: 
  E0904 15:51:23.048817      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:51:24.048915      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:51:25.049070      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:51:26.049271      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:51:27.049389      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:51:27.204687 23 dns_common.go:571] DNS probes using dns-test-3a4c0371-a3f2-4b80-ae02-f00d66691c7c succeeded

  STEP: changing the service to type=ClusterIP @ 09/04/25 15:51:27.204
  I0904 15:51:27.213284      23 warnings.go:110] "Warning: spec.externalName is ignored when spec.type is not \"ExternalName\""
  STEP: Running these commands on agnhost: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-6569.svc.cluster.local A > /results/agnhost_udp@dns-test-service-3.dns-6569.svc.cluster.local; sleep 1; done
   @ 09/04/25 15:51:27.213
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-6569.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-6569.svc.cluster.local; sleep 1; done
   @ 09/04/25 15:51:27.213
  STEP: creating a third pod to probe DNS @ 09/04/25 15:51:27.213
  STEP: submitting the pod to kubernetes @ 09/04/25 15:51:27.217
  E0904 15:51:28.049564      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:51:29.049681      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/04/25 15:51:29.232
  STEP: looking for the results for each expected name from probers @ 09/04/25 15:51:29.236
  I0904 15:51:29.245080 23 dns_common.go:571] DNS probes using dns-test-3c06e08a-47de-4ce0-b59e-ef8e5a74fff3 succeeded

  STEP: deleting the pod @ 09/04/25 15:51:29.245
  STEP: deleting the pod @ 09/04/25 15:51:29.256
  STEP: deleting the pod @ 09/04/25 15:51:29.278
  STEP: deleting the test externalName service @ 09/04/25 15:51:29.291
  I0904 15:51:29.309230 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-6569" for this suite. @ 09/04/25 15:51:29.314
• [11.193 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1064
  STEP: Creating a kubernetes client @ 09/04/25 15:51:29.318
  I0904 15:51:29.318965 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename job @ 09/04/25 15:51:29.319
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:51:29.329
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:51:29.331
  STEP: Creating a job @ 09/04/25 15:51:29.333
  STEP: Ensure pods equal to parallelism count is attached to the job @ 09/04/25 15:51:29.341
  E0904 15:51:30.050577      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:51:31.050723      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: patching /status @ 09/04/25 15:51:31.349
  STEP: updating /status @ 09/04/25 15:51:31.354
  STEP: get /status @ 09/04/25 15:51:31.362
  I0904 15:51:31.364733 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-5075" for this suite. @ 09/04/25 15:51:31.37
• [2.057 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 09/04/25 15:51:31.376
  I0904 15:51:31.376541 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename secrets @ 09/04/25 15:51:31.377
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:51:31.409
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:51:31.412
  STEP: Creating secret with name secret-test-map-4c9a36c2-ed54-4f82-9a9f-80c28bbeb537 @ 09/04/25 15:51:31.414
  STEP: Creating a pod to test consume secrets @ 09/04/25 15:51:31.421
  E0904 15:51:32.050844      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:51:33.050940      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:51:34.051978      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:51:35.052092      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/25 15:51:35.441
  I0904 15:51:35.446611 23 output.go:207] Trying to get logs from node ip-172-31-18-79 pod pod-secrets-152bfba1-400f-49d9-9049-3d461a6c8f09 container secret-volume-test: <nil>
  STEP: delete the pod @ 09/04/25 15:51:35.45
  I0904 15:51:35.463151 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2948" for this suite. @ 09/04/25 15:51:35.469
• [4.099 seconds]
------------------------------
SSS
------------------------------
[sig-network] IngressClass API should support creating IngressClass API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingressclass.go:268
  STEP: Creating a kubernetes client @ 09/04/25 15:51:35.475
  I0904 15:51:35.475738 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename ingressclass @ 09/04/25 15:51:35.476
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:51:35.489
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:51:35.49
  STEP: getting /apis @ 09/04/25 15:51:35.492
  STEP: getting /apis/networking.k8s.io @ 09/04/25 15:51:35.494
  STEP: getting /apis/networking.k8s.iov1 @ 09/04/25 15:51:35.494
  STEP: creating @ 09/04/25 15:51:35.495
  STEP: getting @ 09/04/25 15:51:35.507
  STEP: listing @ 09/04/25 15:51:35.511
  STEP: watching @ 09/04/25 15:51:35.513
  I0904 15:51:35.513627 23 ingressclass.go:348] starting watch
  STEP: patching @ 09/04/25 15:51:35.514
  STEP: updating @ 09/04/25 15:51:35.517
  I0904 15:51:35.522169 23 ingressclass.go:364] waiting for watch events with expected annotations
  I0904 15:51:35.522197 23 ingressclass.go:377] saw patched and updated annotations
  STEP: deleting @ 09/04/25 15:51:35.522
  STEP: deleting a collection @ 09/04/25 15:51:35.531
  I0904 15:51:35.547133 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-3359" for this suite. @ 09/04/25 15:51:35.57
• [0.102 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:95
  STEP: Creating a kubernetes client @ 09/04/25 15:51:35.577
  I0904 15:51:35.577520 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename var-expansion @ 09/04/25 15:51:35.577
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:51:35.588
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:51:35.589
  STEP: Creating a pod to test substitution in container's args @ 09/04/25 15:51:35.591
  E0904 15:51:36.057410      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:51:37.056801      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:51:38.056906      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:51:39.056993      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/25 15:51:39.614
  I0904 15:51:39.619811 23 output.go:207] Trying to get logs from node ip-172-31-18-79 pod var-expansion-a9201399-f446-40d4-950d-53028d07b7a0 container dapi-container: <nil>
  STEP: delete the pod @ 09/04/25 15:51:39.624
  I0904 15:51:39.636751 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-6603" for this suite. @ 09/04/25 15:51:39.641
• [4.072 seconds]
------------------------------
SSSS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1826
  STEP: Creating a kubernetes client @ 09/04/25 15:51:39.65
  I0904 15:51:39.650073 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename kubectl @ 09/04/25 15:51:39.65
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:51:39.661
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:51:39.663
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 09/04/25 15:51:39.664
  I0904 15:51:39.664556 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=kubectl-1171 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I0904 15:51:39.705908 23 builder.go:156] stderr: ""
  I0904 15:51:39.705928 23 builder.go:157] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 09/04/25 15:51:39.705
  E0904 15:51:40.057533      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:51:41.057754      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:51:42.057915      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:51:43.058037      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:51:44.058179      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 09/04/25 15:51:44.757
  I0904 15:51:44.757979 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=kubectl-1171 get pod e2e-test-httpd-pod -o json'
  I0904 15:51:44.801133 23 builder.go:156] stderr: ""
  I0904 15:51:44.801219 23 builder.go:157] stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"creationTimestamp\": \"2025-09-04T15:51:39Z\",\n        \"generation\": 1,\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-1171\",\n        \"resourceVersion\": \"40961\",\n        \"uid\": \"11a85ee8-cda4-48ca-8867-38de1f84b759\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-5jqhg\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"ip-172-31-33-202\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-5jqhg\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-09-04T15:51:41Z\",\n                \"observedGeneration\": 1,\n                \"status\": \"True\",\n                \"type\": \"PodReadyToStartContainers\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-09-04T15:51:39Z\",\n                \"observedGeneration\": 1,\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-09-04T15:51:41Z\",\n                \"observedGeneration\": 1,\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-09-04T15:51:41Z\",\n                \"observedGeneration\": 1,\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2025-09-04T15:51:39Z\",\n                \"observedGeneration\": 1,\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://6c0b8cecdc32c4ef6d7963624c77a95b866debe3db4269a56421dd99b4cfce53\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"resources\": {},\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2025-09-04T15:51:40Z\"\n                    }\n                },\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-5jqhg\",\n                        \"readOnly\": true,\n                        \"recursiveReadOnly\": \"Disabled\"\n                    }\n                ]\n            }\n        ],\n        \"hostIP\": \"172.31.33.202\",\n        \"hostIPs\": [\n            {\n                \"ip\": \"172.31.33.202\"\n            }\n        ],\n        \"observedGeneration\": 1,\n        \"phase\": \"Running\",\n        \"podIP\": \"192.168.109.86\",\n        \"podIPs\": [\n            {\n                \"ip\": \"192.168.109.86\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2025-09-04T15:51:39Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 09/04/25 15:51:44.801
  I0904 15:51:44.801368 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=kubectl-1171 replace -f -'
  I0904 15:51:44.880948 23 builder.go:156] stderr: ""
  I0904 15:51:44.881037 23 builder.go:157] stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.37.0-1 @ 09/04/25 15:51:44.881
  I0904 15:51:44.883268 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=kubectl-1171 delete pods e2e-test-httpd-pod'
  E0904 15:51:45.058813      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:51:46.058972      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:51:46.226722 23 builder.go:156] stderr: ""
  I0904 15:51:46.226761 23 builder.go:157] stdout: "pod \"e2e-test-httpd-pod\" deleted from kubectl-1171 namespace\n"
  I0904 15:51:46.226928 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1171" for this suite. @ 09/04/25 15:51:46.231
• [6.591 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:565
  STEP: Creating a kubernetes client @ 09/04/25 15:51:46.241
  I0904 15:51:46.241043 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename webhook @ 09/04/25 15:51:46.241
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:51:46.249
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:51:46.251
  STEP: Setting up server cert @ 09/04/25 15:51:46.269
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/04/25 15:51:46.439
  STEP: Deploying the webhook pod @ 09/04/25 15:51:46.445
  STEP: Wait for the deployment to be ready @ 09/04/25 15:51:46.456
  I0904 15:51:46.465128 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0904 15:51:47.060004      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:51:48.060241      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/04/25 15:51:48.475
  STEP: Verifying the service has paired with the endpoint @ 09/04/25 15:51:48.484
  E0904 15:51:49.061117      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:51:49.484435 23 util.go:419] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 09/04/25 15:51:49.548
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/04/25 15:51:49.573
  STEP: Deleting the collection of validation webhooks @ 09/04/25 15:51:49.594
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/04/25 15:51:49.643
  I0904 15:51:49.683156 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5" for this suite. @ 09/04/25 15:51:49.686
  STEP: Destroying namespace "webhook-markers-8714" for this suite. @ 09/04/25 15:51:49.693
• [3.460 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:645
  STEP: Creating a kubernetes client @ 09/04/25 15:51:49.701
  I0904 15:51:49.701060 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename security-context-test @ 09/04/25 15:51:49.701
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:51:49.71
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:51:49.712
  E0904 15:51:50.061824      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:51:51.061964      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:51:52.062889      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:51:53.063005      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:51:53.755226 23 security_context.go:652] Got logs for pod "busybox-privileged-false-96976a16-fc04-4b60-a58e-efec56cf364f": "ip: RTNETLINK answers: Operation not permitted\n"
  I0904 15:51:53.755344 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-536" for this suite. @ 09/04/25 15:51:53.759
• [4.065 seconds]
------------------------------
SS
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2289
  STEP: Creating a kubernetes client @ 09/04/25 15:51:53.766
  I0904 15:51:53.766524 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename services @ 09/04/25 15:51:53.767
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:51:53.777
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:51:53.779
  STEP: creating service in namespace services-3266 @ 09/04/25 15:51:53.78
  STEP: creating service affinity-nodeport-transition in namespace services-3266 @ 09/04/25 15:51:53.78
  I0904 15:51:53.808659 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0904 15:51:54.063893      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:51:55.064819      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:51:55.823348 23 resource.go:344] Creating new exec pod
  E0904 15:51:56.064899      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:51:57.064985      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:51:57.855160 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=services-3266 exec execpod-affinityxswlc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  I0904 15:51:57.931876 23 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition (10.152.183.212) 80 port [tcp/http] succeeded!\n"
  I0904 15:51:57.931933 23 builder.go:157] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0904 15:51:57.931995 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=services-3266 exec execpod-affinityxswlc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.212 80'
  I0904 15:51:58.001986 23 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.212 80\nConnection to 10.152.183.212 80 port [tcp/http] succeeded!\n"
  I0904 15:51:58.002047 23 builder.go:157] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0904 15:51:58.002096 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=services-3266 exec execpod-affinityxswlc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.33.202 31690'
  E0904 15:51:58.065374      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:51:58.070436 23 builder.go:156] stderr: "+ + echo hostName\nnc -v -t -w 2 172.31.33.202 31690\nConnection to 172.31.33.202 31690 port [tcp/*] succeeded!\n"
  I0904 15:51:58.070466 23 builder.go:157] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0904 15:51:58.070507 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=services-3266 exec execpod-affinityxswlc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.18.79 31690'
  I0904 15:51:58.142771 23 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.18.79 31690\nConnection to 172.31.18.79 31690 port [tcp/*] succeeded!\n"
  I0904 15:51:58.142797 23 builder.go:157] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0904 15:51:58.152232 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=services-3266 exec execpod-affinityxswlc -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://172.31.18.79:31690/ ; done'
  I0904 15:51:58.317344 23 builder.go:156] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.18.79:31690/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.18.79:31690/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.18.79:31690/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.18.79:31690/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.18.79:31690/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.18.79:31690/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.18.79:31690/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.18.79:31690/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.18.79:31690/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.18.79:31690/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.18.79:31690/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.18.79:31690/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.18.79:31690/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.18.79:31690/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.18.79:31690/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.18.79:31690/\n"
  I0904 15:51:58.317432 23 builder.go:157] stdout: "\naffinity-nodeport-transition-5794c6cd75-fvkhc\naffinity-nodeport-transition-5794c6cd75-c4zhs\naffinity-nodeport-transition-5794c6cd75-4czc7\naffinity-nodeport-transition-5794c6cd75-4czc7\naffinity-nodeport-transition-5794c6cd75-c4zhs\naffinity-nodeport-transition-5794c6cd75-4czc7\naffinity-nodeport-transition-5794c6cd75-4czc7\naffinity-nodeport-transition-5794c6cd75-4czc7\naffinity-nodeport-transition-5794c6cd75-fvkhc\naffinity-nodeport-transition-5794c6cd75-c4zhs\naffinity-nodeport-transition-5794c6cd75-4czc7\naffinity-nodeport-transition-5794c6cd75-c4zhs\naffinity-nodeport-transition-5794c6cd75-fvkhc\naffinity-nodeport-transition-5794c6cd75-c4zhs\naffinity-nodeport-transition-5794c6cd75-4czc7\naffinity-nodeport-transition-5794c6cd75-fvkhc"
  I0904 15:51:58.317445 23 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-fvkhc
  I0904 15:51:58.317453 23 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-c4zhs
  I0904 15:51:58.317461 23 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-4czc7
  I0904 15:51:58.317466 23 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-4czc7
  I0904 15:51:58.317471 23 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-c4zhs
  I0904 15:51:58.317476 23 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-4czc7
  I0904 15:51:58.317481 23 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-4czc7
  I0904 15:51:58.317486 23 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-4czc7
  I0904 15:51:58.317490 23 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-fvkhc
  I0904 15:51:58.317495 23 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-c4zhs
  I0904 15:51:58.317499 23 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-4czc7
  I0904 15:51:58.317504 23 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-c4zhs
  I0904 15:51:58.317509 23 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-fvkhc
  I0904 15:51:58.317514 23 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-c4zhs
  I0904 15:51:58.317519 23 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-4czc7
  I0904 15:51:58.317524 23 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-fvkhc
  I0904 15:51:58.325721 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=services-3266 exec execpod-affinityxswlc -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://172.31.18.79:31690/ ; done'
  I0904 15:51:58.478933 23 builder.go:156] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.18.79:31690/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.18.79:31690/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.18.79:31690/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.18.79:31690/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.18.79:31690/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.18.79:31690/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.18.79:31690/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.18.79:31690/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.18.79:31690/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.18.79:31690/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.18.79:31690/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.18.79:31690/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.18.79:31690/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.18.79:31690/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.18.79:31690/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.18.79:31690/\n"
  I0904 15:51:58.478967 23 builder.go:157] stdout: "\naffinity-nodeport-transition-5794c6cd75-4czc7\naffinity-nodeport-transition-5794c6cd75-fvkhc\naffinity-nodeport-transition-5794c6cd75-c4zhs\naffinity-nodeport-transition-5794c6cd75-fvkhc\naffinity-nodeport-transition-5794c6cd75-c4zhs\naffinity-nodeport-transition-5794c6cd75-c4zhs\naffinity-nodeport-transition-5794c6cd75-c4zhs\naffinity-nodeport-transition-5794c6cd75-fvkhc\naffinity-nodeport-transition-5794c6cd75-4czc7\naffinity-nodeport-transition-5794c6cd75-fvkhc\naffinity-nodeport-transition-5794c6cd75-fvkhc\naffinity-nodeport-transition-5794c6cd75-fvkhc\naffinity-nodeport-transition-5794c6cd75-fvkhc\naffinity-nodeport-transition-5794c6cd75-fvkhc\naffinity-nodeport-transition-5794c6cd75-4czc7\naffinity-nodeport-transition-5794c6cd75-c4zhs"
  I0904 15:51:58.478978 23 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-4czc7
  I0904 15:51:58.478989 23 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-fvkhc
  I0904 15:51:58.479039 23 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-c4zhs
  I0904 15:51:58.479044 23 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-fvkhc
  I0904 15:51:58.479049 23 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-c4zhs
  I0904 15:51:58.479054 23 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-c4zhs
  I0904 15:51:58.479058 23 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-c4zhs
  I0904 15:51:58.479065 23 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-fvkhc
  I0904 15:51:58.479072 23 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-4czc7
  I0904 15:51:58.479076 23 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-fvkhc
  I0904 15:51:58.479081 23 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-fvkhc
  I0904 15:51:58.479127 23 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-fvkhc
  I0904 15:51:58.479132 23 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-fvkhc
  I0904 15:51:58.479137 23 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-fvkhc
  I0904 15:51:58.479142 23 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-4czc7
  I0904 15:51:58.479146 23 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-c4zhs
  E0904 15:51:59.065736      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:52:00.065814      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:52:01.065944      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:52:02.066025      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:52:03.066124      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:52:04.066234      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:52:05.066837      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:52:06.067042      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:52:07.067122      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:52:08.067784      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:52:09.068075      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:52:10.068087      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:52:11.068260      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:52:12.068319      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:52:13.068500      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:52:14.068723      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:52:15.068911      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:52:16.069799      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:52:17.069952      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:52:18.071010      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:52:19.071143      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:52:20.071327      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:52:21.071502      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:52:22.072385      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:52:23.072570      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:52:24.072784      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:52:25.072907      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:52:26.073102      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:52:27.073250      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:52:28.073433      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:52:28.479318 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=services-3266 exec execpod-affinityxswlc -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 --max-time 60 http://172.31.18.79:31690/ ; done'
  I0904 15:52:28.623287 23 builder.go:156] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.18.79:31690/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.18.79:31690/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.18.79:31690/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.18.79:31690/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.18.79:31690/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.18.79:31690/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.18.79:31690/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.18.79:31690/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.18.79:31690/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.18.79:31690/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.18.79:31690/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.18.79:31690/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.18.79:31690/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.18.79:31690/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.18.79:31690/\n+ echo\n+ curl -q -s --connect-timeout 2 --max-time 60 http://172.31.18.79:31690/\n"
  I0904 15:52:28.623344 23 builder.go:157] stdout: "\naffinity-nodeport-transition-5794c6cd75-c4zhs\naffinity-nodeport-transition-5794c6cd75-c4zhs\naffinity-nodeport-transition-5794c6cd75-c4zhs\naffinity-nodeport-transition-5794c6cd75-c4zhs\naffinity-nodeport-transition-5794c6cd75-c4zhs\naffinity-nodeport-transition-5794c6cd75-c4zhs\naffinity-nodeport-transition-5794c6cd75-c4zhs\naffinity-nodeport-transition-5794c6cd75-c4zhs\naffinity-nodeport-transition-5794c6cd75-c4zhs\naffinity-nodeport-transition-5794c6cd75-c4zhs\naffinity-nodeport-transition-5794c6cd75-c4zhs\naffinity-nodeport-transition-5794c6cd75-c4zhs\naffinity-nodeport-transition-5794c6cd75-c4zhs\naffinity-nodeport-transition-5794c6cd75-c4zhs\naffinity-nodeport-transition-5794c6cd75-c4zhs\naffinity-nodeport-transition-5794c6cd75-c4zhs"
  I0904 15:52:28.623358 23 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-c4zhs
  I0904 15:52:28.623365 23 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-c4zhs
  I0904 15:52:28.623370 23 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-c4zhs
  I0904 15:52:28.623374 23 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-c4zhs
  I0904 15:52:28.623378 23 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-c4zhs
  I0904 15:52:28.623382 23 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-c4zhs
  I0904 15:52:28.623387 23 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-c4zhs
  I0904 15:52:28.623392 23 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-c4zhs
  I0904 15:52:28.623400 23 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-c4zhs
  I0904 15:52:28.623404 23 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-c4zhs
  I0904 15:52:28.623408 23 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-c4zhs
  I0904 15:52:28.623412 23 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-c4zhs
  I0904 15:52:28.623416 23 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-c4zhs
  I0904 15:52:28.623422 23 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-c4zhs
  I0904 15:52:28.623427 23 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-c4zhs
  I0904 15:52:28.623432 23 service.go:225] Received response from host: affinity-nodeport-transition-5794c6cd75-c4zhs
  I0904 15:52:28.623499 23 service.go:4469] Cleaning up the exec pod
  I0904 15:52:28.665334 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3266" for this suite. @ 09/04/25 15:52:28.676
• [34.922 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:338
  STEP: Creating a kubernetes client @ 09/04/25 15:52:28.688
  I0904 15:52:28.688930 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename statefulset @ 09/04/25 15:52:28.689
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:52:28.699
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:52:28.701
  STEP: Creating service test in namespace statefulset-2991 @ 09/04/25 15:52:28.702
  I0904 15:52:28.706884      23 warnings.go:110] "Warning: spec.SessionAffinity is ignored for headless services"
  STEP: Creating a new StatefulSet @ 09/04/25 15:52:28.706
  I0904 15:52:28.717449 23 wait.go:44] Found 0 stateful pods, waiting for 3
  E0904 15:52:29.073999      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:52:30.074165      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:52:31.074869      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:52:32.075807      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:52:33.075882      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:52:34.075995      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:52:35.076072      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:52:36.076170      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:52:37.077128      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:52:38.077218      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:52:38.719022 23 wait.go:54] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0904 15:52:38.719062 23 wait.go:54] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0904 15:52:38.719068 23 wait.go:54] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 09/04/25 15:52:38.729
  I0904 15:52:38.736699 23 statefulset.go:2504] Updating stateful set ss2
  STEP: Creating a new revision @ 09/04/25 15:52:38.736
  E0904 15:52:39.078161      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:52:40.078252      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:52:41.078432      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:52:42.079410      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:52:43.079544      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:52:44.079736      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:52:45.079863      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:52:46.079973      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:52:47.080107      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:52:48.080277      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Not applying an update when the partition is greater than the number of replicas @ 09/04/25 15:52:48.745
  STEP: Performing a canary update @ 09/04/25 15:52:48.746
  I0904 15:52:48.754705 23 statefulset.go:2504] Updating stateful set ss2
  I0904 15:52:48.763105 23 wait.go:74] Waiting for Pod statefulset-2991/ss2-2 to have revision ss2-67f5b944c4 update revision ss2-59cb84cf99
  E0904 15:52:49.080449      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:52:50.080533      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:52:51.080749      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:52:52.080916      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:52:53.081018      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:52:54.081169      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:52:55.081269      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:52:56.081415      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:52:57.082482      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:52:58.082636      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Restoring Pods to the correct revision when they are deleted @ 09/04/25 15:52:58.766
  I0904 15:52:58.802515 23 wait.go:44] Found 2 stateful pods, waiting for 3
  E0904 15:52:59.082896      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:53:00.083084      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:53:01.083234      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:53:02.083349      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:53:03.083444      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:53:04.083564      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:53:05.083705      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:53:06.084719      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:53:07.084800      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:53:08.084911      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:53:08.801901 23 wait.go:54] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0904 15:53:08.801946 23 wait.go:54] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0904 15:53:08.801953 23 wait.go:54] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 09/04/25 15:53:08.809
  I0904 15:53:08.818777 23 statefulset.go:2504] Updating stateful set ss2
  I0904 15:53:08.827621 23 wait.go:74] Waiting for Pod statefulset-2991/ss2-1 to have revision ss2-67f5b944c4 update revision ss2-59cb84cf99
  E0904 15:53:09.085001      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:53:10.085071      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:53:11.085809      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:53:12.085890      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:53:13.086027      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:53:14.086080      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:53:15.086209      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:53:16.086810      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:53:17.086887      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:53:18.086988      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:53:18.837866 23 statefulset.go:2504] Updating stateful set ss2
  I0904 15:53:18.847929 23 wait.go:56] Waiting for StatefulSet statefulset-2991/ss2 to complete update
  I0904 15:53:18.847960 23 wait.go:63] Waiting for Pod statefulset-2991/ss2-0 to have revision ss2-67f5b944c4 update revision ss2-59cb84cf99
  E0904 15:53:19.087409      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:53:20.087613      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:53:21.087812      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:53:22.087950      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:53:23.088057      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:53:24.088199      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:53:25.088409      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:53:26.088479      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:53:27.088654      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:53:28.088729      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:53:28.847198 23 statefulset.go:136] Deleting all statefulset in ns statefulset-2991
  I0904 15:53:28.849619 23 rest.go:153] Scaling statefulset ss2 to 0
  E0904 15:53:29.089698      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:53:30.089915      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:53:31.090815      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:53:32.090973      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:53:33.091080      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:53:34.091198      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:53:35.091352      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:53:36.091462      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:53:37.091549      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:53:38.091731      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:53:38.861838 23 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0904 15:53:38.864296 23 rest.go:91] Deleting statefulset ss2
  I0904 15:53:38.874964 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-2991" for this suite. @ 09/04/25 15:53:38.878
• [70.197 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:488
  STEP: Creating a kubernetes client @ 09/04/25 15:53:38.886
  I0904 15:53:38.886321 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename gc @ 09/04/25 15:53:38.886
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:53:38.895
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:53:38.897
  STEP: create the deployment @ 09/04/25 15:53:38.899
  I0904 15:53:38.903637      23 warnings.go:110] "Warning: metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]"
  STEP: Wait for the Deployment to create new ReplicaSet @ 09/04/25 15:53:38.903
  E0904 15:53:39.092328      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: delete the deployment @ 09/04/25 15:53:39.407
  STEP: wait for all rs to be garbage collected @ 09/04/25 15:53:39.415
  STEP: expected 0 pods, got 2 pods @ 09/04/25 15:53:39.432
  STEP: Gathering metrics @ 09/04/25 15:53:39.927
  W0904 15:53:39.929425      23 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0904 15:53:39.929454 23 garbage_collector.go:273] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0904 15:53:39.929636 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-3000" for this suite. @ 09/04/25 15:53:39.935
• [1.056 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 09/04/25 15:53:39.942
  I0904 15:53:39.942561 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename secrets @ 09/04/25 15:53:39.943
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:53:39.952
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:53:39.954
  STEP: Creating secret with name s-test-opt-del-4d20461d-b7a0-4b5e-bf69-886d9583d1b8 @ 09/04/25 15:53:40.036
  STEP: Creating secret with name s-test-opt-upd-f425fb9b-97c3-4e08-aa95-445c284079df @ 09/04/25 15:53:40.042
  STEP: Creating the pod @ 09/04/25 15:53:40.047
  E0904 15:53:40.093026      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:53:41.092807      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:53:42.092812      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-4d20461d-b7a0-4b5e-bf69-886d9583d1b8 @ 09/04/25 15:53:42.098
  STEP: Updating secret s-test-opt-upd-f425fb9b-97c3-4e08-aa95-445c284079df @ 09/04/25 15:53:42.106
  STEP: Creating secret with name s-test-opt-create-1a8478ce-c419-49af-b275-568f2c2fb760 @ 09/04/25 15:53:42.11
  STEP: waiting to observe update in volume @ 09/04/25 15:53:42.115
  E0904 15:53:43.093302      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:53:44.093442      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:53:45.093654      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:53:46.093871      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:53:47.093984      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:53:48.094072      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:53:49.094718      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:53:50.094854      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:53:51.095821      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:53:52.095891      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:53:53.096785      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:53:54.096926      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:53:55.097018      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:53:56.097089      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:53:57.098035      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:53:58.098175      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:53:59.098305      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:54:00.098827      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:54:01.098855      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:54:02.099009      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:54:03.099123      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:54:04.099198      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:54:05.099389      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:54:06.099499      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:54:07.100287      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:54:08.100891      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:54:09.101180      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:54:10.101274      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:54:11.101879      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:54:12.102820      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:54:13.103372      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:54:14.103646      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:54:15.104028      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:54:16.104139      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:54:17.105086      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:54:18.105812      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:54:19.106804      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:54:20.106958      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:54:21.106998      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:54:22.107787      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:54:23.108188      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:54:24.108240      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:54:25.108336      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:54:26.108452      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:54:27.108800      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:54:28.108909      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:54:29.109575      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:54:30.109790      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:54:31.109955      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:54:32.110073      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:54:33.110194      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:54:34.110284      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:54:35.111159      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:54:36.111278      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:54:37.112086      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:54:38.112179      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:54:39.112265      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:54:40.112477      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:54:41.112516      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:54:42.113502      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:54:43.113968      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:54:44.114908      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:54:45.115820      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:54:46.116788      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:54:47.116901      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:54:48.116983      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:54:49.117075      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:54:50.117192      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:54:50.451301 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9723" for this suite. @ 09/04/25 15:54:50.456
• [70.519 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:916
  STEP: Creating a kubernetes client @ 09/04/25 15:54:50.462
  I0904 15:54:50.462480 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename kubectl @ 09/04/25 15:54:50.462
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:54:50.474
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:54:50.476
  STEP: validating api versions @ 09/04/25 15:54:50.478
  I0904 15:54:50.478503 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=kubectl-6121 api-versions'
  I0904 15:54:50.515786 23 builder.go:156] stderr: ""
  I0904 15:54:50.515818 23 builder.go:157] stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1\nmetrics.k8s.io/v1beta1\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nresource.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\nv1\n"
  I0904 15:54:50.516183 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6121" for this suite. @ 09/04/25 15:54:50.557
• [0.102 seconds]
------------------------------
S
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:504
  STEP: Creating a kubernetes client @ 09/04/25 15:54:50.564
  I0904 15:54:50.564050 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename configmap @ 09/04/25 15:54:50.564
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:54:50.575
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:54:50.576
  I0904 15:54:50.610416 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-83" for this suite. @ 09/04/25 15:54:50.658
• [0.101 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:359
  STEP: Creating a kubernetes client @ 09/04/25 15:54:50.665
  I0904 15:54:50.665228 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/04/25 15:54:50.665
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:54:50.676
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:54:50.678
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 09/04/25 15:54:50.68
  I0904 15:54:50.680273 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  E0904 15:54:51.117675      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:54:51.893785 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  E0904 15:54:52.118162      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:54:53.118166      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:54:54.119160      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:54:55.119841      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:54:56.119972      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:54:56.811904 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-2140" for this suite. @ 09/04/25 15:54:56.819
• [6.160 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:141
  STEP: Creating a kubernetes client @ 09/04/25 15:54:56.825
  I0904 15:54:56.825099 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename secrets @ 09/04/25 15:54:56.825
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:54:56.838
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:54:56.839
  STEP: Creating projection with secret that has name secret-emptykey-test-1371cace-79ae-4c85-a73c-333f35a1b49f @ 09/04/25 15:54:56.841
  I0904 15:54:56.842329 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4167" for this suite. @ 09/04/25 15:54:56.92
• [0.101 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:140
  STEP: Creating a kubernetes client @ 09/04/25 15:54:56.925
  I0904 15:54:56.925738 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 09/04/25 15:54:56.926
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:54:56.941
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:54:56.943
  STEP: create the container to handle the HTTPGet hook request. @ 09/04/25 15:54:57.02
  E0904 15:54:57.120667      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:54:58.120808      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 09/04/25 15:54:59.042
  E0904 15:54:59.121792      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:55:00.122781      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 09/04/25 15:55:01.056
  STEP: delete the pod with lifecycle hook @ 09/04/25 15:55:01.067
  E0904 15:55:01.122861      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:55:02.123022      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:55:03.080354 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-8573" for this suite. @ 09/04/25 15:55:03.084
• [6.165 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Environment:NotInUserNS] [Conformance] [sig-node, NodeConformance, Environment:NotInUserNS, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:79
  STEP: Creating a kubernetes client @ 09/04/25 15:55:03.09
  I0904 15:55:03.090504 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename sysctl @ 09/04/25 15:55:03.09
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:55:03.101
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:55:03.103
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 09/04/25 15:55:03.104
  STEP: Watching for error events or started pod @ 09/04/25 15:55:03.113
  E0904 15:55:03.123768      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:55:04.123942      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Waiting for pod completion @ 09/04/25 15:55:05.118
  E0904 15:55:05.124102      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:55:06.124260      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:55:07.124236      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Checking that the pod succeeded @ 09/04/25 15:55:07.128
  STEP: Getting logs from the pod @ 09/04/25 15:55:07.128
  STEP: Checking that the sysctl is actually updated @ 09/04/25 15:55:07.134
  I0904 15:55:07.134290 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-7781" for this suite. @ 09/04/25 15:55:07.14
• [4.056 seconds]
------------------------------
SSS
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:197
  STEP: Creating a kubernetes client @ 09/04/25 15:55:07.146
  I0904 15:55:07.146768 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename downward-api @ 09/04/25 15:55:07.147
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:55:07.157
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:55:07.158
  STEP: Creating a pod to test downward api env vars @ 09/04/25 15:55:07.16
  E0904 15:55:08.124774      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:55:09.124833      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:55:10.125753      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:55:11.126805      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/25 15:55:11.177
  I0904 15:55:11.182187 23 output.go:207] Trying to get logs from node ip-172-31-33-202 pod downward-api-e368cb2a-6f6f-4f18-895b-e1157e210da6 container dapi-container: <nil>
  STEP: delete the pod @ 09/04/25 15:55:11.189
  I0904 15:55:11.202761 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1842" for this suite. @ 09/04/25 15:55:11.205
• [4.064 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:917
  STEP: Creating a kubernetes client @ 09/04/25 15:55:11.211
  I0904 15:55:11.211219 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename job @ 09/04/25 15:55:11.211
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:55:11.225
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:55:11.227
  STEP: Creating a job @ 09/04/25 15:55:11.228
  STEP: Ensuring active pods == parallelism @ 09/04/25 15:55:11.234
  E0904 15:55:12.127731      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:55:13.127844      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Orphaning one of the Job's Pods @ 09/04/25 15:55:13.243
  I0904 15:55:13.758077 23 pod_client.go:186] Successfully updated pod "adopt-release-cbqdw"
  STEP: Checking that the Job readopts the Pod @ 09/04/25 15:55:13.758
  E0904 15:55:14.128632      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:55:15.128770      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Removing the labels from the Job's Pod @ 09/04/25 15:55:15.765
  E0904 15:55:16.129330      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:55:16.275487 23 pod_client.go:186] Successfully updated pod "adopt-release-cbqdw"
  STEP: Checking that the Job releases the Pod @ 09/04/25 15:55:16.275
  E0904 15:55:17.130231      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:55:18.130437      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:55:18.284957 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-2934" for this suite. @ 09/04/25 15:55:18.291
• [7.089 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:444
  STEP: Creating a kubernetes client @ 09/04/25 15:55:18.3
  I0904 15:55:18.300952 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename taint-multiple-pods @ 09/04/25 15:55:18.301
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:55:18.311
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:55:18.313
  I0904 15:55:18.315085 23 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0904 15:55:19.130656      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:55:20.130713      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:55:21.131541      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:55:22.131700      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:55:23.131936      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:55:24.132546      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:55:25.133055      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:55:26.133172      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:55:27.133934      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:55:28.134023      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:55:29.134119      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:55:30.134802      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:55:31.134885      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:55:32.134978      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:55:33.135798      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:55:34.135865      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:55:35.136781      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:55:36.136881      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:55:37.137916      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:55:38.137997      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:55:39.138660      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:55:40.138712      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:55:41.139695      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:55:42.139821      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:55:43.140833      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:55:44.141024      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:55:45.141774      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:55:46.141983      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:55:47.142968      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:55:48.143181      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:55:49.143855      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:55:50.143967      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:55:51.144808      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:55:52.144905      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:55:53.145786      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:55:54.145893      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:55:55.146798      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:55:56.146882      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:55:57.147780      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:55:58.147889      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:55:59.148908      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:56:00.148953      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:56:01.149788      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:56:02.149871      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:56:03.150736      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:56:04.150936      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:56:05.150951      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:56:06.151121      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:56:07.152075      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:56:08.152261      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:56:09.152933      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:56:10.153142      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:56:11.153728      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:56:12.154808      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:56:13.155782      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:56:14.156783      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:56:15.157780      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:56:16.158791      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:56:17.158874      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:56:18.159069      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:56:18.315197 23 util.go:390] Waiting for terminating namespaces to be deleted...
  I0904 15:56:18.322207 23 taints.go:144] Starting informer...
  STEP: Starting pods... @ 09/04/25 15:56:18.322
  I0904 15:56:18.537623 23 taints.go:463] Pod1 is running on ip-172-31-33-202. Tainting Node
  E0904 15:56:19.160010      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:56:20.160079      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:56:20.759799 23 taints.go:471] Pod2 is running on ip-172-31-33-202. Tainting Node
  STEP: Trying to apply a taint on the Node @ 09/04/25 15:56:20.759
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 09/04/25 15:56:20.77
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 09/04/25 15:56:20.773
  E0904 15:56:21.160991      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:56:22.161128      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:56:23.161234      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:56:24.161335      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:56:25.161557      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:56:26.162495      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:56:26.720016 23 taints.go:492] Noticed Pod "taint-eviction-b1" gets evicted.
  E0904 15:56:27.162615      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:56:28.162851      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:56:29.162983      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:56:30.163088      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:56:31.163168      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:56:32.163344      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:56:33.163564      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:56:34.163782      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:56:35.164822      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:56:36.164888      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:56:37.164982      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:56:38.165074      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:56:39.165168      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:56:40.165784      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:56:41.166784      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:56:42.166951      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:56:43.167128      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:56:44.167789      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:56:45.167963      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:56:46.168086      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:56:46.748949 23 taints.go:492] Noticed Pod "taint-eviction-b2" gets evicted.
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 09/04/25 15:56:46.757
  I0904 15:56:46.761170 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-multiple-pods-3783" for this suite. @ 09/04/25 15:56:46.767
• [88.476 seconds]
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:87
  STEP: Creating a kubernetes client @ 09/04/25 15:56:46.776
  I0904 15:56:46.776605 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename replication-controller @ 09/04/25 15:56:46.777
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:56:46.791
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:56:46.792
  I0904 15:56:46.794273 23 rc.go:546] Creating quota "condition-test" that allows only two pods to run in the current namespace
  E0904 15:56:47.168661      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 09/04/25 15:56:47.809
  STEP: Checking rc "condition-test" has the desired failure condition set @ 09/04/25 15:56:47.814
  E0904 15:56:48.168979      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 09/04/25 15:56:48.82
  I0904 15:56:48.826867 23 rc.go:733] Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 09/04/25 15:56:48.826
  E0904 15:56:49.169206      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:56:49.834128 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-4029" for this suite. @ 09/04/25 15:56:49.84
• [3.071 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:206
  STEP: Creating a kubernetes client @ 09/04/25 15:56:49.847
  I0904 15:56:49.847549 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename webhook @ 09/04/25 15:56:49.848
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:56:49.858
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:56:49.86
  STEP: Setting up server cert @ 09/04/25 15:56:49.876
  E0904 15:56:50.169672      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/04/25 15:56:50.293
  STEP: Deploying the webhook pod @ 09/04/25 15:56:50.298
  STEP: Wait for the deployment to be ready @ 09/04/25 15:56:50.307
  I0904 15:56:50.316363 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0904 15:56:51.169836      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:56:52.169960      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/04/25 15:56:52.327
  STEP: Verifying the service has paired with the endpoint @ 09/04/25 15:56:52.333
  E0904 15:56:53.170039      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:56:53.334138 23 util.go:419] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 09/04/25 15:56:53.339
  STEP: create a pod @ 09/04/25 15:56:53.354
  E0904 15:56:54.171003      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:56:55.171197      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 09/04/25 15:56:55.373
  I0904 15:56:55.373274 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=webhook-7185 attach --namespace=webhook-7185 to-be-attached-pod -i -c=container1'
  I0904 15:56:55.424378 23 builder.go:145] rc: 1
  I0904 15:56:55.474239 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7185" for this suite. @ 09/04/25 15:56:55.479
  STEP: Destroying namespace "webhook-markers-1058" for this suite. @ 09/04/25 15:56:55.483
• [5.645 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 09/04/25 15:56:55.492
  I0904 15:56:55.492290 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename csiinlinevolumes @ 09/04/25 15:56:55.492
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:56:55.499
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:56:55.501
  STEP: creating @ 09/04/25 15:56:55.502
  STEP: getting @ 09/04/25 15:56:55.52
  STEP: listing in namespace @ 09/04/25 15:56:55.526
  STEP: patching @ 09/04/25 15:56:55.53
  STEP: deleting @ 09/04/25 15:56:55.535
  I0904 15:56:55.550196 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-1582" for this suite. @ 09/04/25 15:56:55.58
• [0.098 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:42
  STEP: Creating a kubernetes client @ 09/04/25 15:56:55.59
  I0904 15:56:55.590267 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename containers @ 09/04/25 15:56:55.59
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:56:55.598
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:56:55.599
  E0904 15:56:56.171667      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:56:57.171810      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:56:57.640518 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-1527" for this suite. @ 09/04/25 15:56:57.644
• [2.062 seconds]
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:191
  STEP: Creating a kubernetes client @ 09/04/25 15:56:57.651
  I0904 15:56:57.651932 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename svcaccounts @ 09/04/25 15:56:57.652
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:56:57.663
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:56:57.665
  I0904 15:56:57.689706 23 service_accounts.go:281] created pod pod-service-account-defaultsa
  I0904 15:56:57.689724 23 service_accounts.go:295] pod pod-service-account-defaultsa service account token volume mount: true
  I0904 15:56:57.694257 23 service_accounts.go:281] created pod pod-service-account-mountsa
  I0904 15:56:57.694271 23 service_accounts.go:295] pod pod-service-account-mountsa service account token volume mount: true
  I0904 15:56:57.700656 23 service_accounts.go:281] created pod pod-service-account-nomountsa
  I0904 15:56:57.700671 23 service_accounts.go:295] pod pod-service-account-nomountsa service account token volume mount: false
  I0904 15:56:57.709278 23 service_accounts.go:281] created pod pod-service-account-defaultsa-mountspec
  I0904 15:56:57.709291 23 service_accounts.go:295] pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  I0904 15:56:57.717715 23 service_accounts.go:281] created pod pod-service-account-mountsa-mountspec
  I0904 15:56:57.717729 23 service_accounts.go:295] pod pod-service-account-mountsa-mountspec service account token volume mount: true
  I0904 15:56:57.724052 23 service_accounts.go:281] created pod pod-service-account-nomountsa-mountspec
  I0904 15:56:57.724068 23 service_accounts.go:295] pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  I0904 15:56:57.737569 23 service_accounts.go:281] created pod pod-service-account-defaultsa-nomountspec
  I0904 15:56:57.737606 23 service_accounts.go:295] pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  I0904 15:56:57.747211 23 service_accounts.go:281] created pod pod-service-account-mountsa-nomountspec
  I0904 15:56:57.747230 23 service_accounts.go:295] pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  I0904 15:56:57.756730 23 service_accounts.go:281] created pod pod-service-account-nomountsa-nomountspec
  I0904 15:56:57.756749 23 service_accounts.go:295] pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  I0904 15:56:57.756903 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-462" for this suite. @ 09/04/25 15:56:57.763
• [0.124 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 09/04/25 15:56:57.776
  I0904 15:56:57.776099 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename deployment @ 09/04/25 15:56:57.776
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:56:57.786
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:56:57.788
  I0904 15:56:57.797970 23 resource.go:64] Pod name cleanup-pod: Found 0 pods out of 1
  E0904 15:56:58.172686      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:56:59.172904      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:57:00.173019      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:57:01.173154      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:57:02.173301      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:57:02.803650 23 resource.go:64] Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/04/25 15:57:02.803
  I0904 15:57:02.803724 23 deployment.go:854] Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 09/04/25 15:57:02.812
  I0904 15:57:02.833206 23 deployment.go:632] Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3188",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1fbca53e-a488-4ac4-98d1-ec74a2327c74",
      ResourceVersion: (string) (len=5) "43123",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892598222,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892598222,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.56",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          HostnameOverride: (*string)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 0,
      Replicas: (int32) 0,
      UpdatedReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) <nil>,
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0904 15:57:02.859438 23 deployment.go:40] New ReplicaSet "test-cleanup-deployment-7bc8b8949b" of Deployment "test-cleanup-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-cleanup-deployment-7bc8b8949b",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3188",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "40424b33-624c-4ea4-964a-d1f39b403ab9",
      ResourceVersion: (string) (len=5) "43136",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892598222,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7bc8b8949b"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "1fbca53e-a488-4ac4-98d1-ec74a2327c74",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892598222,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 31 66 62 63 61 35  33 65 2d 61 34 38 38 2d  |\"1fbca53e-a488-|
              00000120  34 61 63 34 2d 39 38 64  31 2d 65 63 37 34 61 32  |4ac4-98d1-ec74a2|
              00000130  33 32 37 63 37 34 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |327c74\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892598222,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=40) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 7d 7d                           |on":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "7bc8b8949b"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "7bc8b8949b"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.56",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          HostnameOverride: (*string)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0904 15:57:02.861523 23 deployment.go:45] All old ReplicaSets of Deployment "test-cleanup-deployment":
  I0904 15:57:02.861896 23 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3188",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cc155425-bc2a-47ac-a6b6-3dd31fbe495a",
      ResourceVersion: (string) (len=5) "43127",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892598217,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "1fbca53e-a488-4ac4-98d1-ec74a2327c74",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892598217,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=483) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000050  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000060  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000070  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000080  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000090  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              000000a0  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000b0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000c0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000d0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000f0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000100  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000110  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000120  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000130  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000140  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000160  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000170  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000180  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000190  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000001a0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001b0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001c0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001d0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001e0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892598218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892598222,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=103) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000020  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              00000030  22 75 69 64 5c 22 3a 5c  22 31 66 62 63 61 35 33  |"uid\":\"1fbca53|
              00000040  65 2d 61 34 38 38 2d 34  61 63 34 2d 39 38 64 31  |e-a488-4ac4-98d1|
              00000050  2d 65 63 37 34 61 32 33  32 37 63 37 34 5c 22 7d  |-ec74a2327c74\"}|
              00000060  22 3a 7b 7d 7d 7d 7d                              |":{}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          HostnameOverride: (*string)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0904 15:57:02.874338 23 deployment.go:68] Pod "test-cleanup-controller-t7mrl" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=29) "test-cleanup-controller-t7mrl",
      GenerateName: (string) (len=24) "test-cleanup-controller-",
      Namespace: (string) (len=15) "deployment-3188",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2eeeeb44-ae60-4a55-850b-ea98d1de7c0e",
      ResourceVersion: (string) (len=5) "43084",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892598217,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=23) "test-cleanup-controller",
          UID: (types.UID) (len=36) "cc155425-bc2a-47ac-a6b6-3dd31fbe495a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892598217,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=500) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 2c 22 66  |},"f:pod":{}},"f|
              00000050  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000060  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000070  75 69 64 5c 22 3a 5c 22  63 63 31 35 35 34 32 35  |uid\":\"cc155425|
              00000080  2d 62 63 32 61 2d 34 37  61 63 2d 61 36 62 36 2d  |-bc2a-47ac-a6b6-|
              00000090  33 64 64 33 31 66 62 65  34 39 35 61 5c 22 7d 22  |3dd31fbe495a\"}"|
              000000a0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000b0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000c0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              000000d0  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              000000e0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              000000f0  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000100  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000110  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000120  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000130  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000140  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000150  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000160  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              00000170  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              00000180  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              00000190  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001a0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001b0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001c0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              000001d0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              000001e0  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              000001f0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892598218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=853) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6f 62 73 65 72 76  |me":{},"f:observ|
              00000080  65 64 47 65 6e 65 72 61  74 69 6f 6e 22 3a 7b 7d  |edGeneration":{}|
              00000090  2c 22 66 3a 73 74 61 74  75 73 22 3a 7b 7d 2c 22  |,"f:status":{},"|
              000000a0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |f:type":{}},"k:{|
              000000b0  5c 22 74 79 70 65 5c 22  3a 5c 22 49 6e 69 74 69  |\"type\":\"Initi|
              000000c0  61 6c 69 7a 65 64 5c 22  7d 22 3a 7b 22 2e 22 3a  |alized\"}":{".":|
              000000d0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000000f0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              00000100  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000110  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000120  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000130  65 22 3a 7b 7d 7d 2c 22  6b 3a 7b 5c 22 74 79 70  |e":{}},"k:{\"typ|
              00000140  65 5c 22 3a 5c 22 50 6f  64 52 65 61 64 79 54 6f  |e\":\"PodReadyTo|
              00000150  53 74 61 72 74 43 6f 6e  74 61 69 6e 65 72 73 5c  |StartContainers\|
              00000160  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 6c  |"}":{".":{},"f:l|
              00000170  61 73 74 50 72 6f 62 65  54 69 6d 65 22 3a 7b 7d  |astProbeTime":{}|
              00000180  2c 22 66 3a 6c 61 73 74  54 72 61 6e 73 69 74 69  |,"f:lastTransiti|
              00000190  6f 6e 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6f 62  |onTime":{},"f:ob|
              000001a0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001b0  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              000001c0  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000001d0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              000001e0  6f 64 53 63 68 65 64 75  6c 65 64 5c 22 7d 22 3a  |odScheduled\"}":|
              000001f0  7b 22 66 3a 6f 62 73 65  72 76 65 64 47 65 6e 65  |{"f:observedGene|
              00000200  72 61 74 69 6f 6e 22 3a  7b 7d 7d 2c 22 6b 3a 7b  |ration":{}},"k:{|
              00000210  5c 22 74 79 70 65 5c 22  3a 5c 22 52 65 61 64 79  |\"type\":\"Ready|
              00000220  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000230  6c 61 73 74 50 72 6f 62  65 54 69 6d 65 22 3a 7b  |lastProbeTime":{|
              00000240  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000250  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6f  |ionTime":{},"f:o|
              00000260  62 73 65 72 76 65 64 47  65 6e 65 72 61 74 69 6f  |bservedGeneratio|
              00000270  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000280  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000290  7d 2c 22 66 3a 63 6f 6e  74 61 69 6e 65 72 53 74  |},"f:containerSt|
              000002a0  61 74 75 73 65 73 22 3a  7b 7d 2c 22 66 3a 68 6f  |atuses":{},"f:ho|
              000002b0  73 74 49 50 22 3a 7b 7d  2c 22 66 3a 68 6f 73 74  |stIP":{},"f:host|
              000002c0  49 50 73 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |IPs":{},"f:obser|
              000002d0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002e0  7d 2c 22 66 3a 70 68 61  73 65 22 3a 7b 7d 2c 22  |},"f:phase":{},"|
              000002f0  66 3a 70 6f 64 49 50 22  3a 7b 7d 2c 22 66 3a 70  |f:podIP":{},"f:p|
              00000300  6f 64 49 50 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |odIPs":{".":{},"|
              00000310  6b 3a 7b 5c 22 69 70 5c  22 3a 5c 22 31 39 32 2e  |k:{\"ip\":\"192.|
              00000320  31 36 38 2e 31 38 36 2e  37 31 5c 22 7d 22 3a 7b  |168.186.71\"}":{|
              00000330  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000340  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000350  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rnhc6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rnhc6",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)(<nil>),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-87-111",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892598218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892598217,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892598218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892598218,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892598217,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.87.111",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.87.111"
        }
      },
      PodIP: (string) (len=14) "192.168.186.71",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.186.71"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892598217,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63892598218,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://c081ffca3a076b44d4b0ab5244a7b4b3d9cf3d1a47f14c80449c7c918b46f287",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)({
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          }),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-rnhc6",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0904 15:57:02.877570 23 deployment.go:68] Pod "test-cleanup-deployment-7bc8b8949b-8vvrn" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-cleanup-deployment-7bc8b8949b-8vvrn",
      GenerateName: (string) (len=35) "test-cleanup-deployment-7bc8b8949b-",
      Namespace: (string) (len=15) "deployment-3188",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "31852015-7c8d-42c4-988d-34be15aebcb8",
      ResourceVersion: (string) (len=5) "43135",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892598222,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "7bc8b8949b",
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-cleanup-deployment-7bc8b8949b",
          UID: (types.UID) (len=36) "40424b33-624c-4ea4-964a-d1f39b403ab9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892598222,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 30  34 32 34 62 33 33 2d 36  |d\":\"40424b33-6|
              00000090  32 34 63 2d 34 65 61 34  2d 39 36 34 61 2d 64 31  |24c-4ea4-964a-d1|
              000000a0  66 33 39 62 34 30 33 61  62 39 5c 22 7d 22 3a 7b  |f39b403ab9\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-f7dw8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.56",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-f7dw8",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-18-79",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 0,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 0,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892598222,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0904 15:57:02.879486 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-3188" for this suite. @ 09/04/25 15:57:02.886
• [5.118 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:551
  STEP: Creating a kubernetes client @ 09/04/25 15:57:02.894
  I0904 15:57:02.894576 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename container-probe @ 09/04/25 15:57:02.895
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:57:02.921
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:57:02.931
  STEP: Creating pod test-grpc-c636c425-be3a-4055-99cf-9f04bb6d32fd in namespace container-probe-5065 @ 09/04/25 15:57:02.936
  E0904 15:57:03.173350      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:57:04.173456      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/04/25 15:57:04.955
  I0904 15:57:04.959858 23 container_probe.go:1749] Initial restart count of pod test-grpc-c636c425-be3a-4055-99cf-9f04bb6d32fd is 0
  I0904 15:57:04.962407 23 container_probe.go:1759] Get pod test-grpc-c636c425-be3a-4055-99cf-9f04bb6d32fd in namespace container-probe-5065
  E0904 15:57:05.173673      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:57:06.173755      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:57:06.967331 23 container_probe.go:1759] Get pod test-grpc-c636c425-be3a-4055-99cf-9f04bb6d32fd in namespace container-probe-5065
  E0904 15:57:07.174652      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:57:08.174736      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:57:08.971320 23 container_probe.go:1759] Get pod test-grpc-c636c425-be3a-4055-99cf-9f04bb6d32fd in namespace container-probe-5065
  E0904 15:57:09.175616      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:57:10.175721      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:57:10.974535 23 container_probe.go:1759] Get pod test-grpc-c636c425-be3a-4055-99cf-9f04bb6d32fd in namespace container-probe-5065
  E0904 15:57:11.176768      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:57:12.176876      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:57:12.979974 23 container_probe.go:1759] Get pod test-grpc-c636c425-be3a-4055-99cf-9f04bb6d32fd in namespace container-probe-5065
  E0904 15:57:13.177211      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:57:14.177410      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:57:14.983889 23 container_probe.go:1759] Get pod test-grpc-c636c425-be3a-4055-99cf-9f04bb6d32fd in namespace container-probe-5065
  E0904 15:57:15.178139      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:57:16.178239      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:57:16.986949 23 container_probe.go:1759] Get pod test-grpc-c636c425-be3a-4055-99cf-9f04bb6d32fd in namespace container-probe-5065
  E0904 15:57:17.179259      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:57:18.179461      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:57:18.992790 23 container_probe.go:1759] Get pod test-grpc-c636c425-be3a-4055-99cf-9f04bb6d32fd in namespace container-probe-5065
  E0904 15:57:19.180029      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:57:20.180237      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:57:20.996924 23 container_probe.go:1759] Get pod test-grpc-c636c425-be3a-4055-99cf-9f04bb6d32fd in namespace container-probe-5065
  E0904 15:57:21.181201      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:57:22.181354      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:57:23.000643 23 container_probe.go:1759] Get pod test-grpc-c636c425-be3a-4055-99cf-9f04bb6d32fd in namespace container-probe-5065
  E0904 15:57:23.181911      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:57:24.182073      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:57:25.006236 23 container_probe.go:1759] Get pod test-grpc-c636c425-be3a-4055-99cf-9f04bb6d32fd in namespace container-probe-5065
  E0904 15:57:25.182482      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:57:26.182652      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:57:27.009483 23 container_probe.go:1759] Get pod test-grpc-c636c425-be3a-4055-99cf-9f04bb6d32fd in namespace container-probe-5065
  E0904 15:57:27.182705      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:57:28.182889      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:57:29.015314 23 container_probe.go:1759] Get pod test-grpc-c636c425-be3a-4055-99cf-9f04bb6d32fd in namespace container-probe-5065
  E0904 15:57:29.183649      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:57:30.183775      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:57:31.018973 23 container_probe.go:1759] Get pod test-grpc-c636c425-be3a-4055-99cf-9f04bb6d32fd in namespace container-probe-5065
  E0904 15:57:31.184246      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:57:32.185133      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:57:33.025540 23 container_probe.go:1759] Get pod test-grpc-c636c425-be3a-4055-99cf-9f04bb6d32fd in namespace container-probe-5065
  E0904 15:57:33.185765      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:57:34.185870      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:57:35.028971 23 container_probe.go:1759] Get pod test-grpc-c636c425-be3a-4055-99cf-9f04bb6d32fd in namespace container-probe-5065
  E0904 15:57:35.186171      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:57:36.186309      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:57:37.032129 23 container_probe.go:1759] Get pod test-grpc-c636c425-be3a-4055-99cf-9f04bb6d32fd in namespace container-probe-5065
  E0904 15:57:37.186290      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:57:38.186476      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:57:39.037520 23 container_probe.go:1759] Get pod test-grpc-c636c425-be3a-4055-99cf-9f04bb6d32fd in namespace container-probe-5065
  E0904 15:57:39.186717      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:57:40.186810      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:57:41.043828 23 container_probe.go:1759] Get pod test-grpc-c636c425-be3a-4055-99cf-9f04bb6d32fd in namespace container-probe-5065
  E0904 15:57:41.186909      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:57:42.187042      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:57:43.048004 23 container_probe.go:1759] Get pod test-grpc-c636c425-be3a-4055-99cf-9f04bb6d32fd in namespace container-probe-5065
  E0904 15:57:43.187170      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:57:44.187282      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:57:45.053753 23 container_probe.go:1759] Get pod test-grpc-c636c425-be3a-4055-99cf-9f04bb6d32fd in namespace container-probe-5065
  E0904 15:57:45.187995      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:57:46.188188      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:57:47.056548 23 container_probe.go:1759] Get pod test-grpc-c636c425-be3a-4055-99cf-9f04bb6d32fd in namespace container-probe-5065
  E0904 15:57:47.188839      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:57:48.188981      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:57:49.062208 23 container_probe.go:1759] Get pod test-grpc-c636c425-be3a-4055-99cf-9f04bb6d32fd in namespace container-probe-5065
  E0904 15:57:49.189413      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:57:50.189625      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:57:51.066186 23 container_probe.go:1759] Get pod test-grpc-c636c425-be3a-4055-99cf-9f04bb6d32fd in namespace container-probe-5065
  E0904 15:57:51.190411      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:57:52.190473      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:57:53.069656 23 container_probe.go:1759] Get pod test-grpc-c636c425-be3a-4055-99cf-9f04bb6d32fd in namespace container-probe-5065
  E0904 15:57:53.190881      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:57:54.191039      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:57:55.075947 23 container_probe.go:1759] Get pod test-grpc-c636c425-be3a-4055-99cf-9f04bb6d32fd in namespace container-probe-5065
  E0904 15:57:55.192037      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:57:56.192157      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:57:57.079928 23 container_probe.go:1759] Get pod test-grpc-c636c425-be3a-4055-99cf-9f04bb6d32fd in namespace container-probe-5065
  E0904 15:57:57.193157      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:57:58.193243      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:57:59.088465 23 container_probe.go:1759] Get pod test-grpc-c636c425-be3a-4055-99cf-9f04bb6d32fd in namespace container-probe-5065
  E0904 15:57:59.193382      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:58:00.193494      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:58:01.091934 23 container_probe.go:1759] Get pod test-grpc-c636c425-be3a-4055-99cf-9f04bb6d32fd in namespace container-probe-5065
  E0904 15:58:01.194138      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:58:02.194940      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:58:03.097681 23 container_probe.go:1759] Get pod test-grpc-c636c425-be3a-4055-99cf-9f04bb6d32fd in namespace container-probe-5065
  E0904 15:58:03.195761      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:58:04.196777      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:58:05.100936 23 container_probe.go:1759] Get pod test-grpc-c636c425-be3a-4055-99cf-9f04bb6d32fd in namespace container-probe-5065
  E0904 15:58:05.197076      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:58:06.197234      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:58:07.106523 23 container_probe.go:1759] Get pod test-grpc-c636c425-be3a-4055-99cf-9f04bb6d32fd in namespace container-probe-5065
  E0904 15:58:07.197728      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:58:08.197884      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:58:09.109848 23 container_probe.go:1759] Get pod test-grpc-c636c425-be3a-4055-99cf-9f04bb6d32fd in namespace container-probe-5065
  I0904 15:58:09.109886 23 container_probe.go:1763] Restart count of pod container-probe-5065/test-grpc-c636c425-be3a-4055-99cf-9f04bb6d32fd is now 1 (1m4.150003734s elapsed)
  STEP: deleting the pod @ 09/04/25 15:58:09.109
  I0904 15:58:09.126561 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-5065" for this suite. @ 09/04/25 15:58:09.129
• [66.241 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:54
  STEP: Creating a kubernetes client @ 09/04/25 15:58:09.136
  I0904 15:58:09.136346 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename downward-api @ 09/04/25 15:58:09.136
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:58:09.146
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:58:09.148
  STEP: Creating a pod to test downward API volume plugin @ 09/04/25 15:58:09.149
  E0904 15:58:09.198850      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:58:10.199054      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/25 15:58:11.167
  I0904 15:58:11.169156 23 output.go:207] Trying to get logs from node ip-172-31-33-202 pod downwardapi-volume-13849fb2-108b-4f7a-ab2e-83497eae72df container client-container: <nil>
  STEP: delete the pod @ 09/04/25 15:58:11.178
  I0904 15:58:11.194796 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7178" for this suite. @ 09/04/25 15:58:11.198
  E0904 15:58:11.199212      23 retrywatcher.go:169] "Watch failed" err="context canceled"
• [2.069 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:163
  STEP: Creating a kubernetes client @ 09/04/25 15:58:11.205
  I0904 15:58:11.205155 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename projected @ 09/04/25 15:58:11.205
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:58:11.216
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:58:11.217
  STEP: Creating the pod @ 09/04/25 15:58:11.219
  E0904 15:58:12.199466      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:58:13.199569      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:58:13.757781 23 pod_client.go:186] Successfully updated pod "annotationupdatece828913-67f7-4d82-ba21-f8de3a4ffadc"
  E0904 15:58:14.200383      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:58:15.200583      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:58:16.200745      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:58:17.200907      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:58:17.782158 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6960" for this suite. @ 09/04/25 15:58:17.786
• [6.586 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:71
  STEP: Creating a kubernetes client @ 09/04/25 15:58:17.791
  I0904 15:58:17.791321 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/04/25 15:58:17.791
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:58:17.802
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:58:17.803
  I0904 15:58:17.805788 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  E0904 15:58:18.201793      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 09/04/25 15:58:19.102
  I0904 15:58:19.102267 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=crd-publish-openapi-7466 --namespace=crd-publish-openapi-7466 create -f -'
  I0904 15:58:19.160720 23 builder.go:156] stderr: ""
  I0904 15:58:19.160747 23 builder.go:157] stdout: "e2e-test-crd-publish-openapi-7466-4306-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I0904 15:58:19.160788 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=crd-publish-openapi-7466 --namespace=crd-publish-openapi-7466 delete e2e-test-crd-publish-openapi-7466-4306-crds test-foo'
  E0904 15:58:19.202021      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:58:19.204083 23 builder.go:156] stderr: ""
  I0904 15:58:19.204143 23 builder.go:157] stdout: "e2e-test-crd-publish-openapi-7466-4306-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted from crd-publish-openapi-7466 namespace\n"
  I0904 15:58:19.204184 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=crd-publish-openapi-7466 --namespace=crd-publish-openapi-7466 apply -f -'
  I0904 15:58:19.245911 23 builder.go:156] stderr: ""
  I0904 15:58:19.245961 23 builder.go:157] stdout: "e2e-test-crd-publish-openapi-7466-4306-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I0904 15:58:19.246057 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=crd-publish-openapi-7466 --namespace=crd-publish-openapi-7466 delete e2e-test-crd-publish-openapi-7466-4306-crds test-foo'
  I0904 15:58:19.288306 23 builder.go:156] stderr: ""
  I0904 15:58:19.288330 23 builder.go:157] stdout: "e2e-test-crd-publish-openapi-7466-4306-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted from crd-publish-openapi-7466 namespace\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 09/04/25 15:58:19.288
  I0904 15:58:19.288401 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=crd-publish-openapi-7466 --namespace=crd-publish-openapi-7466 create -f -'
  I0904 15:58:19.321480 23 builder.go:145] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 09/04/25 15:58:19.321
  I0904 15:58:19.321631 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=crd-publish-openapi-7466 --namespace=crd-publish-openapi-7466 create -f -'
  I0904 15:58:19.355746 23 builder.go:145] rc: 1
  I0904 15:58:19.355795 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=crd-publish-openapi-7466 --namespace=crd-publish-openapi-7466 apply -f -'
  I0904 15:58:19.394195 23 builder.go:145] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 09/04/25 15:58:19.394
  I0904 15:58:19.394266 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=crd-publish-openapi-7466 --namespace=crd-publish-openapi-7466 create -f -'
  I0904 15:58:19.428294 23 builder.go:145] rc: 1
  I0904 15:58:19.428337 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=crd-publish-openapi-7466 --namespace=crd-publish-openapi-7466 apply -f -'
  I0904 15:58:19.469659 23 builder.go:145] rc: 1
  STEP: kubectl explain works to explain CR properties @ 09/04/25 15:58:19.469
  I0904 15:58:19.469738 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=crd-publish-openapi-7466 explain e2e-test-crd-publish-openapi-7466-4306-crds'
  I0904 15:58:19.500983 23 builder.go:156] stderr: ""
  I0904 15:58:19.501012 23 builder.go:157] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-7466-4306-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 09/04/25 15:58:19.501
  I0904 15:58:19.501244 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=crd-publish-openapi-7466 explain e2e-test-crd-publish-openapi-7466-4306-crds.metadata'
  I0904 15:58:19.534515 23 builder.go:156] stderr: ""
  I0904 15:58:19.534635 23 builder.go:157] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-7466-4306-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  I0904 15:58:19.534772 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=crd-publish-openapi-7466 explain e2e-test-crd-publish-openapi-7466-4306-crds.spec'
  I0904 15:58:19.566704 23 builder.go:156] stderr: ""
  I0904 15:58:19.566726 23 builder.go:157] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-7466-4306-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  I0904 15:58:19.566787 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=crd-publish-openapi-7466 explain e2e-test-crd-publish-openapi-7466-4306-crds.spec.bars'
  I0904 15:58:19.597912 23 builder.go:156] stderr: ""
  I0904 15:58:19.597945 23 builder.go:157] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-7466-4306-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n  enum: Great, Down\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 09/04/25 15:58:19.598
  I0904 15:58:19.598058 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=crd-publish-openapi-7466 explain e2e-test-crd-publish-openapi-7466-4306-crds.spec.bars2'
  I0904 15:58:19.628951 23 builder.go:145] rc: 1
  E0904 15:58:20.202672      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:58:20.815417 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-7466" for this suite. @ 09/04/25 15:58:20.821
• [3.037 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:105
  STEP: Creating a kubernetes client @ 09/04/25 15:58:20.828
  I0904 15:58:20.828767 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename replication-controller @ 09/04/25 15:58:20.829
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:58:20.843
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:58:20.845
  STEP: Given a ReplicationController is created @ 09/04/25 15:58:20.847
  STEP: When the matched label of one of its pods change @ 09/04/25 15:58:20.854
  I0904 15:58:20.857520 23 resource.go:64] Pod name pod-release: Found 0 pods out of 1
  E0904 15:58:21.202741      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:58:22.202874      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:58:23.202953      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:58:24.203096      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:58:25.203305      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:58:25.860985 23 resource.go:64] Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 09/04/25 15:58:25.871
  E0904 15:58:26.203616      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:58:26.880033 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-6167" for this suite. @ 09/04/25 15:58:26.883
• [6.061 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:218
  STEP: Creating a kubernetes client @ 09/04/25 15:58:26.893
  I0904 15:58:26.893993 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 09/04/25 15:58:26.894
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:58:26.906
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:58:26.908
  STEP: create the container to handle the HTTPGet hook request. @ 09/04/25 15:58:26.983
  E0904 15:58:27.203977      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:58:28.204080      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 09/04/25 15:58:29.006
  E0904 15:58:29.204762      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:58:30.205829      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 09/04/25 15:58:31.028
  E0904 15:58:31.206543      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:58:32.207558      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 09/04/25 15:58:33.044
  I0904 15:58:33.058072 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-9066" for this suite. @ 09/04/25 15:58:33.063
• [6.175 seconds]
------------------------------
[sig-node] Downward API should provide hostIPs as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:121
  STEP: Creating a kubernetes client @ 09/04/25 15:58:33.068
  I0904 15:58:33.068921 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename downward-api @ 09/04/25 15:58:33.069
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:58:33.082
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:58:33.084
  STEP: Creating a pod to test downward api env vars @ 09/04/25 15:58:33.086
  E0904 15:58:33.208558      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:58:34.208741      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/25 15:58:35.105
  I0904 15:58:35.109838 23 output.go:207] Trying to get logs from node ip-172-31-33-202 pod downward-api-65d01e76-a20e-4f52-81b7-e4911708f094 container dapi-container: <nil>
  STEP: delete the pod @ 09/04/25 15:58:35.12
  I0904 15:58:35.138527 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-131" for this suite. @ 09/04/25 15:58:35.142
• [2.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:194
  STEP: Creating a kubernetes client @ 09/04/25 15:58:35.147
  I0904 15:58:35.147047 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename projected @ 09/04/25 15:58:35.147
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:58:35.16
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:58:35.162
  STEP: Creating a pod to test downward API volume plugin @ 09/04/25 15:58:35.164
  E0904 15:58:35.209473      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:58:36.209723      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/25 15:58:37.181
  I0904 15:58:37.183860 23 output.go:207] Trying to get logs from node ip-172-31-33-202 pod downwardapi-volume-2c8632f5-e34d-4a12-b03d-1e634ea4f809 container client-container: <nil>
  STEP: delete the pod @ 09/04/25 15:58:37.19
  I0904 15:58:37.209096 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0904 15:58:37.210079      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Destroying namespace "projected-5967" for this suite. @ 09/04/25 15:58:37.211
• [2.069 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:62
  STEP: Creating a kubernetes client @ 09/04/25 15:58:37.216
  I0904 15:58:37.216014 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename containers @ 09/04/25 15:58:37.216
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:58:37.228
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:58:37.23
  STEP: Creating a pod to test override arguments @ 09/04/25 15:58:37.234
  E0904 15:58:38.210957      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:58:39.211788      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/25 15:58:39.254
  I0904 15:58:39.256671 23 output.go:207] Trying to get logs from node ip-172-31-33-202 pod client-containers-11529552-2de0-4def-9c0b-38bf1232c2be container agnhost-container: <nil>
  STEP: delete the pod @ 09/04/25 15:58:39.263
  I0904 15:58:39.281651 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-3396" for this suite. @ 09/04/25 15:58:39.286
• [2.076 seconds]
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:54
  STEP: Creating a kubernetes client @ 09/04/25 15:58:39.291
  I0904 15:58:39.291915 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename projected @ 09/04/25 15:58:39.292
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:58:39.304
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:58:39.306
  STEP: Creating a pod to test downward API volume plugin @ 09/04/25 15:58:39.309
  E0904 15:58:40.211917      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:58:41.211974      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/25 15:58:41.327
  I0904 15:58:41.329664 23 output.go:207] Trying to get logs from node ip-172-31-33-202 pod downwardapi-volume-52be7b6d-dc7d-47aa-a8b5-8cd2ef513687 container client-container: <nil>
  STEP: delete the pod @ 09/04/25 15:58:41.337
  I0904 15:58:41.353860 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5497" for this suite. @ 09/04/25 15:58:41.36
• [2.080 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 09/04/25 15:58:41.371
  I0904 15:58:41.371730 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename secrets @ 09/04/25 15:58:41.372
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:58:41.39
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:58:41.393
  I0904 15:58:41.466838 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2320" for this suite. @ 09/04/25 15:58:41.479
• [0.115 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:303
  STEP: Creating a kubernetes client @ 09/04/25 15:58:41.487
  I0904 15:58:41.487893 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename aggregateddiscovery @ 09/04/25 15:58:41.488
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:58:41.502
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:58:41.505
  I0904 15:58:41.510006 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  E0904 15:58:42.212305      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:58:43.212460      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:58:44.213370      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:58:44.556016 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-6235" for this suite. @ 09/04/25 15:58:44.559
• [3.077 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:767
  STEP: Creating a kubernetes client @ 09/04/25 15:58:44.565
  I0904 15:58:44.565283 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename statefulset @ 09/04/25 15:58:44.565
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:58:44.576
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:58:44.578
  STEP: Creating service test in namespace statefulset-3078 @ 09/04/25 15:58:44.58
  I0904 15:58:44.585804      23 warnings.go:110] "Warning: spec.SessionAffinity is ignored for headless services"
  STEP: Creating stateful set ss in namespace statefulset-3078 @ 09/04/25 15:58:44.585
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-3078 @ 09/04/25 15:58:44.594
  I0904 15:58:44.601862 23 wait.go:44] Found 0 stateful pods, waiting for 1
  E0904 15:58:45.213511      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:58:46.213579      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:58:47.213768      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:58:48.214301      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:58:49.214336      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:58:50.214950      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:58:51.216008      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:58:52.216106      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:58:53.216787      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:58:54.216953      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:58:54.600228 23 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 09/04/25 15:58:54.6
  I0904 15:58:54.605029 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=statefulset-3078 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0904 15:58:54.689256 23 builder.go:156] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0904 15:58:54.689287 23 builder.go:157] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0904 15:58:54.689295 23 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0904 15:58:54.694220 23 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E0904 15:58:55.217864      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:58:56.218070      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:58:57.218238      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:58:58.218456      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:58:59.218681      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:59:00.218794      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:59:01.218995      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:59:02.219102      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:59:03.219291      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:59:04.219476      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:59:04.695144 23 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0904 15:59:04.695175 23 wait.go:109] Waiting for statefulset status.readyReplicas updated to 0
  I0904 15:59:04.716302 23 resource.go:151] POD   NODE              PHASE    GRACE  CONDITIONS
  I0904 15:59:04.716353 23 resource.go:158] ss-0  ip-172-31-33-202  Running         [{PodReadyToStartContainers 1 True 0001-01-01 00:00:00 +0000 UTC 2025-09-04 15:58:45 +0000 UTC  } {Initialized 1 True 0001-01-01 00:00:00 +0000 UTC 2025-09-04 15:58:44 +0000 UTC  } {Ready 1 False 0001-01-01 00:00:00 +0000 UTC 2025-09-04 15:58:54 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady 1 False 0001-01-01 00:00:00 +0000 UTC 2025-09-04 15:58:54 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled 1 True 0001-01-01 00:00:00 +0000 UTC 2025-09-04 15:58:44 +0000 UTC  }]
  I0904 15:59:04.716363 23 resource.go:158] ss-2                    Pending         []
  I0904 15:59:04.716367 23 resource.go:161] 
  I0904 15:59:04.716371 23 statefulset.go:2410] StatefulSet ss has not reached scale 3, at 2
  E0904 15:59:05.219756      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:59:05.722825 23 statefulset.go:2415] Verifying statefulset ss doesn't scale past 3 for another 8.990871798s
  E0904 15:59:06.220451      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:59:06.728339 23 statefulset.go:2415] Verifying statefulset ss doesn't scale past 3 for another 7.985187864s
  E0904 15:59:07.220736      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:59:07.736631 23 statefulset.go:2415] Verifying statefulset ss doesn't scale past 3 for another 6.978875917s
  E0904 15:59:08.221152      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:59:08.742889 23 statefulset.go:2415] Verifying statefulset ss doesn't scale past 3 for another 5.970491332s
  E0904 15:59:09.221437      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:59:09.748945 23 statefulset.go:2415] Verifying statefulset ss doesn't scale past 3 for another 4.964257536s
  E0904 15:59:10.222491      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:59:10.756961 23 statefulset.go:2415] Verifying statefulset ss doesn't scale past 3 for another 3.95806524s
  E0904 15:59:11.223500      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:59:11.763217 23 statefulset.go:2415] Verifying statefulset ss doesn't scale past 3 for another 2.950143948s
  E0904 15:59:12.223654      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:59:12.769485 23 statefulset.go:2415] Verifying statefulset ss doesn't scale past 3 for another 1.943892073s
  E0904 15:59:13.223756      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:59:13.777003 23 statefulset.go:2415] Verifying statefulset ss doesn't scale past 3 for another 937.784599ms
  E0904 15:59:14.224602      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-3078 @ 09/04/25 15:59:14.777
  I0904 15:59:14.782645 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=statefulset-3078 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0904 15:59:14.859174 23 builder.go:156] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0904 15:59:14.859203 23 builder.go:157] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0904 15:59:14.859211 23 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0904 15:59:14.859253 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=statefulset-3078 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0904 15:59:14.930766 23 builder.go:156] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I0904 15:59:14.930803 23 builder.go:157] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0904 15:59:14.930811 23 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0904 15:59:14.930841 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=statefulset-3078 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0904 15:59:14.997742 23 builder.go:156] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I0904 15:59:14.997770 23 builder.go:157] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0904 15:59:14.997778 23 rest.go:280] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0904 15:59:15.006148 23 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0904 15:59:15.006166 23 wait.go:54] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I0904 15:59:15.006174 23 wait.go:54] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 09/04/25 15:59:15.006
  I0904 15:59:15.009449 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=statefulset-3078 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0904 15:59:15.083341 23 builder.go:156] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0904 15:59:15.083363 23 builder.go:157] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0904 15:59:15.083370 23 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0904 15:59:15.083415 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=statefulset-3078 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0904 15:59:15.151351 23 builder.go:156] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0904 15:59:15.151374 23 builder.go:157] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0904 15:59:15.151382 23 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0904 15:59:15.151409 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=statefulset-3078 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0904 15:59:15.222051 23 builder.go:156] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0904 15:59:15.222072 23 builder.go:157] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0904 15:59:15.222080 23 rest.go:280] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0904 15:59:15.222091 23 wait.go:109] Waiting for statefulset status.readyReplicas updated to 0
  E0904 15:59:15.224987      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:59:15.224991 23 wait.go:122] Waiting for statefulset status.readyReplicas to become 0, currently 3
  E0904 15:59:16.225128      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:59:17.225453      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:59:18.225571      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:59:19.225749      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:59:20.225809      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:59:21.225919      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:59:22.226008      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:59:23.226124      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:59:24.226222      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:59:25.226398      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:59:25.231403 23 wait.go:54] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0904 15:59:25.231429 23 wait.go:54] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I0904 15:59:25.231436 23 wait.go:54] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I0904 15:59:25.249386 23 resource.go:151] POD   NODE              PHASE    GRACE  CONDITIONS
  I0904 15:59:25.249438 23 resource.go:158] ss-0  ip-172-31-33-202  Running         [{PodReadyToStartContainers 1 True 0001-01-01 00:00:00 +0000 UTC 2025-09-04 15:58:45 +0000 UTC  } {Initialized 1 True 0001-01-01 00:00:00 +0000 UTC 2025-09-04 15:58:44 +0000 UTC  } {Ready 1 False 0001-01-01 00:00:00 +0000 UTC 2025-09-04 15:59:15 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady 1 False 0001-01-01 00:00:00 +0000 UTC 2025-09-04 15:59:15 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled 1 True 0001-01-01 00:00:00 +0000 UTC 2025-09-04 15:58:44 +0000 UTC  }]
  I0904 15:59:25.249452 23 resource.go:158] ss-1  ip-172-31-87-111  Running         [{PodReadyToStartContainers 1 True 0001-01-01 00:00:00 +0000 UTC 2025-09-04 15:59:06 +0000 UTC  } {Initialized 1 True 0001-01-01 00:00:00 +0000 UTC 2025-09-04 15:59:04 +0000 UTC  } {Ready 1 False 0001-01-01 00:00:00 +0000 UTC 2025-09-04 15:59:16 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady 1 False 0001-01-01 00:00:00 +0000 UTC 2025-09-04 15:59:16 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled 1 True 0001-01-01 00:00:00 +0000 UTC 2025-09-04 15:59:04 +0000 UTC  }]
  I0904 15:59:25.249686 23 resource.go:158] ss-2  ip-172-31-18-79   Running  30s    [{PodReadyToStartContainers 1 True 0001-01-01 00:00:00 +0000 UTC 2025-09-04 15:59:05 +0000 UTC  } {Initialized 1 True 0001-01-01 00:00:00 +0000 UTC 2025-09-04 15:59:04 +0000 UTC  } {Ready 1 False 0001-01-01 00:00:00 +0000 UTC 2025-09-04 15:59:15 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady 1 False 0001-01-01 00:00:00 +0000 UTC 2025-09-04 15:59:15 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled 1 True 0001-01-01 00:00:00 +0000 UTC 2025-09-04 15:59:04 +0000 UTC  }]
  I0904 15:59:25.249695 23 resource.go:161] 
  I0904 15:59:25.249700 23 statefulset.go:2410] StatefulSet ss has not reached scale 0, at 3
  E0904 15:59:26.226746      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:59:26.257042 23 statefulset.go:2415] Verifying statefulset ss doesn't scale past 0 for another 8.988365664s
  E0904 15:59:27.226880      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:59:27.264346 23 statefulset.go:2415] Verifying statefulset ss doesn't scale past 0 for another 7.981226111s
  E0904 15:59:28.227004      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:59:28.269851 23 statefulset.go:2415] Verifying statefulset ss doesn't scale past 0 for another 6.974134018s
  E0904 15:59:29.227736      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:59:29.275695 23 statefulset.go:2415] Verifying statefulset ss doesn't scale past 0 for another 5.968345837s
  E0904 15:59:30.227941      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:59:30.282953 23 statefulset.go:2415] Verifying statefulset ss doesn't scale past 0 for another 4.963181932s
  E0904 15:59:31.228092      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:59:31.286653 23 statefulset.go:2415] Verifying statefulset ss doesn't scale past 0 for another 3.956071235s
  E0904 15:59:32.228746      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:59:32.293176 23 statefulset.go:2415] Verifying statefulset ss doesn't scale past 0 for another 2.95241099s
  E0904 15:59:33.228860      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:59:33.298425 23 statefulset.go:2415] Verifying statefulset ss doesn't scale past 0 for another 1.945207166s
  E0904 15:59:34.229385      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:59:34.305970 23 statefulset.go:2415] Verifying statefulset ss doesn't scale past 0 for another 939.630084ms
  E0904 15:59:35.230196      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-3078 @ 09/04/25 15:59:35.306
  I0904 15:59:35.312110 23 rest.go:153] Scaling statefulset ss to 0
  I0904 15:59:35.316789 23 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0904 15:59:35.320971 23 statefulset.go:136] Deleting all statefulset in ns statefulset-3078
  I0904 15:59:35.324072 23 rest.go:153] Scaling statefulset ss to 0
  I0904 15:59:35.330404 23 wait.go:159] Waiting for statefulset status.replicas updated to 0
  I0904 15:59:35.334554 23 rest.go:91] Deleting statefulset ss
  I0904 15:59:35.349109 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-3078" for this suite. @ 09/04/25 15:59:35.352
• [50.793 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 09/04/25 15:59:35.358
  I0904 15:59:35.358455 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename watch @ 09/04/25 15:59:35.358
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:59:35.37
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:59:35.372
  STEP: creating a new configmap @ 09/04/25 15:59:35.374
  STEP: modifying the configmap once @ 09/04/25 15:59:35.379
  STEP: modifying the configmap a second time @ 09/04/25 15:59:35.388
  STEP: deleting the configmap @ 09/04/25 15:59:35.395
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 09/04/25 15:59:35.4
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 09/04/25 15:59:35.401
  I0904 15:59:35.401635 23 watch.go:426] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-5735  43973e12-3c29-45b8-8a67-d4ed366d9755 44209 0 2025-09-04 15:59:35 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2025-09-04 15:59:35 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0904 15:59:35.401755 23 watch.go:426] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-5735  43973e12-3c29-45b8-8a67-d4ed366d9755 44210 0 2025-09-04 15:59:35 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2025-09-04 15:59:35 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0904 15:59:35.401825 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-5735" for this suite. @ 09/04/25 15:59:35.452
• [0.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3431
  STEP: Creating a kubernetes client @ 09/04/25 15:59:35.459
  I0904 15:59:35.459933 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename services @ 09/04/25 15:59:35.46
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:59:35.472
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:59:35.474
  STEP: creating a Service @ 09/04/25 15:59:35.48
  STEP: watching for the Service to be added @ 09/04/25 15:59:35.496
  I0904 15:59:35.498754 23 service.go:3483] Found Service test-service-kl6qc in namespace services-3137 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 31926}]
  I0904 15:59:35.498777 23 service.go:3490] Service test-service-kl6qc created
  STEP: Getting /status @ 09/04/25 15:59:35.498
  I0904 15:59:35.504124 23 service.go:3501] Service test-service-kl6qc has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 09/04/25 15:59:35.504
  STEP: watching for the Service to be patched @ 09/04/25 15:59:35.508
  I0904 15:59:35.510380 23 service.go:3524] observed Service test-service-kl6qc in namespace services-3137 with annotations: map[] & LoadBalancer: {[]}
  I0904 15:59:35.510485 23 service.go:3527] Found Service test-service-kl6qc in namespace services-3137 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  0xc000ff3850 []}]}
  I0904 15:59:35.510533 23 service.go:3534] Service test-service-kl6qc has service status patched
  STEP: updating the ServiceStatus @ 09/04/25 15:59:35.51
  I0904 15:59:35.520605 23 service.go:3554] updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 09/04/25 15:59:35.52
  I0904 15:59:35.521610 23 service.go:3565] Observed Service test-service-kl6qc in namespace services-3137 with annotations: map[] & Conditions: []
  I0904 15:59:35.521636 23 service.go:3576] Observed Service test-service-kl6qc in namespace services-3137 with annotations: map[patchedstatus:true] & Conditions: []
  I0904 15:59:35.521655 23 service.go:3572] Found Service test-service-kl6qc in namespace services-3137 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0904 15:59:35.521661 23 service.go:3583] Service test-service-kl6qc has service status updated
  STEP: patching the service @ 09/04/25 15:59:35.521
  STEP: watching for the Service to be patched @ 09/04/25 15:59:35.529
  I0904 15:59:35.530780 23 service.go:3606] observed Service test-service-kl6qc in namespace services-3137 with labels: map[test-service-static:true]
  I0904 15:59:35.530794 23 service.go:3606] observed Service test-service-kl6qc in namespace services-3137 with labels: map[test-service-static:true]
  I0904 15:59:35.530810 23 service.go:3606] observed Service test-service-kl6qc in namespace services-3137 with labels: map[test-service-static:true]
  I0904 15:59:35.530839 23 service.go:3609] Found Service test-service-kl6qc in namespace services-3137 with labels: map[test-service:patched test-service-static:true]
  I0904 15:59:35.530849 23 service.go:3616] Service test-service-kl6qc patched
  STEP: deleting the service @ 09/04/25 15:59:35.53
  STEP: watching for the Service to be deleted @ 09/04/25 15:59:35.549
  I0904 15:59:35.550007 23 service.go:3640] Observed event: ADDED
  I0904 15:59:35.550019 23 service.go:3640] Observed event: MODIFIED
  I0904 15:59:35.550026 23 service.go:3640] Observed event: MODIFIED
  I0904 15:59:35.550083 23 service.go:3640] Observed event: MODIFIED
  I0904 15:59:35.550098 23 service.go:3636] Found Service test-service-kl6qc in namespace services-3137 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  I0904 15:59:35.550126 23 service.go:3645] Service test-service-kl6qc deleted
  I0904 15:59:35.550262 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3137" for this suite. @ 09/04/25 15:59:35.555
• [0.104 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:131
  STEP: Creating a kubernetes client @ 09/04/25 15:59:35.564
  I0904 15:59:35.564395 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename projected @ 09/04/25 15:59:35.564
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:59:35.574
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:59:35.576
  STEP: Creating the pod @ 09/04/25 15:59:35.578
  E0904 15:59:36.230323      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:59:37.230439      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:59:38.117397 23 pod_client.go:186] Successfully updated pod "labelsupdate379c4547-3e6a-43ad-bbdc-7157e7262658"
  E0904 15:59:38.230684      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:59:39.230887      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:59:40.231164      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:59:41.231348      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:59:42.143124 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9240" for this suite. @ 09/04/25 15:59:42.148
• [6.591 seconds]
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should apply changes to a pv/pvc status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:668
  STEP: Creating a kubernetes client @ 09/04/25 15:59:42.155
  I0904 15:59:42.155233 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename pv @ 09/04/25 15:59:42.155
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:59:42.167
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:59:42.169
  STEP: Creating initial PV and PVC @ 09/04/25 15:59:42.171
  I0904 15:59:42.171629 23 pv.go:394] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-3284" @ 09/04/25 15:59:42.184
  STEP: Listing PVCs in namespace "pv-3284" @ 09/04/25 15:59:42.19
  STEP: Reading "pvc-wqjj5" Status @ 09/04/25 15:59:42.192
  STEP: Reading "pv-3284-297rl" Status @ 09/04/25 15:59:42.196
  STEP: Patching "pvc-wqjj5" Status @ 09/04/25 15:59:42.2
  STEP: Patching "pv-3284-297rl" Status @ 09/04/25 15:59:42.206
  STEP: Updating "pvc-wqjj5" Status @ 09/04/25 15:59:42.212
  STEP: Updating "pv-3284-297rl" Status @ 09/04/25 15:59:42.221
  E0904 15:59:42.231650      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 15:59:42.252640 23 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I0904 15:59:42.252655 23 pv.go:205] Deleting PersistentVolumeClaim "pvc-wqjj5"
  I0904 15:59:42.260362 23 pv.go:193] Deleting PersistentVolume "pv-3284-297rl"
  I0904 15:59:42.268859 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-3284" for this suite. @ 09/04/25 15:59:42.272
• [0.124 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:250
  STEP: Creating a kubernetes client @ 09/04/25 15:59:42.279
  I0904 15:59:42.279302 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename projected @ 09/04/25 15:59:42.279
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:59:42.294
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:59:42.296
  STEP: Creating a pod to test downward API volume plugin @ 09/04/25 15:59:42.298
  E0904 15:59:43.231958      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:59:44.232181      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/25 15:59:44.311
  I0904 15:59:44.314361 23 output.go:207] Trying to get logs from node ip-172-31-33-202 pod downwardapi-volume-62abf4ad-cc88-46c9-8f92-5a3930d49562 container client-container: <nil>
  STEP: delete the pod @ 09/04/25 15:59:44.321
  I0904 15:59:44.337253 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1149" for this suite. @ 09/04/25 15:59:44.341
• [2.070 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:228
  STEP: Creating a kubernetes client @ 09/04/25 15:59:44.349
  I0904 15:59:44.349881 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename var-expansion @ 09/04/25 15:59:44.35
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 15:59:44.36
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 15:59:44.362
  STEP: creating the pod with failed condition @ 09/04/25 15:59:44.364
  E0904 15:59:45.232255      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:59:46.232854      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:59:47.232943      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:59:48.233020      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:59:49.233139      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:59:50.233219      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:59:51.233836      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:59:52.233951      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:59:53.234003      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:59:54.234093      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:59:55.234747      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:59:56.234814      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:59:57.234928      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:59:58.235012      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 15:59:59.235824      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:00:00.235885      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:00:01.236004      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:00:02.236074      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:00:03.236196      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:00:04.236260      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:00:05.236738      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:00:06.236921      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:00:07.237012      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:00:08.237136      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:00:09.237237      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:00:10.237344      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:00:11.237729      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:00:12.237829      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:00:13.238739      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:00:14.238906      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:00:15.239804      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:00:16.239926      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:00:17.240040      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:00:18.240119      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:00:19.240271      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:00:20.240398      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:00:21.240558      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:00:22.240695      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:00:23.240855      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:00:24.240964      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:00:25.241068      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:00:26.241138      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:00:27.241794      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:00:28.241923      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:00:29.242085      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:00:30.242195      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:00:31.242287      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:00:32.242812      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:00:33.243608      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:00:34.243754      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:00:35.244183      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:00:36.244272      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:00:37.244366      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:00:38.244647      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:00:39.245244      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:00:40.245322      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:00:41.245714      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:00:42.245821      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:00:43.245909      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:00:44.246027      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:00:45.246517      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:00:46.246789      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:00:47.247805      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:00:48.247989      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:00:49.248504      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:00:50.248701      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:00:51.248805      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:00:52.248941      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:00:53.249061      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:00:54.249258      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:00:55.249377      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:00:56.249580      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:00:57.249780      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:00:58.249974      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:00:59.251009      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:01:00.251193      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:01:01.252048      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:01:02.252182      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:01:03.253122      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:01:04.253321      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:01:05.253782      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:01:06.253981      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:01:07.254567      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:01:08.254717      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:01:09.255781      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:01:10.256780      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:01:11.257494      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:01:12.258575      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:01:13.258709      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:01:14.258903      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:01:15.259918      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:01:16.260018      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:01:17.260144      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:01:18.260339      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:01:19.260726      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:01:20.260832      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:01:21.260989      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:01:22.261109      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:01:23.261170      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:01:24.261357      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:01:25.261549      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:01:26.261706      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:01:27.262713      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:01:28.262815      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:01:29.263787      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:01:30.264800      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:01:31.265034      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:01:32.265774      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:01:33.266671      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:01:34.266722      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:01:35.267780      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:01:36.267883      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:01:37.268014      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:01:38.268172      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:01:39.268826      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:01:40.268985      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:01:41.269779      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:01:42.270004      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:01:43.270981      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:01:44.271173      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: updating the pod @ 09/04/25 16:01:44.375
  I0904 16:01:44.889575 23 pod_client.go:186] Successfully updated pod "var-expansion-7528e915-c5b4-4ba6-841c-4a1a9d4c338c"
  STEP: waiting for pod running @ 09/04/25 16:01:44.889
  E0904 16:01:45.272088      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:01:46.272224      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 09/04/25 16:01:46.898
  I0904 16:01:46.898858 23 delete.go:78] Deleting pod "var-expansion-7528e915-c5b4-4ba6-841c-4a1a9d4c338c" in namespace "var-expansion-7869"
  I0904 16:01:46.906865 23 delete.go:86] Wait up to 5m0s for pod "var-expansion-7528e915-c5b4-4ba6-841c-4a1a9d4c338c" to be fully deleted
  E0904 16:01:47.273215      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:01:48.273434      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:01:49.273531      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:01:50.274019      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:01:51.274603      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:01:52.275036      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:01:53.275104      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:01:54.275232      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:01:55.276156      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:01:56.276252      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:01:57.276783      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:01:58.276948      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:01:59.277810      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:02:00.277927      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:02:01.278191      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:02:02.278340      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:02:03.278404      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:02:04.278639      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:02:05.279657      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:02:06.279759      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:02:07.280751      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:02:08.280875      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:02:09.280915      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:02:10.281012      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:02:11.282082      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:02:12.282199      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:02:13.282329      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:02:14.282511      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:02:15.283003      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:02:16.283144      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:02:17.284127      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:02:18.284201      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:02:18.990933 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-7869" for this suite. @ 09/04/25 16:02:18.995
• [154.654 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 09/04/25 16:02:19.004
  I0904 16:02:19.004468 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename secrets @ 09/04/25 16:02:19.004
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 16:02:19.02
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 16:02:19.023
  STEP: Creating secret with name secret-test-7b20348c-ff5c-47f0-8db4-d7b18238165d @ 09/04/25 16:02:19.025
  STEP: Creating a pod to test consume secrets @ 09/04/25 16:02:19.03
  E0904 16:02:19.284791      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:02:20.285027      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:02:21.285778      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:02:22.286810      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/25 16:02:23.055
  I0904 16:02:23.057346 23 output.go:207] Trying to get logs from node ip-172-31-33-202 pod pod-secrets-abc1c6f6-beb7-41cf-abde-9fac00217434 container secret-volume-test: <nil>
  STEP: delete the pod @ 09/04/25 16:02:23.073
  I0904 16:02:23.090854 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6133" for this suite. @ 09/04/25 16:02:23.093
• [4.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:152
  STEP: Creating a kubernetes client @ 09/04/25 16:02:23.103
  I0904 16:02:23.103408 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename container-probe @ 09/04/25 16:02:23.103
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 16:02:23.115
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 16:02:23.117
  STEP: Creating pod busybox-388349d3-43a5-4e33-a923-68bba995c887 in namespace container-probe-4178 @ 09/04/25 16:02:23.119
  E0904 16:02:23.287104      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:02:24.287223      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/04/25 16:02:25.139
  I0904 16:02:25.143674 23 container_probe.go:1749] Initial restart count of pod busybox-388349d3-43a5-4e33-a923-68bba995c887 is 0
  I0904 16:02:25.146706 23 container_probe.go:1759] Get pod busybox-388349d3-43a5-4e33-a923-68bba995c887 in namespace container-probe-4178
  E0904 16:02:25.287998      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:02:26.288128      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:02:27.150785 23 container_probe.go:1759] Get pod busybox-388349d3-43a5-4e33-a923-68bba995c887 in namespace container-probe-4178
  E0904 16:02:27.289013      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:02:28.289816      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:02:29.154521 23 container_probe.go:1759] Get pod busybox-388349d3-43a5-4e33-a923-68bba995c887 in namespace container-probe-4178
  E0904 16:02:29.290806      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:02:30.290998      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:02:31.158966 23 container_probe.go:1759] Get pod busybox-388349d3-43a5-4e33-a923-68bba995c887 in namespace container-probe-4178
  E0904 16:02:31.291118      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:02:32.291260      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:02:33.164579 23 container_probe.go:1759] Get pod busybox-388349d3-43a5-4e33-a923-68bba995c887 in namespace container-probe-4178
  E0904 16:02:33.291839      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:02:34.291985      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:02:35.170550 23 container_probe.go:1759] Get pod busybox-388349d3-43a5-4e33-a923-68bba995c887 in namespace container-probe-4178
  E0904 16:02:35.292788      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:02:36.292881      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:02:37.173219 23 container_probe.go:1759] Get pod busybox-388349d3-43a5-4e33-a923-68bba995c887 in namespace container-probe-4178
  E0904 16:02:37.293456      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:02:38.293839      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:02:39.176853 23 container_probe.go:1759] Get pod busybox-388349d3-43a5-4e33-a923-68bba995c887 in namespace container-probe-4178
  E0904 16:02:39.294135      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:02:40.294218      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:02:41.180114 23 container_probe.go:1759] Get pod busybox-388349d3-43a5-4e33-a923-68bba995c887 in namespace container-probe-4178
  E0904 16:02:41.294292      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:02:42.294411      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:02:43.185523 23 container_probe.go:1759] Get pod busybox-388349d3-43a5-4e33-a923-68bba995c887 in namespace container-probe-4178
  E0904 16:02:43.294701      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:02:44.294788      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:02:45.190634 23 container_probe.go:1759] Get pod busybox-388349d3-43a5-4e33-a923-68bba995c887 in namespace container-probe-4178
  E0904 16:02:45.295758      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:02:46.296785      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:02:47.195888 23 container_probe.go:1759] Get pod busybox-388349d3-43a5-4e33-a923-68bba995c887 in namespace container-probe-4178
  E0904 16:02:47.297036      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:02:48.297200      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:02:49.198831 23 container_probe.go:1759] Get pod busybox-388349d3-43a5-4e33-a923-68bba995c887 in namespace container-probe-4178
  E0904 16:02:49.298022      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:02:50.298220      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:02:51.202097 23 container_probe.go:1759] Get pod busybox-388349d3-43a5-4e33-a923-68bba995c887 in namespace container-probe-4178
  E0904 16:02:51.298267      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:02:52.298414      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:02:53.205420 23 container_probe.go:1759] Get pod busybox-388349d3-43a5-4e33-a923-68bba995c887 in namespace container-probe-4178
  E0904 16:02:53.298623      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:02:54.298816      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:02:55.209918 23 container_probe.go:1759] Get pod busybox-388349d3-43a5-4e33-a923-68bba995c887 in namespace container-probe-4178
  E0904 16:02:55.299124      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:02:56.299289      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:02:57.213825 23 container_probe.go:1759] Get pod busybox-388349d3-43a5-4e33-a923-68bba995c887 in namespace container-probe-4178
  E0904 16:02:57.300052      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:02:58.300224      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:02:59.218081 23 container_probe.go:1759] Get pod busybox-388349d3-43a5-4e33-a923-68bba995c887 in namespace container-probe-4178
  E0904 16:02:59.301226      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:03:00.301312      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:03:01.222197 23 container_probe.go:1759] Get pod busybox-388349d3-43a5-4e33-a923-68bba995c887 in namespace container-probe-4178
  E0904 16:03:01.301306      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:03:02.301472      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:03:03.228300 23 container_probe.go:1759] Get pod busybox-388349d3-43a5-4e33-a923-68bba995c887 in namespace container-probe-4178
  E0904 16:03:03.302442      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:03:04.302615      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:03:05.232079 23 container_probe.go:1759] Get pod busybox-388349d3-43a5-4e33-a923-68bba995c887 in namespace container-probe-4178
  E0904 16:03:05.303191      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:03:06.303722      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:03:07.236630 23 container_probe.go:1759] Get pod busybox-388349d3-43a5-4e33-a923-68bba995c887 in namespace container-probe-4178
  E0904 16:03:07.304742      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:03:08.305813      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:03:09.242117 23 container_probe.go:1759] Get pod busybox-388349d3-43a5-4e33-a923-68bba995c887 in namespace container-probe-4178
  E0904 16:03:09.306239      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:03:10.306797      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:03:11.245745 23 container_probe.go:1759] Get pod busybox-388349d3-43a5-4e33-a923-68bba995c887 in namespace container-probe-4178
  E0904 16:03:11.306834      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:03:12.306957      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:03:13.249920 23 container_probe.go:1759] Get pod busybox-388349d3-43a5-4e33-a923-68bba995c887 in namespace container-probe-4178
  E0904 16:03:13.306948      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:03:14.307084      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:03:15.255218 23 container_probe.go:1759] Get pod busybox-388349d3-43a5-4e33-a923-68bba995c887 in namespace container-probe-4178
  E0904 16:03:15.307373      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:03:16.307808      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:03:17.259338 23 container_probe.go:1759] Get pod busybox-388349d3-43a5-4e33-a923-68bba995c887 in namespace container-probe-4178
  E0904 16:03:17.308414      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:03:18.308778      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:03:19.265565 23 container_probe.go:1759] Get pod busybox-388349d3-43a5-4e33-a923-68bba995c887 in namespace container-probe-4178
  E0904 16:03:19.309666      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:03:20.309788      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:03:21.271947 23 container_probe.go:1759] Get pod busybox-388349d3-43a5-4e33-a923-68bba995c887 in namespace container-probe-4178
  E0904 16:03:21.310098      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:03:22.310288      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:03:23.277966 23 container_probe.go:1759] Get pod busybox-388349d3-43a5-4e33-a923-68bba995c887 in namespace container-probe-4178
  E0904 16:03:23.311047      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:03:24.311184      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:03:25.284029 23 container_probe.go:1759] Get pod busybox-388349d3-43a5-4e33-a923-68bba995c887 in namespace container-probe-4178
  E0904 16:03:25.312126      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:03:26.312791      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:03:27.290450 23 container_probe.go:1759] Get pod busybox-388349d3-43a5-4e33-a923-68bba995c887 in namespace container-probe-4178
  E0904 16:03:27.313573      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:03:28.313719      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:03:29.294240 23 container_probe.go:1759] Get pod busybox-388349d3-43a5-4e33-a923-68bba995c887 in namespace container-probe-4178
  E0904 16:03:29.314364      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:03:30.314489      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:03:31.298481 23 container_probe.go:1759] Get pod busybox-388349d3-43a5-4e33-a923-68bba995c887 in namespace container-probe-4178
  E0904 16:03:31.314514      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:03:32.315405      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:03:33.302221 23 container_probe.go:1759] Get pod busybox-388349d3-43a5-4e33-a923-68bba995c887 in namespace container-probe-4178
  E0904 16:03:33.316322      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:03:34.316450      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:03:35.305973 23 container_probe.go:1759] Get pod busybox-388349d3-43a5-4e33-a923-68bba995c887 in namespace container-probe-4178
  E0904 16:03:35.317100      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:03:36.317790      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:03:37.312714 23 container_probe.go:1759] Get pod busybox-388349d3-43a5-4e33-a923-68bba995c887 in namespace container-probe-4178
  E0904 16:03:37.318731      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:03:38.319778      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:03:39.316842 23 container_probe.go:1759] Get pod busybox-388349d3-43a5-4e33-a923-68bba995c887 in namespace container-probe-4178
  E0904 16:03:39.319990      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:03:40.320123      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:03:41.320821      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:03:41.321054 23 container_probe.go:1759] Get pod busybox-388349d3-43a5-4e33-a923-68bba995c887 in namespace container-probe-4178
  E0904 16:03:42.321028      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:03:43.321232      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:03:43.327361 23 container_probe.go:1759] Get pod busybox-388349d3-43a5-4e33-a923-68bba995c887 in namespace container-probe-4178
  E0904 16:03:44.321362      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:03:45.321776      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:03:45.333754 23 container_probe.go:1759] Get pod busybox-388349d3-43a5-4e33-a923-68bba995c887 in namespace container-probe-4178
  E0904 16:03:46.321956      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:03:47.322080      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:03:47.339874 23 container_probe.go:1759] Get pod busybox-388349d3-43a5-4e33-a923-68bba995c887 in namespace container-probe-4178
  E0904 16:03:48.322201      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:03:49.322304      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:03:49.343933 23 container_probe.go:1759] Get pod busybox-388349d3-43a5-4e33-a923-68bba995c887 in namespace container-probe-4178
  E0904 16:03:50.322970      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:03:51.323083      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:03:51.347550 23 container_probe.go:1759] Get pod busybox-388349d3-43a5-4e33-a923-68bba995c887 in namespace container-probe-4178
  E0904 16:03:52.323464      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:03:53.323655      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:03:53.350614 23 container_probe.go:1759] Get pod busybox-388349d3-43a5-4e33-a923-68bba995c887 in namespace container-probe-4178
  E0904 16:03:54.323767      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:03:55.323821      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:03:55.354314 23 container_probe.go:1759] Get pod busybox-388349d3-43a5-4e33-a923-68bba995c887 in namespace container-probe-4178
  E0904 16:03:56.324077      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:03:57.324183      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:03:57.359359 23 container_probe.go:1759] Get pod busybox-388349d3-43a5-4e33-a923-68bba995c887 in namespace container-probe-4178
  E0904 16:03:58.325147      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:03:59.325215      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:03:59.364186 23 container_probe.go:1759] Get pod busybox-388349d3-43a5-4e33-a923-68bba995c887 in namespace container-probe-4178
  E0904 16:04:00.325741      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:04:01.325816      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:04:01.368021 23 container_probe.go:1759] Get pod busybox-388349d3-43a5-4e33-a923-68bba995c887 in namespace container-probe-4178
  E0904 16:04:02.326015      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:04:03.326059      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:04:03.373728 23 container_probe.go:1759] Get pod busybox-388349d3-43a5-4e33-a923-68bba995c887 in namespace container-probe-4178
  E0904 16:04:04.326389      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:04:05.326577      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:04:05.378846 23 container_probe.go:1759] Get pod busybox-388349d3-43a5-4e33-a923-68bba995c887 in namespace container-probe-4178
  E0904 16:04:06.326744      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:04:07.326821      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:04:07.384029 23 container_probe.go:1759] Get pod busybox-388349d3-43a5-4e33-a923-68bba995c887 in namespace container-probe-4178
  E0904 16:04:08.327806      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:04:09.327881      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:04:09.388702 23 container_probe.go:1759] Get pod busybox-388349d3-43a5-4e33-a923-68bba995c887 in namespace container-probe-4178
  E0904 16:04:10.328805      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:04:11.328985      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:04:11.392147 23 container_probe.go:1759] Get pod busybox-388349d3-43a5-4e33-a923-68bba995c887 in namespace container-probe-4178
  E0904 16:04:12.329287      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:04:13.329516      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:04:13.398033 23 container_probe.go:1759] Get pod busybox-388349d3-43a5-4e33-a923-68bba995c887 in namespace container-probe-4178
  E0904 16:04:14.329918      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:04:15.330039      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:04:15.405058 23 container_probe.go:1759] Get pod busybox-388349d3-43a5-4e33-a923-68bba995c887 in namespace container-probe-4178
  E0904 16:04:16.331142      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:04:17.331253      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:04:17.409235 23 container_probe.go:1759] Get pod busybox-388349d3-43a5-4e33-a923-68bba995c887 in namespace container-probe-4178
  E0904 16:04:18.331745      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:04:19.331862      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:04:19.415462 23 container_probe.go:1759] Get pod busybox-388349d3-43a5-4e33-a923-68bba995c887 in namespace container-probe-4178
  E0904 16:04:20.332037      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:04:21.332170      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:04:21.420312 23 container_probe.go:1759] Get pod busybox-388349d3-43a5-4e33-a923-68bba995c887 in namespace container-probe-4178
  E0904 16:04:22.332426      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:04:23.332574      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:04:23.426534 23 container_probe.go:1759] Get pod busybox-388349d3-43a5-4e33-a923-68bba995c887 in namespace container-probe-4178
  E0904 16:04:24.333229      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:04:25.334280      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:04:25.431446 23 container_probe.go:1759] Get pod busybox-388349d3-43a5-4e33-a923-68bba995c887 in namespace container-probe-4178
  E0904 16:04:26.334807      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:04:27.334889      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:04:27.435854 23 container_probe.go:1759] Get pod busybox-388349d3-43a5-4e33-a923-68bba995c887 in namespace container-probe-4178
  E0904 16:04:28.335737      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:04:29.335808      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:04:29.440744 23 container_probe.go:1759] Get pod busybox-388349d3-43a5-4e33-a923-68bba995c887 in namespace container-probe-4178
  E0904 16:04:30.335931      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:04:31.336786      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:04:31.443950 23 container_probe.go:1759] Get pod busybox-388349d3-43a5-4e33-a923-68bba995c887 in namespace container-probe-4178
  E0904 16:04:32.336944      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:04:33.337810      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:04:33.448474 23 container_probe.go:1759] Get pod busybox-388349d3-43a5-4e33-a923-68bba995c887 in namespace container-probe-4178
  E0904 16:04:34.338438      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:04:35.338524      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:04:35.454061 23 container_probe.go:1759] Get pod busybox-388349d3-43a5-4e33-a923-68bba995c887 in namespace container-probe-4178
  E0904 16:04:36.338675      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:04:37.338904      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:04:37.459061 23 container_probe.go:1759] Get pod busybox-388349d3-43a5-4e33-a923-68bba995c887 in namespace container-probe-4178
  E0904 16:04:38.339161      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:04:39.339213      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:04:39.462907 23 container_probe.go:1759] Get pod busybox-388349d3-43a5-4e33-a923-68bba995c887 in namespace container-probe-4178
  E0904 16:04:40.339240      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:04:41.339422      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:04:41.469365 23 container_probe.go:1759] Get pod busybox-388349d3-43a5-4e33-a923-68bba995c887 in namespace container-probe-4178
  E0904 16:04:42.340439      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:04:43.340660      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:04:43.473381 23 container_probe.go:1759] Get pod busybox-388349d3-43a5-4e33-a923-68bba995c887 in namespace container-probe-4178
  E0904 16:04:44.341267      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:04:45.341457      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:04:45.477431 23 container_probe.go:1759] Get pod busybox-388349d3-43a5-4e33-a923-68bba995c887 in namespace container-probe-4178
  E0904 16:04:46.342426      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:04:47.342797      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:04:47.482623 23 container_probe.go:1759] Get pod busybox-388349d3-43a5-4e33-a923-68bba995c887 in namespace container-probe-4178
  E0904 16:04:48.343498      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:04:49.343619      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:04:49.485832 23 container_probe.go:1759] Get pod busybox-388349d3-43a5-4e33-a923-68bba995c887 in namespace container-probe-4178
  E0904 16:04:50.343727      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:04:51.343860      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:04:51.489739 23 container_probe.go:1759] Get pod busybox-388349d3-43a5-4e33-a923-68bba995c887 in namespace container-probe-4178
  E0904 16:04:52.343937      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:04:53.344637      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:04:53.494246 23 container_probe.go:1759] Get pod busybox-388349d3-43a5-4e33-a923-68bba995c887 in namespace container-probe-4178
  E0904 16:04:54.344715      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:04:55.345790      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:04:55.500829 23 container_probe.go:1759] Get pod busybox-388349d3-43a5-4e33-a923-68bba995c887 in namespace container-probe-4178
  E0904 16:04:56.345880      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:04:57.345996      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:04:57.507372 23 container_probe.go:1759] Get pod busybox-388349d3-43a5-4e33-a923-68bba995c887 in namespace container-probe-4178
  E0904 16:04:58.346087      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:04:59.347098      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:04:59.512455 23 container_probe.go:1759] Get pod busybox-388349d3-43a5-4e33-a923-68bba995c887 in namespace container-probe-4178
  E0904 16:05:00.347301      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:05:01.347458      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:05:01.516689 23 container_probe.go:1759] Get pod busybox-388349d3-43a5-4e33-a923-68bba995c887 in namespace container-probe-4178
  E0904 16:05:02.347726      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:05:03.347895      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:05:03.520974 23 container_probe.go:1759] Get pod busybox-388349d3-43a5-4e33-a923-68bba995c887 in namespace container-probe-4178
  E0904 16:05:04.348905      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:05:05.349015      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:05:05.526811 23 container_probe.go:1759] Get pod busybox-388349d3-43a5-4e33-a923-68bba995c887 in namespace container-probe-4178
  E0904 16:05:06.349688      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:05:07.349822      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:05:07.531348 23 container_probe.go:1759] Get pod busybox-388349d3-43a5-4e33-a923-68bba995c887 in namespace container-probe-4178
  E0904 16:05:08.350224      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:05:09.350430      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:05:09.535385 23 container_probe.go:1759] Get pod busybox-388349d3-43a5-4e33-a923-68bba995c887 in namespace container-probe-4178
  E0904 16:05:10.351247      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:05:11.351427      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:05:11.540850 23 container_probe.go:1759] Get pod busybox-388349d3-43a5-4e33-a923-68bba995c887 in namespace container-probe-4178
  E0904 16:05:12.351966      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:05:13.352160      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:05:13.547390 23 container_probe.go:1759] Get pod busybox-388349d3-43a5-4e33-a923-68bba995c887 in namespace container-probe-4178
  E0904 16:05:14.352802      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:05:15.352982      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:05:15.551642 23 container_probe.go:1759] Get pod busybox-388349d3-43a5-4e33-a923-68bba995c887 in namespace container-probe-4178
  E0904 16:05:16.353450      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:05:17.353574      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:05:17.557152 23 container_probe.go:1759] Get pod busybox-388349d3-43a5-4e33-a923-68bba995c887 in namespace container-probe-4178
  E0904 16:05:18.353942      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:05:19.354701      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:05:19.560788 23 container_probe.go:1759] Get pod busybox-388349d3-43a5-4e33-a923-68bba995c887 in namespace container-probe-4178
  E0904 16:05:20.355483      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:05:21.355573      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:05:21.565362 23 container_probe.go:1759] Get pod busybox-388349d3-43a5-4e33-a923-68bba995c887 in namespace container-probe-4178
  E0904 16:05:22.355744      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:05:23.355812      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:05:23.568819 23 container_probe.go:1759] Get pod busybox-388349d3-43a5-4e33-a923-68bba995c887 in namespace container-probe-4178
  E0904 16:05:24.355921      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:05:25.356003      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:05:25.575134 23 container_probe.go:1759] Get pod busybox-388349d3-43a5-4e33-a923-68bba995c887 in namespace container-probe-4178
  E0904 16:05:26.356811      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:05:27.356932      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:05:27.582071 23 container_probe.go:1759] Get pod busybox-388349d3-43a5-4e33-a923-68bba995c887 in namespace container-probe-4178
  E0904 16:05:28.357810      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:05:29.357891      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:05:29.588959 23 container_probe.go:1759] Get pod busybox-388349d3-43a5-4e33-a923-68bba995c887 in namespace container-probe-4178
  E0904 16:05:30.358897      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:05:31.358975      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:05:31.592979 23 container_probe.go:1759] Get pod busybox-388349d3-43a5-4e33-a923-68bba995c887 in namespace container-probe-4178
  E0904 16:05:32.359129      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:05:33.359246      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:05:33.598639 23 container_probe.go:1759] Get pod busybox-388349d3-43a5-4e33-a923-68bba995c887 in namespace container-probe-4178
  E0904 16:05:34.359459      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:05:35.359527      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:05:35.602142 23 container_probe.go:1759] Get pod busybox-388349d3-43a5-4e33-a923-68bba995c887 in namespace container-probe-4178
  E0904 16:05:36.359973      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:05:37.360878      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:05:37.606253 23 container_probe.go:1759] Get pod busybox-388349d3-43a5-4e33-a923-68bba995c887 in namespace container-probe-4178
  E0904 16:05:38.361083      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:05:39.361301      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:05:39.609787 23 container_probe.go:1759] Get pod busybox-388349d3-43a5-4e33-a923-68bba995c887 in namespace container-probe-4178
  E0904 16:05:40.361630      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:05:41.361742      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:05:41.615659 23 container_probe.go:1759] Get pod busybox-388349d3-43a5-4e33-a923-68bba995c887 in namespace container-probe-4178
  E0904 16:05:42.361766      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:05:43.361839      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:05:43.621923 23 container_probe.go:1759] Get pod busybox-388349d3-43a5-4e33-a923-68bba995c887 in namespace container-probe-4178
  E0904 16:05:44.362813      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:05:45.362897      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:05:45.625761 23 container_probe.go:1759] Get pod busybox-388349d3-43a5-4e33-a923-68bba995c887 in namespace container-probe-4178
  E0904 16:05:46.363043      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:05:47.363142      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:05:47.630610 23 container_probe.go:1759] Get pod busybox-388349d3-43a5-4e33-a923-68bba995c887 in namespace container-probe-4178
  E0904 16:05:48.363321      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:05:49.363399      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:05:49.635108 23 container_probe.go:1759] Get pod busybox-388349d3-43a5-4e33-a923-68bba995c887 in namespace container-probe-4178
  E0904 16:05:50.363758      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:05:51.363834      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:05:51.641646 23 container_probe.go:1759] Get pod busybox-388349d3-43a5-4e33-a923-68bba995c887 in namespace container-probe-4178
  E0904 16:05:52.363936      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:05:53.364039      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:05:53.646259 23 container_probe.go:1759] Get pod busybox-388349d3-43a5-4e33-a923-68bba995c887 in namespace container-probe-4178
  E0904 16:05:54.365058      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:05:55.365790      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:05:55.650708 23 container_probe.go:1759] Get pod busybox-388349d3-43a5-4e33-a923-68bba995c887 in namespace container-probe-4178
  E0904 16:05:56.366804      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:05:57.366882      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:05:57.656838 23 container_probe.go:1759] Get pod busybox-388349d3-43a5-4e33-a923-68bba995c887 in namespace container-probe-4178
  E0904 16:05:58.367603      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:05:59.367807      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:05:59.660674 23 container_probe.go:1759] Get pod busybox-388349d3-43a5-4e33-a923-68bba995c887 in namespace container-probe-4178
  E0904 16:06:00.368382      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:06:01.368614      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:06:01.664175 23 container_probe.go:1759] Get pod busybox-388349d3-43a5-4e33-a923-68bba995c887 in namespace container-probe-4178
  E0904 16:06:02.368945      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:06:03.369026      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:06:03.671186 23 container_probe.go:1759] Get pod busybox-388349d3-43a5-4e33-a923-68bba995c887 in namespace container-probe-4178
  E0904 16:06:04.370054      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:06:05.370810      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:06:05.675377 23 container_probe.go:1759] Get pod busybox-388349d3-43a5-4e33-a923-68bba995c887 in namespace container-probe-4178
  E0904 16:06:06.371147      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:06:07.371270      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:06:07.681308 23 container_probe.go:1759] Get pod busybox-388349d3-43a5-4e33-a923-68bba995c887 in namespace container-probe-4178
  E0904 16:06:08.372077      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:06:09.372180      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:06:09.685230 23 container_probe.go:1759] Get pod busybox-388349d3-43a5-4e33-a923-68bba995c887 in namespace container-probe-4178
  E0904 16:06:10.372819      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:06:11.372920      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:06:11.690236 23 container_probe.go:1759] Get pod busybox-388349d3-43a5-4e33-a923-68bba995c887 in namespace container-probe-4178
  E0904 16:06:12.373921      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:06:13.374198      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:06:13.696309 23 container_probe.go:1759] Get pod busybox-388349d3-43a5-4e33-a923-68bba995c887 in namespace container-probe-4178
  E0904 16:06:14.375057      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:06:15.375160      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:06:15.701842 23 container_probe.go:1759] Get pod busybox-388349d3-43a5-4e33-a923-68bba995c887 in namespace container-probe-4178
  E0904 16:06:16.375552      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:06:17.375645      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:06:17.705677 23 container_probe.go:1759] Get pod busybox-388349d3-43a5-4e33-a923-68bba995c887 in namespace container-probe-4178
  E0904 16:06:18.376116      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:06:19.376813      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:06:19.711790 23 container_probe.go:1759] Get pod busybox-388349d3-43a5-4e33-a923-68bba995c887 in namespace container-probe-4178
  E0904 16:06:20.377523      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:06:21.377800      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:06:21.718139 23 container_probe.go:1759] Get pod busybox-388349d3-43a5-4e33-a923-68bba995c887 in namespace container-probe-4178
  E0904 16:06:22.377876      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:06:23.378081      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:06:23.724039 23 container_probe.go:1759] Get pod busybox-388349d3-43a5-4e33-a923-68bba995c887 in namespace container-probe-4178
  E0904 16:06:24.378759      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:06:25.378869      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 09/04/25 16:06:25.724
  I0904 16:06:25.742712 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-4178" for this suite. @ 09/04/25 16:06:25.746
• [242.650 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] DNS should provide DNS for services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:152
  STEP: Creating a kubernetes client @ 09/04/25 16:06:25.753
  I0904 16:06:25.753203 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename dns @ 09/04/25 16:06:25.753
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 16:06:25.766
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 16:06:25.768
  STEP: Creating a test headless service @ 09/04/25 16:06:25.769
  I0904 16:06:25.776243      23 warnings.go:110] "Warning: spec.SessionAffinity is ignored for headless services"
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9088.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@dns-test-service.dns-9088.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9088.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@dns-test-service.dns-9088.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-9088.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.dns-test-service.dns-9088.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-9088.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.dns-test-service.dns-9088.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-9088.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_udp@_http._tcp.test-service-2.dns-9088.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-9088.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/agnhost_tcp@_http._tcp.test-service-2.dns-9088.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 245.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.245_udp@PTR;check="$$(dig +tcp +noall +answer +search 245.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.245_tcp@PTR;sleep 1; done
   @ 09/04/25 16:06:25.789
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9088.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-9088.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9088.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-9088.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-9088.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-9088.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-9088.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-9088.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-9088.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-9088.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-9088.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-9088.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 245.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.245_udp@PTR;check="$$(dig +tcp +noall +answer +search 245.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.245_tcp@PTR;sleep 1; done
   @ 09/04/25 16:06:25.789
  STEP: creating a pod to probe DNS @ 09/04/25 16:06:25.789
  STEP: submitting the pod to kubernetes @ 09/04/25 16:06:25.789
  E0904 16:06:26.379858      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:06:27.380032      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/04/25 16:06:27.81
  STEP: looking for the results for each expected name from probers @ 09/04/25 16:06:27.813
  I0904 16:06:27.818031 23 dns_common.go:495] Unable to read agnhost_udp@dns-test-service.dns-9088.svc.cluster.local from pod dns-9088/dns-test-5b0c98d6-87d8-4501-b976-ebdf1b937321: the server could not find the requested resource (get pods dns-test-5b0c98d6-87d8-4501-b976-ebdf1b937321)
  I0904 16:06:27.823504 23 dns_common.go:495] Unable to read agnhost_tcp@dns-test-service.dns-9088.svc.cluster.local from pod dns-9088/dns-test-5b0c98d6-87d8-4501-b976-ebdf1b937321: the server could not find the requested resource (get pods dns-test-5b0c98d6-87d8-4501-b976-ebdf1b937321)
  I0904 16:06:27.826880 23 dns_common.go:495] Unable to read agnhost_udp@_http._tcp.dns-test-service.dns-9088.svc.cluster.local from pod dns-9088/dns-test-5b0c98d6-87d8-4501-b976-ebdf1b937321: the server could not find the requested resource (get pods dns-test-5b0c98d6-87d8-4501-b976-ebdf1b937321)
  I0904 16:06:27.830157 23 dns_common.go:495] Unable to read agnhost_tcp@_http._tcp.dns-test-service.dns-9088.svc.cluster.local from pod dns-9088/dns-test-5b0c98d6-87d8-4501-b976-ebdf1b937321: the server could not find the requested resource (get pods dns-test-5b0c98d6-87d8-4501-b976-ebdf1b937321)
  I0904 16:06:27.862275 23 dns_common.go:495] Unable to read jessie_udp@dns-test-service.dns-9088.svc.cluster.local from pod dns-9088/dns-test-5b0c98d6-87d8-4501-b976-ebdf1b937321: the server could not find the requested resource (get pods dns-test-5b0c98d6-87d8-4501-b976-ebdf1b937321)
  I0904 16:06:27.865090 23 dns_common.go:495] Unable to read jessie_tcp@dns-test-service.dns-9088.svc.cluster.local from pod dns-9088/dns-test-5b0c98d6-87d8-4501-b976-ebdf1b937321: the server could not find the requested resource (get pods dns-test-5b0c98d6-87d8-4501-b976-ebdf1b937321)
  I0904 16:06:27.870077 23 dns_common.go:495] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-9088.svc.cluster.local from pod dns-9088/dns-test-5b0c98d6-87d8-4501-b976-ebdf1b937321: the server could not find the requested resource (get pods dns-test-5b0c98d6-87d8-4501-b976-ebdf1b937321)
  I0904 16:06:27.873002 23 dns_common.go:495] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-9088.svc.cluster.local from pod dns-9088/dns-test-5b0c98d6-87d8-4501-b976-ebdf1b937321: the server could not find the requested resource (get pods dns-test-5b0c98d6-87d8-4501-b976-ebdf1b937321)
  I0904 16:06:27.889264 23 dns_common.go:506] Lookups using dns-9088/dns-test-5b0c98d6-87d8-4501-b976-ebdf1b937321 failed for: [agnhost_udp@dns-test-service.dns-9088.svc.cluster.local agnhost_tcp@dns-test-service.dns-9088.svc.cluster.local agnhost_udp@_http._tcp.dns-test-service.dns-9088.svc.cluster.local agnhost_tcp@_http._tcp.dns-test-service.dns-9088.svc.cluster.local jessie_udp@dns-test-service.dns-9088.svc.cluster.local jessie_tcp@dns-test-service.dns-9088.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-9088.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-9088.svc.cluster.local]

  I0904 16:06:27.900851 23 dns_common.go:514] Pod client logs for webserver: 
  I0904 16:06:27.907490 23 dns_common.go:514] Pod client logs for agnhost-querier: 
  I0904 16:06:27.912521 23 dns_common.go:514] Pod client logs for jessie-querier: 
  E0904 16:06:28.380076      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:06:29.380290      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:06:30.380491      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:06:31.380647      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:06:32.380755      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:06:32.886084 23 dns_common.go:546] DNS probes using dns-9088/dns-test-5b0c98d6-87d8-4501-b976-ebdf1b937321 succeeded

  STEP: deleting the pod @ 09/04/25 16:06:32.886
  STEP: deleting the test service @ 09/04/25 16:06:32.904
  STEP: deleting the test headless service @ 09/04/25 16:06:32.948
  I0904 16:06:32.958384 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-9088" for this suite. @ 09/04/25 16:06:32.966
• [7.220 seconds]
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:99
  STEP: Creating a kubernetes client @ 09/04/25 16:06:32.973
  I0904 16:06:32.973310 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename emptydir @ 09/04/25 16:06:32.973
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 16:06:32.987
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 16:06:32.992
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 09/04/25 16:06:32.995
  E0904 16:06:33.380854      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:06:34.381068      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/25 16:06:35.018
  I0904 16:06:35.024329 23 output.go:207] Trying to get logs from node ip-172-31-33-202 pod pod-936c6410-6b67-4bc5-bd3f-931f2d3a418a container test-container: <nil>
  STEP: delete the pod @ 09/04/25 16:06:35.03
  I0904 16:06:35.046331 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-801" for this suite. @ 09/04/25 16:06:35.048
• [2.085 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve endpoints on same port and different protocols [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3741
  STEP: Creating a kubernetes client @ 09/04/25 16:06:35.058
  I0904 16:06:35.058728 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename services @ 09/04/25 16:06:35.059
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 16:06:35.069
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 16:06:35.071
  STEP: creating service multiprotocol-test in namespace services-2918 @ 09/04/25 16:06:35.073
  STEP: creating pod pod1 in namespace services-2918 @ 09/04/25 16:06:35.084
  STEP: Creating pod pod1 in namespace services-2918 @ 09/04/25 16:06:35.084
  E0904 16:06:35.381706      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:06:36.381948      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: waiting for EndpointSlices for all ports @ 09/04/25 16:06:37.111
  I0904 16:06:37.111107 23 wait.go:139] Waiting for service services-2918/multiprotocol-test to have endpoints for ports [{tcp-port TCP pod1 80} {udp-port UDP pod1 80}]
  STEP: Checking if the Service forwards traffic to the TCP and UDP port @ 09/04/25 16:06:37.114
  I0904 16:06:37.114728 23 resource.go:344] Creating new exec pod
  E0904 16:06:37.382764      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:06:38.383160      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:06:39.127876 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=services-2918 exec execpodftf8n -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.20 80'
  I0904 16:06:39.204283 23 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.20 80\nConnection to 10.152.183.20 80 port [tcp/http] succeeded!\n"
  I0904 16:06:39.204329 23 builder.go:157] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0904 16:06:39.204380 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=services-2918 exec execpodftf8n -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.20 80'
  E0904 16:06:39.383257      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:06:40.383499      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:06:41.275164 23 builder.go:156] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.152.183.20 80\n"
  I0904 16:06:41.275219 23 builder.go:157] stdout: "pod1"
  STEP: updating the service to have only a TCP port @ 09/04/25 16:06:41.275
  STEP: Checking if the Service forwards traffic to TCP only @ 09/04/25 16:06:41.286
  I0904 16:06:41.286451 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=services-2918 exec execpodftf8n -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.20 80'
  I0904 16:06:41.352666 23 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.20 80\nConnection to 10.152.183.20 80 port [tcp/http] succeeded!\n"
  I0904 16:06:41.352693 23 builder.go:157] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0904 16:06:41.352751 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=services-2918 exec execpodftf8n -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.20 80'
  E0904 16:06:41.384068      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:06:42.384785      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:06:43.384905      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:06:43.418923 23 builder.go:156] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.152.183.20 80\n"
  I0904 16:06:43.418958 23 builder.go:157] stdout: ""
  I0904 16:06:43.419010 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=services-2918 exec execpodftf8n -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.20 80'
  E0904 16:06:44.384984      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:06:45.385823      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:06:45.486257 23 builder.go:156] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.152.183.20 80\n"
  I0904 16:06:45.486343 23 builder.go:157] stdout: ""
  I0904 16:06:45.486393 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=services-2918 exec execpodftf8n -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.20 80'
  E0904 16:06:46.385905      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:06:47.385976      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:06:47.553708 23 builder.go:156] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.152.183.20 80\n"
  I0904 16:06:47.553758 23 builder.go:157] stdout: ""
  STEP: updating the service to have only a UDP port @ 09/04/25 16:06:47.553
  STEP: Checking if the Service forwards traffic to UDP only @ 09/04/25 16:06:47.562
  I0904 16:06:47.563160 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=services-2918 exec execpodftf8n -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.20 80'
  I0904 16:06:47.638839 23 builder.go:156] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.152.183.20 80\n"
  I0904 16:06:47.638863 23 builder.go:157] stdout: ""
  E0904 16:06:48.386093      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:06:49.386194      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:06:49.563416 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=services-2918 exec execpodftf8n -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.20 80'
  E0904 16:06:50.386271      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:06:51.386793      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:06:51.638056 23 builder.go:156] stderr: "+ + nc -v -u -w 2 10.152.183.20 80\necho hostName\n"
  I0904 16:06:51.638096 23 builder.go:157] stdout: "pod1"
  I0904 16:06:51.638184 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=services-2918 exec execpodftf8n -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.20 80'
  E0904 16:06:52.387788      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:06:53.387970      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:06:53.702243 23 builder.go:145] rc: 1
  I0904 16:06:53.702305 23 util.go:240] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=services-2918 exec execpodftf8n -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.20 80:
  Command stdout:

  stderr:
  + + nc -v -t -w 2 10.152.183.20 80
  echo hostName
  nc: connect to 10.152.183.20 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0904 16:06:53.702363 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=services-2918 exec execpodftf8n -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.20 80'
  E0904 16:06:54.388065      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:06:55.388254      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:06:55.770537 23 builder.go:145] rc: 1
  I0904 16:06:55.770638 23 util.go:240] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=services-2918 exec execpodftf8n -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.20 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.152.183.20 80
  nc: connect to 10.152.183.20 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0904 16:06:55.770702 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=services-2918 exec execpodftf8n -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.20 80'
  E0904 16:06:56.388357      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:06:57.388480      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:06:57.842324 23 builder.go:145] rc: 1
  I0904 16:06:57.842397 23 util.go:240] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=services-2918 exec execpodftf8n -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.20 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.152.183.20 80
  nc: connect to 10.152.183.20 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0904 16:06:57.842683 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2918" for this suite. @ 09/04/25 16:06:57.849
• [22.797 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable as environment variable names variable names with various prefixes [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:249
  STEP: Creating a kubernetes client @ 09/04/25 16:06:57.856
  I0904 16:06:57.856063 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename secrets @ 09/04/25 16:06:57.856
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 16:06:57.867
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 16:06:57.87
  STEP: creating secret secrets-9338/secret-test-0d629ca7-fcdc-4519-b142-6e84c35b9c05 @ 09/04/25 16:06:57.872
  STEP: Creating a pod to test consume secrets @ 09/04/25 16:06:57.875
  E0904 16:06:58.388579      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:06:59.388763      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/25 16:06:59.894
  I0904 16:06:59.899351 23 output.go:207] Trying to get logs from node ip-172-31-33-202 pod pod-secret-d171e4a1-629b-4957-bb65-3f3bf3bc8279 container env-test: <nil>
  STEP: delete the pod @ 09/04/25 16:06:59.905
  I0904 16:06:59.924085 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9338" for this suite. @ 09/04/25 16:06:59.926
• [2.078 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:426
  STEP: Creating a kubernetes client @ 09/04/25 16:06:59.933
  I0904 16:06:59.933862 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename replication-controller @ 09/04/25 16:06:59.934
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 16:06:59.948
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 16:06:59.95
  STEP: Creating ReplicationController "e2e-rc-rclwb" @ 09/04/25 16:06:59.951
  I0904 16:06:59.958822 23 rc.go:795] Get Replication Controller "e2e-rc-rclwb" to confirm replicas
  E0904 16:07:00.389177      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:07:00.959821 23 rc.go:795] Get Replication Controller "e2e-rc-rclwb" to confirm replicas
  I0904 16:07:00.963143 23 rc.go:804] Found 1 replicas for "e2e-rc-rclwb" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-rclwb" @ 09/04/25 16:07:00.963
  STEP: Updating a scale subresource @ 09/04/25 16:07:00.965
  STEP: Verifying replicas where modified for replication controller "e2e-rc-rclwb" @ 09/04/25 16:07:00.972
  I0904 16:07:00.972511 23 rc.go:795] Get Replication Controller "e2e-rc-rclwb" to confirm replicas
  E0904 16:07:01.389846      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:07:01.972629 23 rc.go:795] Get Replication Controller "e2e-rc-rclwb" to confirm replicas
  I0904 16:07:01.976121 23 rc.go:804] Found 2 replicas for "e2e-rc-rclwb" replication controller
  I0904 16:07:01.976275 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-4858" for this suite. @ 09/04/25 16:07:01.981
• [2.052 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:867
  STEP: Creating a kubernetes client @ 09/04/25 16:07:01.985
  I0904 16:07:01.985872 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename resourcequota @ 09/04/25 16:07:01.986
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 16:07:01.998
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 16:07:02
  STEP: Creating a ResourceQuota with best effort scope @ 09/04/25 16:07:02.002
  STEP: Ensuring ResourceQuota status is calculated @ 09/04/25 16:07:02.008
  I0904 16:07:02.014090 23 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc007971e00>: 
          metadata:
            creationTimestamp: "2025-09-04T16:07:02Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:pods: {}
                  f:scopes: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-04T16:07:02Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:pods: {}
                  f:used:
                    .: {}
                    f:pods: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-04T16:07:02Z"
            name: quota-besteffort
            namespace: resourcequota-8020
            resourceVersion: "45627"
            uid: 92800208-f3f0-44da-b0b3-9f55c4a509f6
          spec:
            hard:
              pods: "5"
            scopes:
            - BestEffort
          status:
            hard:
              pods: "5"
            used:
              pods: "0"
  STEP: Creating a ResourceQuota with not best effort scope @ 09/04/25 16:07:02.014
  STEP: Ensuring ResourceQuota status is calculated @ 09/04/25 16:07:02.02
  E0904 16:07:02.390205      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:07:03.390346      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:07:04.026954 23 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc0027d88c0>: 
          metadata:
            creationTimestamp: "2025-09-04T16:07:02Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:pods: {}
                  f:scopes: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-04T16:07:02Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:pods: {}
                  f:used:
                    .: {}
                    f:pods: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-04T16:07:02Z"
            name: quota-not-besteffort
            namespace: resourcequota-8020
            resourceVersion: "45630"
            uid: d69b23fe-d9df-48db-866b-c80cd9ccd825
          spec:
            hard:
              pods: "5"
            scopes:
            - NotBestEffort
          status:
            hard:
              pods: "5"
            used:
              pods: "0"
  STEP: Creating a best-effort pod @ 09/04/25 16:07:04.027
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 09/04/25 16:07:04.04
  I0904 16:07:04.043728 23 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc0027d9540>: 
          metadata:
            creationTimestamp: "2025-09-04T16:07:02Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:pods: {}
                  f:scopes: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-04T16:07:02Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:pods: {}
                  f:used: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-04T16:07:02Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:used:
                    f:pods: {}
              manager: kube-apiserver
              operation: Update
              subresource: status
              time: "2025-09-04T16:07:04Z"
            name: quota-besteffort
            namespace: resourcequota-8020
            resourceVersion: "45668"
            uid: 92800208-f3f0-44da-b0b3-9f55c4a509f6
          spec:
            hard:
              pods: "5"
            scopes:
            - BestEffort
          status:
            hard:
              pods: "5"
            used:
              pods: "1"
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 09/04/25 16:07:04.043
  I0904 16:07:04.048779 23 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc0022fcdc0>: 
          metadata:
            creationTimestamp: "2025-09-04T16:07:02Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:pods: {}
                  f:scopes: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-04T16:07:02Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:pods: {}
                  f:used:
                    .: {}
                    f:pods: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-04T16:07:02Z"
            name: quota-not-besteffort
            namespace: resourcequota-8020
            resourceVersion: "45630"
            uid: d69b23fe-d9df-48db-866b-c80cd9ccd825
          spec:
            hard:
              pods: "5"
            scopes:
            - NotBestEffort
          status:
            hard:
              pods: "5"
            used:
              pods: "0"
  STEP: Deleting the pod @ 09/04/25 16:07:04.048
  STEP: Ensuring resource quota status released the pod usage @ 09/04/25 16:07:04.058
  I0904 16:07:04.061787 23 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc002f4c280>: 
          metadata:
            creationTimestamp: "2025-09-04T16:07:02Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:pods: {}
                  f:scopes: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-04T16:07:02Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:pods: {}
                  f:used:
                    .: {}
                    f:pods: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-04T16:07:04Z"
            name: quota-besteffort
            namespace: resourcequota-8020
            resourceVersion: "45674"
            uid: 92800208-f3f0-44da-b0b3-9f55c4a509f6
          spec:
            hard:
              pods: "5"
            scopes:
            - BestEffort
          status:
            hard:
              pods: "5"
            used:
              pods: "0"
  STEP: Creating a not best-effort pod @ 09/04/25 16:07:04.061
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 09/04/25 16:07:04.072
  I0904 16:07:04.080464 23 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc0022fd400>: 
          metadata:
            creationTimestamp: "2025-09-04T16:07:02Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:pods: {}
                  f:scopes: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-04T16:07:02Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:pods: {}
                  f:used: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-04T16:07:02Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:used:
                    f:pods: {}
              manager: kube-apiserver
              operation: Update
              subresource: status
              time: "2025-09-04T16:07:04Z"
            name: quota-not-besteffort
            namespace: resourcequota-8020
            resourceVersion: "45675"
            uid: d69b23fe-d9df-48db-866b-c80cd9ccd825
          spec:
            hard:
              pods: "5"
            scopes:
            - NotBestEffort
          status:
            hard:
              pods: "5"
            used:
              pods: "1"
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 09/04/25 16:07:04.08
  I0904 16:07:04.082937 23 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc002f4d040>: 
          metadata:
            creationTimestamp: "2025-09-04T16:07:02Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:pods: {}
                  f:scopes: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-04T16:07:02Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:pods: {}
                  f:used:
                    .: {}
                    f:pods: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-04T16:07:04Z"
            name: quota-besteffort
            namespace: resourcequota-8020
            resourceVersion: "45674"
            uid: 92800208-f3f0-44da-b0b3-9f55c4a509f6
          spec:
            hard:
              pods: "5"
            scopes:
            - BestEffort
          status:
            hard:
              pods: "5"
            used:
              pods: "0"
  STEP: Deleting the pod @ 09/04/25 16:07:04.083
  STEP: Ensuring resource quota status released the pod usage @ 09/04/25 16:07:04.093
  I0904 16:07:04.097464 23 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc0022fdb80>: 
          metadata:
            creationTimestamp: "2025-09-04T16:07:02Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:pods: {}
                  f:scopes: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-04T16:07:02Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:pods: {}
                  f:used:
                    .: {}
                    f:pods: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-04T16:07:04Z"
            name: quota-not-besteffort
            namespace: resourcequota-8020
            resourceVersion: "45681"
            uid: d69b23fe-d9df-48db-866b-c80cd9ccd825
          spec:
            hard:
              pods: "5"
            scopes:
            - NotBestEffort
          status:
            hard:
              pods: "5"
            used:
              pods: "0"
  I0904 16:07:04.097628 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8020" for this suite. @ 09/04/25 16:07:04.1
• [2.120 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:74
  STEP: Creating a kubernetes client @ 09/04/25 16:07:04.106
  I0904 16:07:04.106344 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename configmap @ 09/04/25 16:07:04.106
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 16:07:04.119
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 16:07:04.121
  STEP: Creating configMap with name configmap-test-volume-039c24d2-ac88-4049-94ac-77d9f24d6521 @ 09/04/25 16:07:04.123
  STEP: Creating a pod to test consume configMaps @ 09/04/25 16:07:04.128
  E0904 16:07:04.390575      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:07:05.390737      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/25 16:07:06.147
  I0904 16:07:06.151299 23 output.go:207] Trying to get logs from node ip-172-31-33-202 pod pod-configmaps-844b3093-5470-46ab-b7bb-85e4e20eefd8 container agnhost-container: <nil>
  STEP: delete the pod @ 09/04/25 16:07:06.156
  I0904 16:07:06.173821 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6018" for this suite. @ 09/04/25 16:07:06.178
• [2.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:94
  STEP: Creating a kubernetes client @ 09/04/25 16:07:06.184
  I0904 16:07:06.184444 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename configmap @ 09/04/25 16:07:06.184
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 16:07:06.196
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 16:07:06.198
  STEP: Creating configMap configmap-5811/configmap-test-5edadda6-a3c6-43e3-bba4-8546178ce428 @ 09/04/25 16:07:06.2
  STEP: Creating a pod to test consume configMaps @ 09/04/25 16:07:06.203
  E0904 16:07:06.391660      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:07:07.391745      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:07:08.392332      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:07:09.392423      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/25 16:07:10.229
  I0904 16:07:10.232712 23 output.go:207] Trying to get logs from node ip-172-31-33-202 pod pod-configmaps-0cc3d65a-236e-4744-bb88-13738c33c924 container env-test: <nil>
  STEP: delete the pod @ 09/04/25 16:07:10.238
  I0904 16:07:10.258489 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5811" for this suite. @ 09/04/25 16:07:10.261
• [4.085 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:133
  STEP: Creating a kubernetes client @ 09/04/25 16:07:10.269
  I0904 16:07:10.269118 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename runtimeclass @ 09/04/25 16:07:10.269
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 16:07:10.285
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 16:07:10.287
  E0904 16:07:10.393132      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:07:11.393279      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:07:12.319364 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-1129" for this suite. @ 09/04/25 16:07:12.323
• [2.059 seconds]
------------------------------
SS
------------------------------
[sig-network] Services should delete a collection of services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3657
  STEP: Creating a kubernetes client @ 09/04/25 16:07:12.327
  I0904 16:07:12.327874 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename services @ 09/04/25 16:07:12.328
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 16:07:12.342
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 16:07:12.344
  STEP: creating a collection of services @ 09/04/25 16:07:12.346
  I0904 16:07:12.346187 23 service.go:3693] Creating e2e-svc-a-j7v9n
  I0904 16:07:12.356151 23 service.go:3693] Creating e2e-svc-b-gzl4n
  I0904 16:07:12.364826 23 service.go:3693] Creating e2e-svc-c-mngw2
  STEP: deleting service collection @ 09/04/25 16:07:12.378
  E0904 16:07:12.394024      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:07:12.406754 23 service.go:3728] Collection of services has been deleted
  I0904 16:07:12.406843 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3454" for this suite. @ 09/04/25 16:07:12.423
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:366
  STEP: Creating a kubernetes client @ 09/04/25 16:07:12.428
  I0904 16:07:12.428102 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename cronjob @ 09/04/25 16:07:12.428
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 16:07:12.441
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 16:07:12.443
  STEP: Creating a cronjob @ 09/04/25 16:07:12.445
  STEP: creating @ 09/04/25 16:07:12.445
  STEP: getting @ 09/04/25 16:07:12.45
  STEP: listing @ 09/04/25 16:07:12.453
  STEP: watching @ 09/04/25 16:07:12.455
  I0904 16:07:12.455186 23 cronjob.go:395] starting watch
  STEP: cluster-wide listing @ 09/04/25 16:07:12.455
  STEP: cluster-wide watching @ 09/04/25 16:07:12.46
  I0904 16:07:12.460018 23 cronjob.go:407] starting watch
  STEP: patching @ 09/04/25 16:07:12.46
  STEP: updating @ 09/04/25 16:07:12.466
  I0904 16:07:12.475077 23 cronjob.go:431] waiting for watch events with expected annotations
  I0904 16:07:12.475097 23 cronjob.go:445] saw patched and updated annotations
  STEP: patching /status @ 09/04/25 16:07:12.475
  STEP: updating /status @ 09/04/25 16:07:12.48
  STEP: get /status @ 09/04/25 16:07:12.487
  STEP: deleting @ 09/04/25 16:07:12.489
  STEP: deleting a collection @ 09/04/25 16:07:12.504
  I0904 16:07:12.515549 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-3295" for this suite. @ 09/04/25 16:07:12.524
• [0.101 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:86
  STEP: Creating a kubernetes client @ 09/04/25 16:07:12.528
  I0904 16:07:12.528885 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/04/25 16:07:12.529
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 16:07:12.541
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 16:07:12.543
  I0904 16:07:12.545652 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  E0904 16:07:13.394801      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:07:14.395773      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:07:15.395894      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:07:16.396740      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:07:17.397150      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:07:18.397532      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:07:18.720308 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-8528" for this suite. @ 09/04/25 16:07:18.724
• [6.204 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] server version should find the server version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/server_version.go:41
  STEP: Creating a kubernetes client @ 09/04/25 16:07:18.733
  I0904 16:07:18.733507 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename server-version @ 09/04/25 16:07:18.734
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 16:07:18.746
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 16:07:18.748
  STEP: Request ServerVersion @ 09/04/25 16:07:18.75
  STEP: Confirm major version @ 09/04/25 16:07:18.751
  I0904 16:07:18.751943 23 server_version.go:52] Major version: 1
  STEP: Confirm minor version @ 09/04/25 16:07:18.751
  I0904 16:07:18.751984 23 server_version.go:58] cleanMinorVersion: 34
  I0904 16:07:18.751993 23 server_version.go:62] Minor version: 34
  I0904 16:07:18.752078 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-8928" for this suite. @ 09/04/25 16:07:18.825
• [0.100 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:375
  STEP: Creating a kubernetes client @ 09/04/25 16:07:18.833
  I0904 16:07:18.833616 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename projected @ 09/04/25 16:07:18.834
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 16:07:18.844
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 16:07:18.846
  STEP: Creating configMap with name projected-configmap-test-volume-8a0f1991-7da3-4787-8bf6-3948b3690153 @ 09/04/25 16:07:18.848
  STEP: Creating a pod to test consume configMaps @ 09/04/25 16:07:18.853
  E0904 16:07:19.398133      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:07:20.398804      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:07:21.399732      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:07:22.399902      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/25 16:07:22.874
  I0904 16:07:22.877172 23 output.go:207] Trying to get logs from node ip-172-31-33-202 pod pod-projected-configmaps-95377b24-5724-4b5b-9142-c9855615f06c container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 09/04/25 16:07:22.884
  I0904 16:07:22.899950 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9331" for this suite. @ 09/04/25 16:07:22.902
• [4.075 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] EndpointSlice should support a Service with multiple ports specified in multiple EndpointSlices [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:538
  STEP: Creating a kubernetes client @ 09/04/25 16:07:22.909
  I0904 16:07:22.909071 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename endpointslice @ 09/04/25 16:07:22.909
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 16:07:22.921
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 16:07:22.923
  E0904 16:07:23.399966      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:07:24.400184      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: creating @ 09/04/25 16:07:24.956
  STEP: Creating a pause pods that will try to connect to the webserver @ 09/04/25 16:07:24.967
  E0904 16:07:25.400955      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:07:26.401080      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:07:26.985091 23 util.go:162] Waiting up to 2m0s to get response from 10.152.183.246:80
  I0904 16:07:26.985153 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=endpointslice-5766 exec pause-pod-0 -- /bin/sh -x -c curl -q -s --max-time 30 10.152.183.246:80/hostname'
  I0904 16:07:27.055287 23 builder.go:156] stderr: "+ curl -q -s --max-time 30 10.152.183.246:80/hostname\n"
  I0904 16:07:27.055332 23 builder.go:157] stdout: "pod-handle-http-request"
  I0904 16:07:27.055352 23 util.go:162] Waiting up to 2m0s to get response from 10.152.183.246:81
  I0904 16:07:27.055448 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=endpointslice-5766 exec pause-pod-0 -- /bin/sh -x -c curl -q -s --max-time 30 10.152.183.246:81/hostname'
  I0904 16:07:27.122158 23 builder.go:156] stderr: "+ curl -q -s --max-time 30 10.152.183.246:81/hostname\n"
  I0904 16:07:27.122187 23 builder.go:157] stdout: "pod-handle-http-request"
  I0904 16:07:27.122337 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-5766" for this suite. @ 09/04/25 16:07:27.125
• [4.222 seconds]
------------------------------
SSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:126
  STEP: Creating a kubernetes client @ 09/04/25 16:07:27.131
  I0904 16:07:27.131218 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename sched-preemption @ 09/04/25 16:07:27.131
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 16:07:27.142
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 16:07:27.145
  I0904 16:07:27.160418 23 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0904 16:07:27.401514      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:07:28.401699      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:07:29.402405      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:07:30.402519      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:07:31.403206      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:07:32.403803      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:07:33.403925      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:07:34.403989      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:07:35.404082      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:07:36.404691      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:07:37.405353      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:07:38.405811      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:07:39.406472      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:07:40.406673      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:07:41.407077      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:07:42.407169      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:07:43.408151      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:07:44.408280      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:07:45.408385      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:07:46.408550      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:07:47.408818      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:07:48.408906      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:07:49.409630      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:07:50.410164      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:07:51.410280      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:07:52.410336      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:07:53.410348      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:07:54.410554      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:07:55.410702      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:07:56.410904      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:07:57.411641      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:07:58.411855      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:07:59.412620      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:08:00.412820      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:08:01.413812      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:08:02.413947      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:08:03.414799      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:08:04.414896      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:08:05.415679      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:08:06.415724      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:08:07.416304      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:08:08.416488      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:08:09.417420      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:08:10.417545      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:08:11.418066      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:08:12.418169      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:08:13.418833      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:08:14.418947      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:08:15.419765      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:08:16.419904      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:08:17.420609      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:08:18.420845      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:08:19.421331      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:08:20.421471      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:08:21.422031      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:08:22.422187      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:08:23.423259      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:08:24.423796      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:08:25.424608      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:08:26.424743      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:08:27.166487 23 util.go:390] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 09/04/25 16:08:27.171
  STEP: Adding a custom resource @ 09/04/25 16:08:27.171
  I0904 16:08:27.191525 23 preemption.go:170] Created pod: pod0-0-sched-preemption-low-priority
  I0904 16:08:27.199709 23 preemption.go:170] Created pod: pod0-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 09/04/25 16:08:27.199
  I0904 16:08:27.215448 23 preemption.go:170] Created pod: pod1-0-sched-preemption-medium-priority
  I0904 16:08:27.222565 23 preemption.go:170] Created pod: pod1-1-sched-preemption-medium-priority
  STEP: Adding a custom resource @ 09/04/25 16:08:27.222
  I0904 16:08:27.242183 23 preemption.go:170] Created pod: pod2-0-sched-preemption-medium-priority
  I0904 16:08:27.250441 23 preemption.go:170] Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 09/04/25 16:08:27.25
  E0904 16:08:27.425171      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:08:28.425789      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 09/04/25 16:08:29.272
  E0904 16:08:29.425982      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:08:30.426083      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Removing a custom resource @ 09/04/25 16:08:31.324
  STEP: Removing a custom resource @ 09/04/25 16:08:31.335
  STEP: Removing a custom resource @ 09/04/25 16:08:31.343
  I0904 16:08:31.354640 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-2245" for this suite. @ 09/04/25 16:08:31.356
• [64.232 seconds]
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:229
  STEP: Creating a kubernetes client @ 09/04/25 16:08:31.363
  I0904 16:08:31.363537 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename container-runtime @ 09/04/25 16:08:31.364
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 16:08:31.377
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 16:08:31.379
  STEP: create the container @ 09/04/25 16:08:31.381
  I0904 16:08:31.393899      23 warnings.go:110] "Warning: metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]"
  STEP: wait for the container to reach Succeeded @ 09/04/25 16:08:31.394
  E0904 16:08:31.427025      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:08:32.427842      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:08:33.428676      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: get the container status @ 09/04/25 16:08:34.414
  STEP: the container should be terminated @ 09/04/25 16:08:34.419
  STEP: the termination message should be set @ 09/04/25 16:08:34.419
  I0904 16:08:34.419228 23 runtime.go:164] Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 09/04/25 16:08:34.419
  E0904 16:08:34.429372      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:08:34.435183 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-9308" for this suite. @ 09/04/25 16:08:34.439
• [3.082 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pods.go:166
  STEP: Creating a kubernetes client @ 09/04/25 16:08:34.446
  I0904 16:08:34.446244 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename pods @ 09/04/25 16:08:34.446
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 16:08:34.458
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 16:08:34.46
  STEP: creating the pod @ 09/04/25 16:08:34.462
  STEP: submitting the pod to kubernetes @ 09/04/25 16:08:34.462
  STEP: verifying QOS class is set on the pod @ 09/04/25 16:08:34.473
  I0904 16:08:34.475959 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4411" for this suite. @ 09/04/25 16:08:34.54
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:54
  STEP: Creating a kubernetes client @ 09/04/25 16:08:34.546
  I0904 16:08:34.546727 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename dns @ 09/04/25 16:08:34.547
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 16:08:34.558
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 16:08:34.56
  STEP: Running these commands on agnhost: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/agnhost_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 09/04/25 16:08:34.562
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 09/04/25 16:08:34.562
  STEP: creating a pod to probe DNS @ 09/04/25 16:08:34.562
  STEP: submitting the pod to kubernetes @ 09/04/25 16:08:34.562
  E0904 16:08:35.429752      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:08:36.429841      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/04/25 16:08:36.58
  STEP: looking for the results for each expected name from probers @ 09/04/25 16:08:36.582
  I0904 16:08:36.604416 23 dns_common.go:546] DNS probes using dns-6052/dns-test-39173e74-35a2-48fb-aae3-84d5e6bc6e52 succeeded

  STEP: deleting the pod @ 09/04/25 16:08:36.604
  I0904 16:08:36.624195 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-6052" for this suite. @ 09/04/25 16:08:36.627
• [2.088 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:328
  STEP: Creating a kubernetes client @ 09/04/25 16:08:36.634
  I0904 16:08:36.634793 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename webhook @ 09/04/25 16:08:36.635
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 16:08:36.655
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 16:08:36.657
  STEP: Setting up server cert @ 09/04/25 16:08:36.681
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/04/25 16:08:36.812
  STEP: Deploying the webhook pod @ 09/04/25 16:08:36.818
  STEP: Wait for the deployment to be ready @ 09/04/25 16:08:36.83
  I0904 16:08:36.838317 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0904 16:08:37.429981      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:08:38.430087      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/04/25 16:08:38.849
  STEP: Verifying the service has paired with the endpoint @ 09/04/25 16:08:38.863
  E0904 16:08:39.430227      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:08:39.864627 23 util.go:419] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0904 16:08:39.869686 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-8009-5638-crds.webhook.example.com via the AdmissionRegistration API @ 09/04/25 16:08:40.377
  STEP: Creating a custom resource that should be mutated by the webhook @ 09/04/25 16:08:40.391
  E0904 16:08:40.430690      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:08:41.430896      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:08:42.431707      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:08:42.979939 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8009" for this suite. @ 09/04/25 16:08:42.984
  STEP: Destroying namespace "webhook-markers-4817" for this suite. @ 09/04/25 16:08:42.99
• [6.363 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Services should serve multiport endpoints from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:810
  STEP: Creating a kubernetes client @ 09/04/25 16:08:42.998
  I0904 16:08:42.998367 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename services @ 09/04/25 16:08:42.998
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 16:08:43.012
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 16:08:43.014
  STEP: creating service multi-endpoint-test in namespace services-1058 @ 09/04/25 16:08:43.016
  I0904 16:08:43.025859 23 wait.go:65] Waiting for amount of service services-1058/multi-endpoint-test endpoints to be 0
  I0904 16:08:43.030006 23 wait.go:68] Waiting for at least 1 EndpointSlice to exist
  E0904 16:08:43.432636      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: creating pod1 serving port1 @ 09/04/25 16:08:44.033
  STEP: Creating pod pod1 in namespace services-1058 @ 09/04/25 16:08:44.033
  E0904 16:08:44.432742      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:08:45.432998      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:08:46.052041 23 wait.go:139] Waiting for service services-1058/multi-endpoint-test to have endpoints for ports [{portname1  pod1 100}]
  STEP: creating pod2 serving port2 @ 09/04/25 16:08:46.055
  STEP: Creating pod pod2 in namespace services-1058 @ 09/04/25 16:08:46.055
  E0904 16:08:46.433112      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:08:47.433602      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:08:48.070936 23 wait.go:139] Waiting for service services-1058/multi-endpoint-test to have endpoints for ports [{portname1  pod1 100} {portname2  pod2 101}]
  STEP: Checking if the Service forwards traffic to pods @ 09/04/25 16:08:48.074
  I0904 16:08:48.074390 23 resource.go:344] Creating new exec pod
  E0904 16:08:48.434314      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:08:49.434959      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:08:50.091473 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=services-1058 exec execpodpc2lr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  I0904 16:08:50.167613 23 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test (10.152.183.110) 80 port [tcp/http] succeeded!\n"
  I0904 16:08:50.167692 23 builder.go:157] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0904 16:08:50.167804 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=services-1058 exec execpodpc2lr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.110 80'
  I0904 16:08:50.238794 23 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.110 80\nConnection to 10.152.183.110 80 port [tcp/http] succeeded!\n"
  I0904 16:08:50.238834 23 builder.go:157] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0904 16:08:50.238895 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=services-1058 exec execpodpc2lr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  I0904 16:08:50.309878 23 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test (10.152.183.110) 81 port [tcp/*] succeeded!\n"
  I0904 16:08:50.309917 23 builder.go:157] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0904 16:08:50.309986 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=services-1058 exec execpodpc2lr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.110 81'
  I0904 16:08:50.376694 23 builder.go:156] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.110 81\nConnection to 10.152.183.110 81 port [tcp/*] succeeded!\n"
  I0904 16:08:50.376741 23 builder.go:157] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: deleting pod1 serving port1 @ 09/04/25 16:08:50.376
  STEP: Deleting pod pod1 in namespace services-1058 @ 09/04/25 16:08:50.376
  I0904 16:08:50.396156 23 wait.go:139] Waiting for service services-1058/multi-endpoint-test to have endpoints for ports [{portname2  pod2 101}]
  I0904 16:08:50.400645 23 wait.go:169] Unexpected port mappings on slices, missing: [], extra: [{portname1 TCP pod1 100}]
  E0904 16:08:50.435761      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: deleting pod2 serving port2 @ 09/04/25 16:08:51.403
  STEP: Deleting pod pod2 in namespace services-1058 @ 09/04/25 16:08:51.403
  I0904 16:08:51.422558 23 wait.go:65] Waiting for amount of service services-1058/multi-endpoint-test endpoints to be 0
  E0904 16:08:51.436243      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:08:51.504229 23 wait.go:83] Unexpected number of Endpoints on Slices, got 1, expected 0
  E0904 16:08:52.437042      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:08:52.449168 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1058" for this suite. @ 09/04/25 16:08:52.455
• [9.464 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:274
  STEP: Creating a kubernetes client @ 09/04/25 16:08:52.462
  I0904 16:08:52.462246 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename namespaces @ 09/04/25 16:08:52.462
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 16:08:52.473
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 16:08:52.476
  STEP: creating a Namespace @ 09/04/25 16:08:52.478
  STEP: patching the Namespace @ 09/04/25 16:08:52.489
  STEP: get the Namespace and ensuring it has the label @ 09/04/25 16:08:52.495
  I0904 16:08:52.498660 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-3673" for this suite. @ 09/04/25 16:08:52.556
  STEP: Destroying namespace "nspatchtest-53d12848-3031-4771-8c68-d1919897e29d-2596" for this suite. @ 09/04/25 16:08:52.564
• [0.110 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:163
  STEP: Creating a kubernetes client @ 09/04/25 16:08:52.572
  I0904 16:08:52.572164 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename downward-api @ 09/04/25 16:08:52.572
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 16:08:52.582
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 16:08:52.584
  STEP: Creating the pod @ 09/04/25 16:08:52.587
  E0904 16:08:53.437772      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:08:54.437995      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:08:55.138643 23 pod_client.go:186] Successfully updated pod "annotationupdate13d0501f-d70c-4548-a59e-96c62dd64f1a"
  E0904 16:08:55.438622      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:08:56.438735      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:08:57.438805      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:08:58.439021      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:08:59.160329 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5928" for this suite. @ 09/04/25 16:08:59.165
• [6.601 seconds]
------------------------------
S
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:139
  STEP: Creating a kubernetes client @ 09/04/25 16:08:59.173
  I0904 16:08:59.173734 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename configmap @ 09/04/25 16:08:59.174
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 16:08:59.186
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 16:08:59.188
  STEP: Creating configMap that has name configmap-test-emptyKey-3b5c9f20-0a51-411b-8dd8-efc50e40b2df @ 09/04/25 16:08:59.19
  I0904 16:08:59.192324 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6084" for this suite. @ 09/04/25 16:08:59.267
• [0.101 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 09/04/25 16:08:59.275
  I0904 16:08:59.275238 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename secrets @ 09/04/25 16:08:59.275
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 16:08:59.289
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 16:08:59.291
  STEP: Creating secret with name secret-test-b2e262d1-33f5-4231-aeb6-88a758a4d066 @ 09/04/25 16:08:59.293
  STEP: Creating a pod to test consume secrets @ 09/04/25 16:08:59.297
  E0904 16:08:59.439672      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:09:00.439855      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/25 16:09:01.312
  I0904 16:09:01.315889 23 output.go:207] Trying to get logs from node ip-172-31-33-202 pod pod-secrets-f0d20235-16b5-49e2-ae1b-9e7f062b5593 container secret-volume-test: <nil>
  STEP: delete the pod @ 09/04/25 16:09:01.323
  I0904 16:09:01.339494 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3061" for this suite. @ 09/04/25 16:09:01.344
• [2.076 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates pod disruption condition is added to the preempted pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:477
  STEP: Creating a kubernetes client @ 09/04/25 16:09:01.351
  I0904 16:09:01.351446 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename sched-preemption @ 09/04/25 16:09:01.351
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 16:09:01.363
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 16:09:01.367
  I0904 16:09:01.389831 23 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0904 16:09:01.440223      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:09:02.440440      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:09:03.440553      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:09:04.440752      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:09:05.441673      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:09:06.441841      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:09:07.442825      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:09:08.442976      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:09:09.443875      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:09:10.444017      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:09:11.444547      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:09:12.444696      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:09:13.444696      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:09:14.445794      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:09:15.446512      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:09:16.446789      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:09:17.447549      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:09:18.447691      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:09:19.447835      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:09:20.448782      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:09:21.449834      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:09:22.450035      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:09:23.450227      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:09:24.450374      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:09:25.450583      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:09:26.450770      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:09:27.451616      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:09:28.451831      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:09:29.452668      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:09:30.452815      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:09:31.453347      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:09:32.454322      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:09:33.454687      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:09:34.454739      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:09:35.455750      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:09:36.456791      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:09:37.457548      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:09:38.457724      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:09:39.458664      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:09:40.458872      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:09:41.459187      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:09:42.459356      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:09:43.459375      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:09:44.459576      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:09:45.460608      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:09:46.460739      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:09:47.461000      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:09:48.461158      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:09:49.461888      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:09:50.462329      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:09:51.462458      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:09:52.462754      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:09:53.463731      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:09:54.463920      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:09:55.464799      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:09:56.464897      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:09:57.465692      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:09:58.465783      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:09:59.466794      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:10:00.466884      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:10:01.394518 23 util.go:390] Waiting for terminating namespaces to be deleted...
  STEP: Select a node to run the lower and higher priority pods @ 09/04/25 16:10:01.397
  STEP: Adding a custom resource @ 09/04/25 16:10:01.397
  STEP: Create a low priority pod that consumes 1/1 of node resources @ 09/04/25 16:10:01.407
  I0904 16:10:01.417842 23 preemption.go:511] Created pod: victim-pod
  STEP: Wait for the victim pod to be scheduled @ 09/04/25 16:10:01.417
  E0904 16:10:01.467575      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:10:02.467701      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create a high priority pod to trigger preemption of the lower priority pod @ 09/04/25 16:10:03.427
  I0904 16:10:03.432307 23 preemption.go:529] Created pod: preemptor-pod
  STEP: Waiting for the victim pod to be terminating @ 09/04/25 16:10:03.432
  E0904 16:10:03.468122      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:10:04.468219      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Verifying the pod has the pod disruption condition @ 09/04/25 16:10:05.441
  I0904 16:10:05.444501 23 pod_client.go:396] Removing pod's "victim-pod" finalizer: "example.com/test-finalizer"
  E0904 16:10:05.468683      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:10:05.958447 23 pod_client.go:186] Successfully updated pod "victim-pod"
  STEP: Removing a custom resource @ 09/04/25 16:10:05.975
  STEP: Removing a custom resource @ 09/04/25 16:10:05.983
  STEP: Removing a custom resource @ 09/04/25 16:10:05.991
  I0904 16:10:05.998940 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-6722" for this suite. @ 09/04/25 16:10:06.001
• [64.657 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1659
  STEP: Creating a kubernetes client @ 09/04/25 16:10:06.009
  I0904 16:10:06.009183 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename kubectl @ 09/04/25 16:10:06.009
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 16:10:06.022
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 16:10:06.024
  STEP: creating the pod @ 09/04/25 16:10:06.026
  I0904 16:10:06.026436 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=kubectl-1710 create -f -'
  I0904 16:10:06.106924 23 builder.go:156] stderr: ""
  I0904 16:10:06.106961 23 builder.go:157] stdout: "pod/pause created\n"
  E0904 16:10:06.469700      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:10:07.469858      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 09/04/25 16:10:08.114
  I0904 16:10:08.114797 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=kubectl-1710 label pods pause testing-label=testing-label-value'
  I0904 16:10:08.159212 23 builder.go:156] stderr: ""
  I0904 16:10:08.159250 23 builder.go:157] stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 09/04/25 16:10:08.159
  I0904 16:10:08.159310 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=kubectl-1710 get pod pause -L testing-label'
  I0904 16:10:08.194572 23 builder.go:156] stderr: ""
  I0904 16:10:08.194624 23 builder.go:157] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 09/04/25 16:10:08.194
  I0904 16:10:08.194736 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=kubectl-1710 label pods pause testing-label-'
  I0904 16:10:08.236899 23 builder.go:156] stderr: ""
  I0904 16:10:08.236927 23 builder.go:157] stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 09/04/25 16:10:08.236
  I0904 16:10:08.236977 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=kubectl-1710 get pod pause -L testing-label'
  I0904 16:10:08.270990 23 builder.go:156] stderr: ""
  I0904 16:10:08.271017 23 builder.go:157] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    \n"
  STEP: using delete to clean up resources @ 09/04/25 16:10:08.271
  I0904 16:10:08.271175 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=kubectl-1710 delete --grace-period=0 --force -f -'
  I0904 16:10:08.319486 23 builder.go:156] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0904 16:10:08.319513 23 builder.go:157] stdout: "pod \"pause\" force deleted from kubectl-1710 namespace\n"
  I0904 16:10:08.319561 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=kubectl-1710 get rc,svc -l name=pause --no-headers'
  I0904 16:10:08.360377 23 builder.go:156] stderr: "No resources found in kubectl-1710 namespace.\n"
  I0904 16:10:08.360407 23 builder.go:157] stdout: ""
  I0904 16:10:08.360451 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=kubectl-1710 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0904 16:10:08.393437 23 builder.go:156] stderr: ""
  I0904 16:10:08.393484 23 builder.go:157] stdout: ""
  I0904 16:10:08.393605 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1710" for this suite. @ 09/04/25 16:10:08.397
• [2.395 seconds]
------------------------------
S
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:119
  STEP: Creating a kubernetes client @ 09/04/25 16:10:08.403
  I0904 16:10:08.403955 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename emptydir @ 09/04/25 16:10:08.404
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 16:10:08.418
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 16:10:08.42
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 09/04/25 16:10:08.422
  E0904 16:10:08.470771      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:10:09.470992      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/25 16:10:10.437
  I0904 16:10:10.442272 23 output.go:207] Trying to get logs from node ip-172-31-33-202 pod pod-e4281cf3-f66b-4ca5-ba31-2cbacf0dd486 container test-container: <nil>
  STEP: delete the pod @ 09/04/25 16:10:10.45
  I0904 16:10:10.468835 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0904 16:10:10.471366      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Destroying namespace "emptydir-3353" for this suite. @ 09/04/25 16:10:10.471
• [2.074 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 09/04/25 16:10:10.478
  I0904 16:10:10.478360 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename secrets @ 09/04/25 16:10:10.478
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 16:10:10.49
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 16:10:10.492
  STEP: Creating secret with name secret-test-map-262f6fb5-d969-4e80-a0d2-2152b03f832e @ 09/04/25 16:10:10.495
  STEP: Creating a pod to test consume secrets @ 09/04/25 16:10:10.498
  E0904 16:10:11.471976      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:10:12.471980      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:10:13.473037      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:10:14.473164      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/25 16:10:14.517
  I0904 16:10:14.521736 23 output.go:207] Trying to get logs from node ip-172-31-33-202 pod pod-secrets-14fbc09f-04ff-499b-ab94-6bb7ba9fb9ee container secret-volume-test: <nil>
  STEP: delete the pod @ 09/04/25 16:10:14.529
  I0904 16:10:14.548002 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9591" for this suite. @ 09/04/25 16:10:14.551
• [4.079 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:74
  STEP: Creating a kubernetes client @ 09/04/25 16:10:14.557
  I0904 16:10:14.557119 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename projected @ 09/04/25 16:10:14.557
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 16:10:14.569
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 16:10:14.571
  STEP: Creating configMap with name projected-configmap-test-volume-e3d21786-3105-4a2c-9e1c-c5112dceba42 @ 09/04/25 16:10:14.573
  STEP: Creating a pod to test consume configMaps @ 09/04/25 16:10:14.576
  E0904 16:10:15.474062      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:10:16.474274      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:10:17.474758      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:10:18.475816      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/25 16:10:18.596
  I0904 16:10:18.599162 23 output.go:207] Trying to get logs from node ip-172-31-33-202 pod pod-projected-configmaps-7a04e819-f7b4-449f-871c-efe98bbddfd7 container agnhost-container: <nil>
  STEP: delete the pod @ 09/04/25 16:10:18.607
  I0904 16:10:18.623387 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4695" for this suite. @ 09/04/25 16:10:18.628
• [4.079 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:85
  STEP: Creating a kubernetes client @ 09/04/25 16:10:18.636
  I0904 16:10:18.636257 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename resourcequota @ 09/04/25 16:10:18.636
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 16:10:18.647
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 16:10:18.649
  STEP: Counting existing ResourceQuota @ 09/04/25 16:10:18.651
  E0904 16:10:19.476815      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:10:20.477464      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:10:21.477814      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:10:22.477963      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:10:23.478154      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 09/04/25 16:10:23.657
  STEP: Ensuring resource quota status is calculated @ 09/04/25 16:10:23.663
  E0904 16:10:24.478251      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:10:25.478811      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:10:25.671451 23 resource_quota.go:2495] Got expected ResourceQuota:
      <*v1.ResourceQuota | 0xc0016d7b80>: 
          metadata:
            creationTimestamp: "2025-09-04T16:10:23Z"
            managedFields:
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:spec:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: e2e.test
              operation: Update
              time: "2025-09-04T16:10:23Z"
            - apiVersion: v1
              fieldsType: FieldsV1
              fieldsV1:
                f:status:
                  f:hard:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
                  f:used:
                    .: {}
                    f:configmaps: {}
                    f:count/replicasets.apps: {}
                    f:cpu: {}
                    f:ephemeral-storage: {}
                    f:gold.storageclass.storage.k8s.io/persistentvolumeclaims: {}
                    f:gold.storageclass.storage.k8s.io/requests.storage: {}
                    f:memory: {}
                    f:persistentvolumeclaims: {}
                    f:pods: {}
                    f:replicationcontrollers: {}
                    f:requests.example.com/dongle: {}
                    f:requests.storage: {}
                    f:resourcequotas: {}
                    f:secrets: {}
                    f:services: {}
                    f:services.loadbalancers: {}
                    f:services.nodeports: {}
              manager: kube-controller-manager
              operation: Update
              subresource: status
              time: "2025-09-04T16:10:23Z"
            name: test-quota
            namespace: resourcequota-1389
            resourceVersion: "47247"
            uid: f62f5304-9dbb-411c-a1f2-c4d1cf417153
          spec:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
          status:
            hard:
              configmaps: "10"
              count/replicasets.apps: "5"
              cpu: "1"
              ephemeral-storage: 50Gi
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "10"
              gold.storageclass.storage.k8s.io/requests.storage: 10Gi
              memory: 500Mi
              persistentvolumeclaims: "10"
              pods: "5"
              replicationcontrollers: "10"
              requests.example.com/dongle: "3"
              requests.storage: 10Gi
              resourcequotas: "1"
              secrets: "10"
              services: "10"
              services.loadbalancers: "1"
              services.nodeports: "1"
            used:
              configmaps: "1"
              count/replicasets.apps: "0"
              cpu: "0"
              ephemeral-storage: "0"
              gold.storageclass.storage.k8s.io/persistentvolumeclaims: "0"
              gold.storageclass.storage.k8s.io/requests.storage: "0"
              memory: "0"
              persistentvolumeclaims: "0"
              pods: "0"
              replicationcontrollers: "0"
              requests.example.com/dongle: "0"
              requests.storage: "0"
              resourcequotas: "1"
              secrets: "0"
              services: "0"
              services.loadbalancers: "0"
              services.nodeports: "0"
  I0904 16:10:25.671721 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1389" for this suite. @ 09/04/25 16:10:25.675
• [7.047 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:49
  STEP: Creating a kubernetes client @ 09/04/25 16:10:25.683
  I0904 16:10:25.683050 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename container-runtime @ 09/04/25 16:10:25.683
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 16:10:25.695
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 16:10:25.697
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 09/04/25 16:10:25.707
  E0904 16:10:26.478949      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:10:27.479150      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:10:28.479278      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:10:29.479664      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:10:30.480556      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:10:31.480750      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:10:32.481760      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:10:33.482826      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:10:34.483785      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:10:35.483841      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:10:36.483957      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:10:37.484897      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:10:38.484909      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:10:39.485000      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:10:40.485828      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:10:41.485955      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:10:42.486056      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:10:43.486129      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 09/04/25 16:10:43.807
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 09/04/25 16:10:43.81
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 09/04/25 16:10:43.816
  STEP: Container 'terminate-cmd-rpa': should be possible to delete @ 09/04/25 16:10:43.817
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 09/04/25 16:10:43.841
  E0904 16:10:44.486808      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:10:45.487819      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:10:46.488116      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 09/04/25 16:10:46.861
  E0904 16:10:47.488821      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 09/04/25 16:10:47.868
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 09/04/25 16:10:47.874
  STEP: Container 'terminate-cmd-rpof': should be possible to delete @ 09/04/25 16:10:47.874
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 09/04/25 16:10:47.898
  E0904 16:10:48.489816      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 09/04/25 16:10:48.909
  E0904 16:10:49.489951      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:10:50.490070      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 09/04/25 16:10:50.922
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 09/04/25 16:10:50.929
  STEP: Container 'terminate-cmd-rpn': should be possible to delete @ 09/04/25 16:10:50.929
  I0904 16:10:50.958807 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-7107" for this suite. @ 09/04/25 16:10:50.961
• [25.286 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:213
  STEP: Creating a kubernetes client @ 09/04/25 16:10:50.968
  I0904 16:10:50.968945 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename container-runtime @ 09/04/25 16:10:50.969
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 16:10:50.982
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 16:10:50.985
  STEP: create the container @ 09/04/25 16:10:50.986
  I0904 16:10:50.995109      23 warnings.go:110] "Warning: metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]"
  STEP: wait for the container to reach Failed @ 09/04/25 16:10:50.995
  E0904 16:10:51.490145      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:10:52.491155      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:10:53.492253      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: get the container status @ 09/04/25 16:10:54.01
  STEP: the container should be terminated @ 09/04/25 16:10:54.013
  STEP: the termination message should be set @ 09/04/25 16:10:54.013
  I0904 16:10:54.013074 23 runtime.go:164] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 09/04/25 16:10:54.013
  I0904 16:10:54.031438 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-322" for this suite. @ 09/04/25 16:10:54.034
• [3.073 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:159
  STEP: Creating a kubernetes client @ 09/04/25 16:10:54.041
  I0904 16:10:54.041914 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename emptydir @ 09/04/25 16:10:54.042
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 16:10:54.053
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 16:10:54.055
  STEP: Creating a pod to test emptydir volume type on node default medium @ 09/04/25 16:10:54.057
  E0904 16:10:54.492804      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:10:55.492990      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:10:56.493237      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:10:57.493349      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/25 16:10:58.08
  I0904 16:10:58.083481 23 output.go:207] Trying to get logs from node ip-172-31-33-202 pod pod-17e75454-5671-4e01-be20-24a7021ecb8b container test-container: <nil>
  STEP: delete the pod @ 09/04/25 16:10:58.09
  I0904 16:10:58.108824 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8349" for this suite. @ 09/04/25 16:10:58.111
• [4.075 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:338
  STEP: Creating a kubernetes client @ 09/04/25 16:10:58.117
  I0904 16:10:58.117450 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename proxy @ 09/04/25 16:10:58.117
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 16:10:58.128
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 16:10:58.13
  I0904 16:10:58.133115 23 proxy.go:345] Creating pod...
  E0904 16:10:58.493802      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:10:59.493928      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:11:00.152716 23 proxy.go:369] Creating service...
  I0904 16:11:00.161671 23 proxy.go:406] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6521/pods/agnhost/proxy/some/path/with/DELETE
  I0904 16:11:00.168580 23 proxy.go:582] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0904 16:11:00.168624 23 proxy.go:406] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6521/pods/agnhost/proxy/some/path/with/GET
  I0904 16:11:00.172034 23 proxy.go:582] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I0904 16:11:00.172079 23 proxy.go:406] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6521/pods/agnhost/proxy/some/path/with/HEAD
  I0904 16:11:00.175424 23 proxy.go:569] http.Client request:HEAD | StatusCode:200
  I0904 16:11:00.175441 23 proxy.go:406] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6521/pods/agnhost/proxy/some/path/with/OPTIONS
  I0904 16:11:00.180539 23 proxy.go:582] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0904 16:11:00.180559 23 proxy.go:406] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6521/pods/agnhost/proxy/some/path/with/PATCH
  I0904 16:11:00.183788 23 proxy.go:582] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0904 16:11:00.183802 23 proxy.go:406] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6521/pods/agnhost/proxy/some/path/with/POST
  I0904 16:11:00.186496 23 proxy.go:582] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0904 16:11:00.186509 23 proxy.go:406] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6521/pods/agnhost/proxy/some/path/with/PUT
  I0904 16:11:00.191351 23 proxy.go:582] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0904 16:11:00.191371 23 proxy.go:417] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6521/services/test-service/proxy/some/path/with/DELETE
  I0904 16:11:00.197715 23 proxy.go:582] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0904 16:11:00.197736 23 proxy.go:417] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6521/services/test-service/proxy/some/path/with/GET
  I0904 16:11:00.201898 23 proxy.go:582] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I0904 16:11:00.201922 23 proxy.go:417] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6521/services/test-service/proxy/some/path/with/HEAD
  I0904 16:11:00.207298 23 proxy.go:569] http.Client request:HEAD | StatusCode:200
  I0904 16:11:00.207312 23 proxy.go:417] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6521/services/test-service/proxy/some/path/with/OPTIONS
  I0904 16:11:00.213372 23 proxy.go:582] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0904 16:11:00.213407 23 proxy.go:417] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6521/services/test-service/proxy/some/path/with/PATCH
  I0904 16:11:00.216987 23 proxy.go:582] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0904 16:11:00.217002 23 proxy.go:417] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6521/services/test-service/proxy/some/path/with/POST
  I0904 16:11:00.222674 23 proxy.go:582] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0904 16:11:00.222716 23 proxy.go:417] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-6521/services/test-service/proxy/some/path/with/PUT
  I0904 16:11:00.228418 23 proxy.go:582] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0904 16:11:00.228561 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-6521" for this suite. @ 09/04/25 16:11:00.231
• [2.118 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 09/04/25 16:11:00.235
  I0904 16:11:00.235675 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename projected @ 09/04/25 16:11:00.236
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 16:11:00.249
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 16:11:00.25
  STEP: Creating projection with secret that has name projected-secret-test-8b0201c0-4bc2-4283-afa3-2b8eb80df2e9 @ 09/04/25 16:11:00.252
  STEP: Creating a pod to test consume secrets @ 09/04/25 16:11:00.258
  E0904 16:11:00.494210      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:11:01.494322      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:11:02.495232      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:11:03.495320      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/25 16:11:04.28
  I0904 16:11:04.283534 23 output.go:207] Trying to get logs from node ip-172-31-18-79 pod pod-projected-secrets-51fd8705-2760-451c-983b-cff233e15ab3 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/04/25 16:11:04.298
  I0904 16:11:04.316658 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2370" for this suite. @ 09/04/25 16:11:04.319
• [4.090 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:199
  STEP: Creating a kubernetes client @ 09/04/25 16:11:04.325
  I0904 16:11:04.325913 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/04/25 16:11:04.326
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 16:11:04.337
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 16:11:04.339
  STEP: fetching the /apis discovery document @ 09/04/25 16:11:04.341
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 09/04/25 16:11:04.342
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 09/04/25 16:11:04.342
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 09/04/25 16:11:04.342
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 09/04/25 16:11:04.343
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 09/04/25 16:11:04.343
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 09/04/25 16:11:04.344
  I0904 16:11:04.344083 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-1538" for this suite. @ 09/04/25 16:11:04.42
• [0.104 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:105
  STEP: Creating a kubernetes client @ 09/04/25 16:11:04.429
  I0904 16:11:04.429562 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename endpointslice @ 09/04/25 16:11:04.43
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 16:11:04.445
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 16:11:04.447
  I0904 16:11:04.467751      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0904 16:11:04.491024      23 warnings.go:110] "Warning: v1 Endpoints is deprecated in v1.33+; use discovery.k8s.io/v1 EndpointSlice"
  I0904 16:11:04.494481 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0904 16:11:04.495553      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Destroying namespace "endpointslice-3049" for this suite. @ 09/04/25 16:11:04.52
• [0.098 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] VolumeAttachment Conformance should apply changes to a volumeattachment status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/volume_attachment.go:180
  STEP: Creating a kubernetes client @ 09/04/25 16:11:04.527
  I0904 16:11:04.527327 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename volumeattachment @ 09/04/25 16:11:04.527
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 16:11:04.537
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 16:11:04.539
  STEP: Create VolumeAttachment "va-e2e-szh95" on node "ip-172-31-33-202" @ 09/04/25 16:11:04.621
  STEP: Patch VolumeAttachment "va-e2e-szh95" on node "ip-172-31-33-202" @ 09/04/25 16:11:04.625
  STEP: Reading "va-e2e-szh95" Status @ 09/04/25 16:11:04.63
  STEP: Patching "va-e2e-szh95" Status @ 09/04/25 16:11:04.634
  I0904 16:11:04.638441 23 volume_attachment.go:224] "va-e2e-szh95" Status.Attached: true
  STEP: Updating "va-e2e-szh95" Status @ 09/04/25 16:11:04.638
  I0904 16:11:04.646388 23 volume_attachment.go:240] "va-e2e-szh95" Status.Attached: false
  STEP: Delete VolumeAttachment "va-e2e-szh95" on node "ip-172-31-33-202" @ 09/04/25 16:11:04.646
  STEP: Confirm deletion of VolumeAttachment "va-e2e-szh95" on node "ip-172-31-33-202" @ 09/04/25 16:11:04.65
  I0904 16:11:04.654641 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "volumeattachment-757" for this suite. @ 09/04/25 16:11:04.722
• [0.204 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 09/04/25 16:11:04.731
  I0904 16:11:04.731263 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename projected @ 09/04/25 16:11:04.731
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 16:11:04.742
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 16:11:04.746
  STEP: Creating projection with secret that has name projected-secret-test-fe85a7a6-3d26-46bc-8099-e2f1afa94cd7 @ 09/04/25 16:11:04.748
  STEP: Creating a pod to test consume secrets @ 09/04/25 16:11:04.753
  E0904 16:11:05.495751      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:11:06.495831      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:11:07.496817      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:11:08.496898      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/25 16:11:08.778
  I0904 16:11:08.781559 23 output.go:207] Trying to get logs from node ip-172-31-33-202 pod pod-projected-secrets-41c998ad-56b7-44d4-9607-d4890e37ae17 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/04/25 16:11:08.789
  I0904 16:11:08.807085 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6136" for this suite. @ 09/04/25 16:11:08.809
• [4.086 seconds]
------------------------------
[sig-api-machinery] OrderedNamespaceDeletion namespace deletion should delete pod first [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:488
  STEP: Creating a kubernetes client @ 09/04/25 16:11:08.817
  I0904 16:11:08.817025 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename namespacedeletion @ 09/04/25 16:11:08.817
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 16:11:08.828
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 16:11:08.83
  STEP: Creating a test namespace @ 09/04/25 16:11:08.833
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 16:11:08.843
  STEP: Creating a pod with finalizer in the namespace @ 09/04/25 16:11:08.845
  STEP: Waiting for the pod to have running status @ 09/04/25 16:11:08.854
  E0904 16:11:09.497005      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:11:10.497098      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a configmap "test-configmap" in namespace "nsdeletetest-9374" @ 09/04/25 16:11:10.866
  STEP: Deleting the namespace @ 09/04/25 16:11:10.87
  STEP: wait until namespace controller had time to process @ 09/04/25 16:11:10.878
  I0904 16:11:10.880486 23 namespace.go:568] Namespace "nsdeletetest-9374" does not yet have a NamespaceDeletionContentFailure condition, retrying...
  E0904 16:11:11.497241      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:11:12.497318      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:11:12.881724 23 namespace.go:568] Namespace "nsdeletetest-9374" does not yet have a NamespaceDeletionContentFailure condition, retrying...
  E0904 16:11:13.497467      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:11:14.497693      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:11:14.883935 23 namespace.go:568] Namespace "nsdeletetest-9374" does not yet have a NamespaceDeletionContentFailure condition, retrying...
  E0904 16:11:15.498736      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:11:16.498819      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: the pod should be deleted before processing deletion for other resources @ 09/04/25 16:11:16.882
  STEP: Removing finalizer from pod "test-pod" in namespace "nsdeletetest-9374" @ 09/04/25 16:11:16.889
  STEP: Waiting for the pod to not be present in the namespace @ 09/04/25 16:11:16.899
  STEP: Waiting for the namespace to be removed. @ 09/04/25 16:11:16.903
  E0904 16:11:17.498956      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:11:18.499058      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:11:19.499178      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:11:20.499274      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:11:21.500613      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:11:21.907832 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespacedeletion-3148" for this suite. @ 09/04/25 16:11:21.91
  STEP: Destroying namespace "nsdeletetest-9374" for this suite. @ 09/04/25 16:11:21.918
  I0904 16:11:21.921566 23 framework.go:370] Namespace nsdeletetest-9374 was already deleted
• [13.105 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:472
  STEP: Creating a kubernetes client @ 09/04/25 16:11:21.921
  I0904 16:11:21.921973 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename field-validation @ 09/04/25 16:11:21.922
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 16:11:21.933
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 16:11:21.934
  I0904 16:11:21.936905 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  I0904 16:11:21.945841      23 warnings.go:110] "Warning: unrecognized format \"int32\""
  E0904 16:11:22.501005      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:11:23.501215      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:11:24.468602      23 warnings.go:110] "Warning: unknown field \"alpha\""
  I0904 16:11:24.468623      23 warnings.go:110] "Warning: unknown field \"beta\""
  I0904 16:11:24.468628      23 warnings.go:110] "Warning: unknown field \"delta\""
  I0904 16:11:24.468631      23 warnings.go:110] "Warning: unknown field \"epsilon\""
  I0904 16:11:24.468636      23 warnings.go:110] "Warning: unknown field \"gamma\""
  E0904 16:11:24.501750      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:11:25.005583 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-7990" for this suite. @ 09/04/25 16:11:25.008
• [3.096 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate everything except 'skip-me' configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:865
  STEP: Creating a kubernetes client @ 09/04/25 16:11:25.017
  I0904 16:11:25.018009 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename webhook @ 09/04/25 16:11:25.018
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 16:11:25.032
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 16:11:25.035
  STEP: Setting up server cert @ 09/04/25 16:11:25.055
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/04/25 16:11:25.202
  STEP: Deploying the webhook pod @ 09/04/25 16:11:25.21
  STEP: Wait for the deployment to be ready @ 09/04/25 16:11:25.222
  I0904 16:11:25.229970 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0904 16:11:25.502412      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:11:26.502485      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/04/25 16:11:27.238
  STEP: Verifying the service has paired with the endpoint @ 09/04/25 16:11:27.248
  E0904 16:11:27.503251      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:11:28.248961 23 util.go:419] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 09/04/25 16:11:28.255
  STEP: create the configmap with a random name @ 09/04/25 16:11:28.273
  STEP: verify the configmap is mutated @ 09/04/25 16:11:28.284
  STEP: create the configmap with 'skip-me' name @ 09/04/25 16:11:28.284
  I0904 16:11:28.337502 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1961" for this suite. @ 09/04/25 16:11:28.342
  STEP: Destroying namespace "webhook-markers-5479" for this suite. @ 09/04/25 16:11:28.349
• [3.336 seconds]
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1426
  STEP: Creating a kubernetes client @ 09/04/25 16:11:28.353
  I0904 16:11:28.353764 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename kubectl @ 09/04/25 16:11:28.354
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 16:11:28.366
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 16:11:28.369
  I0904 16:11:28.371090 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=kubectl-1256 create -f -'
  I0904 16:11:28.446926 23 builder.go:156] stderr: ""
  I0904 16:11:28.446960 23 builder.go:157] stdout: "replicationcontroller/agnhost-primary created\n"
  I0904 16:11:28.447012 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=kubectl-1256 create -f -'
  E0904 16:11:28.504036      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:11:28.521684 23 builder.go:156] stderr: ""
  I0904 16:11:28.521720 23 builder.go:157] stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 09/04/25 16:11:28.521
  E0904 16:11:29.504747      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:11:29.527649 23 framework.go:697] Selector matched 1 pods for map[app:agnhost]
  I0904 16:11:29.527677 23 framework.go:738] Found 1 / 1
  I0904 16:11:29.527689 23 framework.go:747] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I0904 16:11:29.532264 23 framework.go:697] Selector matched 1 pods for map[app:agnhost]
  I0904 16:11:29.532276 23 framework.go:770] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0904 16:11:29.532334 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=kubectl-1256 describe pod agnhost-primary-72sqf'
  I0904 16:11:29.575054 23 builder.go:156] stderr: ""
  I0904 16:11:29.575112 23 builder.go:157] stdout: "Name:             agnhost-primary-72sqf\nNamespace:        kubectl-1256\nPriority:         0\nService Account:  default\nNode:             ip-172-31-33-202/172.31.33.202\nStart Time:       Thu, 04 Sep 2025 16:11:28 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      <none>\nStatus:           Running\nIP:               192.168.109.68\nIPs:\n  IP:           192.168.109.68\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://cf8276a38cc6d457836e25cd1e4df6264ff908c8807d1a3236f3609dfc1cf797\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.56\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:352a050380078cb2a1c246357a0dfa2fcf243ee416b92ff28b44a01d1b4b0294\n    Port:           6379/TCP (agnhost-server)\n    Host Port:      0/TCP (agnhost-server)\n    State:          Running\n      Started:      Thu, 04 Sep 2025 16:11:28 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-jkj65 (ro)\nConditions:\n  Type                        Status\n  PodReadyToStartContainers   True \n  Initialized                 True \n  Ready                       True \n  ContainersReady             True \n  PodScheduled                True \nVolumes:\n  kube-api-access-jkj65:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    Optional:                false\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  1s    default-scheduler  Successfully assigned kubectl-1256/agnhost-primary-72sqf to ip-172-31-33-202\n  Normal  Pulled     1s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.56\" already present on machine\n  Normal  Created    1s    kubelet            Created container: agnhost-primary\n  Normal  Started    0s    kubelet            Started container agnhost-primary\n"
  I0904 16:11:29.575177 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=kubectl-1256 describe rc agnhost-primary'
  I0904 16:11:29.620369 23 builder.go:156] stderr: ""
  I0904 16:11:29.620411 23 builder.go:157] stdout: "Name:         agnhost-primary\nNamespace:    kubectl-1256\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:         registry.k8s.io/e2e-test-images/agnhost:2.56\n    Port:          6379/TCP (agnhost-server)\n    Host Port:     0/TCP (agnhost-server)\n    Environment:   <none>\n    Mounts:        <none>\n  Volumes:         <none>\n  Node-Selectors:  <none>\n  Tolerations:     <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  1s    replication-controller  Created pod: agnhost-primary-72sqf\n"
  I0904 16:11:29.620465 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=kubectl-1256 describe service agnhost-primary'
  I0904 16:11:29.670016 23 builder.go:156] stderr: ""
  I0904 16:11:29.670055 23 builder.go:157] stdout: "Name:                     agnhost-primary\nNamespace:                kubectl-1256\nLabels:                   app=agnhost\n                          role=primary\nAnnotations:              <none>\nSelector:                 app=agnhost,role=primary\nType:                     ClusterIP\nIP Family Policy:         SingleStack\nIP Families:              IPv4\nIP:                       10.152.183.105\nIPs:                      10.152.183.105\nPort:                     <unset>  6379/TCP\nTargetPort:               agnhost-server/TCP\nEndpoints:                192.168.109.68:6379\nSession Affinity:         None\nInternal Traffic Policy:  Cluster\nEvents:                   <none>\n"
  I0904 16:11:29.673421 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=kubectl-1256 describe node ip-172-31-16-153'
  I0904 16:11:29.724894 23 builder.go:156] stderr: ""
  I0904 16:11:29.724960 23 builder.go:157] stdout: "Name:               ip-172-31-16-153\nRoles:              control-plane\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    juju-application=kubernetes-control-plane\n                    juju-charm=kubernetes-control-plane\n                    juju.io/cloud=ec2\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=ip-172-31-16-153\n                    kubernetes.io/os=linux\n                    node-role.kubernetes.io/control-plane=\n                    topology.kubernetes.io/zone=us-east-1c\nAnnotations:        node.alpha.kubernetes.io/ttl: 0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Thu, 04 Sep 2025 14:19:56 +0000\nTaints:             node-role.kubernetes.io/control-plane:NoSchedule\nUnschedulable:      false\nLease:\n  HolderIdentity:  ip-172-31-16-153\n  AcquireTime:     <unset>\n  RenewTime:       Thu, 04 Sep 2025 16:11:26 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Thu, 04 Sep 2025 14:32:25 +0000   Thu, 04 Sep 2025 14:32:25 +0000   CalicoIsUp                   Calico is running on this node\n  MemoryPressure       False   Thu, 04 Sep 2025 16:09:25 +0000   Thu, 04 Sep 2025 14:19:56 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Thu, 04 Sep 2025 16:09:25 +0000   Thu, 04 Sep 2025 14:19:56 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Thu, 04 Sep 2025 16:09:25 +0000   Thu, 04 Sep 2025 14:19:56 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Thu, 04 Sep 2025 16:09:25 +0000   Thu, 04 Sep 2025 14:20:56 +0000   KubeletReady                 kubelet is posting ready status\nAddresses:\n  InternalIP:  172.31.16.153\n  Hostname:    ip-172-31-16-153\nCapacity:\n  cpu:                2\n  ephemeral-storage:  15159300Ki\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             7967752Ki\n  pods:               110\nAllocatable:\n  cpu:                2\n  ephemeral-storage:  13970810857\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             7865352Ki\n  pods:               110\nSystem Info:\n  Machine ID:                 ec230c666a0f687fcf3c48ce87fa29ab\n  System UUID:                ec230c66-6a0f-687f-cf3c-48ce87fa29ab\n  Boot ID:                    a5c4b7d5-0955-4051-80c0-55109776f223\n  Kernel Version:             6.14.0-1011-aws\n  OS Image:                   Ubuntu 24.04.3 LTS\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  containerd://1.6.38\n  Kubelet Version:            v1.34.0\n  Kube-Proxy Version:         \nNon-terminated Pods:          (3 in total)\n  Namespace                   Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                       ------------  ----------  ---------------  -------------  ---\n  kube-system                 calico-kube-controllers-6d94486ffd-xfvsm                   0 (0%)        0 (0%)      0 (0%)           0 (0%)         99m\n  kube-system                 calico-node-tsb9v                                          250m (12%)    0 (0%)      0 (0%)           0 (0%)         99m\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-56e1dcee030f40d6-hzwqf    0 (0%)        0 (0%)      0 (0%)           0 (0%)         93m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource           Requests    Limits\n  --------           --------    ------\n  cpu                250m (12%)  0 (0%)\n  memory             0 (0%)      0 (0%)\n  ephemeral-storage  0 (0%)      0 (0%)\n  hugepages-1Gi      0 (0%)      0 (0%)\n  hugepages-2Mi      0 (0%)      0 (0%)\nEvents:              <none>\n"
  I0904 16:11:29.725007 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=kubectl-1256 describe namespace kubectl-1256'
  I0904 16:11:29.770753 23 builder.go:156] stderr: ""
  I0904 16:11:29.770790 23 builder.go:157] stdout: "Name:         kubectl-1256\nLabels:       e2e-framework=kubectl\n              e2e-run=816bb44b-d3f9-461b-9a4b-e93592776709\n              kubernetes.io/metadata.name=kubectl-1256\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  I0904 16:11:29.770993 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1256" for this suite. @ 09/04/25 16:11:29.774
• [1.426 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:333
  STEP: Creating a kubernetes client @ 09/04/25 16:11:29.779
  I0904 16:11:29.779881 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename sched-pred @ 09/04/25 16:11:29.78
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 16:11:29.792
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 16:11:29.794
  I0904 16:11:29.796788 23 helper.go:125] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0904 16:11:29.804314 23 util.go:390] Waiting for terminating namespaces to be deleted...
  I0904 16:11:29.806824 23 predicates.go:120] 
  Logging pods the apiserver thinks is on node ip-172-31-18-79 before test
  I0904 16:11:29.812404 23 predicates.go:958] nginx-ingress-controller-kubernetes-worker-th9mz from ingress-nginx-kubernetes-worker started at 2025-09-04 14:25:59 +0000 UTC (1 container statuses recorded)
  I0904 16:11:29.812420 23 predicates.go:960] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0904 16:11:29.812425 23 predicates.go:958] calico-node-hnfqw from kube-system started at 2025-09-04 14:35:51 +0000 UTC (1 container statuses recorded)
  I0904 16:11:29.812430 23 predicates.go:960] 	Container calico-node ready: true, restart count 0
  I0904 16:11:29.812448 23 predicates.go:958] sonobuoy-e2e-job-9fbf261a650c4889 from sonobuoy started at 2025-09-04 14:37:48 +0000 UTC (2 container statuses recorded)
  I0904 16:11:29.812452 23 predicates.go:960] 	Container e2e ready: true, restart count 0
  I0904 16:11:29.812457 23 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0904 16:11:29.812461 23 predicates.go:958] sonobuoy-systemd-logs-daemon-set-56e1dcee030f40d6-xkq28 from sonobuoy started at 2025-09-04 14:37:48 +0000 UTC (2 container statuses recorded)
  I0904 16:11:29.812465 23 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0904 16:11:29.812472 23 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  I0904 16:11:29.812475 23 predicates.go:120] 
  Logging pods the apiserver thinks is on node ip-172-31-33-202 before test
  I0904 16:11:29.814978 23 predicates.go:958] nginx-ingress-controller-kubernetes-worker-nbsd4 from ingress-nginx-kubernetes-worker started at 2025-09-04 15:56:46 +0000 UTC (1 container statuses recorded)
  I0904 16:11:29.814991 23 predicates.go:960] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0904 16:11:29.814997 23 predicates.go:958] calico-node-q8qbr from kube-system started at 2025-09-04 14:33:35 +0000 UTC (1 container statuses recorded)
  I0904 16:11:29.815001 23 predicates.go:960] 	Container calico-node ready: true, restart count 0
  I0904 16:11:29.815005 23 predicates.go:958] agnhost-primary-72sqf from kubectl-1256 started at 2025-09-04 16:11:28 +0000 UTC (1 container statuses recorded)
  I0904 16:11:29.815009 23 predicates.go:960] 	Container agnhost-primary ready: true, restart count 0
  I0904 16:11:29.815013 23 predicates.go:958] sonobuoy from sonobuoy started at 2025-09-04 14:37:46 +0000 UTC (1 container statuses recorded)
  I0904 16:11:29.815016 23 predicates.go:960] 	Container kube-sonobuoy ready: true, restart count 0
  I0904 16:11:29.815021 23 predicates.go:958] sonobuoy-systemd-logs-daemon-set-56e1dcee030f40d6-sq6h5 from sonobuoy started at 2025-09-04 14:37:48 +0000 UTC (2 container statuses recorded)
  I0904 16:11:29.815024 23 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0904 16:11:29.815028 23 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  I0904 16:11:29.815032 23 predicates.go:120] 
  Logging pods the apiserver thinks is on node ip-172-31-87-111 before test
  I0904 16:11:29.817559 23 predicates.go:958] nginx-ingress-controller-kubernetes-worker-thhq5 from ingress-nginx-kubernetes-worker started at 2025-09-04 14:21:14 +0000 UTC (1 container statuses recorded)
  I0904 16:11:29.817570 23 predicates.go:960] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I0904 16:11:29.817575 23 predicates.go:958] calico-node-z98vv from kube-system started at 2025-09-04 14:34:13 +0000 UTC (1 container statuses recorded)
  I0904 16:11:29.817579 23 predicates.go:960] 	Container calico-node ready: true, restart count 0
  I0904 16:11:29.817583 23 predicates.go:958] coredns-6bb7467dc9-q25dk from kube-system started at 2025-09-04 14:21:14 +0000 UTC (1 container statuses recorded)
  I0904 16:11:29.817603 23 predicates.go:960] 	Container coredns ready: true, restart count 0
  I0904 16:11:29.817607 23 predicates.go:958] kube-state-metrics-67d58dfcdd-wb9tq from kube-system started at 2025-09-04 14:21:14 +0000 UTC (1 container statuses recorded)
  I0904 16:11:29.817611 23 predicates.go:960] 	Container kube-state-metrics ready: true, restart count 2
  I0904 16:11:29.817616 23 predicates.go:958] metrics-server-v0.7.2-847d5645c8-dxxpg from kube-system started at 2025-09-04 14:21:14 +0000 UTC (2 container statuses recorded)
  I0904 16:11:29.817621 23 predicates.go:960] 	Container metrics-server ready: true, restart count 0
  I0904 16:11:29.817624 23 predicates.go:960] 	Container metrics-server-nanny ready: true, restart count 0
  I0904 16:11:29.817628 23 predicates.go:958] dashboard-metrics-scraper-55dc6fc9df-bxgsr from kubernetes-dashboard started at 2025-09-04 14:21:14 +0000 UTC (1 container statuses recorded)
  I0904 16:11:29.817673 23 predicates.go:960] 	Container dashboard-metrics-scraper ready: true, restart count 0
  I0904 16:11:29.817680 23 predicates.go:958] kubernetes-dashboard-847cf64d65-kmws8 from kubernetes-dashboard started at 2025-09-04 14:21:14 +0000 UTC (1 container statuses recorded)
  I0904 16:11:29.817684 23 predicates.go:960] 	Container kubernetes-dashboard ready: true, restart count 3
  I0904 16:11:29.817688 23 predicates.go:958] sonobuoy-systemd-logs-daemon-set-56e1dcee030f40d6-zthcb from sonobuoy started at 2025-09-04 14:37:48 +0000 UTC (2 container statuses recorded)
  I0904 16:11:29.817692 23 predicates.go:960] 	Container sonobuoy-worker ready: true, restart count 0
  I0904 16:11:29.817695 23 predicates.go:960] 	Container systemd-logs ready: true, restart count 0
  STEP: verifying the node has the label node ip-172-31-18-79 @ 09/04/25 16:11:29.83
  STEP: verifying the node has the label node ip-172-31-33-202 @ 09/04/25 16:11:29.842
  STEP: verifying the node has the label node ip-172-31-87-111 @ 09/04/25 16:11:29.853
  I0904 16:11:29.914357 23 predicates.go:373] Pod nginx-ingress-controller-kubernetes-worker-nbsd4 requesting resource cpu=0m on Node ip-172-31-33-202
  I0904 16:11:29.914384 23 predicates.go:373] Pod nginx-ingress-controller-kubernetes-worker-th9mz requesting resource cpu=0m on Node ip-172-31-18-79
  I0904 16:11:29.914389 23 predicates.go:373] Pod nginx-ingress-controller-kubernetes-worker-thhq5 requesting resource cpu=0m on Node ip-172-31-87-111
  I0904 16:11:29.914393 23 predicates.go:373] Pod calico-node-hnfqw requesting resource cpu=250m on Node ip-172-31-18-79
  I0904 16:11:29.914397 23 predicates.go:373] Pod calico-node-q8qbr requesting resource cpu=250m on Node ip-172-31-33-202
  I0904 16:11:29.914402 23 predicates.go:373] Pod calico-node-z98vv requesting resource cpu=250m on Node ip-172-31-87-111
  I0904 16:11:29.914406 23 predicates.go:373] Pod coredns-6bb7467dc9-q25dk requesting resource cpu=100m on Node ip-172-31-87-111
  I0904 16:11:29.914410 23 predicates.go:373] Pod kube-state-metrics-67d58dfcdd-wb9tq requesting resource cpu=0m on Node ip-172-31-87-111
  I0904 16:11:29.914414 23 predicates.go:373] Pod metrics-server-v0.7.2-847d5645c8-dxxpg requesting resource cpu=5m on Node ip-172-31-87-111
  I0904 16:11:29.914419 23 predicates.go:373] Pod agnhost-primary-72sqf requesting resource cpu=0m on Node ip-172-31-33-202
  I0904 16:11:29.914422 23 predicates.go:373] Pod dashboard-metrics-scraper-55dc6fc9df-bxgsr requesting resource cpu=0m on Node ip-172-31-87-111
  I0904 16:11:29.914426 23 predicates.go:373] Pod kubernetes-dashboard-847cf64d65-kmws8 requesting resource cpu=0m on Node ip-172-31-87-111
  I0904 16:11:29.914429 23 predicates.go:373] Pod sonobuoy requesting resource cpu=0m on Node ip-172-31-33-202
  I0904 16:11:29.914433 23 predicates.go:373] Pod sonobuoy-e2e-job-9fbf261a650c4889 requesting resource cpu=0m on Node ip-172-31-18-79
  I0904 16:11:29.914436 23 predicates.go:373] Pod sonobuoy-systemd-logs-daemon-set-56e1dcee030f40d6-sq6h5 requesting resource cpu=0m on Node ip-172-31-33-202
  I0904 16:11:29.914440 23 predicates.go:373] Pod sonobuoy-systemd-logs-daemon-set-56e1dcee030f40d6-xkq28 requesting resource cpu=0m on Node ip-172-31-18-79
  I0904 16:11:29.914444 23 predicates.go:373] Pod sonobuoy-systemd-logs-daemon-set-56e1dcee030f40d6-zthcb requesting resource cpu=0m on Node ip-172-31-87-111
  STEP: Starting Pods to consume most of the cluster CPU. @ 09/04/25 16:11:29.914
  I0904 16:11:29.914473 23 predicates.go:383] Creating a pod which consumes cpu=1225m on Node ip-172-31-18-79
  I0904 16:11:29.922151 23 predicates.go:383] Creating a pod which consumes cpu=1225m on Node ip-172-31-33-202
  I0904 16:11:29.932161 23 predicates.go:383] Creating a pod which consumes cpu=1151m on Node ip-172-31-87-111
  E0904 16:11:30.504828      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:11:31.504945      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating another pod that requires unavailable amount of CPU. @ 09/04/25 16:11:31.956
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-49c75cbd-aca3-4448-9d4e-1f956f7ca8e1.1862204610bf19d3], Reason = [Scheduled], Message = [Successfully assigned sched-pred-6455/filler-pod-49c75cbd-aca3-4448-9d4e-1f956f7ca8e1 to ip-172-31-18-79] @ 09/04/25 16:11:31.96
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-49c75cbd-aca3-4448-9d4e-1f956f7ca8e1.186220462d558ff4], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10.1" already present on machine] @ 09/04/25 16:11:31.96
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-49c75cbd-aca3-4448-9d4e-1f956f7ca8e1.186220462eadcafa], Reason = [Created], Message = [Created container: filler-pod-49c75cbd-aca3-4448-9d4e-1f956f7ca8e1] @ 09/04/25 16:11:31.96
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-49c75cbd-aca3-4448-9d4e-1f956f7ca8e1.186220463120791e], Reason = [Started], Message = [Started container filler-pod-49c75cbd-aca3-4448-9d4e-1f956f7ca8e1] @ 09/04/25 16:11:31.96
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-767cf7c6-b98a-4f20-9b3f-23af6d37ac79.1862204611ae7d26], Reason = [Scheduled], Message = [Successfully assigned sched-pred-6455/filler-pod-767cf7c6-b98a-4f20-9b3f-23af6d37ac79 to ip-172-31-87-111] @ 09/04/25 16:11:31.96
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-767cf7c6-b98a-4f20-9b3f-23af6d37ac79.186220462e658b7b], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10.1" already present on machine] @ 09/04/25 16:11:31.96
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-767cf7c6-b98a-4f20-9b3f-23af6d37ac79.186220462fd52439], Reason = [Created], Message = [Created container: filler-pod-767cf7c6-b98a-4f20-9b3f-23af6d37ac79] @ 09/04/25 16:11:31.96
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-767cf7c6-b98a-4f20-9b3f-23af6d37ac79.18622046320f0fbd], Reason = [Started], Message = [Started container filler-pod-767cf7c6-b98a-4f20-9b3f-23af6d37ac79] @ 09/04/25 16:11:31.96
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-916ea4ee-89c1-4878-bd0d-fb2c758496cf.186220461134d2e5], Reason = [Scheduled], Message = [Successfully assigned sched-pred-6455/filler-pod-916ea4ee-89c1-4878-bd0d-fb2c758496cf to ip-172-31-33-202] @ 09/04/25 16:11:31.96
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-916ea4ee-89c1-4878-bd0d-fb2c758496cf.186220462dda749a], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10.1" already present on machine] @ 09/04/25 16:11:31.96
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-916ea4ee-89c1-4878-bd0d-fb2c758496cf.186220462f1dcb30], Reason = [Created], Message = [Created container: filler-pod-916ea4ee-89c1-4878-bd0d-fb2c758496cf] @ 09/04/25 16:11:31.96
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-916ea4ee-89c1-4878-bd0d-fb2c758496cf.18622046318fd26e], Reason = [Started], Message = [Started container filler-pod-916ea4ee-89c1-4878-bd0d-fb2c758496cf] @ 09/04/25 16:11:31.96
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.186220468a744225], Reason = [FailedScheduling], Message = [0/5 nodes are available: 2 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 3 Insufficient cpu. no new claims to deallocate, preemption: 0/5 nodes are available: 2 Preemption is not helpful for scheduling, 3 No preemption victims found for incoming pod.] @ 09/04/25 16:11:31.977
  E0904 16:11:32.505051      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: removing the label node off the node ip-172-31-18-79 @ 09/04/25 16:11:32.977
  STEP: verifying the node doesn't have the label node @ 09/04/25 16:11:32.989
  STEP: removing the label node off the node ip-172-31-33-202 @ 09/04/25 16:11:32.991
  STEP: verifying the node doesn't have the label node @ 09/04/25 16:11:33.004
  STEP: removing the label node off the node ip-172-31-87-111 @ 09/04/25 16:11:33.006
  STEP: verifying the node doesn't have the label node @ 09/04/25 16:11:33.017
  I0904 16:11:33.019839 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-6455" for this suite. @ 09/04/25 16:11:33.022
• [3.247 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:144
  STEP: Creating a kubernetes client @ 09/04/25 16:11:33.026
  I0904 16:11:33.026811 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename replicaset @ 09/04/25 16:11:33.027
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 16:11:33.038
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 16:11:33.04
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 09/04/25 16:11:33.043
  I0904 16:11:33.057927 23 resource.go:64] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/04/25 16:11:33.057
  E0904 16:11:33.505812      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:11:34.505896      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: getting scale subresource @ 09/04/25 16:11:35.068
  STEP: updating a scale subresource @ 09/04/25 16:11:35.07
  STEP: verifying the replicaset Spec.Replicas was modified @ 09/04/25 16:11:35.078
  STEP: Patch a scale subresource @ 09/04/25 16:11:35.08
  I0904 16:11:35.092212 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-8410" for this suite. @ 09/04/25 16:11:35.099
• [2.078 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 09/04/25 16:11:35.104
  I0904 16:11:35.104674 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename pods @ 09/04/25 16:11:35.105
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 16:11:35.118
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 16:11:35.12
  STEP: creating the pod @ 09/04/25 16:11:35.122
  STEP: submitting the pod to kubernetes @ 09/04/25 16:11:35.122
  I0904 16:11:35.131694      23 warnings.go:110] "Warning: metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]"
  E0904 16:11:35.506848      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:11:36.507828      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 09/04/25 16:11:37.144
  STEP: updating the pod @ 09/04/25 16:11:37.148
  E0904 16:11:37.508093      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:11:37.662661 23 pod_client.go:186] Successfully updated pod "pod-update-activedeadlineseconds-cd81827f-c7a2-4a8e-855a-e1294d36bd16"
  E0904 16:11:38.508503      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:11:39.508782      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:11:40.508886      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:11:41.509078      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:11:41.674074 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9892" for this suite. @ 09/04/25 16:11:41.677
• [6.579 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update mutating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:762
  STEP: Creating a kubernetes client @ 09/04/25 16:11:41.683
  I0904 16:11:41.683759 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename webhook @ 09/04/25 16:11:41.684
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 16:11:41.696
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 16:11:41.698
  STEP: Setting up server cert @ 09/04/25 16:11:41.717
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/04/25 16:11:41.949
  STEP: Deploying the webhook pod @ 09/04/25 16:11:41.955
  STEP: Wait for the deployment to be ready @ 09/04/25 16:11:41.969
  I0904 16:11:41.977546 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0904 16:11:42.509153      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:11:43.509249      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/04/25 16:11:43.988
  STEP: Verifying the service has paired with the endpoint @ 09/04/25 16:11:43.999
  E0904 16:11:44.509730      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:11:45.000065 23 util.go:419] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 09/04/25 16:11:45.005
  STEP: verifying the mutating webhook match conditions @ 09/04/25 16:11:45.015
  STEP: updating the mutating webhook match conditions @ 09/04/25 16:11:45.019
  STEP: verifying the mutating webhook match conditions @ 09/04/25 16:11:45.031
  I0904 16:11:45.079140 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6836" for this suite. @ 09/04/25 16:11:45.083
  STEP: Destroying namespace "webhook-markers-8251" for this suite. @ 09/04/25 16:11:45.09
• [3.412 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] RuntimeClass should support RuntimeClasses API operations [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:194
  STEP: Creating a kubernetes client @ 09/04/25 16:11:45.095
  I0904 16:11:45.095853 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename runtimeclass @ 09/04/25 16:11:45.096
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 16:11:45.111
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 16:11:45.113
  STEP: getting /apis @ 09/04/25 16:11:45.115
  STEP: getting /apis/node.k8s.io @ 09/04/25 16:11:45.117
  STEP: getting /apis/node.k8s.io/v1 @ 09/04/25 16:11:45.118
  STEP: creating @ 09/04/25 16:11:45.119
  STEP: watching @ 09/04/25 16:11:45.133
  I0904 16:11:45.133891 23 runtimeclass.go:278] starting watch
  STEP: getting @ 09/04/25 16:11:45.138
  STEP: listing @ 09/04/25 16:11:45.142
  STEP: patching @ 09/04/25 16:11:45.144
  STEP: updating @ 09/04/25 16:11:45.149
  I0904 16:11:45.154832 23 runtimeclass.go:308] waiting for watch events with expected annotations
  STEP: deleting @ 09/04/25 16:11:45.154
  STEP: deleting a collection @ 09/04/25 16:11:45.165
  I0904 16:11:45.180685 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-5939" for this suite. @ 09/04/25 16:11:45.184
• [0.093 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance] [sig-architecture, Conformance]
k8s.io/kubernetes/test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 09/04/25 16:11:45.188
  I0904 16:11:45.188914 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename conformance-tests @ 09/04/25 16:11:45.189
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 16:11:45.199
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 16:11:45.201
  STEP: Getting node addresses @ 09/04/25 16:11:45.204
  I0904 16:11:45.204073 23 helper.go:51] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  I0904 16:11:45.287352 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-3015" for this suite. @ 09/04/25 16:11:45.294
• [0.117 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 09/04/25 16:11:45.308
  I0904 16:11:45.308454 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename deployment @ 09/04/25 16:11:45.309
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 16:11:45.323
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 16:11:45.325
  I0904 16:11:45.327340 23 deployment.go:798] Creating deployment "test-recreate-deployment"
  I0904 16:11:45.332753 23 deployment.go:804] Waiting deployment "test-recreate-deployment" to be updated to revision 1
  I0904 16:11:45.340625 23 deployment.go:223] deployment "test-recreate-deployment" doesn't have the required revision set
  E0904 16:11:45.509788      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:11:46.510022      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:11:47.349025 23 deployment.go:808] Waiting deployment "test-recreate-deployment" to complete
  I0904 16:11:47.351531 23 deployment.go:813] Triggering a new rollout for deployment "test-recreate-deployment"
  I0904 16:11:47.361359 23 deployment.go:314] Updating deployment test-recreate-deployment
  I0904 16:11:47.361383 23 deployment.go:820] Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  I0904 16:11:47.459270 23 deployment.go:632] Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7367",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2b34e1a0-0e3e-4705-a112-7aeda1b4989f",
      ResourceVersion: (string) (len=5) "48299",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892599105,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892599107,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892599107,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          HostnameOverride: (*string)(<nil>)
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      TerminatingReplicas: (*int32)(<nil>),
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892599107,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892599107,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892599107,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892599105,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=64) "ReplicaSet \"test-recreate-deployment-68d5bd4dd9\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0904 16:11:47.466366 23 deployment.go:40] New ReplicaSet "test-recreate-deployment-68d5bd4dd9" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-68d5bd4dd9",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7367",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0095bcb7-97f7-4a5a-9a2c-35259a734ebd",
      ResourceVersion: (string) (len=5) "48297",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892599107,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "68d5bd4dd9"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "2b34e1a0-0e3e-4705-a112-7aeda1b4989f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892599107,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 32 62 33 34 65 31  61 30 2d 30 65 33 65 2d  |\"2b34e1a0-0e3e-|
              00000120  34 37 30 35 2d 61 31 31  32 2d 37 61 65 64 61 31  |4705-a112-7aeda1|
              00000130  62 34 39 38 39 66 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |b4989f\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892599107,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=10) "68d5bd4dd9"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=10) "68d5bd4dd9"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          HostnameOverride: (*string)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0904 16:11:47.466775 23 deployment.go:45] All old ReplicaSets of Deployment "test-recreate-deployment":
  I0904 16:11:47.466982 23 deployment.go:48] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-8574476ffd",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7367",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f0956dcf-37e2-4c33-b47c-7b54ebb9a7c7",
      ResourceVersion: (string) (len=5) "48286",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892599105,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "8574476ffd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "2b34e1a0-0e3e-4705-a112-7aeda1b4989f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892599107,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 32 62 33 34 65 31  61 30 2d 30 65 33 65 2d  |\"2b34e1a0-0e3e-|
              00000120  34 37 30 35 2d 61 31 31  32 2d 37 61 65 64 61 31  |4705-a112-7aeda1|
              00000130  62 34 39 38 39 66 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |b4989f\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892599107,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=10) "8574476ffd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=10) "8574476ffd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.56",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
            SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          HostnameOverride: (*string)(<nil>)
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      TerminatingReplicas: (*int32)(<nil>),
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0904 16:11:47.474511 23 deployment.go:68] Pod "test-recreate-deployment-68d5bd4dd9-rsmh2" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-recreate-deployment-68d5bd4dd9-rsmh2",
      GenerateName: (string) (len=36) "test-recreate-deployment-68d5bd4dd9-",
      Namespace: (string) (len=15) "deployment-7367",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1beb2a8a-97fe-4afa-acb7-062c98d0fdff",
      ResourceVersion: (string) (len=5) "48298",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892599107,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "68d5bd4dd9"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-recreate-deployment-68d5bd4dd9",
          UID: (types.UID) (len=36) "0095bcb7-97f7-4a5a-9a2c-35259a734ebd",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892599107,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 30  39 35 62 63 62 37 2d 39  |d\":\"0095bcb7-9|
              00000090  37 66 37 2d 34 61 35 61  2d 39 61 32 63 2d 33 35  |7f7-4a5a-9a2c-35|
              000000a0  32 35 39 61 37 33 34 65  62 64 5c 22 7d 22 3a 7b  |259a734ebd\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892599107,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=814) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 6f 62 73 65 72 76 65  |e":{},"f:observe|
              00000090  64 47 65 6e 65 72 61 74  69 6f 6e 22 3a 7b 7d 2c  |dGeneration":{},|
              000000a0  22 66 3a 72 65 61 73 6f  6e 22 3a 7b 7d 2c 22 66  |"f:reason":{},"f|
              000000b0  3a 73 74 61 74 75 73 22  3a 7b 7d 2c 22 66 3a 74  |:status":{},"f:t|
              000000c0  79 70 65 22 3a 7b 7d 7d  2c 22 6b 3a 7b 5c 22 74  |ype":{}},"k:{\"t|
              000000d0  79 70 65 5c 22 3a 5c 22  49 6e 69 74 69 61 6c 69  |ype\":\"Initiali|
              000000e0  7a 65 64 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |zed\"}":{".":{},|
              000000f0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              00000110  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              00000120  66 3a 6f 62 73 65 72 76  65 64 47 65 6e 65 72 61  |f:observedGenera|
              00000130  74 69 6f 6e 22 3a 7b 7d  2c 22 66 3a 73 74 61 74  |tion":{},"f:stat|
              00000140  75 73 22 3a 7b 7d 2c 22  66 3a 74 79 70 65 22 3a  |us":{},"f:type":|
              00000150  7b 7d 7d 2c 22 6b 3a 7b  5c 22 74 79 70 65 5c 22  |{}},"k:{\"type\"|
              00000160  3a 5c 22 50 6f 64 52 65  61 64 79 54 6f 53 74 61  |:\"PodReadyToSta|
              00000170  72 74 43 6f 6e 74 61 69  6e 65 72 73 5c 22 7d 22  |rtContainers\"}"|
              00000180  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000190  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000001a0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |ime":{},"f:obser|
              000001c0  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 2c 22 6b 3a  |"f:type":{}},"k:|
              000001f0  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 50 6f 64 53  |{\"type\":\"PodS|
              00000200  63 68 65 64 75 6c 65 64  5c 22 7d 22 3a 7b 22 66  |cheduled\"}":{"f|
              00000210  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000220  69 6f 6e 22 3a 7b 7d 7d  2c 22 6b 3a 7b 5c 22 74  |ion":{}},"k:{\"t|
              00000230  79 70 65 5c 22 3a 5c 22  52 65 61 64 79 5c 22 7d  |ype\":\"Ready\"}|
              00000240  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              00000250  74 50 72 6f 62 65 54 69  6d 65 22 3a 7b 7d 2c 22  |tProbeTime":{},"|
              00000260  66 3a 6c 61 73 74 54 72  61 6e 73 69 74 69 6f 6e  |f:lastTransition|
              00000270  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000280  61 67 65 22 3a 7b 7d 2c  22 66 3a 6f 62 73 65 72  |age":{},"f:obser|
              00000290  76 65 64 47 65 6e 65 72  61 74 69 6f 6e 22 3a 7b  |vedGeneration":{|
              000002a0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              000002b0  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              000002c0  3a 74 79 70 65 22 3a 7b  7d 7d 7d 2c 22 66 3a 63  |:type":{}}},"f:c|
              000002d0  6f 6e 74 61 69 6e 65 72  53 74 61 74 75 73 65 73  |ontainerStatuses|
              000002e0  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 22 3a  |":{},"f:hostIP":|
              000002f0  7b 7d 2c 22 66 3a 68 6f  73 74 49 50 73 22 3a 7b  |{},"f:hostIPs":{|
              00000300  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000310  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |eration":{},"f:s|
              00000320  74 61 72 74 54 69 6d 65  22 3a 7b 7d 7d 7d        |tartTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fbhcn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>),
                  PodCertificate: (*v1.PodCertificateProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          RestartPolicyRules: ([]v1.ContainerRestartRule) <nil>,
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fbhcn",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-33-202",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>),
        SELinuxChangePolicy: (*v1.PodSELinuxChangePolicy)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>,
      Resources: (*v1.ResourceRequirements)(<nil>),
      HostnameOverride: (*string)(<nil>)
    },
    Status: (v1.PodStatus) {
      ObservedGeneration: (int64) 1,
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892599107,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892599107,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892599107,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892599107,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          ObservedGeneration: (int64) 1,
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63892599107,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.33.202",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.33.202"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63892599107,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-fbhcn",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>,
          StopSignal: (*v1.Signal)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>,
      ExtendedResourceClaimStatus: (*v1.PodExtendedResourceClaimStatus)(<nil>)
    }
  }

  I0904 16:11:47.475480 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-7367" for this suite. @ 09/04/25 16:11:47.479
• [2.177 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1400
  STEP: Creating a kubernetes client @ 09/04/25 16:11:47.485
  I0904 16:11:47.485844 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename kubectl @ 09/04/25 16:11:47.486
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 16:11:47.5
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 16:11:47.502
  STEP: validating cluster-info @ 09/04/25 16:11:47.503
  I0904 16:11:47.504013 23 builder.go:130] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=kubectl-3930 cluster-info'
  E0904 16:11:47.510811      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:11:47.540244 23 builder.go:156] stderr: ""
  I0904 16:11:47.540268 23 builder.go:157] stdout: "Kubernetes control plane is running at https://10.152.183.1:443\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  I0904 16:11:47.540432 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3930" for this suite. @ 09/04/25 16:11:47.58
• [0.101 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:57
  STEP: Creating a kubernetes client @ 09/04/25 16:11:47.586
  I0904 16:11:47.586869 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename projected @ 09/04/25 16:11:47.587
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 16:11:47.598
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 16:11:47.6
  STEP: Creating configMap with name projected-configmap-test-volume-4d067dd2-e42f-47bb-9014-ea3026557ea3 @ 09/04/25 16:11:47.602
  STEP: Creating a pod to test consume configMaps @ 09/04/25 16:11:47.609
  E0904 16:11:48.510726      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:11:49.510946      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/25 16:11:49.632
  I0904 16:11:49.637121 23 output.go:207] Trying to get logs from node ip-172-31-33-202 pod pod-projected-configmaps-bf76ed00-d0f2-44ce-a3c8-2d03e6f19c7a container agnhost-container: <nil>
  STEP: delete the pod @ 09/04/25 16:11:49.645
  I0904 16:11:49.663943 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-383" for this suite. @ 09/04/25 16:11:49.667
• [2.088 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 09/04/25 16:11:49.675
  I0904 16:11:49.675192 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename daemonsets @ 09/04/25 16:11:49.675
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 16:11:49.686
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 16:11:49.688
  STEP: Creating simple DaemonSet "daemon-set" @ 09/04/25 16:11:49.779
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/04/25 16:11:49.786
  I0904 16:11:49.868784 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-16-153 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0904 16:11:49.868824 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-81-110 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0904 16:11:49.873357 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0904 16:11:49.873376 23 fixtures.go:131] Node ip-172-31-18-79 is running 0 daemon pod, expected 1
  E0904 16:11:50.511073      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:11:50.791035 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-16-153 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0904 16:11:50.791092 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-81-110 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0904 16:11:50.795001 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0904 16:11:50.795020 23 fixtures.go:131] Node ip-172-31-33-202 is running 0 daemon pod, expected 1
  E0904 16:11:51.511756      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:11:51.791454 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-16-153 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0904 16:11:51.791498 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-81-110 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0904 16:11:51.795170 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0904 16:11:51.795189 23 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 09/04/25 16:11:51.797
  I0904 16:11:51.892646 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-16-153 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0904 16:11:51.892693 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-81-110 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0904 16:11:51.898392 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0904 16:11:51.898426 23 fixtures.go:131] Node ip-172-31-18-79 is running 0 daemon pod, expected 1
  E0904 16:11:52.512838      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:11:52.813293 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-16-153 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0904 16:11:52.813497 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-81-110 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0904 16:11:52.819158 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0904 16:11:52.819206 23 fixtures.go:131] Node ip-172-31-18-79 is running 0 daemon pod, expected 1
  E0904 16:11:53.512921      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:11:53.814280 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-16-153 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0904 16:11:53.814316 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-81-110 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0904 16:11:53.818202 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0904 16:11:53.818218 23 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 09/04/25 16:11:53.82
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-3414, will wait for the garbage collector to delete the pods @ 09/04/25 16:11:53.82
  I0904 16:11:53.880716 23 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 7.943286ms
  I0904 16:11:53.981536 23 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.815271ms
  E0904 16:11:54.513657      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:11:55.514190      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:11:56.514716      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:11:56.686168 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0904 16:11:56.686204 23 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0904 16:11:56.689495 23 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"48521"},"items":null}

  I0904 16:11:56.691496 23 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"48521"},"items":null}

  I0904 16:11:56.703756 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-3414" for this suite. @ 09/04/25 16:11:56.706
• [7.038 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:126
  STEP: Creating a kubernetes client @ 09/04/25 16:11:56.713
  I0904 16:11:56.713342 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename discovery @ 09/04/25 16:11:56.713
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 16:11:56.726
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 16:11:56.729
  STEP: Setting up server cert @ 09/04/25 16:11:56.732
  I0904 16:11:57.030395 23 discovery.go:139] Checking APIGroup: apiregistration.k8s.io
  I0904 16:11:57.031224 23 discovery.go:147] PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  I0904 16:11:57.031243 23 discovery.go:148] Versions found [{apiregistration.k8s.io/v1 v1}]
  I0904 16:11:57.031249 23 discovery.go:154] apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  I0904 16:11:57.031254 23 discovery.go:139] Checking APIGroup: apps
  I0904 16:11:57.032134 23 discovery.go:147] PreferredVersion.GroupVersion: apps/v1
  I0904 16:11:57.032145 23 discovery.go:148] Versions found [{apps/v1 v1}]
  I0904 16:11:57.032151 23 discovery.go:154] apps/v1 matches apps/v1
  I0904 16:11:57.032156 23 discovery.go:139] Checking APIGroup: events.k8s.io
  I0904 16:11:57.032944 23 discovery.go:147] PreferredVersion.GroupVersion: events.k8s.io/v1
  I0904 16:11:57.032959 23 discovery.go:148] Versions found [{events.k8s.io/v1 v1}]
  I0904 16:11:57.032963 23 discovery.go:154] events.k8s.io/v1 matches events.k8s.io/v1
  I0904 16:11:57.032985 23 discovery.go:139] Checking APIGroup: authentication.k8s.io
  I0904 16:11:57.033730 23 discovery.go:147] PreferredVersion.GroupVersion: authentication.k8s.io/v1
  I0904 16:11:57.033742 23 discovery.go:148] Versions found [{authentication.k8s.io/v1 v1}]
  I0904 16:11:57.033747 23 discovery.go:154] authentication.k8s.io/v1 matches authentication.k8s.io/v1
  I0904 16:11:57.033753 23 discovery.go:139] Checking APIGroup: authorization.k8s.io
  I0904 16:11:57.034561 23 discovery.go:147] PreferredVersion.GroupVersion: authorization.k8s.io/v1
  I0904 16:11:57.034571 23 discovery.go:148] Versions found [{authorization.k8s.io/v1 v1}]
  I0904 16:11:57.034580 23 discovery.go:154] authorization.k8s.io/v1 matches authorization.k8s.io/v1
  I0904 16:11:57.034608 23 discovery.go:139] Checking APIGroup: autoscaling
  I0904 16:11:57.035410 23 discovery.go:147] PreferredVersion.GroupVersion: autoscaling/v2
  I0904 16:11:57.035420 23 discovery.go:148] Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  I0904 16:11:57.035424 23 discovery.go:154] autoscaling/v2 matches autoscaling/v2
  I0904 16:11:57.035428 23 discovery.go:139] Checking APIGroup: batch
  I0904 16:11:57.036248 23 discovery.go:147] PreferredVersion.GroupVersion: batch/v1
  I0904 16:11:57.036256 23 discovery.go:148] Versions found [{batch/v1 v1}]
  I0904 16:11:57.036260 23 discovery.go:154] batch/v1 matches batch/v1
  I0904 16:11:57.036265 23 discovery.go:139] Checking APIGroup: certificates.k8s.io
  I0904 16:11:57.036974 23 discovery.go:147] PreferredVersion.GroupVersion: certificates.k8s.io/v1
  I0904 16:11:57.036982 23 discovery.go:148] Versions found [{certificates.k8s.io/v1 v1}]
  I0904 16:11:57.036989 23 discovery.go:154] certificates.k8s.io/v1 matches certificates.k8s.io/v1
  I0904 16:11:57.036994 23 discovery.go:139] Checking APIGroup: networking.k8s.io
  I0904 16:11:57.037726 23 discovery.go:147] PreferredVersion.GroupVersion: networking.k8s.io/v1
  I0904 16:11:57.037735 23 discovery.go:148] Versions found [{networking.k8s.io/v1 v1}]
  I0904 16:11:57.037740 23 discovery.go:154] networking.k8s.io/v1 matches networking.k8s.io/v1
  I0904 16:11:57.037744 23 discovery.go:139] Checking APIGroup: policy
  I0904 16:11:57.038439 23 discovery.go:147] PreferredVersion.GroupVersion: policy/v1
  I0904 16:11:57.038449 23 discovery.go:148] Versions found [{policy/v1 v1}]
  I0904 16:11:57.038453 23 discovery.go:154] policy/v1 matches policy/v1
  I0904 16:11:57.038458 23 discovery.go:139] Checking APIGroup: rbac.authorization.k8s.io
  I0904 16:11:57.039295 23 discovery.go:147] PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  I0904 16:11:57.039304 23 discovery.go:148] Versions found [{rbac.authorization.k8s.io/v1 v1}]
  I0904 16:11:57.039308 23 discovery.go:154] rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  I0904 16:11:57.039313 23 discovery.go:139] Checking APIGroup: storage.k8s.io
  I0904 16:11:57.040126 23 discovery.go:147] PreferredVersion.GroupVersion: storage.k8s.io/v1
  I0904 16:11:57.040136 23 discovery.go:148] Versions found [{storage.k8s.io/v1 v1}]
  I0904 16:11:57.040141 23 discovery.go:154] storage.k8s.io/v1 matches storage.k8s.io/v1
  I0904 16:11:57.040145 23 discovery.go:139] Checking APIGroup: admissionregistration.k8s.io
  I0904 16:11:57.040849 23 discovery.go:147] PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  I0904 16:11:57.040858 23 discovery.go:148] Versions found [{admissionregistration.k8s.io/v1 v1}]
  I0904 16:11:57.040862 23 discovery.go:154] admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  I0904 16:11:57.040866 23 discovery.go:139] Checking APIGroup: apiextensions.k8s.io
  I0904 16:11:57.041556 23 discovery.go:147] PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  I0904 16:11:57.041565 23 discovery.go:148] Versions found [{apiextensions.k8s.io/v1 v1}]
  I0904 16:11:57.041569 23 discovery.go:154] apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  I0904 16:11:57.041573 23 discovery.go:139] Checking APIGroup: scheduling.k8s.io
  I0904 16:11:57.042311 23 discovery.go:147] PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  I0904 16:11:57.042321 23 discovery.go:148] Versions found [{scheduling.k8s.io/v1 v1}]
  I0904 16:11:57.042326 23 discovery.go:154] scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  I0904 16:11:57.042331 23 discovery.go:139] Checking APIGroup: coordination.k8s.io
  I0904 16:11:57.043046 23 discovery.go:147] PreferredVersion.GroupVersion: coordination.k8s.io/v1
  I0904 16:11:57.043055 23 discovery.go:148] Versions found [{coordination.k8s.io/v1 v1}]
  I0904 16:11:57.043060 23 discovery.go:154] coordination.k8s.io/v1 matches coordination.k8s.io/v1
  I0904 16:11:57.043064 23 discovery.go:139] Checking APIGroup: node.k8s.io
  I0904 16:11:57.043885 23 discovery.go:147] PreferredVersion.GroupVersion: node.k8s.io/v1
  I0904 16:11:57.043894 23 discovery.go:148] Versions found [{node.k8s.io/v1 v1}]
  I0904 16:11:57.043900 23 discovery.go:154] node.k8s.io/v1 matches node.k8s.io/v1
  I0904 16:11:57.043905 23 discovery.go:139] Checking APIGroup: discovery.k8s.io
  I0904 16:11:57.044606 23 discovery.go:147] PreferredVersion.GroupVersion: discovery.k8s.io/v1
  I0904 16:11:57.044614 23 discovery.go:148] Versions found [{discovery.k8s.io/v1 v1}]
  I0904 16:11:57.044618 23 discovery.go:154] discovery.k8s.io/v1 matches discovery.k8s.io/v1
  I0904 16:11:57.044623 23 discovery.go:139] Checking APIGroup: resource.k8s.io
  I0904 16:11:57.045426 23 discovery.go:147] PreferredVersion.GroupVersion: resource.k8s.io/v1
  I0904 16:11:57.045434 23 discovery.go:148] Versions found [{resource.k8s.io/v1 v1}]
  I0904 16:11:57.045438 23 discovery.go:154] resource.k8s.io/v1 matches resource.k8s.io/v1
  I0904 16:11:57.045443 23 discovery.go:139] Checking APIGroup: flowcontrol.apiserver.k8s.io
  I0904 16:11:57.046125 23 discovery.go:147] PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1
  I0904 16:11:57.046133 23 discovery.go:148] Versions found [{flowcontrol.apiserver.k8s.io/v1 v1}]
  I0904 16:11:57.046138 23 discovery.go:154] flowcontrol.apiserver.k8s.io/v1 matches flowcontrol.apiserver.k8s.io/v1
  I0904 16:11:57.046143 23 discovery.go:139] Checking APIGroup: metrics.k8s.io
  I0904 16:11:57.046845 23 discovery.go:147] PreferredVersion.GroupVersion: metrics.k8s.io/v1beta1
  I0904 16:11:57.046854 23 discovery.go:148] Versions found [{metrics.k8s.io/v1beta1 v1beta1}]
  I0904 16:11:57.046858 23 discovery.go:154] metrics.k8s.io/v1beta1 matches metrics.k8s.io/v1beta1
  I0904 16:11:57.046944 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-4184" for this suite. @ 09/04/25 16:11:57.05
• [0.345 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery request for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:194
  STEP: Creating a kubernetes client @ 09/04/25 16:11:57.058
  I0904 16:11:57.058576 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename aggregateddiscovery @ 09/04/25 16:11:57.059
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 16:11:57.069
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 16:11:57.071
  I0904 16:11:57.073570 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  E0904 16:11:57.514753      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:11:58.514863      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:11:59.514942      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:12:00.110919 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-7928" for this suite. @ 09/04/25 16:12:00.117
• [3.067 seconds]
------------------------------
S
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:890
  STEP: Creating a kubernetes client @ 09/04/25 16:12:00.125
  I0904 16:12:00.125441 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename daemonsets @ 09/04/25 16:12:00.125
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 16:12:00.137
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 16:12:00.139
  STEP: Creating simple DaemonSet "daemon-set" @ 09/04/25 16:12:00.23
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/04/25 16:12:00.236
  I0904 16:12:00.317575 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-16-153 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0904 16:12:00.317636 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-81-110 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0904 16:12:00.320073 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0904 16:12:00.320095 23 fixtures.go:131] Node ip-172-31-18-79 is running 0 daemon pod, expected 1
  E0904 16:12:00.515351      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:12:01.242687 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-16-153 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0904 16:12:01.242732 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-81-110 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0904 16:12:01.246412 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0904 16:12:01.246445 23 fixtures.go:131] Node ip-172-31-18-79 is running 0 daemon pod, expected 1
  E0904 16:12:01.515802      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:12:02.240523 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-16-153 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0904 16:12:02.240562 23 fixtures.go:90] DaemonSet pods can't tolerate node ip-172-31-81-110 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0904 16:12:02.243940 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0904 16:12:02.243959 23 fixtures.go:136] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Getting /status @ 09/04/25 16:12:02.246
  I0904 16:12:02.248402 23 daemon_set.go:927] Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 09/04/25 16:12:02.248
  I0904 16:12:02.259285 23 daemon_set.go:947] updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 09/04/25 16:12:02.259
  I0904 16:12:02.260806 23 daemon_set.go:972] Observed &DaemonSet event: ADDED
  I0904 16:12:02.260878 23 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0904 16:12:02.261048 23 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0904 16:12:02.261134 23 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0904 16:12:02.261275 23 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I0904 16:12:02.261293 23 daemon_set.go:965] Found daemon set daemon-set in namespace daemonsets-3474 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0904 16:12:02.261303 23 daemon_set.go:976] Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 09/04/25 16:12:02.261
  STEP: watching for the daemon set status to be patched @ 09/04/25 16:12:02.266
  I0904 16:12:02.267324 23 daemon_set.go:1016] Observed &DaemonSet event: ADDED
  I0904 16:12:02.267383 23 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0904 16:12:02.267439 23 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0904 16:12:02.267578 23 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0904 16:12:02.267694 23 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0904 16:12:02.267710 23 daemon_set.go:1012] Observed daemon set daemon-set in namespace daemonsets-3474 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0904 16:12:02.267771 23 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I0904 16:12:02.267786 23 daemon_set.go:1009] Found daemon set daemon-set in namespace daemonsets-3474 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  I0904 16:12:02.267819 23 daemon_set.go:1020] Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 09/04/25 16:12:02.274
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-3474, will wait for the garbage collector to delete the pods @ 09/04/25 16:12:02.274
  I0904 16:12:02.332797 23 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 5.74889ms
  I0904 16:12:02.433341 23 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.518644ms
  E0904 16:12:02.516569      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:12:03.516997      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:12:03.739485 23 fixtures.go:126] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0904 16:12:03.739519 23 fixtures.go:136] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0904 16:12:03.743231 23 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"48678"},"items":null}

  I0904 16:12:03.745452 23 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"48678"},"items":null}

  I0904 16:12:03.756032 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-3474" for this suite. @ 09/04/25 16:12:03.76
• [3.642 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:257
  STEP: Creating a kubernetes client @ 09/04/25 16:12:03.767
  I0904 16:12:03.767068 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename webhook @ 09/04/25 16:12:03.767
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 16:12:03.779
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 16:12:03.781
  STEP: Setting up server cert @ 09/04/25 16:12:03.799
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/04/25 16:12:03.973
  STEP: Deploying the webhook pod @ 09/04/25 16:12:03.979
  STEP: Wait for the deployment to be ready @ 09/04/25 16:12:03.993
  I0904 16:12:04.007409 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0904 16:12:04.517829      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:12:05.517908      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/04/25 16:12:06.021
  STEP: Verifying the service has paired with the endpoint @ 09/04/25 16:12:06.032
  E0904 16:12:06.518388      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:12:07.033071 23 util.go:419] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 09/04/25 16:12:07.039
  STEP: create a pod that should be updated by the webhook @ 09/04/25 16:12:07.053
  I0904 16:12:07.119835 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6674" for this suite. @ 09/04/25 16:12:07.122
  STEP: Destroying namespace "webhook-markers-96" for this suite. @ 09/04/25 16:12:07.129
• [3.367 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:71
  STEP: Creating a kubernetes client @ 09/04/25 16:12:07.134
  I0904 16:12:07.134112 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename replication-controller @ 09/04/25 16:12:07.134
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 16:12:07.147
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 16:12:07.149
  STEP: Creating replication controller my-hostname-basic-8dc147d8-15ce-48be-b9c3-fb4195dbe40c @ 09/04/25 16:12:07.151
  I0904 16:12:07.164619 23 resource.go:64] Pod name my-hostname-basic-8dc147d8-15ce-48be-b9c3-fb4195dbe40c: Found 0 pods out of 1
  E0904 16:12:07.519147      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:12:08.519236      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:12:09.519386      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:12:10.519913      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:12:11.520000      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:12:12.242424 23 resource.go:64] Pod name my-hostname-basic-8dc147d8-15ce-48be-b9c3-fb4195dbe40c: Found 1 pods out of 1
  I0904 16:12:12.242458 23 rc.go:509] Ensuring all pods for ReplicationController "my-hostname-basic-8dc147d8-15ce-48be-b9c3-fb4195dbe40c" are running
  I0904 16:12:12.247437 23 rc.go:525] Pod "my-hostname-basic-8dc147d8-15ce-48be-b9c3-fb4195dbe40c-tqbvk" is running and ready(conditions: [{Type:PodReadyToStartContainers ObservedGeneration:1 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-09-04 16:12:08 +0000 UTC Reason: Message:} {Type:Initialized ObservedGeneration:1 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-09-04 16:12:07 +0000 UTC Reason: Message:} {Type:Ready ObservedGeneration:1 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-09-04 16:12:08 +0000 UTC Reason: Message:} {Type:ContainersReady ObservedGeneration:1 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-09-04 16:12:08 +0000 UTC Reason: Message:} {Type:PodScheduled ObservedGeneration:1 Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2025-09-04 16:12:07 +0000 UTC Reason: Message:}])
  I0904 16:12:12.247458 23 rc.go:533] Trying to dial the pod
  STEP: trying to dial each unique pod @ 09/04/25 16:12:12.247
  I0904 16:12:12.259171 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-6100" for this suite. @ 09/04/25 16:12:12.263
• [5.136 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:559
  STEP: Creating a kubernetes client @ 09/04/25 16:12:12.269
  I0904 16:12:12.269973 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename svcaccounts @ 09/04/25 16:12:12.27
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 16:12:12.283
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 16:12:12.285
  I0904 16:12:12.300307 23 service_accounts.go:646] created pod
  E0904 16:12:12.520995      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:12:13.521145      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:12:14.522237      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:12:15.522386      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/25 16:12:16.31
  E0904 16:12:16.523296      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:12:17.523379      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:12:18.523517      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:12:19.523701      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:12:20.523879      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:12:21.523954      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:12:22.524049      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:12:23.524181      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:12:24.524245      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:12:25.524382      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:12:26.524580      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:12:27.524852      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:12:28.524956      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:12:29.525794      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:12:30.526826      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:12:31.526917      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:12:32.527033      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:12:33.527791      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:12:34.527971      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:12:35.528797      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:12:36.529783      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:12:37.529917      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:12:38.530788      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:12:39.530997      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:12:40.531827      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:12:41.532284      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:12:42.532450      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:12:43.532685      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:12:44.533311      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:12:45.533442      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:12:46.311450 23 service_accounts.go:652] polling logs
  I0904 16:12:46.318097 23 service_accounts.go:662] Pod logs: 
  I0904 16:12:12.856699       1 log.go:245] OK: Got token
  I0904 16:12:12.856739       1 log.go:245] validating with in-cluster discovery
  I0904 16:12:12.856880       1 log.go:245] OK: got issuer https://kubernetes.default.svc
  I0904 16:12:12.856890       1 log.go:245] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-3338:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc0002269b8), NotBefore:(*jwt.NumericDate)(0xc000226a80), IssuedAt:(*jwt.NumericDate)(0xc0002269c8), ID:"28561b9a-261c-445d-bb27-723d660646b8"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-3338", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"8150bf48-daa0-4b85-935d-1731cd64c09b"}}}
  I0904 16:12:12.865788       1 log.go:245] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc
  I0904 16:12:12.870528       1 log.go:245] OK: Validated signature on JWT
  I0904 16:12:12.870794       1 log.go:245] OK: Got valid claims from token!
  I0904 16:12:12.870903       1 log.go:245] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-3338:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc000227868), NotBefore:(*jwt.NumericDate)(0xc000227890), IssuedAt:(*jwt.NumericDate)(0xc000227870), ID:"28561b9a-261c-445d-bb27-723d660646b8"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-3338", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"8150bf48-daa0-4b85-935d-1731cd64c09b"}}}

  I0904 16:12:46.318129 23 service_accounts.go:666] completed pod
  I0904 16:12:46.323165 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-3338" for this suite. @ 09/04/25 16:12:46.325
• [34.063 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject mutating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:840
  STEP: Creating a kubernetes client @ 09/04/25 16:12:46.332
  I0904 16:12:46.332932 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename webhook @ 09/04/25 16:12:46.333
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 16:12:46.346
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 16:12:46.348
  STEP: Setting up server cert @ 09/04/25 16:12:46.37
  E0904 16:12:46.534362      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/04/25 16:12:46.901
  STEP: Deploying the webhook pod @ 09/04/25 16:12:46.906
  STEP: Wait for the deployment to be ready @ 09/04/25 16:12:46.918
  I0904 16:12:46.925743 23 deployment.go:223] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0904 16:12:47.534954      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:12:48.535067      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/04/25 16:12:48.937
  STEP: Verifying the service has paired with the endpoint @ 09/04/25 16:12:48.948
  E0904 16:12:49.535156      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:12:49.949638 23 util.go:419] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 09/04/25 16:12:49.954
  I0904 16:12:49.991186 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4701" for this suite. @ 09/04/25 16:12:49.996
  STEP: Destroying namespace "webhook-markers-8197" for this suite. @ 09/04/25 16:12:50.004
• [3.678 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:100
  STEP: Creating a kubernetes client @ 09/04/25 16:12:50.01
  I0904 16:12:50.010644 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename proxy @ 09/04/25 16:12:50.011
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 16:12:50.021
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 16:12:50.023
  STEP: starting an echo server on multiple ports @ 09/04/25 16:12:50.038
  I0904 16:12:50.051561 23 deployment.go:104] deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, TerminatingReplicas:(*int32)(nil), Conditions:[]v1.DeploymentCondition(nil), CollisionCount:(*int32)(nil)}
  E0904 16:12:50.535813      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:12:51.536877      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:12:52.062087 23 wait.go:65] Waiting for amount of service proxy-3336/proxy-service-xwwrn endpoints to be 1
  I0904 16:12:52.070635 23 proxy.go:610] (0) /api/v1/namespaces/proxy-3336/services/proxy-service-xwwrn:portname1/proxy/: foo (200; 5.354741ms)
  I0904 16:12:52.070667 23 proxy.go:282] setup took 2.044955724s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 09/04/25 16:12:52.07
  I0904 16:12:52.075132 23 proxy.go:610] (0) /api/v1/namespaces/proxy-3336/pods/proxy-service-xwwrn-547ff779f5-tjskc:160/proxy/: foo (200; 4.096908ms)
  I0904 16:12:52.075650 23 proxy.go:610] (0) /api/v1/namespaces/proxy-3336/pods/proxy-service-xwwrn-547ff779f5-tjskc:162/proxy/: bar (200; 4.845381ms)
  I0904 16:12:52.075996 23 proxy.go:610] (0) /api/v1/namespaces/proxy-3336/services/http:proxy-service-xwwrn:portname1/proxy/: foo (200; 5.110092ms)
  I0904 16:12:52.078300 23 proxy.go:610] (0) /api/v1/namespaces/proxy-3336/services/proxy-service-xwwrn:portname2/proxy/: bar (200; 7.254357ms)
  I0904 16:12:52.078435 23 proxy.go:610] (0) /api/v1/namespaces/proxy-3336/services/http:proxy-service-xwwrn:portname2/proxy/: bar (200; 7.494384ms)
  I0904 16:12:52.078438 23 proxy.go:610] (0) /api/v1/namespaces/proxy-3336/pods/http:proxy-service-xwwrn-547ff779f5-tjskc:160/proxy/: foo (200; 7.417919ms)
  I0904 16:12:52.078450 23 proxy.go:610] (0) /api/v1/namespaces/proxy-3336/pods/http:proxy-service-xwwrn-547ff779f5-tjskc:1080/proxy/: <a href="/api/v1/namespaces/proxy-3336/pods/http:proxy-service-xwwrn-547ff779f5-tjskc:1080/proxy/... (200; 7.373118ms)
  I0904 16:12:52.078450 23 proxy.go:610] (0) /api/v1/namespaces/proxy-3336/pods/http:proxy-service-xwwrn-547ff779f5-tjskc:162/proxy/: bar (200; 7.549193ms)
  I0904 16:12:52.079264 23 proxy.go:610] (0) /api/v1/namespaces/proxy-3336/services/https:proxy-service-xwwrn:tlsportname2/proxy/: tls qux (200; 8.27463ms)
  I0904 16:12:52.079384 23 proxy.go:610] (0) /api/v1/namespaces/proxy-3336/pods/https:proxy-service-xwwrn-547ff779f5-tjskc:462/proxy/: tls qux (200; 8.408988ms)
  I0904 16:12:52.079385 23 proxy.go:610] (0) /api/v1/namespaces/proxy-3336/pods/proxy-service-xwwrn-547ff779f5-tjskc/proxy/: <a href="/api/v1/namespaces/proxy-3336/pods/proxy-service-xwwrn-547ff779f5-tjskc/proxy/rewriteme"... (200; 8.278278ms)
  I0904 16:12:52.079580 23 proxy.go:610] (0) /api/v1/namespaces/proxy-3336/services/proxy-service-xwwrn:portname1/proxy/: foo (200; 8.658486ms)
  I0904 16:12:52.079976 23 proxy.go:610] (0) /api/v1/namespaces/proxy-3336/pods/https:proxy-service-xwwrn-547ff779f5-tjskc:443/proxy/: <a href="/api/v1/namespaces/proxy-3336/pods/https:proxy-service-xwwrn-547ff779f5-tjskc:443/proxy/... (200; 9.015185ms)
  I0904 16:12:52.079983 23 proxy.go:610] (0) /api/v1/namespaces/proxy-3336/pods/proxy-service-xwwrn-547ff779f5-tjskc:1080/proxy/: <a href="/api/v1/namespaces/proxy-3336/pods/proxy-service-xwwrn-547ff779f5-tjskc:1080/proxy/rewri... (200; 8.97906ms)
  I0904 16:12:52.081221 23 proxy.go:610] (0) /api/v1/namespaces/proxy-3336/services/https:proxy-service-xwwrn:tlsportname1/proxy/: tls baz (200; 10.132032ms)
  I0904 16:12:52.081322 23 proxy.go:610] (0) /api/v1/namespaces/proxy-3336/pods/https:proxy-service-xwwrn-547ff779f5-tjskc:460/proxy/: tls baz (200; 10.547305ms)
  I0904 16:12:52.084931 23 proxy.go:610] (1) /api/v1/namespaces/proxy-3336/pods/http:proxy-service-xwwrn-547ff779f5-tjskc:160/proxy/: foo (200; 3.461837ms)
  I0904 16:12:52.084998 23 proxy.go:610] (1) /api/v1/namespaces/proxy-3336/pods/proxy-service-xwwrn-547ff779f5-tjskc:1080/proxy/: <a href="/api/v1/namespaces/proxy-3336/pods/proxy-service-xwwrn-547ff779f5-tjskc:1080/proxy/rewri... (200; 3.585984ms)
  I0904 16:12:52.085133 23 proxy.go:610] (1) /api/v1/namespaces/proxy-3336/pods/proxy-service-xwwrn-547ff779f5-tjskc:160/proxy/: foo (200; 3.789945ms)
  I0904 16:12:52.085216 23 proxy.go:610] (1) /api/v1/namespaces/proxy-3336/pods/proxy-service-xwwrn-547ff779f5-tjskc:162/proxy/: bar (200; 3.719956ms)
  I0904 16:12:52.085699 23 proxy.go:610] (1) /api/v1/namespaces/proxy-3336/pods/https:proxy-service-xwwrn-547ff779f5-tjskc:460/proxy/: tls baz (200; 4.120477ms)
  I0904 16:12:52.085999 23 proxy.go:610] (1) /api/v1/namespaces/proxy-3336/pods/http:proxy-service-xwwrn-547ff779f5-tjskc:162/proxy/: bar (200; 4.490312ms)
  I0904 16:12:52.086510 23 proxy.go:610] (1) /api/v1/namespaces/proxy-3336/pods/https:proxy-service-xwwrn-547ff779f5-tjskc:462/proxy/: tls qux (200; 4.861109ms)
  I0904 16:12:52.086721 23 proxy.go:610] (1) /api/v1/namespaces/proxy-3336/pods/proxy-service-xwwrn-547ff779f5-tjskc/proxy/: <a href="/api/v1/namespaces/proxy-3336/pods/proxy-service-xwwrn-547ff779f5-tjskc/proxy/rewriteme"... (200; 5.267487ms)
  I0904 16:12:52.086800 23 proxy.go:610] (1) /api/v1/namespaces/proxy-3336/pods/https:proxy-service-xwwrn-547ff779f5-tjskc:443/proxy/: <a href="/api/v1/namespaces/proxy-3336/pods/https:proxy-service-xwwrn-547ff779f5-tjskc:443/proxy/... (200; 5.163449ms)
  I0904 16:12:52.087177 23 proxy.go:610] (1) /api/v1/namespaces/proxy-3336/services/proxy-service-xwwrn:portname2/proxy/: bar (200; 5.643023ms)
  I0904 16:12:52.087408 23 proxy.go:610] (1) /api/v1/namespaces/proxy-3336/services/http:proxy-service-xwwrn:portname1/proxy/: foo (200; 5.786742ms)
  I0904 16:12:52.088006 23 proxy.go:610] (1) /api/v1/namespaces/proxy-3336/pods/http:proxy-service-xwwrn-547ff779f5-tjskc:1080/proxy/: <a href="/api/v1/namespaces/proxy-3336/pods/http:proxy-service-xwwrn-547ff779f5-tjskc:1080/proxy/... (200; 6.458012ms)
  I0904 16:12:52.088437 23 proxy.go:610] (1) /api/v1/namespaces/proxy-3336/services/https:proxy-service-xwwrn:tlsportname1/proxy/: tls baz (200; 6.999265ms)
  I0904 16:12:52.089209 23 proxy.go:610] (1) /api/v1/namespaces/proxy-3336/services/proxy-service-xwwrn:portname1/proxy/: foo (200; 7.687835ms)
  I0904 16:12:52.089402 23 proxy.go:610] (1) /api/v1/namespaces/proxy-3336/services/http:proxy-service-xwwrn:portname2/proxy/: bar (200; 7.836749ms)
  I0904 16:12:52.091003 23 proxy.go:610] (1) /api/v1/namespaces/proxy-3336/services/https:proxy-service-xwwrn:tlsportname2/proxy/: tls qux (200; 9.593262ms)
  I0904 16:12:52.094443 23 proxy.go:610] (2) /api/v1/namespaces/proxy-3336/pods/https:proxy-service-xwwrn-547ff779f5-tjskc:443/proxy/: <a href="/api/v1/namespaces/proxy-3336/pods/https:proxy-service-xwwrn-547ff779f5-tjskc:443/proxy/... (200; 3.421814ms)
  I0904 16:12:52.095360 23 proxy.go:610] (2) /api/v1/namespaces/proxy-3336/pods/http:proxy-service-xwwrn-547ff779f5-tjskc:162/proxy/: bar (200; 4.05722ms)
  I0904 16:12:52.095415 23 proxy.go:610] (2) /api/v1/namespaces/proxy-3336/pods/proxy-service-xwwrn-547ff779f5-tjskc:162/proxy/: bar (200; 4.14102ms)
  I0904 16:12:52.095431 23 proxy.go:610] (2) /api/v1/namespaces/proxy-3336/pods/proxy-service-xwwrn-547ff779f5-tjskc:1080/proxy/: <a href="/api/v1/namespaces/proxy-3336/pods/proxy-service-xwwrn-547ff779f5-tjskc:1080/proxy/rewri... (200; 4.183822ms)
  I0904 16:12:52.095440 23 proxy.go:610] (2) /api/v1/namespaces/proxy-3336/pods/http:proxy-service-xwwrn-547ff779f5-tjskc:1080/proxy/: <a href="/api/v1/namespaces/proxy-3336/pods/http:proxy-service-xwwrn-547ff779f5-tjskc:1080/proxy/... (200; 4.348833ms)
  I0904 16:12:52.095496 23 proxy.go:610] (2) /api/v1/namespaces/proxy-3336/pods/https:proxy-service-xwwrn-547ff779f5-tjskc:462/proxy/: tls qux (200; 4.320518ms)
  I0904 16:12:52.095503 23 proxy.go:610] (2) /api/v1/namespaces/proxy-3336/pods/https:proxy-service-xwwrn-547ff779f5-tjskc:460/proxy/: tls baz (200; 4.308796ms)
  I0904 16:12:52.096042 23 proxy.go:610] (2) /api/v1/namespaces/proxy-3336/services/http:proxy-service-xwwrn:portname1/proxy/: foo (200; 4.825662ms)
  I0904 16:12:52.096042 23 proxy.go:610] (2) /api/v1/namespaces/proxy-3336/services/https:proxy-service-xwwrn:tlsportname1/proxy/: tls baz (200; 4.916666ms)
  I0904 16:12:52.097217 23 proxy.go:610] (2) /api/v1/namespaces/proxy-3336/services/proxy-service-xwwrn:portname2/proxy/: bar (200; 6.146312ms)
  I0904 16:12:52.098018 23 proxy.go:610] (2) /api/v1/namespaces/proxy-3336/pods/proxy-service-xwwrn-547ff779f5-tjskc:160/proxy/: foo (200; 6.905301ms)
  I0904 16:12:52.098250 23 proxy.go:610] (2) /api/v1/namespaces/proxy-3336/pods/http:proxy-service-xwwrn-547ff779f5-tjskc:160/proxy/: foo (200; 6.962725ms)
  I0904 16:12:52.098250 23 proxy.go:610] (2) /api/v1/namespaces/proxy-3336/pods/proxy-service-xwwrn-547ff779f5-tjskc/proxy/: <a href="/api/v1/namespaces/proxy-3336/pods/proxy-service-xwwrn-547ff779f5-tjskc/proxy/rewriteme"... (200; 7.08705ms)
  I0904 16:12:52.098408 23 proxy.go:610] (2) /api/v1/namespaces/proxy-3336/services/https:proxy-service-xwwrn:tlsportname2/proxy/: tls qux (200; 7.180443ms)
  I0904 16:12:52.098779 23 proxy.go:610] (2) /api/v1/namespaces/proxy-3336/services/http:proxy-service-xwwrn:portname2/proxy/: bar (200; 7.519229ms)
  I0904 16:12:52.099568 23 proxy.go:610] (2) /api/v1/namespaces/proxy-3336/services/proxy-service-xwwrn:portname1/proxy/: foo (200; 8.254106ms)
  I0904 16:12:52.103709 23 proxy.go:610] (3) /api/v1/namespaces/proxy-3336/pods/https:proxy-service-xwwrn-547ff779f5-tjskc:460/proxy/: tls baz (200; 3.904254ms)
  I0904 16:12:52.104024 23 proxy.go:610] (3) /api/v1/namespaces/proxy-3336/pods/http:proxy-service-xwwrn-547ff779f5-tjskc:1080/proxy/: <a href="/api/v1/namespaces/proxy-3336/pods/http:proxy-service-xwwrn-547ff779f5-tjskc:1080/proxy/... (200; 4.244562ms)
  I0904 16:12:52.104166 23 proxy.go:610] (3) /api/v1/namespaces/proxy-3336/pods/http:proxy-service-xwwrn-547ff779f5-tjskc:162/proxy/: bar (200; 4.424966ms)
  I0904 16:12:52.104259 23 proxy.go:610] (3) /api/v1/namespaces/proxy-3336/pods/http:proxy-service-xwwrn-547ff779f5-tjskc:160/proxy/: foo (200; 4.544597ms)
  I0904 16:12:52.104316 23 proxy.go:610] (3) /api/v1/namespaces/proxy-3336/pods/proxy-service-xwwrn-547ff779f5-tjskc:1080/proxy/: <a href="/api/v1/namespaces/proxy-3336/pods/proxy-service-xwwrn-547ff779f5-tjskc:1080/proxy/rewri... (200; 4.653554ms)
  I0904 16:12:52.104416 23 proxy.go:610] (3) /api/v1/namespaces/proxy-3336/pods/proxy-service-xwwrn-547ff779f5-tjskc:160/proxy/: foo (200; 4.815139ms)
  I0904 16:12:52.104651 23 proxy.go:610] (3) /api/v1/namespaces/proxy-3336/pods/https:proxy-service-xwwrn-547ff779f5-tjskc:443/proxy/: <a href="/api/v1/namespaces/proxy-3336/pods/https:proxy-service-xwwrn-547ff779f5-tjskc:443/proxy/... (200; 4.822488ms)
  I0904 16:12:52.104650 23 proxy.go:610] (3) /api/v1/namespaces/proxy-3336/services/https:proxy-service-xwwrn:tlsportname2/proxy/: tls qux (200; 5.000464ms)
  I0904 16:12:52.105423 23 proxy.go:610] (3) /api/v1/namespaces/proxy-3336/services/proxy-service-xwwrn:portname1/proxy/: foo (200; 5.669113ms)
  I0904 16:12:52.105759 23 proxy.go:610] (3) /api/v1/namespaces/proxy-3336/services/http:proxy-service-xwwrn:portname1/proxy/: foo (200; 5.944097ms)
  I0904 16:12:52.106406 23 proxy.go:610] (3) /api/v1/namespaces/proxy-3336/pods/proxy-service-xwwrn-547ff779f5-tjskc/proxy/: <a href="/api/v1/namespaces/proxy-3336/pods/proxy-service-xwwrn-547ff779f5-tjskc/proxy/rewriteme"... (200; 6.702326ms)
  I0904 16:12:52.106686 23 proxy.go:610] (3) /api/v1/namespaces/proxy-3336/pods/proxy-service-xwwrn-547ff779f5-tjskc:162/proxy/: bar (200; 6.956229ms)
  I0904 16:12:52.106859 23 proxy.go:610] (3) /api/v1/namespaces/proxy-3336/pods/https:proxy-service-xwwrn-547ff779f5-tjskc:462/proxy/: tls qux (200; 7.017788ms)
  I0904 16:12:52.107013 23 proxy.go:610] (3) /api/v1/namespaces/proxy-3336/services/proxy-service-xwwrn:portname2/proxy/: bar (200; 7.248114ms)
  I0904 16:12:52.107712 23 proxy.go:610] (3) /api/v1/namespaces/proxy-3336/services/https:proxy-service-xwwrn:tlsportname1/proxy/: tls baz (200; 8.024469ms)
  I0904 16:12:52.109043 23 proxy.go:610] (3) /api/v1/namespaces/proxy-3336/services/http:proxy-service-xwwrn:portname2/proxy/: bar (200; 9.251545ms)
  I0904 16:12:52.113303 23 proxy.go:610] (4) /api/v1/namespaces/proxy-3336/pods/https:proxy-service-xwwrn-547ff779f5-tjskc:462/proxy/: tls qux (200; 4.038354ms)
  I0904 16:12:52.113670 23 proxy.go:610] (4) /api/v1/namespaces/proxy-3336/services/proxy-service-xwwrn:portname1/proxy/: foo (200; 4.606803ms)
  I0904 16:12:52.113678 23 proxy.go:610] (4) /api/v1/namespaces/proxy-3336/pods/proxy-service-xwwrn-547ff779f5-tjskc:162/proxy/: bar (200; 4.365189ms)
  I0904 16:12:52.114055 23 proxy.go:610] (4) /api/v1/namespaces/proxy-3336/pods/https:proxy-service-xwwrn-547ff779f5-tjskc:460/proxy/: tls baz (200; 4.818822ms)
  I0904 16:12:52.114066 23 proxy.go:610] (4) /api/v1/namespaces/proxy-3336/pods/proxy-service-xwwrn-547ff779f5-tjskc:1080/proxy/: <a href="/api/v1/namespaces/proxy-3336/pods/proxy-service-xwwrn-547ff779f5-tjskc:1080/proxy/rewri... (200; 4.778323ms)
  I0904 16:12:52.114166 23 proxy.go:610] (4) /api/v1/namespaces/proxy-3336/services/https:proxy-service-xwwrn:tlsportname1/proxy/: tls baz (200; 4.975944ms)
  I0904 16:12:52.114714 23 proxy.go:610] (4) /api/v1/namespaces/proxy-3336/pods/http:proxy-service-xwwrn-547ff779f5-tjskc:160/proxy/: foo (200; 5.413253ms)
  I0904 16:12:52.115067 23 proxy.go:610] (4) /api/v1/namespaces/proxy-3336/pods/proxy-service-xwwrn-547ff779f5-tjskc/proxy/: <a href="/api/v1/namespaces/proxy-3336/pods/proxy-service-xwwrn-547ff779f5-tjskc/proxy/rewriteme"... (200; 5.843242ms)
  I0904 16:12:52.115079 23 proxy.go:610] (4) /api/v1/namespaces/proxy-3336/services/http:proxy-service-xwwrn:portname1/proxy/: foo (200; 5.828774ms)
  I0904 16:12:52.115515 23 proxy.go:610] (4) /api/v1/namespaces/proxy-3336/pods/https:proxy-service-xwwrn-547ff779f5-tjskc:443/proxy/: <a href="/api/v1/namespaces/proxy-3336/pods/https:proxy-service-xwwrn-547ff779f5-tjskc:443/proxy/... (200; 6.310335ms)
  I0904 16:12:52.115934 23 proxy.go:610] (4) /api/v1/namespaces/proxy-3336/pods/http:proxy-service-xwwrn-547ff779f5-tjskc:162/proxy/: bar (200; 6.608885ms)
  I0904 16:12:52.115934 23 proxy.go:610] (4) /api/v1/namespaces/proxy-3336/pods/http:proxy-service-xwwrn-547ff779f5-tjskc:1080/proxy/: <a href="/api/v1/namespaces/proxy-3336/pods/http:proxy-service-xwwrn-547ff779f5-tjskc:1080/proxy/... (200; 6.777984ms)
  I0904 16:12:52.115946 23 proxy.go:610] (4) /api/v1/namespaces/proxy-3336/services/http:proxy-service-xwwrn:portname2/proxy/: bar (200; 6.844157ms)
  I0904 16:12:52.116120 23 proxy.go:610] (4) /api/v1/namespaces/proxy-3336/pods/proxy-service-xwwrn-547ff779f5-tjskc:160/proxy/: foo (200; 6.9457ms)
  I0904 16:12:52.117146 23 proxy.go:610] (4) /api/v1/namespaces/proxy-3336/services/proxy-service-xwwrn:portname2/proxy/: bar (200; 8.008846ms)
  I0904 16:12:52.117277 23 proxy.go:610] (4) /api/v1/namespaces/proxy-3336/services/https:proxy-service-xwwrn:tlsportname2/proxy/: tls qux (200; 8.003055ms)
  I0904 16:12:52.120805 23 proxy.go:610] (5) /api/v1/namespaces/proxy-3336/pods/https:proxy-service-xwwrn-547ff779f5-tjskc:460/proxy/: tls baz (200; 3.502887ms)
  I0904 16:12:52.121766 23 proxy.go:610] (5) /api/v1/namespaces/proxy-3336/pods/proxy-service-xwwrn-547ff779f5-tjskc:160/proxy/: foo (200; 4.247898ms)
  I0904 16:12:52.121783 23 proxy.go:610] (5) /api/v1/namespaces/proxy-3336/pods/http:proxy-service-xwwrn-547ff779f5-tjskc:1080/proxy/: <a href="/api/v1/namespaces/proxy-3336/pods/http:proxy-service-xwwrn-547ff779f5-tjskc:1080/proxy/... (200; 4.27675ms)
  I0904 16:12:52.121875 23 proxy.go:610] (5) /api/v1/namespaces/proxy-3336/pods/http:proxy-service-xwwrn-547ff779f5-tjskc:162/proxy/: bar (200; 4.424782ms)
  I0904 16:12:52.122091 23 proxy.go:610] (5) /api/v1/namespaces/proxy-3336/pods/https:proxy-service-xwwrn-547ff779f5-tjskc:462/proxy/: tls qux (200; 4.67254ms)
  I0904 16:12:52.122414 23 proxy.go:610] (5) /api/v1/namespaces/proxy-3336/pods/proxy-service-xwwrn-547ff779f5-tjskc:1080/proxy/: <a href="/api/v1/namespaces/proxy-3336/pods/proxy-service-xwwrn-547ff779f5-tjskc:1080/proxy/rewri... (200; 4.931591ms)
  I0904 16:12:52.122625 23 proxy.go:610] (5) /api/v1/namespaces/proxy-3336/pods/http:proxy-service-xwwrn-547ff779f5-tjskc:160/proxy/: foo (200; 5.07253ms)
  I0904 16:12:52.122624 23 proxy.go:610] (5) /api/v1/namespaces/proxy-3336/pods/proxy-service-xwwrn-547ff779f5-tjskc:162/proxy/: bar (200; 5.288257ms)
  I0904 16:12:52.123021 23 proxy.go:610] (5) /api/v1/namespaces/proxy-3336/services/https:proxy-service-xwwrn:tlsportname1/proxy/: tls baz (200; 5.49123ms)
  I0904 16:12:52.123511 23 proxy.go:610] (5) /api/v1/namespaces/proxy-3336/services/proxy-service-xwwrn:portname1/proxy/: foo (200; 6.044762ms)
  I0904 16:12:52.124133 23 proxy.go:610] (5) /api/v1/namespaces/proxy-3336/pods/https:proxy-service-xwwrn-547ff779f5-tjskc:443/proxy/: <a href="/api/v1/namespaces/proxy-3336/pods/https:proxy-service-xwwrn-547ff779f5-tjskc:443/proxy/... (200; 6.747625ms)
  I0904 16:12:52.124327 23 proxy.go:610] (5) /api/v1/namespaces/proxy-3336/services/http:proxy-service-xwwrn:portname1/proxy/: foo (200; 6.971473ms)
  I0904 16:12:52.124484 23 proxy.go:610] (5) /api/v1/namespaces/proxy-3336/pods/proxy-service-xwwrn-547ff779f5-tjskc/proxy/: <a href="/api/v1/namespaces/proxy-3336/pods/proxy-service-xwwrn-547ff779f5-tjskc/proxy/rewriteme"... (200; 6.942959ms)
  I0904 16:12:52.125171 23 proxy.go:610] (5) /api/v1/namespaces/proxy-3336/services/https:proxy-service-xwwrn:tlsportname2/proxy/: tls qux (200; 7.735145ms)
  I0904 16:12:52.125226 23 proxy.go:610] (5) /api/v1/namespaces/proxy-3336/services/http:proxy-service-xwwrn:portname2/proxy/: bar (200; 7.854466ms)
  I0904 16:12:52.125341 23 proxy.go:610] (5) /api/v1/namespaces/proxy-3336/services/proxy-service-xwwrn:portname2/proxy/: bar (200; 7.848451ms)
  I0904 16:12:52.129231 23 proxy.go:610] (6) /api/v1/namespaces/proxy-3336/pods/http:proxy-service-xwwrn-547ff779f5-tjskc:160/proxy/: foo (200; 3.86598ms)
  I0904 16:12:52.129486 23 proxy.go:610] (6) /api/v1/namespaces/proxy-3336/pods/https:proxy-service-xwwrn-547ff779f5-tjskc:460/proxy/: tls baz (200; 4.068855ms)
  I0904 16:12:52.129699 23 proxy.go:610] (6) /api/v1/namespaces/proxy-3336/pods/proxy-service-xwwrn-547ff779f5-tjskc:1080/proxy/: <a href="/api/v1/namespaces/proxy-3336/pods/proxy-service-xwwrn-547ff779f5-tjskc:1080/proxy/rewri... (200; 4.141744ms)
  I0904 16:12:52.129837 23 proxy.go:610] (6) /api/v1/namespaces/proxy-3336/pods/proxy-service-xwwrn-547ff779f5-tjskc:162/proxy/: bar (200; 4.327223ms)
  I0904 16:12:52.129962 23 proxy.go:610] (6) /api/v1/namespaces/proxy-3336/pods/https:proxy-service-xwwrn-547ff779f5-tjskc:462/proxy/: tls qux (200; 4.473177ms)
  I0904 16:12:52.130283 23 proxy.go:610] (6) /api/v1/namespaces/proxy-3336/pods/proxy-service-xwwrn-547ff779f5-tjskc:160/proxy/: foo (200; 4.701261ms)
  I0904 16:12:52.130471 23 proxy.go:610] (6) /api/v1/namespaces/proxy-3336/pods/proxy-service-xwwrn-547ff779f5-tjskc/proxy/: <a href="/api/v1/namespaces/proxy-3336/pods/proxy-service-xwwrn-547ff779f5-tjskc/proxy/rewriteme"... (200; 5.078997ms)
  I0904 16:12:52.130491 23 proxy.go:610] (6) /api/v1/namespaces/proxy-3336/services/proxy-service-xwwrn:portname2/proxy/: bar (200; 4.847609ms)
  I0904 16:12:52.131349 23 proxy.go:610] (6) /api/v1/namespaces/proxy-3336/services/https:proxy-service-xwwrn:tlsportname1/proxy/: tls baz (200; 5.721584ms)
  I0904 16:12:52.131819 23 proxy.go:610] (6) /api/v1/namespaces/proxy-3336/pods/http:proxy-service-xwwrn-547ff779f5-tjskc:1080/proxy/: <a href="/api/v1/namespaces/proxy-3336/pods/http:proxy-service-xwwrn-547ff779f5-tjskc:1080/proxy/... (200; 6.24829ms)
  I0904 16:12:52.131945 23 proxy.go:610] (6) /api/v1/namespaces/proxy-3336/pods/https:proxy-service-xwwrn-547ff779f5-tjskc:443/proxy/: <a href="/api/v1/namespaces/proxy-3336/pods/https:proxy-service-xwwrn-547ff779f5-tjskc:443/proxy/... (200; 6.470998ms)
  I0904 16:12:52.132468 23 proxy.go:610] (6) /api/v1/namespaces/proxy-3336/pods/http:proxy-service-xwwrn-547ff779f5-tjskc:162/proxy/: bar (200; 6.9431ms)
  I0904 16:12:52.132483 23 proxy.go:610] (6) /api/v1/namespaces/proxy-3336/services/http:proxy-service-xwwrn:portname2/proxy/: bar (200; 7.023471ms)
  I0904 16:12:52.133030 23 proxy.go:610] (6) /api/v1/namespaces/proxy-3336/services/https:proxy-service-xwwrn:tlsportname2/proxy/: tls qux (200; 7.489405ms)
  I0904 16:12:52.134349 23 proxy.go:610] (6) /api/v1/namespaces/proxy-3336/services/proxy-service-xwwrn:portname1/proxy/: foo (200; 8.734797ms)
  I0904 16:12:52.135387 23 proxy.go:610] (6) /api/v1/namespaces/proxy-3336/services/http:proxy-service-xwwrn:portname1/proxy/: foo (200; 9.944334ms)
  I0904 16:12:52.138747 23 proxy.go:610] (7) /api/v1/namespaces/proxy-3336/pods/https:proxy-service-xwwrn-547ff779f5-tjskc:462/proxy/: tls qux (200; 3.341048ms)
  I0904 16:12:52.138760 23 proxy.go:610] (7) /api/v1/namespaces/proxy-3336/pods/proxy-service-xwwrn-547ff779f5-tjskc:160/proxy/: foo (200; 3.28629ms)
  I0904 16:12:52.139718 23 proxy.go:610] (7) /api/v1/namespaces/proxy-3336/pods/https:proxy-service-xwwrn-547ff779f5-tjskc:460/proxy/: tls baz (200; 4.200331ms)
  I0904 16:12:52.139730 23 proxy.go:610] (7) /api/v1/namespaces/proxy-3336/pods/proxy-service-xwwrn-547ff779f5-tjskc:162/proxy/: bar (200; 4.151392ms)
  I0904 16:12:52.139822 23 proxy.go:610] (7) /api/v1/namespaces/proxy-3336/pods/proxy-service-xwwrn-547ff779f5-tjskc/proxy/: <a href="/api/v1/namespaces/proxy-3336/pods/proxy-service-xwwrn-547ff779f5-tjskc/proxy/rewriteme"... (200; 4.318219ms)
  I0904 16:12:52.140026 23 proxy.go:610] (7) /api/v1/namespaces/proxy-3336/pods/http:proxy-service-xwwrn-547ff779f5-tjskc:162/proxy/: bar (200; 4.417554ms)
  I0904 16:12:52.140369 23 proxy.go:610] (7) /api/v1/namespaces/proxy-3336/pods/http:proxy-service-xwwrn-547ff779f5-tjskc:160/proxy/: foo (200; 4.691679ms)
  I0904 16:12:52.140379 23 proxy.go:610] (7) /api/v1/namespaces/proxy-3336/services/https:proxy-service-xwwrn:tlsportname1/proxy/: tls baz (200; 4.889828ms)
  I0904 16:12:52.140705 23 proxy.go:610] (7) /api/v1/namespaces/proxy-3336/pods/http:proxy-service-xwwrn-547ff779f5-tjskc:1080/proxy/: <a href="/api/v1/namespaces/proxy-3336/pods/http:proxy-service-xwwrn-547ff779f5-tjskc:1080/proxy/... (200; 5.252501ms)
  I0904 16:12:52.141047 23 proxy.go:610] (7) /api/v1/namespaces/proxy-3336/services/https:proxy-service-xwwrn:tlsportname2/proxy/: tls qux (200; 5.394565ms)
  I0904 16:12:52.141498 23 proxy.go:610] (7) /api/v1/namespaces/proxy-3336/services/proxy-service-xwwrn:portname2/proxy/: bar (200; 5.858428ms)
  I0904 16:12:52.142179 23 proxy.go:610] (7) /api/v1/namespaces/proxy-3336/pods/https:proxy-service-xwwrn-547ff779f5-tjskc:443/proxy/: <a href="/api/v1/namespaces/proxy-3336/pods/https:proxy-service-xwwrn-547ff779f5-tjskc:443/proxy/... (200; 6.610323ms)
  I0904 16:12:52.142288 23 proxy.go:610] (7) /api/v1/namespaces/proxy-3336/pods/proxy-service-xwwrn-547ff779f5-tjskc:1080/proxy/: <a href="/api/v1/namespaces/proxy-3336/pods/proxy-service-xwwrn-547ff779f5-tjskc:1080/proxy/rewri... (200; 6.621007ms)
  I0904 16:12:52.143460 23 proxy.go:610] (7) /api/v1/namespaces/proxy-3336/services/http:proxy-service-xwwrn:portname1/proxy/: foo (200; 7.928569ms)
  I0904 16:12:52.143579 23 proxy.go:610] (7) /api/v1/namespaces/proxy-3336/services/http:proxy-service-xwwrn:portname2/proxy/: bar (200; 8.031333ms)
  I0904 16:12:52.145246 23 proxy.go:610] (7) /api/v1/namespaces/proxy-3336/services/proxy-service-xwwrn:portname1/proxy/: foo (200; 9.619562ms)
  I0904 16:12:52.148336 23 proxy.go:610] (8) /api/v1/namespaces/proxy-3336/pods/http:proxy-service-xwwrn-547ff779f5-tjskc:162/proxy/: bar (200; 3.071087ms)
  I0904 16:12:52.148831 23 proxy.go:610] (8) /api/v1/namespaces/proxy-3336/pods/https:proxy-service-xwwrn-547ff779f5-tjskc:443/proxy/: <a href="/api/v1/namespaces/proxy-3336/pods/https:proxy-service-xwwrn-547ff779f5-tjskc:443/proxy/... (200; 3.431148ms)
  I0904 16:12:52.149386 23 proxy.go:610] (8) /api/v1/namespaces/proxy-3336/pods/https:proxy-service-xwwrn-547ff779f5-tjskc:462/proxy/: tls qux (200; 3.972987ms)
  I0904 16:12:52.149734 23 proxy.go:610] (8) /api/v1/namespaces/proxy-3336/pods/proxy-service-xwwrn-547ff779f5-tjskc/proxy/: <a href="/api/v1/namespaces/proxy-3336/pods/proxy-service-xwwrn-547ff779f5-tjskc/proxy/rewriteme"... (200; 4.233558ms)
  I0904 16:12:52.149842 23 proxy.go:610] (8) /api/v1/namespaces/proxy-3336/pods/proxy-service-xwwrn-547ff779f5-tjskc:162/proxy/: bar (200; 4.38141ms)
  I0904 16:12:52.149850 23 proxy.go:610] (8) /api/v1/namespaces/proxy-3336/pods/http:proxy-service-xwwrn-547ff779f5-tjskc:160/proxy/: foo (200; 4.401575ms)
  I0904 16:12:52.150284 23 proxy.go:610] (8) /api/v1/namespaces/proxy-3336/services/http:proxy-service-xwwrn:portname1/proxy/: foo (200; 4.94126ms)
  I0904 16:12:52.151047 23 proxy.go:610] (8) /api/v1/namespaces/proxy-3336/services/proxy-service-xwwrn:portname1/proxy/: foo (200; 5.724342ms)
  I0904 16:12:52.151262 23 proxy.go:610] (8) /api/v1/namespaces/proxy-3336/pods/http:proxy-service-xwwrn-547ff779f5-tjskc:1080/proxy/: <a href="/api/v1/namespaces/proxy-3336/pods/http:proxy-service-xwwrn-547ff779f5-tjskc:1080/proxy/... (200; 5.877141ms)
  I0904 16:12:52.151622 23 proxy.go:610] (8) /api/v1/namespaces/proxy-3336/services/http:proxy-service-xwwrn:portname2/proxy/: bar (200; 6.268594ms)
  I0904 16:12:52.151822 23 proxy.go:610] (8) /api/v1/namespaces/proxy-3336/services/proxy-service-xwwrn:portname2/proxy/: bar (200; 6.452793ms)
  I0904 16:12:52.152457 23 proxy.go:610] (8) /api/v1/namespaces/proxy-3336/pods/proxy-service-xwwrn-547ff779f5-tjskc:1080/proxy/: <a href="/api/v1/namespaces/proxy-3336/pods/proxy-service-xwwrn-547ff779f5-tjskc:1080/proxy/rewri... (200; 7.021001ms)
  I0904 16:12:52.152709 23 proxy.go:610] (8) /api/v1/namespaces/proxy-3336/pods/https:proxy-service-xwwrn-547ff779f5-tjskc:460/proxy/: tls baz (200; 7.186414ms)
  I0904 16:12:52.152710 23 proxy.go:610] (8) /api/v1/namespaces/proxy-3336/pods/proxy-service-xwwrn-547ff779f5-tjskc:160/proxy/: foo (200; 7.200871ms)
  I0904 16:12:52.153213 23 proxy.go:610] (8) /api/v1/namespaces/proxy-3336/services/https:proxy-service-xwwrn:tlsportname2/proxy/: tls qux (200; 7.789056ms)
  I0904 16:12:52.153976 23 proxy.go:610] (8) /api/v1/namespaces/proxy-3336/services/https:proxy-service-xwwrn:tlsportname1/proxy/: tls baz (200; 8.50229ms)
  I0904 16:12:52.157877 23 proxy.go:610] (9) /api/v1/namespaces/proxy-3336/pods/https:proxy-service-xwwrn-547ff779f5-tjskc:460/proxy/: tls baz (200; 3.756802ms)
  I0904 16:12:52.157896 23 proxy.go:610] (9) /api/v1/namespaces/proxy-3336/pods/proxy-service-xwwrn-547ff779f5-tjskc:1080/proxy/: <a href="/api/v1/namespaces/proxy-3336/pods/proxy-service-xwwrn-547ff779f5-tjskc:1080/proxy/rewri... (200; 3.751893ms)
  I0904 16:12:52.158026 23 proxy.go:610] (9) /api/v1/namespaces/proxy-3336/pods/proxy-service-xwwrn-547ff779f5-tjskc:160/proxy/: foo (200; 3.945054ms)
  I0904 16:12:52.158037 23 proxy.go:610] (9) /api/v1/namespaces/proxy-3336/pods/proxy-service-xwwrn-547ff779f5-tjskc/proxy/: <a href="/api/v1/namespaces/proxy-3336/pods/proxy-service-xwwrn-547ff779f5-tjskc/proxy/rewriteme"... (200; 3.930793ms)
  I0904 16:12:52.158509 23 proxy.go:610] (9) /api/v1/namespaces/proxy-3336/pods/http:proxy-service-xwwrn-547ff779f5-tjskc:1080/proxy/: <a href="/api/v1/namespaces/proxy-3336/pods/http:proxy-service-xwwrn-547ff779f5-tjskc:1080/proxy/... (200; 4.44361ms)
  I0904 16:12:52.158667 23 proxy.go:610] (9) /api/v1/namespaces/proxy-3336/pods/proxy-service-xwwrn-547ff779f5-tjskc:162/proxy/: bar (200; 4.464588ms)
  I0904 16:12:52.158857 23 proxy.go:610] (9) /api/v1/namespaces/proxy-3336/services/http:proxy-service-xwwrn:portname1/proxy/: foo (200; 4.850461ms)
  I0904 16:12:52.159029 23 proxy.go:610] (9) /api/v1/namespaces/proxy-3336/pods/http:proxy-service-xwwrn-547ff779f5-tjskc:162/proxy/: bar (200; 5.035139ms)
  I0904 16:12:52.159705 23 proxy.go:610] (9) /api/v1/namespaces/proxy-3336/services/proxy-service-xwwrn:portname2/proxy/: bar (200; 5.653362ms)
  I0904 16:12:52.160173 23 proxy.go:610] (9) /api/v1/namespaces/proxy-3336/services/proxy-service-xwwrn:portname1/proxy/: foo (200; 6.145039ms)
  I0904 16:12:52.160385 23 proxy.go:610] (9) /api/v1/namespaces/proxy-3336/pods/http:proxy-service-xwwrn-547ff779f5-tjskc:160/proxy/: foo (200; 6.22178ms)
  I0904 16:12:52.160633 23 proxy.go:610] (9) /api/v1/namespaces/proxy-3336/pods/https:proxy-service-xwwrn-547ff779f5-tjskc:462/proxy/: tls qux (200; 6.422659ms)
  I0904 16:12:52.160887 23 proxy.go:610] (9) /api/v1/namespaces/proxy-3336/pods/https:proxy-service-xwwrn-547ff779f5-tjskc:443/proxy/: <a href="/api/v1/namespaces/proxy-3336/pods/https:proxy-service-xwwrn-547ff779f5-tjskc:443/proxy/... (200; 6.698742ms)
  I0904 16:12:52.161771 23 proxy.go:610] (9) /api/v1/namespaces/proxy-3336/services/http:proxy-service-xwwrn:portname2/proxy/: bar (200; 7.596443ms)
  I0904 16:12:52.161968 23 proxy.go:610] (9) /api/v1/namespaces/proxy-3336/services/https:proxy-service-xwwrn:tlsportname1/proxy/: tls baz (200; 7.87435ms)
  I0904 16:12:52.163442 23 proxy.go:610] (9) /api/v1/namespaces/proxy-3336/services/https:proxy-service-xwwrn:tlsportname2/proxy/: tls qux (200; 9.307158ms)
  I0904 16:12:52.166661 23 proxy.go:610] (10) /api/v1/namespaces/proxy-3336/pods/https:proxy-service-xwwrn-547ff779f5-tjskc:462/proxy/: tls qux (200; 3.20075ms)
  I0904 16:12:52.166956 23 proxy.go:610] (10) /api/v1/namespaces/proxy-3336/pods/proxy-service-xwwrn-547ff779f5-tjskc/proxy/: <a href="/api/v1/namespaces/proxy-3336/pods/proxy-service-xwwrn-547ff779f5-tjskc/proxy/rewriteme"... (200; 3.347666ms)
  I0904 16:12:52.167264 23 proxy.go:610] (10) /api/v1/namespaces/proxy-3336/pods/proxy-service-xwwrn-547ff779f5-tjskc:160/proxy/: foo (200; 3.742256ms)
  I0904 16:12:52.167266 23 proxy.go:610] (10) /api/v1/namespaces/proxy-3336/pods/https:proxy-service-xwwrn-547ff779f5-tjskc:460/proxy/: tls baz (200; 3.642786ms)
  I0904 16:12:52.167702 23 proxy.go:610] (10) /api/v1/namespaces/proxy-3336/pods/proxy-service-xwwrn-547ff779f5-tjskc:162/proxy/: bar (200; 4.002389ms)
  I0904 16:12:52.168039 23 proxy.go:610] (10) /api/v1/namespaces/proxy-3336/pods/http:proxy-service-xwwrn-547ff779f5-tjskc:162/proxy/: bar (200; 4.364329ms)
  I0904 16:12:52.168039 23 proxy.go:610] (10) /api/v1/namespaces/proxy-3336/services/https:proxy-service-xwwrn:tlsportname1/proxy/: tls baz (200; 4.462886ms)
  I0904 16:12:52.168235 23 proxy.go:610] (10) /api/v1/namespaces/proxy-3336/pods/http:proxy-service-xwwrn-547ff779f5-tjskc:160/proxy/: foo (200; 4.548659ms)
  I0904 16:12:52.169045 23 proxy.go:610] (10) /api/v1/namespaces/proxy-3336/services/proxy-service-xwwrn:portname2/proxy/: bar (200; 5.31882ms)
  I0904 16:12:52.169262 23 proxy.go:610] (10) /api/v1/namespaces/proxy-3336/services/http:proxy-service-xwwrn:portname1/proxy/: foo (200; 5.625798ms)
  I0904 16:12:52.170785 23 proxy.go:610] (10) /api/v1/namespaces/proxy-3336/services/http:proxy-service-xwwrn:portname2/proxy/: bar (200; 7.137415ms)
  I0904 16:12:52.170796 23 proxy.go:610] (10) /api/v1/namespaces/proxy-3336/pods/http:proxy-service-xwwrn-547ff779f5-tjskc:1080/proxy/: <a href="/api/v1/namespaces/proxy-3336/pods/http:proxy-service-xwwrn-547ff779f5-tjskc:1080/proxy/... (200; 7.274017ms)
  I0904 16:12:52.170889 23 proxy.go:610] (10) /api/v1/namespaces/proxy-3336/pods/proxy-service-xwwrn-547ff779f5-tjskc:1080/proxy/: <a href="/api/v1/namespaces/proxy-3336/pods/proxy-service-xwwrn-547ff779f5-tjskc:1080/proxy/rewri... (200; 7.32878ms)
  I0904 16:12:52.170911 23 proxy.go:610] (10) /api/v1/namespaces/proxy-3336/pods/https:proxy-service-xwwrn-547ff779f5-tjskc:443/proxy/: <a href="/api/v1/namespaces/proxy-3336/pods/https:proxy-service-xwwrn-547ff779f5-tjskc:443/proxy/... (200; 7.249166ms)
  I0904 16:12:52.171534 23 proxy.go:610] (10) /api/v1/namespaces/proxy-3336/services/proxy-service-xwwrn:portname1/proxy/: foo (200; 7.822246ms)
  I0904 16:12:52.172329 23 proxy.go:610] (10) /api/v1/namespaces/proxy-3336/services/https:proxy-service-xwwrn:tlsportname2/proxy/: tls qux (200; 8.784628ms)
  I0904 16:12:52.175608 23 proxy.go:610] (11) /api/v1/namespaces/proxy-3336/pods/https:proxy-service-xwwrn-547ff779f5-tjskc:443/proxy/: <a href="/api/v1/namespaces/proxy-3336/pods/https:proxy-service-xwwrn-547ff779f5-tjskc:443/proxy/... (200; 3.2606ms)
  I0904 16:12:52.176258 23 proxy.go:610] (11) /api/v1/namespaces/proxy-3336/pods/https:proxy-service-xwwrn-547ff779f5-tjskc:462/proxy/: tls qux (200; 3.712683ms)
  I0904 16:12:52.176517 23 proxy.go:610] (11) /api/v1/namespaces/proxy-3336/pods/http:proxy-service-xwwrn-547ff779f5-tjskc:162/proxy/: bar (200; 3.893627ms)
  I0904 16:12:52.176857 23 proxy.go:610] (11) /api/v1/namespaces/proxy-3336/pods/proxy-service-xwwrn-547ff779f5-tjskc:160/proxy/: foo (200; 4.40439ms)
  I0904 16:12:52.176912 23 proxy.go:610] (11) /api/v1/namespaces/proxy-3336/pods/https:proxy-service-xwwrn-547ff779f5-tjskc:460/proxy/: tls baz (200; 4.413915ms)
  I0904 16:12:52.176945 23 proxy.go:610] (11) /api/v1/namespaces/proxy-3336/pods/proxy-service-xwwrn-547ff779f5-tjskc/proxy/: <a href="/api/v1/namespaces/proxy-3336/pods/proxy-service-xwwrn-547ff779f5-tjskc/proxy/rewriteme"... (200; 4.46155ms)
  I0904 16:12:52.177218 23 proxy.go:610] (11) /api/v1/namespaces/proxy-3336/pods/http:proxy-service-xwwrn-547ff779f5-tjskc:1080/proxy/: <a href="/api/v1/namespaces/proxy-3336/pods/http:proxy-service-xwwrn-547ff779f5-tjskc:1080/proxy/... (200; 4.809928ms)
  I0904 16:12:52.177392 23 proxy.go:610] (11) /api/v1/namespaces/proxy-3336/pods/proxy-service-xwwrn-547ff779f5-tjskc:162/proxy/: bar (200; 4.781379ms)
  I0904 16:12:52.177782 23 proxy.go:610] (11) /api/v1/namespaces/proxy-3336/services/http:proxy-service-xwwrn:portname1/proxy/: foo (200; 5.266985ms)
  I0904 16:12:52.178420 23 proxy.go:610] (11) /api/v1/namespaces/proxy-3336/services/proxy-service-xwwrn:portname1/proxy/: foo (200; 5.785733ms)
  I0904 16:12:52.178791 23 proxy.go:610] (11) /api/v1/namespaces/proxy-3336/pods/http:proxy-service-xwwrn-547ff779f5-tjskc:160/proxy/: foo (200; 6.206773ms)
  I0904 16:12:52.178967 23 proxy.go:610] (11) /api/v1/namespaces/proxy-3336/pods/proxy-service-xwwrn-547ff779f5-tjskc:1080/proxy/: <a href="/api/v1/namespaces/proxy-3336/pods/proxy-service-xwwrn-547ff779f5-tjskc:1080/proxy/rewri... (200; 6.391994ms)
  I0904 16:12:52.179421 23 proxy.go:610] (11) /api/v1/namespaces/proxy-3336/services/proxy-service-xwwrn:portname2/proxy/: bar (200; 7.062018ms)
  I0904 16:12:52.180230 23 proxy.go:610] (11) /api/v1/namespaces/proxy-3336/services/https:proxy-service-xwwrn:tlsportname2/proxy/: tls qux (200; 7.670009ms)
  I0904 16:12:52.180470 23 proxy.go:610] (11) /api/v1/namespaces/proxy-3336/services/https:proxy-service-xwwrn:tlsportname1/proxy/: tls baz (200; 8.002469ms)
  I0904 16:12:52.180732 23 proxy.go:610] (11) /api/v1/namespaces/proxy-3336/services/http:proxy-service-xwwrn:portname2/proxy/: bar (200; 8.197927ms)
  I0904 16:12:52.183775 23 proxy.go:610] (12) /api/v1/namespaces/proxy-3336/pods/proxy-service-xwwrn-547ff779f5-tjskc:162/proxy/: bar (200; 3.024714ms)
  I0904 16:12:52.184446 23 proxy.go:610] (12) /api/v1/namespaces/proxy-3336/pods/https:proxy-service-xwwrn-547ff779f5-tjskc:443/proxy/: <a href="/api/v1/namespaces/proxy-3336/pods/https:proxy-service-xwwrn-547ff779f5-tjskc:443/proxy/... (200; 3.607245ms)
  I0904 16:12:52.184650 23 proxy.go:610] (12) /api/v1/namespaces/proxy-3336/pods/http:proxy-service-xwwrn-547ff779f5-tjskc:1080/proxy/: <a href="/api/v1/namespaces/proxy-3336/pods/http:proxy-service-xwwrn-547ff779f5-tjskc:1080/proxy/... (200; 3.732449ms)
  I0904 16:12:52.184756 23 proxy.go:610] (12) /api/v1/namespaces/proxy-3336/pods/proxy-service-xwwrn-547ff779f5-tjskc/proxy/: <a href="/api/v1/namespaces/proxy-3336/pods/proxy-service-xwwrn-547ff779f5-tjskc/proxy/rewriteme"... (200; 3.756296ms)
  I0904 16:12:52.184848 23 proxy.go:610] (12) /api/v1/namespaces/proxy-3336/pods/http:proxy-service-xwwrn-547ff779f5-tjskc:160/proxy/: foo (200; 3.947209ms)
  I0904 16:12:52.185494 23 proxy.go:610] (12) /api/v1/namespaces/proxy-3336/pods/http:proxy-service-xwwrn-547ff779f5-tjskc:162/proxy/: bar (200; 4.564731ms)
  I0904 16:12:52.185961 23 proxy.go:610] (12) /api/v1/namespaces/proxy-3336/services/http:proxy-service-xwwrn:portname1/proxy/: foo (200; 5.142997ms)
  I0904 16:12:52.186031 23 proxy.go:610] (12) /api/v1/namespaces/proxy-3336/services/https:proxy-service-xwwrn:tlsportname1/proxy/: tls baz (200; 5.066017ms)
  I0904 16:12:52.186687 23 proxy.go:610] (12) /api/v1/namespaces/proxy-3336/services/proxy-service-xwwrn:portname2/proxy/: bar (200; 5.734415ms)
  I0904 16:12:52.186968 23 proxy.go:610] (12) /api/v1/namespaces/proxy-3336/pods/https:proxy-service-xwwrn-547ff779f5-tjskc:460/proxy/: tls baz (200; 6.209403ms)
  I0904 16:12:52.187369 23 proxy.go:610] (12) /api/v1/namespaces/proxy-3336/pods/proxy-service-xwwrn-547ff779f5-tjskc:160/proxy/: foo (200; 6.393092ms)
  I0904 16:12:52.187381 23 proxy.go:610] (12) /api/v1/namespaces/proxy-3336/pods/proxy-service-xwwrn-547ff779f5-tjskc:1080/proxy/: <a href="/api/v1/namespaces/proxy-3336/pods/proxy-service-xwwrn-547ff779f5-tjskc:1080/proxy/rewri... (200; 6.491918ms)
  I0904 16:12:52.187468 23 proxy.go:610] (12) /api/v1/namespaces/proxy-3336/pods/https:proxy-service-xwwrn-547ff779f5-tjskc:462/proxy/: tls qux (200; 6.607326ms)
  I0904 16:12:52.188230 23 proxy.go:610] (12) /api/v1/namespaces/proxy-3336/services/proxy-service-xwwrn:portname1/proxy/: foo (200; 7.288987ms)
  I0904 16:12:52.188684 23 proxy.go:610] (12) /api/v1/namespaces/proxy-3336/services/https:proxy-service-xwwrn:tlsportname2/proxy/: tls qux (200; 7.807928ms)
  I0904 16:12:52.190260 23 proxy.go:610] (12) /api/v1/namespaces/proxy-3336/services/http:proxy-service-xwwrn:portname2/proxy/: bar (200; 9.433932ms)
  I0904 16:12:52.193240 23 proxy.go:610] (13) /api/v1/namespaces/proxy-3336/pods/http:proxy-service-xwwrn-547ff779f5-tjskc:1080/proxy/: <a href="/api/v1/namespaces/proxy-3336/pods/http:proxy-service-xwwrn-547ff779f5-tjskc:1080/proxy/... (200; 2.906851ms)
  I0904 16:12:52.193398 23 proxy.go:610] (13) /api/v1/namespaces/proxy-3336/pods/proxy-service-xwwrn-547ff779f5-tjskc:160/proxy/: foo (200; 3.048192ms)
  I0904 16:12:52.194068 23 proxy.go:610] (13) /api/v1/namespaces/proxy-3336/pods/https:proxy-service-xwwrn-547ff779f5-tjskc:460/proxy/: tls baz (200; 3.658847ms)
  I0904 16:12:52.194309 23 proxy.go:610] (13) /api/v1/namespaces/proxy-3336/pods/proxy-service-xwwrn-547ff779f5-tjskc:1080/proxy/: <a href="/api/v1/namespaces/proxy-3336/pods/proxy-service-xwwrn-547ff779f5-tjskc:1080/proxy/rewri... (200; 3.785589ms)
  I0904 16:12:52.194867 23 proxy.go:610] (13) /api/v1/namespaces/proxy-3336/services/proxy-service-xwwrn:portname2/proxy/: bar (200; 4.55885ms)
  I0904 16:12:52.195033 23 proxy.go:610] (13) /api/v1/namespaces/proxy-3336/pods/https:proxy-service-xwwrn-547ff779f5-tjskc:462/proxy/: tls qux (200; 4.591948ms)
  I0904 16:12:52.195161 23 proxy.go:610] (13) /api/v1/namespaces/proxy-3336/pods/https:proxy-service-xwwrn-547ff779f5-tjskc:443/proxy/: <a href="/api/v1/namespaces/proxy-3336/pods/https:proxy-service-xwwrn-547ff779f5-tjskc:443/proxy/... (200; 4.876247ms)
  I0904 16:12:52.195252 23 proxy.go:610] (13) /api/v1/namespaces/proxy-3336/pods/proxy-service-xwwrn-547ff779f5-tjskc:162/proxy/: bar (200; 4.776172ms)
  I0904 16:12:52.195547 23 proxy.go:610] (13) /api/v1/namespaces/proxy-3336/services/http:proxy-service-xwwrn:portname1/proxy/: foo (200; 5.124464ms)
  I0904 16:12:52.195797 23 proxy.go:610] (13) /api/v1/namespaces/proxy-3336/services/proxy-service-xwwrn:portname1/proxy/: foo (200; 5.247529ms)
  I0904 16:12:52.197683 23 proxy.go:610] (13) /api/v1/namespaces/proxy-3336/services/https:proxy-service-xwwrn:tlsportname2/proxy/: tls qux (200; 7.191355ms)
  I0904 16:12:52.197735 23 proxy.go:610] (13) /api/v1/namespaces/proxy-3336/pods/proxy-service-xwwrn-547ff779f5-tjskc/proxy/: <a href="/api/v1/namespaces/proxy-3336/pods/proxy-service-xwwrn-547ff779f5-tjskc/proxy/rewriteme"... (200; 7.340873ms)
  I0904 16:12:52.197756 23 proxy.go:610] (13) /api/v1/namespaces/proxy-3336/pods/http:proxy-service-xwwrn-547ff779f5-tjskc:160/proxy/: foo (200; 7.220684ms)
  I0904 16:12:52.197765 23 proxy.go:610] (13) /api/v1/namespaces/proxy-3336/pods/http:proxy-service-xwwrn-547ff779f5-tjskc:162/proxy/: bar (200; 7.258961ms)
  I0904 16:12:52.198162 23 proxy.go:610] (13) /api/v1/namespaces/proxy-3336/services/http:proxy-service-xwwrn:portname2/proxy/: bar (200; 7.702103ms)
  I0904 16:12:52.198883 23 proxy.go:610] (13) /api/v1/namespaces/proxy-3336/services/https:proxy-service-xwwrn:tlsportname1/proxy/: tls baz (200; 8.503087ms)
  I0904 16:12:52.202006 23 proxy.go:610] (14) /api/v1/namespaces/proxy-3336/pods/proxy-service-xwwrn-547ff779f5-tjskc:1080/proxy/: <a href="/api/v1/namespaces/proxy-3336/pods/proxy-service-xwwrn-547ff779f5-tjskc:1080/proxy/rewri... (200; 3.031595ms)
  I0904 16:12:52.202327 23 proxy.go:610] (14) /api/v1/namespaces/proxy-3336/pods/proxy-service-xwwrn-547ff779f5-tjskc:162/proxy/: bar (200; 3.309323ms)
  I0904 16:12:52.202557 23 proxy.go:610] (14) /api/v1/namespaces/proxy-3336/pods/http:proxy-service-xwwrn-547ff779f5-tjskc:1080/proxy/: <a href="/api/v1/namespaces/proxy-3336/pods/http:proxy-service-xwwrn-547ff779f5-tjskc:1080/proxy/... (200; 3.48903ms)
  I0904 16:12:52.203615 23 proxy.go:610] (14) /api/v1/namespaces/proxy-3336/pods/proxy-service-xwwrn-547ff779f5-tjskc:160/proxy/: foo (200; 4.712951ms)
  I0904 16:12:52.203620 23 proxy.go:610] (14) /api/v1/namespaces/proxy-3336/pods/https:proxy-service-xwwrn-547ff779f5-tjskc:460/proxy/: tls baz (200; 4.499408ms)
  I0904 16:12:52.203631 23 proxy.go:610] (14) /api/v1/namespaces/proxy-3336/pods/https:proxy-service-xwwrn-547ff779f5-tjskc:443/proxy/: <a href="/api/v1/namespaces/proxy-3336/pods/https:proxy-service-xwwrn-547ff779f5-tjskc:443/proxy/... (200; 4.498528ms)
  I0904 16:12:52.203689 23 proxy.go:610] (14) /api/v1/namespaces/proxy-3336/pods/proxy-service-xwwrn-547ff779f5-tjskc/proxy/: <a href="/api/v1/namespaces/proxy-3336/pods/proxy-service-xwwrn-547ff779f5-tjskc/proxy/rewriteme"... (200; 4.582903ms)
  I0904 16:12:52.203938 23 proxy.go:610] (14) /api/v1/namespaces/proxy-3336/services/proxy-service-xwwrn:portname1/proxy/: foo (200; 4.894831ms)
  I0904 16:12:52.204350 23 proxy.go:610] (14) /api/v1/namespaces/proxy-3336/pods/http:proxy-service-xwwrn-547ff779f5-tjskc:162/proxy/: bar (200; 5.319779ms)
  I0904 16:12:52.204963 23 proxy.go:610] (14) /api/v1/namespaces/proxy-3336/pods/http:proxy-service-xwwrn-547ff779f5-tjskc:160/proxy/: foo (200; 5.962204ms)
  I0904 16:12:52.204965 23 proxy.go:610] (14) /api/v1/namespaces/proxy-3336/services/http:proxy-service-xwwrn:portname2/proxy/: bar (200; 5.809592ms)
  I0904 16:12:52.205981 23 proxy.go:610] (14) /api/v1/namespaces/proxy-3336/pods/https:proxy-service-xwwrn-547ff779f5-tjskc:462/proxy/: tls qux (200; 6.812262ms)
  I0904 16:12:52.206166 23 proxy.go:610] (14) /api/v1/namespaces/proxy-3336/services/https:proxy-service-xwwrn:tlsportname2/proxy/: tls qux (200; 7.217996ms)
  I0904 16:12:52.206787 23 proxy.go:610] (14) /api/v1/namespaces/proxy-3336/services/proxy-service-xwwrn:portname2/proxy/: bar (200; 7.732215ms)
  I0904 16:12:52.206986 23 proxy.go:610] (14) /api/v1/namespaces/proxy-3336/services/https:proxy-service-xwwrn:tlsportname1/proxy/: tls baz (200; 7.893054ms)
  I0904 16:12:52.207268 23 proxy.go:610] (14) /api/v1/namespaces/proxy-3336/services/http:proxy-service-xwwrn:portname1/proxy/: foo (200; 8.186521ms)
  I0904 16:12:52.211902 23 proxy.go:610] (15) /api/v1/namespaces/proxy-3336/services/http:proxy-service-xwwrn:portname1/proxy/: foo (200; 4.568483ms)
  I0904 16:12:52.211914 23 proxy.go:610] (15) /api/v1/namespaces/proxy-3336/pods/proxy-service-xwwrn-547ff779f5-tjskc:1080/proxy/: <a href="/api/v1/namespaces/proxy-3336/pods/proxy-service-xwwrn-547ff779f5-tjskc:1080/proxy/rewri... (200; 4.38731ms)
  I0904 16:12:52.211919 23 proxy.go:610] (15) /api/v1/namespaces/proxy-3336/pods/https:proxy-service-xwwrn-547ff779f5-tjskc:462/proxy/: tls qux (200; 4.404207ms)
  I0904 16:12:52.211925 23 proxy.go:610] (15) /api/v1/namespaces/proxy-3336/pods/https:proxy-service-xwwrn-547ff779f5-tjskc:460/proxy/: tls baz (200; 4.423164ms)
  I0904 16:12:52.212039 23 proxy.go:610] (15) /api/v1/namespaces/proxy-3336/pods/proxy-service-xwwrn-547ff779f5-tjskc/proxy/: <a href="/api/v1/namespaces/proxy-3336/pods/proxy-service-xwwrn-547ff779f5-tjskc/proxy/rewriteme"... (200; 4.579826ms)
  I0904 16:12:52.212253 23 proxy.go:610] (15) /api/v1/namespaces/proxy-3336/pods/http:proxy-service-xwwrn-547ff779f5-tjskc:162/proxy/: bar (200; 4.967652ms)
  I0904 16:12:52.212253 23 proxy.go:610] (15) /api/v1/namespaces/proxy-3336/services/proxy-service-xwwrn:portname1/proxy/: foo (200; 4.880266ms)
  I0904 16:12:52.212264 23 proxy.go:610] (15) /api/v1/namespaces/proxy-3336/pods/proxy-service-xwwrn-547ff779f5-tjskc:162/proxy/: bar (200; 4.695753ms)
  I0904 16:12:52.212336 23 proxy.go:610] (15) /api/v1/namespaces/proxy-3336/pods/https:proxy-service-xwwrn-547ff779f5-tjskc:443/proxy/: <a href="/api/v1/namespaces/proxy-3336/pods/https:proxy-service-xwwrn-547ff779f5-tjskc:443/proxy/... (200; 4.848662ms)
  I0904 16:12:52.213256 23 proxy.go:610] (15) /api/v1/namespaces/proxy-3336/services/https:proxy-service-xwwrn:tlsportname2/proxy/: tls qux (200; 5.717891ms)
  I0904 16:12:52.214049 23 proxy.go:610] (15) /api/v1/namespaces/proxy-3336/pods/http:proxy-service-xwwrn-547ff779f5-tjskc:160/proxy/: foo (200; 6.497299ms)
  I0904 16:12:52.214049 23 proxy.go:610] (15) /api/v1/namespaces/proxy-3336/pods/proxy-service-xwwrn-547ff779f5-tjskc:160/proxy/: foo (200; 6.614747ms)
  I0904 16:12:52.214152 23 proxy.go:610] (15) /api/v1/namespaces/proxy-3336/pods/http:proxy-service-xwwrn-547ff779f5-tjskc:1080/proxy/: <a href="/api/v1/namespaces/proxy-3336/pods/http:proxy-service-xwwrn-547ff779f5-tjskc:1080/proxy/... (200; 6.720004ms)
  I0904 16:12:52.215005 23 proxy.go:610] (15) /api/v1/namespaces/proxy-3336/services/https:proxy-service-xwwrn:tlsportname1/proxy/: tls baz (200; 7.558167ms)
  I0904 16:12:52.215283 23 proxy.go:610] (15) /api/v1/namespaces/proxy-3336/services/proxy-service-xwwrn:portname2/proxy/: bar (200; 7.878985ms)
  I0904 16:12:52.216773 23 proxy.go:610] (15) /api/v1/namespaces/proxy-3336/services/http:proxy-service-xwwrn:portname2/proxy/: bar (200; 9.41374ms)
  I0904 16:12:52.219971 23 proxy.go:610] (16) /api/v1/namespaces/proxy-3336/pods/proxy-service-xwwrn-547ff779f5-tjskc:162/proxy/: bar (200; 3.157729ms)
  I0904 16:12:52.220560 23 proxy.go:610] (16) /api/v1/namespaces/proxy-3336/pods/https:proxy-service-xwwrn-547ff779f5-tjskc:462/proxy/: tls qux (200; 3.688355ms)
  I0904 16:12:52.221068 23 proxy.go:610] (16) /api/v1/namespaces/proxy-3336/pods/http:proxy-service-xwwrn-547ff779f5-tjskc:1080/proxy/: <a href="/api/v1/namespaces/proxy-3336/pods/http:proxy-service-xwwrn-547ff779f5-tjskc:1080/proxy/... (200; 4.125806ms)
  I0904 16:12:52.221407 23 proxy.go:610] (16) /api/v1/namespaces/proxy-3336/pods/https:proxy-service-xwwrn-547ff779f5-tjskc:443/proxy/: <a href="/api/v1/namespaces/proxy-3336/pods/https:proxy-service-xwwrn-547ff779f5-tjskc:443/proxy/... (200; 4.551611ms)
  I0904 16:12:52.221872 23 proxy.go:610] (16) /api/v1/namespaces/proxy-3336/pods/proxy-service-xwwrn-547ff779f5-tjskc/proxy/: <a href="/api/v1/namespaces/proxy-3336/pods/proxy-service-xwwrn-547ff779f5-tjskc/proxy/rewriteme"... (200; 4.844276ms)
  I0904 16:12:52.221908 23 proxy.go:610] (16) /api/v1/namespaces/proxy-3336/pods/http:proxy-service-xwwrn-547ff779f5-tjskc:162/proxy/: bar (200; 5.023047ms)
  I0904 16:12:52.222407 23 proxy.go:610] (16) /api/v1/namespaces/proxy-3336/pods/http:proxy-service-xwwrn-547ff779f5-tjskc:160/proxy/: foo (200; 5.398055ms)
  I0904 16:12:52.222445 23 proxy.go:610] (16) /api/v1/namespaces/proxy-3336/pods/https:proxy-service-xwwrn-547ff779f5-tjskc:460/proxy/: tls baz (200; 5.655688ms)
  I0904 16:12:52.222718 23 proxy.go:610] (16) /api/v1/namespaces/proxy-3336/services/https:proxy-service-xwwrn:tlsportname1/proxy/: tls baz (200; 5.732232ms)
  I0904 16:12:52.222967 23 proxy.go:610] (16) /api/v1/namespaces/proxy-3336/services/proxy-service-xwwrn:portname2/proxy/: bar (200; 6.037965ms)
  I0904 16:12:52.223379 23 proxy.go:610] (16) /api/v1/namespaces/proxy-3336/services/https:proxy-service-xwwrn:tlsportname2/proxy/: tls qux (200; 6.407995ms)
  I0904 16:12:52.223446 23 proxy.go:610] (16) /api/v1/namespaces/proxy-3336/pods/proxy-service-xwwrn-547ff779f5-tjskc:1080/proxy/: <a href="/api/v1/namespaces/proxy-3336/pods/proxy-service-xwwrn-547ff779f5-tjskc:1080/proxy/rewri... (200; 6.449098ms)
  I0904 16:12:52.223616 23 proxy.go:610] (16) /api/v1/namespaces/proxy-3336/pods/proxy-service-xwwrn-547ff779f5-tjskc:160/proxy/: foo (200; 6.657378ms)
  I0904 16:12:52.224314 23 proxy.go:610] (16) /api/v1/namespaces/proxy-3336/services/http:proxy-service-xwwrn:portname2/proxy/: bar (200; 7.468924ms)
  I0904 16:12:52.224764 23 proxy.go:610] (16) /api/v1/namespaces/proxy-3336/services/http:proxy-service-xwwrn:portname1/proxy/: foo (200; 7.931886ms)
  I0904 16:12:52.226371 23 proxy.go:610] (16) /api/v1/namespaces/proxy-3336/services/proxy-service-xwwrn:portname1/proxy/: foo (200; 9.456939ms)
  I0904 16:12:52.229521 23 proxy.go:610] (17) /api/v1/namespaces/proxy-3336/pods/http:proxy-service-xwwrn-547ff779f5-tjskc:160/proxy/: foo (200; 3.11356ms)
  I0904 16:12:52.229760 23 proxy.go:610] (17) /api/v1/namespaces/proxy-3336/pods/proxy-service-xwwrn-547ff779f5-tjskc:162/proxy/: bar (200; 3.305074ms)
  I0904 16:12:52.229851 23 proxy.go:610] (17) /api/v1/namespaces/proxy-3336/pods/http:proxy-service-xwwrn-547ff779f5-tjskc:162/proxy/: bar (200; 3.383237ms)
  I0904 16:12:52.230282 23 proxy.go:610] (17) /api/v1/namespaces/proxy-3336/pods/https:proxy-service-xwwrn-547ff779f5-tjskc:443/proxy/: <a href="/api/v1/namespaces/proxy-3336/pods/https:proxy-service-xwwrn-547ff779f5-tjskc:443/proxy/... (200; 3.724203ms)
  I0904 16:12:52.230292 23 proxy.go:610] (17) /api/v1/namespaces/proxy-3336/pods/proxy-service-xwwrn-547ff779f5-tjskc:1080/proxy/: <a href="/api/v1/namespaces/proxy-3336/pods/proxy-service-xwwrn-547ff779f5-tjskc:1080/proxy/rewri... (200; 3.674197ms)
  I0904 16:12:52.230317 23 proxy.go:610] (17) /api/v1/namespaces/proxy-3336/pods/http:proxy-service-xwwrn-547ff779f5-tjskc:1080/proxy/: <a href="/api/v1/namespaces/proxy-3336/pods/http:proxy-service-xwwrn-547ff779f5-tjskc:1080/proxy/... (200; 3.683251ms)
  I0904 16:12:52.230867 23 proxy.go:610] (17) /api/v1/namespaces/proxy-3336/pods/https:proxy-service-xwwrn-547ff779f5-tjskc:462/proxy/: tls qux (200; 4.294102ms)
  I0904 16:12:52.231215 23 proxy.go:610] (17) /api/v1/namespaces/proxy-3336/pods/proxy-service-xwwrn-547ff779f5-tjskc/proxy/: <a href="/api/v1/namespaces/proxy-3336/pods/proxy-service-xwwrn-547ff779f5-tjskc/proxy/rewriteme"... (200; 4.826094ms)
  I0904 16:12:52.231764 23 proxy.go:610] (17) /api/v1/namespaces/proxy-3336/services/http:proxy-service-xwwrn:portname1/proxy/: foo (200; 5.239755ms)
  I0904 16:12:52.232055 23 proxy.go:610] (17) /api/v1/namespaces/proxy-3336/services/https:proxy-service-xwwrn:tlsportname2/proxy/: tls qux (200; 5.452352ms)
  I0904 16:12:52.233264 23 proxy.go:610] (17) /api/v1/namespaces/proxy-3336/pods/https:proxy-service-xwwrn-547ff779f5-tjskc:460/proxy/: tls baz (200; 6.757161ms)
  I0904 16:12:52.233364 23 proxy.go:610] (17) /api/v1/namespaces/proxy-3336/pods/proxy-service-xwwrn-547ff779f5-tjskc:160/proxy/: foo (200; 6.720335ms)
  I0904 16:12:52.233711 23 proxy.go:610] (17) /api/v1/namespaces/proxy-3336/services/proxy-service-xwwrn:portname2/proxy/: bar (200; 7.018034ms)
  I0904 16:12:52.233900 23 proxy.go:610] (17) /api/v1/namespaces/proxy-3336/services/https:proxy-service-xwwrn:tlsportname1/proxy/: tls baz (200; 7.238104ms)
  I0904 16:12:52.234473 23 proxy.go:610] (17) /api/v1/namespaces/proxy-3336/services/http:proxy-service-xwwrn:portname2/proxy/: bar (200; 7.933088ms)
  I0904 16:12:52.234605 23 proxy.go:610] (17) /api/v1/namespaces/proxy-3336/services/proxy-service-xwwrn:portname1/proxy/: foo (200; 7.928739ms)
  I0904 16:12:52.238692 23 proxy.go:610] (18) /api/v1/namespaces/proxy-3336/pods/https:proxy-service-xwwrn-547ff779f5-tjskc:460/proxy/: tls baz (200; 4.068444ms)
  I0904 16:12:52.238735 23 proxy.go:610] (18) /api/v1/namespaces/proxy-3336/pods/proxy-service-xwwrn-547ff779f5-tjskc/proxy/: <a href="/api/v1/namespaces/proxy-3336/pods/proxy-service-xwwrn-547ff779f5-tjskc/proxy/rewriteme"... (200; 3.960983ms)
  I0904 16:12:52.239022 23 proxy.go:610] (18) /api/v1/namespaces/proxy-3336/pods/proxy-service-xwwrn-547ff779f5-tjskc:160/proxy/: foo (200; 4.272835ms)
  I0904 16:12:52.239328 23 proxy.go:610] (18) /api/v1/namespaces/proxy-3336/pods/https:proxy-service-xwwrn-547ff779f5-tjskc:443/proxy/: <a href="/api/v1/namespaces/proxy-3336/pods/https:proxy-service-xwwrn-547ff779f5-tjskc:443/proxy/... (200; 4.501736ms)
  I0904 16:12:52.239776 23 proxy.go:610] (18) /api/v1/namespaces/proxy-3336/pods/proxy-service-xwwrn-547ff779f5-tjskc:162/proxy/: bar (200; 5.132123ms)
  I0904 16:12:52.239801 23 proxy.go:610] (18) /api/v1/namespaces/proxy-3336/pods/proxy-service-xwwrn-547ff779f5-tjskc:1080/proxy/: <a href="/api/v1/namespaces/proxy-3336/pods/proxy-service-xwwrn-547ff779f5-tjskc:1080/proxy/rewri... (200; 4.964032ms)
  I0904 16:12:52.239947 23 proxy.go:610] (18) /api/v1/namespaces/proxy-3336/pods/http:proxy-service-xwwrn-547ff779f5-tjskc:162/proxy/: bar (200; 5.257801ms)
  I0904 16:12:52.240497 23 proxy.go:610] (18) /api/v1/namespaces/proxy-3336/services/http:proxy-service-xwwrn:portname1/proxy/: foo (200; 5.69678ms)
  I0904 16:12:52.240719 23 proxy.go:610] (18) /api/v1/namespaces/proxy-3336/services/proxy-service-xwwrn:portname2/proxy/: bar (200; 5.997641ms)
  I0904 16:12:52.240844 23 proxy.go:610] (18) /api/v1/namespaces/proxy-3336/services/proxy-service-xwwrn:portname1/proxy/: foo (200; 6.136968ms)
  I0904 16:12:52.241227 23 proxy.go:610] (18) /api/v1/namespaces/proxy-3336/pods/http:proxy-service-xwwrn-547ff779f5-tjskc:1080/proxy/: <a href="/api/v1/namespaces/proxy-3336/pods/http:proxy-service-xwwrn-547ff779f5-tjskc:1080/proxy/... (200; 6.491691ms)
  I0904 16:12:52.241329 23 proxy.go:610] (18) /api/v1/namespaces/proxy-3336/pods/https:proxy-service-xwwrn-547ff779f5-tjskc:462/proxy/: tls qux (200; 6.541266ms)
  I0904 16:12:52.241466 23 proxy.go:610] (18) /api/v1/namespaces/proxy-3336/pods/http:proxy-service-xwwrn-547ff779f5-tjskc:160/proxy/: foo (200; 6.605711ms)
  I0904 16:12:52.242200 23 proxy.go:610] (18) /api/v1/namespaces/proxy-3336/services/https:proxy-service-xwwrn:tlsportname2/proxy/: tls qux (200; 7.35178ms)
  I0904 16:12:52.242742 23 proxy.go:610] (18) /api/v1/namespaces/proxy-3336/services/https:proxy-service-xwwrn:tlsportname1/proxy/: tls baz (200; 7.980166ms)
  I0904 16:12:52.244505 23 proxy.go:610] (18) /api/v1/namespaces/proxy-3336/services/http:proxy-service-xwwrn:portname2/proxy/: bar (200; 9.692599ms)
  I0904 16:12:52.247686 23 proxy.go:610] (19) /api/v1/namespaces/proxy-3336/pods/http:proxy-service-xwwrn-547ff779f5-tjskc:1080/proxy/: <a href="/api/v1/namespaces/proxy-3336/pods/http:proxy-service-xwwrn-547ff779f5-tjskc:1080/proxy/... (200; 3.125473ms)
  I0904 16:12:52.248192 23 proxy.go:610] (19) /api/v1/namespaces/proxy-3336/pods/https:proxy-service-xwwrn-547ff779f5-tjskc:462/proxy/: tls qux (200; 3.670647ms)
  I0904 16:12:52.248456 23 proxy.go:610] (19) /api/v1/namespaces/proxy-3336/pods/http:proxy-service-xwwrn-547ff779f5-tjskc:162/proxy/: bar (200; 3.800779ms)
  I0904 16:12:52.248537 23 proxy.go:610] (19) /api/v1/namespaces/proxy-3336/pods/http:proxy-service-xwwrn-547ff779f5-tjskc:160/proxy/: foo (200; 3.906425ms)
  I0904 16:12:52.248548 23 proxy.go:610] (19) /api/v1/namespaces/proxy-3336/pods/proxy-service-xwwrn-547ff779f5-tjskc:160/proxy/: foo (200; 3.841645ms)
  I0904 16:12:52.248819 23 proxy.go:610] (19) /api/v1/namespaces/proxy-3336/pods/proxy-service-xwwrn-547ff779f5-tjskc:162/proxy/: bar (200; 4.174971ms)
  I0904 16:12:52.249037 23 proxy.go:610] (19) /api/v1/namespaces/proxy-3336/services/https:proxy-service-xwwrn:tlsportname2/proxy/: tls qux (200; 4.438131ms)
  I0904 16:12:52.249529 23 proxy.go:610] (19) /api/v1/namespaces/proxy-3336/pods/proxy-service-xwwrn-547ff779f5-tjskc/proxy/: <a href="/api/v1/namespaces/proxy-3336/pods/proxy-service-xwwrn-547ff779f5-tjskc/proxy/rewriteme"... (200; 4.798496ms)
  I0904 16:12:52.249930 23 proxy.go:610] (19) /api/v1/namespaces/proxy-3336/services/http:proxy-service-xwwrn:portname2/proxy/: bar (200; 5.187403ms)
  I0904 16:12:52.250486 23 proxy.go:610] (19) /api/v1/namespaces/proxy-3336/services/https:proxy-service-xwwrn:tlsportname1/proxy/: tls baz (200; 5.76683ms)
  I0904 16:12:52.251937 23 proxy.go:610] (19) /api/v1/namespaces/proxy-3336/pods/https:proxy-service-xwwrn-547ff779f5-tjskc:460/proxy/: tls baz (200; 7.243807ms)
  I0904 16:12:52.251947 23 proxy.go:610] (19) /api/v1/namespaces/proxy-3336/services/proxy-service-xwwrn:portname2/proxy/: bar (200; 7.267645ms)
  I0904 16:12:52.252223 23 proxy.go:610] (19) /api/v1/namespaces/proxy-3336/pods/https:proxy-service-xwwrn-547ff779f5-tjskc:443/proxy/: <a href="/api/v1/namespaces/proxy-3336/pods/https:proxy-service-xwwrn-547ff779f5-tjskc:443/proxy/... (200; 7.455845ms)
  I0904 16:12:52.252223 23 proxy.go:610] (19) /api/v1/namespaces/proxy-3336/pods/proxy-service-xwwrn-547ff779f5-tjskc:1080/proxy/: <a href="/api/v1/namespaces/proxy-3336/pods/proxy-service-xwwrn-547ff779f5-tjskc:1080/proxy/rewri... (200; 7.606236ms)
  I0904 16:12:52.252616 23 proxy.go:610] (19) /api/v1/namespaces/proxy-3336/services/http:proxy-service-xwwrn:portname1/proxy/: foo (200; 7.861033ms)
  I0904 16:12:52.253418 23 proxy.go:610] (19) /api/v1/namespaces/proxy-3336/services/proxy-service-xwwrn:portname1/proxy/: foo (200; 8.74958ms)
  I0904 16:12:52.259816 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-3336" for this suite. @ 09/04/25 16:12:52.263
• [2.260 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:96
  STEP: Creating a kubernetes client @ 09/04/25 16:12:52.27
  I0904 16:12:52.270816 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename replication-controller @ 09/04/25 16:12:52.271
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 16:12:52.285
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 16:12:52.286
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 09/04/25 16:12:52.289
  E0904 16:12:52.537797      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:12:53.538042      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: When a replication controller with a matching selector is created @ 09/04/25 16:12:54.312
  STEP: Then the orphan pod is adopted @ 09/04/25 16:12:54.315
  E0904 16:12:54.538649      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:12:55.322923 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-9797" for this suite. @ 09/04/25 16:12:55.326
• [3.064 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:236
  STEP: Creating a kubernetes client @ 09/04/25 16:12:55.334
  I0904 16:12:55.334806 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename projected @ 09/04/25 16:12:55.335
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 16:12:55.346
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 16:12:55.349
  STEP: Creating a pod to test downward API volume plugin @ 09/04/25 16:12:55.351
  E0904 16:12:55.539458      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:12:56.539733      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:12:57.540058      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:12:58.540146      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/25 16:12:59.462
  I0904 16:12:59.465939 23 output.go:207] Trying to get logs from node ip-172-31-18-79 pod downwardapi-volume-3460955e-3989-4636-bde4-683005fa0e10 container client-container: <nil>
  STEP: delete the pod @ 09/04/25 16:12:59.475
  I0904 16:12:59.498343 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1521" for this suite. @ 09/04/25 16:12:59.501
• [4.173 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:189
  STEP: Creating a kubernetes client @ 09/04/25 16:12:59.508
  I0904 16:12:59.508284 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename emptydir @ 09/04/25 16:12:59.508
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 16:12:59.519
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 16:12:59.521
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 09/04/25 16:12:59.523
  E0904 16:12:59.540244      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:13:00.540432      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:13:01.541256      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:13:02.541417      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:13:03.541606      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/25 16:13:03.545
  I0904 16:13:03.550752 23 output.go:207] Trying to get logs from node ip-172-31-33-202 pod pod-6ba6814c-a309-4af4-9df8-cd78ba699c6a container test-container: <nil>
  STEP: delete the pod @ 09/04/25 16:13:03.558
  I0904 16:13:03.574868 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2906" for this suite. @ 09/04/25 16:13:03.578
• [4.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:754
  STEP: Creating a kubernetes client @ 09/04/25 16:13:03.586
  I0904 16:13:03.586701 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename sched-preemption @ 09/04/25 16:13:03.587
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 16:13:03.597
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 16:13:03.599
  I0904 16:13:03.615288 23 wait.go:51] Waiting up to 1m0s for all nodes to be ready
  E0904 16:13:04.541766      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:13:05.541873      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:13:06.542895      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:13:07.543057      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:13:08.543190      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:13:09.544026      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:13:10.544136      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:13:11.544955      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:13:12.545801      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:13:13.545874      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:13:14.546012      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:13:15.546791      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:13:16.546810      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:13:17.547788      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:13:18.548837      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:13:19.548956      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:13:20.549819      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:13:21.549802      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:13:22.550792      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:13:23.550985      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:13:24.551107      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:13:25.551311      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:13:26.551947      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:13:27.552804      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:13:28.553367      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:13:29.553523      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:13:30.553993      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:13:31.554869      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:13:32.554981      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:13:33.555800      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:13:34.556796      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:13:35.557793      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:13:36.557851      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:13:37.558795      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:13:38.558894      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:13:39.559069      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:13:40.559168      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:13:41.559925      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:13:42.560524      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:13:43.560793      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:13:44.561502      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:13:45.561785      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:13:46.562870      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:13:47.563068      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:13:48.563712      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:13:49.563824      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:13:50.564392      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:13:51.564863      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:13:52.564987      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:13:53.565059      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:13:54.565189      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:13:55.565252      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:13:56.565906      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:13:57.565986      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:13:58.566114      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:13:59.567053      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:14:00.567136      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:14:01.567868      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:14:02.567994      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:14:03.568078      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:14:03.620778 23 util.go:390] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 09/04/25 16:14:03.625
  I0904 16:14:03.625557 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename sched-preemption-path @ 09/04/25 16:14:03.626
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 16:14:03.641
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 16:14:03.642
  STEP: Finding an available node @ 09/04/25 16:14:03.644
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 09/04/25 16:14:03.644
  E0904 16:14:04.568215      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:14:05.568354      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 09/04/25 16:14:05.667
  I0904 16:14:05.683851 23 preemption.go:717] found a healthy node: ip-172-31-33-202
  STEP: Adding a custom resource @ 09/04/25 16:14:05.686
  E0904 16:14:06.568737      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:14:07.568840      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:14:08.569478      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:14:09.569732      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:14:10.569767      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:14:11.569851      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:14:11.748282 23 preemption.go:836] pods created so far: [1 1 1]
  I0904 16:14:11.748307 23 preemption.go:837] length of pods created so far: 3
  E0904 16:14:12.570381      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:14:13.570986      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:14:13.757575 23 preemption.go:854] pods created so far: [2 2 1]
  E0904 16:14:14.571458      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:14:15.571696      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:14:16.571924      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:14:17.572112      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:14:18.572225      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:14:19.572333      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:14:20.572614      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Removing a custom resource @ 09/04/25 16:14:20.758
  STEP: Removing a custom resource @ 09/04/25 16:14:20.816
  STEP: Removing a custom resource @ 09/04/25 16:14:20.821
  STEP: Removing a custom resource @ 09/04/25 16:14:20.829
  I0904 16:14:20.836154 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-3844" for this suite. @ 09/04/25 16:14:20.838
  I0904 16:14:20.844792 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-9078" for this suite. @ 09/04/25 16:14:20.939
• [77.361 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 09/04/25 16:14:20.947
  I0904 16:14:20.947678 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename subpath @ 09/04/25 16:14:20.948
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 16:14:20.96
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 16:14:20.962
  STEP: Setting up data @ 09/04/25 16:14:20.964
  STEP: Creating pod pod-subpath-test-configmap-m2st @ 09/04/25 16:14:20.971
  STEP: Creating a pod to test atomic-volume-subpath @ 09/04/25 16:14:20.971
  E0904 16:14:21.573548      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:14:22.573609      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:14:23.573695      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:14:24.573786      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:14:25.574524      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:14:26.574715      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:14:27.574963      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:14:28.575067      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:14:29.575167      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:14:30.575243      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:14:31.575743      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:14:32.576786      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:14:33.577819      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:14:34.577900      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:14:35.578954      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:14:36.579141      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:14:37.580147      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:14:38.580318      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:14:39.581093      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:14:40.581167      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:14:41.582025      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:14:42.582834      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/25 16:14:43.071
  I0904 16:14:43.075211 23 output.go:207] Trying to get logs from node ip-172-31-18-79 pod pod-subpath-test-configmap-m2st container test-container-subpath-configmap-m2st: <nil>
  STEP: delete the pod @ 09/04/25 16:14:43.083
  STEP: Deleting pod pod-subpath-test-configmap-m2st @ 09/04/25 16:14:43.104
  I0904 16:14:43.104450 23 delete.go:78] Deleting pod "pod-subpath-test-configmap-m2st" in namespace "subpath-1347"
  I0904 16:14:43.106561 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-1347" for this suite. @ 09/04/25 16:14:43.109
• [22.167 seconds]
------------------------------
SS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:169
  STEP: Creating a kubernetes client @ 09/04/25 16:14:43.114
  I0904 16:14:43.114990 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename emptydir @ 09/04/25 16:14:43.115
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 16:14:43.129
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 16:14:43.131
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 09/04/25 16:14:43.133
  E0904 16:14:43.582985      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:14:44.583052      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:14:45.584007      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:14:46.584090      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/25 16:14:47.155
  I0904 16:14:47.160190 23 output.go:207] Trying to get logs from node ip-172-31-33-202 pod pod-93a54484-2f7c-42de-8a6c-2c67c90d4547 container test-container: <nil>
  STEP: delete the pod @ 09/04/25 16:14:47.175
  I0904 16:14:47.192425 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9001" for this suite. @ 09/04/25 16:14:47.195
• [4.087 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:85
  STEP: Creating a kubernetes client @ 09/04/25 16:14:47.202
  I0904 16:14:47.202202 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename downward-api @ 09/04/25 16:14:47.202
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 16:14:47.213
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 16:14:47.215
  STEP: Creating a pod to test downward API volume plugin @ 09/04/25 16:14:47.218
  E0904 16:14:47.584869      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:14:48.585057      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:14:49.585787      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:14:50.585873      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/25 16:14:51.239
  I0904 16:14:51.243532 23 output.go:207] Trying to get logs from node ip-172-31-33-202 pod downwardapi-volume-c0afbb54-c198-4ed5-b63e-c471ca6bd3bc container client-container: <nil>
  STEP: delete the pod @ 09/04/25 16:14:51.251
  I0904 16:14:51.269079 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9122" for this suite. @ 09/04/25 16:14:51.271
• [4.077 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:222
  STEP: Creating a kubernetes client @ 09/04/25 16:14:51.278
  I0904 16:14:51.278903 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename downward-api @ 09/04/25 16:14:51.279
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 16:14:51.291
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 16:14:51.294
  STEP: Creating a pod to test downward API volume plugin @ 09/04/25 16:14:51.296
  E0904 16:14:51.586329      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:14:52.586791      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:14:53.587247      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:14:54.587412      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/25 16:14:55.318
  I0904 16:14:55.321145 23 output.go:207] Trying to get logs from node ip-172-31-33-202 pod downwardapi-volume-bf107abc-6c8e-432d-ac23-553023a89815 container client-container: <nil>
  STEP: delete the pod @ 09/04/25 16:14:55.328
  I0904 16:14:55.345830 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8156" for this suite. @ 09/04/25 16:14:55.35
• [4.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:348
  STEP: Creating a kubernetes client @ 09/04/25 16:14:55.357
  I0904 16:14:55.357694 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename field-validation @ 09/04/25 16:14:55.358
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 16:14:55.372
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 16:14:55.374
  I0904 16:14:55.376787 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  W0904 16:14:55.377212      23 field_validation.go:421] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc004daefe0 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  I0904 16:14:55.381614      23 warnings.go:110] "Warning: unrecognized format \"int32\""
  E0904 16:14:55.587794      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:14:56.588821      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:14:57.588928      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:14:57.905800      23 warnings.go:110] "Warning: unknown field \"alpha\""
  I0904 16:14:57.905822      23 warnings.go:110] "Warning: unknown field \"beta\""
  I0904 16:14:57.905827      23 warnings.go:110] "Warning: unknown field \"delta\""
  I0904 16:14:57.905831      23 warnings.go:110] "Warning: unknown field \"epsilon\""
  I0904 16:14:57.905840      23 warnings.go:110] "Warning: unknown field \"gamma\""
  I0904 16:14:58.442362 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-2911" for this suite. @ 09/04/25 16:14:58.445
• [3.096 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] Job should allow to use a pod failure policy to ignore failure matching on DisruptionTarget condition [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:198
  STEP: Creating a kubernetes client @ 09/04/25 16:14:58.454
  I0904 16:14:58.454219 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename job @ 09/04/25 16:14:58.454
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 16:14:58.465
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 16:14:58.467
  STEP: Looking for a node to schedule job pods @ 09/04/25 16:14:58.47
  STEP: Creating a job @ 09/04/25 16:14:58.546
  STEP: Waiting for all the pods to be ready @ 09/04/25 16:14:58.552
  E0904 16:14:58.589989      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:14:59.590185      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:15:00.590868      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:15:01.590923      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Fetch all running pods @ 09/04/25 16:15:02.57
  STEP: Evict all the Pods @ 09/04/25 16:15:02.574
  STEP: Evicting the running pod: evicted-pod-ignore-on-disruption-condition-0-l7dqn/job-3462 @ 09/04/25 16:15:02.574
  STEP: Evicting the running pod: evicted-pod-ignore-on-disruption-condition-1-g9lkg/job-3462 @ 09/04/25 16:15:02.574
  STEP: Evicting the running pod: evicted-pod-ignore-on-disruption-condition-2-vf8sl/job-3462 @ 09/04/25 16:15:02.574
  E0904 16:15:02.591148      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Awaiting for the pod: evicted-pod-ignore-on-disruption-condition-2-vf8sl/job-3462 to be deleted @ 09/04/25 16:15:02.598
  STEP: Awaiting for the pod: evicted-pod-ignore-on-disruption-condition-0-l7dqn/job-3462 to be deleted @ 09/04/25 16:15:02.599
  STEP: Awaiting for the pod: evicted-pod-ignore-on-disruption-condition-1-g9lkg/job-3462 to be deleted @ 09/04/25 16:15:02.599
  E0904 16:15:03.591323      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:15:04.591440      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:15:05.591779      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:15:06.591957      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensuring job reaches completions @ 09/04/25 16:15:06.611
  E0904 16:15:07.592102      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:15:08.592830      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:15:09.592930      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:15:10.593045      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:15:11.594055      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:15:12.594295      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:15:13.594751      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:15:14.595800      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:15:15.595928      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:15:16.596881      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:15:17.597008      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:15:18.597199      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:15:19.597347      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:15:20.597411      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:15:21.598033      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:15:22.598121      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:15:23.598214      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:15:24.598302      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:15:25.598755      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:15:26.598883      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:15:27.599202      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:15:28.599875      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:15:29.600006      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:15:30.600050      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:15:31.600965      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:15:32.601183      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:15:33.601328      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:15:34.601543      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:15:35.601697      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:15:36.602034      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:15:37.602174      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:15:38.602273      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:15:39.602455      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:15:40.602548      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:15:41.602918      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:15:42.603005      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:15:43.603666      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:15:44.603808      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:15:45.603935      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:15:46.604927      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:15:47.605051      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:15:48.605120      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:15:48.720090 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-3462" for this suite. @ 09/04/25 16:15:48.724
• [50.277 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:135
  STEP: Creating a kubernetes client @ 09/04/25 16:15:48.731
  I0904 16:15:48.731558 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename container-probe @ 09/04/25 16:15:48.732
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 16:15:48.746
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 16:15:48.748
  STEP: Creating pod busybox-c2083d33-341f-4f3d-b46c-2dcbd0a8f847 in namespace container-probe-4109 @ 09/04/25 16:15:48.75
  E0904 16:15:49.605254      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:15:50.605317      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/04/25 16:15:50.77
  I0904 16:15:50.773091 23 container_probe.go:1749] Initial restart count of pod busybox-c2083d33-341f-4f3d-b46c-2dcbd0a8f847 is 0
  I0904 16:15:50.775166 23 container_probe.go:1759] Get pod busybox-c2083d33-341f-4f3d-b46c-2dcbd0a8f847 in namespace container-probe-4109
  E0904 16:15:51.606004      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:15:52.606078      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:15:52.780368 23 container_probe.go:1759] Get pod busybox-c2083d33-341f-4f3d-b46c-2dcbd0a8f847 in namespace container-probe-4109
  E0904 16:15:53.606189      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:15:54.606270      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:15:54.785941 23 container_probe.go:1759] Get pod busybox-c2083d33-341f-4f3d-b46c-2dcbd0a8f847 in namespace container-probe-4109
  E0904 16:15:55.606530      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:15:56.606649      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:15:56.792550 23 container_probe.go:1759] Get pod busybox-c2083d33-341f-4f3d-b46c-2dcbd0a8f847 in namespace container-probe-4109
  E0904 16:15:57.606755      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:15:58.607821      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:15:58.796904 23 container_probe.go:1759] Get pod busybox-c2083d33-341f-4f3d-b46c-2dcbd0a8f847 in namespace container-probe-4109
  E0904 16:15:59.608811      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:16:00.608949      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:16:00.803113 23 container_probe.go:1759] Get pod busybox-c2083d33-341f-4f3d-b46c-2dcbd0a8f847 in namespace container-probe-4109
  E0904 16:16:01.609122      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:16:02.609483      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:16:02.807447 23 container_probe.go:1759] Get pod busybox-c2083d33-341f-4f3d-b46c-2dcbd0a8f847 in namespace container-probe-4109
  E0904 16:16:03.609427      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:16:04.609792      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:16:04.811850 23 container_probe.go:1759] Get pod busybox-c2083d33-341f-4f3d-b46c-2dcbd0a8f847 in namespace container-probe-4109
  E0904 16:16:05.610823      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:16:06.610971      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:16:06.815845 23 container_probe.go:1759] Get pod busybox-c2083d33-341f-4f3d-b46c-2dcbd0a8f847 in namespace container-probe-4109
  E0904 16:16:07.611689      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:16:08.611794      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:16:08.823075 23 container_probe.go:1759] Get pod busybox-c2083d33-341f-4f3d-b46c-2dcbd0a8f847 in namespace container-probe-4109
  E0904 16:16:09.611953      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:16:10.612152      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:16:10.827300 23 container_probe.go:1759] Get pod busybox-c2083d33-341f-4f3d-b46c-2dcbd0a8f847 in namespace container-probe-4109
  E0904 16:16:11.612215      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:16:12.612365      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:16:12.831784 23 container_probe.go:1759] Get pod busybox-c2083d33-341f-4f3d-b46c-2dcbd0a8f847 in namespace container-probe-4109
  E0904 16:16:13.612696      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:16:14.612733      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:16:14.835656 23 container_probe.go:1759] Get pod busybox-c2083d33-341f-4f3d-b46c-2dcbd0a8f847 in namespace container-probe-4109
  E0904 16:16:15.613457      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:16:16.613561      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:16:16.842171 23 container_probe.go:1759] Get pod busybox-c2083d33-341f-4f3d-b46c-2dcbd0a8f847 in namespace container-probe-4109
  E0904 16:16:17.613744      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:16:18.613841      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:16:18.846921 23 container_probe.go:1759] Get pod busybox-c2083d33-341f-4f3d-b46c-2dcbd0a8f847 in namespace container-probe-4109
  E0904 16:16:19.614791      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:16:20.614901      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:16:20.852756 23 container_probe.go:1759] Get pod busybox-c2083d33-341f-4f3d-b46c-2dcbd0a8f847 in namespace container-probe-4109
  E0904 16:16:21.615802      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:16:22.615881      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:16:22.857031 23 container_probe.go:1759] Get pod busybox-c2083d33-341f-4f3d-b46c-2dcbd0a8f847 in namespace container-probe-4109
  E0904 16:16:23.616782      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:16:24.616954      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:16:24.861286 23 container_probe.go:1759] Get pod busybox-c2083d33-341f-4f3d-b46c-2dcbd0a8f847 in namespace container-probe-4109
  E0904 16:16:25.617794      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:16:26.617959      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:16:26.865675 23 container_probe.go:1759] Get pod busybox-c2083d33-341f-4f3d-b46c-2dcbd0a8f847 in namespace container-probe-4109
  E0904 16:16:27.618541      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:16:28.618761      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:16:28.868802 23 container_probe.go:1759] Get pod busybox-c2083d33-341f-4f3d-b46c-2dcbd0a8f847 in namespace container-probe-4109
  E0904 16:16:29.619719      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:16:30.619931      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:16:30.871975 23 container_probe.go:1759] Get pod busybox-c2083d33-341f-4f3d-b46c-2dcbd0a8f847 in namespace container-probe-4109
  E0904 16:16:31.620928      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:16:32.621122      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:16:32.876121 23 container_probe.go:1759] Get pod busybox-c2083d33-341f-4f3d-b46c-2dcbd0a8f847 in namespace container-probe-4109
  E0904 16:16:33.621280      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:16:34.621480      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:16:34.882346 23 container_probe.go:1759] Get pod busybox-c2083d33-341f-4f3d-b46c-2dcbd0a8f847 in namespace container-probe-4109
  E0904 16:16:35.622104      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:16:36.623038      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:16:36.885793 23 container_probe.go:1759] Get pod busybox-c2083d33-341f-4f3d-b46c-2dcbd0a8f847 in namespace container-probe-4109
  E0904 16:16:37.623377      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:16:38.623569      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:16:38.891973 23 container_probe.go:1759] Get pod busybox-c2083d33-341f-4f3d-b46c-2dcbd0a8f847 in namespace container-probe-4109
  E0904 16:16:39.624377      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:16:40.624455      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:16:40.896160 23 container_probe.go:1759] Get pod busybox-c2083d33-341f-4f3d-b46c-2dcbd0a8f847 in namespace container-probe-4109
  I0904 16:16:40.896196 23 container_probe.go:1763] Restart count of pod container-probe-4109/busybox-c2083d33-341f-4f3d-b46c-2dcbd0a8f847 is now 1 (50.123084565s elapsed)
  STEP: deleting the pod @ 09/04/25 16:16:40.896
  I0904 16:16:40.910623 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-4109" for this suite. @ 09/04/25 16:16:40.913
• [52.188 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Lease lease API should be available [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lease.go:73
  STEP: Creating a kubernetes client @ 09/04/25 16:16:40.919
  I0904 16:16:40.919856 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename lease-test @ 09/04/25 16:16:40.92
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 16:16:40.939
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 16:16:40.941
  I0904 16:16:41.001097 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-8322" for this suite. @ 09/04/25 16:16:41.014
• [0.102 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:603
  STEP: Creating a kubernetes client @ 09/04/25 16:16:41.021
  I0904 16:16:41.021545 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename security-context-test @ 09/04/25 16:16:41.022
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 16:16:41.037
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 16:16:41.039
  E0904 16:16:41.625045      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:16:42.625799      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:16:43.058404 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-6788" for this suite. @ 09/04/25 16:16:43.065
• [2.048 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:262
  STEP: Creating a kubernetes client @ 09/04/25 16:16:43.07
  I0904 16:16:43.070166 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename downward-api @ 09/04/25 16:16:43.07
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 16:16:43.088
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 16:16:43.09
  STEP: Creating a pod to test downward API volume plugin @ 09/04/25 16:16:43.092
  E0904 16:16:43.626576      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:16:44.626745      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/04/25 16:16:45.11
  I0904 16:16:45.113259 23 output.go:207] Trying to get logs from node ip-172-31-33-202 pod downwardapi-volume-bae4750d-4689-4443-9ea1-52579015ea99 container client-container: <nil>
  STEP: delete the pod @ 09/04/25 16:16:45.122
  I0904 16:16:45.141107 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9691" for this suite. @ 09/04/25 16:16:45.145
• [2.080 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:850
  STEP: Creating a kubernetes client @ 09/04/25 16:16:45.15
  I0904 16:16:45.150301 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename pods @ 09/04/25 16:16:45.15
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 16:16:45.163
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 16:16:45.165
  STEP: Create set of pods @ 09/04/25 16:16:45.167
  I0904 16:16:45.177655 23 pods.go:874] created test-pod-1
  I0904 16:16:45.186049 23 pods.go:874] created test-pod-2
  I0904 16:16:45.194238 23 pods.go:874] created test-pod-3
  STEP: waiting for all 3 pods to be running @ 09/04/25 16:16:45.194
  E0904 16:16:45.640347      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:16:46.627948      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: waiting for all pods to be deleted @ 09/04/25 16:16:47.227
  I0904 16:16:47.230937 23 pods.go:1139] Pod quantity 3 is different from expected quantity 0
  E0904 16:16:47.628171      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:16:48.233936 23 pods.go:1139] Pod quantity 2 is different from expected quantity 0
  E0904 16:16:48.628401      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:16:49.233959 23 pods.go:1139] Pod quantity 2 is different from expected quantity 0
  E0904 16:16:49.628433      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:16:50.262694 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-755" for this suite. @ 09/04/25 16:16:50.266
• [5.120 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 09/04/25 16:16:50.271
  I0904 16:16:50.271640 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename cronjob @ 09/04/25 16:16:50.272
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 16:16:50.285
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 16:16:50.287
  STEP: Creating a suspended cronjob @ 09/04/25 16:16:50.29
  STEP: Ensuring no jobs are scheduled @ 09/04/25 16:16:50.296
  E0904 16:16:50.629227      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:16:51.630054      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:16:52.630803      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:16:53.631022      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:16:54.631888      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:16:55.632101      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:16:56.632730      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:16:57.632777      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:16:58.633811      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:16:59.634020      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:17:00.634201      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:17:01.634976      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:17:02.635519      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:17:03.635631      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:17:04.636403      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:17:05.636796      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:17:06.637806      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:17:07.637945      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:17:08.638678      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:17:09.638888      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:17:10.639613      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:17:11.640013      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:17:12.640849      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:17:13.640926      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:17:14.641447      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:17:15.641625      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:17:16.641792      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:17:17.641920      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:17:18.642519      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:17:19.642733      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:17:20.643425      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:17:21.644002      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:17:22.644836      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:17:23.645021      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:17:24.646075      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:17:25.646170      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:17:26.646467      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:17:27.646815      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:17:28.647666      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:17:29.647803      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:17:30.648815      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:17:31.648913      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:17:32.649734      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:17:33.649907      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:17:34.650706      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:17:35.650924      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:17:36.650979      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:17:37.651206      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:17:38.651753      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:17:39.651894      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:17:40.652037      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:17:41.652158      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:17:42.652786      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:17:43.652958      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:17:44.653416      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:17:45.654076      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:17:46.654996      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:17:47.655794      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:17:48.656275      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:17:49.656814      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:17:50.657737      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:17:51.657947      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:17:52.658814      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:17:53.658928      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:17:54.660024      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:17:55.660142      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:17:56.660471      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:17:57.660609      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:17:58.661249      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:17:59.661370      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:18:00.661523      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:18:01.662012      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:18:02.662287      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:18:03.662351      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:18:04.662518      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:18:05.662719      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:18:06.663608      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:18:07.663727      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:18:08.664330      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:18:09.664871      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:18:10.665246      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:18:11.665975      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:18:12.666781      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:18:13.666889      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:18:14.667456      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:18:15.667555      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:18:16.667954      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:18:17.668128      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:18:18.668276      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:18:19.668466      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:18:20.669070      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:18:21.670013      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:18:22.671018      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:18:23.671201      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:18:24.671942      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:18:25.672104      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:18:26.672258      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:18:27.672456      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:18:28.673015      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:18:29.673218      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:18:30.673322      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:18:31.674033      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:18:32.674091      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:18:33.674869      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:18:34.674907      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:18:35.675788      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:18:36.676389      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:18:37.676481      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:18:38.676781      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:18:39.677790      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:18:40.677866      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:18:41.677960      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:18:42.678640      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:18:43.678863      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:18:44.679396      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:18:45.679532      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:18:46.680158      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:18:47.680378      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:18:48.680540      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:18:49.680739      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:18:50.681240      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:18:51.682046      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:18:52.682375      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:18:53.682567      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:18:54.682658      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:18:55.682853      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:18:56.683030      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:18:57.683216      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:18:58.683792      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:18:59.684822      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:19:00.685853      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:19:01.685952      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:19:02.686765      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:19:03.687782      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:19:04.688681      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:19:05.688781      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:19:06.689490      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:19:07.689660      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:19:08.690386      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:19:09.690575      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:19:10.691095      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:19:11.692017      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:19:12.692730      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:19:13.692838      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:19:14.693284      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:19:15.693792      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:19:16.694062      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:19:17.694171      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:19:18.694575      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:19:19.694706      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:19:20.695751      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:19:21.695917      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:19:22.696152      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:19:23.696787      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:19:24.697750      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:19:25.697965      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:19:26.698151      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:19:27.698787      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:19:28.699229      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:19:29.699413      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:19:30.699892      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:19:31.700036      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:19:32.700991      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:19:33.701172      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:19:34.701981      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:19:35.702163      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:19:36.702377      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:19:37.702531      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:19:38.703035      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:19:39.703222      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:19:40.703702      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:19:41.703820      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:19:42.704343      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:19:43.704467      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:19:44.704494      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:19:45.704805      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:19:46.704906      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:19:47.704996      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:19:48.705780      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:19:49.705911      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:19:50.705988      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:19:51.706810      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:19:52.706929      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:19:53.707035      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:19:54.707145      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:19:55.707261      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:19:56.707323      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:19:57.707480      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:19:58.707726      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:19:59.707753      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:20:00.707839      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:20:01.707932      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:20:02.708277      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:20:03.708209      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:20:04.708785      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:20:05.709200      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:20:06.710071      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:20:07.710789      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:20:08.710925      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:20:09.711059      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:20:10.711247      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:20:11.712045      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:20:12.712176      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:20:13.712300      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:20:14.712502      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:20:15.712679      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:20:16.713117      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:20:17.713633      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:20:18.713865      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:20:19.713996      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:20:20.714070      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:20:21.714778      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:20:22.715791      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:20:23.715886      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:20:24.716790      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:20:25.717043      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:20:26.718093      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:20:27.718670      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:20:28.718729      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:20:29.719135      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:20:30.719325      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:20:31.720050      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:20:32.720239      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:20:33.720879      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:20:34.721058      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:20:35.722134      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:20:36.722248      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:20:37.722378      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:20:38.722616      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:20:39.722728      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:20:40.722919      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:20:41.722982      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:20:42.723090      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:20:43.723449      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:20:44.724229      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:20:45.724502      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:20:46.725024      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:20:47.725120      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:20:48.725795      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:20:49.726782      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:20:50.727781      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:20:51.727964      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:20:52.728184      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:20:53.728284      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:20:54.728485      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:20:55.728670      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:20:56.728734      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:20:57.729188      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:20:58.729367      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:20:59.729512      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:21:00.729715      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:21:01.730093      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:21:02.730190      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:21:03.730311      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:21:04.730517      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:21:05.730706      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:21:06.730816      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:21:07.730940      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:21:08.731128      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:21:09.731229      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:21:10.731419      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:21:11.731981      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:21:12.732077      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:21:13.732209      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:21:14.732403      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:21:15.732725      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:21:16.732857      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:21:17.732953      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:21:18.733135      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:21:19.733776      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:21:20.734524      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:21:21.734912      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:21:22.735791      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:21:23.735886      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:21:24.736788      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:21:25.736899      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:21:26.737092      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:21:27.737174      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:21:28.737832      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:21:29.738779      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:21:30.738949      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:21:31.739017      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:21:32.739204      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:21:33.739362      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:21:34.739548      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:21:35.739699      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:21:36.740670      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:21:37.741575      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:21:38.741778      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:21:39.742494      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:21:40.742725      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:21:41.742823      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:21:42.743009      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:21:43.743148      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:21:44.743202      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:21:45.743312      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:21:46.744079      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:21:47.744186      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:21:48.744858      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:21:49.745796      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Ensuring no job exists by listing jobs explicitly @ 09/04/25 16:21:50.297
  STEP: Removing cronjob @ 09/04/25 16:21:50.304
  I0904 16:21:50.311439 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-7012" for this suite. @ 09/04/25 16:21:50.316
• [300.050 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:132
  STEP: Creating a kubernetes client @ 09/04/25 16:21:50.322
  I0904 16:21:50.322098 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename replicaset @ 09/04/25 16:21:50.322
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 16:21:50.332
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 16:21:50.334
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 09/04/25 16:21:50.336
  E0904 16:21:50.746412      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:21:51.746799      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: When a replicaset with a matching selector is created @ 09/04/25 16:21:52.356
  STEP: Then the orphan pod is adopted @ 09/04/25 16:21:52.362
  E0904 16:21:52.746968      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: When the matched label of one of its pods change @ 09/04/25 16:21:53.371
  I0904 16:21:53.377477 23 resource.go:64] Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 09/04/25 16:21:53.386
  E0904 16:21:53.747370      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:21:54.401849 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-632" for this suite. @ 09/04/25 16:21:54.404
• [4.089 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:62
  STEP: Creating a kubernetes client @ 09/04/25 16:21:54.411
  I0904 16:21:54.411685 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename limitrange @ 09/04/25 16:21:54.412
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 16:21:54.424
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 16:21:54.426
  STEP: Creating a LimitRange @ 09/04/25 16:21:54.428
  STEP: Setting up watch @ 09/04/25 16:21:54.428
  STEP: Submitting a LimitRange @ 09/04/25 16:21:54.532
  STEP: Verifying LimitRange creation was observed @ 09/04/25 16:21:54.536
  STEP: Fetching the LimitRange to ensure it has proper values @ 09/04/25 16:21:54.536
  I0904 16:21:54.540992 23 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I0904 16:21:54.541015 23 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 09/04/25 16:21:54.541
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 09/04/25 16:21:54.546
  I0904 16:21:54.549717 23 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I0904 16:21:54.549735 23 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 09/04/25 16:21:54.549
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 09/04/25 16:21:54.561
  I0904 16:21:54.569148 23 limit_range.go:355] Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  I0904 16:21:54.569168 23 limit_range.go:360] Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 09/04/25 16:21:54.569
  STEP: Failing to create a Pod with more than max resources @ 09/04/25 16:21:54.57
  STEP: Updating a LimitRange @ 09/04/25 16:21:54.572
  STEP: Verifying LimitRange updating is effective @ 09/04/25 16:21:54.575
  E0904 16:21:54.748144      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:21:55.748361      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Creating a Pod with less than former min resources @ 09/04/25 16:21:56.58
  STEP: Failing to create a Pod with more than max resources @ 09/04/25 16:21:56.589
  STEP: Deleting a LimitRange @ 09/04/25 16:21:56.591
  STEP: Verifying the LimitRange was deleted @ 09/04/25 16:21:56.601
  E0904 16:21:56.748899      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:21:57.749110      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:21:58.749239      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:21:59.749335      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:22:00.749456      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:22:01.606489 23 limit_range.go:211] limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 09/04/25 16:22:01.606
  I0904 16:22:01.613025 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-1573" for this suite. @ 09/04/25 16:22:01.616
• [7.214 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0 [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1868
  STEP: Creating a kubernetes client @ 09/04/25 16:22:01.625
  I0904 16:22:01.625612 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename kubectl @ 09/04/25 16:22:01.626
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 16:22:01.639
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 16:22:01.641
  STEP: starting the proxy server @ 09/04/25 16:22:01.642
  I0904 16:22:01.643037 23 util.go:542] Asynchronously running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4062874685 --namespace=kubectl-7859 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 09/04/25 16:22:01.668
  I0904 16:22:01.673049 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  I0904 16:22:01.674092 23 kubectl.go:2264] kubectl proxy stderr: W0904 16:22:01.668693    1080 proxy.go:177] Request filter disabled, your proxy is vulnerable to XSRF attacks, please be cautious

  I0904 16:22:01.674092 23 kubectl.go:2259] kubectl proxy stdout: Starting to serve on 127.0.0.1:41199

  STEP: Destroying namespace "kubectl-7859" for this suite. @ 09/04/25 16:22:01.717
• [0.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 09/04/25 16:22:01.725
  I0904 16:22:01.725828 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename csiinlinevolumes @ 09/04/25 16:22:01.726
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 16:22:01.739
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 16:22:01.741
  STEP: Creating two CSIDrivers @ 09/04/25 16:22:01.743
  E0904 16:22:01.749990      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  STEP: Getting "inline-driver-b07e19e6-e31a-40bb-aaa3-213ba3424120" & "inline-driver-d8211a72-b5cf-4266-9656-9f0e63e9d9f9" @ 09/04/25 16:22:01.759
  STEP: Patching the CSIDriver "inline-driver-d8211a72-b5cf-4266-9656-9f0e63e9d9f9" @ 09/04/25 16:22:01.763
  STEP: Updating the CSIDriver "inline-driver-d8211a72-b5cf-4266-9656-9f0e63e9d9f9" @ 09/04/25 16:22:01.772
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-9528" @ 09/04/25 16:22:01.778
  STEP: Deleting CSIDriver "inline-driver-b07e19e6-e31a-40bb-aaa3-213ba3424120" @ 09/04/25 16:22:01.782
  STEP: Confirm deletion of CSIDriver "inline-driver-b07e19e6-e31a-40bb-aaa3-213ba3424120" @ 09/04/25 16:22:01.786
  STEP: Deleting CSIDriver "inline-driver-d8211a72-b5cf-4266-9656-9f0e63e9d9f9" via DeleteCollection @ 09/04/25 16:22:01.79
  STEP: Confirm deletion of CSIDriver "inline-driver-d8211a72-b5cf-4266-9656-9f0e63e9d9f9" @ 09/04/25 16:22:01.798
  I0904 16:22:01.800101 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-9528" for this suite. @ 09/04/25 16:22:01.818
• [0.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:148
  STEP: Creating a kubernetes client @ 09/04/25 16:22:01.825
  I0904 16:22:01.825141 23 util.go:454] >>> kubeConfig: /tmp/kubeconfig-4062874685
  STEP: Building a namespace api object, basename kubelet-test @ 09/04/25 16:22:01.825
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/04/25 16:22:01.835
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/04/25 16:22:01.836
  STEP: Waiting for pod completion @ 09/04/25 16:22:01.851
  E0904 16:22:02.750403      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:22:03.750323      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:22:04.751351      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  E0904 16:22:05.751522      23 retrywatcher.go:169] "Watch failed" err="context canceled"
  I0904 16:22:05.880980 23 helper.go:125] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-2994" for this suite. @ 09/04/25 16:22:05.886
• [4.069 seconds]
------------------------------
SSSSSSSSS
------------------------------
[SynchronizedAfterSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:80
  I0904 16:22:05.894281 23 suites.go:34] Running AfterSuite actions on node 1
  I0904 16:22:05.894324 23 util.go:564] Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
k8s.io/kubernetes/test/e2e/e2e_test.go:157
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
k8s.io/kubernetes/test/e2e/framework/test_context.go:616
[ReportAfterSuite] PASSED [0.087 seconds]
------------------------------

Ran 424 of 7132 Specs in 6249.140 seconds
SUCCESS! -- 424 Passed | 0 Failed | 0 Pending | 6708 Skipped
PASS

Ginkgo ran 1 suite in 1h44m9.971070062s
Test Suite Passed
